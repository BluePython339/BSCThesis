sub_430000
push ebp
push ebx
push edi
push esi
sub esp 0x104
mov eax [ esp + 0x11c ]
mov ecx [ rw-data ]
mov esi [ esp + 0x128 ]
mov ebx [ esp + 0x118 ]
cmp eax 0x2
mov [ esp + 0x100 ] ecx
je r-xdata
mov ebp [ esp + 0x130 ]
push esi
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push esi
call sub_4a7f30
add esp 0x4
mov edi eax
cmp edi 0x1
jg r-xdata
mov edi [ esp + 0x120 ]
cmp eax 0x1
je r-xdata
push 0x13
push ebp
call sub_43194f
add esp 0x8
xor ecx ecx
cmp [ esp + 0x134 ] 0x0
setne cl
cmp eax 0x2
cmovne ecx eax
test ecx ecx
jne r-xdata
push 0x28
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebp esp
push 0x100
push ebp
push edi
call sub_49083d
add esp 0xc
push esi
push ebp
push r--data
test eax eax
jne r-xdata
mov [ esi + edi - 0x2 ] 0x0
jmp r-xdata
push edi
push esi
push 0x1
push ebx
call sub_48d156
add esp 0x10
mov esi eax
test esi esi
je r-xdata
mov ecx [ esp + 0x100 ]
call sub_497c4a
add esp 0x104
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi esp
push 0x100
push esi
push edi
call sub_49083d
add esp 0xc
push edi
call sub_49090b
add esp 0x4
test eax eax
je r-xdata
push esi
push ebx
call sub_4842ab
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push esi
push r--data
call sub_43f758
add esp 0x8
push [ esp + 0x124 ]
push esi
push r--data
jmp r-xdata
call sub_43f758
add esp 0xc
jmp r-xdata
sub_43014e
push ebp
push ebx
push edi
push esi
push eax
mov edi [ esp + 0x24 ]
xor ebp ebp
test edi edi
jle r-xdata
mov eax [ esp + 0x20 ]
sub edi ebp
add eax ebp
push edi
push eax
push [ esp + 0x24 ]
call sub_43ff80
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp + 0x20 ]
mov eax edi
sub eax ebp
lea esi [ ecx + ebp ]
push eax
push 0xa
push esi
call sub_4989c0
add esp 0xc
test eax eax
je r-xdata
mov [ esp ] eax
sub eax esi
push eax
push esi
mov eax [ esp + 0x24 ]
mov edi eax
push edi
call sub_43ff80
add esp 0xc
push edi
call sub_43ff78
add esp 0x4
xor ecx ecx
mov ebx eax
inc ecx
lea eax [ ebx + 0x1 ]
push ecx
push eax
call sub_43f807
add esp 0x8
mov edi eax
push ebx
push edi
push [ esp + 0x24 ]
call sub_4400ae
add esp 0xc
push ebx
push [ esp + 0x20 ]
call sub_44000a
add esp 0x8
mov [ edi + ebx ] 0x0
push edi
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
mov eax [ esp + 0x18 ]
xor edx edx
mov ecx eax
mov eax [ ecx ]
push edx
push ebx
push edx
push edx
push 0x2
push ecx
call [ eax ]
add esp 0x18
push ebx
call sub_43f9d4
add esp 0x4
push edi
mov edi [ esp + 0x28 ]
call sub_43f9d4
add esp 0x4
mov eax [ esp ]
sub ebp esi
lea ebp [ ebp + eax + 0x1 ]
cmp ebp edi
jl r-xdata
sub_43023c
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx rw-data
test eax eax
cmovne ecx eax
xor eax eax
mov [ ecx ] esi
mov [ rw-data ] esi
mov [ esi ] eax
pop esi
pop edi
pop ebx
retn
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push [ rw-data ]
call eax
add esp 0x4
sub_430298
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x8 ]
call [ esi + 0x4 ]
add esp 0x4
mov eax [ esi ]
mov [ rw-data ] eax
push esi
call sub_43f9d4
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x0
sub_4302e0
push ebx
push esi
xor eax eax
dec eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edx [ esp + 0xc ]
cmp [ edx + 0x14 ] 0x1
jne r-xdata
mov edx [ edx + 0x18 ]
mov edx [ edx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov bl [ rw-data ]
xor eax eax
test bl bl
jne r-xdata
push ecx
push edx
call sub_43f9e1
add esp 0x8
mov esi [ rw-data ]
push esi
call sub_4a7f30
add esp 0x4
push eax
push esi
call sub_48f5d3
add esp 0x8
push [ rw-data ]
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
inc eax
sub_43035f
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov esi 0xfffffffe
mov eax esi
mov esi 0x2
test ebp ebp
js r-xdata
mov ecx esi
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
push eax
push ebx
call j_sub_445b82
add esp 0x8
mov [ rw-data ] 0x1
push ebx
call sub_43f79e
add esp 0x4
mov [ rw-data ] eax
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
mov eax esi
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
xor esi esi
test eax eax
je r-xdata
mov eax 0x3
mov [ rw-data ] 0x16
mov [ rw-data ] eax
push eax
push 0x2
mov edi ecx
push edi
call sub_431ee3
add esp 0xc
push [ rw-data ]
push 0x1
push edi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
call sub_485b8e
add esp 0x8
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
call sub_431ee3
add esp 0xc
jmp r-xdata
call sub_4316c2
xor esi esi
mov [ rw-data ] 0x17
inc esi
mov [ rw-data ] esi
push esi
push 0x2
mov edi eax
push edi
call sub_431ee3
add esp 0xc
push [ rw-data ]
push esi
push edi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x2
mov [ rw-data ] 0x201
mov [ rw-data ] eax
push eax
push eax
mov eax [ esp + 0x34 ]
mov edi eax
push edi
call sub_431ee3
add esp 0xc
push [ rw-data ]
push 0x1
push edi
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
js r-xdata
xor eax eax
mov [ rw-data ] eax
push eax
push 0x2
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
xor esi esi
inc esi
jmp r-xdata
or [ rw-data ] 0x1
xor esi esi
inc esi
mov eax 0x4
mov [ rw-data ] eax
push eax
push 0x2
mov eax [ esp + 0x34 ]
mov esi eax
push esi
call sub_431ee3
add esp 0xc
push 0x0
push esi
call sub_431a8c
add esp 0x8
push eax
push 0x39
push esi
call sub_43203b
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push ebx
push 0x34
push [ esp + 0x34 ]
call sub_43203b
add esp 0xc
mov esi 0x2
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push ebx
push 0x9
push [ esp + 0x34 ]
call sub_43203b
add esp 0xc
mov esi 0x2
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push edi
push r--data
test ebp ebp
je r-xdata
test [ rw-data ] 0x3
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push ebx
call sub_43f79e
add esp 0x4
mov [ esp ] eax
push eax
call sub_44017c
add esp 0x4
test eax eax
je r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push ebx
push r--data
call sub_485b8e
add esp 0x8
push [ esp ]
call sub_43f9d4
jmp r-xdata
push r--data
mov esi [ esp + 0x4 ]
push esi
push 0xad
push [ esp + 0x38 ]
call sub_4320b6
add esp 0x10
push esi
call sub_43f9d4
add esp 0x4
mov esi 0x2
jmp r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
add esp 0x4
jmp r-xdata
mov ebp r--data
push ebx
push r--data
call sub_43f758
add esp 0x8
mov [ esp ] eax
movsx eax [ edi + 0x1 ]
mov [ esp ] eax
push 0x3a
push ebx
call sub_43f67d
add esp 0x8
test eax eax
je r-xdata
test [ rw-data ] 0x3
je r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push [ esp ]
push r--data
jmp r-xdata
mov ebx eax
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ebp eax
lea eax [ ebx + 0x1 ]
push 0x3a
push eax
call sub_43f67d
add esp 0x8
mov ecx eax
mov eax ebx
test ecx ecx
mov ebx ecx
jne r-xdata
test ebp ebp
je r-xdata
push 0x3a
push ebx
call sub_43f67d
add esp 0x8
test eax eax
je r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x2
jne r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ebx [ esp + 0x24 ]
mov eax ebp
sub eax ebx
push ebx
push eax
push [ esp + 0x8 ]
push r--data
call sub_43f758
add esp 0x10
mov [ esp ] eax
inc ebp
jmp r-xdata
push r--data
call sub_485b8e
jmp r-xdata
mov esi eax
sub eax ebx
push ebx
push eax
push r--data
call sub_43f758
add esp 0xc
mov [ esp ] eax
push eax
push 0x2e
mov eax [ esp + 0x34 ]
push eax
call sub_43203b
add esp 0xc
inc esi
push esi
call sub_4a65cf
add esp 0x4
push eax
push 0x2f
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
push [ esp ]
call sub_43f9d4
add esp 0x4
mov esi 0x2
jmp r-xdata
push r--data
push ebx
call sub_4a6bb0
add esp 0x8
test eax eax
mov [ esp ] eax
je r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
test [ rw-data ] 0x2
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
push ebp
call sub_43f79e
add esp 0x4
mov esi eax
push esi
mov ebp [ esp + 0x4 ]
push ebp
push 0x9b
push [ esp + 0x38 ]
call sub_4320b6
add esp 0x10
push ebp
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov ebp [ esp + 0x28 ]
mov esi 0x2
jmp r-xdata
push [ esp + 0x24 ]
push r--data
jmp r-xdata
xor ebx ebx
xor esi esi
xor ebp ebp
push ebx
call sub_4a65cf
add esp 0x4
push eax
push 0x1
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
mov esi 0x2
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x1
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
xor ecx ecx
lea eax [ esi + 0x1 ]
cmp edx 0xffffffff
je r-xdata
lea eax [ esi + 0x200 ]
push 0x1
mov ebp eax
push eax
push ebx
mov ebx edx
call sub_43f8db
mov edx ebx
add esp 0xc
mov ebx eax
push 0x2
push [ esp + 0x30 ]
call sub_43194f
add esp 0x8
cmp eax 0x3
jne r-xdata
mov ecx edi
mov edx ebx
push 0x1
jmp r-xdata
push 0x1
push 0x1c
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov [ ebx + esi ] cl
mov esi eax
jne r-xdata
mov cl dl
push r--data
call sub_485b8e
add esp 0x4
push ebx
call sub_43f79e
add esp 0x4
mov [ rw-data ] eax
push ebx
call sub_4a7f30
add esp 0x4
push eax
push ebx
call sub_48f5d3
add esp 0x8
jmp r-xdata
test [ rw-data ] 0x2
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
push [ esp ]
call sub_4a691d
add esp 0x4
mov edx eax
cmp esi ebp
jl r-xdata
push [ esp ]
call sub_4a666f
add esp 0x4
push ebx
push 0x14
mov eax [ esp + 0x34 ]
mov esi eax
push esi
call sub_43203b
add esp 0xc
push r--data
push 0x15
push esi
call sub_43203b
add esp 0xc
push 0x1
push 0x16
push esi
call sub_431ee3
add esp 0xc
push ebx
call sub_43f9d4
add esp 0x4
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x28 ]
mov esi 0x2
jmp r-xdata
mov ebp [ esp + 0x28 ]
mov esi 0x2
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x1c
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
mov ebp [ esp + 0x28 ]
xor esi esi
inc esi
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x1
push 0x1d
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x1d
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x1
push 0x95
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x95
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x16
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x1
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x3
je r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x1
push 0x16
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x1
jmp r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x2
jne r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x1
push 0x2d
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x1
push 0x17
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x21
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
push 0x3
push 0x21
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test [ rw-data ] 0x2
jne r-xdata
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
push 0x1
push 0x3
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
mov ecx edi
mov edx ebx
push 0x1
jmp r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
push ebx
call sub_48f4af
add esp 0x4
mov esi eax
push esi
push 0x20
push [ esp + 0x34 ]
call sub_43223e
add esp 0xc
push esi
call sub_48f52d
add esp 0x4
mov esi 0x2
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x2
push 0x3
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
xor esi esi
inc esi
mov ecx edi
mov edx ebx
push 0x1
jmp r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test [ rw-data ] 0x3
je r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push edi
push r--data
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x2
push [ esp + 0x30 ]
call sub_43194f
add esp 0x8
cmp eax 0x4
je r-xdata
mov ecx edi
mov edx ebx
push 0x1
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x0
mov esi 0x2
je r-xdata
push r--data
call sub_485b8e
add esp 0x4
push ebx
call sub_48f4af
add esp 0x4
mov esi eax
push esi
push 0x77
mov eax [ esp + 0x34 ]
push eax
call sub_43223e
add esp 0xc
push 0x2
push 0x78
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
push esi
call sub_48f52d
add esp 0x4
mov esi 0x2
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
mov esi 0x2
test ebp ebp
js r-xdata
xor esi esi
inc esi
test ebp ebp
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov [ esp ] ebx
push ebx
call sub_48f4af
add esp 0x4
mov esi eax
push esi
push 0x77
mov eax [ esp + 0x34 ]
push eax
call sub_43223e
add esp 0xc
push r--data
push edi
call sub_4a7d00
add esp 0x8
cmp eax 0x1
mov ecx 0x4
sbb ecx 0x0
push ecx
push 0x78
push [ esp + 0x34 ]
call sub_431ee3
add esp 0xc
push esi
call sub_48f52d
add esp 0x4
mov esi 0x2
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
test [ rw-data ] 0x2
jne r-xdata
call sub_493604
mov [ rw-data ] 0x1
jmp r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x8 ] 0x0
push [ esp ]
call sub_4a7f30
add esp 0x4
mov [ esp + 0x4 ] eax
mov ecx eax
sub ecx [ esp ]
mov [ esp + 0x4 ] ecx
mov [ eax ] 0x0
xor eax eax
inc eax
mov [ esp + 0x8 ] eax
jmp r-xdata
push edi
push r--data
jmp r-xdata
test ebp ebp
je r-xdata
push 0x3
push r--data
push [ esp + 0x8 ]
call sub_4a7fc0
add esp 0xc
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
cmp [ esp + 0x4 ] 0x3
je r-xdata
push 0x5
push 0xd
mov eax [ esp + 0x34 ]
mov esi eax
push esi
call sub_431ee3
add esp 0xc
push ebx
push 0x12
push esi
call sub_43203b
add esp 0xc
mov esi 0x2
jmp r-xdata
mov ecx edi
mov edx ebx
push 0x0
jmp r-xdata
push 0x3
push 0x3c
push [ esp + 0x34 ]
jmp r-xdata
push [ esp ]
call sub_4a65cf
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp ]
movsx eax [ eax ]
cmp eax 0x4d
jg r-xdata
call sub_431ee3
add esp 0xc
push [ esp ]
push r--data
push eax
push 0x3a
push [ esp + 0x34 ]
jmp r-xdata
cmp eax 0x64
jg r-xdata
lea ecx [ eax - 0x35 ]
cmp ecx 0x5
jae r-xdata
push 0x2c
push [ esp + 0x4 ]
call sub_49ae50
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ esp ]
add ecx [ esp + 0x4 ]
cmp [ eax + ecx ] 0x0
lea eax [ eax + ecx ]
mov [ esp ] eax
jne r-xdata
lea ecx [ eax - 0x6d ]
cmp ecx 0x6
ja r-xdata
cmp eax 0x4e
je r-xdata
lea ecx [ eax - 0x31 ]
cmp ecx 0x2
jae r-xdata
add eax 0xffffffd0
push eax
push 0x3b
push [ esp + 0x34 ]
jmp r-xdata
cmp eax 0x65
jne r-xdata
jmp [ ecx * 4 + jump_table_4023a8 ]
push 0x0
push 0x3e
push [ esp + 0x34 ]
jmp r-xdata
cmp eax 0x52
je r-xdata
cmp eax 0x44
jne r-xdata
lea eax [ eax + eax - 0x60 ]
push eax
push 0x3c
push [ esp + 0x34 ]
jmp r-xdata
push eax
push r--data
jmp r-xdata
push 0x2
push 0x3d
push [ esp + 0x34 ]
jmp r-xdata
push 0x3
push 0x3d
push [ esp + 0x34 ]
jmp r-xdata
push 0x2
push 0x3e
push [ esp + 0x34 ]
jmp r-xdata
cmp eax 0x58
jne r-xdata
push 0x3
push 0x3e
push [ esp + 0x34 ]
jmp r-xdata
call sub_485b8e
add esp 0x8
jmp r-xdata
push 0x1
push 0x3e
push [ esp + 0x34 ]
jmp r-xdata
sub_4316c2
push ebx
push edi
push esi
mov edi ecx
mov ecx [ esp + 0x10 ]
mov esi edx
shl ecx 0x2
lea ebx [ ecx + ecx * 2 + rw-data ]
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x8 ]
jl r-xdata
push edi
call sub_43f79e
add esp 0x4
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov [ ecx + edx * 8 ] eax
push esi
call sub_43f79e
add esp 0x4
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov [ ecx + edx * 8 + 0x4 ] eax
inc edx
mov [ ebx + 0x4 ] edx
pop esi
pop edi
pop ebx
retn
lea ecx [ ecx + ecx * 2 + rw-data ]
add eax 0x20
mov [ ecx ] eax
push 0x8
push eax
push [ ebx ]
call sub_43f8db
add esp 0xc
mov [ ebx ] eax
sub_431725
push ebp
push ebx
push edi
push esi
push eax
mov edi [ esp + 0x18 ]
xor eax eax
mov eax [ esp ]
mov [ ebx ] 0x0
inc eax
cmp eax 0x2
jne r-xdata
lea ebp [ eax * 4 + rw-data ]
xor esi esi
mov [ esp ] eax
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ ebx ] 0x0
jle r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ ebp ]
push edi
push 0x0
push [ eax + esi * 8 + 0x4 ]
push [ eax + esi * 8 ]
call sub_43035f
add esp 0x10
mov eax [ ebp ]
push [ eax + esi * 8 ]
call sub_43f9d4
add esp 0x4
mov eax [ ebp ]
push [ eax + esi * 8 + 0x4 ]
call sub_43f9d4
add esp 0x4
inc esi
cmp esi [ ebx ]
jl r-xdata
sub_43179c
push esi
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push sub_4317be
call sub_47dc24
add esp 0x4
mov [ esi ] eax
mov eax esi
pop esi
retn
sub_4317be
push edi
push esi
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov eax [ ecx ]
mov edi [ edx ]
cmp eax edi
jge r-xdata
cmp eax edi
jle r-xdata
mov eax esi
jmp r-xdata
mov edi [ eax * 4 + r--data ]
cmp edi 0x2
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
push [ edx + 0x4 ]
push [ ecx + 0x4 ]
call sub_4a7d00
add esp 0x8
xor eax eax
cmp edi 0x1
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ ecx + 0x4 ] eax
mov eax esi
jl r-xdata
setg al
movzx eax al
jmp r-xdata
sub_431832
push esi
mov esi ecx
push 0x0
push [ esi ]
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
mov ecx eax
call sub_4321e2
push 0x0
push [ esi ]
pop esi
retn
sub_431854
push ebp
push ebx
push edi
push esi
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
call sub_431832
push 0x0
mov esi edi
push [ edi ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebp ebp
inc ebp
push [ edi + 0x4 ]
call sub_43f79e
add esp 0x4
cmp eax 0x1
jne r-xdata
push ebx
mov eax [ esp + 0x18 ]
push [ eax ]
call sub_47dcb3
add esp 0x8
push ebp
push [ esi ]
call sub_47e33c
add esp 0x8
mov edi eax
inc ebp
test edi edi
jne r-xdata
jmp [ eax * 4 + jump_table_402ba4 ]
mov eax [ edi ]
mov eax [ eax * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
mov eax [ edi + 0x4 ]
jmp r-xdata
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
mov eax [ edi ]
mov [ ebx ] eax
mov eax [ eax * 4 + r--data ]
cmp eax 0x2
je r-xdata
mov eax [ edi + 0x8 ]
jmp r-xdata
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
sub_4318d1
push [ edi + 0x8 ]
call sub_43f79e
jmp r-xdata
add esp 0x4
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
mov eax [ edi ]
mov [ ebx ] eax
mov eax [ eax * 4 + r--data ]
cmp eax 0x2
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push [ edi + 0x4 ]
call sub_43f79e
add esp 0x4
cmp eax 0x1
jne r-xdata
push ebx
mov eax [ esp + 0x18 ]
push [ eax ]
call sub_47dcb3
add esp 0x8
push ebp
push [ esi ]
call sub_47e33c
add esp 0x8
mov edi eax
inc ebp
test edi edi
jne r-xdata
jmp [ eax * 4 + jump_table_402ba4 ]
mov eax [ edi ]
mov eax [ eax * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
mov eax [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
jmp r-xdata
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
sub_43191d
push edi
push esi
mov edi [ esp + 0xc ]
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push sub_4317be
call sub_47dc24
add esp 0x4
mov [ esi ] eax
push edi
push esi
call sub_431854
add esp 0x8
mov eax esi
pop esi
pop edi
retn
sub_43194f
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x1c ]
mov eax [ rw-data ]
cmp [ esi * 4 + r--data ] 0x0
mov [ esp + 0x8 ] eax
je r-xdata
mov edi [ esp + 0x18 ]
cmp [ esi * 4 + r--data ] 0x1
je r-xdata
push 0x108
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esp
mov [ eax ] esi
push 0x0
push eax
push [ edi ]
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
push 0x109
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esi + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
retn
push 0x10c
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_4319e9
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x20 ]
mov eax [ rw-data ]
cmp [ esi * 4 + r--data ] 0x1
mov [ esp + 0x8 ] eax
je r-xdata
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
cmp [ esi * 4 + r--data ] 0x1
je r-xdata
push 0x115
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
push 0x0
push eax
push [ edi ]
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
push 0x116
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esi + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
retn
push 0x11a
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_431a8c
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x1c ]
mov eax [ rw-data ]
cmp [ esi * 4 + r--data ] 0x0
mov [ esp + 0x8 ] eax
je r-xdata
mov edi [ esp + 0x18 ]
cmp [ esi * 4 + r--data ] 0x2
je r-xdata
push 0x123
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esp
mov [ eax ] esi
push 0x0
push eax
push [ edi ]
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
push 0x124
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esi + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
retn
push 0x127
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_431b26
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x20 ]
mov eax [ rw-data ]
cmp [ esi * 4 + r--data ] 0x2
mov [ esp + 0x8 ] eax
je r-xdata
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
cmp [ esi * 4 + r--data ] 0x2
je r-xdata
push 0x130
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
push 0x0
push eax
push [ edi ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
push 0x131
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor esi esi
mov esi [ eax + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
retn
sub_431bb4
push esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_431b26
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x13b
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_431bea
push edi
push esi
sub esp 0xc
mov edi [ esp + 0x1c ]
mov eax [ rw-data ]
cmp [ edi * 4 + r--data ] 0x2
mov [ esp + 0x8 ] eax
je r-xdata
mov esi [ esp + 0x20 ]
cmp [ edi * 4 + r--data ] 0x2
je r-xdata
push 0x145
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esp + 0x18 ]
mov ecx esp
test esi esi
mov [ esp ] edi
je r-xdata
push 0x146
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edx 0x4
mov [ ecx + 0x4 ] r--data
push edx
push sub_431c9f
push ecx
push [ eax ]
mov [ ecx + 0x4 ] esi
push 0x3
push 0x0
push ecx
push [ eax ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
retn
cmp [ eax ] edi
jne r-xdata
call sub_47e526
add esp 0x10
xor esi esi
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ eax + 0x4 ]
mov [ ecx ] edx
mov esi [ eax + 0x8 ]
sub_431c9f
push edi
push esi
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov eax [ ecx ]
mov edi [ edx ]
cmp eax edi
jge r-xdata
cmp eax edi
jle r-xdata
mov eax esi
jmp r-xdata
mov edi [ eax * 4 + r--data ]
cmp edi 0x2
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
push [ edx + 0x4 ]
push [ ecx + 0x4 ]
call sub_4a7d00
add esp 0x8
xor eax eax
cmp edi 0x1
jne r-xdata
mov eax [ edx + 0x4 ]
cmp [ ecx + 0x4 ] eax
mov eax esi
jl r-xdata
setg al
movzx eax al
jmp r-xdata
sub_431cf7
push ebx
push edi
push esi
sub esp 0x10
mov edi [ esp + 0x24 ]
mov eax [ rw-data ]
cmp [ edi * 4 + r--data ] 0x2
mov [ esp + 0xc ] eax
je r-xdata
mov ebx [ esp + 0x20 ]
cmp [ edi * 4 + r--data ] 0x2
je r-xdata
push 0x15b
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ esp + 0x4 ]
mov ecx esp
mov edx 0x4
mov [ eax ] edi
mov [ eax + 0x4 ] r--data
push ecx
push edx
push sub_431c9f
push eax
push [ ebx ]
call sub_47e3cc
add esp 0x14
xor esi esi
test eax eax
je r-xdata
push 0x15c
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
retn
cmp [ eax ] edi
jne r-xdata
mov eax [ esp + 0x28 ]
add eax [ esp ]
push eax
push [ ebx ]
call sub_47e33c
add esp 0x8
test eax eax
je r-xdata
cmp [ eax ] edi
jne r-xdata
mov esi [ eax + 0x4 ]
sub_431daf
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x1c ]
mov eax [ rw-data ]
cmp [ esi * 4 + r--data ] 0x0
mov [ esp + 0x8 ] eax
je r-xdata
mov edi [ esp + 0x18 ]
cmp [ esi * 4 + r--data ] 0x3
je r-xdata
push 0x16e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esp
mov [ eax ] esi
push 0x0
push eax
push [ edi ]
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
push 0x16f
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esi + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
retn
push 0x172
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_431e49
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x1c ]
mov eax [ rw-data ]
cmp [ esi * 4 + r--data ] 0x0
mov [ esp + 0x8 ] eax
je r-xdata
mov edi [ esp + 0x18 ]
cmp [ esi * 4 + r--data ] 0x4
je r-xdata
push 0x17b
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esp
mov [ eax ] esi
push 0x0
push eax
push [ edi ]
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
push 0x17c
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esi + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
retn
push 0x17f
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_431ee3
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
cmp [ ebp * 4 + r--data ] 0x0
mov edi eax
je r-xdata
cmp [ ebp * 4 + r--data ] 0x1
je r-xdata
push 0x187
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ edi ] ebp
mov [ edi + 0x8 ] ebx
mov ecx esi
mov edx edi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_431f55
push 0x188
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_431f55
push ebx
push edi
push esi
mov esi edx
mov edi ecx
push esi
push [ edi ]
call sub_47dcb3
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop edi
pop ebx
retn
cmp ebx esi
je r-xdata
push ebx
push [ edi ]
call sub_47eb51
add esp 0x8
mov ecx ebx
call sub_4321e2
push esi
push [ edi ]
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
push 0xe6
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_431fad
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x28 ]
xor ebp ebp
inc ebp
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x24 ]
mov [ esp ] eax
mov ebx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
push 0xc
push ebp
call sub_43f807
add esp 0x8
cmp [ ebx * 4 + r--data ] ebp
mov edi eax
je r-xdata
cmp [ ebx * 4 + r--data ] 0x1
je r-xdata
push 0x192
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ edi ] ebx
mov ecx esi
mov edx edi
mov eax [ esp ]
mov [ edi + 0x4 ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x8 ] eax
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_431f55
push 0x193
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_43203b
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
cmp [ ebp * 4 + r--data ] 0x0
mov edi eax
je r-xdata
cmp [ ebp * 4 + r--data ] 0x2
je r-xdata
push 0x19e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ edi ] ebp
push ebx
call sub_43f79e
add esp 0x4
mov [ edi + 0x8 ] eax
mov ecx esi
mov edx edi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_431f55
push 0x19f
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_4320b6
push ebp
push ebx
push edi
push esi
push eax
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp ] eax
push 0xc
push 0x1
call sub_43f807
add esp 0x8
cmp [ esi * 4 + r--data ] 0x2
mov edi eax
je r-xdata
cmp [ esi * 4 + r--data ] 0x2
je r-xdata
push 0x1aa
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ edi ] esi
push ebp
call sub_43f79e
add esp 0x4
mov [ edi + 0x4 ] eax
push ebx
call sub_43f79e
add esp 0x4
mov [ edi + 0x8 ] eax
mov edx edi
mov ecx [ esp ]
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
jmp sub_431f55
push 0x1ab
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_432149
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x20 ]
mov eax [ rw-data ]
cmp [ esi * 4 + r--data ] 0x2
mov [ esp + 0x8 ] eax
je r-xdata
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
cmp [ esi * 4 + r--data ] 0x2
je r-xdata
push 0x1b7
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
push 0x0
push eax
push [ edi ]
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
je r-xdata
push 0x1b8
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
push esi
push [ edi ]
call sub_47eb51
add esp 0x8
mov ecx esi
call sub_4321e2
sub_4321e2
push esi
mov esi ecx
mov eax [ esi ]
cmp [ eax * 4 + r--data ] 0x2
jne r-xdata
mov eax [ eax * 4 + r--data ]
cmp eax 0x4
je r-xdata
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
push [ esi + 0x8 ]
call sub_48f52d
jmp r-xdata
cmp eax 0x3
je r-xdata
add esp 0x4
push [ esi + 0x8 ]
call sub_48f52d
cmp eax 0x2
jne r-xdata
push esi
call sub_43f9d4
add esp 0x4
pop esi
retn
push [ esi + 0x8 ]
call sub_43f9d4
jmp r-xdata
sub_43223e
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
cmp [ ebp * 4 + r--data ] 0x0
mov edi eax
je r-xdata
cmp [ ebp * 4 + r--data ] 0x3
je r-xdata
push 0x1c6
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ edi ] ebp
push ebx
call sub_48f4d3
add esp 0x4
mov [ edi + 0x8 ] eax
mov ecx esi
mov edx edi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_431f55
push 0x1c7
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_4322b9
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
cmp [ ebp * 4 + r--data ] 0x0
mov edi eax
je r-xdata
cmp [ ebp * 4 + r--data ] 0x4
je r-xdata
push 0x1d1
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ edi ] ebp
push ebx
call sub_48f956
add esp 0x4
mov [ edi + 0x8 ] eax
mov ecx esi
mov edx edi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_431f55
push 0x1d2
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_432334
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x18 ]
push 0x0
push [ eax ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
je r-xdata
mov ebx 0x4
xor esi esi
xor ebp ebp
mov ebx 0x4
inc ebp
push [ edi + 0x4 ]
call sub_4a7f30
add esp 0x4
lea ebx [ ebx + eax + 0x1 ]
cmp eax 0x1
jne r-xdata
mov ebp [ esp ]
jmp r-xdata
mov ebp [ esp ]
jmp [ eax * 4 + jump_table_402bb4 ]
mov eax [ ebp * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
add esi 0x8
mov ebx esi
jmp r-xdata
mov esi ebx
push ebp
mov eax [ esp + 0x1c ]
push [ eax ]
call sub_47e33c
add esp 0x8
mov edi eax
inc ebp
lea ebx [ esi + 0x4 ]
test edi edi
jne r-xdata
add ebx 0x4
jmp r-xdata
mov [ esp ] ebp
mov ebp [ edi ]
mov eax [ ebp * 4 + r--data ]
cmp eax 0x2
je r-xdata
jmp r-xdata
mov eax ebx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4323bb
push 0x0
push [ edi + 0x8 ]
call sub_48f540
jmp r-xdata
add esp 0x8
add ebx eax
mov [ esp ] ebp
mov ebp [ edi ]
mov eax [ ebp * 4 + r--data ]
cmp eax 0x2
je r-xdata
jmp r-xdata
push [ edi + 0x4 ]
call sub_4a7f30
add esp 0x4
lea ebx [ ebx + eax + 0x1 ]
cmp eax 0x1
jne r-xdata
mov eax ebx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp [ esp ]
jmp r-xdata
mov ebp [ esp ]
jmp [ eax * 4 + jump_table_402bb4 ]
mov eax [ ebp * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
add esi 0x8
mov ebx esi
jmp r-xdata
mov esi ebx
push ebp
mov eax [ esp + 0x1c ]
push [ eax ]
call sub_47e33c
add esp 0x8
mov edi eax
inc ebp
lea ebx [ esi + 0x4 ]
test edi edi
jne r-xdata
add ebx 0x4
jmp r-xdata
sub_432406
push ebp
push ebx
push edi
push esi
push eax
mov edi [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push 0x0
push [ eax ]
call sub_47e33c
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov ebx edi
xor ebp ebp
inc ebp
mov eax [ esi + 0x4 ]
mov [ esp ] eax
push eax
call sub_4a7f30
add esp 0x4
mov edi eax
push edi
push [ esp + 0x4 ]
push ebx
call sub_49a1f0
add esp 0xc
lea ebx [ ebx + edi + 0x1 ]
mov [ ebx - 0x1 ] 0x0
cmp eax 0x1
jne r-xdata
push ebp
mov eax [ esp + 0x1c ]
push [ eax ]
call sub_47e33c
add esp 0x8
mov esi eax
inc ebp
mov edi ebx
test esi esi
jne r-xdata
jmp [ eax * 4 + jump_table_402bc4 ]
mov eax [ esi ]
mov eax [ eax * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
mov al [ esi + 0x7 ]
mov [ edi + 0x4 ] al
mov al [ esi + 0x6 ]
mov [ edi + 0x5 ] al
mov al [ esi + 0x5 ]
mov [ edi + 0x6 ] al
mov al [ esi + 0x4 ]
mov [ edi + 0x7 ] al
add edi 0x8
mov ebx edi
jmp r-xdata
mov al [ esi + 0x3 ]
mov ecx 0x2
lea ebx [ edi + 0x4 ]
mov [ edi ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x2 ] al
mov al [ esi ]
mov [ edi + 0x3 ] al
mov eax [ esi ]
mov eax [ eax * 4 + r--data ]
cmp eax ecx
je r-xdata
jmp r-xdata
mov al [ esi + 0xb ]
mov [ ebx ] al
mov al [ esi + 0xa ]
mov [ ebx + 0x1 ] al
mov al [ esi + 0x9 ]
mov [ ebx + 0x2 ] al
mov al [ esi + 0x8 ]
mov [ ebx + 0x3 ] al
add ebx 0x4
jmp r-xdata
mov [ ebx ] 0xffffffff
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4324f7
push ebx
push [ esi + 0x8 ]
call sub_48f540
jmp r-xdata
add esp 0x8
add ebx eax
mov al [ esi + 0x3 ]
mov ecx 0x2
lea ebx [ edi + 0x4 ]
mov [ edi ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x2 ] al
mov al [ esi ]
mov [ edi + 0x3 ] al
mov eax [ esi ]
mov eax [ eax * 4 + r--data ]
cmp eax ecx
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ esp ] eax
push eax
call sub_4a7f30
add esp 0x4
mov edi eax
push edi
push [ esp + 0x4 ]
push ebx
call sub_49a1f0
add esp 0xc
lea ebx [ ebx + edi + 0x1 ]
mov [ ebx - 0x1 ] 0x0
cmp eax 0x1
jne r-xdata
mov [ ebx ] 0xffffffff
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
mov eax [ esp + 0x1c ]
push [ eax ]
call sub_47e33c
add esp 0x8
mov esi eax
inc ebp
mov edi ebx
test esi esi
jne r-xdata
jmp [ eax * 4 + jump_table_402bc4 ]
mov eax [ esi ]
mov eax [ eax * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
mov al [ esi + 0x7 ]
mov [ edi + 0x4 ] al
mov al [ esi + 0x6 ]
mov [ edi + 0x5 ] al
mov al [ esi + 0x5 ]
mov [ edi + 0x6 ] al
mov al [ esi + 0x4 ]
mov [ edi + 0x7 ] al
add edi 0x8
mov ebx edi
jmp r-xdata
mov al [ esi + 0xb ]
mov [ ebx ] al
mov al [ esi + 0xa ]
mov [ ebx + 0x1 ] al
mov al [ esi + 0x9 ]
mov [ ebx + 0x2 ] al
mov al [ esi + 0x8 ]
mov [ ebx + 0x3 ] al
add ebx 0x4
jmp r-xdata
sub_43253e
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ebp [ esp + 0x2c ]
mov eax [ rw-data ]
mov edi [ esp + 0x28 ]
cmp ebp 0x4
mov [ esp + 0xc ] eax
jl r-xdata
mov ecx [ esp + 0xc ]
sub edi [ esp + 0x28 ]
call sub_497c4a
mov eax edi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x28 ]
mov edi ebx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ esp + 0x4 ] eax
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov [ esp ] eax
mov [ eax ] edi
mov eax [ edi * 4 + r--data ]
cmp eax 0x2
je r-xdata
mov esi [ esp + 0x4 ]
push esi
push 0x0
mov edi ebx
push edi
call sub_4989c0
add esp 0xc
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x4 ]
cmp eax 0x1
jne r-xdata
push [ esp ]
jmp r-xdata
push edi
call sub_43f79e
add esp 0x4
mov ebx [ esp ]
inc ebp
add esi edi
sub esi ebp
mov edi ebp
mov ecx esi
mov edi ebx
mov ebx [ esp ]
cmp ebp 0x7
jle r-xdata
call sub_43f9d4
add esp 0x4
mov esi [ ebx ]
mov eax [ esi * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
mov esi ecx
jmp [ eax * 4 + jump_table_402bd4 ]
push [ esp ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x4 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ebx [ esp ]
add esi 0x8
add ebp 0xfffffff8
mov edi esi
mov ecx ebp
jmp r-xdata
mov edi [ esi ]
lea ebx [ esi + 0x4 ]
bswap edi
cmp edi 0xb7
ja r-xdata
jmp r-xdata
mov ebp ebx
mov ebx ecx
cmp ebx 0x3
jle r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi * 4 + r--data ] 0x2
jne r-xdata
mov eax [ edi ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
add ebx 0xfffffffc
mov [ ebp + 0x8 ] eax
add edi 0x4
mov esi ebx
mov ebx ebp
jmp r-xdata
push ebp
jmp r-xdata
push [ ebp + 0x4 ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x24 ]
mov edx ebx
call sub_431f55
cmp esi 0x3
mov ebp esi
mov esi edi
jg r-xdata
sub_432647
mov ebx ecx
push ebx
push 0x0
push edi
call sub_4989c0
add esp 0xc
mov ebp eax
test ebp ebp
je r-xdata
cmp [ esi * 4 + r--data ] 0x2
mov esi [ esp ]
jne r-xdata
push edi
call sub_43f79e
add esp 0x4
mov ecx [ esp ]
inc ebp
add ebx edi
sub ebx ebp
mov edi ebp
mov esi ebx
mov [ ecx + 0x8 ] eax
mov ebx ecx
jmp r-xdata
push esi
jmp r-xdata
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x24 ]
mov edx ebx
call sub_431f55
cmp esi 0x3
mov ebp esi
mov esi edi
jg r-xdata
call sub_43f9d4
add esp 0x4
mov edi [ esi ]
lea ebx [ esi + 0x4 ]
bswap edi
cmp edi 0xb7
ja r-xdata
jmp r-xdata
mov edi ebx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ esp + 0x4 ] eax
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov [ esp ] eax
mov [ eax ] edi
mov eax [ edi * 4 + r--data ]
cmp eax 0x2
je r-xdata
mov ecx [ esp + 0xc ]
sub edi [ esp + 0x28 ]
call sub_497c4a
mov eax edi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x4 ]
push esi
push 0x0
mov edi ebx
push edi
call sub_4989c0
add esp 0xc
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x4 ]
cmp eax 0x1
jne r-xdata
push [ esp ]
jmp r-xdata
push edi
call sub_43f79e
add esp 0x4
mov ebx [ esp ]
inc ebp
add esi edi
sub esi ebp
mov edi ebp
mov ecx esi
mov edi ebx
mov ebx [ esp ]
cmp ebp 0x7
jle r-xdata
mov esi [ ebx ]
mov eax [ esi * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
mov esi ecx
jmp [ eax * 4 + jump_table_402bd4 ]
push [ esp ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x4 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ebx [ esp ]
add esi 0x8
add ebp 0xfffffff8
mov edi esi
mov ecx ebp
jmp r-xdata
mov ebp ebx
mov ebx ecx
cmp ebx 0x3
jle r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi * 4 + r--data ] 0x2
jne r-xdata
mov eax [ edi ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
add ebx 0xfffffffc
mov [ ebp + 0x8 ] eax
add edi 0x4
mov esi ebx
mov ebx ebp
jmp r-xdata
push ebp
jmp r-xdata
push [ ebp + 0x4 ]
call sub_43f9d4
add esp 0x4
sub_43267b
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
push esi
push edi
call sub_48f56d
add esp 0xc
test eax eax
mov [ ebx + 0x8 ] eax
jne r-xdata
mov eax [ esp + 0x8 ]
add edi eax
sub esi eax
jmp r-xdata
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov edx ebx
call sub_431f55
cmp esi 0x3
mov ebp esi
mov esi edi
jg r-xdata
mov eax [ ebx ]
cmp [ eax * 4 + r--data ] 0x2
jne r-xdata
mov edi [ esi ]
lea ebx [ esi + 0x4 ]
bswap edi
cmp edi 0xb7
ja r-xdata
jmp r-xdata
push ebx
jmp r-xdata
push [ ebx + 0x4 ]
call sub_43f9d4
add esp 0x4
mov edi ebx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ esp + 0x4 ] eax
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov [ esp ] eax
mov [ eax ] edi
mov eax [ edi * 4 + r--data ]
cmp eax 0x2
je r-xdata
mov ecx [ esp + 0xc ]
sub edi [ esp + 0x28 ]
call sub_497c4a
mov eax edi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x4 ]
push esi
push 0x0
mov edi ebx
push edi
call sub_4989c0
add esp 0xc
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x4 ]
cmp eax 0x1
jne r-xdata
push [ esp ]
jmp r-xdata
push edi
call sub_43f79e
add esp 0x4
mov ebx [ esp ]
inc ebp
add esi edi
sub esi ebp
mov edi ebp
mov ecx esi
mov edi ebx
mov ebx [ esp ]
cmp ebp 0x7
jle r-xdata
mov esi [ ebx ]
mov eax [ esi * 4 + r--data ]
dec eax
cmp eax 0x3
ja r-xdata
mov esi ecx
jmp [ eax * 4 + jump_table_402bd4 ]
push [ esp ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x4 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ebx [ esp ]
add esi 0x8
add ebp 0xfffffff8
mov edi esi
mov ecx ebp
jmp r-xdata
mov ebp ebx
mov ebx ecx
cmp ebx 0x3
jle r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi * 4 + r--data ] 0x2
jne r-xdata
mov eax [ edi ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
add ebx 0xfffffffc
mov [ ebp + 0x8 ] eax
add edi 0x4
mov esi ebx
mov ebx ebp
jmp r-xdata
push ebp
jmp r-xdata
push [ ebp + 0x4 ]
call sub_43f9d4
add esp 0x4
sub_432778
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
lea ebx [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov [ esp ] ebx
call sub_43aed0
mov ecx [ eax ]
or ecx 0x1
xor ebp ebp
dec ebp
push ebx
push 0x0
push edi
push ebp
push esi
push [ eax + 0x4 ]
push ecx
call sub_49e8ba
add esp 0x1c
mov ecx [ esp + 0x4 ]
mov esi eax
cmp esi 0xfffffffe
cmovle esi ebp
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4327d1
push ebx
push edi
push esi
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
cmp eax 0x2
je r-xdata
push esi
push edi
call sub_482bba
add esp 0x8
mov esi eax
test esi esi
js r-xdata
test eax eax
jne r-xdata
push 0x28
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp esi [ edi + 0x24 ]
jl r-xdata
pop esi
pop edi
pop ebx
retn
push [ edi + 0x14 ]
push ebx
call sub_43194f
add esp 0x8
mov ecx [ edi + 0x24 ]
test ecx ecx
jle r-xdata
add esp 0xc
mov eax [ edi + 0x30 ]
push [ eax + esi * 4 ]
push [ edi + 0x14 ]
push ebx
call sub_431ee3
jmp r-xdata
xor ebx ebx
mov edx [ edi + 0x30 ]
xor ebx ebx
push ebx
push esi
push edi
call sub_482b36
push 0x24
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp ebx ecx
jl r-xdata
inc ebx
cmp ebx ecx
jl r-xdata
cmp eax [ edx + ebx * 4 ]
je r-xdata
jmp r-xdata
sub_432878
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov esi [ ebx + 0x14 ]
mov edi esi
shr esi 0x1e
not esi
and edi 0xbfffffff
and esi 0x1
cmp eax 0x2
je r-xdata
push ebp
push ebx
mov ebx ecx
call sub_482c8a
add esp 0x8
xor ecx ecx
test eax eax
sete cl
xor esi ecx
push esi
push edi
push ebx
call sub_431ee3
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push edi
push ecx
call sub_43194f
add esp 0x8
xor ecx ecx
test eax eax
sete cl
xor esi ecx
push esi
push ebp
push ebx
call sub_482c39
jmp r-xdata
add esp 0xc
sub_4328ea
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff8
sub esp 0x68
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov [ esp + 0x60 ] ecx
mov ebx [ esi + 0x2c ]
mov edi [ esi + 0x14 ]
test ebx ebx
jle r-xdata
jns r-xdata
cmp eax 0x2
je r-xdata
mov ecx [ esp + 0x60 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
cmp eax 0x2
je r-xdata
push [ ebp + 0xc ]
push esi
mov ebx edx
call sub_482d22
add esp 0x8
mov esi eax
push esi
push edi
push ebx
call sub_43203b
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push esi
call sub_482d22
add esp 0x8
mov esi eax
cmp ebx 0xffffffff
je r-xdata
test eax eax
jne r-xdata
push edi
push edx
call sub_431a8c
add esp 0x8
push esi
call sub_4a65cf
add esp 0x4
neg ebx
cvtsi2sd xmm0 ebx
movsd [ esp ] xmm0
push esi
call sub_4a59d6
add esp 0x4
fstp [ esp + 0x8 ]
movsd xmm0 [ esp ]
mulsd xmm0 [ esp + 0x8 ]
cvttsd2si eax xmm0
jmp r-xdata
push edi
push edx
call sub_43194f
add esp 0x8
cmp ebx 0xffffffff
je r-xdata
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
push eax
push edi
push [ ebp + 0x10 ]
call sub_431ee3
jmp r-xdata
lea ecx [ esp + 0x10 ]
push eax
push r--data
push ecx
call sub_432778
add esp 0xc
neg ebx
cvtsi2sd xmm0 eax
cvtsi2sd xmm1 ebx
divsd xmm0 xmm1
sub esp 0x10
lea eax [ esp + 0x20 ]
mov [ esp ] eax
movsd [ esp + 0x8 ] xmm0
mov [ esp + 0x4 ] r--data
call sub_432778
add esp 0x10
jmp r-xdata
push eax
push [ ebp + 0xc ]
push esi
call sub_482cd6
add esp 0xc
jmp r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
sub_432a2f
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp [ esi + 0x14 ]
cmp eax 0x2
je r-xdata
push ebx
push esi
call sub_4831b7
add esp 0x8
mov esi eax
push esi
push ebp
push edi
call sub_43223e
add esp 0xc
push esi
call sub_48f52d
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push edi
call sub_431daf
add esp 0x8
push eax
push ebx
push esi
call sub_48316a
add esp 0xc
jmp r-xdata
sub_432a8b
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp [ esi + 0x14 ]
cmp eax 0x2
je r-xdata
push ebx
push esi
call sub_4832e7
add esp 0x8
mov esi eax
push esi
push ebp
push edi
call sub_4322b9
add esp 0xc
push esi
call sub_48f52d
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push edi
call sub_431e49
add esp 0x8
push eax
push ebx
push esi
call sub_4829f1
add esp 0xc
jmp r-xdata
sub_432ae7
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
cmp eax 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
push 0x2
push ebp
call sub_43194f
add esp 0x8
mov esi eax
push edi
push ebx
call sub_482bba
add esp 0x8
mov edi eax
test edi edi
js r-xdata
test eax eax
jne r-xdata
push 0x109
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp edi [ ebx + 0x24 ]
jl r-xdata
add esp 0x4
jmp r-xdata
push 0x2
push ebp
call sub_43194f
add esp 0x8
mov ecx [ ebx + 0x24 ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0x1c ]
mov esi eax
push esi
mov edi [ esp + 0x4 ]
push [ edi ]
call sub_483447
add esp 0x8
push esi
push [ edi + 0x4 ]
call sub_483447
add esp 0xc
jmp r-xdata
push esi
call sub_44420b
add esp 0x4
mov esi eax
push edi
call sub_44420b
add esp 0x4
mov edi eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x30 ]
mov edi [ eax + edi * 4 ]
push edi
push 0x2
push ebp
call sub_431ee3
add esp 0xc
cmp esi edi
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor esi esi
mov edx [ ebx + 0x30 ]
xor esi esi
test edi edi
jne r-xdata
push 0x110
push r--data
push r--data
call sub_4a509d
add esp 0xc
push esi
push edi
push ebx
call sub_482b36
add esp 0x10
push 0x102
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp esi ecx
jl r-xdata
inc esi
cmp esi ecx
jl r-xdata
push 0x1
push ebp
call sub_43194f
add esp 0x8
cmp eax [ esi + 0x4c ]
jne r-xdata
push 0x111
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp eax [ edx + esi * 4 ]
je r-xdata
jmp r-xdata
push [ edi + 0x4c ]
push 0x1
push ebp
call sub_431ee3
add esp 0xc
sub_432c4b
push ebp
push ebx
push edi
push esi
sub esp 0x7e4
mov eax [ rw-data ]
mov ebp [ esp + 0x7f8 ]
mov [ esp + 0x7e0 ] eax
mov [ esp ] ebp
mov [ esp + 0x8 ] sub_439404
mov [ esp + 0x4 ] 0x30
call sub_43b6bc
mov esi eax
xor ebx ebx
mov edi r--data
mov [ esi + 0x4 ] ebx
mov [ esi ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x28 ] ebx
mov [ esp ] edi
call sub_43f79e
mov [ esi + 0x2c ] eax
mov eax [ esp + 0x7fc ]
mov [ esi + 0x28 ] eax
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] edi
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
call sub_43b5be
mov edi eax
mov eax 0x14
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] eax
mov [ esp ] edi
mov [ esp + 0x4 ] 0x5
call sub_43b744
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x7dc ] eax
mov [ esp ] ebx
call sub_43b2d8
cmp [ esp + 0x7fc ] 0x0
mov [ esp + 0x7d8 ] eax
mov al 0x61
jne r-xdata
mov ecx r--data
mov edx r--data
movzx eax al
cmovne edx ecx
mov ecx [ esp + 0x7dc ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x7d8 ]
mov [ esp + 0xc ] ecx
mov ecx sub_439428
mov [ esp + 0x10 ] ecx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] edx
mov [ esp ] edi
call sub_43bafd
xor ebp ebp
mov [ esi + 0x14 ] eax
inc ebp
mov [ eax + 0x20 ] ebp
mov eax [ esi + 0x14 ]
mov [ eax + 0xc ] 0x3
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x7d4 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x7d0 ] eax
mov eax [ esp + 0x7d4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x7d0 ]
mov [ esp + 0xc ] eax
mov eax sub_439428
mov [ esp + 0x10 ] eax
mov [ esp ] edi
mov [ esp + 0x8 ] 0x63
mov [ esp + 0x4 ] r--data
call sub_43bafd
mov [ esi + 0x18 ] eax
mov [ eax + 0x24 ] ebp
mov ecx 0x4
mov eax [ esi + 0x18 ]
mov [ eax + 0xc ] ecx
mov eax [ r--data ]
mov [ esp + 0x4 ] eax
mov [ esp ] r--data
call sub_43f758
mov ebp [ esp + 0x7f8 ]
mov edi eax
mov [ esp + 0x8 ] edi
mov [ esp ] ebp
mov [ esp + 0x4 ] r--data
call sub_43b51f
mov [ esp ] edi
call sub_43f9d4
mov ebx [ esp + 0x7fc ]
test ebx ebx
jne r-xdata
mov al 0x6f
test ebx ebx
mov eax r--data
mov ecx r--data
mov [ esp ] ebp
cmovne ecx eax
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b5be
mov edi eax
mov eax 0x19
mov [ esp + 0xc ] eax
mov eax 0x4b
mov [ esp + 0x8 ] eax
mov eax 0x2
mov [ esp + 0x4 ] eax
mov [ esp ] edi
call sub_43b744
mov eax esi
add eax 0x1c
xor ebx ebx
inc ebx
mov [ esp + 0x4 ] ebx
mov [ esp ] eax
call sub_447761
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x788 ] eax
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x784 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x780 ] eax
mov ebp 0x64
mov eax [ esp + 0x788 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x784 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x780 ]
mov [ esp + 0x10 ] eax
mov eax sub_439428
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebp
mov [ esp ] edi
mov [ esp + 0x8 ] 0x65
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
mov [ esi ] eax
mov [ eax + 0xc ] ecx
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebx
mov [ esp ] edi
call sub_43b744
mov eax 0x19
mov [ esp + 0xc ] eax
mov eax 0x4b
mov [ esp + 0x8 ] eax
mov eax 0x2
mov [ esp + 0x4 ] eax
mov [ esp ] edi
call sub_43b744
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x77c ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x778 ] eax
xor ebx ebx
mov eax [ esp + 0x77c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x778 ]
mov [ esp + 0xc ] eax
mov eax sub_439428
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] eax
mov [ esp ] edi
call sub_43bb7f
mov ecx [ esp + 0x7fc ]
mov [ esi + 0x4 ] eax
mov [ eax + 0xc ] ebx
mov eax [ esi + 0x4 ]
test ecx ecx
mov ebp ecx
mov [ eax + 0x20 ] 0x7
je r-xdata
mov [ esp ] ebp
mov [ esp + 0x4 ] 0x8
call sub_43b729
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
mov edi eax
mov [ esp + 0x4 ] r--data
call sub_43b5be
mov ebp eax
mov [ esp ] ebp
mov [ esp + 0xc ] 0x19
mov [ esp + 0x8 ] 0x4b
mov [ esp + 0x4 ] 0x2
call sub_43b744
xor ebx ebx
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x7cc ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x7c8 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x7c4 ] eax
mov eax [ esp + 0x7cc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x7c8 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x7c4 ]
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0xc ] eax
mov [ esp ] ebp
mov [ esp + 0x14 ] sub_4397d9
mov [ esp + 0x8 ] 0x6e
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ eax + 0xc ] ebx
mov [ edi ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x7c0 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x7bc ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x7b8 ] eax
mov ebx 0x64
mov eax [ esp + 0x7c0 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x7bc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x7b8 ]
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0xc ] eax
mov [ esp ] ebp
mov [ esp + 0x14 ] sub_43988a
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
inc ecx
mov [ eax + 0xc ] ecx
mov [ esp + 0x5c ] edi
mov [ edi + 0x4 ] eax
mov [ esp + 0x8 ] ebx
mov [ esp + 0x4 ] ecx
mov [ esp ] ebp
call sub_43b744
mov [ esp ] 0x3
call sub_44420b
test eax eax
je r-xdata
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x774 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x770 ] eax
mov eax [ esp + 0x774 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x770 ]
mov [ esp + 0xc ] eax
mov [ esp ] edi
mov [ esp + 0x10 ] sub_439428
mov [ esp + 0x8 ] 0x6c
mov [ esp + 0x4 ] r--data
call sub_43bafd
mov [ esi + 0x8 ] eax
mov [ eax + 0xc ] 0x1
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov [ esp ] 0x2
call sub_43b2d8
mov [ esp + 0x7b4 ] eax
mov [ esp ] 0x1
call sub_43b2d8
xor ebx ebx
mov [ esp + 0x7b0 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x7ac ] eax
mov eax [ esp + 0x5c ]
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x7a8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x7a4 ] eax
mov eax [ esp + 0x7b4 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x7b0 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x7ac ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x7a8 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x7a4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x40 ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp ] ebp
mov [ esp + 0x38 ] 0x69
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] 0x74
mov [ esp + 0x28 ] r--data
mov [ esp + 0x20 ] 0x77
mov [ esp + 0x1c ] r--data
mov [ esp + 0x14 ] sub_432ae7
mov [ esp + 0xc ] 0x3
mov [ esp ] 0x3
call sub_43b2d8
mov [ esp + 0x7a0 ] eax
mov [ esp ] 0x2
call sub_43b2d8
mov [ esp + 0x79c ] eax
mov [ esp ] 0x1
call sub_43b2d8
xor ebx ebx
mov [ esp + 0x798 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x794 ] eax
mov eax [ esp + 0x5c ]
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x790 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x78c ] eax
mov eax [ esp + 0x7a0 ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x79c ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x798 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x794 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x790 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x78c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4c ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp ] ebp
mov [ esp + 0x44 ] 0x73
mov [ esp + 0x40 ] r--data
mov [ esp + 0x38 ] 0x69
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] 0x74
mov [ esp + 0x28 ] r--data
mov [ esp + 0x20 ] 0x77
mov [ esp + 0x1c ] r--data
mov [ esp + 0x14 ] sub_432ae7
mov [ esp + 0xc ] 0x4
jmp r-xdata
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x764 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x760 ] eax
mov eax [ esp + 0x764 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x760 ]
mov [ esp + 0xc ] eax
mov [ esp ] edi
mov [ esp + 0x10 ] sub_439428
mov [ esp + 0x8 ] 0x64
mov [ esp + 0x4 ] r--data
call sub_43bafd
mov [ esi + 0x10 ] eax
mov [ eax + 0xc ] 0x1
mov [ esi + 0x10 ] 0x0
jmp r-xdata
mov ebx [ esp + 0x7f8 ]
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x76c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x768 ] eax
mov eax [ esp + 0x76c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x768 ]
mov [ esp + 0xc ] eax
mov [ esp ] edi
mov [ esp + 0x10 ] sub_439428
mov [ esp + 0x8 ] 0x76
mov [ esp + 0x4 ] r--data
call sub_43bafd
test ebp ebp
mov [ esi + 0xc ] eax
mov [ eax + 0xc ] 0x1
je r-xdata
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov ebp [ esp + 0x7f8 ]
mov ebx [ esp + 0x7fc ]
mov eax sub_439428
mov [ esp ] 0x4
call sub_43b2d8
mov [ esp + 0x748 ] eax
mov [ esp ] 0x3
call sub_43b2d8
mov [ esp + 0x744 ] eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x740 ] eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
xor ebp ebp
mov [ esp + 0x73c ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x738 ] eax
mov [ esp ] 0x78
call sub_43b2d8
mov [ esp + 0x734 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x730 ] eax
mov eax [ esp + 0x748 ]
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x744 ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x740 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x73c ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x738 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x734 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x730 ]
mov [ esp + 0x10 ] eax
mov eax 0x2
mov [ esp + 0x58 ] ebp
mov [ esp + 0x4c ] ebx
mov [ esp + 0x40 ] edi
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] ebp
mov [ esp ] esi
mov [ esp + 0x50 ] 0x72
mov [ esp + 0x44 ] 0x73
mov [ esp + 0x38 ] 0x6c
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] 0x70
mov [ esp + 0x28 ] r--data
mov [ esp + 0x20 ] 0x74
mov [ esp + 0x1c ] r--data
mov [ esp + 0x14 ] sub_43998a
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] 0x77
call sub_43b2d8
mov edi r--data
mov [ esp + 0x72c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x728 ] eax
mov ebx 0x1
mov eax [ esp + 0x72c ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x728 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x1c ] sub_432a2f
mov [ esp + 0x14 ] r--data
mov [ esp + 0x8 ] 0x66
mov [ esp + 0x4 ] r--data
call sub_43bd38
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x724 ] eax
mov eax [ esp + 0x724 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov [ esp ] 0xffffffff
call sub_43b2d8
mov [ esp + 0x720 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x71c ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x718 ] eax
mov [ esp ] 0x79
call sub_43b2d8
mov [ esp + 0x714 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x710 ] eax
mov eax [ esp + 0x720 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x71c ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x718 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x714 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x710 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x34 ] ebp
mov [ esp + 0xc ] ebx
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x14 ] sub_4327d1
mov [ esp + 0x8 ] 0x65
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] 0x7a
call sub_43b2d8
mov [ esp + 0x70c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x708 ] eax
mov eax [ esp + 0x70c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x708 ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_432878
mov [ esp + 0x8 ] 0x75
mov [ esp + 0x4 ] r--data
call sub_43bef3
test [ esp + 0x5c ] 0x1
mov ebp [ esp + 0x7f8 ]
je r-xdata
test eax eax
je r-xdata
xor esi esi
inc esi
test ebp ebp
mov [ esp + 0x4 ] esi
mov [ esp ] edi
setne [ esp + 0x5c ]
mov [ esp + 0x8 ] 0x64
call sub_43b744
xor ebp ebp
mov [ esp + 0xc ] ebp
mov [ esp ] ebx
mov [ esp + 0x8 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b5be
mov edi esi
mov esi eax
mov [ esp ] 0x2
call sub_43b2d8
mov [ esp + 0x75c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x758 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov edi 0x4
mov [ esp + 0x754 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x750 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x74c ] eax
mov eax [ esp + 0x75c ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x758 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x754 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x750 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x74c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x34 ] ebp
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x14 ] sub_4327d1
mov [ esp + 0x8 ] 0x78
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0xc ] ebp
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
mov [ esp + 0x8 ] r--data
call sub_43b5be
cmp [ esp + 0x800 ] 0x3
mov esi eax
mov eax [ esp + 0x7fc ]
mov ebx r--data
mov edi r--data
sete cl
and cl [ esp + 0x5c ]
mov [ esp + 0x5c ] cl
jne r-xdata
cmp [ esp + 0x7fc ] 0x0
je r-xdata
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x7b
call sub_43b2d8
mov [ esp + 0x704 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x700 ] eax
mov edi sub_432878
mov eax [ esp + 0x704 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x700 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6b
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x7c
call sub_43b2d8
mov [ esp + 0x6fc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6f8 ] eax
mov eax [ esp + 0x6fc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x6f8 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x64
mov [ esp + 0x4 ] r--data
call sub_43bef3
jmp r-xdata
mov [ esp ] 0x3
call sub_44420b
test eax eax
je r-xdata
xor edi edi
xor ebx ebx
jmp r-xdata
mov [ esp ] 0x3
call sub_44420b
test eax eax
jne r-xdata
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
call sub_43b5be
mov esi eax
mov eax 0x62
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x6f4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6f0 ] eax
mov edi sub_432878
mov eax [ esp + 0x6f4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x6f0 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x77
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x61
call sub_43b2d8
mov [ esp + 0x6ec ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6e8 ] eax
mov ebx 0x64
mov eax [ esp + 0x6ec ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x6e8 ]
mov [ esp + 0xc ] eax
mov eax 0x64
mov [ esp + 0x10 ] edi
mov edi sub_432878
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x63
call sub_43b2d8
mov [ esp + 0x6e4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6e0 ] eax
mov eax [ esp + 0x6e4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x6e0 ]
mov [ esp + 0xc ] eax
mov eax 0x72
mov [ esp + 0x10 ] edi
mov edi sub_432878
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0xb6
call sub_43b2d8
mov [ esp + 0x6dc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6d8 ] eax
mov eax [ esp + 0x6dc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x6d8 ]
mov [ esp + 0xc ] eax
mov eax 0x66
mov [ esp + 0x10 ] edi
mov edi sub_432878
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax 0x70
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x6d4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6d0 ] eax
mov eax [ esp + 0x6d4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x6d0 ]
mov [ esp + 0xc ] eax
mov eax 0x65
mov [ esp + 0x10 ] edi
mov edi sub_432878
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax 0x71
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x6cc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6c8 ] eax
mov eax [ esp + 0x6cc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x6c8 ]
mov [ esp + 0xc ] eax
mov eax 0x6e
mov [ esp + 0x10 ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
xor eax eax
inc eax
mov [ esp ] eax
mov edi eax
call sub_43b2d8
mov [ esp + 0x6c4 ] eax
mov [ esp ] 0x80
call sub_43b2d8
mov [ esp + 0x6c0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6bc ] eax
mov eax [ esp + 0x6c4 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x6c0 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x6bc ]
mov [ esp + 0x10 ] eax
mov eax sub_4328ea
mov [ esp + 0x14 ] eax
mov eax 0x73
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x6b8 ] eax
xor eax eax
xor edi edi
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x6b4 ] eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x6b0 ] eax
mov [ esp ] 0x54
call sub_43b2d8
mov [ esp + 0x6ac ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x6a8 ] eax
mov ebp r--data
mov ebx 0x0
mov eax [ esp + 0x6b8 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x6b4 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x6b0 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x6ac ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x6a8 ]
mov [ esp + 0x10 ] eax
mov eax r--data
mov [ esp + 0x34 ] edi
mov edi r--data
mov [ esp + 0x2c ] eax
mov eax sub_4327d1
mov [ esp + 0x24 ] ebp
mov [ esp + 0x1c ] edi
mov [ esp + 0x14 ] eax
mov eax 0x3
mov [ esp + 0xc ] eax
mov eax 0x6c
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b9aa
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp ] ebx
mov [ esp + 0x6a4 ] eax
xor ebx ebx
call sub_43b2d8
mov [ esp + 0x6a0 ] eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x69c ] eax
mov [ esp ] 0x55
call sub_43b2d8
mov [ esp + 0x698 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x694 ] eax
mov eax [ esp + 0x6a4 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x6a0 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x69c ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x698 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x694 ]
mov [ esp + 0x10 ] eax
mov eax r--data
mov [ esp + 0x34 ] ebx
mov [ esp + 0x2c ] eax
mov eax sub_4327d1
mov [ esp + 0x24 ] ebp
mov [ esp + 0x1c ] edi
mov [ esp + 0x14 ] eax
mov eax 0x3
mov [ esp + 0xc ] eax
mov eax 0x74
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov edi [ esp + 0x7f8 ]
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] edi
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x690 ] eax
mov [ esp ] ebx
xor ebp ebp
call sub_43b2d8
mov [ esp + 0x68c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x688 ] eax
mov eax [ esp + 0x690 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x68c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x688 ]
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0xc ] eax
mov eax 0x70
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x14 ] sub_439a30
mov [ esp + 0x4 ] r--data
call sub_43b915
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] edi
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] esi
mov [ esp ] edi
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
xor edi edi
mov ebx eax
inc edi
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x684 ] eax
mov [ esp ] ebp
xor esi esi
call sub_43b2d8
mov [ esp + 0x680 ] eax
mov [ esp ] 0x3f
call sub_43b2d8
mov [ esp + 0x67c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x678 ] eax
mov ebp 0x2
mov eax [ esp + 0x684 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x680 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x67c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x678 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x2c ] esi
mov esi 0x0
mov [ esp + 0x14 ] eax
mov eax 0x62
mov [ esp + 0xc ] ebp
mov [ esp + 0x8 ] eax
mov [ esp ] ebx
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] edi
call sub_43b2d8
mov [ esp ] esi
mov [ esp + 0x674 ] eax
xor esi esi
call sub_43b2d8
mov [ esp + 0x670 ] eax
mov [ esp ] 0x40
call sub_43b2d8
mov [ esp + 0x66c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x668 ] eax
mov eax [ esp + 0x674 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x670 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x66c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x668 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x2c ] esi
mov esi ebx
mov [ esp + 0x14 ] eax
mov eax 0x65
mov [ esp + 0xc ] ebp
mov ebp 0x2
mov [ esp + 0x8 ] eax
mov [ esp ] ebx
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax 0x5
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x664 ] eax
mov eax 0x4
mov [ esp ] eax
call sub_43b2d8
mov ebx 0x3
mov [ esp + 0x660 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x65c ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x658 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x654 ] eax
xor eax eax
xor ebp ebp
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x650 ] eax
mov [ esp ] 0x41
call sub_43b2d8
mov [ esp + 0x64c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x648 ] eax
mov eax [ esp + 0x664 ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x660 ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x65c ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x658 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x654 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x650 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x64c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x648 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x4c ] ebp
mov ebp 0x0
mov [ esp + 0x14 ] eax
mov eax 0x66
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x44 ] r--data
mov [ esp + 0x3c ] r--data
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax r--data
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x7f8 ]
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp ] ebp
mov [ esp + 0x644 ] eax
xor ebp ebp
call sub_43b2d8
mov [ esp + 0x640 ] eax
mov [ esp ] 0x4c
call sub_43b2d8
mov [ esp + 0x63c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x638 ] eax
mov ebx 0x0
mov eax [ esp + 0x644 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x640 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x63c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x638 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x2c ] ebp
mov ebp r--data
mov eax r--data
mov [ esp + 0x24 ] ebp
mov [ esp + 0x1c ] eax
mov eax sub_4327d1
mov [ esp + 0x14 ] eax
mov eax 0x3
mov [ esp + 0xc ] eax
mov eax 0x72
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x634 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x630 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x62c ] eax
mov [ esp ] ebx
xor edi edi
call sub_43b2d8
mov [ esp + 0x628 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x624 ] eax
mov eax [ esp + 0x634 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x630 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x62c ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x628 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x624 ]
mov [ esp + 0x10 ] eax
mov eax r--data
mov [ esp + 0x34 ] edi
mov [ esp + 0x24 ] ebp
mov [ esp + 0x1c ] eax
mov eax 0x3
mov [ esp + 0xc ] eax
mov eax 0x6e
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x14 ] sub_439b40
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov esi [ esp + 0x7f8 ]
mov edi r--data
mov [ esp + 0x4 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] edi
mov [ esp ] esi
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x620 ] eax
xor eax eax
inc eax
mov [ esp ] eax
mov ebx eax
call sub_43b2d8
mov [ esp + 0x61c ] eax
xor eax eax
xor ebp ebp
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x618 ] eax
mov eax 0x66
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x614 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x610 ] eax
mov eax [ esp + 0x620 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x61c ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x618 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x614 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x610 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x34 ] ebp
mov [ esp + 0x14 ] eax
mov eax 0x62
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax [ esp + 0x7f8 ]
mov [ esp + 0x4 ] edi
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x68
call sub_43b2d8
mov ebx r--data
mov [ esp + 0x60c ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x608 ] eax
mov eax [ esp + 0x60c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x608 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
xor eax eax
dec eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x604 ] eax
mov eax 0x69
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x600 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x5fc ] eax
mov ebp sub_4328ea
mov eax [ esp + 0x604 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x600 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x5fc ]
mov [ esp + 0x10 ] eax
mov eax 0x14
mov [ esp + 0x14 ] ebp
mov [ esp + 0xc ] eax
mov eax 0x6d
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov edi 0xfffffc18
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x5f8 ] eax
mov [ esp ] 0x6a
call sub_43b2d8
mov [ esp + 0x5f4 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x5f0 ] eax
mov eax [ esp + 0x5f8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x5f4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x5f0 ]
mov [ esp + 0x10 ] eax
mov eax 0x14
mov [ esp + 0x14 ] ebp
mov ebp 0x14
mov [ esp + 0xc ] eax
mov eax 0x74
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x5ec ] eax
mov eax [ esp + 0x5ec ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x5e8 ] eax
mov eax 0x6b
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x5e4 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x5e0 ] eax
mov edi 0x73
mov eax [ esp + 0x5e8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x5e4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x5e0 ]
mov [ esp + 0x10 ] eax
mov eax sub_4328ea
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebp
mov [ esp + 0x8 ] edi
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov ebx [ esp + 0x7f8 ]
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
mov [ esp + 0x8 ] r--data
call sub_43b51f
xor eax eax
mov [ esp + 0xc ] eax
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
call sub_43b5be
mov esi eax
mov [ esp ] 0x42
call sub_43b2d8
mov ebx r--data
mov [ esp + 0x5dc ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x5d8 ] eax
mov ebp sub_432878
mov eax [ esp + 0x5dc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5d8 ]
mov [ esp + 0xc ] eax
mov eax 0x75
mov [ esp + 0x10 ] ebp
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax 0x43
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x5d4 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x5d0 ] eax
mov ebx sub_432878
mov eax [ esp + 0x5d4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5d0 ]
mov [ esp + 0xc ] eax
mov eax 0x6b
mov [ esp + 0x10 ] ebp
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x44
call sub_43b2d8
mov [ esp + 0x5cc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x5c8 ] eax
mov eax [ esp + 0x5cc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5c8 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x78
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x45
call sub_43b2d8
mov [ esp + 0x5c4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x5c0 ] eax
mov eax [ esp + 0x5c4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5c0 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] edi
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x46
call sub_43b2d8
mov [ esp + 0x5bc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x5b8 ] eax
mov eax [ esp + 0x5bc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5b8 ]
mov [ esp + 0xc ] eax
mov eax 0x77
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x47
call sub_43b2d8
mov [ esp + 0x5b4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x5b0 ] eax
mov eax [ esp + 0x5b4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5b0 ]
mov [ esp + 0xc ] eax
mov eax 0x74
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x48
call sub_43b2d8
mov [ esp + 0x5ac ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x5a8 ] eax
mov eax [ esp + 0x5ac ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x5a8 ]
mov [ esp + 0xc ] eax
mov eax 0x65
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x5a4 ] eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
xor edi edi
mov [ esp + 0x5a0 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x59c ] eax
mov [ esp ] 0x4b
call sub_43b2d8
mov [ esp + 0x598 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x594 ] eax
mov eax [ esp + 0x5a4 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x5a0 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x59c ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x598 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x594 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x34 ] edi
mov [ esp + 0x14 ] eax
mov eax 0x3
mov [ esp + 0xc ] eax
mov eax 0x71
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] 0x49
call sub_43b2d8
mov [ esp + 0x590 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x58c ] eax
mov eax [ esp + 0x590 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x58c ]
mov [ esp + 0xc ] eax
mov eax 0x62
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x4a
call sub_43b2d8
mov [ esp + 0x588 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x584 ] eax
mov eax [ esp + 0x588 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x584 ]
mov [ esp + 0xc ] eax
mov eax 0x72
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x82
call sub_43b2d8
mov [ esp + 0x580 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x57c ] eax
mov eax [ esp + 0x580 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x57c ]
mov [ esp + 0xc ] eax
mov eax 0x6c
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x83
call sub_43b2d8
mov [ esp + 0x578 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x574 ] eax
mov eax [ esp + 0x578 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x574 ]
mov [ esp + 0xc ] eax
mov eax 0x64
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax [ r--data ]
mov [ esp + 0x4 ] eax
mov [ esp ] r--data
call sub_43f758
mov ebx [ esp + 0x7f8 ]
mov esi eax
mov eax r--data
mov ebp r--data
mov [ esp + 0x8 ] esi
mov [ esp + 0x4 ] eax
mov edi ebx
mov [ esp ] edi
call sub_43b51f
mov [ esp ] esi
call sub_43f9d4
mov [ esp + 0x4 ] ebp
mov [ esp ] edi
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov eax 0x32
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] eax
mov eax 0x2
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43b744
xor edi edi
dec edi
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x570 ] eax
mov eax 0x73
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x56c ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x568 ] eax
mov ebx sub_4328ea
mov ebp 0x64
mov eax [ esp + 0x570 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x56c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x568 ]
mov [ esp + 0x10 ] eax
mov eax 0x6d
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] ebp
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x564 ] eax
mov eax 0x74
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x560 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x55c ] eax
mov eax [ esp + 0x564 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x560 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x55c ]
mov [ esp + 0x10 ] eax
mov eax 0x72
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] ebp
mov ebx 0x64
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
inc ecx
mov [ eax + 0xc ] ecx
mov [ esp + 0x8 ] ebx
mov [ esp + 0x4 ] ecx
mov [ esp ] esi
call sub_43b744
mov eax r--data
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x7f8 ]
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x558 ] eax
mov [ esp ] 0x60
call sub_43b2d8
mov ebx r--data
mov [ esp + 0x554 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x550 ] eax
mov eax [ esp + 0x558 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x554 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x550 ]
mov [ esp + 0x10 ] eax
mov eax sub_4328ea
mov [ esp + 0x14 ] eax
mov eax 0x32
mov [ esp + 0xc ] eax
mov eax 0x73
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov eax 0x6d
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x54c ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x548 ] eax
mov ebp sub_432878
mov eax [ esp + 0x54c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x548 ]
mov [ esp + 0xc ] eax
mov eax 0x64
mov [ esp + 0x10 ] ebp
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x58
call sub_43b2d8
mov [ esp + 0x544 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x540 ] eax
mov edi sub_432878
mov eax [ esp + 0x544 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x540 ]
mov [ esp + 0xc ] eax
mov eax 0x6b
mov [ esp + 0x10 ] ebp
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x59
call sub_43b2d8
mov [ esp + 0x53c ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x538 ] eax
mov eax [ esp + 0x53c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x538 ]
mov [ esp + 0xc ] eax
mov eax 0x70
mov [ esp + 0x10 ] edi
mov edi sub_432878
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x5a
call sub_43b2d8
mov [ esp + 0x534 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x530 ] eax
mov eax [ esp + 0x534 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x530 ]
mov [ esp + 0xc ] eax
mov eax 0x65
mov [ esp + 0x10 ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax [ r--data ]
mov [ esp + 0x4 ] eax
mov [ esp ] r--data
call sub_43f758
mov ebx [ esp + 0x7f8 ]
mov esi eax
mov edi r--data
mov [ esp + 0x8 ] esi
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
call sub_43b51f
mov [ esp ] esi
call sub_43f9d4
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x52c ] eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x528 ] eax
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x524 ] eax
mov eax 0x64
mov [ esp ] eax
call sub_43b2d8
mov ebx r--data
mov [ esp + 0x520 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x51c ] eax
mov ebp 0x75
mov ecx 0x6c
mov edx 0x3
mov eax [ esp + 0x52c ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x528 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x524 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x520 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x51c ]
mov [ esp + 0x10 ] eax
mov eax 0x0
mov [ esp + 0x40 ] eax
mov [ esp + 0x2c ] ebp
mov [ esp + 0x20 ] ecx
mov ecx sub_4327d1
mov [ esp + 0x14 ] ecx
mov [ esp + 0xc ] edx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x38 ] 0x76
mov [ esp + 0x34 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax 0x65
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x518 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x514 ] eax
mov eax [ esp + 0x518 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x514 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x62
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov ebx [ esp + 0x7f8 ]
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x510 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x50c ] eax
mov eax [ esp + 0x510 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x50c ]
mov [ esp + 0xc ] eax
mov eax 0x6e
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_432a8b
mov [ esp + 0x4 ] r--data
call sub_43bdcd
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
mov [ esp + 0xc ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x7d
call sub_43b2d8
mov [ esp + 0x508 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x504 ] eax
mov eax [ esp + 0x508 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x504 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x70
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
xor eax eax
dec eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x500 ] eax
mov [ esp ] 0x7f
call sub_43b2d8
mov [ esp + 0x4fc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x4f8 ] eax
mov edi sub_4328ea
mov eax [ esp + 0x500 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x4fc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x4f8 ]
mov [ esp + 0x10 ] eax
mov eax 0x14
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] eax
mov eax 0x65
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov eax [ r--data ]
mov [ esp + 0x4 ] eax
mov [ esp ] r--data
call sub_43f758
mov esi eax
mov ebp r--data
mov [ esp + 0x8 ] esi
mov [ esp + 0x4 ] ebp
mov [ esp ] ebx
call sub_43b51f
mov [ esp ] esi
call sub_43f9d4
mov [ esp + 0x4 ] ebp
mov [ esp ] ebx
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x4f4 ] eax
mov [ esp ] 0x5f
call sub_43b2d8
mov ebx r--data
mov [ esp + 0x4f0 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x4ec ] eax
mov eax [ esp + 0x4f4 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x4f0 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x4ec ]
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] eax
mov eax 0x74
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ esp ] 0x40000072
call sub_43b2d8
mov [ esp + 0x4e8 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x4e4 ] eax
mov ebx sub_432878
mov eax [ esp + 0x4e8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4e4 ]
mov [ esp + 0xc ] eax
mov eax 0x69
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
xor edi edi
mov eax r--data
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp ] ebp
call sub_43b5be
mov esi eax
mov eax 0x5
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x4e0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x4dc ] eax
mov eax [ esp + 0x4e0 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4dc ]
mov [ esp + 0xc ] eax
mov eax 0x77
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov ebx r--data
mov [ esp + 0x4 ] ebx
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] ebx
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp ] edi
mov [ esp + 0x4d8 ] eax
xor edi edi
call sub_43b2d8
mov [ esp + 0x4d4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x4d0 ] eax
mov eax [ esp + 0x4d8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x4d4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x4d0 ]
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0xc ] eax
mov eax 0x72
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x14 ] sub_439c18
mov [ esp + 0x4 ] r--data
call sub_43b915
mov [ esp + 0xc ] edi
mov [ esp + 0x4 ] ebx
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x92
call sub_43b2d8
mov [ esp + 0x4cc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x4c8 ] eax
mov eax [ esp + 0x4cc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4c8 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x77
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax [ r--data ]
mov [ esp + 0x4 ] eax
mov [ esp ] r--data
call sub_43f758
mov edi eax
mov [ esp + 0xc ] edi
mov [ esp + 0x4 ] ebx
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] edi
call sub_43f9d4
mov eax 0x3
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x4c4 ] eax
mov eax 0x4
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x4c0 ] eax
mov [ esp ] 0x90
call sub_43b2d8
mov [ esp + 0x4bc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x4b8 ] eax
mov ecx 0x70
mov ebp 0x75
mov edx sub_4327d1
mov eax [ esp + 0x4c4 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x4c0 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x4bc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x4b8 ]
mov [ esp + 0x10 ] eax
mov eax 0x0
mov [ esp + 0x34 ] eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x20 ] ebp
mov ebp 0x1
mov [ esp + 0x14 ] edx
mov [ esp + 0xc ] ebp
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x28 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] 0x8c
call sub_43b2d8
mov [ esp + 0x4b4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x4b0 ] eax
mov ebx sub_432878
mov eax [ esp + 0x4b4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4b0 ]
mov [ esp + 0xc ] eax
mov eax 0x64
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov esi [ esp + 0x7f8 ]
mov edi r--data
mov [ esp + 0x4 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] edi
mov [ esp ] esi
mov [ esp + 0xc ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x8e
call sub_43b2d8
mov [ esp + 0x4ac ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x4a8 ] eax
mov eax [ esp + 0x4ac ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4a8 ]
mov [ esp + 0xc ] eax
mov eax 0x70
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x4a4 ] eax
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x4a0 ] eax
mov [ esp ] 0x8b
call sub_43b2d8
mov [ esp + 0x49c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x498 ] eax
mov ecx 0x0
mov ebx 0x2
mov eax [ esp + 0x4a4 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x4a0 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x49c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x498 ]
mov [ esp + 0x10 ] eax
mov eax 0x72
mov [ esp + 0x34 ] ecx
mov [ esp + 0x2c ] eax
mov eax 0x6e
mov [ esp + 0x20 ] eax
mov eax r--data
mov [ esp + 0x1c ] eax
mov eax sub_4327d1
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] ecx
mov [ esp ] esi
mov [ esp + 0x28 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp + 0x4 ] edi
mov edi [ esp + 0x7f8 ]
mov [ esp ] edi
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov eax 0xc
mov [ esp + 0x4 ] eax
mov [ esp ] edi
call sub_43b729
mov edi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x494 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x490 ] eax
mov eax [ esp + 0x494 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x490 ]
mov [ esp + 0xc ] eax
mov eax sub_439d05
mov [ esp + 0x10 ] eax
mov eax 0x65
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bb7f
mov [ edi ] eax
mov [ eax + 0x28 ] ebp
mov ecx 0x4
mov eax [ edi ]
mov [ eax + 0x30 ] ecx
mov [ esp + 0x4 ] ecx
mov [ esp ] ecx
call sub_43f807
mov ecx [ edi ]
mov [ ecx + 0x34 ] eax
mov ecx 0x14
mov eax [ edi ]
mov eax [ eax + 0x34 ]
mov [ eax ] 0xf
mov eax [ edi ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x4 ] 0x19
mov eax [ edi ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x8 ] ecx
mov ecx 0x28
mov eax [ edi ]
mov eax [ eax + 0x34 ]
mov [ eax + 0xc ] ecx
mov eax 0x21
mov [ esp + 0xc ] eax
mov eax 0x43
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ebx
mov [ esp ] esi
call sub_43b744
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x48c ] eax
mov [ esp ] edi
call sub_43b2d8
mov ebp r--data
mov [ esp + 0x488 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x484 ] eax
mov ebx sub_439d05
mov eax [ esp + 0x48c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x488 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x484 ]
mov [ esp + 0x10 ] eax
mov eax 0x32
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] eax
mov eax 0x74
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
mov [ edi + 0x4 ] eax
mov [ eax + 0xc ] ecx
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x480 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x47c ] eax
mov eax [ esp + 0x480 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x47c ]
mov [ esp + 0xc ] eax
mov eax 0x73
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bafd
xor ebx ebx
mov [ edi + 0x8 ] eax
inc ebx
mov [ eax + 0xc ] ebx
mov eax 0x64
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ebx
mov [ esp ] esi
call sub_43b744
mov esi [ esp + 0x7f8 ]
mov ebp r--data
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
mov [ esp + 0xc ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x84
call sub_43b2d8
mov [ esp + 0x478 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x474 ] eax
mov edi sub_432878
mov eax [ esp + 0x478 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x474 ]
mov [ esp + 0xc ] eax
mov eax 0x69
mov [ esp + 0x10 ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x85
call sub_43b2d8
mov [ esp + 0x470 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x46c ] eax
mov eax [ esp + 0x470 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x46c ]
mov [ esp + 0xc ] eax
mov eax 0x32
mov [ esp + 0x10 ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov edi 0x3
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x468 ] eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x464 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x460 ] eax
mov [ esp ] 0x88
call sub_43b2d8
mov [ esp + 0x45c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x458 ] eax
mov eax [ esp + 0x468 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x464 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x460 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x45c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x458 ]
mov [ esp + 0x10 ] eax
mov eax 0x0
mov [ esp + 0x34 ] eax
mov eax sub_4327d1
mov [ esp + 0x14 ] eax
mov eax 0x62
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax [ r--data ]
mov [ esp + 0x4 ] eax
mov [ esp ] r--data
call sub_43f758
mov edi eax
mov [ esp + 0xc ] edi
mov [ esp + 0x4 ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] edi
call sub_43f9d4
mov eax r--data
mov ebx r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x454 ] eax
mov eax [ esp + 0x454 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov eax 0x21
mov [ esp + 0xc ] eax
mov eax 0x43
mov [ esp + 0x8 ] eax
mov eax 0x2
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43b744
mov eax 0x14
mov [ esp + 0x4 ] eax
mov [ esp ] ebp
call sub_43b729
mov edi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x450 ] eax
mov [ esp ] ebx
mov ebp r--data
call sub_43b2d8
mov [ esp + 0x44c ] eax
mov eax [ esp + 0x450 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x44c ]
mov [ esp + 0xc ] eax
mov eax sub_439e37
mov [ esp + 0x10 ] eax
mov eax 0x75
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bb7f
xor ebx ebx
mov [ edi ] eax
mov [ eax + 0xc ] ebx
mov eax [ edi ]
mov [ eax + 0x20 ] 0x7
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x448 ] eax
mov eax [ esp + 0x448 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
xor ebp ebp
inc ebp
mov [ eax + 0xc ] ebp
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x444 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x440 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x43c ] eax
mov ebx 0x32
mov eax [ esp + 0x444 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x440 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x43c ]
mov [ esp + 0x10 ] eax
mov eax sub_439e37
mov [ esp + 0x14 ] eax
mov eax 0x72
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ edi + 0x4 ] eax
mov [ eax + 0xc ] ebp
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x438 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x434 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x430 ] eax
mov eax [ esp + 0x438 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x434 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x430 ]
mov [ esp + 0x10 ] eax
mov eax sub_439e37
mov [ esp + 0x14 ] eax
mov eax 0x6e
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ edi + 0x8 ] eax
mov [ eax + 0xc ] ebp
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x42c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x428 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x424 ] eax
mov ebx sub_439e37
mov eax [ esp + 0x42c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x428 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x424 ]
mov [ esp + 0x10 ] eax
mov eax sub_439e37
mov [ esp + 0x14 ] eax
mov eax 0x32
mov [ esp + 0xc ] eax
mov eax 0x65
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ edi + 0xc ] eax
mov [ eax + 0xc ] ebp
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x420 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x41c ] eax
mov eax [ esp + 0x420 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x41c ]
mov [ esp + 0xc ] eax
mov eax 0x6d
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bafd
mov [ edi + 0x10 ] eax
mov [ eax + 0xc ] ebp
mov eax 0x64
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
call sub_43b744
cmp [ esp + 0x800 ] 0x0
js r-xdata
jmp r-xdata
cmp [ esp + 0x7fc ] 0x0
je r-xdata
mov ebp [ esp + 0x7f8 ]
mov edi r--data
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0xffffffff
call sub_43b2d8
mov [ esp + 0x418 ] eax
mov [ esp ] 0x6
call sub_43b2d8
mov [ esp + 0x414 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x410 ] eax
mov eax [ esp + 0x418 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x414 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x410 ]
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x14 ] sub_4328ea
mov [ esp + 0xc ] 0x14
mov [ esp + 0x8 ] 0x6b
mov [ esp + 0x4 ] r--data
call sub_43b885
cmp [ esp + 0x7fc ] 0x0
je r-xdata
mov eax [ esp + 0x7f8 ]
mov esi r--data
mov [ esp + 0x4 ] esi
mov edi eax
mov [ esp ] edi
mov [ esp + 0x8 ] r--data
call sub_43b51f
xor eax eax
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] esi
mov [ esp ] edi
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x4
call sub_43b2d8
mov [ esp + 0x378 ] eax
mov eax 0x3
mov ebp 0x3
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x374 ] eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
xor ebx ebx
mov [ esp + 0x370 ] eax
inc ebx
mov [ esp ] ebx
call sub_43b2d8
xor edi edi
mov [ esp + 0x36c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x368 ] eax
mov [ esp ] 0xd
call sub_43b2d8
mov [ esp + 0x364 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x360 ] eax
mov eax [ esp + 0x378 ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x374 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x370 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x36c ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x368 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x364 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x360 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x44 ] edi
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x3c ] r--data
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax 0x2
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov [ esp + 0xc ] 0x14
mov [ esp + 0x8 ] 0x50
call sub_43b744
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x35c ] eax
mov [ esp ] 0xe
call sub_43b2d8
mov edi r--data
mov [ esp + 0x358 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x354 ] eax
mov ebp sub_4328ea
mov ebx 0x64
mov eax [ esp + 0x35c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x358 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x354 ]
mov [ esp + 0x10 ] eax
mov eax sub_4328ea
mov [ esp + 0x14 ] eax
mov eax 0x64
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x8 ] 0x79
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ esp ] 0xffffffff
call sub_43b2d8
mov [ esp + 0x350 ] eax
mov [ esp ] 0xf
call sub_43b2d8
mov [ esp + 0x34c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x348 ] eax
mov eax [ esp + 0x350 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x34c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x348 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebp
mov [ esp + 0xc ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x70
mov ebp sub_4328ea
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
inc ecx
mov [ eax + 0xc ] ecx
mov [ esp + 0x8 ] ebx
mov [ esp + 0x4 ] ecx
mov ebx 0x64
mov edi ecx
mov [ esp ] esi
call sub_43b744
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x344 ] eax
mov [ esp ] 0xa
call sub_43b2d8
mov edi r--data
mov [ esp + 0x340 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x33c ] eax
mov eax [ esp + 0x344 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x340 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x33c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebp
mov [ esp + 0xc ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x65
mov ebx 0x64
mov [ esp + 0x4 ] r--data
call sub_43b885
mov eax 0xc
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x338 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x334 ] eax
mov eax [ esp + 0x338 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x334 ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_432878
mov [ esp + 0x8 ] 0x78
mov [ esp + 0x4 ] r--data
call sub_43bef3
xor edi edi
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x330 ] eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
xor ebp ebp
mov [ esp + 0x32c ] eax
inc ebp
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x328 ] eax
mov [ esp ] 0xb
call sub_43b2d8
mov [ esp + 0x324 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x320 ] eax
mov eax [ esp + 0x330 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x32c ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x328 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x324 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x320 ]
mov [ esp + 0x10 ] eax
mov eax r--data
mov [ esp + 0x34 ] edi
mov [ esp + 0x2c ] eax
mov eax r--data
mov [ esp + 0x1c ] eax
mov eax sub_4327d1
mov [ esp + 0x14 ] eax
mov eax 0x3
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] ebx
mov [ esp ] esi
mov [ esp + 0x24 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] ebp
mov edi ebp
call sub_43b2d8
mov [ esp + 0x31c ] eax
mov [ esp ] 0x10
call sub_43b2d8
mov [ esp + 0x318 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x314 ] eax
mov ebx sub_4328ea
mov ebp 0x3c
mov eax [ esp + 0x31c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x318 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x314 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x75
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x310 ] eax
mov [ esp ] 0x11
call sub_43b2d8
mov [ esp + 0x30c ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x308 ] eax
mov eax [ esp + 0x310 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x30c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x308 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp ] esi
mov [ esp + 0x8 ] 0x77
mov ebx sub_4328ea
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ eax + 0x24 ] edi
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x304 ] eax
mov [ esp ] 0x12
call sub_43b2d8
mov [ esp + 0x300 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x2fc ] eax
mov eax [ esp + 0x304 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x300 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2fc ]
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6d
mov [ esp + 0x4 ] r--data
call sub_43b885
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
xor edi edi
mov [ esp + 0x2f8 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x2f4 ] eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x2f0 ] eax
mov [ esp ] 0x13
call sub_43b2d8
mov [ esp + 0x2ec ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x2e8 ] eax
mov eax [ esp + 0x2f8 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x2f4 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x2f0 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x2ec ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2e8 ]
mov [ esp + 0x10 ] eax
mov eax r--data
mov [ esp + 0x34 ] edi
mov [ esp + 0x24 ] eax
mov eax r--data
mov [ esp + 0x1c ] eax
mov eax sub_4327d1
mov [ esp + 0x14 ] eax
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0xc ] 0x5
mov [ esp + 0x8 ] 0x72
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov al 0x1
mov [ esp + 0x5c ] eax
mov ebp [ esp + 0x7f8 ]
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x7
call sub_43b2d8
mov [ esp + 0x40c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x408 ] eax
mov ebx sub_432878
mov eax [ esp + 0x40c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x408 ]
mov [ esp + 0xc ] eax
mov eax 0x6e
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x8
call sub_43b2d8
mov [ esp + 0x404 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x400 ] eax
mov eax [ esp + 0x404 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x400 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3fc ] eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3f8 ] eax
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3f4 ] eax
mov eax 0x3
mov ebx 0x3
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3f0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x3ec ] eax
mov ecx 0x34
mov edx sub_4327d1
mov eax [ esp + 0x3fc ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x3f8 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x3f4 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x3f0 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x3ec ]
mov [ esp + 0x10 ] eax
mov eax 0x0
mov [ esp + 0x40 ] eax
mov [ esp + 0x2c ] ecx
mov ecx 0x75
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov [ esp + 0x38 ] 0x36
mov [ esp + 0x34 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x1c ] r--data
call sub_43b9aa
mov [ esp ] ebx
call sub_44420b
test eax eax
mov eax r--data
mov ebx r--data
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
cmovne ebx eax
call sub_43b5be
mov esi eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3e8 ] eax
mov [ esp ] 0x9
call sub_43b2d8
mov [ esp + 0x3e4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x3e0 ] eax
mov edi sub_4328ea
mov eax [ esp + 0x3e8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x3e4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x3e0 ]
mov [ esp + 0x10 ] eax
mov eax sub_4328ea
mov [ esp + 0x14 ] eax
mov eax 0x64
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6d
call sub_43b885
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
xor ebp ebp
mov esi eax
inc ebp
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x3dc ] eax
mov eax 0x34
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3d8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x3d4 ] eax
mov eax [ esp + 0x3dc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x3d8 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x3d4 ]
mov [ esp + 0x10 ] eax
mov eax 0x32
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] eax
mov eax 0x75
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43b885
call sub_48f5eb
mov ebx eax
mov eax r--data
test ebx ebx
cmovne eax ebx
mov [ esp + 0x4 ] eax
mov [ esp ] r--data
call sub_43f758
mov edi eax
mov [ esp ] ebx
call sub_43f9d4
mov [ esp ] ebp
call sub_43b2d8
xor ebx ebx
mov [ esp + 0x3d0 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x3cc ] eax
mov [ esp ] 0x35
call sub_43b2d8
mov [ esp + 0x3c8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x3c4 ] eax
mov eax [ esp + 0x3d0 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x3cc ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x3c8 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x3c4 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x2c ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] eax
mov eax 0x4
mov [ esp + 0xc ] eax
mov eax 0x6e
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] edi
call sub_43f9d4
mov eax r--data
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x7f8 ]
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x3c0 ] eax
mov [ esp ] 0x30
call sub_43b2d8
mov [ esp + 0x3bc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x3b8 ] eax
mov ebx sub_4328ea
mov edi 0x32
mov eax [ esp + 0x3c0 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x3bc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x3b8 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x3b4 ] eax
mov [ esp ] 0x31
call sub_43b2d8
mov [ esp + 0x3b0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x3ac ] eax
mov eax [ esp + 0x3b4 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x3b0 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x3ac ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43b885
mov eax r--data
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x7f8 ]
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov ebx eax
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov edi eax
mov esi 0x14
mov eax 0x2
mov [ esp + 0xc ] esi
mov [ esp + 0x4 ] eax
mov [ esp ] edi
mov [ esp + 0x8 ] 0x50
call sub_43b744
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
call sub_43b729
mov esi eax
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3a8 ] eax
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x3a4 ] eax
mov eax r--data
mov ebp r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x3a0 ] eax
mov ebx 0x3c
mov eax [ esp + 0x3a8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x3a4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x3a0 ]
mov [ esp + 0x10 ] eax
mov eax sub_43a177
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebx
mov [ esp ] edi
mov [ esp + 0x8 ] 0x76
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
mov [ esi ] eax
mov [ eax + 0xc ] ecx
mov [ esp ] ecx
call sub_43b2d8
mov [ esp + 0x39c ] eax
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x398 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x394 ] eax
mov ebp sub_43a177
mov eax [ esp + 0x39c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x398 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x394 ]
mov [ esp + 0x10 ] eax
mov eax sub_43a177
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebx
mov [ esp ] edi
mov [ esp + 0x8 ] 0x6c
mov [ esp + 0x4 ] r--data
call sub_43b885
xor ecx ecx
mov [ esi + 0x4 ] eax
mov [ eax + 0xc ] ecx
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x390 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x38c ] eax
mov eax [ esp + 0x390 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x38c ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebp
mov ebp 0x64
mov [ esp + 0x8 ] ebp
mov [ esp ] edi
mov [ esp + 0x4 ] r--data
call sub_43bafd
xor ebx ebx
mov [ esi + 0x8 ] eax
inc ebx
mov [ eax + 0xc ] ebx
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x388 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x384 ] eax
mov eax [ esp + 0x388 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x384 ]
mov [ esp + 0xc ] eax
mov eax sub_43a177
mov [ esp + 0x10 ] eax
mov [ esp ] edi
mov [ esp + 0x8 ] 0x72
mov [ esp + 0x4 ] r--data
call sub_43bafd
mov ecx ebx
mov [ esi + 0xc ] eax
mov [ eax + 0xc ] ecx
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ecx
mov [ esp ] edi
call sub_43b744
mov [ esp ] esi
call sub_43b2d8
mov [ esp + 0x380 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x37c ] eax
mov eax [ esp + 0x380 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x37c ]
mov [ esp + 0xc ] eax
mov eax sub_43a177
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] eax
mov [ esp ] edi
call sub_43bb7f
mov ecx 0x3
mov [ esi + 0x10 ] eax
mov [ eax + 0x20 ] ecx
mov ecx 0x2
mov eax [ esi + 0x10 ]
mov [ eax + 0x30 ] ecx
mov eax 0x4
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
call sub_43f807
mov ecx [ esi + 0x10 ]
mov [ ecx + 0x34 ] eax
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x34 ]
mov [ eax ] 0x1e
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x4 ] 0x46
cmp [ esp + 0x800 ] 0x1
mov [ esp + 0x5c ] 0x0
je r-xdata
mov [ esp ] 0x4f
call sub_43b2d8
mov [ esp + 0x2c4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x2c0 ] eax
mov edi sub_432878
mov eax [ esp + 0x2c4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2c0 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6b
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x50
call sub_43b2d8
mov [ esp + 0x2bc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x2b8 ] eax
mov eax [ esp + 0x2bc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2b8 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6d
mov [ esp + 0x4 ] r--data
call sub_43bef3
test ebx ebx
jne r-xdata
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
xor edi edi
mov [ esp + 0x2e4 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x2e0 ] eax
mov [ esp ] 0x37
call sub_43b2d8
mov [ esp + 0x2dc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x2d8 ] eax
mov ebp 0x2
mov eax [ esp + 0x2e4 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x2e0 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x2dc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2d8 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x34 ] edi
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebp
mov [ esp + 0x8 ] edi
mov [ esp ] esi
mov [ esp + 0x2c ] 0x66
mov [ esp + 0x28 ] r--data
mov [ esp + 0x20 ] 0x62
mov [ esp + 0x1c ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x2d4 ] eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x2d0 ] eax
mov [ esp ] 0x38
call sub_43b2d8
mov [ esp + 0x2cc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x2c8 ] eax
mov eax [ esp + 0x2d4 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x2d0 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x2cc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2c8 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x2c ] edi
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp ] esi
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov eax 0x3
cmp [ esp + 0x800 ] eax
mov [ esp ] eax
sete bl
call sub_44420b
or bl [ esp + 0x5c ]
cmp bl 0x1
jne r-xdata
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov ebx [ esp + 0x7fc ]
mov esi eax
test ebx ebx
jne r-xdata
jmp r-xdata
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x1
call sub_43b2d8
mov [ esp + 0x2b4 ] eax
mov [ esp ] 0x36
call sub_43b2d8
mov [ esp + 0x2b0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x2ac ] eax
mov eax [ esp + 0x2b4 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x2b0 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2ac ]
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x14 ] sub_4328ea
mov [ esp + 0xc ] 0x32
mov [ esp + 0x8 ] 0x6c
mov [ esp + 0x4 ] r--data
call sub_43b885
mov ecx [ esp + 0x7e0 ]
call sub_497c4a
add esp 0x7e4
pop esi
pop edi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
mov edi [ esp + 0x804 ]
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b51f
cmp [ esp + 0x7fc ] 0x0
je r-xdata
mov ebx r--data
mov [ esp + 0x4 ] ebx
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x1
call sub_43b2d8
mov [ esp + 0x2a4 ] eax
mov [ esp ] 0x14
call sub_43b2d8
mov [ esp + 0x2a0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x29c ] eax
mov eax [ esp + 0x2a4 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x2a0 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x29c ]
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x14 ] sub_4328ea
mov [ esp + 0xc ] 0x64
mov [ esp + 0x8 ] 0x72
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ esp + 0x4 ] ebx
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x2d
call sub_43b2d8
mov [ esp + 0x298 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x294 ] eax
mov eax [ esp + 0x298 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x294 ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_432878
mov [ esp + 0x8 ] 0x6e
mov [ esp + 0x4 ] r--data
call sub_43bef3
cmp edi 0x1
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0xaa
call sub_43b2d8
mov ebp r--data
mov [ esp + 0x288 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x284 ] eax
mov ebx sub_432878
mov eax [ esp + 0x288 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x284 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x280 ] eax
mov eax [ esp + 0x280 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov [ esp ] 0xab
call sub_43b2d8
mov [ esp + 0x27c ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x278 ] eax
mov eax [ esp + 0x27c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x278 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x75
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0xac
call sub_43b2d8
mov [ esp ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp + 0x274 ] eax
call sub_43b2d8
mov [ esp + 0x270 ] eax
mov eax [ esp + 0x274 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x270 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x64
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
xor ebx ebx
mov esi eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x26c ] eax
mov [ esp ] 0x3
call sub_43b2d8
mov [ esp + 0x268 ] eax
mov [ esp ] 0x21
call sub_43b2d8
mov [ esp + 0x264 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x260 ] eax
mov eax [ esp + 0x26c ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x268 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x264 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x260 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp ] esi
mov [ esp + 0x2c ] 0x31
mov [ esp + 0x28 ] r--data
mov [ esp + 0x20 ] 0x32
mov [ esp + 0x1c ] r--data
mov [ esp + 0x14 ] sub_4327d1
mov [ esp + 0xc ] 0x2
mov [ esp + 0x4 ] r--data
call sub_43b9aa
mov ebx edi
xor edi edi
mov [ esp + 0xc ] edi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b5be
mov [ esp ] edi
mov esi eax
mov edi ebx
call sub_43b2d8
mov [ esp + 0x2a8 ] eax
mov eax [ esp + 0x2a8 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
cmp edi 0xffffffff
je r-xdata
cmp edi 0xffffffff
jne r-xdata
cmp [ esp + 0x7fc ] 0x0
je r-xdata
cmp edi 0x1
je r-xdata
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x99
call sub_43b2d8
mov edi r--data
mov [ esp + 0x134 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x130 ] eax
mov ebx sub_432878
mov eax [ esp + 0x134 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x130 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x9a
call sub_43b2d8
mov [ esp + 0x12c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x128 ] eax
mov eax [ esp + 0x12c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x128 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax 0x14
mov [ esp + 0xc ] eax
mov eax 0x3
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] 0x19
mov [ esp + 0x8 ] 0x37
call sub_43b744
mov eax r--data
mov ebx r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x124 ] eax
mov eax [ esp + 0x124 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov [ eax + 0xc ] 0x10000
mov [ esp ] ebp
mov [ esp + 0x4 ] 0x1c
call sub_43b729
mov edi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp ] ebx
mov [ esp + 0x120 ] eax
mov ebx r--data
call sub_43b2d8
mov [ esp + 0x11c ] eax
mov ebp sub_43aa4b
mov eax [ esp + 0x120 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x11c ]
mov [ esp + 0xc ] eax
mov eax sub_43aa4b
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x8 ] 0x72
mov [ esp + 0x4 ] r--data
call sub_43bafd
mov ecx 0x2
mov [ edi + 0x4 ] eax
mov [ eax + 0xc ] ecx
xor ecx ecx
mov eax [ edi + 0x4 ]
inc ecx
mov [ eax + 0x8 ] ecx
mov [ esp ] edi
call sub_43b2d8
mov [ esp ] ebx
mov [ esp + 0x118 ] eax
mov ebx r--data
call sub_43b2d8
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x118 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x114 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebp
xor ebp ebp
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
call sub_43bb7f
mov ecx 0x3
mov [ edi + 0x8 ] eax
mov [ eax + 0x20 ] ecx
mov ecx 0x2
mov eax [ edi + 0x8 ]
mov [ eax + 0x30 ] ecx
mov eax 0x4
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
call sub_43f807
mov ecx [ edi + 0x8 ]
mov [ ecx + 0x34 ] eax
mov ecx 0x14
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x34 ]
mov [ eax ] ecx
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x4 ] 0x50
mov eax [ edi + 0x4 ]
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43be44
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x110 ] eax
mov eax [ esp + 0x110 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x10c ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x108 ] eax
mov ebx sub_43aa4b
mov eax [ esp + 0x10c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x108 ]
mov [ esp + 0xc ] eax
mov eax 0x64
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bafd
mov ecx 0x2
mov [ edi ] eax
mov [ eax + 0xc ] ecx
xor ecx ecx
mov eax [ edi ]
inc ecx
mov [ eax + 0x8 ] ecx
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x104 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x100 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0xfc ] eax
mov eax [ esp + 0x104 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x100 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xfc ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp ] esi
mov [ esp + 0xc ] 0x28
mov [ esp + 0x8 ] 0x73
mov ebx sub_43aa4b
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ edi + 0xc ] eax
mov [ eax + 0xc ] ebp
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0xf8 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0xf4 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0xf0 ] eax
mov eax [ esp + 0xf8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0xf4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xf0 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp ] esi
mov [ esp + 0xc ] 0x43
mov [ esp + 0x8 ] 0x69
mov ebx sub_43aa4b
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ edi + 0x10 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0xec ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0xe8 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0xe4 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0xe0 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0xdc ] eax
mov eax [ esp + 0xec ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0xe8 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0xe4 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0xe0 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xdc ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x40 ] ebp
mov [ esp + 0x14 ] ebx
mov ebx 0x3
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
mov [ esp + 0x38 ] 0x79
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] 0x6d
mov [ esp + 0x28 ] r--data
mov [ esp + 0x20 ] 0x6c
mov [ esp + 0x1c ] r--data
call sub_43b9aa
mov [ edi + 0x14 ] eax
mov eax 0x2
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0xd8 ] eax
xor eax eax
inc eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0xd4 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0xd0 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0xcc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0xc8 ] eax
mov eax [ esp + 0xd8 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0xd4 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0xd0 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0xcc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xc8 ]
mov [ esp + 0x10 ] eax
mov eax 0x34
mov [ esp + 0x40 ] ebp
mov [ esp + 0x2c ] eax
mov eax sub_43aa4b
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebx
mov ebx [ esp + 0x7f8 ]
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
mov [ esp + 0x38 ] 0x36
mov [ esp + 0x34 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x20 ] 0x75
mov [ esp + 0x1c ] r--data
call sub_43b9aa
mov [ edi + 0x18 ] eax
mov eax [ edi ]
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43be44
mov eax 0x64
mov [ esp + 0x8 ] eax
xor eax eax
inc eax
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43b744
cmp [ esp + 0x7fc ] 0x0
jne r-xdata
cmp edi 0x1
je r-xdata
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x17
call sub_43b2d8
mov [ esp + 0x290 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x28c ] eax
mov eax [ esp + 0x290 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x28c ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_432878
mov [ esp + 0x8 ] 0x65
mov [ esp + 0x4 ] r--data
call sub_43bef3
cmp [ esp + 0x7fc ] 0x0
jne r-xdata
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
mov [ esp + 0x4 ] r--data
call sub_43b5be
mov esi eax
mov eax 0x2
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov [ esp + 0xc ] 0x19
mov [ esp + 0x8 ] 0x4b
call sub_43b744
mov eax r--data
mov ebx r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x230 ] eax
mov eax [ esp + 0x230 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
xor ebp ebp
mov [ eax + 0xc ] ebp
mov eax [ esp + 0x7f8 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0x10
call sub_43b729
mov edi eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x22c ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x228 ] eax
mov ebx sub_43a4de
mov eax [ esp + 0x22c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x228 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x72
mov [ esp + 0x4 ] r--data
call sub_43bafd
xor ecx ecx
mov [ edi + 0x4 ] eax
inc ecx
mov [ eax + 0xc ] ecx
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x224 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x220 ] eax
mov eax [ esp + 0x224 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x220 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
call sub_43bb7f
mov ecx 0x2
mov [ edi + 0x8 ] eax
mov [ eax + 0x20 ] ecx
mov eax [ edi + 0x8 ]
mov [ eax + 0x38 ] ebp
mov eax [ edi + 0x4 ]
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43be44
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x21c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x218 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x214 ] eax
mov eax [ esp + 0x21c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x218 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x214 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp ] esi
mov [ esp + 0xc ] 0x50
mov [ esp + 0x8 ] 0x6b
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ edi + 0xc ] eax
mov [ eax + 0xc ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x210 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x20c ] eax
mov eax [ esp + 0x210 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20c ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x79
mov [ esp + 0x4 ] r--data
call sub_43bafd
xor ecx ecx
mov [ edi ] eax
inc ecx
mov [ eax + 0xc ] ecx
mov [ esp + 0x4 ] ecx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x64
call sub_43b744
cmp edi 0xffffffff
je r-xdata
mov eax [ esp + 0x7f8 ]
mov ebp r--data
mov [ esp + 0x4 ] ebp
mov [ esp ] eax
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax r--data
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x7f8 ]
mov [ esp + 0x4 ] ebp
mov [ esp ] eax
mov [ esp + 0xc ] r--data
call sub_43b5be
mov esi eax
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x25c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x258 ] eax
mov eax [ esp + 0x25c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x258 ]
mov [ esp + 0xc ] eax
mov eax 0x73
mov [ esp + 0x8 ] eax
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_43a3a8
call sub_43bca8
mov ecx 0x5
mov [ eax + 0x20 ] ecx
mov eax [ esp + 0x7f8 ]
mov [ esp + 0x4 ] ebp
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0xffffffff
call sub_43b2d8
mov [ esp + 0x254 ] eax
mov [ esp ] 0x1a
call sub_43b2d8
mov [ esp + 0x250 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x24c ] eax
mov ebx sub_4328ea
mov ebp 0x14
mov eax [ esp + 0x254 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x250 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43b885
mov [ esp ] 0x10
call sub_43b2d8
mov [ esp + 0x248 ] eax
mov [ esp ] 0x1b
call sub_43b2d8
mov [ esp + 0x244 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x240 ] eax
mov eax [ esp + 0x248 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x244 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x240 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x78
mov [ esp + 0x4 ] r--data
call sub_43b885
mov ebp [ esp + 0x7f8 ]
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x23c ] eax
mov eax [ esp + 0x23c ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
call sub_43b5be
mov esi eax
xor eax eax
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x238 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x234 ] eax
mov eax [ esp + 0x238 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x234 ]
mov [ esp + 0xc ] eax
mov eax 0x73
mov [ esp + 0x8 ] eax
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_43a443
call sub_43bca8
mov ecx 0x5
mov [ eax + 0x20 ] ecx
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax r--data
mov [ esp + 0xc ] eax
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
call sub_43b5be
mov esi eax
mov [ esp ] 0xa5
call sub_43b2d8
mov [ esp + 0xc4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0xc0 ] eax
mov edi sub_43adfb
mov ebp 0x14
mov eax [ esp + 0xc4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xc0 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x32
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0xa3
call sub_43b2d8
mov [ esp + 0xbc ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0xb8 ] eax
mov eax [ esp + 0xbc ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xb8 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6b
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0xa7
call sub_43b2d8
mov [ esp + 0xb4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0xb0 ] eax
mov eax [ esp + 0xb4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xb0 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6a
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0xa8
call sub_43b2d8
mov [ esp + 0xac ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0xa8 ] eax
mov eax [ esp + 0xac ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xa8 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x71
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0xa4
call sub_43b2d8
mov [ esp + 0xa4 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0xa0 ] eax
mov eax [ esp + 0xa4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xa0 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x78
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax r--data
mov [ esp + 0xc ] eax
mov eax r--data
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] esi
mov [ esp ] ebx
call sub_43b5be
mov esi eax
mov [ esp ] 0xa1
call sub_43b2d8
mov [ esp + 0x9c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x98 ] eax
mov eax [ esp + 0x9c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x98 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0xa6
call sub_43b2d8
mov [ esp + 0x94 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x90 ] eax
mov eax [ esp + 0x94 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x64
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0x9f
call sub_43b2d8
mov [ esp + 0x8c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x88 ] eax
mov eax [ esp + 0x8c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6d
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0xa2
call sub_43b2d8
mov [ esp + 0x84 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x80 ] eax
mov eax [ esp + 0x84 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x80 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6e
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0xa0
call sub_43b2d8
mov [ esp + 0x7c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x7c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x78 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x65
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0x9c
call sub_43b2d8
mov [ esp + 0x74 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x70 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x69
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0x9d
call sub_43b2d8
mov [ esp + 0x6c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x68 ] eax
mov eax [ esp + 0x6c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43bc13
mov [ esp ] 0x9e
call sub_43b2d8
mov [ esp + 0x64 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x64 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x8 ] 0x72
mov [ esp + 0x4 ] r--data
call sub_43bc13
jmp r-xdata
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0xc ] edi
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x24
call sub_43b2d8
mov [ esp + 0x1f8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1f4 ] eax
mov ebx sub_432878
mov eax [ esp + 0x1f8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1f4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x64
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x23
call sub_43b2d8
mov [ esp + 0x1f0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1ec ] eax
mov eax [ esp + 0x1f0 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1ec ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x62
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x1c
call sub_43b2d8
mov [ esp + 0x1e8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1e4 ] eax
mov eax [ esp + 0x1e8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1e4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x25
call sub_43b2d8
mov [ esp + 0x1e0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1dc ] eax
mov eax [ esp + 0x1e0 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1dc ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6d
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x26
call sub_43b2d8
mov [ esp + 0x1d8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1d4 ] eax
mov eax [ esp + 0x1d8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1d4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x69
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x1d
call sub_43b2d8
mov [ esp + 0x1d0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1cc ] eax
mov eax [ esp + 0x1d0 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1cc ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x66
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x1e
call sub_43b2d8
mov [ esp + 0x1c8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1c4 ] eax
mov eax [ esp + 0x1c8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1c4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] edi
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x20
call sub_43b2d8
mov [ esp + 0x1c0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1bc ] eax
mov eax [ esp + 0x1c0 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x1bc ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x1c ] sub_432a2f
mov [ esp + 0x14 ] r--data
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] 0x6b
mov [ esp + 0x4 ] r--data
call sub_43bd38
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0xc ] edi
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x27
call sub_43b2d8
mov [ esp + 0x1b8 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1b4 ] eax
mov eax [ esp + 0x1b8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1b4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] 0x28
call sub_43b2d8
mov [ esp + 0x1b0 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x1ac ] eax
mov eax [ esp + 0x1b0 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1ac ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x6c
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov ebx [ r--data ]
cmp ebx 0x2
jl r-xdata
cmp edi 0x1
je r-xdata
mov edi r--data
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax [ esp + 0x7f8 ]
xor ebp ebp
mov [ esp + 0xc ] ebp
mov [ esp + 0x4 ] edi
mov [ esp ] eax
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x16
call sub_43b2d8
mov [ esp + 0x198 ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x194 ] eax
mov eax [ esp + 0x198 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x194 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov eax [ esp + 0x7f8 ]
mov [ esp + 0x4 ] edi
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov eax [ esp + 0x7f8 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0x10
call sub_43b729
mov edi eax
mov eax r--data
mov ebx r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x190 ] eax
mov eax [ esp + 0x190 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x18c ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x188 ] eax
mov eax [ esp + 0x18c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x188 ]
mov [ esp + 0xc ] eax
mov eax sub_43a7dc
mov [ esp + 0x10 ] eax
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
call sub_43bb7f
mov [ edi + 0xc ] eax
mov [ eax + 0x20 ] 0x8
mov ecx 0x2
mov ebx 0x2
mov eax [ edi + 0xc ]
mov [ eax + 0x30 ] ecx
mov [ esp ] ecx
mov [ esp + 0x4 ] 0x4
call sub_43f807
mov ecx [ edi + 0xc ]
mov [ ecx + 0x34 ] eax
mov eax [ edi + 0xc ]
mov eax [ eax + 0x34 ]
mov [ eax ] 0x28
mov eax [ edi + 0xc ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x4 ] 0x3c
mov eax 0x19
mov [ esp + 0xc ] eax
mov eax 0x4b
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ebx
mov [ esp ] esi
call sub_43b744
mov ebx r--data
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x184 ] eax
mov eax [ esp + 0x184 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
mov [ eax + 0xc ] ebp
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x180 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x17c ] eax
mov ebx sub_43a7dc
mov eax [ esp + 0x180 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x17c ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43bafd
xor ecx ecx
mov [ edi + 0x8 ] eax
inc ecx
mov [ eax + 0xc ] ecx
mov eax [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax 0x64
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
mov [ esp ] esi
call sub_43b744
mov eax 0x19
mov [ esp + 0xc ] eax
mov eax 0x4b
mov [ esp + 0x8 ] eax
mov eax 0x2
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43b744
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x178 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x174 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x170 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x16c ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x168 ] eax
mov eax [ esp + 0x178 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x174 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x170 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x16c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x168 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x40 ] ebp
mov [ esp + 0x38 ] ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x20 ] ebp
mov [ esp + 0x14 ] ebx
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
mov [ esp + 0x34 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x1c ] r--data
mov ebx sub_43a7dc
mov [ esp + 0xc ] 0x3
call sub_43b9aa
mov [ edi ] eax
mov [ eax + 0xc ] ebp
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x164 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x160 ] eax
mov eax r--data
mov [ esp ] eax
call sub_43b2d8
mov [ esp + 0x15c ] eax
mov eax [ esp + 0x164 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x160 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x15c ]
mov [ esp + 0x10 ] eax
mov eax 0x64
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebp
mov [ esp ] esi
call sub_43b885
xor ebx ebx
mov [ edi + 0x4 ] eax
inc ebx
mov [ eax + 0xc ] ebx
mov eax [ edi + 0x8 ]
mov [ esp + 0x4 ] eax
mov [ esp ] esi
call sub_43be44
mov eax [ esp + 0x7f8 ]
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] eax
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov eax [ esp + 0x7f8 ]
mov [ esp + 0x4 ] esi
mov [ esp ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
mov esi eax
mov [ esp ] 0x95
call sub_43b2d8
mov edi r--data
mov [ esp + 0x158 ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x154 ] eax
mov eax [ esp + 0x158 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x154 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x8 ] 0x65
mov [ esp + 0x4 ] r--data
call sub_43bef3
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x150 ] eax
mov [ esp ] 0x96
call sub_43b2d8
mov [ esp + 0x14c ] eax
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x148 ] eax
mov eax [ esp + 0x150 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x14c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x148 ]
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x14 ] sub_4328ea
mov [ esp + 0xc ] 0x32
mov [ esp + 0x8 ] 0x78
mov [ esp + 0x4 ] r--data
call sub_43b885
mov edi 0x2
mov [ esp ] edi
call sub_43b2d8
mov [ esp + 0x144 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x140 ] eax
mov [ esp ] 0x97
call sub_43b2d8
mov [ esp + 0x13c ] eax
mov [ esp ] r--data
call sub_43b2d8
mov [ esp + 0x138 ] eax
mov eax [ esp + 0x144 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x140 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x13c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x138 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x2c ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x14 ] sub_4327d1
mov [ esp + 0x8 ] 0x75
mov [ esp + 0x4 ] r--data
call sub_43b9aa
xor edi edi
mov [ esp ] edi
call sub_43b2d8
mov ebp r--data
mov [ esp + 0x1a8 ] eax
mov [ esp ] ebp
call sub_43b2d8
mov [ esp + 0x1a4 ] eax
mov eax [ esp + 0x1a8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1a4 ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_43a706
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43bca8
mov [ eax + 0x20 ] ebx
mov [ esp ] 0x2a
call sub_43b2d8
mov [ esp ] ebp
mov ebp [ esp + 0x7f8 ]
mov [ esp + 0x1a0 ] eax
call sub_43b2d8
mov [ esp + 0x19c ] eax
mov eax [ esp + 0x1a0 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x19c ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x1c ] sub_432a2f
mov [ esp + 0x14 ] r--data
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43bd38
jmp r-xdata
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0x8 ] r--data
call sub_43b51f
mov [ esp + 0x4 ] esi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
xor edi edi
mov esi eax
mov [ esp ] edi
call sub_43b2d8
mov ebx r--data
mov [ esp + 0x208 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x204 ] eax
mov eax [ esp + 0x208 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x204 ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_43a66b
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43bca8
mov [ eax + 0x20 ] 0x6
mov [ esp ] 0x22
call sub_43b2d8
mov [ esp + 0x200 ] eax
mov [ esp ] ebx
call sub_43b2d8
mov [ esp + 0x1fc ] eax
mov eax [ esp + 0x200 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1fc ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_432878
mov [ esp + 0x8 ] 0x69
mov [ esp + 0x4 ] r--data
call sub_43bef3
cmp [ esp + 0x7fc ] 0x0
jne r-xdata
sub_439428
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov eax [ esp + 0x3c ]
mov ebp [ esp + 0x38 ]
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x30 ]
mov ecx [ rw-data ]
mov [ esp + 0x18 ] ecx
cmp eax 0x2
mov esi [ ebx + 0x14 ]
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ esp + 0x18 ]
call sub_497c4a
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esi + 0x2c ]
call sub_43f9d4
add esp 0x4
mov [ esp + 0xc ] edi
push edi
push ebx
call sub_482d22
add esp 0x8
mov ecx eax
mov [ esi + 0x2c ] ecx
mov [ esp + 0x8 ] esi
mov ebp [ esi + 0x1c ]
test ebp ebp
mov [ esp + 0x4 ] ebp
jle r-xdata
mov [ esp + 0x14 ] 0x0
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
xor eax eax
cmp ebp [ esp + 0x4 ]
sete al
sub ebp eax
push ebp
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
push [ eax + 0x4 ]
call sub_483079
jmp r-xdata
mov eax [ esp + 0x8 ]
xor edi edi
dec edi
mov eax [ eax + 0x20 ]
mov [ esp ] eax
mov ebp [ esp + 0x4 ]
cmp [ esi + 0x4 ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
add esp 0xc
jmp r-xdata
lea eax [ ebp + edi ]
mov ebx eax
shr ebx 0x1f
add ebx eax
mov eax [ esp ]
sar ebx 0x1
push [ eax + ebx * 4 ]
push ecx
mov esi ecx
call sub_4a7d00
mov ecx esi
add esp 0x8
test eax eax
cmovle ebp ebx
cmovg edi ebx
mov eax ebp
sub eax edi
cmp eax 0x1
jg r-xdata
lea eax [ esp + 0x14 ]
mov ecx esi
mov edx edi
push eax
push ebp
call sub_43aed6
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
cmp [ eax ] 0x0
jne r-xdata
test eax eax
je r-xdata
push [ esi + 0x2c ]
push edi
push ebx
call sub_482cd6
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
cmp ecx ebx
jne r-xdata
push ebp
push eax
call sub_444268
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
push edi
push [ esi + 0x4 ]
call sub_482f70
add esp 0x8
mov ebx eax
test ebx ebx
js r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
push edi
push ebx
call sub_483326
add esp 0x8
push edi
push ebx
call sub_482d69
add esp 0x8
cmp [ esi + 0x1c ] 0x0
mov ebp esi
jle r-xdata
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov ebx esi
lea esi [ ebx + 0x1c ]
push 0x0
push esi
call sub_447761
add esp 0x8
push 0x1
push esi
call sub_447761
add esp 0x8
push edi
push [ ebx ]
call sub_483447
add esp 0x8
push edi
push [ ebx + 0x4 ]
push ebx
push edi
call sub_483418
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
mov eax [ esi + 0x20 ]
push r--data
push [ eax + ebx * 4 ]
call sub_4a7d00
add esp 0x8
mov [ esp ] eax
push [ esi + 0x2c ]
call sub_43f9d4
add esp 0x4
cmp [ esp ] 0x0
je r-xdata
cmp ecx ebx
jne r-xdata
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_497c4a
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
jmp sub_483356
xor esi esi
push ebp
call sub_440120
add esp 0x4
test eax eax
je r-xdata
call sub_48340f
mov eax r--data
mov eax [ esi + 0x20 ]
mov eax [ eax + ebx * 4 ]
jmp r-xdata
push edi
push [ esi + 0x4 ]
call sub_482f70
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
call sub_481f67
add esp 0x8
cmp eax [ esi + 0x4 ]
jne r-xdata
push 0x1
push edi
jmp r-xdata
push 0x0
push edi
jmp r-xdata
mov eax [ ebp + 0x20 ]
push [ eax + esi * 4 ]
push edi
push ebx
call sub_482de2
add esp 0xc
inc esi
cmp esi [ ebp + 0x1c ]
jl r-xdata
push 0x1
push edi
jmp r-xdata
push eax
call sub_43f79e
add esp 0x4
mov [ esi + 0x2c ] eax
push edi
jmp r-xdata
mov ebx esi
mov ecx [ ebx + 0x20 ]
lea esi [ ebx + 0x1c ]
push [ ecx + eax * 4 ]
call sub_49468e
add esp 0x4
push 0x0
push esi
call sub_447761
add esp 0x8
push 0x1
push esi
call sub_447761
add esp 0x8
push edi
push [ ebx + 0x4 ]
jmp r-xdata
push ebp
call sub_440120
add esp 0x4
test eax eax
je r-xdata
push ebp
call sub_440120
add esp 0x4
test eax eax
je r-xdata
call sub_48342e
jmp r-xdata
call sub_483447
push edi
push 0x1
push edi
call sub_43179c
mov ebx eax
lea eax [ esp + 0x10 ]
mov ecx esi
mov edx edi
mov [ eax ] 0x0
push eax
push ebx
call sub_43aed6
add esp 0x8
test eax eax
je r-xdata
add esp 0x8
push edi
call sub_48340f
add esp 0x4
push ebx
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
call sub_431816
jmp r-xdata
push edi
call sub_48340f
add esp 0x4
push ebx
call sub_440120
add esp 0x4
test eax eax
je r-xdata
add esp 0x4
jmp r-xdata
push ebx
push ebp
call sub_431854
add esp 0x8
push 0x1
push edi
call sub_48342e
add esp 0x8
jmp r-xdata
push ebx
sub_4397d9
push ebx
push edi
push esi
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
cmp eax 0x2
je r-xdata
push ebx
push esi
call sub_482d22
add esp 0x8
mov esi eax
push 0x2
push edi
call sub_43194f
add esp 0x8
cmp eax 0x4
jne r-xdata
test eax eax
jne r-xdata
push esi
push 0x0
push edi
push esi
push 0x39
push edi
jmp r-xdata
pop esi
pop edi
pop ebx
retn
push 0x2
push edi
call sub_43194f
add esp 0x8
cmp eax 0x4
jne r-xdata
call sub_43203b
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
push r--data
push ebx
push esi
call sub_4830e1
add esp 0xc
push 0x0
push edi
call sub_431a8c
add esp 0x8
push eax
push ebx
push esi
push r--data
push ebx
push esi
call sub_4830e1
add esp 0xc
push 0x39
push edi
call sub_431a8c
add esp 0x8
push eax
push ebx
push esi
jmp r-xdata
call sub_482cd6
add esp 0xc
jmp r-xdata
sub_43988a
push ebx
push edi
push esi
sub esp 0x54
mov eax [ esp + 0x70 ]
mov ecx [ rw-data ]
mov ebx [ esp + 0x6c ]
mov edi [ esp + 0x68 ]
mov esi [ esp + 0x64 ]
cmp eax 0x2
mov [ esp + 0x50 ] ecx
je r-xdata
push edi
push esi
call sub_482d22
add esp 0x8
mov edi eax
push edi
call sub_4a65cf
add esp 0x4
mov esi eax
push edi
call sub_43f9d4
add esp 0x4
push 0x2
push ebx
call sub_43194f
add esp 0x8
cmp eax 0x4
jne r-xdata
test eax eax
jne r-xdata
push esi
push 0x1
push ebx
push esi
push 0x3a
push ebx
jmp r-xdata
mov ecx [ esp + 0x50 ]
call sub_497c4a
add esp 0x54
pop esi
pop edi
pop ebx
retn
push 0x2
push ebx
call sub_43194f
add esp 0x8
cmp eax 0x4
jne r-xdata
add esp 0xc
call sub_431ee3
jmp r-xdata
push r--data
push edi
push esi
call sub_4830e1
add esp 0xc
push 0x1
push ebx
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push r--data
push edi
push esi
call sub_4830e1
add esp 0xc
push 0x3a
push ebx
call sub_43194f
add esp 0x8
mov ecx esp
push eax
push r--data
push ecx
jmp r-xdata
mov [ esp ] 0x0
push 0x1
push ebx
call sub_43194f
add esp 0x8
mov ecx esp
push eax
push r--data
push ecx
call sub_432778
add esp 0xc
jmp r-xdata
mov eax esp
push eax
push edi
push esi
call sub_482cd6
sub_43998a
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
cmp eax 0x2
je r-xdata
push esi
push edi
call sub_482bba
add esp 0x8
mov esi eax
test esi esi
js r-xdata
test eax eax
jne r-xdata
push 0x13c
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp esi [ edi + 0x24 ]
jl r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x78
push ebx
call sub_43194f
add esp 0x8
mov edx [ edi + 0x24 ]
test edx edx
jle r-xdata
add esp 0xc
mov eax [ edi + 0x30 ]
push [ eax + esi * 4 ]
push 0x78
push ebx
call sub_431ee3
jmp r-xdata
xor ecx ecx
mov ebp [ edi + 0x30 ]
xor ecx ecx
push ecx
push esi
push edi
call sub_482b36
push 0x0
push 0x78
push ebx
call sub_431ee3
add esp 0xc
xor ecx ecx
cmp ecx edx
jne r-xdata
inc ecx
cmp ecx edx
jl r-xdata
cmp eax [ ebp + ecx * 4 ]
je r-xdata
jmp r-xdata
sub_439a30
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x28 ]
mov ecx [ rw-data ]
mov edi [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
cmp eax 0x2
mov [ esp + 0x4 ] ecx
je r-xdata
push ebp
push ebx
call sub_482d22
add esp 0x8
mov esi eax
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
test eax eax
jne r-xdata
push esi
push 0x81
push edi
call sub_43203b
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
mov [ esi ] 0x0
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push ebx
call sub_483326
add esp 0x8
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x81
push edi
call sub_431a8c
add esp 0x8
test eax eax
mov ecx r--data
cmovne ecx eax
push ecx
push ebp
push ebx
call sub_482cd6
add esp 0xc
push ebp
push ebx
call sub_483356
add esp 0x8
jmp r-xdata
push ebp
push ebx
call sub_482d69
add esp 0x8
push r--data
push ebp
push ebx
call sub_482de2
add esp 0xc
mov edi esp
push edi
call sub_492ae8
add esp 0x4
cmp [ edi ] 0x0
mov esi eax
jle r-xdata
push esi
call sub_492c41
add esp 0x4
mov edi [ esp + 0x24 ]
xor edi edi
push edi
push esi
call sub_492c0a
add esp 0x8
push eax
push ebp
push ebx
call sub_482de2
add esp 0xc
inc edi
cmp edi [ esp ]
jl r-xdata
sub_439b40
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
cmp eax 0x2
je r-xdata
push esi
push ebp
call sub_482bba
add esp 0x8
mov esi eax
test esi esi
js r-xdata
test eax eax
jne r-xdata
push 0x155
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp esi [ ebp + 0x24 ]
jl r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x4e
push edi
call sub_43194f
add esp 0x8
mov ebx 0x2
test eax eax
jne r-xdata
xor eax eax
test esi esi
setne al
push eax
push 0x4d
push edi
call sub_431ee3
add esp 0xc
xor eax eax
push eax
push 0x4e
push edi
push 0x0
push 0x4d
push edi
call sub_431ee3
add esp 0xc
push 0x1
push 0x4e
push edi
jmp r-xdata
cmp esi 0x2
jne r-xdata
cmp ebx [ ebp + 0x24 ]
jl r-xdata
push 0x4d
push edi
call sub_43194f
add esp 0x8
xor ebx ebx
test eax eax
setne bl
call sub_431ee3
push ebx
push esi
push ebp
call sub_482b36
jmp r-xdata
push 0x151
push r--data
push r--data
call sub_4a509d
add esp 0xc
add esp 0xc
sub_439c18
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
cmp eax 0x2
je r-xdata
push ebp
push ebx
call sub_482d22
add esp 0x8
mov esi eax
push esi
call sub_495baa
add esp 0x4
push eax
call sub_49603c
add esp 0x4
push eax
push 0x91
push edi
call sub_43203b
add esp 0xc
push esi
call sub_43f9d4
add esp 0x8
jmp r-xdata
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
add esp 0x4
push ebp
push ebx
call sub_483326
add esp 0x8
push 0x91
push edi
call sub_431a8c
add esp 0x8
push eax
call sub_495baa
add esp 0x4
push eax
call sub_49603c
add esp 0x4
mov [ esp ] eax
push ebp
push ebx
call sub_482d69
add esp 0x8
push 0x0
call sub_4960ec
add esp 0x4
test eax eax
je r-xdata
mov esi [ esp ]
push esi
push ebp
push ebx
call sub_482cd6
add esp 0xc
push esi
push 0x91
push edi
call sub_43203b
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
jmp sub_483356
xor esi esi
inc esi
push eax
push ebp
push ebx
call sub_482de2
add esp 0xc
push esi
call sub_4960ec
add esp 0x4
inc esi
test eax eax
jne r-xdata
sub_439d05
push ebp
push ebx
push edi
push esi
sub esp 0x68
mov ecx [ rw-data ]
mov esi [ esp + 0x7c ]
mov eax [ esp + 0x88 ]
mov ebp [ esp + 0x80 ]
mov [ esp + 0x64 ] ecx
cmp eax 0x1
mov edi [ esi + 0x14 ]
je r-xdata
cmp [ edi + 0x8 ] esi
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x64 ]
call sub_497c4a
add esp 0x68
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push [ edi + 0x4 ]
call sub_482d22
add esp 0x8
mov ebx eax
push ebx
call sub_4a65cf
add esp 0x4
mov esi eax
push ebx
call sub_43f9d4
add esp 0x4
mov eax [ edi ]
xor ebx ebx
cmp [ edi ] esi
jne r-xdata
mov eax [ edi ]
inc ebx
cmp ebx 0x80
jne r-xdata
push esi
push ebx
push 0x8f
push [ esp + 0x90 ]
call sub_431fad
add esp 0x10
push ebp
push esi
call sub_483326
add esp 0x8
push ebp
push esi
call sub_482d69
add esp 0x8
xor edi edi
mov ebp 0x20
mov ebx esp
push ebx
push ebp
push eax
call sub_48301a
add esp 0xc
test eax eax
je r-xdata
push ebp
push eax
call sub_483447
push edi
push 0x8f
push [ esp + 0x8c ]
call sub_4319e9
add esp 0xc
cmp edi 0x7f
mov ecx 0x20
cmovne ecx edi
cmp edi ebp
cmovle ecx ebp
push eax
push ecx
push edi
push edi
push r--data
push ebx
call sub_432778
add esp 0x18
push ebx
push [ esp + 0x84 ]
push esi
call sub_482de2
add esp 0xc
inc edi
cmp edi 0x80
jne r-xdata
push [ esp + 0x80 ]
push esi
call sub_483356
jmp r-xdata
add esp 0x8
sub_439e37
push ebp
push ebx
push edi
push esi
sub esp 0x3c
mov eax [ esp + 0x5c ]
mov ecx [ rw-data ]
cmp eax 0x4
mov [ esp + 0x38 ] ecx
ja r-xdata
mov ecx [ esp + 0x38 ]
call sub_497c4a
add esp 0x3c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x50 ]
mov ecx [ esp + 0x58 ]
mov edi [ esp + 0x54 ]
mov ebp [ ebx + 0x14 ]
jmp [ eax * 4 + jump_table_406724 ]
cmp [ ebp ] ebx
jne r-xdata
push edi
push ebx
call sub_483326
add esp 0x8
push edi
push ebx
call sub_482d69
add esp 0x8
mov esi 0xffffffa8
push [ esi + r--data ]
push edi
push ebx
call sub_482de2
add esp 0xc
add esi 0x4
jne r-xdata
push edi
push ebx
call sub_483356
add esp 0x8
mov ebx edi
jmp r-xdata
mov eax [ ebp + 0x4 ]
sub esp 0xc
mov esi r--data
mov [ esp + 0x8 ] esi
mov [ esp + 0x4 ] ebx
mov [ esp ] eax
call sub_482cd6
add esp 0xc
push esi
push ebx
push [ ebp + 0x8 ]
call sub_482cd6
add esp 0xc
push esi
push ebx
push [ ebp + 0xc ]
call sub_482cd6
add esp 0xc
jmp r-xdata
sub_439f2f
cmp [ ebp + 0x4 ] ebx
je r-xdata
push edi
push ebx
call sub_482d22
add esp 0x8
mov esi eax
push esi
call sub_4a65cf
add esp 0x4
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
cmp edi 0x100
mov eax 0xff
cmovl eax edi
xor esi esi
test edi edi
cmovg esi eax
push [ esp + 0x54 ]
push [ ebp ]
call sub_482f70
mov ecx [ esp + 0x60 ]
add esp 0x8
test eax eax
js r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov ecx [ esp + 0x38 ]
call sub_497c4a
add esp 0x3c
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ ebp + 0x4 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
lea eax [ eax + eax * 2 ]
push esi
push eax
push 0x89
push ecx
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
call sub_431fad
add esp 0x10
lea eax [ eax + eax * 2 + 0x1 ]
push esi
push eax
push 0x89
push ecx
cmp [ ebp + 0xc ] ebx
jne r-xdata
lea eax [ eax + eax * 2 + 0x2 ]
push esi
push eax
push 0x89
push ecx
jmp r-xdata
sub_43a177
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ecx [ rw-data ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
mov [ esp + 0xc ] ecx
cmp eax 0x1
mov edi [ ebp + 0x14 ]
je r-xdata
cmp [ edi + 0x8 ] ebp
je r-xdata
test eax eax
jne r-xdata
push esi
push [ edi ]
call sub_482d22
add esp 0x8
mov ebp esi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
cmp [ edi + 0xc ] ebp
jne r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi + 0x10 ] ebp
jne r-xdata
push esi
call sub_43f9d4
add esp 0x4
push ebp
jmp r-xdata
push ebp
push [ edi + 0x4 ]
call sub_482d22
add esp 0x8
cmp [ eax ] 0x0
je r-xdata
push esi
push [ edi + 0x10 ]
call sub_482f70
add esp 0x8
test eax eax
js r-xdata
push esi
push ebp
call sub_483326
add esp 0x8
push esi
push ebp
call sub_482d69
add esp 0x8
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0x33
push ebx
call sub_431bea
add esp 0x10
mov edi ebx
test eax eax
mov ebx esi
je r-xdata
call sub_48340f
add esp 0x4
push esi
mov esi eax
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
push ebp
push eax
push esi
push 0x33
push ebx
mov ebx eax
mov [ esp + 0x10 ] ebx
call sub_4320b6
add esp 0x10
push 0x0
push ebx
push r--data
push esi
call sub_43fa97
add esp 0x10
mov [ esp + 0x4 ] eax
mov eax [ edi ]
sub esp 0xc
mov ebx ebp
mov ebp r--data
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] ebx
mov [ esp ] eax
call sub_482cd6
add esp 0xc
push ebp
push ebx
push [ edi + 0x4 ]
call sub_482cd6
add esp 0xc
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
push [ esp ]
call sub_43f9d4
add esp 0x4
push ebx
push [ edi + 0x10 ]
jmp r-xdata
push esi
call sub_48340f
add esp 0x4
mov ebx esi
push eax
push 0x33
push ebx
call sub_431cf7
add esp 0xc
mov ebp ebx
mov ebx esi
mov esi eax
test esi esi
je r-xdata
push ebx
push ebp
call sub_483356
jmp r-xdata
push eax
push [ esp + 0xc ]
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push esi
push ebx
push ebp
call sub_482de2
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
lea eax [ esp + 0x8 ]
push eax
push [ esp + 0xc ]
push 0x33
push edi
call sub_431bea
add esp 0x10
test eax eax
jne r-xdata
call sub_483447
push ebx
push [ edi + 0x10 ]
mov eax 0x33
push esi
push eax
push ebp
call sub_431bb4
add esp 0xc
mov [ esp ] eax
push esi
push ebx
push [ edi ]
call sub_482cd6
add esp 0xc
push [ esp ]
push ebx
push [ edi + 0x4 ]
call sub_482cd6
add esp 0xc
push esi
mov eax 0x33
push eax
push ebp
call sub_432149
add esp 0xc
jmp r-xdata
add esp 0x8
jmp r-xdata
sub_43a3a8
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
test eax eax
je r-xdata
push edi
push ebx
call sub_483326
add esp 0x8
push edi
push ebx
call sub_482d69
add esp 0x8
xor ebp ebp
cmp eax 0x2
jne r-xdata
mov ecx [ ecx * 8 + r--data ]
inc ecx
cmp ecx 0x6
jb r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebp ebp
push ebp
push 0x18
push esi
call sub_4319e9
add esp 0xc
xor ecx ecx
pop esi
pop edi
pop ebx
pop ebp
jmp sub_483356
cmp [ ecx * 8 + r--data ] eax
je r-xdata
xor ecx ecx
jmp r-xdata
push ebp
push edi
push ebx
call sub_482f0e
add esp 0xc
push eax
push ebp
push 0x18
push esi
call sub_431fad
add esp 0x10
inc ebp
cmp ebp 0x6
jne r-xdata
push eax
push ecx
push edi
push ebx
call sub_482e60
add esp 0x10
inc ebp
cmp ebp 0x6
jne r-xdata
sub_43a443
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
test eax eax
je r-xdata
push edi
push ebx
call sub_483326
add esp 0x8
push edi
push ebx
call sub_482d69
add esp 0x8
xor ebp ebp
cmp eax 0x2
jne r-xdata
mov ecx [ ecx * 8 + r--data ]
inc ecx
cmp ecx 0x5
jb r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebp ebp
push ebp
push 0x19
push esi
call sub_4319e9
add esp 0xc
xor ecx ecx
pop esi
pop edi
pop ebx
pop ebp
jmp sub_483356
cmp [ ecx * 8 + r--data ] eax
je r-xdata
xor ecx ecx
jmp r-xdata
push ebp
push edi
push ebx
call sub_482f0e
add esp 0xc
push eax
push ebp
push 0x19
push esi
call sub_431fad
add esp 0x10
inc ebp
cmp ebp 0x5
jne r-xdata
push eax
push ecx
push edi
push ebx
call sub_482e60
add esp 0x10
inc ebp
cmp ebp 0x5
jne r-xdata
sub_43a4de
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x4 ] ecx
cmp eax 0x1
mov ebp [ esi + 0x14 ]
je r-xdata
cmp [ ebp ] esi
je r-xdata
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
call sub_482d22
add esp 0x8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x4 ] esi
jne r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] esi
jne r-xdata
push r--data
push edi
call sub_483418
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
jmp r-xdata
push esi
call sub_44017c
add esp 0x4
test eax eax
je r-xdata
push edi
push [ ebp + 0x8 ]
call sub_482f70
add esp 0x8
test eax eax
js r-xdata
push edi
push esi
call sub_483326
add esp 0x8
push edi
push esi
call sub_482d69
add esp 0x8
mov ebp esp
push ebp
push 0x0
push 0xad
push ebx
jmp r-xdata
push r--data
push edi
push esi
push 0xad
push ebx
call sub_431b26
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_48340f
add esp 0x4
push eax
push 0xad
push ebx
call sub_431cf7
add esp 0xc
mov esi eax
test esi esi
je r-xdata
call sub_431bea
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_43f9d4
add esp 0x4
push edi
push [ ebp + 0x8 ]
push r--data
push esi
push 0xad
push ebx
call sub_4320b6
add esp 0x10
push r--data
push edi
jmp r-xdata
call sub_483447
push edi
push [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
push [ ebp + 0xc ]
call sub_482cd6
add esp 0xc
push esi
push 0xad
push ebx
call sub_432149
add esp 0xc
jmp r-xdata
push [ esp ]
push edi
push esi
call sub_482de2
add esp 0xc
push ebp
push [ esp + 0x4 ]
push 0xad
push ebx
push edi
push esi
call sub_483356
jmp r-xdata
call sub_483418
add esp 0x8
jmp r-xdata
add esp 0x8
sub_43a66b
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
test eax eax
je r-xdata
push edi
push ebx
call sub_483326
add esp 0x8
push edi
push ebx
call sub_482d69
add esp 0x8
xor ebp ebp
cmp eax 0x2
jne r-xdata
mov ecx [ ecx * 8 + r--data ]
inc ecx
cmp ecx 0x7
jb r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebp ebp
push ebp
push 0x1f
push esi
call sub_4319e9
add esp 0xc
xor ecx ecx
pop esi
pop edi
pop ebx
pop ebp
jmp sub_483356
cmp [ ecx * 8 + r--data ] eax
je r-xdata
xor ecx ecx
jmp r-xdata
push ebp
push edi
push ebx
call sub_482f0e
add esp 0xc
push eax
push ebp
push 0x1f
push esi
call sub_431fad
add esp 0x10
inc ebp
cmp ebp 0x7
jne r-xdata
push eax
push ecx
push edi
push ebx
call sub_482e60
add esp 0x10
inc ebp
cmp ebp 0x7
jne r-xdata
sub_43a706
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
test eax eax
mov [ esp ] ecx
je r-xdata
push ecx
push ebp
mov edi ecx
call sub_483326
add esp 0x8
push edi
push ebp
call sub_482d69
add esp 0x8
mov eax [ r--data ]
test eax eax
jle r-xdata
cmp eax 0x2
jne r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
jmp sub_483356
xor edi edi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ r--data ]
test ebx ebx
jle r-xdata
push 0x199
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp esi [ r--data ]
jl r-xdata
xor edi edi
push edi
push 0x29
mov ebx esi
push esi
call sub_4319e9
add esp 0xc
mov esi eax
test esi esi
js r-xdata
push esi
push [ esi * 4 + r--data ]
push [ esp + 0x8 ]
push ebp
call sub_482e60
add esp 0x10
inc edi
mov esi ebx
cmp edi [ r--data ]
jl r-xdata
push edi
push ecx
push ebp
call sub_482f0e
add esp 0xc
push eax
push edi
push 0x29
push esi
call sub_431fad
mov ecx [ esp + 0x10 ]
add esp 0x10
inc edi
cmp edi ebx
jl r-xdata
sub_43a7dc
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ esp + 0x30 ]
mov ecx [ rw-data ]
cmp eax 0x3
mov [ esp + 0xc ] ecx
ja r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov esi [ ebx + 0x14 ]
jmp [ eax * 4 + jump_table_406738 ]
cmp [ esi + 0xc ] ebx
je r-xdata
push ebp
push ebx
call sub_483326
add esp 0x8
push ebp
push ebx
call sub_482d69
add esp 0x8
lea esi [ esp + 0x8 ]
push esi
push 0x0
push 0x32
push edi
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_431bea
add esp 0x10
test eax eax
jne r-xdata
push 0x0
push ebp
push ebx
jmp r-xdata
mov cl [ eax ]
inc eax
mov edx r--data
cmp cl 0x4e
cmove eax edx
cmp cl 0x41
mov edx r--data
cmove eax edx
push eax
push [ esp + 0xc ]
push r--data
call sub_43f758
add esp 0xc
mov ebp esi
mov esi eax
push esi
push [ esp + 0x2c ]
push ebx
call sub_482de2
add esp 0xc
push esi
mov esi ebp
call sub_43f9d4
add esp 0x4
push esi
push [ esp + 0xc ]
push 0x32
push edi
push [ esp + 0x28 ]
push ebx
call sub_483356
add esp 0x8
jmp r-xdata
call sub_482b36
jmp r-xdata
add esp 0xc
sub_43aa4b
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ecx [ rw-data ]
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0xc ] ecx
cmp eax 0x1
mov esi [ edi + 0x14 ]
je r-xdata
cmp [ esi ] edi
je r-xdata
test eax eax
jne r-xdata
push ebp
push [ esi + 0x18 ]
call sub_482bba
add esp 0x8
cmp eax 0x2
mov ecx r--data
mov edx r--data
cmove edx ecx
xor edi edi
inc edi
cmp eax edi
mov eax r--data
cmovne eax edx
mov [ esp + 0x4 ] eax
push ebp
push [ esi + 0x14 ]
call sub_482bba
add esp 0x8
cmp eax edi
mov ecx r--data
mov edx r--data
mov ebx r--data
cmove edx ecx
test eax eax
cmovne ebx edx
push ebp
push [ esi + 0xc ]
call sub_482d22
add esp 0x8
mov edi eax
cmp [ edi ] 0x0
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esi + 0x8 ] edi
je r-xdata
push r--data
push ebp
call sub_483418
add esp 0x8
push edi
jmp r-xdata
cmp [ ebx ] 0x44
jne r-xdata
push ebp
push [ esi + 0x8 ]
call sub_482f70
add esp 0x8
test eax eax
js r-xdata
push ebp
push edi
call sub_483326
add esp 0x8
push ebp
push edi
call sub_482d69
add esp 0x8
mov eax ebx
lea ebx [ esp + 0x8 ]
push ebx
push 0x0
push 0x9b
mov ebp eax
push eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
je r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
push ebp
push [ esi + 0x10 ]
call sub_482d22
add esp 0x8
cmp [ eax ] 0x0
je r-xdata
mov ebx r--data
push r--data
call sub_43f79e
add esp 0x4
mov [ esp ] eax
jmp r-xdata
push ebp
call sub_48340f
add esp 0x4
push eax
push 0x9b
push ebx
call sub_431cf7
add esp 0xc
test eax eax
je r-xdata
call sub_431bea
add esp 0x10
mov esi eax
test esi esi
jne r-xdata
push 0x0
push ebp
push edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push r--data
push ebp
mov esi eax
call sub_483418
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
push esi
push 0x3a
push eax
mov [ esp + 0x8 ] eax
call sub_43f67d
add esp 0x8
test eax eax
mov eax [ esp ]
je r-xdata
push 0x0
push edi
push ebx
push [ esp + 0x10 ]
call sub_43fa97
add esp 0x10
mov ebx eax
push edi
call sub_43f9d4
add esp 0x4
push ebx
push 0x9b
mov edi [ esp + 0x34 ]
push edi
call sub_431b26
add esp 0xc
test eax eax
je r-xdata
call sub_483447
push ebp
push [ esi + 0x8 ]
jmp r-xdata
mov edi eax
mov ecx 0x4
mov ebp r--data
movsx eax [ edi ]
push ecx
push eax
push ebp
call sub_4989c0
add esp 0xc
mov ecx eax
mov [ esp + 0x4 ] edi
sub ecx ebp
test eax eax
mov ebp ebx
lea ebx [ edi + 0x1 ]
cmove ecx eax
cmove ebx edi
push ecx
push [ esp + 0x2c ]
push [ esi + 0x18 ]
call sub_482b36
add esp 0xc
movsx eax [ ebx ]
mov [ esp ] eax
mov eax 0x9b
push edi
push eax
push ebp
call sub_431bb4
add esp 0xc
mov edi eax
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
mov eax 0x44
mov ebp r--data
mov ecx 0x4
cmovne eax [ esp ]
cmovne ebp edi
mov edi r--data
push ecx
push eax
push edi
call sub_4989c0
add esp 0xc
sub eax edi
push eax
push [ esp + 0x2c ]
push [ esi + 0x14 ]
call sub_482b36
add esp 0xc
inc ebx
push ebx
push [ esp + 0x2c ]
push [ esi + 0xc ]
call sub_482cd6
add esp 0xc
push ebp
push [ esp + 0x2c ]
push [ esi + 0x10 ]
call sub_482cd6
add esp 0xc
push [ esp + 0x4 ]
mov eax 0x9b
push eax
push [ esp + 0x34 ]
mov ebp [ esp + 0x34 ]
call sub_432149
add esp 0xc
jmp r-xdata
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
mov eax [ esp + 0x8 ]
je r-xdata
push [ esp + 0x28 ]
push edi
call sub_483356
jmp r-xdata
push 0x0
push ebp
push edi
jmp r-xdata
mov eax edi
mov edi ebx
mov ebx [ esp ]
push ebx
push edi
push 0x9b
push eax
call sub_4320b6
add esp 0x10
mov eax edi
push r--data
push ebp
call sub_483418
add esp 0x8
mov eax ebx
mov ebx [ esp ]
jmp r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push 0x4c
push esi
call sub_49ae50
add esp 0x8
test eax eax
je r-xdata
push esi
push eax
push r--data
call sub_43f758
add esp 0xc
mov esi eax
jmp r-xdata
add esp 0x8
call sub_482b36
add esp 0xc
jmp r-xdata
push eax
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
push ebp
push [ esi + 0x8 ]
push esi
push [ esp + 0x2c ]
push edi
call sub_482de2
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
push ebx
push [ esp + 0xc ]
push 0x9b
push ebp
mov [ eax ] 0x44
sub_43adfb
push ebx
push edi
push esi
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
cmp eax 0x3
je r-xdata
push ebx
push edi
call sub_482f70
add esp 0x8
test eax eax
js r-xdata
test eax eax
jne r-xdata
mov eax 0x2
push eax
push ebx
push edi
call sub_482f0e
add esp 0xc
jmp r-xdata
pop esi
pop edi
pop ebx
retn
push [ edi + 0x14 ]
push esi
call sub_43194f
add esp 0x8
mov esi eax
push ebx
push edi
call sub_483326
add esp 0x8
push ebx
push edi
call sub_482d69
add esp 0x8
push 0x2
push r--data
push ebx
push edi
call sub_482e60
add esp 0x10
push 0x1
push r--data
push ebx
push edi
call sub_482e60
add esp 0x10
xor eax eax
push eax
push r--data
push ebx
push edi
call sub_482e60
add esp 0x10
test esi esi
je r-xdata
push eax
push [ edi + 0x14 ]
push esi
call sub_431ee3
add esp 0xc
push 0x2
push ebx
push edi
jmp r-xdata
cmp esi 0x1
je r-xdata
call sub_483079
add esp 0xc
push 0x1
push ebx
push edi
cmp esi 0x2
jne r-xdata
pop esi
pop edi
pop ebx
jmp sub_483356
push 0x0
push ebx
push edi
jmp r-xdata
sub_43aed6
push ebp
push ebx
push edi
push esi
mov esi edx
mov edi ecx
push esi
push [ edi + 0x4 ]
call sub_482f70
add esp 0x8
mov ebx eax
test ebx ebx
js r-xdata
push esi
call sub_48340f
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ edi + 0x20 ]
mov ebp [ eax + ebx * 4 ]
push r--data
push ebp
call sub_4a7d00
add esp 0x8
push [ esp + 0x14 ]
push ebp
mov ebp eax
call sub_445b82
add esp 0x8
push [ edi + 0x2c ]
call sub_43f9d4
add esp 0x4
test ebp ebp
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax r--data
mov eax [ edi + 0x20 ]
mov eax [ eax + ebx * 4 ]
jmp r-xdata
push esi
push 0x0
call sub_483447
add esp 0x8
push ebx
push esi
push [ edi + 0x4 ]
call sub_483079
add esp 0xc
xor eax eax
inc eax
xor eax eax
test ebp ebp
setne al
mov [ ecx ] eax
push eax
call sub_43f79e
add esp 0x4
mov ecx [ esp + 0x18 ]
mov [ edi + 0x2c ] eax
test ecx ecx
je r-xdata
sub_43af8d
push ebp
push ebx
push edi
push esi
sub esp 0x130
mov ebp [ esp + 0x144 ]
mov eax [ rw-data ]
mov edi 0x2
lea ebx [ esp + 0x18 ]
lea esi [ ebp + 0x34 ]
mov [ esp + 0x12c ] eax
test eax eax
je r-xdata
push esi
call sub_43ff78
add esp 0x4
cmp eax 0x2
jl r-xdata
cmp [ ebp + 0x7c ] eax
jge r-xdata
xor esi esi
inc esi
push edi
push ebx
push esi
call sub_4400ae
add esp 0xc
push edi
push esi
call sub_44000a
add esp 0x8
cmp [ ebp + 0x78 ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
cmp [ ebp + 0x80 ] 0xffffffff
jne r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp [ ebp + 0x80 ] 0xffffffff
jne r-xdata
mov ecx [ esp + 0x12c ]
call sub_497c4a
mov eax esi
add esp 0x130
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
call sub_43ff78
add esp 0x4
mov ecx [ ebp + 0x84 ]
cmp eax ecx
jl r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
movzx eax [ esp + 0x19 ]
test eax eax
je r-xdata
movzx eax [ esp + 0x18 ]
mov [ ebp + 0x80 ] eax
movzx eax [ esp + 0x19 ]
mov [ ebp + 0x84 ] eax
push ecx
push ebx
push esi
call sub_4400ae
add esp 0xc
push [ ebp + 0x84 ]
push esi
call sub_44000a
add esp 0x8
mov eax [ ebp + 0x80 ]
cmp eax 0x11
je r-xdata
call [ ecx + 0x4 ]
add esp 0x10
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
mov [ ebp + 0x78 ] eax
jmp r-xdata
cmp [ esp + 0x18 ] 0x85
je r-xdata
cmp eax 0x3
je r-xdata
cmp [ ebp + 0x44 ] 0x8
je r-xdata
mov [ ebp + 0x80 ] 0xffffffff
inc [ ebp + 0x7c ]
jmp r-xdata
mov [ esp + 0x4 ] 0x10040101
push 0x11
push [ ebp + 0x74 ]
call sub_431a8c
add esp 0x8
mov ebx eax
mov eax [ ebp + 0x84 ]
mov [ esp ] eax
push 0x0
call sub_46761e
add esp 0x4
mov edi eax
push ebx
call sub_4a7f30
add esp 0x4
cmp eax 0x41
jl r-xdata
test eax eax
jne r-xdata
mov eax [ ebp + 0x78 ]
cmp [ ebp + 0x7c ] eax
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
push eax
push ebx
push edi
lea ecx [ esp + 0x11c ]
push ecx
push eax
push ebx
call sub_4675bd
add esp 0xc
push 0x10
lea eax [ esp + 0x120 ]
push eax
push edi
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp + 0x78 ] eax
mov [ ebp + 0x7c ] eax
mov [ ebp + 0x84 ] eax
mov eax [ ebp + 0x78 ]
jmp r-xdata
call sub_467641
add esp 0xc
lea eax [ esp + 0x8 ]
push eax
push [ esp + 0x4 ]
lea ebx [ esp + 0x20 ]
push ebx
push edi
call sub_467750
add esp 0x10
push edi
call sub_46762b
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x14
lea edx [ esp + 0x8 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov edi 0x2
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
mov [ ebp + 0x44 ] 0x2
jmp r-xdata
sub_43b1f3
push ebp
push ebx
push edi
push esi
sub esp 0x208
mov eax [ rw-data ]
mov edi [ esp + 0x21c ]
mov [ esp + 0x204 ] eax
push 0x10
push [ edi + 0x74 ]
call sub_431a8c
add esp 0x8
mov esi eax
push 0x11
push [ edi + 0x74 ]
call sub_431a8c
add esp 0x8
cmp [ esi ] 0x0
jne r-xdata
lea ebp [ esp + 0x9 ]
mov [ ebp - 0x7 ] 0x1110201
mov [ ebp - 0x3 ] 0x285
push esi
call sub_4a7f30
add esp 0x4
cmp eax 0x100
mov ecx 0xff
cmovl ecx eax
xor ebx ebx
inc ebx
test ecx ecx
cmovg ebx ecx
mov [ ebp - 0x1 ] bl
push ebx
push esi
push ebp
call sub_49a1f0
add esp 0xc
mov eax [ edi + 0x8 ]
add ebx 0x7
lea edx [ esp + 0x2 ]
mov ecx [ eax ]
push ebx
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
movaps xmm0 [ r--data ]
mov eax 0x8
movups [ edi + 0x78 ] xmm0
mov [ edi + 0x44 ] eax
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
mov ecx [ esp + 0x204 ]
xor esi esi
inc esi
call sub_497c4a
mov eax esi
add esp 0x208
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43b2f4
push ebx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
xor eax eax
jmp r-xdata
mov bl [ edx ]
test bl bl
je r-xdata
mov bh [ ecx ]
test bh bh
je r-xdata
cmp bl 0x2f
jne r-xdata
mov eax 0x7fffffff
cmp bh 0x2f
je r-xdata
mov bh [ ecx ]
mov bh [ ecx ]
jmp r-xdata
inc eax
jmp r-xdata
test bh bh
jne r-xdata
inc edx
inc ecx
jmp r-xdata
cmp bl bh
je r-xdata
pop ebx
retn
sub_43b333
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_43b356
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
cmp [ esi ] 0x0
jle r-xdata
cmp [ esi + 0xc ] 0x0
jle r-xdata
xor edi edi
lea ebx [ esi + 0x14 ]
lea edi [ esi + 0x18 ]
lea edi [ esi + 0x18 ]
lea ebx [ esi + 0x14 ]
xor ebp ebp
mov eax [ esi + 0x8 ]
push [ eax + edi * 4 ]
call sub_43b3cb
add esp 0x4
inc edi
cmp edi [ esi ]
jl r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
push [ eax + ebp * 4 ]
call [ ecx + ebp * 4 ]
add esp 0x4
inc ebp
cmp ebp [ esi + 0xc ]
jl r-xdata
jmp r-xdata
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
push [ ebx ]
call sub_43f9d4
add esp 0x4
push [ edi ]
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
jmp sub_43f9d4
sub_43b3cb
push edi
push esi
mov esi [ esp + 0xc ]
push [ esi ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
cmp [ esi + 0x10 ] 0x0
mov eax [ esi + 0x18 ]
jle r-xdata
push eax
call sub_43f9d4
add esp 0x4
pop esi
pop edi
jmp sub_43f9d4
xor edi edi
push [ eax + edi * 4 ]
call sub_43b420
add esp 0x4
inc edi
mov eax [ esi + 0x18 ]
cmp edi [ esi + 0x10 ]
jl r-xdata
sub_43b420
push edi
push esi
mov esi [ esp + 0xc ]
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
add eax 0xfffffffe
cmp eax 0x5
ja r-xdata
pop esi
pop edi
jmp sub_43f9d4
jmp [ eax * 4 + jump_table_40691c ]
cmp [ esi + 0x24 ] 0x0
mov eax [ esi + 0x28 ]
jle r-xdata
push eax
call sub_43f9d4
add esp 0x4
push [ esi + 0x2c ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x30 ]
jmp r-xdata
xor edi edi
call sub_43f9d4
add esp 0x4
push [ eax + edi * 4 ]
call sub_43f9d4
add esp 0x4
inc edi
mov eax [ esi + 0x28 ]
cmp edi [ esi + 0x24 ]
jl r-xdata
sub_43b496
push ebx
push edi
push esi
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
test esi esi
js r-xdata
mov ecx ebx
mov edx edi
call sub_43b4d9
mov esi eax
inc esi
jmp r-xdata
xor esi esi
dec esi
mov eax [ ebx + 0x8 ]
mov eax [ eax + esi * 4 ]
push [ eax ]
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
cmp esi [ ebx ]
jge r-xdata
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_43b4d9
push ebp
push ebx
push edi
push esi
push eax
mov [ esp ] edx
mov esi [ ecx ]
test esi esi
jle r-xdata
mov eax esi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ ecx + 0x8 ]
xor edi edi
xor ebp ebp
mov esi ebp
cmp eax edi
jl r-xdata
inc ebp
mov edi eax
cmp ebp esi
jl r-xdata
mov eax [ ebx + ebp * 4 ]
push [ eax ]
push [ esp + 0x4 ]
call sub_43b2f4
add esp 0x8
cmp eax 0x7fffffff
je r-xdata
jmp r-xdata
sub_43b51f
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov ecx esi
mov edx ebp
mov edi eax
call sub_43b4d9
mov ebx eax
push ebp
call sub_43f79e
add esp 0x4
xor ebp ebp
mov [ edi ] eax
mov [ edi + 0x4 ] ebp
push [ esp + 0x1c ]
call sub_43f79e
add esp 0x4
mov [ edi + 0x8 ] eax
mov [ edi + 0x10 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x18 ] ebp
mov [ edi + 0x14 ] ebp
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jl r-xdata
sub eax ebx
jle r-xdata
add eax 0x20
mov ecx 0x4
mov [ esi + 0x4 ] eax
push ecx
push eax
push [ esi + 0x8 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x8 ] eax
mov eax [ esi ]
mov eax [ esi + 0x8 ]
mov [ eax + ebx * 4 ] edi
inc [ esi ]
mov eax edi
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esi + 0x8 ]
shl eax 0x2
lea edx [ ecx + ebx * 4 + 0x4 ]
lea ecx [ ecx + ebx * 4 ]
push eax
push ecx
push edx
call sub_49a770
add esp 0xc
sub_43b5be
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov ecx ebx
call sub_43b4d9
mov esi [ ebx ]
mov edi eax
cmp edi esi
jge r-xdata
mov esi [ esp + 0x20 ]
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
push [ esp + 0x18 ]
call sub_43f79e
add esp 0x4
mov [ ebx ] eax
push [ esp + 0x1c ]
call sub_43f79e
add esp 0x4
mov [ ebx + 0x4 ] eax
xor ebp ebp
test esi esi
mov eax 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
mov esi [ esp + 0x14 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0x14 ] ebp
mov [ ebx + 0x10 ] ebp
mov [ ebx + 0x18 ] ebp
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jl r-xdata
push esi
call sub_43f79e
add esp 0x4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
sub eax edi
jle r-xdata
add eax 0x20
mov ecx 0x4
mov [ esi + 0x4 ] eax
push ecx
push eax
push [ esi + 0x8 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x8 ] eax
mov eax [ esi ]
inc edi
cmp edi esi
jl r-xdata
push [ esp + 0x1c ]
push eax
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ebx
inc [ esi ]
mov ecx [ esi + 0x8 ]
shl eax 0x2
lea edx [ ecx + edi * 4 + 0x4 ]
lea ecx [ ecx + edi * 4 ]
push eax
push ecx
push edx
call sub_49a770
add esp 0xc
mov ebx [ ebp + edi * 4 ]
push [ esp + 0x18 ]
push [ ebx ]
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
mov eax ebx
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43b6bc
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x14 ]
push 0x1
push [ esp + 0x1c ]
call sub_43f807
add esp 0x8
mov esi eax
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x10 ]
jl r-xdata
mov ecx [ edi + 0x14 ]
mov [ ecx + eax * 4 ] esi
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x18 ]
mov [ ecx + eax * 4 ] ebx
inc [ edi + 0xc ]
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
add eax 0x20
mov ebp 0x4
mov [ edi + 0x10 ] eax
push ebp
push eax
push [ edi + 0x14 ]
call sub_43f8db
add esp 0xc
mov [ edi + 0x14 ] eax
push ebp
push [ edi + 0x10 ]
push [ edi + 0x18 ]
call sub_43f8db
add esp 0xc
mov [ edi + 0x18 ] eax
mov eax [ edi + 0xc ]
sub_43b744
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] eax
sub esp 0xc
mov ecx [ esp + 0x14 ]
mov edx 0x6
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x10 ]
mov [ esp ] ecx
mov ecx edi
mov [ esp + 0x4 ] eax
call sub_43b805
add esp 0xc
mov esi eax
cmp ebx 0x1
je r-xdata
cmp ebx 0x1
mov [ esi + 0x1c ] ebx
mov [ edi + 0xc ] ebx
jne r-xdata
cmp [ edi + 0xc ] 0x1
je r-xdata
push 0x4
push ebx
call sub_43f807
add esp 0x8
test ebx ebx
lea ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esp ] ecx
jle r-xdata
mov [ esi + 0x20 ] 0x0
jmp r-xdata
push 0xf3
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
retn
xor eax eax
mov ecx [ esp ]
lea edx [ ecx + 0x4 ]
mov [ esp ] edx
mov ecx [ ecx ]
mov edx [ esi + 0x20 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp ebx eax
jne r-xdata
sub_43b805
push ebp
push ebx
push edi
push esi
mov ebx edx
mov edi ecx
lea ebp [ esp + 0x14 ]
push 0x3c
push 0x1
call sub_43f807
add esp 0x8
mov ecx [ edi + 0x10 ]
mov esi eax
cmp ecx [ edi + 0x14 ]
jge r-xdata
add ecx 0x20
mov [ edi + 0x14 ] ecx
push 0x4
push ecx
push [ edi + 0x18 ]
call sub_43f8db
add esp 0xc
mov [ edi + 0x18 ] eax
mov ecx [ edi + 0x10 ]
mov eax [ edi + 0x18 ]
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ edi + 0x10 ] edx
mov [ eax + ecx * 4 ] esi
xor eax eax
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0xc ]
shl ecx 0x10
add ecx 0xffff0000
mov [ esi + 0xc ] ecx
mov ecx [ ebp ]
mov [ esi + 0x18 ] ecx
mov ecx [ esp + 0x18 ]
mov [ esi + 0x10 ] ecx
lea ecx [ esp + 0x1c ]
mov ecx [ ecx ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43b885
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x40 ]
mov bl [ esp + 0x34 ]
mov edi [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x44 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x3c ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] eax
inc edx
call sub_43b805
mov esi eax
xor ebp ebp
test edi edi
mov eax 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x38 ]
mov [ esi + 0x1c ] bl
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] ebp
mov [ esi + 0x28 ] ebp
lea eax [ esp + 0x48 ]
mov eax [ eax ]
mov [ esi + 0x2c ] eax
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp ] edi
call sub_43f79e
sub_43b915
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x40 ]
mov ebp [ esp + 0x38 ]
mov bl [ esp + 0x34 ]
mov edi [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x44 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x3c ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] eax
inc edx
call sub_43b805
mov esi eax
test edi edi
je r-xdata
xor eax eax
mov [ esp ] edi
call sub_43f79e
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x1c ] bl
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x28 ] 0x1
lea eax [ esp + 0x48 ]
mov eax [ eax ]
mov [ esi + 0x2c ] eax
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43b9aa
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov edx [ rw-data ]
mov bl [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x3c ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x34 ]
mov [ esp ] edx
sub esp 0xc
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x2
mov [ esp + 0x4 ] eax
call sub_43b805
add esp 0xc
mov esi eax
xor edi edi
test ebp ebp
mov eax 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x30 ]
mov [ esi + 0x1c ] bl
mov [ esi + 0x20 ] eax
lea eax [ esp + 0x44 ]
mov [ esp + 0x8 ] eax
cmp [ eax - 0x4 ] 0x0
je r-xdata
push ebp
call sub_43f79e
add esp 0x4
mov [ esi + 0x24 ] edi
xor eax eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov cl [ esi + 0x1c ]
lea edx [ esp + 0x40 ]
xor edi edi
mov ebx 0x4
mov [ esi + 0x2c ] eax
push ebx
push edi
call sub_43f807
add esp 0x8
mov [ esi + 0x28 ] eax
push ebx
push [ esi + 0x24 ]
call sub_43f807
add esp 0x8
lea ecx [ esp + 0x40 ]
mov [ esi + 0x30 ] eax
mov [ esp + 0x8 ] ecx
cmp [ esi + 0x24 ] 0x0
jle r-xdata
push 0x1
push edi
call sub_43f807
add esp 0x8
mov edi [ esi + 0x24 ]
inc edi
add edx 0x8
test cl cl
cmovne edx eax
cmp [ edx + 0x4 ] 0x0
lea eax [ edx + 0x8 ]
lea edx [ edx + 0x4 ]
jne r-xdata
mov [ esp + 0x8 ] eax
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
xor edi edi
mov ecx [ esp + 0x8 ]
mov eax [ esi + 0x30 ]
lea edx [ ecx + 0x4 ]
mov [ esp + 0x8 ] edx
mov ecx [ ecx ]
mov [ eax + edi * 4 ] ecx
inc edi
cmp edi [ esi + 0x24 ]
jl r-xdata
mov eax [ esp + 0x8 ]
lea ecx [ eax + 0x4 ]
mov [ esp + 0x8 ] ecx
mov al [ eax ]
mov ecx [ esi + 0x2c ]
mov [ ecx + edi ] al
mov eax [ esp + 0x8 ]
lea ecx [ eax + 0x4 ]
mov [ esp + 0x8 ] ecx
push [ eax ]
call sub_43f79e
add esp 0x4
mov ecx [ esi + 0x28 ]
mov [ ecx + edi * 4 ] eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
sub_43bafd
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x3c ]
mov bl [ esp + 0x34 ]
mov edi [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x40 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x38 ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x4
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
xor ebp ebp
test edi edi
mov eax 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x1c ] bl
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp ] edi
call sub_43f79e
sub_43bb7f
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x3c ]
mov bl [ esp + 0x34 ]
mov edi [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x40 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x38 ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x5
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
xor ebp ebp
test edi edi
mov eax 0x0
je r-xdata
movaps xmm0 [ r--data ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x1c ] bl
movups [ esi + 0x20 ] xmm0
mov [ esi + 0x30 ] ebp
mov [ esi + 0x34 ] ebp
mov [ esi + 0x38 ] 0x1
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp ] edi
call sub_43f79e
sub_43bc13
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x40 ]
mov bl [ esp + 0x34 ]
mov ebp [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x44 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x3c ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x5
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
xor edi edi
test ebp ebp
mov eax 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x1c ] bl
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ecx
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp ] ebp
call sub_43f79e
sub_43bca8
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x3c ]
mov bl [ esp + 0x34 ]
mov edi [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x40 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x38 ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x5
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
xor ebp ebp
test edi edi
mov eax 0x0
je r-xdata
movaps xmm0 [ r--data ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x1c ] bl
movups [ esi + 0x20 ] xmm0
mov [ esi + 0x30 ] ebp
mov [ esi + 0x34 ] ebp
mov [ esi + 0x38 ] ebp
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp ] edi
call sub_43f79e
sub_43bd38
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov ecx [ esp + 0x2c ]
mov ebp [ esp + 0x38 ]
mov bl [ esp + 0x34 ]
mov edi [ esp + 0x30 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x44 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x7
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
test edi edi
je r-xdata
xor eax eax
mov [ esp ] edi
call sub_43f79e
jmp r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x3c ]
mov [ esi + 0x1c ] bl
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] eax
mov eax [ esp + 0x40 ]
mov [ esp ] eax
call sub_43f79e
mov [ esi + 0x28 ] eax
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43bdcd
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x38 ]
mov bl [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x3c ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x34 ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x8
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
test edi edi
je r-xdata
xor eax eax
mov [ esp ] edi
call sub_43f79e
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x1c ] bl
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
retn
sub_43be44
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov ecx [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov [ esp + 0x14 ] eax
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] eax
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x9
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
mov [ esi + 0x1c ] edi
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
retn
sub_43be97
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov ecx [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov [ esp + 0x14 ] eax
xor eax eax
mov edx [ esp + 0x2c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
mov [ esp ] edi
call sub_43f79e
mov [ esi + 0x4 ] eax
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
retn
sub_43bef3
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x38 ]
mov bl [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x3c ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x34 ]
mov [ esp + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ esp ] edx
mov edx 0x3
mov [ esp + 0x4 ] eax
call sub_43b805
mov esi eax
test edi edi
je r-xdata
xor eax eax
mov [ esp ] edi
call sub_43f79e
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x1c ] bl
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
retn
sub_43bf6c
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] r--data
mov [ esi + 0x8 ] ebx
push edi
call sub_43f79e
add esp 0x4
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_43bfd4
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
push 0x34
push 0x1
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x24 ]
mov esi eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi ] ebp
mov [ esi + 0xc ] ecx
push [ esp + 0x14 ]
push esi
call sub_43c03c
add esp 0x8
test ebp ebp
je r-xdata
test edi edi
je r-xdata
mov [ ebp + 0x1084 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
push [ esp + 0x24 ]
call [ edi + 0x30 ]
add esp 0x8
sub_43c03c
push edi
push esi
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
push 0x4f
push edi
call sub_43194f
add esp 0x8
mov [ esi + 0x10 ] eax
push 0x50
push edi
call sub_43194f
add esp 0x8
mov [ esi + 0x14 ] eax
push 0x2
push edi
call sub_43194f
add esp 0x8
mov [ esi + 0x18 ] eax
push 0x54
push edi
call sub_43194f
add esp 0x8
mov [ esi + 0x1c ] eax
push 0x55
push edi
call sub_43194f
add esp 0x8
mov [ esi + 0x20 ] eax
pop esi
pop edi
retn
sub_43c08f
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ eax + 0x1084 ] 0x0
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push 0x0
push [ esi + 0x8 ]
call [ eax + 0x30 ]
add esp 0x8
pop esi
jmp sub_43f9d4
push eax
call sub_43f9d4
add esp 0x4
sub_43c0cc
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
inc ebx
mov ecx ebx
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push ecx
push ebx
push [ esi + 0xc ]
call sub_484d61
add esp 0xc
pop esi
pop edi
pop ebx
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
mov eax [ esi + 0x4 ]
push 0x0
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
mov ecx ebx
jne r-xdata
xor ebx ebx
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
mov edi ecx
call [ eax + 0x2c ]
mov ecx edi
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push [ esi ]
call sub_47b1ee
add esp 0x8
xor ecx ecx
test eax eax
setne cl
jmp r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
mov ecx edi
add esp 0x8
xor ebx ebx
test eax eax
setne bl
jmp r-xdata
sub_43c15b
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x28 ]
cmp [ esi ] 0x0
jne r-xdata
test edi edi
jne r-xdata
push 0x8e
push r--data
push r--data
call sub_4a509d
add esp 0xc
push [ esi + 0xc ]
call sub_484d61
add esp 0x4
cmp [ esp + 0x2c ] 0x0
je r-xdata
push 0x8f
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebp [ esp + 0x24 ]
test edi edi
mov [ esp ] 0x0
jns r-xdata
push [ esi ]
call sub_47b181
add esp 0x4
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov [ esp ] 0x100
push ebp
call sub_4a7f30
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
cmp eax 0x2
jne r-xdata
movzx eax [ ebp ]
dec edi
or eax [ esp ]
mov ecx eax
lea ebx [ eax + 0x100 ]
xor ecx 0xd
or ecx [ esp + 0x2c ]
mov cx 0x20
cmovne ebx eax
cmp [ esi + 0x30 ] 0x0
mov [ esp + 0x4 ] edi
mov ax bx
cmovne ax cx
and eax 0x3ff
cmp eax 0x11
jle r-xdata
add esp 0xc
jmp r-xdata
mov [ esp + 0x4 ] edi
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push 0x0
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
movzx eax ax
cmp eax 0x3
je r-xdata
movsx ecx ax
cmp ecx 0x107
jg r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x4 ]
test edi edi
jle r-xdata
mov ecx [ esi + 0x4 ]
push eax
push [ esi + 0x24 ]
push [ esi + 0x8 ]
call [ ecx + 0xc ]
add esp 0xc
mov edi [ esi + 0x28 ]
test edi edi
jle r-xdata
push 0x0
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x8 ] ebx
cmp [ esi + 0x28 ] 0x0
jle r-xdata
cmp eax 0x4
je r-xdata
movzx eax ax
cmp eax 0x108
je r-xdata
lea eax [ eax - 0x12 ]
movzx eax ax
cmp eax 0xa
ja r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx esi
movzx edx [ eax + edi - 0x1 ]
call sub_43c8c6
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx 0x4
push ecx
push [ esi + 0x8 ]
call [ eax + 0x18 ]
add esp 0x8
cmp [ esi + 0x10 ] 0x0
mov ebx [ esp + 0x8 ]
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x4 ]
test eax eax
je r-xdata
cmp eax 0xa
jne r-xdata
cmp [ esi + 0x28 ] 0x0
jle r-xdata
cmp eax 0x17f
je r-xdata
mov ecx [ esi + 0x28 ]
cmp ecx [ esi + 0x2c ]
jge r-xdata
jmp [ eax * 4 + jump_table_4069a4 ]
push edi
push ebp
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
cmp eax 0x2
jne r-xdata
cmp edi 0x1
lea edi [ edi - 0x1 ]
mov [ esi + 0x28 ] edi
jg r-xdata
push 0x3
push r--data
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
dec ebx
jne r-xdata
and ebx 0x3ff
cmp ebx 0x1c
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
movzx edx [ eax + ecx - 0x1 ]
mov ecx esi
call sub_43c8c6
mov ebx eax
test ebx ebx
je r-xdata
cmp eax 0x2
jne r-xdata
push 0xc
push [ esi + 0x8 ]
call [ ecx + 0x18 ]
jmp r-xdata
push eax
push [ esi + 0x24 ]
push [ esi + 0x8 ]
call [ ecx + 0xc ]
add esp 0xc
jmp r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov edi [ esp + 0x4 ]
inc ebp
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp eax 0x10d
jne r-xdata
add ecx 0x100
mov [ esi + 0x2c ] ecx
push 0x1
push ecx
push [ esi + 0x24 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push edi
push ebp
push [ esi + 0x8 ]
cmp edi 0x1
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
mov edi [ esi + 0x28 ]
mov eax [ esi + 0x4 ]
push 0x7
push [ esi + 0x8 ]
jmp r-xdata
movzx eax bx
cmp eax 0x1a
je r-xdata
mov eax [ esi + 0x28 ]
lea ecx [ eax - 0x1 ]
cmp eax 0x1
mov [ esi + 0x28 ] ecx
jg r-xdata
push 0x3
push r--data
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
dec ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
add esp 0x8
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov eax [ esi + 0x28 ]
test eax eax
jle r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
movzx edx [ eax + ecx - 0x1 ]
mov ecx esi
call sub_43c8c6
mov ebx eax
test ebx ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x28 ]
movzx edx bl
mov ecx esi
call sub_43c94f
cmp eax 0x2
jne r-xdata
lea edx [ ecx + 0x1 ]
mov [ esi + 0x28 ] edx
mov [ eax + ecx ] bl
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push 0x4
push r--data
mov edi 0x0
push edi
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
cmp [ esi + 0x28 ] edi
jle r-xdata
cmp eax 0x2
jne r-xdata
cmp [ esi + 0x18 ] 0x1
jne r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
je r-xdata
call [ eax + 0x18 ]
mov eax [ esi + 0x4 ]
push 0xa
push [ esi + 0x8 ]
cmp eax 0x3
jne r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
mov eax [ esi + 0x28 ]
lea ecx [ eax - 0x1 ]
mov [ esi + 0x28 ] ecx
mov ecx [ esi ]
mov edx [ esi + 0x24 ]
mov al [ edx + eax - 0x1 ]
cmp [ ecx + 0xdc ] 0x0
jne r-xdata
push 0x3
push r--data
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
dec ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x1
je r-xdata
mov ecx [ esi + 0x4 ]
push eax
push [ esi + 0x24 ]
push [ esi + 0x8 ]
call [ ecx + 0xc ]
add esp 0xc
mov [ esi + 0x30 ] 0x0
jmp r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
xor edi edi
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
movsx eax [ ebp ]
cmp eax 0xc
jle r-xdata
mov eax [ esi + 0x4 ]
push 0x9
push [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp al 0xbf
seta cl
shr al 0x7
xor al 0x1
or al cl
je r-xdata
mov ecx [ ecx + 0x1090 ]
cmp [ ecx + 0xc ] 0xfde9
jne r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
test eax eax
jne r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx esi
movzx edx [ eax + edi ]
call sub_43c94f
inc edi
cmp edi [ esi + 0x28 ]
jl r-xdata
jmp r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x7f
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
movzx edx [ eax + ecx - 0x1 ]
mov ecx esi
call sub_43c8c6
mov ebx eax
test ebx ebx
je r-xdata
cmp eax 0x2
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push r--data
push [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push 0x10
push [ esi + 0x8 ]
call [ eax + 0x18 ]
add esp 0x8
jmp r-xdata
mov eax [ esi + 0x4 ]
push 0x2
push r--data
push [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp eax 0x8
jne r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp eax 0x1a
je r-xdata
mov eax [ esi + 0x28 ]
dec eax
mov [ esi + 0x28 ] eax
jmp r-xdata
push 0x3
push r--data
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
dec ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
push 0x2
push r--data
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
call [ eax + 0xc ]
add esp 0xc
mov eax [ esi + 0x4 ]
push 0x1
push ebp
push [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
push 0x9
push [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push 0x3
push [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp eax 0xd
jne r-xdata
test eax eax
jle r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push 0x1
push [ esi + 0x8 ]
call [ eax + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
call [ eax + 0xc ]
call [ eax + 0x18 ]
mov eax [ esi + 0x4 ]
push 0xa
push [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x0
mov ecx [ esi + 0x4 ]
je r-xdata
push 0x1
push [ esi ]
call sub_47b1ee
add esp 0x8
test eax eax
je r-xdata
push 0x1
push r--data
push [ esi + 0x8 ]
call [ ecx + 0xc ]
jmp r-xdata
push 0x10
push [ esi + 0x8 ]
call [ ecx + 0x18 ]
jmp r-xdata
add esp 0x18
add esp 0x14
jmp r-xdata
sub_43c8c6
push esi
mov eax edx
add al 0xe0
xor esi esi
inc esi
cmp al 0x5f
jae r-xdata
cmp dl 0xa0
jb r-xdata
mov eax esi
jmp r-xdata
mov eax 0x2
test dl dl
jns r-xdata
mov ecx [ ecx ]
cmp [ ecx + 0xdc ] 0x0
je r-xdata
pop esi
retn
mov ecx [ ecx ]
xor eax eax
cmp [ ecx + 0xdc ] 0x0
jne r-xdata
mov eax [ ecx + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
xor eax eax
cmp dl 0xbf
seta al
jmp r-xdata
jmp r-xdata
cmp dl 0xc0
jb r-xdata
mov eax [ ecx + 0x1090 ]
xor ecx ecx
cmp [ eax + 0xc ] 0xfde9
mov eax 0x4
setne cl
shl ecx 0x2
cmp dl 0xc0
cmovb eax ecx
mov eax [ ecx + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
mov eax esi
je r-xdata
sub_43c94f
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi ecx
mov ecx edx
add cl 0xe0
cmp cl 0x5f
mov [ esp + 0x8 ] eax
mov [ esp ] dl
jae r-xdata
mov eax [ esi ]
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov eax esp
push 0x1
push eax
push 0x0
push [ esi + 0xc ]
jmp r-xdata
cmp dl 0xa0
jb r-xdata
test dl dl
js r-xdata
call sub_48d156
add esp 0x10
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
retn
mov eax [ eax + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
mov ecx [ eax + 0x1090 ]
cmp [ ecx + 0xc ] 0xfde9
jne r-xdata
cmp dl 0x7f
mov al 0x3f
je r-xdata
test dl dl
jns r-xdata
test dl dl
js r-xdata
lea ecx [ esp + 0x6 ]
mov [ ecx + 0x1 ] al
mov [ ecx ] 0x5e
push 0x2
push ecx
push 0x0
push [ esi + 0xc ]
add dl 0x40
mov eax edx
movzx eax dl
lea edi [ esp + 0x1 ]
push eax
push r--data
push edi
call sub_432778
add esp 0xc
push 0x4
push edi
push 0x0
push [ esi + 0xc ]
jmp r-xdata
sub_43ca08
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
mov edi [ esp + 0x20 ]
test ebx ebx
js r-xdata
push [ esp + 0x24 ]
push edi
push [ esp + 0x24 ]
push [ esp + 0x20 ]
call sub_43c15b
add esp 0x10
lea ebp [ edi + edi ]
push 0x2
push ebp
call sub_43f807
add esp 0x8
mov esi eax
push ebp
push esi
push edi
push [ esp + 0x28 ]
push 0x0
push ebx
call sub_496101
add esp 0x18
push [ esp + 0x24 ]
push eax
push esi
push [ esp + 0x20 ]
call sub_43ca71
add esp 0x10
push esi
call sub_43f9d4
add esp 0x4
jmp r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43ca71
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x18 ]
mov ebp [ esp + 0x20 ]
mov edi 0x3
mov eax [ esi ]
cmp [ eax + 0xdc ] 0x0
jne r-xdata
imul edi ebp
add edi edi
push 0x1
push edi
call sub_43f807
add esp 0x8
mov [ esp ] eax
mov eax [ esi ]
cmp [ eax + 0xdc ] 0x0
jne r-xdata
mov eax [ eax + 0x1090 ]
xor ecx ecx
cmp [ eax + 0xc ] 0xfde9
sete cl
lea edi [ ecx + ecx + 0x1 ]
mov eax [ esp ]
test ebp ebp
jle r-xdata
mov ecx [ eax + 0x1090 ]
mov eax [ ecx + 0xc ]
cmp eax 0xfde9
jne r-xdata
push eax
call sub_43f9d4
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
xor edi edi
mov ecx eax
xor edx edx
push ecx
push edx
push edx
push edi
mov edi [ esp + 0x10 ]
push edi
push ebp
push [ esp + 0x34 ]
push edx
push eax
call sub_496120
add esp 0x24
lea ecx [ edi + eax ]
test eax eax
cmovs ecx edi
mov eax edi
jmp r-xdata
lea eax [ edi + 0x1 ]
mov ebx 0x2e
cmp eax ebp
jge r-xdata
push [ esp + 0x24 ]
push ecx
push eax
push esi
call sub_43c15b
mov eax [ esp + 0x10 ]
add esp 0x10
cmp edx 0x7f
ja r-xdata
mov eax edi
jmp r-xdata
mov ebx edx
mov ebp esi
and ebx 0xfc00
cmp ebx 0xd800
jne r-xdata
mov ebx edx
cmp edx 0x7ff
ja r-xdata
mov ebx edx
mov [ ecx ] bl
inc ecx
jmp r-xdata
mov eax edi
mov esi [ esp + 0x1c ]
movzx esi [ esi + edi * 2 + 0x2 ]
mov ebx esi
and ebx 0xfc00
movzx ebx bx
cmp ebx 0xdc00
jne r-xdata
cmp edx 0xffff
ja r-xdata
shr ebx 0x6
and dl 0x3f
or bl 0xc0
or dl 0x80
mov [ ecx ] bl
mov [ ecx + 0x1 ] dl
add ecx 0x2
jmp r-xdata
inc eax
cmp eax ebp
mov edi eax
jl r-xdata
shl edx 0xa
and esi 0x3ff
and edx 0xffc00
lea edx [ edx + esi + 0x10000 ]
jmp r-xdata
shr ebx 0x12
or bl 0xf0
mov [ ecx ] bl
mov ebx edx
shr ebx 0xc
and bl 0x3f
or bl 0x80
mov [ ecx + 0x1 ] bl
mov ebx edx
and dl 0x3f
shr ebx 0x6
or dl 0x80
and bl 0x3f
or bl 0x80
mov [ ecx + 0x2 ] bl
mov [ ecx + 0x3 ] dl
add ecx 0x4
shr ebx 0xc
or bl 0xe0
mov [ ecx ] bl
mov ebx edx
and dl 0x3f
shr ebx 0x6
or dl 0x80
and bl 0x3f
or bl 0x80
mov [ ecx + 0x1 ] bl
mov [ ecx + 0x2 ] dl
add ecx 0x3
jmp r-xdata
mov eax [ esp + 0x1c ]
movzx edx [ eax + edi * 2 ]
mov eax edx
and eax 0xf800
cmp eax 0xd800
jne r-xdata
jmp r-xdata
mov esi ebp
mov ebp [ esp + 0x20 ]
mov eax [ esp ]
sub ecx eax
jbe r-xdata
sub_43cc57
push ebp
push ebx
push edi
push esi
sub esp 0x80
mov eax [ rw-data ]
mov ebx [ esp + 0x94 ]
mov [ esp + 0x7c ] eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ esp + 0x7c ]
call sub_497c4a
add esp 0x80
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ ebx + 0x20 ] 0x0
je r-xdata
lea esi [ esp + 0x14 ]
push esi
call sub_4953e4
add esp 0x4
lea edi [ esp + 0x38 ]
mov ecx 0x9
[ edi ] [ esi ]
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
xor edi edi
inc edi
push edi
push [ ebx + 0x1c ]
call sub_43194f
add esp 0x8
mov [ esp + 0x10 ] eax
push 0x0
push [ ebx + 0x1c ]
call sub_431a8c
add esp 0x8
mov [ esp + 0xc ] eax
push 0x77
push [ ebx + 0x1c ]
call sub_431daf
add esp 0x8
mov esi eax
push edi
push 0x104
call sub_43f807
add esp 0x8
mov [ esp ] eax
push esi
call sub_48f4f9
add esp 0x4
mov edi eax
xor esi esi
mov al [ edi ]
test al al
je r-xdata
push eax
call sub_48f52d
add esp 0x4
mov edi [ esp ]
mov [ edi + esi ] 0x0
push edi
call sub_48f4af
add esp 0x4
mov esi eax
push edi
call sub_43f9d4
add esp 0x4
mov ebx [ esp + 0x94 ]
mov [ ebx + 0x14 ] esi
push r--data
push [ esi ]
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov [ esp + 0x8 ] 0x104
jmp r-xdata
mov eax 0x2
jmp r-xdata
push 0x79
push [ ebx + 0x1c ]
call sub_43194f
add esp 0x8
mov edi eax
push esi
call sub_4a666f
add esp 0x4
cmp edi 0xffffffff
je r-xdata
lea ecx [ edi + 0x1 ]
cmp al 0x26
jne r-xdata
push eax
push ebx
call sub_43cf2a
add esp 0x8
push ebx
push sub_43cf2a
push [ ebx + 0x14 ]
push [ ebx + 0x18 ]
call sub_4848ee
add esp 0x10
test eax eax
js r-xdata
xor eax eax
cmp edi 0x1
sete al
inc eax
jmp r-xdata
xor edi edi
xor ebx ebx
mov [ esp + 0x5c ] al
mov [ esp + 0x4 ] ecx
inc ebx
jmp r-xdata
movzx ebx [ ecx ]
test ebx ebx
je r-xdata
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
lea ebp [ esp + 0x5c ]
jmp r-xdata
xor ebx ebx
mov [ esp + 0x4 ] ecx
add edi 0x2
push ebx
call sub_4a8654
add esp 0x4
cmp eax 0x6f
mov [ esp + 0x4 ] edi
jg r-xdata
lea eax [ ebx + esi ]
cmp [ esp + 0x8 ] eax
jg r-xdata
cmp eax 0x70
je r-xdata
cmp eax 0x64
je r-xdata
test ebx ebx
jle r-xdata
lea eax [ eax + eax * 4 ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1e
add ecx eax
sar ecx 0x2
add ecx 0x200
push 0x1
mov [ esp + 0xc ] ecx
push ecx
push [ esp + 0x8 ]
call sub_43f8db
add esp 0xc
mov [ esp ] eax
push [ esp + 0x10 ]
push r--data
lea ebp [ esp + 0x64 ]
push ebp
call sub_432778
add esp 0xc
jmp r-xdata
cmp eax 0x74
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push r--data
push 0x20
lea ebp [ esp + 0x68 ]
push ebp
jmp r-xdata
cmp eax 0x68
je r-xdata
mov edi [ esp + 0x4 ]
mov al [ edi ]
test al al
jne r-xdata
inc ebx
xor edi edi
mov ebx eax
inc edi
lea eax [ esp + 0x38 ]
push eax
push r--data
push 0x20
lea ebp [ esp + 0x68 ]
push ebp
cmp eax 0x79
jne r-xdata
call sub_4a7f05
add esp 0x10
mov ebp [ esp + 0xc ]
push ebp
call sub_4a7f30
add esp 0x4
jmp r-xdata
cmp eax 0x6d
jne r-xdata
mov ecx [ esp ]
inc ebp
dec ebx
mov [ ecx + esi ] al
inc esi
xor eax eax
inc eax
cmp ebx eax
jg r-xdata
sub esp 0x4
movsx eax al
mov [ esp ] eax
call sub_48f5b3
add esp 0x4
mov al 0x26
cmp bl al
mov [ esp + 0x5c ] al
jne r-xdata
lea eax [ esp + 0x38 ]
push eax
push r--data
push 0x20
lea ebp [ esp + 0x68 ]
push ebp
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
push r--data
push 0x20
lea ebp [ esp + 0x68 ]
push ebp
jmp r-xdata
mov al [ ebp ]
test edi edi
je r-xdata
mov [ esp + 0x5d ] bl
mov ebx 0x2
jmp r-xdata
xor edi edi
inc edi
mov ebx edi
jmp r-xdata
xor edi edi
inc edi
sub_43cf2a
push ebp
push ebx
push edi
push esi
sub esp 0x158
mov ebp [ esp + 0x170 ]
mov eax [ rw-data ]
mov ebx [ esp + 0x16c ]
test ebp ebp
mov [ esp + 0x154 ] eax
je r-xdata
lea eax [ ebx + 0x4 ]
mov [ esp ] eax
mov [ ebx + 0x4 ] 0x3
cmp ebp 0x1
mov eax r--data
mov ecx r--data
cmove ecx eax
mov eax [ ebx + 0x14 ]
push ecx
push [ eax ]
call sub_4a6bb0
add esp 0x8
lea ecx [ ebx + 0x4 ]
test eax eax
mov [ ebx ] eax
mov [ esp ] ecx
je r-xdata
push [ ebx + 0x14 ]
call sub_48f4f9
add esp 0x4
mov ecx [ ebx + 0x20 ]
lea edx [ ecx - 0x1 ]
cmp edx 0x3
jae r-xdata
xor edi edi
mov [ ecx ] 0x3
inc edi
lea esi [ esp + 0xc ]
mov [ ebx + 0x4 ] 0x2
push esi
call sub_4953e4
add esp 0x4
lea eax [ esp + 0x30 ]
mov ecx 0x9
mov edi eax
[ edi ] [ esi ]
lea esi [ esp + 0x54 ]
push eax
push r--data
push 0x18
push esi
call sub_4a7f05
add esp 0x10
push esi
push r--data
push ebx
call sub_43d2a2
add esp 0xc
jmp r-xdata
cmp ecx 0x4
mov edx r--data
mov ecx r--data
cmove ecx edx
mov ecx [ ecx * 4 + r--data ]
jmp r-xdata
xor edi edi
jmp r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp ]
cmp [ eax ] 0x1
jne r-xdata
push esi
call sub_4a7f30
add esp 0x4
xor edi edi
inc edi
push eax
push esi
push edi
push [ ebx + 0x18 ]
call sub_48d156
add esp 0x10
push 0x2
push r--data
push edi
push [ ebx + 0x18 ]
call sub_48d156
add esp 0x10
test ebp ebp
mov edx r--data
mov esi r--data
cmove esi edx
cmp ebp 0x1
mov edx r--data
mov ebp r--data
cmove ebp edx
cmp [ ebx + 0x4 ] 0x3
cmove ebp esi
push eax
push ecx
push ebp
push r--data
call sub_43f758
add esp 0x10
mov esi eax
push esi
push [ ebx + 0x18 ]
call sub_4842ab
add esp 0x8
test edi edi
je r-xdata
lea esi [ ebx + 0x8 ]
push esi
call sub_43ff78
add esp 0x4
test eax eax
je r-xdata
push 0x94
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0x154 ]
call sub_497c4a
add esp 0x158
pop esi
pop edi
pop ebx
pop ebp
retn
lea edi [ esp + 0x4 ]
lea ebp [ esp + 0x8 ]
push edi
push ebp
push esi
call sub_44008c
add esp 0xc
mov edx [ esp + 0x8 ]
mov ecx ebx
push [ esp + 0x4 ]
call sub_43d141
add esp 0x4
push [ esp + 0x4 ]
push esi
call sub_44000a
add esp 0x8
push esi
call sub_43ff78
add esp 0x4
test eax eax
jne r-xdata
sub_43d10f
push eax
mov eax [ rw-data ]
mov ecx [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ ecx + 0x20 ]
test eax eax
jle r-xdata
mov ecx [ esp ]
call sub_497c4a
pop eax
retn
cmp eax [ esp + 0x10 ]
jne r-xdata
lea edx [ esp + 0xc ]
push 0x1
call sub_43d141
add esp 0x4
sub_43d141
push ebx
push edi
push esi
mov esi ecx
mov edi edx
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ebx [ esp + 0x10 ]
cmp eax 0x2
je r-xdata
push esi
call sub_43cc57
add esp 0x4
mov eax [ esi + 0x4 ]
mov eax [ esi ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
push eax
push ebx
push 0x1
push edi
call sub_4a722e
add esp 0x10
cmp eax ebx
jae r-xdata
push 0x2f
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi ]
pop esi
pop edi
pop ebx
retn
add esi 0x8
push ebx
push edi
push esi
call sub_43ff80
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x3
push r--data
push [ esi + 0x18 ]
call sub_4842ab
add esp 0x8
push eax
call sub_4a666f
add esp 0x4
mov [ esi ] 0x0
sub_43d1d6
push ebx
push edi
push esi
mov eax [ rw-data ]
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
mov ecx 0x3
and eax 0x3
cmp eax ecx
jne r-xdata
test esi esi
je r-xdata
mov ebx 0x2
push ebx
call sub_49b55f
add esp 0x4
push edi
push r--data
push eax
call sub_43d259
add esp 0xc
push ebx
call sub_49b55f
add esp 0x4
push eax
call sub_4a687d
add esp 0x4
pop esi
pop edi
pop ebx
retn
mov eax [ esi + 0x20 ]
add eax 0xfffffffd
cmp eax 0x1
ja r-xdata
push edi
push r--data
push esi
call sub_43d2a2
add esp 0xc
cmp [ esi + 0x20 ] 0x0
jle r-xdata
cmp [ esi + 0x4 ] 0x2
jne r-xdata
push [ esi ]
call sub_4a687d
add esp 0x4
sub_43d259
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
lea ebx [ esp + 0x20 ]
mov [ esp + 0x4 ] eax
mov [ esp ] ebx
call sub_43aed0
push ebx
push 0x0
push edi
push esi
push [ eax + 0x4 ]
push [ eax ]
call sub_49e7cc
add esp 0x18
mov ecx [ esp + 0x4 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
retn
sub_43d2a2
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
push edx
push eax
call sub_43fb4c
add esp 0x8
mov edi eax
push edi
call sub_4a7f30
add esp 0x4
mov ecx esi
mov edx edi
push eax
call sub_43d141
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
retn
sub_43d2fa
push ebp
push ebx
push edi
push esi
sub esp 0x158
mov eax [ rw-data ]
mov ebx [ esp + 0x16c ]
mov esi [ esp + 0x178 ]
mov ecx [ esp + 0x170 ]
mov [ esp + 0x154 ] eax
mov eax [ ebx + 0x20 ]
cmp eax 0x4
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov ecx [ esp + 0x154 ]
call sub_497c4a
add esp 0x158
pop esi
pop edi
pop ebx
pop ebp
retn
cmp eax 0x3
jne r-xdata
mov edi [ esp + 0x18c ]
mov ebp [ esp + 0x174 ]
test ecx ecx
mov eax r--data
mov ecx r--data
cmove ecx eax
push ecx
push r--data
push ebx
call sub_43d2a2
add esp 0xc
test edi edi
je r-xdata
lea esi [ esp + 0xc ]
push esi
mov ebp ecx
call sub_4953e4
add esp 0x4
lea eax [ esp + 0x30 ]
mov ecx 0x9
mov edi eax
[ edi ] [ esi ]
lea esi [ esp + 0x54 ]
push eax
push r--data
push 0x18
push esi
call sub_4a7f05
add esp 0x10
test ebp ebp
mov eax r--data
mov ecx r--data
cmove ecx eax
push esi
push ecx
push r--data
push ebx
call sub_43d2a2
add esp 0x10
jmp r-xdata
push esi
push ebp
push ebp
push r--data
push ebx
call sub_43d2a2
add esp 0x14
mov eax [ esp + 0x190 ]
test eax eax
je r-xdata
push [ edi ]
push r--data
push ebx
call sub_43d2a2
add esp 0xc
cmp [ esp + 0x180 ] 0x0
jle r-xdata
push r--data
push ebx
call sub_43d2a2
add esp 0x8
mov esi [ esp + 0x194 ]
push eax
push r--data
push ebx
call sub_43d2a2
add esp 0xc
test esi esi
je r-xdata
cmp [ ebx + 0x20 ] 0x0
jle r-xdata
mov eax [ esp + 0x188 ]
mov ebp [ esp + 0x184 ]
xor edi edi
xor edx edx
xor esi esi
xor ebx ebx
add eax 0x8
mov [ esp + 0x8 ] eax
jmp r-xdata
push esi
push r--data
push ebx
call sub_43d2a2
add esp 0xc
cmp [ ebx + 0x4 ] 0x2
jne r-xdata
cmp esi ebp
jge r-xdata
push [ ebx ]
call sub_4a687d
add esp 0x4
xor ebp ebp
mov ecx [ esp + 0x8 ]
lea eax [ esi + esi * 2 ]
mov [ esp ] edx
lea eax [ ecx + eax * 4 ]
mov eax edx
or eax edi
jne r-xdata
cmp ebp 0x2
je r-xdata
mov edx [ esp ]
cmp ebx ecx
jge r-xdata
inc esi
add eax 0xc
cmp esi ebp
jl r-xdata
cmp ebp 0x1
je r-xdata
mov eax ebx
sar eax 0x1f
shr eax 0x1c
add eax ebx
and eax 0xfffffff0
push r--data
push 0x43
push eax
push r--data
lea eax [ esp + 0x64 ]
push eax
mov [ esp + 0x14 ] edi
mov edi edx
call sub_432778
mov edx edi
mov edi [ esp + 0x14 ]
add esp 0x14
cmp edx 0x1
mov eax r--data
mov ecx r--data
cmove eax ecx
push eax
push edx
push r--data
push [ esp + 0x178 ]
call sub_43d2a2
add esp 0x10
xor edx edx
mov ebp [ eax ]
jmp r-xdata
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
add edx ecx
cmp ebx edx
jl r-xdata
mov edx [ esp ]
jmp r-xdata
mov [ esp + 0x32 ] 0x0
mov [ esp ] edx
mov [ esp + 0x30 ] 0x5858
mov [ esp + 0x4 ] 0x58
mov al 0x58
mov cl 0x58
jmp r-xdata
cmp ebp 0x2
jne r-xdata
test edx edx
je r-xdata
mov edi ebx
mov ebp ebx
sar edi 0x1f
shr edi 0x1c
add edi ebx
and edi 0xfffffff0
sub ebp edi
neg edi
lea edx [ ebp + ebp * 2 ]
mov [ esp + edx + 0x60 ] cl
mov [ esp + edx + 0x61 ] al
push [ esp + 0x4 ]
call sub_4a7606
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x17c ]
mov [ esp ] edx
movzx eax [ eax + ebx ]
mov [ esp + 0x4 ] eax
push eax
push r--data
lea eax [ esp + 0x38 ]
push eax
call sub_432778
add esp 0xc
mov cl [ esp + 0x30 ]
mov al [ esp + 0x31 ]
inc edx
jmp r-xdata
mov edx [ esp ]
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov al 0x2e
jmp r-xdata
mov ebp [ esp + 0x184 ]
inc ebx
test bl 0xf
je r-xdata
test edi edi
je r-xdata
cmp ebx [ esp + 0x180 ]
sete al
test edx edx
setne cl
or cl al
cmp cl 0x1
jne r-xdata
lea edi [ ebx + edi + 0x1 ]
mov [ esp + ebp + 0x91 ] al
xor edi edi
lea eax [ esp + 0x91 ]
mov [ eax + edi + 0x2 ] 0x0
mov [ eax + edi ] 0xa0d
lea eax [ esp + 0x54 ]
push eax
mov edi edx
call sub_4a7f30
add esp 0x4
mov ecx [ esp + 0x16c ]
lea edx [ esp + 0x54 ]
push eax
call sub_43d141
mov edx edi
add esp 0x4
cmp ebx [ esp + 0x180 ]
jne r-xdata
test edi edi
jne r-xdata
mov ebx [ esp + 0x16c ]
test edx edx
je r-xdata
jmp r-xdata
cmp edx 0x1
mov eax r--data
mov ecx r--data
cmove ecx eax
push ecx
push edx
push r--data
push ebx
call sub_43d2a2
add esp 0x10
sub_43d665
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
push 0x24
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor ebp ebp
mov [ esi ] ebp
mov [ esi + 0x4 ] ebp
mov [ esi + 0x18 ] ebx
push edi
call sub_43191d
add esp 0x4
mov [ esi + 0x1c ] eax
push 0x78
push eax
call sub_43194f
add esp 0x8
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x14 ] ebp
push eax
call sub_43ff45
add esp 0x4
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43d6b9
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov ebp 0x77
push ebp
push ebx
call sub_431daf
add esp 0x8
mov esi eax
push ebp
push [ edi + 0x1c ]
call sub_431daf
add esp 0x8
push esi
push eax
call sub_48f500
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ebp 0x78
push ebp
push [ edi + 0x1c ]
call sub_43194f
add esp 0x8
mov esi eax
push ebp
push ebx
call sub_43194f
add esp 0x8
cmp esi eax
jne r-xdata
mov [ edi + 0x4 ] 0x0
push [ edi + 0x1c ]
call sub_431816
add esp 0x4
push ebx
call sub_43191d
add esp 0x4
mov [ edi + 0x1c ] eax
push 0x78
push eax
call sub_43194f
add esp 0x8
mov [ edi + 0x20 ] eax
pop esi
pop edi
pop ebx
pop ebp
jmp sub_43cc57
push eax
call sub_4a666f
add esp 0x4
mov [ edi ] 0x0
push [ edi + 0x1c ]
call sub_431816
add esp 0x4
push ebx
call sub_43191d
add esp 0x4
mov [ edi + 0x1c ] eax
push 0x78
push eax
call sub_43194f
add esp 0x8
mov [ edi + 0x20 ] eax
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43d788
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ esp + 0x34 ]
mov ecx [ rw-data ]
test eax eax
mov [ esp + 0x10 ] ecx
jle r-xdata
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
xor ebp ebp
lea ecx [ ecx - 0xc ]
mov [ esp ] ecx
mov ebp ebx
cmp ebx eax
jge r-xdata
inc ebx
cmp ebx eax
jl r-xdata
lea esi [ ebp - 0x1 ]
cmp esi ebx
jle r-xdata
movzx ecx [ esi + ebp ]
cmp ecx edx
jl r-xdata
movzx ecx [ esi + ebx ]
cmp ecx edx
je r-xdata
mov ebx eax
mov ebp eax
jmp r-xdata
mov edx [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
cmp ebx eax
jge r-xdata
mov edx [ esp ]
lea ecx [ ebp + ebp * 2 ]
lea edi [ edx + ecx * 4 ]
mov edx [ esp + 0x28 ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edx + ecx * 4 ]
inc ebp
cmp ebp eax
jl r-xdata
cmp ebp eax
jl r-xdata
mov edx [ edi + 0x8 ]
inc ebx
dec esi
mov [ esp + 0xc ] edx
movsd xmm0 [ edi ]
movsd [ esp + 0x4 ] xmm0
mov edx [ ecx + 0x8 ]
mov [ edi + 0x8 ] edx
movsd xmm0 [ ecx ]
movsd [ edi ] xmm0
add edi 0xfffffff4
mov edx [ esp + 0xc ]
mov [ ecx + 0x8 ] edx
movsd xmm0 [ esp + 0x4 ]
movsd [ ecx ] xmm0
add ecx 0xc
cmp esi ebx
jg r-xdata
mov ebx ebp
sub_43d85d
push edi
push esi
mov eax [ esp + 0xc ]
xor edx edx
mov ecx 0x269
dec edx
mov ecx 0x12
lea edi [ ecx + edx ]
mov esi edi
shr esi 0x1f
add esi edi
sar esi 0x1
lea edi [ esi + esi * 2 ]
cmp [ edi * 4 + r--data ] eax
jg r-xdata
mov ecx esi
sub esi edx
cmp esi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] eax
mov edx esi
jl r-xdata
mov esi ecx
movzx ecx [ edi * 4 + r--data ]
jmp r-xdata
xor eax eax
inc eax
shl eax cl
and eax 0x78
pop esi
pop edi
retn
sub_43d8b3
push ebp
push ebx
push edi
push esi
sub esp 0xc
cmp [ esp + 0x28 ] 0x0
jle r-xdata
xor eax eax
inc eax
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
xor edi edi
mov ebp eax
neg ebp
xor ebx ebx
inc ebx
mov [ esp + 0x8 ] ebp
lea eax [ ebp + ebx + 0x1 ]
inc edi
inc ebx
add ecx 0xc
add edx 0xc
xor esi esi
inc esi
cmp eax esi
jne r-xdata
movsx esi [ eax * 4 + r--data ]
cmp esi 0x2
je r-xdata
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
movsd xmm0 [ edx ]
movsd [ ecx ] xmm0
mov eax [ edx + 0x4 ]
lea esi [ eax - 0x621 ]
cmp esi 0xb1
ja r-xdata
cmp ebx [ esp + 0x28 ]
lea esi [ ebx - 0x1 ]
mov ebp 0x3
mov [ esp + 0x4 ] esi
jge r-xdata
cmp esi 0x1
jne r-xdata
test esi esi
jle r-xdata
mov esi [ edx + 0x10 ]
mov [ esp ] esi
mov esi [ esp ]
lea esi [ esi - 0x621 ]
cmp esi 0xb1
mov esi [ esp + 0x4 ]
ja r-xdata
cmp ebx [ esp + 0x28 ]
jge r-xdata
cmp ebp 0x4
ja r-xdata
cmp eax 0x644
jne r-xdata
mov ebp [ esp ]
movsx ebp [ ebp * 4 + r--data ]
movzx eax [ eax * 4 + r--data ]
mov esi [ edx + 0x10 ]
lea ebp [ esi - 0x621 ]
cmp ebp 0xb2
jae r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov esi 0x15
bt esi ebp
jae r-xdata
mov esi [ edx - 0x8 ]
mov [ esp ] ebp
mov ebp 0xfffff9de
add esi ebp
mov ebp [ esp ]
cmp esi 0x5
ja r-xdata
mov ebp [ esp + 0x24 ]
lea esi [ esi + esi * 2 ]
mov [ ebp + esi * 4 + 0x4 ] eax
mov ebp [ esp + 0x8 ]
movsx esi [ esi * 4 + r--data ]
movzx eax [ eax * 4 + r--data ]
cmp esi 0x4
ja r-xdata
mov esi [ edx - 0x8 ]
lea ebp [ esi - 0x621 ]
cmp ebp 0xb2
jae r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
jmp [ esi * 4 + jump_table_408bc8 ]
mov esi edi
jmp r-xdata
mov ebp 0x15
bt ebp esi
jae r-xdata
movsx esi [ esi * 4 + r--data ]
movzx eax [ eax * 4 + r--data ]
cmp esi 0x4
ja r-xdata
movzx eax [ eax * 4 + r--data ]
mov esi [ edx - 0x8 ]
lea ebp [ esi - 0x621 ]
cmp ebp 0xb2
jae r-xdata
mov eax ebp
mov esi 0x2
or eax 0x2
cmp eax esi
sete al
cmp ebp 0x4
sete ah
or ah al
movzx eax ah
add eax 0xfef5
jmp r-xdata
inc eax
jmp r-xdata
mov ebp 0x16
bt ebp esi
jae r-xdata
movsx esi [ esi * 4 + r--data ]
movzx eax [ eax * 4 + r--data ]
cmp esi 0x4
ja r-xdata
mov [ ecx + 0x4 ] eax
lea esi [ ebx - 0x2 ]
mov eax 0x20
add eax 0x2
jmp r-xdata
xor esi esi
inc esi
mov ebp 0x16
bt ebp esi
jae r-xdata
mov esi 0x3
jmp r-xdata
add eax esi
jmp r-xdata
sub_43db27
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ esp + 0x30 ]
test eax eax
jle r-xdata
xor eax eax
mov esi [ esp + 0x2c ]
xor eax eax
xor ecx ecx
dec ecx
mov edx [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
inc eax
cmp eax edx
jl r-xdata
lea edx [ edi + ebp ]
mov ebx edx
shr ebx 0x1f
add ebx edx
sar ebx 0x1
lea edx [ ebx + ebx * 2 ]
cmp [ edx * 4 + r--data ] esi
jg r-xdata
lea edx [ eax + eax * 2 ]
mov edi 0x269
mov ebp ecx
mov esi [ esi + edx * 4 + 0x4 ]
mov edi ebx
mov edx edi
sub edx ebp
cmp edx 0x2
jl r-xdata
cmp [ edx * 4 + r--data ] esi
mov ebp ebx
jl r-xdata
mov ebx edi
mov dl [ edx * 4 + r--data ]
mov dh 0x2
add dl 0xfd
cmp dl dh
jb r-xdata
xor esi esi
inc esi
push esi
mov ebp [ esp + 0x34 ]
push ebp
call sub_43f807
add esp 0x8
mov edi eax
push esi
push ebp
call sub_43f807
add esp 0x8
mov [ esp + 0x4 ] eax
xor eax eax
test ebp ebp
mov [ esp + 0xc ] edi
jle r-xdata
xor ebx ebx
jmp r-xdata
mov edi [ esp + 0x2c ]
xor edx edx
cmp [ edi ] 0xd
jne r-xdata
mov cl 0x12
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] esi
jg r-xdata
cmp ebp 0x2
jl r-xdata
mov [ edi ] bl
mov edi [ esp + 0x2c ]
test cl cl
je r-xdata
mov bl dl
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] esi
mov ebp ebx
jl r-xdata
mov [ esp + 0x10 ] ebx
test ebp ebp
mov ebx 0x1
jle r-xdata
lea eax [ edi + 0x1 ]
lea ecx [ ebp - 0x1 ]
test ebp ebp
jle r-xdata
cmp ch 0x2
jb r-xdata
mov ebx ecx
mov cl [ edi * 4 + r--data ]
jmp r-xdata
lea esi [ ebp - 0x1 ]
xor eax eax
jmp r-xdata
xor eax eax
inc eax
dec ecx
jne r-xdata
mov dl [ eax - 0x1 ]
mov [ eax ] dl
mov edi [ esp + 0xc ]
jmp r-xdata
mov al 0x12
mov ecx ebx
xor edx edx
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] ebx
mov [ esp ] eax
jmp r-xdata
inc eax
mov dl bl
cmp eax ebp
jl r-xdata
mov ebp [ esp + 0x30 ]
mov ch cl
mov bl 0x1
add ch 0xfd
cmp ch 0x2
jb r-xdata
cmp ebp 0x2
jl r-xdata
inc eax
cmp eax ebp
jne r-xdata
mov dl 0x8
mov ecx eax
jmp r-xdata
cmp [ eax ] 0xd
jne r-xdata
lea eax [ edx + edx * 2 ]
xor ebp ebp
mov esi 0x269
mov eax [ edi + eax * 4 + 0x4 ]
dec ebp
lea ecx [ eax + eax * 2 ]
xor ebp ebp
mov esi [ edi + ecx * 4 + 0x4 ]
mov ecx 0x269
dec ebp
test al al
je r-xdata
cmp [ edi ] 0x12
jne r-xdata
cmp [ edi + eax ] 0x8
jne r-xdata
test ebp ebp
jle r-xdata
test dl dl
je r-xdata
mov al 0x12
lea edi [ esi + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] eax
jg r-xdata
cmp ebp 0x2
jl r-xdata
lea eax [ edi + 0x1 ]
mov [ esp + 0x14 ] eax
mov cl [ edi + 0x1 ]
cmp cl 0x7
jg r-xdata
xor eax eax
cmp dl 0x3
je r-xdata
mov ch cl
mov eax [ esp ]
mov esi ebx
mov edi esi
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] eax
mov ebp ebx
jl r-xdata
test ebp ebp
jle r-xdata
cmp [ edi + esi ] 0x12
jne r-xdata
inc ebx
cmp ebx esi
jl r-xdata
mov cl [ edi + ebx - 0x1 ]
lea eax [ edi + ebx ]
cmp cl 0x7
jg r-xdata
cmp cl 0xb
je r-xdata
test cl cl
je r-xdata
inc eax
cmp ebp eax
jne r-xdata
mov [ edi + eax ] 0x3
cmp dl 0x4
je r-xdata
cmp [ esp + 0x14 ] 0x0
mov ecx [ esp + 0x4 ]
je r-xdata
mov ebx esi
mov al [ edi * 4 + r--data ]
mov ch al
dec ch
cmp ch 0x10
ja r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov eax esi
cmp ebp 0x2
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax edi
mov al [ edi + ebp - 0x2 ]
cmp al 0x7
jg r-xdata
cmp [ edi + ebx ] 0x12
jne r-xdata
cmp cl 0x8
je r-xdata
test cl cl
je r-xdata
mov [ edi ] 0x3
jmp r-xdata
cmp cl 0x8
jne r-xdata
mov [ edi ] 0x0
cmp cl 0x3
je r-xdata
cmp [ edi + eax ] 0x4
jne r-xdata
cmp ebp 0x2
setg al
cmp ebp 0x3
jl r-xdata
mov [ edi + eax ] 0xb
test ecx ecx
jg r-xdata
mov edi [ esp + 0xc ]
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x4 ]
mov [ esi + edx ] cl
cmp [ esp ] 0x12
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
movzx esi ch
jmp [ esi * 4 + jump_table_408be0 ]
mov ecx [ esp + 0x10 ]
sub esi eax
jle r-xdata
xor ebx ebx
mov eax esi
dec ebx
inc edx
inc ecx
dec eax
jne r-xdata
mov bl [ ecx ]
and bl 0x1
neg bl
and bl 0x3
mov [ edx ] bl
cmp al 0xb
je r-xdata
test al al
je r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0xb
jne r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0x3
je r-xdata
jmp r-xdata
xor eax eax
mov esi eax
lea ecx [ ebp - 0x2 ]
lea edx [ edi + 0x2 ]
mov dl [ edi + ecx - 0x1 ]
dec ecx
jmp r-xdata
mov eax 0xe6
mov ecx ebp
mov edx edi
mov eax ebp
mov esi [ esp + 0x4 ]
add cl 0x2
and cl 0xfe
mov [ esi + edx ] cl
mov eax [ esp ]
test al al
je r-xdata
test ebp ebp
jle r-xdata
inc eax
cmp eax ebp
jge r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
lea ecx [ edi + ebp ]
mov ebx ecx
shr ebx 0x1f
add ebx ecx
sar ebx 0x1
lea ecx [ ebx + ebx * 2 ]
cmp [ ecx * 4 + r--data ] edx
jg r-xdata
cmp [ edx ] 0x12
jne r-xdata
test edi edi
jle r-xdata
mov [ edi + esi ] 0x3
jmp r-xdata
cmp al 0x8
jne r-xdata
mov [ edi + esi ] 0x0
cmp al 0x3
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
jmp r-xdata
xor ecx ecx
xor edx edx
mov [ esp ] eax
inc edx
mov al [ edx - 0x2 ]
cmp al 0xb
je r-xdata
cmp al 0x9
jne r-xdata
inc edx
dec ecx
jne r-xdata
movzx esi bl
bt eax esi
jae r-xdata
and [ ecx ] 0x3f
inc ecx
dec eax
jne r-xdata
mov eax ecx
or al 0x80
cmp al 0x3
mov eax ecx
jne r-xdata
mov eax [ esp + 0x4 ]
mov al [ eax ]
jmp r-xdata
xor esi esi
add eax [ esp + 0x4 ]
movzx ecx cl
push esi
push ecx
push eax
call sub_49acf0
add esp 0xc
mov edi ebx
mov ecx edi
sub ecx ebp
cmp ecx 0x2
jl r-xdata
cmp [ ecx * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov eax edi
jmp r-xdata
cmp bl 0xb
ja r-xdata
cmp bl 0x12
je r-xdata
test bl bl
jne r-xdata
cmp bl 0x12
je r-xdata
inc ecx
inc edx
cmp ecx ebp
jne r-xdata
test ecx ecx
jle r-xdata
cmp [ edx ] 0xb
jne r-xdata
cmp al 0x8
jne r-xdata
inc edx
dec ecx
jne r-xdata
cmp [ edx - 0x2 ] 0x8
je r-xdata
mov bl [ edx ]
cmp bl 0x7
ja r-xdata
mov ebx [ esp + 0x10 ]
mov [ edx ] 0xe
mov cl 0x12
mov [ esp ] ecx
mov ch [ esp + 0xb ]
jmp r-xdata
mov [ esi + edx ] al
mov al 0x1
mov [ esp + 0xb ] cl
jmp r-xdata
mov eax ecx
or al 0x40
jmp r-xdata
mov esi [ esp + 0x4 ]
test al al
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
inc esi
cmp esi ebp
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ebx edi
cmp [ ecx * 4 + r--data ] 0x11
jne r-xdata
inc edx
inc ecx
dec eax
jne r-xdata
mov bh [ ecx ]
cmp bh 0xb
je r-xdata
mov edi [ esp + 0xc ]
movzx edx bl
mov edi 0x908
bt edi edx
mov edi [ esp + 0xc ]
jae r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
mov edi [ esp + 0xc ]
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
cmp [ edi + ecx ] 0xa
jne r-xdata
test ebp ebp
jle r-xdata
cmp ecx esi
jge r-xdata
cmp [ edi + ecx - 0x1 ] 0x8
je r-xdata
mov [ edx - 0x1 ] 0xb
cmp [ edx ] 0x8
jne r-xdata
mov al [ edx - 0x1 ]
cmp al 0xc
je r-xdata
mov eax esi
jmp r-xdata
jmp r-xdata
mov esi [ esp + 0xc ]
mov cl ch
mov [ esi + edx ] al
inc edx
cmp edx ebp
jne r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov eax 0x3
jmp r-xdata
movzx ebx al
mov eax [ esp + 0x4 ]
lea ecx [ esi + esi * 2 ]
xor ebp ebp
mov edx [ edi + ecx * 4 + 0x4 ]
mov ecx 0x269
dec ebp
lea eax [ eax + esi ]
test ebp ebp
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
cmp eax 0x1
lea eax [ eax - 0x1 ]
mov ebx 0xffffffff
jg r-xdata
mov bl [ edx ]
test bl 0x1
jne r-xdata
test edi edi
jle r-xdata
add bl 0x2
cmp bh 0x8
je r-xdata
mov ebx eax
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
add ebx ecx
push ecx
push 0x0
push [ esp + 0x8 ]
xor ebx ebx
inc ebx
xor ecx ecx
xor ebx ebx
mov edx 0x1600
inc ebx
mov al [ edi + ecx + 0x1 ]
cmp al 0x8
je r-xdata
mov [ edi + ecx ] 0x8
mov [ edx - 0x1 ] 0x8
jmp r-xdata
lea esi [ ebp - 0x1 ]
test ebp ebp
jle r-xdata
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push ebx
push esi
push edi
call sub_43d788
add esp 0x10
dec ebx
test bl bl
jne r-xdata
lea esi [ edi + 0x4 ]
xor edi edi
mov ebx ecx
mov cl [ edi * 4 + r--data ]
mov bl 0x2
mov ch cl
add ch 0xf1
cmp ch bl
jae r-xdata
lea ecx [ eax + eax * 2 ]
mov ebp ebx
mov edx [ edi + ecx * 4 + 0x4 ]
mov edi 0x269
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0xc ]
mov edi [ esp + 0x4 ]
mov eax 0x901
cmp bh 0x3
jne r-xdata
add ebx ecx
push ecx
push 0x3
push [ esp + 0x8 ]
jmp r-xdata
inc ecx
cmp ebp ecx
jne r-xdata
bt edx eax
jae r-xdata
cmp al 0xa
mov ebx edx
jne r-xdata
inc edi
add esi 0xc
cmp ebp edi
jne r-xdata
push esi
call sub_43e48d
add esp 0x4
cmp cl 0x11
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ eax ] cl
jmp r-xdata
inc edi
inc edx
dec ecx
jne r-xdata
movzx ebp [ edx ]
cmp ebp 0xb
ja r-xdata
inc bl
jmp r-xdata
call sub_49acf0
add esp 0xc
jmp r-xdata
movzx eax [ edi + ecx ]
cmp eax 0xc
ja r-xdata
test ebp ebp
jle r-xdata
mov [ edi + ecx ] 0x12
mov al [ edi + ebx ]
cmp ebx ebp
jge r-xdata
mov eax [ esp + 0x4 ]
test [ eax + edi ] 0x1
je r-xdata
mov eax [ esp + 0x4 ]
cmp ebp 0x1
mov dl [ eax ]
je r-xdata
mov [ esp ] esi
jmp r-xdata
mov bl [ edi ]
test bl 0x1
je r-xdata
bt eax ebp
jae r-xdata
mov [ edx ] bl
mov eax [ esp ]
xor ecx ecx
cmp al 0x8
jne r-xdata
inc ebx
cmp al 0xa
je r-xdata
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
test ebp ebp
jle r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
inc bl
mov [ edi ] bl
inc ecx
cmp ecx ebp
jne r-xdata
mov bl 0x8
mov edx ecx
jmp r-xdata
mov eax edx
mov esi eax
lea ecx [ ebp - 0x1 ]
inc esi
mov ecx [ esp ]
cmp ecx [ esp + 0x30 ]
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
cmp [ edi + ecx ] 0x8
jne r-xdata
mov eax ebx
add al 0xfd
cmp al 0x2
jb r-xdata
inc esi
dec ecx
mov edx eax
jne r-xdata
mov eax edx
mov ecx [ esp ]
mov edx [ esp + 0x2c ]
xor ebp ebp
dec ebp
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ecx 0x269
cmp [ esp ] esi
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
test bl bl
je r-xdata
mov al [ esi ]
cmp al dl
ja r-xdata
jmp r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx [ esp ]
mov edx ecx
movzx ecx [ esp + 0x10 ]
sub edx esi
push edx
push ecx
push eax
call sub_49acf0
add esp 0xc
jmp r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x11
jne r-xdata
mov [ edi + ecx ] 0x0
test edx edx
jg r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ecx [ esp ]
inc ecx
cmp ecx [ esp + 0x30 ]
mov [ esp ] ecx
jl r-xdata
mov bl [ edi + edx - 0x1 ]
dec edx
jmp r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0xf
je r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x10
je r-xdata
sub_43dca2
mov eax [ esp + 0x4 ]
add cl 0x2
and cl 0xfe
mov [ eax + edx ] cl
xor eax eax
mov [ esp ] 0x0
jmp r-xdata
xor esi esi
inc esi
mov [ esp + 0x14 ] esi
jmp r-xdata
mov ch cl
lea eax [ edx + edx * 2 ]
xor ebp ebp
mov esi 0x269
mov eax [ edi + eax * 4 + 0x4 ]
dec ebp
cmp [ esp + 0x14 ] 0x0
mov ecx [ esp + 0x4 ]
je r-xdata
mov al 0x12
lea edi [ esi + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] eax
jg r-xdata
mov edi [ esp + 0xc ]
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
mov eax [ esp ]
mov esi ebx
mov edi esi
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] eax
mov ebp ebx
jl r-xdata
cmp [ edi ] 0xd
jne r-xdata
mov eax 0xe6
mov ecx ebp
mov edx edi
mov eax ebp
mov ebx esi
mov al [ edi * 4 + r--data ]
mov ch al
dec ch
cmp ch 0x10
ja r-xdata
cmp ebp 0x2
jl r-xdata
mov [ edi ] bl
inc edx
dec ecx
jne r-xdata
movzx esi bl
bt eax esi
jae r-xdata
and [ ecx ] 0x3f
inc ecx
dec eax
jne r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x4 ]
mov [ esi + edx ] cl
cmp [ esp ] 0x12
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
movzx esi ch
jmp [ esi * 4 + jump_table_408be0 ]
mov [ esp + 0x10 ] ebx
test ebp ebp
mov ebx 0x1
jle r-xdata
lea eax [ edi + 0x1 ]
lea ecx [ ebp - 0x1 ]
mov bl [ edx ]
cmp bl 0x7
ja r-xdata
mov ebx [ esp + 0x10 ]
mov [ edx ] 0xe
mov esi [ esp + 0x4 ]
add cl 0x2
and cl 0xfe
mov [ esi + edx ] cl
mov eax [ esp ]
test al al
je r-xdata
lea esi [ ebp - 0x1 ]
xor eax eax
jmp r-xdata
xor eax eax
inc eax
dec ecx
jne r-xdata
mov dl [ eax - 0x1 ]
mov [ eax ] dl
mov eax ecx
or al 0x80
cmp al 0x3
mov eax ecx
jne r-xdata
cmp ebp 0x2
jl r-xdata
inc eax
cmp eax ebp
jne r-xdata
mov dl 0x8
mov ecx eax
jmp r-xdata
cmp [ eax ] 0xd
jne r-xdata
mov cl 0x12
mov [ esp ] ecx
mov ch [ esp + 0xb ]
jmp r-xdata
mov [ esi + edx ] al
mov al 0x1
mov [ esp + 0xb ] cl
jmp r-xdata
mov eax ecx
or al 0x40
jmp r-xdata
test al al
je r-xdata
cmp [ edi ] 0x12
jne r-xdata
cmp [ edi + eax ] 0x8
jne r-xdata
test ebp ebp
jle r-xdata
test dl dl
je r-xdata
mov esi [ esp + 0xc ]
mov cl ch
mov [ esi + edx ] al
inc edx
cmp edx ebp
jne r-xdata
cmp ebp 0x2
jl r-xdata
lea eax [ edi + 0x1 ]
mov [ esp + 0x14 ] eax
mov cl [ edi + 0x1 ]
cmp cl 0x7
jg r-xdata
xor eax eax
cmp dl 0x3
je r-xdata
test ebp ebp
jle r-xdata
cmp [ edi + esi ] 0x12
jne r-xdata
inc ebx
cmp ebx esi
jl r-xdata
mov cl [ edi + ebx - 0x1 ]
lea eax [ edi + ebx ]
cmp cl 0x7
jg r-xdata
cmp cl 0xb
je r-xdata
test cl cl
je r-xdata
inc eax
cmp ebp eax
jne r-xdata
mov [ edi + eax ] 0x3
cmp dl 0x4
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov eax esi
cmp ebp 0x2
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax edi
mov al [ edi + ebp - 0x2 ]
cmp al 0x7
jg r-xdata
cmp [ edi + ebx ] 0x12
jne r-xdata
cmp cl 0x8
je r-xdata
test cl cl
je r-xdata
mov [ edi ] 0x3
jmp r-xdata
cmp cl 0x8
jne r-xdata
mov [ edi ] 0x0
cmp cl 0x3
je r-xdata
cmp [ edi + eax ] 0x4
jne r-xdata
cmp ebp 0x2
setg al
cmp ebp 0x3
jl r-xdata
mov [ edi + eax ] 0xb
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x10 ]
sub esi eax
jle r-xdata
xor ebx ebx
mov eax esi
dec ebx
inc edx
inc ecx
dec eax
jne r-xdata
mov bl [ ecx ]
and bl 0x1
neg bl
and bl 0x3
mov [ edx ] bl
cmp al 0xb
je r-xdata
test al al
je r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0xb
jne r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0x3
je r-xdata
jmp r-xdata
xor eax eax
mov esi eax
lea ecx [ ebp - 0x2 ]
lea edx [ edi + 0x2 ]
mov dl [ edi + ecx - 0x1 ]
dec ecx
jmp r-xdata
test ebp ebp
jle r-xdata
inc eax
cmp eax ebp
jge r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
lea ecx [ edi + ebp ]
mov ebx ecx
shr ebx 0x1f
add ebx ecx
sar ebx 0x1
lea ecx [ ebx + ebx * 2 ]
cmp [ ecx * 4 + r--data ] edx
jg r-xdata
cmp [ edx ] 0x12
jne r-xdata
test edi edi
jle r-xdata
mov [ edi + esi ] 0x3
jmp r-xdata
cmp al 0x8
jne r-xdata
mov [ edi + esi ] 0x0
cmp al 0x3
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
jmp r-xdata
xor ecx ecx
xor edx edx
mov [ esp ] eax
inc edx
mov al [ edx - 0x2 ]
cmp al 0xb
je r-xdata
cmp al 0x9
jne r-xdata
mov eax [ esp + 0x4 ]
mov al [ eax ]
jmp r-xdata
xor esi esi
add eax [ esp + 0x4 ]
movzx ecx cl
push esi
push ecx
push eax
call sub_49acf0
add esp 0xc
mov edi ebx
mov ecx edi
sub ecx ebp
cmp ecx 0x2
jl r-xdata
cmp [ ecx * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov eax edi
jmp r-xdata
cmp bl 0xb
ja r-xdata
cmp bl 0x12
je r-xdata
test bl bl
jne r-xdata
cmp bl 0x12
je r-xdata
inc ecx
inc edx
cmp ecx ebp
jne r-xdata
test ecx ecx
jle r-xdata
cmp [ edx ] 0xb
jne r-xdata
cmp al 0x8
jne r-xdata
inc edx
dec ecx
jne r-xdata
cmp [ edx - 0x2 ] 0x8
je r-xdata
mov esi [ esp + 0x4 ]
test al al
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
inc esi
cmp esi ebp
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ebx edi
cmp [ ecx * 4 + r--data ] 0x11
jne r-xdata
inc edx
inc ecx
dec eax
jne r-xdata
mov bh [ ecx ]
cmp bh 0xb
je r-xdata
mov edi [ esp + 0xc ]
movzx edx bl
mov edi 0x908
bt edi edx
mov edi [ esp + 0xc ]
jae r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
mov edi [ esp + 0xc ]
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
cmp [ edi + ecx ] 0xa
jne r-xdata
test ebp ebp
jle r-xdata
cmp ecx esi
jge r-xdata
cmp [ edi + ecx - 0x1 ] 0x8
je r-xdata
mov [ edx - 0x1 ] 0xb
cmp [ edx ] 0x8
jne r-xdata
mov al [ edx - 0x1 ]
cmp al 0xc
je r-xdata
mov eax esi
jmp r-xdata
jmp r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov eax 0x3
jmp r-xdata
movzx ebx al
mov eax [ esp + 0x4 ]
lea ecx [ esi + esi * 2 ]
xor ebp ebp
mov edx [ edi + ecx * 4 + 0x4 ]
mov ecx 0x269
dec ebp
lea eax [ eax + esi ]
test ebp ebp
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
cmp eax 0x1
lea eax [ eax - 0x1 ]
mov ebx 0xffffffff
jg r-xdata
mov bl [ edx ]
test bl 0x1
jne r-xdata
test edi edi
jle r-xdata
add bl 0x2
cmp bh 0x8
je r-xdata
mov ebx eax
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
add ebx ecx
push ecx
push 0x0
push [ esp + 0x8 ]
xor ebx ebx
inc ebx
xor ecx ecx
xor ebx ebx
mov edx 0x1600
inc ebx
mov al [ edi + ecx + 0x1 ]
cmp al 0x8
je r-xdata
mov [ edi + ecx ] 0x8
mov [ edx - 0x1 ] 0x8
jmp r-xdata
lea esi [ ebp - 0x1 ]
test ebp ebp
jle r-xdata
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push ebx
push esi
push edi
call sub_43d788
add esp 0x10
dec ebx
test bl bl
jne r-xdata
lea esi [ edi + 0x4 ]
xor edi edi
mov ebx ecx
mov cl [ edi * 4 + r--data ]
mov bl 0x2
mov ch cl
add ch 0xf1
cmp ch bl
jae r-xdata
lea ecx [ eax + eax * 2 ]
mov ebp ebx
mov edx [ edi + ecx * 4 + 0x4 ]
mov edi 0x269
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0xc ]
mov edi [ esp + 0x4 ]
mov eax 0x901
cmp bh 0x3
jne r-xdata
add ebx ecx
push ecx
push 0x3
push [ esp + 0x8 ]
jmp r-xdata
inc ecx
cmp ebp ecx
jne r-xdata
bt edx eax
jae r-xdata
cmp al 0xa
mov ebx edx
jne r-xdata
inc edi
add esi 0xc
cmp ebp edi
jne r-xdata
push esi
call sub_43e48d
add esp 0x4
cmp cl 0x11
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ eax ] cl
jmp r-xdata
inc edi
inc edx
dec ecx
jne r-xdata
movzx ebp [ edx ]
cmp ebp 0xb
ja r-xdata
inc bl
jmp r-xdata
call sub_49acf0
add esp 0xc
jmp r-xdata
movzx eax [ edi + ecx ]
cmp eax 0xc
ja r-xdata
test ebp ebp
jle r-xdata
mov [ edi + ecx ] 0x12
mov al [ edi + ebx ]
cmp ebx ebp
jge r-xdata
mov eax [ esp + 0x4 ]
test [ eax + edi ] 0x1
je r-xdata
mov eax [ esp + 0x4 ]
cmp ebp 0x1
mov dl [ eax ]
je r-xdata
mov [ esp ] esi
jmp r-xdata
mov bl [ edi ]
test bl 0x1
je r-xdata
bt eax ebp
jae r-xdata
mov [ edx ] bl
mov eax [ esp ]
xor ecx ecx
cmp al 0x8
jne r-xdata
inc ebx
cmp al 0xa
je r-xdata
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
test ebp ebp
jle r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
inc bl
mov [ edi ] bl
inc ecx
cmp ecx ebp
jne r-xdata
mov bl 0x8
mov edx ecx
jmp r-xdata
mov eax edx
mov esi eax
lea ecx [ ebp - 0x1 ]
inc esi
mov ecx [ esp ]
cmp ecx [ esp + 0x30 ]
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
cmp [ edi + ecx ] 0x8
jne r-xdata
mov eax ebx
add al 0xfd
cmp al 0x2
jb r-xdata
inc esi
dec ecx
mov edx eax
jne r-xdata
mov eax edx
mov ecx [ esp ]
mov edx [ esp + 0x2c ]
xor ebp ebp
dec ebp
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ecx 0x269
cmp [ esp ] esi
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
test bl bl
je r-xdata
mov al [ esi ]
cmp al dl
ja r-xdata
jmp r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx [ esp ]
mov edx ecx
movzx ecx [ esp + 0x10 ]
sub edx esi
push edx
push ecx
push eax
call sub_49acf0
add esp 0xc
jmp r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x11
jne r-xdata
mov [ edi + ecx ] 0x0
test edx edx
jg r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ecx [ esp ]
inc ecx
cmp ecx [ esp + 0x30 ]
mov [ esp ] ecx
jl r-xdata
mov bl [ edi + edx - 0x1 ]
dec edx
jmp r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0xf
je r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x10
je r-xdata
sub_43dcba
mov esi [ esp + 0x4 ]
inc cl
mov ch cl
or ch 0x1
mov [ esi + edx ] ch
mov [ esp + 0xb ] ch
mov eax [ esp ]
test al al
je r-xdata
or cl 0x81
cmp al 0x3
mov al ch
jne r-xdata
mov esi [ esp + 0xc ]
mov cl ch
mov [ esi + edx ] al
inc edx
cmp edx ebp
jne r-xdata
mov [ esi + edx ] al
mov al 0x5
or cl 0x41
jmp r-xdata
lea eax [ edx + edx * 2 ]
xor ebp ebp
mov esi 0x269
mov eax [ edi + eax * 4 + 0x4 ]
dec ebp
cmp [ esp + 0x14 ] 0x0
mov ecx [ esp + 0x4 ]
je r-xdata
mov eax ecx
mov al 0x12
lea edi [ esi + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] eax
jg r-xdata
mov edi [ esp + 0xc ]
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
mov ch cl
mov eax [ esp ]
mov esi ebx
mov edi esi
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] eax
mov ebp ebx
jl r-xdata
cmp [ edi ] 0xd
jne r-xdata
mov eax 0xe6
mov ecx ebp
mov edx edi
mov eax ebp
mov ebx esi
mov al [ edi * 4 + r--data ]
mov ch al
dec ch
cmp ch 0x10
ja r-xdata
cmp ebp 0x2
jl r-xdata
mov [ edi ] bl
inc edx
dec ecx
jne r-xdata
movzx esi bl
bt eax esi
jae r-xdata
and [ ecx ] 0x3f
inc ecx
dec eax
jne r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x4 ]
mov [ esi + edx ] cl
cmp [ esp ] 0x12
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
movzx esi ch
jmp [ esi * 4 + jump_table_408be0 ]
mov [ esp + 0x10 ] ebx
test ebp ebp
mov ebx 0x1
jle r-xdata
lea eax [ edi + 0x1 ]
lea ecx [ ebp - 0x1 ]
mov bl [ edx ]
cmp bl 0x7
ja r-xdata
mov ebx [ esp + 0x10 ]
mov [ edx ] 0xe
mov esi [ esp + 0x4 ]
add cl 0x2
and cl 0xfe
mov [ esi + edx ] cl
mov eax [ esp ]
test al al
je r-xdata
lea esi [ ebp - 0x1 ]
xor eax eax
jmp r-xdata
xor eax eax
inc eax
dec ecx
jne r-xdata
mov dl [ eax - 0x1 ]
mov [ eax ] dl
mov eax ecx
or al 0x80
cmp al 0x3
mov eax ecx
jne r-xdata
cmp ebp 0x2
jl r-xdata
inc eax
cmp eax ebp
jne r-xdata
mov dl 0x8
mov ecx eax
jmp r-xdata
cmp [ eax ] 0xd
jne r-xdata
mov cl 0x12
mov [ esp ] ecx
mov ch [ esp + 0xb ]
jmp r-xdata
mov [ esi + edx ] al
mov al 0x1
mov [ esp + 0xb ] cl
jmp r-xdata
mov eax ecx
or al 0x40
jmp r-xdata
test al al
je r-xdata
cmp [ edi ] 0x12
jne r-xdata
cmp [ edi + eax ] 0x8
jne r-xdata
test ebp ebp
jle r-xdata
test dl dl
je r-xdata
cmp ebp 0x2
jl r-xdata
lea eax [ edi + 0x1 ]
mov [ esp + 0x14 ] eax
mov cl [ edi + 0x1 ]
cmp cl 0x7
jg r-xdata
xor eax eax
cmp dl 0x3
je r-xdata
test ebp ebp
jle r-xdata
cmp [ edi + esi ] 0x12
jne r-xdata
inc ebx
cmp ebx esi
jl r-xdata
mov cl [ edi + ebx - 0x1 ]
lea eax [ edi + ebx ]
cmp cl 0x7
jg r-xdata
cmp cl 0xb
je r-xdata
test cl cl
je r-xdata
inc eax
cmp ebp eax
jne r-xdata
mov [ edi + eax ] 0x3
cmp dl 0x4
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov eax esi
cmp ebp 0x2
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax edi
mov al [ edi + ebp - 0x2 ]
cmp al 0x7
jg r-xdata
cmp [ edi + ebx ] 0x12
jne r-xdata
cmp cl 0x8
je r-xdata
test cl cl
je r-xdata
mov [ edi ] 0x3
jmp r-xdata
cmp cl 0x8
jne r-xdata
mov [ edi ] 0x0
cmp cl 0x3
je r-xdata
cmp [ edi + eax ] 0x4
jne r-xdata
cmp ebp 0x2
setg al
cmp ebp 0x3
jl r-xdata
mov [ edi + eax ] 0xb
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x10 ]
sub esi eax
jle r-xdata
xor ebx ebx
mov eax esi
dec ebx
inc edx
inc ecx
dec eax
jne r-xdata
mov bl [ ecx ]
and bl 0x1
neg bl
and bl 0x3
mov [ edx ] bl
cmp al 0xb
je r-xdata
test al al
je r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0xb
jne r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0x3
je r-xdata
jmp r-xdata
xor eax eax
mov esi eax
lea ecx [ ebp - 0x2 ]
lea edx [ edi + 0x2 ]
mov dl [ edi + ecx - 0x1 ]
dec ecx
jmp r-xdata
test ebp ebp
jle r-xdata
inc eax
cmp eax ebp
jge r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
lea ecx [ edi + ebp ]
mov ebx ecx
shr ebx 0x1f
add ebx ecx
sar ebx 0x1
lea ecx [ ebx + ebx * 2 ]
cmp [ ecx * 4 + r--data ] edx
jg r-xdata
cmp [ edx ] 0x12
jne r-xdata
test edi edi
jle r-xdata
mov [ edi + esi ] 0x3
jmp r-xdata
cmp al 0x8
jne r-xdata
mov [ edi + esi ] 0x0
cmp al 0x3
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
jmp r-xdata
xor ecx ecx
xor edx edx
mov [ esp ] eax
inc edx
mov al [ edx - 0x2 ]
cmp al 0xb
je r-xdata
cmp al 0x9
jne r-xdata
mov eax [ esp + 0x4 ]
mov al [ eax ]
jmp r-xdata
xor esi esi
add eax [ esp + 0x4 ]
movzx ecx cl
push esi
push ecx
push eax
call sub_49acf0
add esp 0xc
mov edi ebx
mov ecx edi
sub ecx ebp
cmp ecx 0x2
jl r-xdata
cmp [ ecx * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov eax edi
jmp r-xdata
cmp bl 0xb
ja r-xdata
cmp bl 0x12
je r-xdata
test bl bl
jne r-xdata
cmp bl 0x12
je r-xdata
inc ecx
inc edx
cmp ecx ebp
jne r-xdata
test ecx ecx
jle r-xdata
cmp [ edx ] 0xb
jne r-xdata
cmp al 0x8
jne r-xdata
inc edx
dec ecx
jne r-xdata
cmp [ edx - 0x2 ] 0x8
je r-xdata
mov esi [ esp + 0x4 ]
test al al
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
inc esi
cmp esi ebp
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ebx edi
cmp [ ecx * 4 + r--data ] 0x11
jne r-xdata
inc edx
inc ecx
dec eax
jne r-xdata
mov bh [ ecx ]
cmp bh 0xb
je r-xdata
mov edi [ esp + 0xc ]
movzx edx bl
mov edi 0x908
bt edi edx
mov edi [ esp + 0xc ]
jae r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
mov edi [ esp + 0xc ]
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
cmp [ edi + ecx ] 0xa
jne r-xdata
test ebp ebp
jle r-xdata
cmp ecx esi
jge r-xdata
cmp [ edi + ecx - 0x1 ] 0x8
je r-xdata
mov [ edx - 0x1 ] 0xb
cmp [ edx ] 0x8
jne r-xdata
mov al [ edx - 0x1 ]
cmp al 0xc
je r-xdata
mov eax esi
jmp r-xdata
jmp r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov eax 0x3
jmp r-xdata
movzx ebx al
mov eax [ esp + 0x4 ]
lea ecx [ esi + esi * 2 ]
xor ebp ebp
mov edx [ edi + ecx * 4 + 0x4 ]
mov ecx 0x269
dec ebp
lea eax [ eax + esi ]
test ebp ebp
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
cmp eax 0x1
lea eax [ eax - 0x1 ]
mov ebx 0xffffffff
jg r-xdata
mov bl [ edx ]
test bl 0x1
jne r-xdata
test edi edi
jle r-xdata
add bl 0x2
cmp bh 0x8
je r-xdata
mov ebx eax
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
add ebx ecx
push ecx
push 0x0
push [ esp + 0x8 ]
xor ebx ebx
inc ebx
xor ecx ecx
xor ebx ebx
mov edx 0x1600
inc ebx
mov al [ edi + ecx + 0x1 ]
cmp al 0x8
je r-xdata
mov [ edi + ecx ] 0x8
mov [ edx - 0x1 ] 0x8
jmp r-xdata
lea esi [ ebp - 0x1 ]
test ebp ebp
jle r-xdata
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push ebx
push esi
push edi
call sub_43d788
add esp 0x10
dec ebx
test bl bl
jne r-xdata
lea esi [ edi + 0x4 ]
xor edi edi
mov ebx ecx
mov cl [ edi * 4 + r--data ]
mov bl 0x2
mov ch cl
add ch 0xf1
cmp ch bl
jae r-xdata
lea ecx [ eax + eax * 2 ]
mov ebp ebx
mov edx [ edi + ecx * 4 + 0x4 ]
mov edi 0x269
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0xc ]
mov edi [ esp + 0x4 ]
mov eax 0x901
cmp bh 0x3
jne r-xdata
add ebx ecx
push ecx
push 0x3
push [ esp + 0x8 ]
jmp r-xdata
inc ecx
cmp ebp ecx
jne r-xdata
bt edx eax
jae r-xdata
cmp al 0xa
mov ebx edx
jne r-xdata
inc edi
add esi 0xc
cmp ebp edi
jne r-xdata
push esi
call sub_43e48d
add esp 0x4
cmp cl 0x11
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ eax ] cl
jmp r-xdata
inc edi
inc edx
dec ecx
jne r-xdata
movzx ebp [ edx ]
cmp ebp 0xb
ja r-xdata
inc bl
jmp r-xdata
call sub_49acf0
add esp 0xc
jmp r-xdata
movzx eax [ edi + ecx ]
cmp eax 0xc
ja r-xdata
test ebp ebp
jle r-xdata
mov [ edi + ecx ] 0x12
mov al [ edi + ebx ]
cmp ebx ebp
jge r-xdata
mov eax [ esp + 0x4 ]
test [ eax + edi ] 0x1
je r-xdata
mov eax [ esp + 0x4 ]
cmp ebp 0x1
mov dl [ eax ]
je r-xdata
mov [ esp ] esi
jmp r-xdata
mov bl [ edi ]
test bl 0x1
je r-xdata
bt eax ebp
jae r-xdata
mov [ edx ] bl
mov eax [ esp ]
xor ecx ecx
cmp al 0x8
jne r-xdata
inc ebx
cmp al 0xa
je r-xdata
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
test ebp ebp
jle r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
inc bl
mov [ edi ] bl
inc ecx
cmp ecx ebp
jne r-xdata
mov bl 0x8
mov edx ecx
jmp r-xdata
mov eax edx
mov esi eax
lea ecx [ ebp - 0x1 ]
inc esi
mov ecx [ esp ]
cmp ecx [ esp + 0x30 ]
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
cmp [ edi + ecx ] 0x8
jne r-xdata
mov eax ebx
add al 0xfd
cmp al 0x2
jb r-xdata
inc esi
dec ecx
mov edx eax
jne r-xdata
mov eax edx
mov ecx [ esp ]
mov edx [ esp + 0x2c ]
xor ebp ebp
dec ebp
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ecx 0x269
cmp [ esp ] esi
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
test bl bl
je r-xdata
mov al [ esi ]
cmp al dl
ja r-xdata
jmp r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx [ esp ]
mov edx ecx
movzx ecx [ esp + 0x10 ]
sub edx esi
push edx
push ecx
push eax
call sub_49acf0
add esp 0xc
jmp r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x11
jne r-xdata
mov [ edi + ecx ] 0x0
test edx edx
jg r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ecx [ esp ]
inc ecx
cmp ecx [ esp + 0x30 ]
mov [ esp ] ecx
jl r-xdata
mov bl [ edi + edx - 0x1 ]
dec edx
jmp r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0xf
je r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x10
je r-xdata
sub_43dcde
mov eax [ esp + 0x4 ]
inc cl
or cl 0x1
mov [ eax + edx ] cl
mov al 0x3
mov [ esp ] eax
mov al 0x3
xor esi esi
inc esi
mov [ esp + 0x14 ] esi
jmp r-xdata
mov ch cl
lea eax [ edx + edx * 2 ]
xor ebp ebp
mov esi 0x269
mov eax [ edi + eax * 4 + 0x4 ]
dec ebp
cmp [ esp + 0x14 ] 0x0
mov ecx [ esp + 0x4 ]
je r-xdata
mov al 0x12
lea edi [ esi + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] eax
jg r-xdata
mov edi [ esp + 0xc ]
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
mov eax [ esp ]
mov esi ebx
mov edi esi
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] eax
mov ebp ebx
jl r-xdata
cmp [ edi ] 0xd
jne r-xdata
mov eax 0xe6
mov ecx ebp
mov edx edi
mov eax ebp
mov ebx esi
mov al [ edi * 4 + r--data ]
mov ch al
dec ch
cmp ch 0x10
ja r-xdata
cmp ebp 0x2
jl r-xdata
mov [ edi ] bl
inc edx
dec ecx
jne r-xdata
movzx esi bl
bt eax esi
jae r-xdata
and [ ecx ] 0x3f
inc ecx
dec eax
jne r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x4 ]
mov [ esi + edx ] cl
cmp [ esp ] 0x12
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
movzx esi ch
jmp [ esi * 4 + jump_table_408be0 ]
mov [ esp + 0x10 ] ebx
test ebp ebp
mov ebx 0x1
jle r-xdata
lea eax [ edi + 0x1 ]
lea ecx [ ebp - 0x1 ]
mov bl [ edx ]
cmp bl 0x7
ja r-xdata
mov ebx [ esp + 0x10 ]
mov [ edx ] 0xe
mov esi [ esp + 0x4 ]
add cl 0x2
and cl 0xfe
mov [ esi + edx ] cl
mov eax [ esp ]
test al al
je r-xdata
lea esi [ ebp - 0x1 ]
xor eax eax
jmp r-xdata
xor eax eax
inc eax
dec ecx
jne r-xdata
mov dl [ eax - 0x1 ]
mov [ eax ] dl
mov eax ecx
or al 0x80
cmp al 0x3
mov eax ecx
jne r-xdata
cmp ebp 0x2
jl r-xdata
inc eax
cmp eax ebp
jne r-xdata
mov dl 0x8
mov ecx eax
jmp r-xdata
cmp [ eax ] 0xd
jne r-xdata
mov cl 0x12
mov [ esp ] ecx
mov ch [ esp + 0xb ]
jmp r-xdata
mov [ esi + edx ] al
mov al 0x1
mov [ esp + 0xb ] cl
jmp r-xdata
mov eax ecx
or al 0x40
jmp r-xdata
test al al
je r-xdata
cmp [ edi ] 0x12
jne r-xdata
cmp [ edi + eax ] 0x8
jne r-xdata
test ebp ebp
jle r-xdata
test dl dl
je r-xdata
mov esi [ esp + 0xc ]
mov cl ch
mov [ esi + edx ] al
inc edx
cmp edx ebp
jne r-xdata
cmp ebp 0x2
jl r-xdata
lea eax [ edi + 0x1 ]
mov [ esp + 0x14 ] eax
mov cl [ edi + 0x1 ]
cmp cl 0x7
jg r-xdata
xor eax eax
cmp dl 0x3
je r-xdata
test ebp ebp
jle r-xdata
cmp [ edi + esi ] 0x12
jne r-xdata
inc ebx
cmp ebx esi
jl r-xdata
mov cl [ edi + ebx - 0x1 ]
lea eax [ edi + ebx ]
cmp cl 0x7
jg r-xdata
cmp cl 0xb
je r-xdata
test cl cl
je r-xdata
inc eax
cmp ebp eax
jne r-xdata
mov [ edi + eax ] 0x3
cmp dl 0x4
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov eax esi
cmp ebp 0x2
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax edi
mov al [ edi + ebp - 0x2 ]
cmp al 0x7
jg r-xdata
cmp [ edi + ebx ] 0x12
jne r-xdata
cmp cl 0x8
je r-xdata
test cl cl
je r-xdata
mov [ edi ] 0x3
jmp r-xdata
cmp cl 0x8
jne r-xdata
mov [ edi ] 0x0
cmp cl 0x3
je r-xdata
cmp [ edi + eax ] 0x4
jne r-xdata
cmp ebp 0x2
setg al
cmp ebp 0x3
jl r-xdata
mov [ edi + eax ] 0xb
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x10 ]
sub esi eax
jle r-xdata
xor ebx ebx
mov eax esi
dec ebx
inc edx
inc ecx
dec eax
jne r-xdata
mov bl [ ecx ]
and bl 0x1
neg bl
and bl 0x3
mov [ edx ] bl
cmp al 0xb
je r-xdata
test al al
je r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0xb
jne r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0x3
je r-xdata
jmp r-xdata
xor eax eax
mov esi eax
lea ecx [ ebp - 0x2 ]
lea edx [ edi + 0x2 ]
mov dl [ edi + ecx - 0x1 ]
dec ecx
jmp r-xdata
test ebp ebp
jle r-xdata
inc eax
cmp eax ebp
jge r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
lea ecx [ edi + ebp ]
mov ebx ecx
shr ebx 0x1f
add ebx ecx
sar ebx 0x1
lea ecx [ ebx + ebx * 2 ]
cmp [ ecx * 4 + r--data ] edx
jg r-xdata
cmp [ edx ] 0x12
jne r-xdata
test edi edi
jle r-xdata
mov [ edi + esi ] 0x3
jmp r-xdata
cmp al 0x8
jne r-xdata
mov [ edi + esi ] 0x0
cmp al 0x3
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
jmp r-xdata
xor ecx ecx
xor edx edx
mov [ esp ] eax
inc edx
mov al [ edx - 0x2 ]
cmp al 0xb
je r-xdata
cmp al 0x9
jne r-xdata
mov eax [ esp + 0x4 ]
mov al [ eax ]
jmp r-xdata
xor esi esi
add eax [ esp + 0x4 ]
movzx ecx cl
push esi
push ecx
push eax
call sub_49acf0
add esp 0xc
mov edi ebx
mov ecx edi
sub ecx ebp
cmp ecx 0x2
jl r-xdata
cmp [ ecx * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov eax edi
jmp r-xdata
cmp bl 0xb
ja r-xdata
cmp bl 0x12
je r-xdata
test bl bl
jne r-xdata
cmp bl 0x12
je r-xdata
inc ecx
inc edx
cmp ecx ebp
jne r-xdata
test ecx ecx
jle r-xdata
cmp [ edx ] 0xb
jne r-xdata
cmp al 0x8
jne r-xdata
inc edx
dec ecx
jne r-xdata
cmp [ edx - 0x2 ] 0x8
je r-xdata
mov esi [ esp + 0x4 ]
test al al
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
inc esi
cmp esi ebp
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ebx edi
cmp [ ecx * 4 + r--data ] 0x11
jne r-xdata
inc edx
inc ecx
dec eax
jne r-xdata
mov bh [ ecx ]
cmp bh 0xb
je r-xdata
mov edi [ esp + 0xc ]
movzx edx bl
mov edi 0x908
bt edi edx
mov edi [ esp + 0xc ]
jae r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
mov edi [ esp + 0xc ]
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
cmp [ edi + ecx ] 0xa
jne r-xdata
test ebp ebp
jle r-xdata
cmp ecx esi
jge r-xdata
cmp [ edi + ecx - 0x1 ] 0x8
je r-xdata
mov [ edx - 0x1 ] 0xb
cmp [ edx ] 0x8
jne r-xdata
mov al [ edx - 0x1 ]
cmp al 0xc
je r-xdata
mov eax esi
jmp r-xdata
jmp r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov eax 0x3
jmp r-xdata
movzx ebx al
mov eax [ esp + 0x4 ]
lea ecx [ esi + esi * 2 ]
xor ebp ebp
mov edx [ edi + ecx * 4 + 0x4 ]
mov ecx 0x269
dec ebp
lea eax [ eax + esi ]
test ebp ebp
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
cmp eax 0x1
lea eax [ eax - 0x1 ]
mov ebx 0xffffffff
jg r-xdata
mov bl [ edx ]
test bl 0x1
jne r-xdata
test edi edi
jle r-xdata
add bl 0x2
cmp bh 0x8
je r-xdata
mov ebx eax
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
add ebx ecx
push ecx
push 0x0
push [ esp + 0x8 ]
xor ebx ebx
inc ebx
xor ecx ecx
xor ebx ebx
mov edx 0x1600
inc ebx
mov al [ edi + ecx + 0x1 ]
cmp al 0x8
je r-xdata
mov [ edi + ecx ] 0x8
mov [ edx - 0x1 ] 0x8
jmp r-xdata
lea esi [ ebp - 0x1 ]
test ebp ebp
jle r-xdata
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push ebx
push esi
push edi
call sub_43d788
add esp 0x10
dec ebx
test bl bl
jne r-xdata
lea esi [ edi + 0x4 ]
xor edi edi
mov ebx ecx
mov cl [ edi * 4 + r--data ]
mov bl 0x2
mov ch cl
add ch 0xf1
cmp ch bl
jae r-xdata
lea ecx [ eax + eax * 2 ]
mov ebp ebx
mov edx [ edi + ecx * 4 + 0x4 ]
mov edi 0x269
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0xc ]
mov edi [ esp + 0x4 ]
mov eax 0x901
cmp bh 0x3
jne r-xdata
add ebx ecx
push ecx
push 0x3
push [ esp + 0x8 ]
jmp r-xdata
inc ecx
cmp ebp ecx
jne r-xdata
bt edx eax
jae r-xdata
cmp al 0xa
mov ebx edx
jne r-xdata
inc edi
add esi 0xc
cmp ebp edi
jne r-xdata
push esi
call sub_43e48d
add esp 0x4
cmp cl 0x11
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ eax ] cl
jmp r-xdata
inc edi
inc edx
dec ecx
jne r-xdata
movzx ebp [ edx ]
cmp ebp 0xb
ja r-xdata
inc bl
jmp r-xdata
call sub_49acf0
add esp 0xc
jmp r-xdata
movzx eax [ edi + ecx ]
cmp eax 0xc
ja r-xdata
test ebp ebp
jle r-xdata
mov [ edi + ecx ] 0x12
mov al [ edi + ebx ]
cmp ebx ebp
jge r-xdata
mov eax [ esp + 0x4 ]
test [ eax + edi ] 0x1
je r-xdata
mov eax [ esp + 0x4 ]
cmp ebp 0x1
mov dl [ eax ]
je r-xdata
mov [ esp ] esi
jmp r-xdata
mov bl [ edi ]
test bl 0x1
je r-xdata
bt eax ebp
jae r-xdata
mov [ edx ] bl
mov eax [ esp ]
xor ecx ecx
cmp al 0x8
jne r-xdata
inc ebx
cmp al 0xa
je r-xdata
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
test ebp ebp
jle r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
inc bl
mov [ edi ] bl
inc ecx
cmp ecx ebp
jne r-xdata
mov bl 0x8
mov edx ecx
jmp r-xdata
mov eax edx
mov esi eax
lea ecx [ ebp - 0x1 ]
inc esi
mov ecx [ esp ]
cmp ecx [ esp + 0x30 ]
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
cmp [ edi + ecx ] 0x8
jne r-xdata
mov eax ebx
add al 0xfd
cmp al 0x2
jb r-xdata
inc esi
dec ecx
mov edx eax
jne r-xdata
mov eax edx
mov ecx [ esp ]
mov edx [ esp + 0x2c ]
xor ebp ebp
dec ebp
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ecx 0x269
cmp [ esp ] esi
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
test bl bl
je r-xdata
mov al [ esi ]
cmp al dl
ja r-xdata
jmp r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx [ esp ]
mov edx ecx
movzx ecx [ esp + 0x10 ]
sub edx esi
push edx
push ecx
push eax
call sub_49acf0
add esp 0xc
jmp r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x11
jne r-xdata
mov [ edi + ecx ] 0x0
test edx edx
jg r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ecx [ esp ]
inc ecx
cmp ecx [ esp + 0x30 ]
mov [ esp ] ecx
jl r-xdata
mov bl [ edi + edx - 0x1 ]
dec edx
jmp r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0xf
je r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x10
je r-xdata
sub_43dcfd
test edx edx
mov eax 0xffffffff
jle r-xdata
cmp eax 0xffffffff
mov al 0x12
mov ch bl
je r-xdata
mov eax [ esp + 0x4 ]
lea esi [ edx - 0x1 ]
mov ch [ eax + edx - 0x1 ]
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov [ eax + edx ] ch
mov al 0x7
jmp r-xdata
mov al cl
and cl 0x3f
and al 0xc0
mov ch cl
xor eax eax
dec eax
mov eax [ esp + 0x4 ]
movzx eax [ eax + esi - 0x1 ]
dec esi
cmp al ch
je r-xdata
mov esi [ esp + 0xc ]
mov cl ch
mov [ esi + edx ] al
inc edx
cmp edx ebp
jne r-xdata
test esi esi
jle r-xdata
jmp r-xdata
lea eax [ edx + edx * 2 ]
xor ebp ebp
mov esi 0x269
mov eax [ edi + eax * 4 + 0x4 ]
dec ebp
cmp [ esp + 0x14 ] 0x0
mov ecx [ esp + 0x4 ]
je r-xdata
mov al 0x12
lea edi [ esi + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] eax
jg r-xdata
mov edi [ esp + 0xc ]
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
mov ch cl
mov eax [ esp ]
mov esi ebx
mov edi esi
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] eax
mov ebp ebx
jl r-xdata
cmp [ edi ] 0xd
jne r-xdata
mov eax 0xe6
mov ecx ebp
mov edx edi
mov eax ebp
mov ebx esi
mov al [ edi * 4 + r--data ]
mov ch al
dec ch
cmp ch 0x10
ja r-xdata
cmp ebp 0x2
jl r-xdata
mov [ edi ] bl
inc edx
dec ecx
jne r-xdata
movzx esi bl
bt eax esi
jae r-xdata
and [ ecx ] 0x3f
inc ecx
dec eax
jne r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x4 ]
mov [ esi + edx ] cl
cmp [ esp ] 0x12
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x10 ]
movzx esi ch
jmp [ esi * 4 + jump_table_408be0 ]
mov [ esp + 0x10 ] ebx
test ebp ebp
mov ebx 0x1
jle r-xdata
lea eax [ edi + 0x1 ]
lea ecx [ ebp - 0x1 ]
mov bl [ edx ]
cmp bl 0x7
ja r-xdata
mov ebx [ esp + 0x10 ]
mov [ edx ] 0xe
mov esi [ esp + 0x4 ]
add cl 0x2
and cl 0xfe
mov [ esi + edx ] cl
mov eax [ esp ]
test al al
je r-xdata
lea esi [ ebp - 0x1 ]
xor eax eax
jmp r-xdata
xor eax eax
inc eax
dec ecx
jne r-xdata
mov dl [ eax - 0x1 ]
mov [ eax ] dl
mov eax ecx
or al 0x80
cmp al 0x3
mov eax ecx
jne r-xdata
cmp ebp 0x2
jl r-xdata
inc eax
cmp eax ebp
jne r-xdata
mov dl 0x8
mov ecx eax
jmp r-xdata
cmp [ eax ] 0xd
jne r-xdata
mov cl 0x12
mov [ esp ] ecx
mov ch [ esp + 0xb ]
jmp r-xdata
mov [ esi + edx ] al
mov al 0x1
mov [ esp + 0xb ] cl
jmp r-xdata
mov eax ecx
or al 0x40
jmp r-xdata
test al al
je r-xdata
cmp [ edi ] 0x12
jne r-xdata
cmp [ edi + eax ] 0x8
jne r-xdata
test ebp ebp
jle r-xdata
test dl dl
je r-xdata
cmp ebp 0x2
jl r-xdata
lea eax [ edi + 0x1 ]
mov [ esp + 0x14 ] eax
mov cl [ edi + 0x1 ]
cmp cl 0x7
jg r-xdata
xor eax eax
cmp dl 0x3
je r-xdata
test ebp ebp
jle r-xdata
cmp [ edi + esi ] 0x12
jne r-xdata
inc ebx
cmp ebx esi
jl r-xdata
mov cl [ edi + ebx - 0x1 ]
lea eax [ edi + ebx ]
cmp cl 0x7
jg r-xdata
cmp cl 0xb
je r-xdata
test cl cl
je r-xdata
inc eax
cmp ebp eax
jne r-xdata
mov [ edi + eax ] 0x3
cmp dl 0x4
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov eax esi
cmp ebp 0x2
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax edi
mov al [ edi + ebp - 0x2 ]
cmp al 0x7
jg r-xdata
cmp [ edi + ebx ] 0x12
jne r-xdata
cmp cl 0x8
je r-xdata
test cl cl
je r-xdata
mov [ edi ] 0x3
jmp r-xdata
cmp cl 0x8
jne r-xdata
mov [ edi ] 0x0
cmp cl 0x3
je r-xdata
cmp [ edi + eax ] 0x4
jne r-xdata
cmp ebp 0x2
setg al
cmp ebp 0x3
jl r-xdata
mov [ edi + eax ] 0xb
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x10 ]
sub esi eax
jle r-xdata
xor ebx ebx
mov eax esi
dec ebx
inc edx
inc ecx
dec eax
jne r-xdata
mov bl [ ecx ]
and bl 0x1
neg bl
and bl 0x3
mov [ edx ] bl
cmp al 0xb
je r-xdata
test al al
je r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0xb
jne r-xdata
cmp ebx esi
jge r-xdata
cmp cl 0x3
je r-xdata
jmp r-xdata
xor eax eax
mov esi eax
lea ecx [ ebp - 0x2 ]
lea edx [ edi + 0x2 ]
mov dl [ edi + ecx - 0x1 ]
dec ecx
jmp r-xdata
test ebp ebp
jle r-xdata
inc eax
cmp eax ebp
jge r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
lea ecx [ edi + ebp ]
mov ebx ecx
shr ebx 0x1f
add ebx ecx
sar ebx 0x1
lea ecx [ ebx + ebx * 2 ]
cmp [ ecx * 4 + r--data ] edx
jg r-xdata
cmp [ edx ] 0x12
jne r-xdata
test edi edi
jle r-xdata
mov [ edi + esi ] 0x3
jmp r-xdata
cmp al 0x8
jne r-xdata
mov [ edi + esi ] 0x0
cmp al 0x3
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax ebx
lea edx [ ecx + ebx ]
xor ecx ecx
jmp r-xdata
xor ecx ecx
xor edx edx
mov [ esp ] eax
inc edx
mov al [ edx - 0x2 ]
cmp al 0xb
je r-xdata
cmp al 0x9
jne r-xdata
mov eax [ esp + 0x4 ]
mov al [ eax ]
jmp r-xdata
xor esi esi
add eax [ esp + 0x4 ]
movzx ecx cl
push esi
push ecx
push eax
call sub_49acf0
add esp 0xc
mov edi ebx
mov ecx edi
sub ecx ebp
cmp ecx 0x2
jl r-xdata
cmp [ ecx * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov eax edi
jmp r-xdata
cmp bl 0xb
ja r-xdata
cmp bl 0x12
je r-xdata
test bl bl
jne r-xdata
cmp bl 0x12
je r-xdata
inc ecx
inc edx
cmp ecx ebp
jne r-xdata
test ecx ecx
jle r-xdata
cmp [ edx ] 0xb
jne r-xdata
cmp al 0x8
jne r-xdata
inc edx
dec ecx
jne r-xdata
cmp [ edx - 0x2 ] 0x8
je r-xdata
mov esi [ esp + 0x4 ]
test al al
je r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
inc esi
cmp esi ebp
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ebx edi
cmp [ ecx * 4 + r--data ] 0x11
jne r-xdata
inc edx
inc ecx
dec eax
jne r-xdata
mov bh [ ecx ]
cmp bh 0xb
je r-xdata
mov edi [ esp + 0xc ]
movzx edx bl
mov edi 0x908
bt edi edx
mov edi [ esp + 0xc ]
jae r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
mov edi [ esp + 0xc ]
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
mov bl [ edx + ecx ]
lea edi [ eax + ecx + 0x1 ]
inc ecx
cmp edi esi
jge r-xdata
cmp [ edi + ecx ] 0xa
jne r-xdata
test ebp ebp
jle r-xdata
cmp ecx esi
jge r-xdata
cmp [ edi + ecx - 0x1 ] 0x8
je r-xdata
mov [ edx - 0x1 ] 0xb
cmp [ edx ] 0x8
jne r-xdata
mov al [ edx - 0x1 ]
cmp al 0xc
je r-xdata
mov eax esi
jmp r-xdata
jmp r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov eax 0x3
jmp r-xdata
movzx ebx al
mov eax [ esp + 0x4 ]
lea ecx [ esi + esi * 2 ]
xor ebp ebp
mov edx [ edi + ecx * 4 + 0x4 ]
mov ecx 0x269
dec ebp
lea eax [ eax + esi ]
test ebp ebp
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
cmp eax 0x1
lea eax [ eax - 0x1 ]
mov ebx 0xffffffff
jg r-xdata
mov bl [ edx ]
test bl 0x1
jne r-xdata
test edi edi
jle r-xdata
add bl 0x2
cmp bh 0x8
je r-xdata
mov ebx eax
mov ebx eax
lea edx [ ebx + ecx - 0x1 ]
cmp edx ebx
jl r-xdata
add ebx ecx
push ecx
push 0x0
push [ esp + 0x8 ]
xor ebx ebx
inc ebx
xor ecx ecx
xor ebx ebx
mov edx 0x1600
inc ebx
mov al [ edi + ecx + 0x1 ]
cmp al 0x8
je r-xdata
mov [ edi + ecx ] 0x8
mov [ edx - 0x1 ] 0x8
jmp r-xdata
lea esi [ ebp - 0x1 ]
test ebp ebp
jle r-xdata
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push ebx
push esi
push edi
call sub_43d788
add esp 0x10
dec ebx
test bl bl
jne r-xdata
lea esi [ edi + 0x4 ]
xor edi edi
mov ebx ecx
mov cl [ edi * 4 + r--data ]
mov bl 0x2
mov ch cl
add ch 0xf1
cmp ch bl
jae r-xdata
lea ecx [ eax + eax * 2 ]
mov ebp ebx
mov edx [ edi + ecx * 4 + 0x4 ]
mov edi 0x269
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0xc ]
mov edi [ esp + 0x4 ]
mov eax 0x901
cmp bh 0x3
jne r-xdata
add ebx ecx
push ecx
push 0x3
push [ esp + 0x8 ]
jmp r-xdata
inc ecx
cmp ebp ecx
jne r-xdata
bt edx eax
jae r-xdata
cmp al 0xa
mov ebx edx
jne r-xdata
inc edi
add esi 0xc
cmp ebp edi
jne r-xdata
push esi
call sub_43e48d
add esp 0x4
cmp cl 0x11
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ eax ] cl
jmp r-xdata
inc edi
inc edx
dec ecx
jne r-xdata
movzx ebp [ edx ]
cmp ebp 0xb
ja r-xdata
inc bl
jmp r-xdata
call sub_49acf0
add esp 0xc
jmp r-xdata
movzx eax [ edi + ecx ]
cmp eax 0xc
ja r-xdata
test ebp ebp
jle r-xdata
mov [ edi + ecx ] 0x12
mov al [ edi + ebx ]
cmp ebx ebp
jge r-xdata
mov eax [ esp + 0x4 ]
test [ eax + edi ] 0x1
je r-xdata
mov eax [ esp + 0x4 ]
cmp ebp 0x1
mov dl [ eax ]
je r-xdata
mov [ esp ] esi
jmp r-xdata
mov bl [ edi ]
test bl 0x1
je r-xdata
bt eax ebp
jae r-xdata
mov [ edx ] bl
mov eax [ esp ]
xor ecx ecx
cmp al 0x8
jne r-xdata
inc ebx
cmp al 0xa
je r-xdata
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
test ebp ebp
jle r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
inc bl
mov [ edi ] bl
inc ecx
cmp ecx ebp
jne r-xdata
mov bl 0x8
mov edx ecx
jmp r-xdata
mov eax edx
mov esi eax
lea ecx [ ebp - 0x1 ]
inc esi
mov ecx [ esp ]
cmp ecx [ esp + 0x30 ]
jne r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
cmp [ edi + ecx ] 0x8
jne r-xdata
mov eax ebx
add al 0xfd
cmp al 0x2
jb r-xdata
inc esi
dec ecx
mov edx eax
jne r-xdata
mov eax edx
mov ecx [ esp ]
mov edx [ esp + 0x2c ]
xor ebp ebp
dec ebp
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ecx 0x269
cmp [ esp ] esi
jle r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
test bl bl
je r-xdata
mov al [ esi ]
cmp al dl
ja r-xdata
jmp r-xdata
xor ebp ebp
mov ecx 0x269
dec ebp
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx [ esp ]
mov edx ecx
movzx ecx [ esp + 0x10 ]
sub edx esi
push edx
push ecx
push eax
call sub_49acf0
add esp 0xc
jmp r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x11
jne r-xdata
mov [ edi + ecx ] 0x0
test edx edx
jg r-xdata
lea edi [ ecx + ebp ]
mov ebx edi
shr ebx 0x1f
add ebx edi
sar ebx 0x1
lea edi [ ebx + ebx * 2 ]
cmp [ edi * 4 + r--data ] edx
jg r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ecx [ esp ]
inc ecx
cmp ecx [ esp + 0x30 ]
mov [ esp ] ecx
jl r-xdata
mov bl [ edi + edx - 0x1 ]
dec edx
jmp r-xdata
mov ecx ebx
mov edi ecx
sub edi ebp
cmp edi 0x2
jl r-xdata
cmp [ edi * 4 + r--data ] edx
mov ebp ebx
jl r-xdata
mov ebx ecx
cmp [ edi * 4 + r--data ] 0xf
je r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ ecx + ecx * 2 ]
mov edx [ edx + ecx * 4 + 0x4 ]
mov ebx ecx
cmp [ edi * 4 + r--data ] 0x10
je r-xdata
sub_43e48d
push esi
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx ecx
and edx 0xffffff00
movsx esi dx
cmp esi 0x22ff
jle r-xdata
cmp esi 0x1fff
jg r-xdata
movzx edx dx
cmp esi 0x28ff
jle r-xdata
movzx edx dx
cmp edx 0x2000
je r-xdata
movzx esi dx
cmp esi 0xff00
je r-xdata
cmp edx 0x2300
je r-xdata
cmp edx 0x2900
je r-xdata
cmp ecx 0x207c
jg r-xdata
cmp edx 0x2200
jne r-xdata
cmp ecx 0xff3a
jg r-xdata
test dx dx
jne r-xdata
lea edx [ ecx - 0x2308 ]
cmp edx 0x3
ja r-xdata
cmp edx 0x2700
jne r-xdata
lea edx [ ecx - 0x2983 ]
cmp edx 0x58
ja r-xdata
cmp edx 0x2a00
je r-xdata
cmp ecx 0x208c
jg r-xdata
cmp ecx 0x2044
jg r-xdata
pop esi
retn
add ecx 0xffffddf8
cmp ecx 0xf6
ja r-xdata
lea edx [ ecx - 0xff5b ]
cmp edx 0x8
ja r-xdata
cmp ecx 0xff1b
jg r-xdata
cmp ecx 0x5c
jg r-xdata
cmp ecx 0x2329
je r-xdata
jmp [ edx * 4 + jump_table_40915c ]
lea edx [ ecx - 0x2768 ]
cmp edx 0xd
jbe r-xdata
add ecx 0xffffd60b
cmp ecx 0x8
ja r-xdata
jmp [ edx * 4 + jump_table_408f40 ]
lea edx [ ecx - 0x2a64 ]
cmp edx 0x96
ja r-xdata
cmp edx 0x3000
jne r-xdata
cmp ecx 0x208d
je r-xdata
cmp ecx 0x207d
je r-xdata
cmp ecx 0x2045
je r-xdata
cmp ecx 0x2039
je r-xdata
jmp [ ecx * 4 + jump_table_40916c ]
cmp ecx 0xff3b
je r-xdata
jmp [ edx * 4 + jump_table_408c24 ]
cmp ecx 0xff1c
je r-xdata
cmp ecx 0xff08
je r-xdata
cmp ecx 0x7c
jle r-xdata
cmp ecx 0x3b
jle r-xdata
mov [ eax ] 0x232a
jmp r-xdata
cmp ecx 0x232a
jne r-xdata
mov [ eax ] 0x2309
jmp r-xdata
jmp [ edx * 4 + jump_table_4090c8 ]
add ecx 0xffffd82b
cmp ecx 0x16
ja r-xdata
jmp [ ecx * 4 + jump_table_4090a4 ]
mov [ eax ] 0x2984
jmp r-xdata
add ecx 0xffffd5d5
cmp ecx 0x12
ja r-xdata
jmp [ edx * 4 + jump_table_408ce4 ]
add ecx 0xffffcff8
cmp ecx 0x13
ja r-xdata
mov [ eax ] 0x208e
jmp r-xdata
cmp ecx 0x208e
jne r-xdata
mov [ eax ] 0x207e
jmp r-xdata
cmp ecx 0x207e
jne r-xdata
mov [ eax ] 0x2046
jmp r-xdata
cmp ecx 0x2046
jne r-xdata
mov [ eax ] 0x203a
jmp r-xdata
cmp ecx 0x203a
jne r-xdata
mov [ eax ] 0x220b
jmp r-xdata
mov [ eax ] 0xff3d
jmp r-xdata
cmp ecx 0xff3d
jne r-xdata
mov [ eax ] 0xff5d
jmp r-xdata
mov [ eax ] 0xff1e
jmp r-xdata
cmp ecx 0xff1e
jne r-xdata
mov [ eax ] 0xff09
jmp r-xdata
cmp ecx 0xff09
jne r-xdata
cmp ecx 0x5d
je r-xdata
cmp ecx 0x7d
je r-xdata
cmp ecx 0x28
je r-xdata
cmp ecx 0x3c
je r-xdata
mov [ eax ] 0x2329
jmp r-xdata
mov [ eax ] 0x2769
jmp r-xdata
jmp [ ecx * 4 + jump_table_409100 ]
mov [ eax ] 0x2215
jmp r-xdata
jmp [ ecx * 4 + jump_table_408c98 ]
mov [ eax ] 0x2a65
jmp r-xdata
jmp [ ecx * 4 + jump_table_408c48 ]
mov [ eax ] 0x208d
jmp r-xdata
mov [ eax ] 0x207d
jmp r-xdata
mov [ eax ] 0x2045
jmp r-xdata
mov [ eax ] 0x2039
jmp r-xdata
mov [ eax ] 0xff3b
jmp r-xdata
mov [ eax ] 0xff1c
jmp r-xdata
mov [ eax ] 0xff08
jmp r-xdata
mov [ eax ] 0x5b
jmp r-xdata
cmp ecx 0x7b
jne r-xdata
mov [ eax ] 0x7b
jmp r-xdata
cmp ecx 0xab
je r-xdata
mov [ eax ] 0x29
jmp r-xdata
cmp ecx 0x29
jne r-xdata
mov [ eax ] 0x3e
jmp r-xdata
cmp ecx 0x3e
je r-xdata
mov [ eax ] 0x27d6
jmp r-xdata
mov [ eax ] 0x2a2c
jmp r-xdata
mov [ eax ] 0x3009
jmp r-xdata
mov [ eax ] 0x7d
jmp r-xdata
mov [ eax ] 0xbb
jmp r-xdata
cmp ecx 0xbb
jne r-xdata
mov [ eax ] 0x28
jmp r-xdata
mov [ eax ] 0x3c
jmp r-xdata
cmp ecx 0x5b
jne r-xdata
mov [ eax ] 0xab
jmp r-xdata
mov [ eax ] 0x5d
jmp r-xdata
sub_43f4f8
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov eax [ esp + 0x14 ]
mov edi esp
mov [ esp + 0x4 ] ecx
push 0xa
push edi
push eax
call sub_4a8292
add esp 0xc
mov edi [ edi ]
mov esi eax
mov al [ edi ]
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
retn
movzx eax al
push eax
call sub_4a7635
add esp 0x4
test eax eax
je r-xdata
mov [ esp ] edi
movsx eax [ edi ]
cmp eax 0x66
jg r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
cmp eax 0x67
je r-xdata
cmp eax 0x47
je r-xdata
shl esi 0x1e
jmp r-xdata
cmp eax 0x6d
je r-xdata
cmp eax 0x4b
je r-xdata
shl esi 0x14
cmp eax 0x6b
jne r-xdata
shl esi 0xa
jmp r-xdata
cmp eax 0x4d
je r-xdata
jmp r-xdata
sub_43f584
push edi
push esi
mov edi [ esp + 0xc ]
xor ecx ecx
mov esi [ esp + 0x10 ]
mov eax 0x0
cmp [ edi ] 0x5e
jne r-xdata
mov [ esi ] ecx
mov al [ edi + 0x1 ]
test al al
je r-xdata
xor ecx ecx
cmp al 0x3c
jne r-xdata
mov ecx eax
add cl 0x9f
cmp cl 0x19
ja r-xdata
add edi 0x2
push 0x0
push esi
push edi
call sub_4a8266
add esp 0xc
mov ecx [ esi ]
cmp ecx edi
je r-xdata
mov ecx eax
and cl 0xe0
cmp cl 0x40
je r-xdata
add al 0xa0
jmp r-xdata
xor edx edx
cmp [ ecx ] 0x3e
lea ecx [ ecx + 0x1 ]
cmovne ecx edx
jne r-xdata
xor al 0x40
cmp al 0x3f
je r-xdata
add edi 0x2
xor eax eax
jmp r-xdata
jmp r-xdata
test al al
js r-xdata
cmp al 0x7e
jne r-xdata
xor eax eax
jmp r-xdata
add edi 0x2
mov al 0x5e
jmp r-xdata
pop esi
pop edi
retn
mov ecx edi
sub_43f60a
push esi
mov esi [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov ecx esi
push 0x1
call sub_43f62d
add esp 0x4
test eax eax
je r-xdata
pop esi
jmp sub_4a7f30
sub eax esi
pop esi
retn
sub_43f62d
push ebp
push ebx
push edi
push esi
mov edi edx
mov esi ecx
xor ebp ebp
xor ebx ebx
inc ebp
test al al
je r-xdata
movsx eax [ esi ]
cmp eax 0x5b
je r-xdata
mov eax ebx
pop esi
pop edi
pop ebx
pop ebp
retn
test ebp ebp
jle r-xdata
test ebp ebp
je r-xdata
cmp al 0x5d
jne r-xdata
push eax
push edi
call sub_49ae50
add esp 0x8
test eax eax
cmovne ebx esi
je r-xdata
cmp al 0x3a
je r-xdata
dec ebp
jmp r-xdata
inc esi
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov ebx esi
sub_43f67d
push esi
sub esp 0x8
mov edx [ rw-data ]
mov al [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
lea edx [ esp + 0x2 ]
mov [ edx ] al
xor eax eax
mov [ edx + 0x1 ] 0x0
inc eax
push eax
call sub_43f62d
add esp 0x4
mov ecx [ esp + 0x4 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
retn
sub_43f6bb
push esi
sub esp 0x8
mov edx [ rw-data ]
mov al [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
lea edx [ esp + 0x2 ]
mov [ edx ] al
mov [ edx + 0x1 ] 0x0
push 0x0
call sub_43f62d
add esp 0x4
mov ecx [ esp + 0x4 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
retn
sub_43f6f7
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
cmp [ esi ] 0x5b
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
jmp sub_43f79e
inc esi
xor ebp ebp
mov edi esi
jmp r-xdata
movzx ebx [ edi ]
test ebx ebx
jne r-xdata
cmp bl 0x5d
je r-xdata
jmp r-xdata
cmp ebp 0x2
jl r-xdata
push ebx
call sub_4a7662
add esp 0x4
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
test al al
jne r-xdata
inc edi
cmp bl 0x3a
jne r-xdata
sub edi esi
push esi
push edi
push r--data
call sub_43f758
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
inc ebp
sub_43f758
push edi
push esi
sub esp 0xc
mov ecx [ rw-data ]
mov eax [ esp + 0x18 ]
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x4 ]
xor edx edx
mov [ esp + 0x8 ] ecx
mov [ esp ] esi
mov [ edi ] 0x0
xor ecx ecx
push esi
push eax
push edi
call sub_43fb8d
add esp 0xc
mov ecx [ esp + 0x8 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
retn
sub_43f79e
push edi
push esi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
xor esi esi
push edi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov esi eax
push edi
push esi
call sub_4a7c00
add esp 0x8
jmp r-xdata
mov eax esi
pop esi
pop edi
retn
sub_43f7d4
push edi
push esi
mov esi [ esp + 0xc ]
xor edi edi
inc edi
push 0x24
push edi
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] esi
mov [ eax + 0x20 ] ecx
mov [ eax ] edi
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
pop esi
pop edi
retn
sub_43f807
push esi
sub esp 0xcc
mov eax [ rw-data ]
mov ecx [ esp + 0xd8 ]
mov esi [ esp + 0xd4 ]
xor edx edx
mov [ esp + 0xc8 ] eax
mov eax 0x7fffffff
div ecx
cmp eax esi
jb r-xdata
mov esi esp
push 0xf
push r--data
push esi
call sub_49a1f0
add esp 0xc
push esi
push r--data
call sub_48cc6c
add esp 0x8
xor esi esi
imul ecx esi
xor eax eax
inc eax
test ecx ecx
cmovne eax ecx
push eax
call sub_4a7691
add esp 0x4
mov esi eax
test esi esi
jne r-xdata
mov ecx [ esp + 0xc8 ]
call sub_497c4a
mov eax esi
add esp 0xcc
pop esi
retn
sub_43f887
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
push 0x10
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
mov edx 0x4
mov [ esi ] ebp
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ edi + 0x14 ]
mov ecx [ edi + 0x18 ]
inc eax
mov [ edi + 0x14 ] eax
push edx
push eax
push ecx
call sub_43f8db
add esp 0xc
mov [ edi + 0x18 ] eax
mov ecx [ edi + 0x14 ]
mov [ eax + ecx * 4 - 0x4 ] esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43f8db
push esi
sub esp 0xcc
mov eax [ rw-data ]
mov ecx [ esp + 0xdc ]
mov esi [ esp + 0xd8 ]
xor edx edx
mov [ esp + 0xc8 ] eax
mov eax 0x7fffffff
div ecx
cmp eax esi
jb r-xdata
mov esi esp
push 0xf
push r--data
push esi
call sub_49a1f0
add esp 0xc
push esi
push r--data
call sub_48cc6c
add esp 0x8
xor esi esi
mov eax [ esp + 0xd4 ]
imul ecx esi
test eax eax
je r-xdata
push ecx
call sub_4a7691
add esp 0x4
push ecx
push eax
call sub_4a7b1a
add esp 0x8
jmp r-xdata
mov ecx [ esp + 0xc8 ]
call sub_497c4a
mov eax esi
add esp 0xcc
pop esi
retn
mov esi eax
test esi esi
jne r-xdata
sub_43f96a
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
cmp [ edi + 0xc ] eax
jge r-xdata
pop esi
pop edi
pop ebx
retn
lea eax [ eax + eax * 4 ]
mov ebx eax
sar ebx 0x1f
shr ebx 0x1e
add ebx eax
sar ebx 0x2
add ebx 0x200
push 0x1
push ebx
call sub_43f807
add esp 0x8
mov esi eax
push [ edi + 0xc ]
push [ edi + 0x8 ]
push esi
call sub_49a1f0
add esp 0xc
push [ edi + 0xc ]
push [ edi + 0x8 ]
call sub_48f5d3
add esp 0x8
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] ebx
push eax
call j_sub_4a8813
add esp 0x4
sub_43f9e1
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push edi
call sub_4a7f30
add esp 0x4
inc eax
push eax
push esi
call sub_43f96a
add esp 0x8
push edi
push [ esi + 0x8 ]
call sub_4a7c00
add esp 0x8
pop esi
pop edi
retn
sub_43fa0e
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call j_sub_4a8813
add esp 0x4
mov eax [ ebx ]
test eax eax
je r-xdata
push eax
call j_sub_4a8813
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call j_sub_4a8813
add esp 0x4
push ebx
call j_sub_4a8813
add esp 0x4
inc edi
cmp edi [ esi + 0x14 ]
jb r-xdata
push eax
call j_sub_4a8813
add esp 0x4
pop esi
pop edi
pop ebx
jmp j_sub_4a8813
push eax
call j_sub_4a8813
add esp 0x4
mov eax [ esi + 0x18 ]
mov ebx [ eax + edi * 4 ]
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
call sub_48f5d3
add esp 0x8
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
sub_43fa97
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
push ebx
call sub_4a7f30
add esp 0x4
lea edi [ esp + 0x24 ]
mov esi eax
mov [ esp ] edi
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
inc esi
xor eax eax
inc eax
push eax
push esi
call sub_43f807
add esp 0x8
mov esi eax
push ebx
push esi
call sub_4a7c00
add esp 0x8
push esi
call sub_4a7f30
add esp 0x4
mov [ esp ] edi
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
lea ebp [ esp + 0x20 ]
add ebp 0x8
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi esi
add edi eax
push eax
call sub_4a7f30
add esp 0x4
mov [ esp ] ebp
add esi eax
mov eax [ ebp - 0x4 ]
add ebp 0x4
test eax eax
jne r-xdata
push ecx
push edi
call sub_4a7c00
add esp 0x8
push edi
call sub_4a7f30
add esp 0x4
mov edx [ esp ]
add edi eax
lea ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov ecx [ edx ]
test ecx ecx
jne r-xdata
sub_43fb4c
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov edi esp
xor edx edx
mov [ esp + 0x4 ] ecx
mov [ edi ] 0x0
xor ecx ecx
push esi
push eax
push edi
call sub_43fb8d
add esp 0xc
mov ecx [ esp + 0x4 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
retn
sub_43fb8d
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax ecx
mov ecx [ rw-data ]
mov esi [ esp + 0x24 ]
mov ebx edx
mov [ esp + 0xc ] ecx
mov ecx [ esi ]
cmp ecx ebx
jge r-xdata
mov ebp ecx
sub ebp ebx
je r-xdata
push 0x193
push r--data
push r--data
mov edi eax
call sub_4a509d
mov eax edi
add esp 0xc
mov ecx [ esi ]
mov ebp 0x200
lea ecx [ ebx + 0x200 ]
push 0x1
mov [ esp + 0x4 ] ecx
push ecx
push eax
mov [ esp ] ecx
jmp r-xdata
add ebp 0x200
test ecx ecx
lea eax [ ecx + 0x1 ]
mov ebx edi
cmovg ebp eax
xor ecx ecx
inc ecx
lea eax [ ebp + ebx ]
push ecx
mov [ esp + 0x4 ] eax
push eax
push [ esp + 0xc ]
jmp r-xdata
cmp ecx ebp
jl r-xdata
mov esi [ esp + 0x2c ]
mov edi ebx
mov [ esp + 0x4 ] eax
lea ebx [ eax + ebx ]
mov [ esp + 0x8 ] esi
call sub_43aed0
mov ecx [ eax ]
or ecx 0x1
push esi
push 0x0
push [ esp + 0x30 ]
push ebp
push ebx
push [ eax + 0x4 ]
push ecx
call sub_49e8ba
add esp 0x1c
cmp eax 0xfffffffe
mov ecx 0xffffffff
cmovg ecx eax
test eax eax
js r-xdata
call sub_43f8db
add esp 0xc
mov eax [ esp + 0x24 ]
mov ecx [ esp ]
mov [ eax ] ecx
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_43fc73
push edi
push esi
mov esi [ esp + 0xc ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
lea eax [ esi + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
call sub_43fb8d
add esp 0xc
mov [ esi ] eax
mov edi [ esi + 0x4 ]
add eax edi
push eax
call sub_4a7f30
add esp 0x4
add eax edi
mov [ esi + 0x4 ] eax
pop esi
pop edi
retn
sub_43fcaa
sub esp 0x8
mov edx [ rw-data ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
lea edx [ esp + 0x14 ]
mov [ esp ] edx
push edx
push ecx
push eax
call sub_43fc73
add esp 0xc
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
retn
sub_43fcde
push ebp
push ebx
push edi
push esi
mov esi 0x200
push 0x1
push esi
call sub_43f807
add esp 0x8
mov ebx eax
push [ esp + 0x14 ]
push esi
push ebx
call sub_4a6ae4
add esp 0xc
test eax eax
je r-xdata
mov esi ebx
xor edi edi
mov esi ebx
mov eax edi
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
call j_sub_4a8813
add esp 0x4
lea eax [ edi + 0x200 ]
push 0x1
push eax
push esi
call sub_43f8db
add esp 0xc
mov esi eax
mov ebx esi
add ebx edi
push [ esp + 0x14 ]
mov eax 0x200
push eax
push ebx
call sub_4a6ae4
add esp 0xc
test eax eax
jne r-xdata
cmp [ esi + edi - 0x1 ] 0xa
je r-xdata
mov ebp edi
push ebx
call sub_4a7f30
add esp 0x4
mov edi eax
add edi ebp
test edi edi
jle r-xdata
test edi edi
je r-xdata
mov [ esi + edi ] 0x0
mov edi esi
jmp r-xdata
xor edi edi
test esi esi
je r-xdata
sub_43fd77
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
retn
push esi
call sub_4a7f30
add esp 0x4
test eax eax
jle r-xdata
mov [ esi + eax ] 0x0
xor ecx ecx
inc ecx
dec eax
lea edx [ eax + 0x1 ]
cmp edx ecx
jg r-xdata
cmp dl 0xa
jne r-xdata
mov dl [ esi + eax - 0x1 ]
cmp dl 0xd
je r-xdata
sub_43fdae
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
movzx ecx [ esi ]
shl ecx 0x10
cmp edx 0x2
jl r-xdata
xor ebx ebx
jmp r-xdata
movzx edi [ esi + 0x1 ]
shl edi 0x8
or ecx edi
cmp edx 0x2
jne r-xdata
mov esi ecx
mov edi ecx
shr esi 0x12
shr edi 0xc
and esi 0x3f
and edi 0x3f
cmp edx 0x2
mov dh 0x3d
mov dl [ esi + r--data ]
mov [ eax ] dl
mov dl [ edi + r--data ]
mov [ eax + 0x1 ] dl
mov dl 0x3d
jl r-xdata
movzx esi [ esi + 0x2 ]
mov bl 0x1
or ecx esi
test bl bl
mov [ eax + 0x2 ] dh
je r-xdata
mov esi ecx
shr esi 0x6
and esi 0x3f
mov dh [ esi + r--data ]
mov [ eax + 0x3 ] dl
pop esi
pop edi
pop ebx
retn
and ecx 0x3f
mov dl [ ecx + r--data ]
sub_43fe31
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov ebp [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
mov [ esp + 0x14 ] edx
xor edx edx
dec edx
mov esi edx
mov eax ebx
add al 0x9f
cmp al 0x19
ja r-xdata
add ebx 0xffffffbf
jmp r-xdata
mov eax ebx
add al 0xd0
cmp al 0x9
ja r-xdata
add ebx 0xffffffb9
jmp r-xdata
mov [ esp + esi * 4 + 0x8 ] ebx
inc esi
cmp esi 0x3
jl r-xdata
cmp bl 0x2b
je r-xdata
add ebx 0x4
jmp r-xdata
movsx ebx [ ecx + esi + 0x1 ]
mov eax ebx
add al 0xbf
cmp al 0x19
ja r-xdata
mov ebx [ esp + 0x4 ]
xor esi esi
cmp ebx 0xffffffff
je r-xdata
mov ebx 0x3e
jmp r-xdata
cmp bl 0x3d
je r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x8 ]
cmp edi 0xffffffff
je r-xdata
mov ebx edx
cmp bl 0x2f
jne r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x10 ]
cmp eax 0xffffffff
mov [ esp ] eax
je r-xdata
xor esi esi
mov ebx 0x3f
jmp r-xdata
cmp edx 0xffffffff
jne r-xdata
xor eax eax
cmp edx 0xffffffff
mov ecx ebp
mov ebp 0x3
sete al
and edx 0x3f
sub ebp eax
mov ecx ebp
xor ebp ebp
mov edx 0x3f
inc ebp
jmp r-xdata
xor esi esi
inc esi
jmp r-xdata
mov eax [ esp ]
mov esi 0x2
shl eax 0x6
mov ebx eax
and eax 0xf00
or eax edi
cmp ebp 0x3
mov [ ecx + 0x1 ] ah
jne r-xdata
shl ebx 0x12
shl edi 0xc
or ebx edi
shr ebx 0x10
cmp ebp 0x2
mov [ ecx ] bl
jb r-xdata
or edx ebx
mov esi 0x3
mov [ ecx + 0x2 ] dl
jmp r-xdata
sub_43ff54
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
push eax
call j_sub_4a8813
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
retn
sub_43ff80
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x14 ]
add [ edi + 0x8 ] esi
test esi esi
jle r-xdata
mov ebp [ esp + 0x18 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
test eax eax
je r-xdata
mov eax 0x200
lea ebx [ esi + 0x10 ]
cmp ebx eax
cmovbe ebx eax
push 0x1
push ebx
call sub_43f807
add esp 0x8
lea ecx [ eax + 0x10 ]
add ebx eax
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ebx
mov [ eax ] 0x0
mov ecx [ edi + 0x4 ]
test ecx ecx
cmove ecx edi
mov [ ecx ] eax
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x8 ]
mov ebx [ eax + 0xc ]
cmp ecx ebx
jae r-xdata
sub ebx ecx
cmp esi ebx
cmovle ebx esi
push ebx
push ebp
push ecx
call sub_49a1f0
add esp 0xc
mov eax [ edi + 0x4 ]
add [ eax + 0x8 ] ebx
sub esi ebx
jg r-xdata
add ebp ebx
sub_44000a
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
cmp [ edi + 0x8 ] esi
jge r-xdata
test esi esi
jle r-xdata
push 0x2c4
push r--data
push r--data
call sub_4a509d
add esp 0xc
pop esi
pop edi
pop ebx
retn
mov eax [ edi ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
mov ebx [ eax + 0x8 ]
sub ebx ecx
cmp esi ebx
jge r-xdata
push 0x2c7
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
mov ecx [ eax ]
test ecx ecx
mov [ edi ] ecx
jne r-xdata
add ecx esi
mov ebx esi
mov [ eax + 0x4 ] ecx
jmp r-xdata
push eax
call j_sub_4a8813
add esp 0x4
mov [ edi + 0x4 ] 0x0
sub [ edi + 0x8 ] ebx
sub esi ebx
jg r-xdata
sub_44008c
push edi
push esi
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
sub edi [ esi + 0x4 ]
mov [ ecx ] edi
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
pop esi
pop edi
retn
sub_4400ae
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x1c ]
mov edi [ eax ]
cmp [ eax + 0x8 ] esi
jge r-xdata
test esi esi
jle r-xdata
push 0x2e3
push r--data
push r--data
call sub_4a509d
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x18 ]
mov eax [ edi + 0x4 ]
mov ebp [ edi + 0x8 ]
sub ebp eax
cmp esi ebp
cmovle ebp esi
push ebp
push eax
push ebx
call sub_49a1f0
add esp 0xc
mov edi [ edi ]
add ebx ebp
sub esi ebp
jg r-xdata
push 0x2e7
push r--data
push r--data
call sub_4a509d
add esp 0xc
test edi edi
jne r-xdata
sub_440120
push esi
mov esi [ esp + 0x8 ]
push 0x2
push esi
call sub_43194f
add esp 0x8
xor ecx ecx
cmp eax 0x4
mov eax 0x39
cmovne eax ecx
push eax
push esi
call sub_431a8c
add esp 0x8
xor ecx ecx
cmp [ eax ] 0x0
setne cl
mov eax ecx
pop esi
retn
sub_440153
push esi
mov esi [ esp + 0x8 ]
push 0x2
push esi
call sub_43194f
add esp 0x8
xor ecx ecx
cmp eax 0x4
mov eax 0x39
cmovne eax ecx
push eax
push esi
call sub_431a8c
add esp 0x8
pop esi
retn
sub_44017c
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov ebp [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
push r--data
push ebp
call sub_4a8220
add esp 0x8
mov edi eax
xor esi esi
cmp [ ebp + edi ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
add edi ebp
push edi
call sub_4a7f30
add esp 0x4
cmp eax 0x2f
mov eax edi
mov ecx edi
jne r-xdata
mov [ esi ] 0x0
inc esi
mov dl [ eax ]
cmp dl 0xa
je r-xdata
push r--data
push edi
call sub_4a8220
add esp 0x8
cmp [ edi + eax ] 0x0
mov eax edi
mov ecx edi
jne r-xdata
inc eax
cmp dl 0xd
je r-xdata
xor ecx ecx
lea eax [ edi + 0x1 ]
dec ecx
test dl dl
jne r-xdata
mov eax edi
mov ecx edi
jmp r-xdata
cmp [ eax ] 0x3a
je r-xdata
mov [ ecx ] dl
inc ecx
mov [ ecx ] 0x0
push edi
call sub_4a7f30
add esp 0x4
cmp eax 0x9
jb r-xdata
inc ecx
add eax 0x3
cmp ecx 0xf
jl r-xdata
push r--data
push esi
call sub_4a8220
add esp 0x8
cmp [ esi + eax ] 0x0
lea edi [ esi + eax ]
jne r-xdata
and eax 0x3
jne r-xdata
cmp [ eax - 0x1 ] 0x3a
je r-xdata
xor ecx ecx
lea eax [ edi + 0x2 ]
dec ecx
push r--data
push edi
call sub_4a7d90
add esp 0x8
cmp [ edi + eax ] 0x0
lea esi [ edi + eax ]
je r-xdata
xor esi esi
jmp r-xdata
push r--data
push edi
call sub_4a8220
add esp 0x8
cmp [ edi + eax ] 0x0
jne r-xdata
inc ecx
add eax 0x3
cmp ecx 0xe
jl r-xdata
lea eax [ esp + 0x2 ]
push eax
push edi
call sub_43fe31
add esp 0x8
mov ebx eax
cmp ebx 0x3
jl r-xdata
cmp [ eax ] 0x3a
jne r-xdata
jmp r-xdata
lea eax [ esp + ebx + 0x2 ]
lea ecx [ edi + 0x4 ]
push eax
push ecx
call sub_43fe31
add esp 0x8
add eax ebx
mov ecx 0x4
cmp eax ecx
jl r-xdata
xor esi esi
mov eax [ esp + 0x2 ]
bswap eax
cmp eax 0x40
ja r-xdata
movsx eax [ edi + esi ]
push eax
call sub_4a8654
add esp 0x4
mov [ ebp + esi ] al
inc esi
cmp esi 0x2f
jne r-xdata
mov [ ebp + 0x2f ] 0x0
add eax 0x6
mov ecx 0xaaaaaaab
mul ecx
mov ebx edx
shr ebx 0x1
push edi
call sub_4a7f30
add esp 0x4
cmp eax ebx
jae r-xdata
push edi
push ebp
call sub_4a7c00
add esp 0x8
jmp r-xdata
xor esi esi
inc esi
sub_440320
push ebx
push edi
push esi
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
inc eax
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
xor ecx ecx
mov bl [ edx ]
inc edx
xor bl [ esi ]
inc esi
movzx edi bl
or ecx edi
dec eax
jne r-xdata
mov eax 0x100
sub eax ecx
shr eax 0x8
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_440356
push edi
push esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0xc ]
push esi
call sub_4a7f30
add esp 0x4
mov ecx eax
xor eax eax
cmp ecx edi
jne r-xdata
pop esi
pop edi
retn
push edi
push esi
push [ esp + 0x18 ]
call sub_498a6d
add esp 0xc
mov ecx eax
xor eax eax
test ecx ecx
sete al
sub_44038b
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
xor ebx ebx
inc ebx
push 0xc
push ebx
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
mov [ esi + 0x4 ] eax
mov eax 0x200
mov [ esi + 0x8 ] eax
push ebx
push eax
call sub_43f807
add esp 0x8
mov [ esi ] eax
mov [ eax ] 0x0
push r--data
push 0x20
push r--data
push esi
call sub_43fcaa
add esp 0x10
push r--data
push edi
push r--data
push esi
call sub_43fcaa
add esp 0x10
push r--data
push esi
call sub_43fcaa
add esp 0x8
push edi
push r--data
push esi
call sub_43fcaa
add esp 0xc
push r--data
push esi
call sub_43fcaa
add esp 0x8
push 0x708
push r--data
push esi
call sub_43fcaa
add esp 0xc
push r--data
push edi
push r--data
push esi
call sub_43fcaa
add esp 0x10
mov edi [ esi ]
test esi esi
je r-xdata
mov eax edi
pop esi
pop edi
pop ebx
retn
push esi
call j_sub_4a8813
add esp 0x4
sub_440450
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x20 ]
mov ecx 0x2
lea eax [ edi + 0x2 ]
push ecx
push eax
call sub_43f807
add esp 0x8
mov esi eax
lea eax [ edi + 0x1 ]
push eax
push esi
push edi
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push [ esp + 0x28 ]
call sub_496101
add esp 0x18
cmp eax edi
jle r-xdata
mov [ esi + eax * 2 ] 0x0
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebx [ edi + edi ]
xor ebp ebp
push esi
call sub_43f9d4
add esp 0x4
lea eax [ ebx + ebp + 0x2 ]
mov ecx 0x2
push ecx
push eax
call sub_43f807
add esp 0x8
mov esi eax
lea eax [ ebx + ebp + 0x1 ]
push eax
push esi
push edi
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push [ esp + 0x28 ]
call sub_496101
add esp 0x18
add ebp edi
lea ecx [ edi + ebp ]
cmp eax ecx
jg r-xdata
sub_4404de
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
push ebx
call sub_4a7f30
add esp 0x4
push eax
push ebx
push edi
push esi
call sub_440450
add esp 0x10
pop esi
pop edi
pop ebx
retn
sub_440508
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
push 0x18
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push 0x6
push ebp
call sub_43194f
add esp 0x8
mov ecx esi
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] edi
call sub_44054e
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_44054e
push edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
imul eax eax 0x3e8
push esi
push sub_4405f2
push eax
call sub_47d9f4
add esp 0xc
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ esi + 0xc ] eax
call sub_47dacb
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x1
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov edi eax
sub edi ecx
sub edx ecx
cmp edi edx
jae r-xdata
pop esi
pop edi
retn
sub_4405a1
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ebp 0x6
push ebp
push [ esp + 0x20 ]
call sub_43194f
add esp 0x8
mov edi eax
push ebp
push ebx
call sub_43194f
add esp 0x8
cmp eax edi
jne r-xdata
mov [ esi ] edi
mov ecx esi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_44054e
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4405f2
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esp + 0xc ]
cmp [ esi + 0xc ] eax
jne r-xdata
mov eax [ esi + 0x10 ]
push 0xf
push [ esi + 0x14 ]
call [ eax + 0x18 ]
add esp 0x8
mov [ esi + 0x4 ] 0x0
mov ecx esi
pop esi
jmp sub_44054e
sub_440628
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov edx [ rw-data ]
mov ebp [ esp + 0x2c ]
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x30 ]
xor esi esi
mov [ esp + 0x4 ] edx
mov edx esp
push esi
push esi
push ecx
push ebp
push edx
push edi
push eax
call sub_441360
add esp 0x1c
mov ebx eax
push ebx
call sub_491f41
add esp 0x4
test eax eax
je r-xdata
xor eax eax
inc eax
push 0x3c
push eax
call sub_43f807
add esp 0x8
mov ecx edi
mov edi eax
mov eax [ esp + 0x1c ]
movaps xmm0 [ r--data ]
mov [ edi + 0x20 ] esi
mov [ edi + 0x2c ] esi
mov [ edi + 0x28 ] esi
mov [ edi + 0x34 ] esi
mov [ edi + 0x30 ] esi
mov [ eax ] edi
mov eax [ esp + 0x28 ]
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] esi
movups [ edi + 0x10 ] xmm0
push ebp
push edi
push esi
push esi
mov eax 0x1
push eax
push esi
push ecx
push [ esp + 0x1c ]
push ebx
call sub_441484
add esp 0x24
mov [ edi + 0xc ] eax
push [ esp ]
call sub_43f9d4
add esp 0x4
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_43f79e
add esp 0x4
mov esi eax
push ebx
call sub_490c67
add esp 0x4
push [ esp ]
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push eax
call sub_43f79e
add esp 0x4
mov edx [ edi + 0xc ]
mov esi eax
mov ecx [ edx ]
push edx
call [ ecx + 0x4 ]
add esp 0x4
mov ecx edi
call sub_440c44
mov eax [ esp + 0x1c ]
mov [ eax ] 0x0
sub_440744
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov eax [ esi + 0x4 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
pop esi
retn
push eax
call sub_44802d
add esp 0x4
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov ecx esi
pop esi
jmp sub_440c44
push ecx
push eax
call sub_44812b
add esp 0x8
jmp r-xdata
sub_440787
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff8
sub esp 0x28
mov eax [ rw-data ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0x10 ]
mov [ esp + 0x20 ] eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov ecx [ esp + 0x20 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
push edi
push ebx
push [ esi + 0x4 ]
call sub_448357
add esp 0xc
test eax eax
jle r-xdata
mov ecx [ esi + 0x2c ]
xor eax eax
inc eax
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0x18 ]
add esp 0x8
lea eax [ ecx + ecx * 4 ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1e
add ecx eax
sar ecx 0x2
add ecx 0x100
mov [ esi + 0x30 ] ecx
push 0x1
push ecx
push [ esi + 0x28 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x28 ] eax
mov ecx [ esi + 0x2c ]
mov eax [ esi + 0x28 ]
jmp r-xdata
mov eax [ esi + 0x28 ]
cmp [ eax ] 0x4
jne r-xdata
cmp ecx 0x4000
jne r-xdata
mov dl [ ebx ]
lea edi [ ecx + 0x1 ]
inc ebx
mov [ esi + 0x2c ] edi
mov [ eax + ecx ] dl
mov edx [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov ecx edx
lea edi [ eax - 0x1 ]
and ecx 0xfffff000
xor eax eax
inc eax
cmp edx eax
je r-xdata
cmp edx 0x1
je r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
cmp [ eax ] 0x5
jne r-xdata
cmp ecx 0x5000
jne r-xdata
mov ecx [ esi + 0x2c ]
cmp ecx 0x2
jl r-xdata
mov edx 0x4000
mov [ esi + 0x1c ] 0x4000
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
cmp edx 0x1
jne r-xdata
test edi edi
jne r-xdata
cmp [ eax + 0x1 ] 0x1
jne r-xdata
cmp edx 0x5001
je r-xdata
mov [ esi + 0x1c ] 0x5000
jmp r-xdata
mov [ esp + 0xc ] edi
cmp ecx [ esi + 0x30 ]
jge r-xdata
jmp r-xdata
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x11 ] 0x5b
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0x8
jmp r-xdata
cmp ecx 0x9
jl r-xdata
lea ecx [ esp + 0x11 ]
xor edx edx
mov [ esp + 0x8 ] ebx
mov [ ecx + 0x4 ] edx
mov [ ecx ] edx
mov [ ecx + 0x8 ] 0x0
mov [ esp + 0x10 ] 0x5
mov [ esp + 0x13 ] 0x1
mov ecx [ esi + 0x2c ]
cmp ecx 0x6
jl r-xdata
cmp edx 0x5000
jne r-xdata
mov [ esp + 0xc ] edi
mov edi esi
mov ecx [ esi + 0x2c ]
cmp ecx 0x2
jl r-xdata
lea edx [ esp + 0x14 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
cmp [ eax + ecx - 0x1 ] 0x0
jne r-xdata
mov ebx [ esp + 0x8 ]
jmp r-xdata
mov dl [ eax + 0x3 ]
xor ebx ebx
cmp dl 0x1
mov [ esp + 0x7 ] dl
sete bl
shl ebx 0x2
cmp dl 0x4
mov edx 0x10
cmove ebx edx
cmp [ esp + 0x7 ] 0x3
jne r-xdata
mov eax [ esp + 0xc ]
mov esi edi
mov edi eax
movzx edx [ eax + 0x1 ]
mov esi ebx
lea ebx [ edx + 0x2 ]
cmp ecx ebx
mov ebx esi
jl r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
lea edx [ ebx + 0x6 ]
cmp ecx edx
jge r-xdata
movzx ebx [ eax + 0x4 ]
inc ebx
mov cl 0xff
test dl dl
je r-xdata
mov [ esp + 0x8 ] ebx
mov [ eax ] 0x0
mov eax [ esi + 0x28 ]
mov [ eax + 0x1 ] 0x5a
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0x8
push [ esi + 0x28 ]
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ esi + 0x28 ]
movzx ecx [ eax + 0x2 ]
movzx edx [ eax + 0x3 ]
shl ecx 0x8
or edx ecx
mov [ esi + 0x24 ] edx
cmp [ eax + 0x5 ] 0x0
jne r-xdata
cmp [ eax + 0x1 ] 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x5
mov [ esp + 0x11 ] cl
mov esi edi
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0x2
lea edx [ esp + 0x14 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
xor ecx ecx
mov [ esi + 0x1c ] 0x5001
mov [ esi + 0x2c ] 0x0
xor ebx ebx
push [ esi + 0x28 ]
call sub_43f9d4
add esp 0x4
mov [ esi + 0x28 ] 0x0
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
push esi
push [ esi + 0x8 ]
call sub_448985
add esp 0x8
mov [ esi + 0x4 ] eax
test eax eax
mov ebx [ esi + 0xc ]
je r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
mov [ esp + 0x11 ] 0x1
cmp [ eax + 0x2 ] 0x0
je r-xdata
xor ecx ecx
inc ebx
cmp ebx edx
jl r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x4 ]
jmp r-xdata
mov edx [ esi + 0x20 ]
mov ecx eax
push ebx
push [ esi + 0x24 ]
call sub_440f73
add esp 0x8
mov [ esi + 0x1c ] 0x0
cmp [ esp + 0xc ] 0x2
jl r-xdata
cmp [ eax + 0x7 ] 0x0
je r-xdata
movzx ecx [ eax + ebx + 0x4 ]
movzx eax [ eax + ebx + 0x5 ]
shl ecx 0x8
or eax ecx
mov cl [ esp + 0x7 ]
mov [ esi + 0x24 ] eax
cmp cl 0x1
jne r-xdata
cmp [ eax + ebx + 0x2 ] 0x0
je r-xdata
jmp r-xdata
add esp 0x4
mov ecx esi
call sub_440c44
jmp r-xdata
mov ebx [ esp + 0x8 ]
push 0x1
push edi
call sub_43f807
add esp 0x8
mov [ esi + 0x34 ] eax
push edi
mov ebx [ esp + 0xc ]
push ebx
push eax
call sub_49a1f0
add esp 0xc
mov [ esi + 0x38 ] edi
jmp r-xdata
cmp edx 0x4000
jne r-xdata
cmp cl 0x3
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0xa
lea edx [ esp + 0x14 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ esi + 0x28 ]
jmp r-xdata
mov ebx esi
xor ecx ecx
mov [ esp + 0x8 ] ebx
mov [ eax ] cl
mov eax [ esi + 0x28 ]
mov [ eax + 0x1 ] 0x5a
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0x8
push [ esi + 0x28 ]
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ esi + 0x28 ]
mov ebx [ esi + 0x2c ]
movzx ecx [ eax + 0x2 ]
movzx eax [ eax + 0x3 ]
shl ecx 0x8
or eax ecx
xor ecx ecx
inc ecx
mov [ esi + 0x24 ] eax
lea eax [ ebx - 0x7 ]
push ecx
push eax
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ esi + 0x20 ] eax
mov [ eax + ebx - 0x8 ] cl
lea eax [ ebx - 0x8 ]
mov ecx [ esi + 0x28 ]
add ecx 0x8
push eax
push ecx
mov [ esi + 0x1c ] 0x4001
mov [ esi + 0x2c ] 0x8
mov ecx 0x8
jmp r-xdata
mov [ esp + 0x11 ] 0x8
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0xa
lea edx [ esp + 0x14 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
push 0x1
push ebx
call sub_43f807
add esp 0x8
mov [ esi + 0x20 ] eax
mov [ eax + ebx - 0x1 ] 0x0
dec ebx
mov eax [ esi + 0x28 ]
add eax 0x5
push ebx
push eax
jmp r-xdata
movzx ecx [ eax + 0x7 ]
movzx edx [ eax + 0x6 ]
movzx ebx [ eax + 0x5 ]
movzx eax [ eax + 0x4 ]
push ecx
push edx
push ebx
push eax
push r--data
call sub_43f758
add esp 0x14
mov [ esi + 0x20 ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0xa
push [ esi + 0x20 ]
call sub_49a1f0
add esp 0xc
sub_440c44
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x20 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x28 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x34 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
sub_440c77
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x2c ]
mov ebp [ esp + 0x14 ]
push 0x18
push 0x1
call sub_43f807
add esp 0x8
xor edi edi
mov esi eax
test ebp ebp
mov [ esi + 0x10 ] edi
mov [ ebx ] esi
mov [ esi ] r--data
je r-xdata
xor edi edi
inc edi
mov ebx [ esp + 0x18 ]
push ebp
call sub_43f79e
add esp 0x4
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ebx
mov ebx [ esp + 0x2c ]
jmp r-xdata
xor eax eax
push eax
call sub_43f79e
add esp 0x4
mov edx [ esi + 0x8 ]
mov edi eax
mov ecx [ edx ]
push edx
call [ ecx + 0x4 ]
add esp 0x4
mov ecx esi
call sub_440e35
mov [ ebx ] 0x0
mov eax edi
jmp r-xdata
mov eax [ esp + 0x24 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
push 0x99
mov eax [ esp + 0x2c ]
mov edi eax
push edi
call sub_43194f
add esp 0x8
xor ecx ecx
test eax eax
sete cl
push [ esp + 0x30 ]
push edi
push ecx
push esi
push [ esp + 0x30 ]
push [ esp + 0x30 ]
call sub_442ad8
add esp 0x18
mov [ esi + 0x8 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
sub_440d3f
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
push 0x3c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor ebp ebp
mov [ esi + 0x20 ] ebp
mov [ esi + 0x2c ] ebp
mov [ esi + 0x28 ] ebp
mov [ esi + 0x34 ] ebp
mov [ esi + 0x30 ] ebp
mov [ esi ] r--data
mov [ esi + 0x4 ] ebp
mov eax [ ebx + 0x4 ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x24 ]
mov [ esp ] eax
sub esp 0x8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
call [ esp + 0x28 ]
add esp 0x8
mov edi eax
mov [ esi + 0xc ] edi
mov eax [ edi ]
push edi
call [ eax + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x14 ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x18 ] ebp
cmp [ ebx + 0xc ] ebp
je r-xdata
mov ecx esi
call sub_440c44
xor ebx ebx
inc ebx
jmp r-xdata
mov [ esi + 0x1c ] 0x0
push [ ebx + 0x10 ]
call sub_43f79e
add esp 0x4
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x14 ]
mov [ esi + 0x24 ] eax
push esi
push [ ebx + 0x4 ]
call sub_448985
add esp 0x8
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
xor ebx ebx
mov [ esi + 0x1c ] 0x1
mov [ esi + 0x24 ] ebx
mov eax [ edi ]
push ebx
push edi
call [ eax + 0x18 ]
add esp 0x8
jmp r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax ebx
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ esi + 0x20 ]
mov ecx eax
push edi
push [ esi + 0x24 ]
call sub_440f73
add esp 0x8
xor ebx ebx
sub_440e52
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov ecx esi
pop esi
jmp sub_440c44
sub_440e71
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
pop esi
jmp sub_43f9d4
sub_440e99
push ebx
push esi
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
xor ecx ecx
xor ebx ebx
mov [ eax + 0x10 ] ecx
mov edx [ eax + 0xc ]
cmp [ eax + 0x14 ] ecx
mov esi [ edx ]
setne bl
push ebx
push edx
call [ esi + 0x18 ]
add esp 0x8
sub_440ec0
push ebx
push esi
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx [ esp + 0x10 ]
xor ebx ebx
mov [ eax + 0x14 ] ecx
mov edx [ eax + 0xc ]
or ecx [ eax + 0x10 ]
mov esi [ edx ]
setne bl
push ebx
push edx
call [ esi + 0x18 ]
add esp 0x8
sub_440ee9
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov ecx [ eax ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push eax
call [ ecx + 0x8 ]
add esp 0xc
retn
sub_440f1a
push edi
push esi
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
pop esi
pop edi
retn
mov [ esi + 0x18 ] 0x1
xor edi edi
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edi
push edi
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push [ esi + 0x38 ]
push eax
push [ esi + 0x4 ]
call sub_448357
add esp 0xc
push [ esi + 0x34 ]
call sub_43f9d4
add esp 0x4
mov [ esi + 0x34 ] 0x0
sub_440f73
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x18 ]
mov esi ecx
mov edi edx
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
add esp 0x4
mov ebp eax
test ebp ebp
je r-xdata
push r--data
call sub_43f79e
add esp 0x4
mov ebx eax
push ebp
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebp
call sub_43f9d4
add esp 0x4
jmp r-xdata
push ebx
push [ esp + 0x18 ]
push edi
push esi
call sub_448ca9
add esp 0x10
push ebx
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_440fd8
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov edi [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
mov [ edi + 0x44 ] 0x0
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
lea esi [ edi + 0x24 ]
push esi
call sub_43ff78
add esp 0x4
lea ebp [ edi + 0x18 ]
mov [ esp + 0x4 ] eax
push ebp
call sub_43ff78
add esp 0x4
mov [ esp ] eax
push esi
call sub_43ff78
add esp 0x4
xor edi edi
test eax eax
jle r-xdata
mov eax [ esp + 0x4 ]
add [ esp ] eax
push ebp
call sub_43ff78
add esp 0x4
test eax eax
jle r-xdata
mov ebx [ esp + 0x28 ]
mov esi [ esp + 0x28 ]
mov esi [ esp + 0x28 ]
lea ebx [ esp + 0xc ]
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
push esi
call sub_44008c
add esp 0xc
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
push [ esp + 0x8 ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0xc ]
add esp 0xc
add edi eax
push [ esp + 0x8 ]
push esi
call sub_44000a
add esp 0x8
push esi
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0xc ]
add esp 0x8
lea eax [ esp + 0x8 ]
push eax
push ebx
push ebp
call sub_44008c
add esp 0xc
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push [ esp + 0x8 ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0x8 ]
add esp 0xc
add edi eax
push [ esp + 0x8 ]
push ebp
call sub_44000a
add esp 0x8
push ebp
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
jmp r-xdata
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
add esp 0x4
cmp edi [ esp ]
jge r-xdata
cmp [ esi + 0x48 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
add esp 0x4
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi ]
push 0x0
push esi
call [ eax + 0x18 ]
add esp 0x8
sub_44112f
push ebp
push ebx
push edi
push esi
sub esp 0x50
mov ebx [ esp + 0x64 ]
mov eax [ rw-data ]
test ebx ebx
mov [ esp + 0x4c ] eax
je r-xdata
mov esi [ esp + 0x70 ]
mov edi [ esp + 0x68 ]
push 0xc
push esi
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push ebx
call sub_490b59
add esp 0x4
xor ebp ebp
test eax eax
jne r-xdata
push edi
call sub_490919
add esp 0x4
xor ebp ebp
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov ecx [ esp + 0x4c ]
call sub_497c4a
mov eax ebp
add esp 0x50
pop esi
pop edi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
mov ebp esi
mov [ esp ] 0x0
mov ebp esi
mov esi edi
lea edi [ esp + 0xc ]
push 0x40
push edi
push ebx
call sub_49083d
add esp 0xc
push edi
mov edi esi
call sub_4a7f30
add esp 0x4
mov [ esp ] eax
jmp r-xdata
push ebx
call sub_490962
add esp 0x4
xor ebp ebp
test eax eax
jne r-xdata
xor ebp ebp
inc ebp
mov eax [ esp ]
add esi ecx
mov [ esp + 0x8 ] esi
xor esi esi
lea eax [ esp + eax + 0xc ]
mov [ esp ] eax
push edi
call sub_4a7f30
add esp 0x4
mov esi eax
push 0xa
push ebp
call sub_431a8c
add esp 0x8
mov ecx edi
mov edi eax
mov bl [ edi ]
test bl bl
je r-xdata
jmp r-xdata
mov bl [ edi + ebp + 0x1 ]
inc ebp
test bl bl
jne r-xdata
test eax eax
je r-xdata
movzx eax bl
push eax
call sub_4a7635
add esp 0x4
cmp bl 0x2c
je r-xdata
jmp r-xdata
lea eax [ edi + ebp ]
mov bh bl
mov esi ebp
mov [ esp + 0x4 ] eax
mov bh [ edi + esi + 0x1 ]
inc esi
test bh bh
jne r-xdata
add bh 0xd6
cmp bh 0x4
ja r-xdata
movzx eax bh
push eax
call sub_4a75aa
add esp 0x4
test eax eax
jne r-xdata
cmp bl 0x2a
jne r-xdata
movzx eax bh
mov ecx 0x19
bt ecx eax
jae r-xdata
cmp [ edi + esi - 0x1 ] 0x2a
jne r-xdata
lea ebx [ esi - 0x1 ]
lea ecx [ edi + ebp + 0x1 ]
sub ebx ebp
cmp [ esp + 0x64 ] 0x0
je r-xdata
mov ebx esi
sub ebx ebp
cmp [ esp + 0x64 ] 0x0
mov ebp [ esp + 0x4 ]
je r-xdata
lea ebx [ esi - 0x1 ]
sub ebx ebp
cmp [ esp + 0x64 ] 0x0
mov ebp [ esp + 0x4 ]
je r-xdata
mov eax [ esp + 0x8 ]
sub eax esi
lea eax [ eax + ebp + 0x1 ]
push ebx
push ecx
push eax
jmp r-xdata
mov eax [ esp ]
sub eax esi
lea eax [ eax + ebp + 0x1 ]
push ebx
push ecx
push eax
mov [ esp + 0x10 ] ecx
call sub_4a4722
mov ecx [ esp + 0x10 ]
add esp 0xc
test eax eax
je r-xdata
push ebx
push ebp
push [ esp + 0x70 ]
push ebx
push ebp
lea eax [ esp + 0x14 ]
push eax
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
push ebx
push ebp
push [ esp + 0x70 ]
jmp r-xdata
push ebx
push ebp
lea eax [ esp + 0x14 ]
push eax
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
xor ebp ebp
jmp r-xdata
mov bl [ edi + esi ]
test bl bl
je r-xdata
xor ebp ebp
inc ebp
mov ebp esi
test eax eax
jne r-xdata
mov bl [ edi + esi + 0x1 ]
inc esi
test bl bl
jne r-xdata
movzx eax bl
push eax
call sub_4a7635
add esp 0x4
cmp bl 0x2c
je r-xdata
jmp r-xdata
sub_441360
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x34 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
mov [ esp + 0x4 ] eax
mov ebx [ esp + 0x1c ]
push 0xd
push esi
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push 0xb
push esi
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push [ esp + 0x8 ]
push ebx
call sub_4904f4
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
cmp edi 0x2
mov eax r--data
mov ecx r--data
cmove ecx eax
cmp edi 0x1
mov eax r--data
cmovne eax ecx
push [ esp ]
push eax
push ebx
push r--data
call sub_43f758
add esp 0x10
mov esi eax
push esi
push ebp
call sub_4842ab
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
sub esp 0x10
mov [ esp + 0xc ] esi
mov [ esp + 0x4 ] ebx
mov [ esp ] 0x0
call sub_44112f
add esp 0x10
test eax eax
je r-xdata
push 0xb
push esi
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
test ebp ebp
je r-xdata
push 0xd
push esi
call sub_43194f
add esp 0x8
cmp eax 0x1
je r-xdata
push ebx
call sub_43f79e
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_49079f
push [ esp ]
push ebx
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push esi
push ebp
call sub_4842ab
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
sub_441484
push ebp
push ebx
push edi
push esi
sub esp 0x110
mov eax [ rw-data ]
mov edi [ esp + 0x140 ]
mov esi [ esp + 0x130 ]
mov ebp [ esp + 0x12c ]
mov [ esp + 0x10c ] eax
push 0xd
push [ esp + 0x148 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push [ esp + 0x140 ]
push [ esp + 0x140 ]
push [ esp + 0x140 ]
push esi
push ebp
push [ esp + 0x13c ]
call sub_490cab
add esp 0x1c
mov esi eax
mov ebx [ esp + 0x128 ]
sub esp 0x10
mov eax [ esp + 0x154 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x134 ]
mov [ esp + 0x4 ] ebx
mov [ esp ] eax
call sub_44112f
add esp 0x10
test eax eax
je r-xdata
push [ esp + 0x144 ]
push edi
push [ esp + 0x144 ]
push [ esp + 0x144 ]
push [ esp + 0x144 ]
push esi
push ebp
push ebx
push [ esp + 0x144 ]
call sub_492e30
add esp 0x24
mov esi eax
test esi esi
jne r-xdata
mov ecx [ esp + 0x10c ]
call sub_497c4a
mov eax esi
add esp 0x110
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x88
push 0x1
call sub_43f807
add esp 0x8
mov ebx [ esp + 0x144 ]
mov esi eax
mov [ esi ] r--data
push ebx
call sub_43191d
add esp 0x4
mov [ esi + 0x74 ] eax
mov eax [ esp + 0x140 ]
xor edi edi
mov [ esi + 0xc ] eax
mov eax [ esp + 0x124 ]
mov [ esi + 0x10 ] eax
lea eax [ esi + 0x34 ]
mov [ esi + 0x14 ] ebp
mov [ esi + 0x4 ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] edi
push eax
call sub_43ff45
add esp 0x4
lea eax [ esi + 0x18 ]
push eax
call sub_43ff45
add esp 0x4
lea eax [ esi + 0x24 ]
push eax
call sub_43ff45
add esp 0x4
mov [ esi + 0x8 ] edi
mov [ esi + 0x44 ] 0xffffffff
mov [ esi + 0x4c ] edi
push 0xd
push ebx
call sub_43194f
add esp 0x8
lea ecx [ eax - 0x1 ]
mov edx 0x4
cmp ecx edx
jae r-xdata
mov [ esi + 0x4 ] r--data
jmp r-xdata
mov ecx [ eax * 4 + r--data ]
mov edi [ eax * 4 + r--data ]
mov [ esi + 0x4c ] ecx
push 0xf
mov ebx ebp
mov ebp [ esp + 0x148 ]
push ebp
call sub_43194f
add esp 0x8
mov [ esp ] eax
mov eax 0xe
push eax
push ebp
call sub_431a8c
add esp 0x8
push ebx
push [ esp + 0x12c ]
push [ esp + 0x8 ]
push eax
mov [ esp + 0x14 ] edi
push edi
push r--data
call sub_43f758
add esp 0x18
mov ecx [ esp + 0x140 ]
mov edi eax
mov edx 0x2
mov eax [ ecx ]
mov ebx ecx
xor ecx ecx
push ecx
push edi
push ecx
push ecx
push edx
push ebx
call [ eax ]
add esp 0x18
push edi
call sub_43f9d4
add esp 0x4
xor ebp ebp
inc ebp
push 0x8
push ebp
call sub_43f807
add esp 0x8
mov [ eax ] r--data
mov [ esp ] eax
mov [ eax + 0x4 ] esi
mov eax 0x3
push eax
mov edi [ esp + 0x148 ]
push edi
call sub_43194f
add esp 0x8
mov ebx eax
mov eax 0xe
push eax
push edi
call sub_431a8c
add esp 0x8
mov edi 0x2
mov ecx r--data
mov edx r--data
cmp ebx edi
cmove edx ecx
cmp ebx ebp
mov ecx r--data
cmovne ecx edx
push r--data
push ecx
push eax
push r--data
call sub_43f758
add esp 0x10
mov ecx [ esp + 0x140 ]
mov ebx eax
xor edx edx
mov eax [ ecx ]
push edx
push ebx
push edx
mov edx 0x0
push edx
push edi
push ecx
call [ eax ]
add esp 0x18
push ebx
call sub_43f9d4
add esp 0x4
mov eax 0x3
push eax
mov ebp [ esp + 0x148 ]
push ebp
call sub_43194f
add esp 0x8
mov ebx eax
mov eax 0xe
push eax
push ebp
call sub_431a8c
add esp 0x8
lea ecx [ esp + 0x8 ]
push ebx
push ecx
push eax
call sub_4904f4
add esp 0xc
mov ebx eax
push ebx
call sub_491f41
add esp 0x4
test eax eax
je r-xdata
push [ esp + 0x8 ]
call sub_43f9d4
add esp 0x4
lea edi [ esp + 0xc ]
push 0x100
push edi
push ebx
call sub_49083d
add esp 0xc
mov eax 0xf
push eax
mov ebp [ esp + 0x148 ]
push ebp
call sub_43194f
add esp 0x8
push eax
push edi
push [ esp + 0xc ]
push r--data
call sub_43f758
add esp 0x10
mov edx [ esp + 0x140 ]
mov edi eax
xor ecx ecx
mov eax [ edx ]
push ecx
push edi
push ecx
push ecx
push 0x2
push edx
call [ eax ]
add esp 0x18
push edi
call sub_43f9d4
add esp 0x4
mov eax 0xf
push eax
push ebp
call sub_43194f
add esp 0x8
push [ esp ]
push [ esp + 0x140 ]
push [ esp + 0x140 ]
push [ esp + 0x140 ]
push [ esp + 0x140 ]
push eax
push ebx
call sub_490cab
add esp 0x1c
mov [ esi + 0x8 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
test eax eax
jne r-xdata
mov [ esi + 0x4 ] r--data
push [ esp ]
call sub_43f9d4
add esp 0x4
push ebx
call sub_490c67
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
push 0xffffffff
push esi
call [ esi + 0x4c ]
add esp 0x8
jmp r-xdata
sub_44189a
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
mov esi [ edx ]
push ecx
push eax
push edx
call [ esi + 0x8 ]
add esp 0xc
pop esi
retn
add esi 0x18
push ecx
push eax
push esi
call sub_43ff80
add esp 0xc
push esi
call sub_43ff78
add esp 0x4
pop esi
retn
sub_4418d6
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
push esi
push edi
push eax
call [ ecx + 0xc ]
add esp 0xc
lea eax [ ebx + 0x18 ]
push eax
call sub_43ff54
add esp 0x4
add ebx 0x24
push ebx
call sub_43ff54
add esp 0x4
push esi
push edi
push ebx
call sub_43ff80
add esp 0xc
mov eax esi
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_441962
push ebp
push ebx
push edi
push esi
sub esp 0x20c
mov eax [ rw-data ]
mov edi [ esp + 0x220 ]
mov ecx [ esp + 0x224 ]
mov [ esp + 0x208 ] eax
cmp [ edi + 0x44 ] 0x0
je r-xdata
lea ebx [ edi + 0x34 ]
push ebx
call sub_43ff78
add esp 0x4
test eax eax
jle r-xdata
mov [ edi + 0x48 ] ecx
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
push [ esp + 0x224 ]
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ esp + 0x224 ]
test eax eax
mov [ edi + 0x48 ] eax
jne r-xdata
mov ecx [ esp + 0x208 ]
call sub_497c4a
add esp 0x20c
pop esi
pop edi
pop ebx
pop ebp
retn
push ebx
call sub_43ff78
add esp 0x4
test eax eax
jle r-xdata
cmp [ edi + 0x48 ] 0x0
jne r-xdata
mov eax esp
push eax
lea eax [ esp + 0x8 ]
push eax
push ebx
call sub_44008c
add esp 0xc
mov ebp [ esp ]
cmp ebp 0x201
jb r-xdata
push ebp
push [ esp + 0x8 ]
lea esi [ esp + 0x10 ]
push esi
call sub_49a1f0
add esp 0xc
push ebp
push ebx
call sub_44000a
add esp 0x8
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push [ esp ]
push esi
mov esi 0x0
push esi
push eax
call [ ecx + 0x8 ]
add esp 0x10
cmp [ edi + 0x48 ] esi
je r-xdata
mov ebp 0x200
mov [ esp ] 0x200
jmp r-xdata
sub_441a58
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
xor eax eax
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
retn
sub_441a78
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push eax
call [ ecx ]
add esp 0x18
retn
sub_441a9f
push edi
push esi
mov esi [ esp + 0xc ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov esi [ esi + 0x4 ]
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov esi [ esi + 0xc ]
mov edi [ esi ]
push edx
push ecx
push eax
push esi
call [ edi + 0x4 ]
add esp 0x10
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] ecx
mov [ esi + 0x58 ] edx
push 0x0
push esi
call [ esi + 0x4c ]
add esp 0x8
jmp r-xdata
pop esi
pop edi
retn
sub_441ae0
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov ebp [ eax + 0x4 ]
cmp [ ebp + 0x44 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ebx
push edi
push esi
push eax
call [ ecx + 0x8 ]
add esp 0x10
lea eax [ ebp + 0x34 ]
push ebx
push edi
push eax
call sub_43ff80
add esp 0xc
mov [ ebp + 0x5c ] esi
mov [ ebp + 0x60 ] edi
mov [ ebp + 0x64 ] ebx
push 0x2
push ebp
call [ ebp + 0x4c ]
add esp 0x8
jmp r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
sub_441b33
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
mov edx [ eax ]
push ecx
push eax
call [ edx + 0xc ]
add esp 0x8
retn
mov [ eax + 0x68 ] ecx
push 0x1
push eax
call [ eax + 0x4c ]
add esp 0x8
retn
sub_441b5f
push esi
sub esp 0x14
mov esi [ rw-data ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] esi
mov edx [ edx + 0x4 ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov edx [ edx + 0xc ]
mov ecx [ ecx ]
mov esi [ edx ]
mov esi [ esi + 0x10 ]
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0xc ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] eax
mov [ esp ] edx
call esi
mov [ edx + 0x6c ] eax
mov eax [ ecx ]
mov [ edx + 0x70 ] eax
mov [ esp ] edx
mov [ esp + 0x4 ] 0x3
call [ edx + 0x4c ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
retn
sub_441bcb
push ebp
push ebx
push edi
push esi
sub esp 0x218
mov eax [ rw-data ]
mov ebp [ esp + 0x22c ]
mov [ esp + 0x214 ] eax
mov eax [ ebp + 0x44 ]
cmp eax 0xffffffff
je r-xdata
lea esi [ esp + 0x14 ]
push 0x200
push esi
push [ ebp + 0x10 ]
call sub_49083d
add esp 0xc
mov eax [ ebp + 0x14 ]
push eax
push esi
push eax
push esi
push r--data
call sub_43f758
add esp 0x14
mov edi [ ebp + 0x8 ]
mov esi eax
mov eax [ edi ]
mov ebx [ eax + 0x8 ]
push esi
call sub_4a7f30
add esp 0x4
push eax
push esi
push edi
call ebx
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
mov eax 0x10
push eax
push [ ebp + 0x74 ]
call sub_431a8c
add esp 0x8
mov esi eax
push 0x11
push [ ebp + 0x74 ]
call sub_431a8c
add esp 0x8
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ esp + 0x230 ]
cmp ecx 0x3
ja r-xdata
push eax
push esi
push r--data
call sub_43f758
add esp 0xc
mov [ esp ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ebx eax
mov ecx 0x55555556
lea eax [ ebx * 4 ]
imul ecx
mov eax edx
shr eax 0x1f
lea eax [ edx + eax + 0x64 ]
push 0x1
push eax
call sub_43f807
add esp 0x8
mov edi eax
push 0x1c
push r--data
push edi
call sub_49a1f0
add esp 0xc
push edi
call sub_4a7f30
add esp 0x4
mov ebp eax
mov esi ebx
mov [ esp + 0x4 ] edi
add ebp edi
test ebx ebx
jle r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f41
push r--data
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
xor esi esi
jmp [ ecx * 4 + jump_table_409f7c ]
mov [ ebp + 0x2 ] 0x0
mov [ ebp ] 0xa0d
mov ebp [ esp + 0x22c ]
mov edi [ esp + 0x4 ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov esi [ eax + 0x8 ]
push edi
call sub_4a7f30
add esp 0x4
push eax
push edi
push ebx
call esi
add esp 0xc
push [ esp ]
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
xor edi edi
mov ebx esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x2
push r--data
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ ebp + 0x44 ] 0x1
xor esi esi
jmp r-xdata
xor esi esi
inc esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push [ ebp + 0x58 ]
push [ ebp + 0x54 ]
push [ ebp + 0x50 ]
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
mov ecx [ esp + 0x214 ]
call sub_497c4a
mov eax esi
add esp 0x218
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp ]
cmp ebx 0x4
mov eax 0x3
cmovl eax ebx
lea ecx [ ecx + edi ]
push ebp
push eax
push ecx
call sub_43fdae
add esp 0xc
add edi 0x3
add ebp 0x4
add ebx 0xfffffffd
cmp esi edi
jg r-xdata
sub_441d96
cmp eax 0x2
je r-xdata
lea esi [ ebp + 0x34 ]
push esi
call sub_43ff78
add esp 0x4
mov edi eax
test edi edi
jg r-xdata
cmp eax 0x1
jne r-xdata
push 0x1
push edi
call sub_43f807
add esp 0x8
mov ebp eax
push edi
push ebp
push esi
call sub_4400ae
add esp 0xc
mov ecx ebp
mov edx edi
call sub_442af5
mov ebx eax
test ebx ebx
js r-xdata
push 0x2e5
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f41
push r--data
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
lea ebp [ ebp + 0x34 ]
push ebp
call sub_43ff78
add esp 0x4
mov ebx eax
test ebx ebx
jg r-xdata
push ebp
jmp r-xdata
cmp ebx 0x3
mov [ esp ] ebp
jl r-xdata
xor esi esi
inc esi
mov eax ebx
inc eax
xor esi esi
inc esi
push esi
push eax
call sub_43f807
add esp 0x8
mov edi eax
push ebx
push edi
push ebp
call sub_4400ae
add esp 0xc
mov ecx edi
mov edx ebx
mov [ edi + ebx ] 0x0
call sub_442af5
mov ebx eax
test ebx ebx
js r-xdata
push 0x2af
push r--data
push r--data
call sub_4a509d
add esp 0xc
call sub_43f9d4
add esp 0x4
cmp ebx 0x2
jne r-xdata
push ebx
push esi
call sub_44000a
add esp 0x8
add ebp ebx
sub edi ebx
mov ecx ebp
mov edx edi
call sub_442af5
mov ebx eax
cmp ebx 0x2
jg r-xdata
push edi
jmp r-xdata
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0xc ]
mov [ eax ] 0xffffffff
push eax
push ecx
push edx
push r--data
push edi
call sub_442b34
add esp 0x14
cmp eax 0x2
jl r-xdata
push [ esp ]
push 0x2
push esi
call sub_44000a
add esp 0x8
push [ esp + 0x22c ]
call sub_440fd8
add esp 0x4
push [ esp ]
jmp r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x22c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
call [ ecx + 0x4 ]
add esp 0x10
push edi
jmp r-xdata
cmp [ esp + 0x8 ] 0xffffffff
je r-xdata
mov ecx [ esp + 0x214 ]
call sub_497c4a
mov eax esi
add esp 0x218
pop esi
pop edi
pop ebx
pop ebp
retn
push ebx
push ebp
call sub_44000a
add esp 0x8
mov eax [ esp + 0x8 ]
cmp [ edi + eax ] 0x32
jne r-xdata
mov [ edi + ebx ] 0x0
mov ebp [ esp + 0x22c ]
mov eax [ esp + 0x8 ]
cmp ebx eax
jle r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov ebp [ esp + 0x22c ]
mov [ ebp + 0x44 ] 0x2
mov ecx edi
add ecx eax
push ecx
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push ebx
push eax
call [ ecx + 0x4 ]
add esp 0x10
push ebx
call sub_43f9d4
add esp 0x4
push edi
mov cl [ edi + ebx - 0x1 ]
cmp cl 0xd
je r-xdata
mov [ edi + ebx - 0x1 ] 0x0
dec ebx
mov eax [ esp + 0x8 ]
cmp ebx eax
jg r-xdata
cmp cl 0xa
jne r-xdata
sub_442010
push ebp
push ebx
push edi
push esi
sub esp 0x20c
mov eax [ rw-data ]
mov ebx [ esp + 0x220 ]
mov [ esp + 0x208 ] eax
mov eax [ ebx + 0x44 ]
cmp eax 0xffffffff
je r-xdata
push [ ebx + 0x10 ]
call sub_490b5c
add esp 0x4
cmp eax 0x1
je r-xdata
mov ecx [ esp + 0x224 ]
cmp ecx 0x3
ja r-xdata
lea eax [ esp + 0x4 ]
push eax
push [ ebx + 0x10 ]
call sub_490b94
add esp 0x8
xor edi edi
jmp r-xdata
cmp eax 0x3
je r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f41
push r--data
push eax
call [ ecx + 0x4 ]
add esp 0x10
xor esi esi
jmp [ ecx * 4 + jump_table_409f8c ]
push 0x10
push [ ebx + 0x74 ]
call sub_431a8c
add esp 0x8
mov esi eax
push esi
call sub_4a7f30
add esp 0x4
lea ebp [ edi + eax + 0x9 ]
xor eax eax
inc eax
push eax
push ebp
call sub_43f807
add esp 0x8
mov ebx eax
lea eax [ ebx + 0x8 ]
push esi
push eax
call sub_4a7c00
add esp 0x8
mov ecx [ esp + 0x220 ]
mov [ ebx ] 0x104
mov al [ ecx + 0x15 ]
mov [ ebx + 0x2 ] al
mov al [ ecx + 0x14 ]
mov [ ebx + 0x3 ] al
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
push esi
call sub_4a7f30
add esp 0x4
lea eax [ ebx + eax + 0x9 ]
lea ecx [ esp + 0x8 ]
push edi
push ecx
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esp + 0x220 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
push ebp
push ebx
push eax
call [ ecx + 0x8 ]
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x220 ]
xor eax eax
xor esi esi
inc eax
mov [ ecx + 0x44 ] eax
lea esi [ esp + 0x8 ]
push 0x200
push esi
push [ ebx + 0x10 ]
call sub_49083d
add esp 0xc
push esi
call sub_4a7f30
add esp 0x4
mov edi eax
mov [ esp + 0x4 ] 0x1000000
inc edi
cmp eax 0x2
jne r-xdata
mov ecx [ esp + 0x208 ]
call sub_497c4a
mov eax esi
add esp 0x20c
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
push [ ebx + 0x58 ]
push [ ebx + 0x54 ]
push [ ebx + 0x50 ]
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
push 0x32a
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ ebx + 0x4 ] r--data
jmp r-xdata
xor esi esi
inc esi
jmp r-xdata
sub_4422b1
push ebp
push ebx
push edi
push esi
sub esp 0x21c
mov eax [ rw-data ]
mov edi [ esp + 0x230 ]
mov [ esp + 0x218 ] eax
mov eax [ edi + 0x44 ]
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x14 ] 0x5
push 0x10
push [ edi + 0x74 ]
call sub_431a8c
add esp 0x8
mov esi eax
push 0x11
push [ edi + 0x74 ]
call sub_431a8c
add esp 0x8
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ esp + 0x234 ]
cmp ecx 0x3
ja r-xdata
lea ebx [ esp + 0xc ]
lea esi [ esp + 0x14 ]
mov [ esi + 0x2 ] 0x0
mov [ ebx ] 0x3
push ebx
push esi
call sub_43af7c
add esp 0x8
mov ecx [ ebx ]
lea eax [ ecx + 0x1 ]
mov [ esp + ecx + 0x14 ] 0x2
add ecx 0xff
mov [ ebx ] eax
mov [ esi + 0x1 ] cl
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f41
push r--data
push eax
call [ ecx + 0x4 ]
add esp 0x10
xor esi esi
inc esi
xor esi esi
jmp [ ecx * 4 + jump_table_409f9c ]
mov ecx [ esp + 0x218 ]
call sub_497c4a
mov eax esi
add esp 0x21c
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax 0x3
mov [ esp + 0x15 ] 0x1
mov [ esp + 0xc ] 0x3
jmp r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push [ edi + 0x58 ]
push [ edi + 0x54 ]
push [ edi + 0x50 ]
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
mov ecx [ edi + 0x8 ]
lea esi [ esp + 0x14 ]
mov edx [ ecx ]
push eax
push esi
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov [ edi + 0x44 ] 0x1
xor esi esi
jmp r-xdata
sub_442389
cmp eax 0x1
jne r-xdata
cmp eax 0x8
je r-xdata
lea esi [ edi + 0x34 ]
push esi
call sub_43ff78
add esp 0x4
cmp eax 0x2
jl r-xdata
push edi
call sub_43af8d
add esp 0x4
mov esi eax
test esi esi
jne r-xdata
cmp eax 0x7
jne r-xdata
xor esi esi
inc esi
lea ebx [ esp + 0x14 ]
push 0x2
push ebx
push esi
call sub_4400ae
add esp 0xc
cmp [ ebx ] 0x5
jne r-xdata
mov ecx [ esp + 0x218 ]
call sub_497c4a
mov eax esi
add esp 0x21c
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi + 0x44 ]
add eax 0xfffffffe
cmp eax 0x4
ja r-xdata
lea esi [ edi + 0x34 ]
push esi
call sub_43ff78
add esp 0x4
cmp eax 0x2
jl r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
movsx eax [ esp + 0x15 ]
cmp eax 0x4
jae r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f41
push r--data
push eax
jmp [ eax * 4 + jump_table_409fac ]
lea ebx [ esp + 0x14 ]
push 0x2
push ebx
push esi
call sub_4400ae
add esp 0xc
cmp [ ebx ] 0x1
jne r-xdata
call [ ecx + 0x4 ]
add esp 0x10
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
mov eax [ eax * 4 + r--data ]
mov [ edi + 0x44 ] eax
push 0x2
push esi
call sub_44000a
add esp 0x8
mov eax [ edi + 0x44 ]
push [ edi + 0x10 ]
call sub_490b5c
add esp 0x4
cmp eax 0x3
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
cmp [ esp + 0x15 ] 0x0
je r-xdata
lea esi [ esp + 0x19 ]
mov [ esi - 0x2 ] 0x3
push 0x100
push esi
push [ edi + 0x10 ]
call sub_49083d
add esp 0xc
push esi
call sub_4a7f30
add esp 0x4
mov [ esi - 0x1 ] al
movsx eax al
add eax 0x7
cmp eax 0x2
je r-xdata
mov ebx 0x2
push ebx
push esi
call sub_44000a
add esp 0x8
mov [ edi + 0x44 ] ebx
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
lea eax [ esp + 0x18 ]
mov [ eax - 0x1 ] 0x4
push eax
push [ edi + 0x10 ]
call sub_490b94
add esp 0x8
mov eax 0x16
jmp r-xdata
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0x14 ]
mov [ ecx ] 0x105
mov [ ecx + 0x2 ] 0x0
mov edx [ edi + 0x14 ]
mov [ esp + eax + 0x12 ] dh
mov [ esp + eax + 0x13 ] dl
mov edx [ edi + 0x8 ]
mov esi [ edx ]
push eax
push ecx
push edx
call [ esi + 0x8 ]
add esp 0xc
mov [ edi + 0x44 ] 0x3
jmp r-xdata
push 0x46a
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ esp + 0x18 ]
mov [ eax - 0x1 ] 0x1
push eax
push [ edi + 0x10 ]
call sub_490b94
add esp 0x8
mov eax 0xa
jmp r-xdata
sub_442523
lea eax [ esp + 0x14 ]
push eax
call sub_4a7f30
add esp 0x4
lea eax [ esp + eax + 0x14 ]
push 0x1d
push r--data
push eax
jmp r-xdata
call sub_49a1f0
add esp 0xc
mov eax [ edi + 0xc ]
lea edx [ esp + 0x14 ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push edx
push eax
jmp r-xdata
call [ ecx + 0x4 ]
add esp 0x10
xor esi esi
inc esi
mov ecx [ esp + 0x218 ]
call sub_497c4a
mov eax esi
add esp 0x21c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_44259d
push 0x10
push [ edi + 0x74 ]
call sub_431a8c
add esp 0x8
mov esi eax
push 0x11
push [ edi + 0x74 ]
call sub_431a8c
add esp 0x8
cmp [ esi ] 0x0
jne r-xdata
push esi
mov ebp eax
mov [ esp + 0x8 ] ebp
call sub_4a7f30
add esp 0x4
mov ebx eax
mov eax 0x100
mov [ esp ] esi
cmp ebx eax
mov eax 0xff
cmovge ebx eax
xor esi esi
inc esi
test ebx ebx
cmovle ebx esi
push ebp
call sub_4a7f30
add esp 0x4
mov ecx 0x100
mov ebp 0xff
cmp eax ecx
cmovl ebp eax
lea eax [ esp + 0x16 ]
test ebp ebp
mov [ eax - 0x2 ] 0x1
mov [ eax - 0x1 ] bl
cmovle ebp esi
push ebx
push [ esp + 0x4 ]
push eax
call sub_49a1f0
add esp 0xc
mov ecx ebp
lea eax [ esp + ebx + 0x17 ]
mov [ eax - 0x1 ] cl
push ecx
push [ esp + 0x8 ]
push eax
call sub_49a1f0
add esp 0xc
mov eax [ edi + 0x8 ]
lea edx [ ebx + ebp + 0x3 ]
lea ebx [ esp + 0x14 ]
mov ecx [ eax ]
push edx
push ebx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ edi + 0x44 ] 0x7
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
mov ecx [ esp + 0x218 ]
call sub_497c4a
mov eax esi
add esp 0x21c
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push r--data
push eax
jmp r-xdata
call [ ecx + 0x4 ]
add esp 0x10
xor esi esi
inc esi
sub_4428e5
lea eax [ esp + 0x14 ]
push eax
call sub_4a7f30
add esp 0x4
lea eax [ esp + eax + 0x14 ]
push 0x1b
push r--data
push eax
call sub_49a1f0
add esp 0xc
mov eax [ edi + 0xc ]
lea edx [ esp + 0x14 ]
mov ecx [ eax ]
push 0x0
push 0x1f40
push edx
push eax
jmp r-xdata
call [ ecx + 0x4 ]
add esp 0x10
xor esi esi
inc esi
mov ecx [ esp + 0x218 ]
call sub_497c4a
mov eax esi
add esp 0x21c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_44291d
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
cmp [ esi + 0x44 ] 0xffffffff
je r-xdata
push [ esi + 0x74 ]
push [ esi + 0x14 ]
push [ esi + 0x10 ]
call sub_442b7f
add esp 0xc
mov esi eax
push esi
call sub_4a7f30
add esp 0x4
xor ecx ecx
lea eax [ eax * 4 + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov edi eax
mov al [ esi ]
mov ebx edi
test al al
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax 0x3
ja r-xdata
mov [ ebx ] 0x0
push edi
push r--data
call sub_43f758
add esp 0x8
mov ebp eax
mov eax [ esp + 0x1c ]
xor ebx ebx
mov eax [ eax + 0xc ]
mov ecx [ eax ]
push ebx
push ebp
push ebx
push ebx
push 0x2
push eax
call [ ecx ]
add esp 0x18
push ebp
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x1c ]
mov edi [ eax + 0x8 ]
mov eax [ edi ]
mov ebp [ eax + 0x8 ]
push esi
call sub_4a7f30
add esp 0x4
push eax
push esi
push edi
call ebp
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x1c ]
mov [ eax + 0x44 ] 0x1
jmp sub_442ac5
mov ebp esi
mov ebx edi
inc ebp
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push 0x0
push 0x1f41
push r--data
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
xor ebx ebx
jmp [ eax * 4 + jump_table_409fe0 ]
cmp al 0xc
jg r-xdata
xor ebx ebx
inc ebx
jmp sub_442ac5
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push [ esi + 0x58 ]
push [ esi + 0x54 ]
push [ esi + 0x50 ]
push eax
call [ ecx + 0x4 ]
add esp 0x10
jmp sub_442ac5
cmp al 0xd
je r-xdata
cmp al 0x9
je r-xdata
mov [ ebx ] 0x725c
cmp al 0x5c
jne r-xdata
mov [ ebx ] 0x745c
jmp r-xdata
cmp al 0xa
jne r-xdata
movzx ecx al
lea edx [ ecx - 0x20 ]
cmp edx 0x5e
ja r-xdata
mov [ ebx ] 0x5c5c
jmp r-xdata
add ebx 0x2
mov [ ebx ] 0x6e5c
jmp r-xdata
push ecx
push r--data
push ebx
call sub_432778
add esp 0xc
add ebx eax
jmp r-xdata
mov [ ebx ] al
inc ebx
jmp r-xdata
mov al [ ebp ]
inc ebp
test al al
jne r-xdata
sub_442a9b
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x70 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
mov [ esp ] ecx
mov ecx [ esi + 0x6c ]
sub esp 0xc
mov esi [ esp + 0xc ]
mov [ esp + 0x8 ] esi
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
call edx
add esp 0xc
mov ebx eax
sub_442af5
push ebx
push edi
push esi
xor eax eax
dec eax
test edx edx
jle r-xdata
pop esi
pop edi
pop ebx
retn
xor esi esi
mov edi esi
cmp esi 0x2
jl r-xdata
cmp [ ecx + esi ] 0xa
jne r-xdata
jmp r-xdata
inc esi
mov eax esi
lea edi [ esi + 0x2 ]
cmp edi edx
jge r-xdata
inc edi
cmp edi edx
mov esi edi
jl r-xdata
mov bl [ ecx + edi ]
cmp bl 0x20
je r-xdata
cmp bl 0x9
je r-xdata
jmp r-xdata
sub_442b34
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
lea ebx [ esp + 0x20 ]
mov [ esp + 0x4 ] eax
mov [ esp ] ebx
call sub_443339
push ebx
push 0x0
push edi
push 0xffffffff
push esi
push [ eax + 0x4 ]
push [ eax ]
call sub_4a3381
add esp 0x1c
mov ecx [ esp + 0x4 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
retn
sub_442b7f
push ebp
push ebx
push edi
push esi
sub esp 0x228
mov eax [ rw-data ]
mov [ esp + 0x224 ] eax
push 0x12
push [ esp + 0x248 ]
call sub_431a8c
add esp 0x8
mov edi eax
cmp [ edi ] 0x0
je r-xdata
xor eax eax
xor esi esi
jmp r-xdata
lea eax [ edi + 0x2 ]
lea esi [ edi + 0x1 ]
mov ebx edi
xor edx edx
xor ecx ecx
mov [ esp + 0x8 ] 0x0
mov [ esp ] edi
mov [ esp + 0x20 ] eax
xor eax eax
mov [ esp + 0x14 ] esi
jmp r-xdata
lea ecx [ esi + 0x201 ]
push 0x1
push ecx
push eax
call sub_43f8db
add esp 0xc
lea edi [ esi + ecx ]
xor ebp ebp
mov [ esp + 0xc ] ecx
jmp r-xdata
mov cl [ edi + ebp - 0x1 ]
test cl cl
je r-xdata
test ebp ebp
je r-xdata
cmp cl 0x25
je r-xdata
mov esi [ esp + 0x8 ]
cmp edx esi
jg r-xdata
mov ebx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
add ebp ebx
test ebp ebp
je r-xdata
cmp cl 0x5c
jne r-xdata
mov [ eax + esi ] 0x0
mov esi eax
mov ecx [ esp + 0x224 ]
call sub_497c4a
mov eax esi
add esp 0x228
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp + 0x4 ] edx
add edi 0x200
push 0x1
push edi
push eax
call sub_43f8db
add esp 0xc
mov [ esp + 0x4 ] edi
jmp r-xdata
mov ebx [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov esi [ esp + 0x8 ]
lea ecx [ esi + ebp ]
cmp edx ecx
mov [ esp + 0x1c ] ecx
jge r-xdata
inc ebp
mov ecx [ esp ]
lea edx [ eax + esi ]
sub ebp ebx
add ecx ebx
push ebp
push ecx
push edx
mov edi eax
call sub_49a1f0
mov eax edi
add esp 0xc
mov edx [ esp + 0x4 ]
add esi ebp
mov [ esp + 0x8 ] esi
movsx ecx [ ebp + edi ]
test ecx ecx
jne r-xdata
mov [ esp + 0x4 ] edx
lea ecx [ esi + ebp + 0x200 ]
push 0x1
mov [ esp + 0x8 ] ecx
push ecx
push eax
call sub_43f8db
add esp 0xc
jmp r-xdata
mov eax [ esp + 0xc ]
lea eax [ eax + ebp + 0x1 ]
mov [ esp + 0x8 ] eax
cmp [ edi + ebp - 0x1 ] 0x5c
jne r-xdata
mov eax [ esp + 0xc ]
mov esi ebx
mov ecx eax
lea eax [ ecx + ebp ]
lea ebp [ ecx + ebp + 0x1 ]
mov ebx eax
mov eax [ esp + 0x10 ]
jmp r-xdata
add esi eax
mov [ esp + 0x10 ] eax
push ebp
push ebx
push esi
call sub_49a1f0
add esp 0xc
mov edx [ esp + 0x4 ]
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
cmp cl 0x25
jne r-xdata
mov eax [ esp + 0x10 ]
cmp ecx 0x6d
jle r-xdata
mov edi esi
sub edi ebx
add edi ebp
cmp edx edi
jge r-xdata
add edi ebp
mov [ esp + 0x4 ] edx
push 0x4
push r--data
push edi
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
cmp edx ebx
jg r-xdata
cmp ecx 0x25
je r-xdata
cmp ecx 0x73
jg r-xdata
push 0x200
lea eax [ esp + 0x28 ]
mov edi eax
push edi
push [ esp + 0x244 ]
call sub_49083d
add esp 0xc
push edi
call sub_4a7f30
add esp 0x4
mov ecx eax
add eax ebx
cmp [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
jge r-xdata
push 0x4
push r--data
push edi
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
mov edi [ esp ]
mov ecx [ esp + 0xc ]
mov [ eax + ebx ] 0x25
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push eax
cmp edx ebx
jg r-xdata
cmp ecx 0x58
je r-xdata
cmp ecx 0x74
je r-xdata
cmp ecx 0x6e
je r-xdata
mov edi [ esp ]
mov eax [ esp + 0x10 ]
lea eax [ eax + 0x200 ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
push [ esp + 0x18 ]
mov edi ecx
call sub_43f8db
mov ecx edi
add esp 0xc
mov edi [ esp ]
jmp r-xdata
push [ esp + 0x240 ]
push r--data
lea eax [ esp + 0x2c ]
push eax
call sub_432778
add esp 0xc
movsx edi al
lea eax [ edi + ebx ]
cmp [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
jge r-xdata
push 0x4
push r--data
push edi
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
cmp [ edi + ecx ] 0x0
lea ebx [ edi + ecx ]
jne r-xdata
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push eax
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0xc ]
mov edi edx
xor esi esi
mov [ esp + 0x1c ] ebx
lea eax [ eax + ecx ]
xor ecx ecx
add eax ebp
jmp r-xdata
cmp ecx 0x5c
jne r-xdata
cmp edx ebx
jg r-xdata
cmp ecx 0x78
jne r-xdata
cmp edx ebx
jg r-xdata
cmp ecx 0x72
jne r-xdata
mov ebx eax
call sub_49a1f0
mov eax ebx
add esp 0xc
mov ecx [ esp + 0xc ]
add ebx eax
push ecx
lea ecx [ esp + 0x28 ]
push ecx
push ebx
jmp r-xdata
mov eax [ esp + 0x10 ]
lea eax [ eax + 0x200 ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
push [ esp + 0x18 ]
call sub_43f8db
add esp 0xc
jmp r-xdata
push 0x10
push [ esp + 0x248 ]
call sub_431a8c
add esp 0x8
mov [ esp + 0x18 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov edx eax
add eax ebx
cmp [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
jge r-xdata
push 0x4
push r--data
push edi
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
call sub_43f8db
mov edx esi
mov esi [ esp + 0x20 ]
add esp 0xc
mov bl [ eax + esi ]
mov dl 0xd0
mov dh bl
add dh 0xd0
cmp dh 0xa
jb r-xdata
lea ecx [ ebx + 0x2 ]
cmp edx ecx
mov [ esp + 0x8 ] ecx
jge r-xdata
cmp edx ebx
jg r-xdata
mov edi [ esp ]
mov ecx [ esp + 0xc ]
mov [ eax + ebx ] 0x9
jmp r-xdata
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push eax
call sub_43f8db
mov edx esi
mov esi [ esp + 0x20 ]
add esp 0xc
mov edi [ esp ]
mov ecx [ esp + 0xc ]
mov [ eax + ebx ] 0xa
jmp r-xdata
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push eax
call sub_43f8db
mov edx esi
mov esi [ esp + 0x20 ]
add esp 0xc
cmp edx ebx
jg r-xdata
mov edx [ esp + 0x4 ]
lea ecx [ ecx + ebp + 0x5 ]
add ebx eax
push edi
lea ecx [ esp + 0x28 ]
push ecx
push ebx
mov edi eax
call sub_49a1f0
mov eax edi
add esp 0xc
mov ecx [ esp + 0xc ]
mov edi [ esp ]
jmp r-xdata
mov edi [ esp ]
mov eax [ esp + 0x10 ]
lea eax [ eax + 0x200 ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
push [ esp + 0x18 ]
mov edi edx
call sub_43f8db
mov edx edi
add esp 0xc
mov edi [ esp ]
jmp r-xdata
push 0x11
push [ esp + 0x248 ]
call sub_431a8c
add esp 0x8
mov [ esp + 0x18 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ecx eax
add eax ebx
cmp [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
jge r-xdata
push 0x9
push r--data
push edi
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
add bl cl
add bl dl
cmp esi 0x1
jne r-xdata
mov dh bl
mov dl 0xa9
add dh 0x9f
cmp dh 0x6
jb r-xdata
movzx ecx [ ebp + edi - 0x1 ]
mov [ eax + ebx ] cx
mov ecx [ esp + 0xc ]
mov edi [ esp ]
lea ecx [ ecx + ebp + 0x2 ]
jmp r-xdata
lea esi [ ebx + 0x202 ]
push 0x1
push esi
push eax
call sub_43f8db
mov edx esi
mov esi [ esp + 0x20 ]
add esp 0xc
mov edi [ esp ]
mov ecx [ esp + 0xc ]
mov [ eax + ebx ] 0x5c
jmp r-xdata
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push eax
call sub_43f8db
mov edx esi
mov esi [ esp + 0x20 ]
add esp 0xc
inc ebx
lea ecx [ ecx + ebp + 0x2 ]
mov edi [ esp ]
mov ecx [ esp + 0xc ]
mov [ eax + ebx ] 0xd
jmp r-xdata
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push eax
call sub_43f8db
mov edx esi
mov esi [ esp + 0x20 ]
add esp 0xc
mov ecx [ esp + 0x18 ]
add ebx eax
push edx
push ecx
push ebx
jmp r-xdata
mov edi [ esp ]
mov eax [ esp + 0x10 ]
lea eax [ eax + 0x200 ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
push [ esp + 0x18 ]
mov edi ecx
call sub_43f8db
mov ecx edi
add esp 0xc
mov edi [ esp ]
jmp r-xdata
push 0xe
push [ esp + 0x248 ]
call sub_431a8c
add esp 0x8
mov [ esp + 0x18 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov edx eax
add eax ebx
cmp [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
jge r-xdata
push 0x9
push r--data
push edi
call sub_4a4722
add esp 0xc
test eax eax
je r-xdata
shl bl 0x4
inc esi
mov cl bl
mov eax [ esp + 0x1c ]
mov edx edi
cmp edx eax
jle r-xdata
mov dh bl
mov dl 0xc9
add dh 0xbf
cmp dh 0x6
jae r-xdata
add ebx eax
push ecx
push [ esp + 0x1c ]
push ebx
mov edi [ esp ]
mov eax [ esp + 0x10 ]
lea eax [ eax + 0x200 ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
push [ esp + 0x18 ]
mov edi edx
call sub_43f8db
mov edx edi
add esp 0xc
mov edi [ esp ]
jmp r-xdata
push 0xf
push [ esp + 0x248 ]
call sub_43194f
add esp 0x8
push eax
push r--data
lea eax [ esp + 0x2c ]
mov edi eax
push edi
call sub_432778
add esp 0xc
push edi
call sub_4a7f30
add esp 0x4
mov edx eax
mov edi [ esp ]
mov eax [ esp + 0x10 ]
mov ecx edx
add ecx ebx
cmp [ esp + 0x4 ] ecx
mov [ esp + 0x8 ] ecx
jge r-xdata
mov edx [ esp + 0x4 ]
cmp edx ebx
jle r-xdata
lea edi [ eax + 0x201 ]
push 0x1
push edi
push [ esp + 0x18 ]
call sub_43f8db
mov edx edi
add esp 0xc
mov edi [ esp ]
mov edi [ esp ]
mov eax [ esp + 0x10 ]
jmp r-xdata
mov ebx [ esp + 0x1c ]
mov edx edi
cmp edx ebx
jle r-xdata
mov ecx [ esp + 0x18 ]
add ebx eax
push edx
push ecx
push ebx
add ebx eax
push edx
lea ecx [ esp + 0x28 ]
push ecx
push ebx
jmp r-xdata
lea ecx [ ecx + 0x200 ]
push 0x1
mov [ esp + 0x8 ] ecx
push ecx
push eax
mov [ esp + 0x1c ] edx
call sub_43f8db
mov edx [ esp + 0x1c ]
add esp 0xc
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push [ esp + 0x18 ]
call sub_43f8db
mov edx esi
mov esi [ esp + 0x20 ]
add esp 0xc
mov edi [ esp ]
mov edi [ esp ]
mov eax [ esp + 0x10 ]
jmp r-xdata
inc ebx
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov [ eax + ecx ] bl
mov ecx [ esp + 0xc ]
mov ebx [ esp + 0x1c ]
add ecx ebp
lea ecx [ esi + ecx + 0x3 ]
mov esi [ esp + 0x14 ]
jmp r-xdata
lea esi [ ebx + 0x201 ]
push 0x1
push esi
push [ esp + 0x18 ]
call sub_43f8db
mov edx esi
add esp 0xc
mov edi [ esp ]
mov edi [ esp ]
mov eax [ esp + 0x10 ]
jmp r-xdata
mov ebx eax
call sub_49a1f0
mov eax ebx
add esp 0xc
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
lea ecx [ ecx + ebp + 0xa ]
jmp r-xdata
mov [ esp + 0x8 ] ebx
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov [ eax + ebx ] 0x25
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x8 ]
mov [ eax + ebx ] 0x5c
jmp r-xdata
sub_443340
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
push 0x24
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor ebp ebp
mov [ esi ] r--data
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ edi ] esi
mov [ esi + 0x18 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x1c ] ebp
push ebx
call sub_43191d
add esp 0x4
mov [ esi + 0x20 ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x10 ] eax
push 0x3
push ebx
call sub_43194f
add esp 0x8
push r--data
push [ esi + 0x10 ]
push eax
push ebx
push [ esp + 0x38 ]
push [ esp + 0x38 ]
push [ esp + 0x38 ]
call sub_441360
add esp 0x1c
mov ebx eax
push ebx
call sub_491f41
add esp 0x4
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx eax
mov eax 0x17
test ecx ecx
cmovns eax ecx
push [ esp + 0x1c ]
push esi
push [ esp + 0x38 ]
push [ esp + 0x38 ]
push 0x1
push ebp
push eax
mov eax [ esp + 0x44 ]
mov ebp eax
push [ ebp ]
push ebx
call sub_441484
add esp 0x24
mov [ esi + 0x4 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
mov edi eax
mov ebx ebp
test edi edi
jne r-xdata
push ebx
call sub_490c67
add esp 0x4
jmp r-xdata
mov eax edi
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x9
push [ esp + 0x20 ]
call sub_431a8c
add esp 0x8
mov esi eax
xor edi edi
cmp [ esi ] 0x0
je r-xdata
push [ ebx ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f79e
add esp 0x4
mov [ ebx ] eax
push 0x3a
push eax
call sub_43f6bb
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x0
sub_44345d
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ esi + 0x20 ]
call sub_431816
add esp 0x4
pop esi
jmp sub_43f9d4
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
sub_443484
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
retn
sub_4434b3
push esi
cmp [ esp + 0xc ] 0xc
jne r-xdata
pop esi
retn
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
add esp 0x4
mov [ esi + 0x18 ] 0x1
mov ecx esi
pop esi
jmp sub_443653
sub_44356a
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ esi + 0x10 ]
call sub_48d188
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x14 ] 0x1
mov ecx esi
pop esi
pop edi
jmp sub_443653
add esi 0x10
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
push [ esi + 0x10 ]
add esi 0x10
call sub_48a878
add esp 0x4
jmp r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push edi
push [ esi ]
call sub_4842ab
add esp 0x8
push edi
push r--data
push [ esi ]
call sub_489e27
add esp 0xc
pop esi
pop edi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x18 ] 0x1
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
add esp 0x4
sub_44360b
push ebx
push esi
mov esi [ esp + 0xc ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push 0x0
push [ esi + 0x10 ]
call sub_48d156
add esp 0x10
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x1000
setg bl
mov edx [ ecx ]
push ebx
push ecx
call [ edx + 0x18 ]
add esp 0x8
mov [ esi + 0x1c ] 0x1
pop esi
pop ebx
retn
sub_443653
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov [ esi + 0x4 ] 0x0
push [ esi + 0x10 ]
call sub_48a878
add esp 0x4
sub_443688
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x14 ]
xor eax eax
inc eax
push 0x2c
push eax
call sub_43f807
add esp 0x8
mov esi eax
xor ebp ebp
mov [ esi ] r--data
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0x20 ] edi
push 0x73
push ebx
call sub_43194f
add esp 0x8
mov [ esi + 0x18 ] eax
push 0x74
push ebx
call sub_43194f
add esp 0x8
mov [ esi + 0x1c ] eax
xor eax eax
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ebp
mov [ esi + 0x28 ] ebp
push ebx
call sub_43191d
add esp 0x4
mov [ esi + 0x24 ] eax
mov eax [ esp + 0x18 ]
mov [ eax ] esi
push 0x3
push ebx
call sub_43194f
add esp 0x8
push r--data
push [ esi + 0x20 ]
push eax
push ebx
push [ esp + 0x38 ]
push [ esp + 0x38 ]
push [ esp + 0x38 ]
call sub_441360
add esp 0x1c
mov ebx eax
push ebx
call sub_491f41
add esp 0x4
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx eax
mov eax 0x201
test ecx ecx
cmovns eax ecx
push [ esp + 0x1c ]
push esi
push [ esp + 0x38 ]
push [ esp + 0x38 ]
push ebp
push 0x1
push eax
mov eax [ esp + 0x44 ]
mov ebp eax
push [ ebp ]
push ebx
call sub_441484
add esp 0x24
mov [ esi + 0x4 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
push ebx
call sub_490c67
add esp 0x4
jmp r-xdata
mov eax edi
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x9
mov eax [ esp + 0x20 ]
mov ebx eax
push ebx
call sub_431a8c
add esp 0x8
mov edi eax
cmp [ edi ] 0x0
je r-xdata
push ebx
call sub_44422f
add esp 0x4
mov edi eax
mov ebx 0x1
test edi edi
je r-xdata
push [ ebp ]
call sub_43f9d4
add esp 0x4
push edi
call sub_43f79e
add esp 0x4
mov [ ebp ] eax
push 0x3a
push eax
call sub_43f6bb
add esp 0x8
test eax eax
je r-xdata
push [ esi + 0x20 ]
call sub_43f7d4
add esp 0x4
mov [ esi + 0x28 ] eax
mov [ eax ] ebx
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ esi + 0x28 ]
mov [ ecx + 0x4 ] eax
push r--data
call sub_43f79e
add esp 0x4
push ebx
push eax
push [ esi + 0x28 ]
call sub_43f887
add esp 0xc
xor edi edi
push edi
push edi
push [ esi + 0x28 ]
call sub_48d18c
add esp 0xc
test eax eax
js r-xdata
mov ecx esi
mov edx edi
call sub_443ac0
push edi
call sub_43f9d4
add esp 0x4
xor edi edi
jmp r-xdata
mov [ eax ] 0x0
mov eax [ esi + 0x28 ]
mov ecx esi
mov eax [ eax + 0x18 ]
mov eax [ eax ]
mov edx [ eax + 0x8 ]
call sub_443ac0
sub_443854
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_43fa0e
add esp 0x4
push [ esi + 0x24 ]
call sub_431816
add esp 0x4
pop esi
jmp sub_43f9d4
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
sub_44388b
push edi
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ esi + 0x28 ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
test edi edi
je r-xdata
pop esi
pop edi
retn
mov edi [ eax ]
push edx
push ecx
push eax
call [ edi + 0x8 ]
add esp 0xc
mov [ esi + 0xc ] eax
push edx
push ecx
push edi
call sub_48d18c
add esp 0xc
test eax eax
js r-xdata
mov eax [ esi + 0xc ]
mov eax [ esi + 0x28 ]
mov ecx esi
mov eax [ eax + 0x18 ]
mov eax [ eax ]
mov edx [ eax + 0x8 ]
call sub_443ac0
jmp r-xdata
sub_4438ea
push edi
push esi
sub esp 0x10
mov ecx [ rw-data ]
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
mov [ esp + 0xc ] ecx
xor ecx ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] ecx
mov [ esp ] 0x7373ffff
mov [ esi + 0x18 ] edx
mov [ esi + 0x1c ] eax
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
retn
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov edi esp
mov [ edi + 0x6 ] dh
mov [ edi + 0x7 ] dl
mov [ edi + 0x4 ] ah
mov [ edi + 0x5 ] al
mov eax [ ecx ]
push 0xc
push edi
push ecx
call [ eax + 0x8 ]
add esp 0xc
mov [ esi + 0xc ] eax
sub_4439ae
mov eax [ esp + 0x4 ]
xor ecx ecx
cmp [ eax + 0x10 ] 0x0
sete cl
push ecx
push [ eax + 0x24 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ eax + 0x20 ]
call sub_430000
add esp 0x20
retn
sub_4439df
push edi
push esi
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
xor eax eax
test edi edi
mov [ esi + 0x4 ] eax
je r-xdata
pop esi
pop edi
retn
push edi
push [ esi + 0x20 ]
call sub_4842ab
add esp 0x8
push edi
push r--data
push [ esi + 0x20 ]
call sub_489e27
add esp 0xc
push [ esi + 0x20 ]
call sub_48a878
add esp 0x4
mov [ esi + 0x8 ] 0x1
sub_443a38
push ebx
push esi
mov eax [ esp + 0x14 ]
mov esi [ esp + 0xc ]
cmp [ esp + 0x10 ] 0x2
jne r-xdata
mov ecx [ esp + 0x18 ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ eax ] 0x80
jne r-xdata
test ecx ecx
jle r-xdata
xor ebx ebx
cmp [ eax ] 0x0
lea edx [ eax + 0x1 ]
mov [ esi + 0x10 ] 0x0
sete bl
cmove eax edx
sub ecx ebx
pop esi
pop ebx
retn
mov [ esi + 0x14 ] 0x1
push [ esi + 0x1c ]
push [ esi + 0x18 ]
push esi
call sub_4438ea
add esp 0xc
jmp r-xdata
push ecx
push eax
push 0x0
push [ esi + 0x20 ]
call sub_48d156
add esp 0x10
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x1000
setg bl
mov edx [ ecx ]
push ebx
push ecx
call [ edx + 0x18 ]
add esp 0x8
sub_443ac0
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov [ esp ] edx
lea edx [ esp + 0x7 ]
mov esi ecx
xor edi edi
mov eax [ rw-data ]
inc edi
mov [ esp + 0x8 ] eax
mov [ edx ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push edi
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
push 0x36
push [ esi + 0x24 ]
call sub_431a8c
add esp 0x8
mov ebp [ esi + 0x4 ]
mov ebx eax
mov eax [ ebp ]
mov edi [ eax + 0x8 ]
push ebx
call sub_4a7f30
add esp 0x4
push eax
push ebx
push ebp
call edi
add esp 0xc
mov eax [ esi + 0x4 ]
xor edx edx
inc edx
mov ecx [ eax ]
push edx
lea edx [ esp + 0xb ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov edi [ esi + 0x4 ]
mov ebp [ esp ]
mov eax [ edi ]
mov ebx [ eax + 0x8 ]
push ebp
call sub_4a7f30
add esp 0x4
push eax
push ebp
push edi
call ebx
add esp 0xc
mov eax [ esi + 0x4 ]
xor edx edx
inc edx
mov ecx [ eax ]
push edx
lea edx [ esp + 0xb ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
push 0x30
push [ esi + 0x24 ]
call sub_431a8c
add esp 0x8
mov ebx [ esi + 0x4 ]
mov edi eax
mov eax [ ebx ]
mov ebp [ eax + 0x8 ]
push edi
call sub_4a7f30
add esp 0x4
push eax
push edi
push ebx
call ebp
add esp 0xc
mov eax [ esi + 0x4 ]
xor edx edx
inc edx
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx + 0x8 ]
add esp 0xc
push 0x31
push [ esi + 0x24 ]
call sub_431a8c
add esp 0x8
mov ebx [ esi + 0x4 ]
mov edi eax
mov eax [ ebx ]
mov ebp [ eax + 0x8 ]
push r--data
push edi
call sub_4a8220
add esp 0x8
push eax
push edi
push ebx
call ebp
add esp 0xc
mov eax [ esi + 0x4 ]
xor edx edx
inc edx
mov ecx [ eax ]
push edx
lea edx [ esp + 0xb ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ esi + 0xc ] eax
mov [ esi + 0x28 ] 0x0
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_443bf8
push ebp
push ebx
push edi
push esi
sub esp 0x48
mov eax [ rw-data ]
mov edi [ esp + 0x5c ]
cmp [ esp + 0x60 ] 0x0
mov [ esp + 0x44 ] eax
je r-xdata
push r--data
push r--data
push r--data
push edi
call sub_43b5be
add esp 0x10
mov esi eax
cmp [ esi + 0x10 ] 0x0
jle r-xdata
push r--data
push r--data
push edi
call sub_43b51f
add esp 0xc
jmp r-xdata
sub esp 0xc
mov edi [ esp + 0x68 ]
mov esi r--data
mov [ esp + 0x4 ] esi
mov [ esp ] edi
mov [ esp + 0x8 ] r--data
call sub_43b51f
add esp 0xc
push r--data
push r--data
push esi
push edi
call sub_43b5be
add esp 0x10
mov esi eax
push 0x1
call sub_43b2d8
add esp 0x4
mov [ esp + 0x40 ] eax
push 0x39
call sub_43b2d8
add esp 0x4
mov [ esp + 0x3c ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x38 ] eax
sub esp 0x20
mov eax [ esp + 0x60 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x5c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x58 ]
mov [ esp + 0x10 ] eax
mov [ esp ] esi
mov [ esp + 0x14 ] sub_4328ea
mov [ esp + 0xc ] 0x28
mov [ esp + 0x8 ] 0x6c
mov [ esp + 0x4 ] r--data
call sub_43b885
add esp 0x20
xor ebp ebp
push r--data
push r--data
push r--data
push edi
call sub_43b5be
add esp 0x10
xor ebp ebp
mov esi eax
dec ebp
push ebp
call sub_43b2d8
add esp 0x4
mov [ esp + 0x34 ] eax
push 0x3a
call sub_43b2d8
add esp 0x4
mov [ esp + 0x30 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x2c ] eax
sub esp 0x20
mov eax [ esp + 0x54 ]
mov ebx sub_4328ea
mov edi 0x28
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43b885
add esp 0x20
push ebp
call sub_43b2d8
add esp 0x4
mov [ esp + 0x28 ] eax
push 0x3b
call sub_43b2d8
add esp 0x4
mov [ esp + 0x24 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x20 ] eax
sub esp 0x20
mov eax [ esp + 0x48 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x44 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x40 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x62
mov [ esp + 0x4 ] r--data
call sub_43b885
add esp 0x20
push 0xfffffffe
call sub_43b2d8
add esp 0x4
mov [ esp + 0x1c ] eax
push 0x3c
call sub_43b2d8
add esp 0x4
mov [ esp + 0x18 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x14 ] eax
sub esp 0x20
mov eax [ esp + 0x3c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x38 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43b885
add esp 0x20
push [ esp + 0x64 ]
call sub_43b2d8
add esp 0x4
mov [ esp + 0x10 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0xc ] eax
sub esp 0x1c
mov eax [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x14 ] sub_443fdb
mov [ esp + 0x8 ] 0x70
mov [ esp + 0x4 ] r--data
call sub_43bc13
add esp 0x1c
push [ esp + 0x68 ]
call sub_43b2d8
add esp 0x4
mov [ esp + 0x8 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x4 ] eax
sub esp 0x1c
mov eax [ esp + 0x24 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x14 ] sub_4440d6
mov [ esp + 0x8 ] 0x66
mov [ esp + 0x4 ] r--data
call sub_43bc13
add esp 0x1c
mov ecx [ esp + 0x44 ]
call sub_497c4a
add esp 0x48
pop esi
pop edi
pop ebx
pop ebp
retn
inc ebp
cmp ebp [ esi + 0x10 ]
jl r-xdata
cmp [ ebx + 0x10 ] sub_432ae7
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + ebp * 4 ]
cmp [ ebx ] 0x2
jne r-xdata
mov eax [ ebx + 0x24 ]
mov ecx [ ebx + 0x28 ]
mov edx 0x4
inc eax
mov [ ebx + 0x24 ] eax
inc [ ebx + 0x20 ]
push edx
mov edi 0x4
push eax
push ecx
call sub_43f8db
add esp 0xc
mov [ ebx + 0x28 ] eax
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ ebx + 0x24 ]
mov edx [ ebx + 0x28 ]
mov [ edx + ecx * 4 - 0x4 ] eax
push edi
push [ ebx + 0x24 ]
push [ ebx + 0x30 ]
call sub_43f8db
add esp 0xc
mov edi eax
mov [ ebx + 0x30 ] edi
mov eax [ ebx + 0x24 ]
mov [ esp ] eax
mov eax 0x4
push eax
call sub_43b2d8
add esp 0x4
mov ecx [ esp ]
mov [ edi + ecx * 4 - 0x4 ] eax
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push 0x1
push [ ebx + 0x24 ]
push eax
call sub_43f8db
add esp 0xc
mov [ ebx + 0x2c ] eax
mov ecx [ ebx + 0x24 ]
mov [ eax + ecx - 0x1 ] 0x72
sub_443fdb
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
cmp eax 0x3
je r-xdata
push ebp
push edi
call sub_482f70
add esp 0x8
test eax eax
js r-xdata
test eax eax
jne r-xdata
xor eax eax
push eax
push ebp
push edi
call sub_482f0e
add esp 0xc
jmp r-xdata
add esp 0x4
jmp r-xdata
mov eax edi
mov edi [ eax + 0x14 ]
mov ebx eax
push 0x3d
push esi
call sub_43194f
add esp 0x8
mov [ esp ] eax
push ebp
push ebx
mov esi ebx
call sub_483326
add esp 0x8
mov ebx ebp
push ebp
mov eax esi
push eax
call sub_482d69
add esp 0x8
xor ebp ebp
push eax
push 0x3d
push esi
pop esi
pop edi
pop ebx
pop ebp
retn
inc ebp
cmp ebp 0x5
jne r-xdata
push [ ebp * 8 + r--data ]
push [ ebp * 8 + r--data ]
push ebx
push esi
call sub_482e60
add esp 0x10
bt edi ebp
jae r-xdata
mov ebp ebx
mov ebx [ esp ]
xor ecx ecx
xor eax eax
inc ecx
cmp ecx 0x5
jb r-xdata
cmp ebx [ ecx * 8 + r--data ]
je r-xdata
bt edi ecx
jae r-xdata
jne r-xdata
push eax
push ebp
push esi
call sub_483079
add esp 0xc
inc eax
push ebp
push esi
call sub_483356
add esp 0x8
push ebx
push 0x3d
push [ esp + 0x28 ]
jmp r-xdata
push 0x0
push ebp
push esi
call sub_483079
add esp 0xc
xor ebx ebx
jmp r-xdata
call sub_431ee3
add esp 0x10
sub_4440d6
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
cmp eax 0x3
je r-xdata
push ebp
push edi
call sub_482f70
add esp 0x8
test eax eax
js r-xdata
test eax eax
jne r-xdata
xor eax eax
push eax
push ebp
push edi
call sub_482f0e
add esp 0xc
jmp r-xdata
add esp 0x4
jmp r-xdata
mov eax edi
mov edi [ eax + 0x14 ]
mov ebx eax
push 0x3e
push esi
call sub_43194f
add esp 0x8
mov [ esp ] eax
push ebp
push ebx
mov esi ebx
call sub_483326
add esp 0x8
mov ebx ebp
push ebp
mov eax esi
push eax
call sub_482d69
add esp 0x8
xor ebp ebp
push eax
push 0x3e
push esi
pop esi
pop edi
pop ebx
pop ebp
retn
inc ebp
cmp ebp 0x4
jne r-xdata
push [ ebp * 8 + r--data ]
push [ ebp * 8 + r--data ]
push ebx
push esi
call sub_482e60
add esp 0x10
bt edi ebp
jae r-xdata
mov ebp ebx
mov ebx [ esp ]
xor ecx ecx
xor eax eax
inc ecx
cmp ecx 0x4
jb r-xdata
cmp ebx [ ecx * 8 + r--data ]
je r-xdata
bt edi ecx
jae r-xdata
jne r-xdata
push eax
push ebp
push esi
call sub_483079
add esp 0xc
inc eax
push ebp
push esi
call sub_483356
add esp 0x8
push ebx
push 0x3e
push [ esp + 0x28 ]
jmp r-xdata
push 0x0
push ebp
push esi
call sub_483079
add esp 0xc
xor ebx ebx
jmp r-xdata
call sub_431ee3
add esp 0x10
sub_4441d4
push ebx
push edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
xor esi esi
mov edi [ esp + 0x10 ]
mov ebx rw-data
mov eax esi
pop esi
pop edi
pop ebx
retn
mov esi [ ebx ]
add ebx 0x4
test esi esi
jne r-xdata
push edi
push [ esi + 0x44 ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
sub_44420b
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ esp + 0x4 ]
mov edx rw-data
retn
mov eax [ edx ]
add edx 0x4
test eax eax
jne r-xdata
cmp [ eax + 0x48 ] ecx
je r-xdata
sub_44422f
push esi
mov esi [ esp + 0x8 ]
push 0x34
push esi
call sub_431a8c
add esp 0x8
cmp [ eax ] 0x0
je r-xdata
push 0x35
push esi
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push eax
call sub_43f79e
add esp 0x4
pop esi
retn
xor eax eax
pop esi
retn
pop esi
jmp sub_48f5eb
sub_444268
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] ecx
mov ecx esp
push ecx
push eax
call sub_4940c8
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov esi [ esp ]
push [ esp + 0x14 ]
push esi
call sub_4442b9
add esp 0x8
push esi
call sub_494288
add esp 0x4
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
retn
sub_4442b9
push ebp
push ebx
push edi
push esi
sub esp 0x120
mov eax [ rw-data ]
mov ebp [ esp + 0x138 ]
mov ebx [ esp + 0x134 ]
mov [ esp + 0x11c ] eax
push 0x1
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x0
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push ebx
call sub_494222
add esp 0xc
push 0x77
push ebp
call sub_431daf
add esp 0x8
push eax
push r--data
push ebx
call sub_494677
add esp 0xc
push 0x78
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x79
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x7a
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x7b
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x7c
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x2
push ebp
call sub_43194f
add esp 0x8
mov edx [ rw-data ]
mov ecx r--data
test edx edx
je r-xdata
push ecx
push r--data
push ebx
call sub_494222
add esp 0xc
xor edi edi
inc edi
push edi
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x4
push ebp
call sub_43194f
add esp 0x8
mov ecx eax
mov esi 0x55555556
lea eax [ ecx + 0x2 ]
imul esi
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 2 ]
neg eax
lea eax [ ecx + eax + 0x2 ]
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
mov eax 0x5
push eax
push ebp
call sub_43194f
add esp 0x8
xor ecx ecx
test eax eax
setne cl
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
mov ebx 0x6
push ebx
push ebp
call sub_43194f
add esp 0x8
mov ebp 0x88888889
mov ecx eax
imul ebp
add edx ecx
mov eax edx
sar edx 0x5
shr eax 0x1f
add edx eax
push edx
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push ebx
push [ esp + 0x13c ]
call sub_43194f
add esp 0x8
mov ecx eax
imul ebp
mov ebp [ esp + 0x138 ]
add edx ecx
mov eax edx
sar edx 0x5
shr eax 0x1f
add edx eax
imul eax edx 0x3c
sub ecx eax
push ecx
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
mov eax 0x7
push eax
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x8
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x30
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0x31
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
mov ecx [ esp + 0x134 ]
mov edx r--data
push edi
push 0x32
push ebp
call sub_445862
add esp 0xc
mov eax 0x3
push eax
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0xa
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0xb
push ebp
call sub_43194f
add esp 0x8
mov ecx eax
lea eax [ ecx + 0x2 ]
imul esi
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 2 ]
neg eax
lea eax [ ecx + eax + 0x2 ]
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0xc
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0xd
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0xe
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0xf
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x10
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0x11
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0x12
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0x13
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
mov ecx [ esp + 0x134 ]
mov edx r--data
push edi
push 0x33
push ebp
call sub_445862
add esp 0xc
push 0x34
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0x35
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x36
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
push 0x16
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x17
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x1c
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x1d
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x28
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
push 0x1e
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push [ esp + 0x13c ]
call sub_494253
add esp 0xc
mov ecx [ esp + 0x134 ]
mov edx r--data
push 0x1f
push ebp
mov eax 0x7
push eax
push r--data
call sub_445a28
add esp 0x10
mov ecx [ esp + 0x134 ]
mov edx r--data
push 0x18
push ebp
push ebx
mov esi [ esp + 0x140 ]
push r--data
call sub_445a28
add esp 0x10
mov edx r--data
mov ecx esi
push 0x19
push ebp
mov eax 0x5
push eax
push r--data
call sub_445a28
add esp 0x10
push 0x1a
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x1b
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push esi
call sub_494222
add esp 0xc
push 0x23
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x24
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x25
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x26
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x27
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
mov edx r--data
mov ecx esi
push 0x29
push ebp
push [ r--data ]
push r--data
call sub_445a28
add esp 0x10
push 0x2a
push ebp
call sub_431daf
add esp 0x8
push eax
push r--data
push esi
call sub_494677
add esp 0xc
push 0x2d
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x21
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x9
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push esi
call sub_494222
add esp 0xc
push 0x22
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x20
push ebp
call sub_431daf
add esp 0x8
push eax
push r--data
push esi
call sub_494677
add esp 0xc
push 0x14
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push esi
call sub_494222
add esp 0xc
push 0x37
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x38
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x3f
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x40
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x41
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x43
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x42
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x44
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x45
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x46
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x47
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x48
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x4b
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x49
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x4a
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x4c
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x4d
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x4e
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x51
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x52
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x53
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x5b
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x5c
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x4f
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x50
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x54
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x55
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x80
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push esi
call sub_494222
add esp 0xc
push 0x56
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x57
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x7d
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x7e
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x7f
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x64
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x65
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x66
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x67
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x6c
push ebp
call sub_431daf
add esp 0x8
push eax
push r--data
push esi
call sub_494677
add esp 0xc
push 0x68
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x69
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x6a
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x6b
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x60
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x61
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x62
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x63
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0xb6
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x82
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x83
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x72
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x5f
push ebp
call sub_431a8c
add esp 0x8
push eax
push r--data
push esi
call sub_494222
add esp 0xc
push 0x73
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x74
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x75
push ebp
call sub_431e49
add esp 0x8
push eax
push r--data
push esi
call sub_494554
add esp 0xc
push 0x76
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x90
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x86
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x87
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x84
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x85
push ebp
call sub_43194f
add esp 0x8
push eax
push r--data
push esi
call sub_494253
add esp 0xc
push 0x88
push ebp
call sub_43194f
add esp 0x8
dec eax
push eax
push r--data
push esi
call sub_494253
add esp 0xc
xor esi esi
xor edi edi
mov esi rw-data
push edi
push r--data
lea eax [ esp + 0x110 ]
push eax
call sub_432778
add esp 0xc
lea eax [ esi + 0x2 ]
push eax
mov eax 0x89
push eax
mov ebx 0x89
mov ebp [ esp + 0x140 ]
push ebp
call sub_4319e9
add esp 0xc
mov [ esp ] eax
lea eax [ esi + 0x1 ]
push eax
push ebx
push ebp
call sub_4319e9
add esp 0xc
mov ebx eax
push esi
mov eax 0x89
push eax
push ebp
lea ebp [ esp + 0x14 ]
call sub_4319e9
add esp 0xc
push [ esp ]
push ebx
mov ebx [ esp + 0x13c ]
push eax
push r--data
push ebp
call sub_432778
add esp 0x14
push ebp
lea eax [ esp + 0x10c ]
push eax
push ebx
call sub_494222
add esp 0xc
inc edi
add esi 0x3
cmp edi 0x16
jne r-xdata
push 0x8c
mov esi [ esp + 0x13c ]
push esi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x8d
push esi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x8a
push esi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x8b
push esi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x8e
push esi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
xor edi edi
lea esi [ esp + 0x108 ]
mov ecx [ edx + 0x44 ]
mov edx [ esi ]
add esi 0x4
test edx edx
jne r-xdata
push ebp
push 0x8f
push [ esp + 0x140 ]
call sub_4319e9
add esp 0xc
cmp [ esp + 0x8 ] 0x0
mov edi eax
mov esi r--data
mov eax r--data
cmovne esi eax
push ebx
call sub_4a7f30
add esp 0x4
lea eax [ esp + eax + 0x8 ]
push edi
push esi
push r--data
push eax
call sub_432778
add esp 0x10
inc ebp
cmp ebp [ esp ]
jl r-xdata
push ebx
lea esi [ esp + 0x10c ]
push esi
push [ esp + 0x13c ]
call sub_494222
add esp 0xc
cmp [ esp + 0x4 ] 0xe0
mov edi [ esp ]
mov ebp ebx
jl r-xdata
cmp [ edx + 0x48 ] eax
je r-xdata
jmp r-xdata
push edi
push r--data
push esi
call sub_432778
add esp 0xc
lea eax [ edi + 0x20 ]
mov ebx ebp
mov ebp edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] edi
mov [ esp ] eax
push 0x91
mov edi [ esp + 0x13c ]
push edi
call sub_431a8c
add esp 0x8
push eax
push r--data
mov ebx [ esp + 0x13c ]
push ebx
call sub_494222
add esp 0xc
push 0x92
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x93
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x81
push edi
call sub_431a8c
add esp 0x8
push eax
push r--data
push ebx
call sub_494222
add esp 0xc
push 0x94
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x6d
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x6e
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x58
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x59
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x5a
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x6f
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x70
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x71
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x95
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x96
push edi
call sub_431a8c
add esp 0x8
push eax
push r--data
push ebx
call sub_494222
add esp 0xc
push 0x97
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x98
push edi
call sub_431daf
add esp 0x8
push eax
push r--data
push ebx
call sub_494677
add esp 0xc
push 0x99
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x9a
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x1
push 0x9b
push edi
call sub_445862
add esp 0xc
push 0x9c
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
mov esi 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x9d
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x9e
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa5
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x9f
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa0
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa1
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa2
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa3
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa4
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa6
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa7
push edi
call sub_43194f
add esp 0x8
mov ecx 0x2
sub ecx eax
push ecx
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xa8
push edi
call sub_43194f
add esp 0x8
sub esi eax
push esi
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xae
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xaf
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xb0
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xb2
push edi
call sub_431e49
add esp 0x8
push eax
push r--data
push ebx
call sub_494554
add esp 0xc
push 0xb3
push edi
call sub_431e49
add esp 0x8
push eax
push r--data
push ebx
call sub_494554
add esp 0xc
push 0xb4
push edi
call sub_431e49
add esp 0x8
push eax
push r--data
push ebx
call sub_494554
add esp 0xc
push 0xb1
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xb5
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x39
push edi
call sub_431a8c
add esp 0x8
push eax
push r--data
push ebx
call sub_494222
add esp 0xc
push 0x3a
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x3b
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x3c
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x3d
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0x3e
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xb7
push edi
call sub_431a8c
add esp 0x8
push eax
push r--data
push ebx
call sub_494222
add esp 0xc
push 0xaa
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xab
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
push 0xac
push edi
call sub_43194f
add esp 0x8
push eax
push r--data
push ebx
call sub_494253
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x0
push 0xad
push edi
call sub_445862
add esp 0xc
mov ecx [ esp + 0x11c ]
call sub_497c4a
add esp 0x120
pop esi
pop edi
pop ebx
pop ebp
retn
sub_445862
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov [ esp ] edx
mov [ esp + 0x4 ] ecx
mov edi [ esp + 0x28 ]
mov ebp [ esp + 0x24 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0x8 ]
push eax
push 0x0
push edi
push ebp
call sub_431bea
add esp 0x10
xor esi esi
mov ebx eax
inc esi
jmp r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x8 ]
push edi
call sub_4a7f30
add esp 0x4
mov ebp eax
push ebx
call sub_4a7f30
add esp 0x4
add eax ebp
mov ebp [ esp + 0x24 ]
lea esi [ esi + eax * 2 + 0x2 ]
lea eax [ esp + 0x8 ]
push eax
push edi
mov edi [ esp + 0x30 ]
push edi
push ebp
call sub_431bea
add esp 0x10
mov ebx eax
push 0x1
push esi
call sub_43f807
add esp 0x8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
push 0x0
push edi
push ebp
call sub_431bea
add esp 0x10
mov ebp eax
mov esi ebx
test ebp ebp
je r-xdata
mov [ esi ] 0x0
push ebx
push [ esp + 0x4 ]
push [ esp + 0xc ]
call sub_494222
add esp 0xc
push ebx
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi ebx
cmp esi ebx
mov eax ebx
je r-xdata
push r--data
push ebp
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov [ esi ] 0x2c
inc esi
mov eax esi
mov edi [ esp + 0x8 ]
push edi
call sub_43f79e
add esp 0x4
mov [ esp + 0x8 ] eax
push 0x4c
push eax
call sub_49ae50
add esp 0x8
mov ebp r--data
test eax eax
je r-xdata
cmp dl 0x2c
jne r-xdata
cmp dl 0x5c
je r-xdata
mov [ eax ] 0x44
test dl dl
jne r-xdata
mov [ eax ] 0x5c
inc eax
mov dl [ ecx ]
cmp dl 0x3d
je r-xdata
mov [ eax ] dl
inc eax
inc ecx
jmp r-xdata
cmp [ esp + 0x2c ] 0x0
je r-xdata
mov dl [ ecx ]
cmp dl 0x3c
jle r-xdata
jmp r-xdata
mov esi eax
mov [ eax ] 0x3d
mov edi eax
push eax
call j_sub_4a8813
add esp 0x4
mov [ esp + 0x8 ] edi
jmp r-xdata
cmp cl 0x2c
jne r-xdata
cmp cl 0x5c
je r-xdata
mov eax edi
xor edi edi
cmp eax 0x9b
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
push edi
mov edi [ esp + 0x30 ]
push edi
push ebp
call sub_431bea
add esp 0x10
mov ebp eax
test ebp ebp
jne r-xdata
test cl cl
jne r-xdata
mov [ eax + 0x1 ] 0x5c
add eax 0x2
mov cl [ ebp ]
mov esi eax
cmp cl 0x3d
je r-xdata
mov [ esi ] cl
inc ebp
mov eax esi
jmp r-xdata
jmp r-xdata
mov cl [ ebp ]
lea esi [ eax + 0x1 ]
cmp cl 0x3c
jle r-xdata
jmp r-xdata
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x8 ]
test edi edi
je r-xdata
sub_445a28
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov esi [ esp + 0x2c ]
mov edi edx
mov [ esp + 0xc ] ecx
test esi esi
jle r-xdata
xor eax eax
xor esi esi
inc eax
push eax
push eax
call sub_43f807
add esp 0x8
mov ebp eax
jmp r-xdata
mov [ esp + 0x4 ] edi
mov edi [ esp + 0x28 ]
xor ebx ebx
mov [ esp ] 0x0
add edi 0x4
mov [ esp + 0x10 ] edi
mov ebx ebp
mov eax [ ecx - 0x4 ]
test eax eax
je r-xdata
inc edx
add ecx 0x10
cmp edx esi
jl r-xdata
mov [ ebx ] 0x0
push ebp
push edi
push [ esp + 0x14 ]
call sub_494222
add esp 0xc
push ebp
call sub_43f9d4
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x1ba
push r--data
push r--data
call sub_4a509d
add esp 0xc
inc ebx
cmp ebx esi
jne r-xdata
mov ebp [ esp ]
xor ecx ecx
test ebp ebp
setg cl
mov edi ecx
push eax
call sub_4a7f30
add esp 0x4
mov ecx edi
mov edi [ esp + 0x10 ]
add ecx ebp
add ecx eax
mov [ esp ] ecx
cmp [ ecx ] eax
je r-xdata
jmp r-xdata
push ebx
push [ esp + 0x38 ]
push [ esp + 0x38 ]
call sub_4319e9
add esp 0xc
mov ecx edi
xor edx edx
mov eax [ esp ]
xor ecx ecx
inc ecx
inc eax
push ecx
push eax
call sub_43f807
add esp 0x8
mov ebp eax
test esi esi
jle r-xdata
mov edi [ esp + 0x4 ]
mov esi [ esp ]
mov ebx ebp
xor ebp ebp
mov [ esp + 0x8 ] ebx
mov eax [ ecx - 0x4 ]
test eax eax
je r-xdata
inc edx
add ecx 0x10
cmp edx esi
jl r-xdata
inc ebp
cmp ebp esi
jne r-xdata
cmp ebx [ esp + 0x8 ]
mov ecx r--data
mov edx r--data
cmova ecx edx
push eax
push ecx
push r--data
push ebx
call sub_432778
add esp 0x10
add ebx eax
cmp [ ecx ] eax
je r-xdata
jmp r-xdata
push ebp
push [ esp + 0x38 ]
push [ esp + 0x38 ]
call sub_4319e9
add esp 0xc
mov ecx edi
xor edx edx
mov edi [ esp + 0x4 ]
mov esi [ esp ]
mov ebp [ esp + 0x8 ]
jmp r-xdata
mov eax ebx
sub eax ebp
cmp eax esi
je r-xdata
sub_445b82
push edi
push esi
mov edi [ esp + 0x10 ]
push [ esp + 0xc ]
call sub_494293
add esp 0x4
mov esi eax
push edi
push esi
call sub_445bc0
add esp 0x8
push esi
call sub_494288
add esp 0x4
push edi
call sub_440120
add esp 0x4
test eax eax
je r-xdata
pop esi
pop edi
retn
pop esi
pop edi
jmp sub_48edec
sub_445bc0
push ebp
push ebx
push edi
push esi
sub esp 0x2c
mov eax [ rw-data ]
mov ebp [ esp + 0x44 ]
mov esi [ esp + 0x40 ]
mov [ esp + 0x28 ] eax
xor eax eax
push eax
xor ebx ebx
push 0x2b
push ebp
call sub_431ee3
mov edi r--data
mov [ esp + 0x8 ] edi
mov [ esp ] ebp
mov [ esp + 0x4 ] 0x14
call sub_43203b
add esp 0xc
push edi
push 0x15
push ebp
call sub_43203b
add esp 0xc
push edi
push 0x2e
push ebp
call sub_43203b
add esp 0xc
mov edx r--data
mov ecx esi
push edi
call sub_447373
add esp 0x4
mov edi eax
push edi
push ebx
xor ebx ebx
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x77
push ebp
call sub_4472f9
add esp 0x8
mov edx r--data
mov ecx esi
push 0x78
push ebp
push ebx
xor edi edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x79
push ebp
push 0xffffffff
call sub_44733b
add esp 0xc
xor ebx ebx
mov edx r--data
mov ecx esi
inc ebx
push 0x7a
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x7b
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x7c
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push r--data
call sub_447373
add esp 0x4
mov edi eax
push [ rw-data ]
push 0x2
push ebp
call sub_431ee3
add esp 0xc
push [ rw-data ]
push ebx
push ebp
call sub_431ee3
add esp 0xc
push edi
call sub_4441d4
add esp 0x4
test eax eax
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x3
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
xor eax eax
mov edi r--data
inc eax
push eax
mov ebx eax
push edi
call sub_483659
add esp 0x8
push eax
push edi
push esi
call sub_4943f1
add esp 0xc
mov ecx eax
mov edx 0x55555556
lea eax [ ecx + 0x1 ]
imul edx
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 2 ]
neg eax
lea eax [ ecx + eax + 0x1 ]
push eax
push 0x4
push ebp
call sub_431ee3
add esp 0xc
mov edx r--data
mov ecx esi
push 0x5
push ebp
push ebx
call sub_44733b
add esp 0xc
xor eax eax
mov edi r--data
push eax
push edi
call sub_483659
add esp 0x8
push eax
push edi
push esi
call sub_4943f1
add esp 0xc
mov edi eax
xor eax eax
mov ebx r--data
push eax
push ebx
call sub_483659
add esp 0x8
push eax
push ebx
push esi
call sub_4943f1
add esp 0xc
imul ecx edi 0x3c
add ecx eax
push ecx
push 0x6
push ebp
call sub_431ee3
add esp 0xc
mov edx r--data
mov ecx esi
push 0x7
push ebp
xor eax eax
inc eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x8
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x30
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x31
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x32
push ebp
call sub_4473a8
add esp 0x8
mov esi 0xffffff28
test eax eax
je r-xdata
push [ eax + 0x48 ]
push 0x2
push ebp
call sub_431ee3
add esp 0xc
mov edx r--data
mov ecx esi
push 0x1
push ebp
push [ rw-data ]
call sub_44733b
add esp 0xc
push r--data
push [ esi + r--data ]
push 0x32
push ebp
call sub_4320b6
add esp 0x10
add esi 0x4
jne r-xdata
mov edi r--data
mov ebx [ esp + 0x40 ]
mov edx r--data
mov ecx ebx
push r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0xa
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
sub esp 0x4
mov esi r--data
mov [ esp ] esi
mov [ esp + 0x4 ] 0x1
call sub_483659
add esp 0x8
push eax
push esi
push ebx
call sub_4943f1
add esp 0xc
mov ecx eax
mov edx 0x55555556
lea eax [ ecx + 0x1 ]
imul edx
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 2 ]
neg eax
lea eax [ ecx + eax + 0x1 ]
push eax
push 0xb
push ebp
call sub_431ee3
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xc
push ebp
push 0x0
call sub_44733b
add esp 0xc
xor edi edi
mov esi 0xd
mov edx r--data
mov ecx ebx
dec edi
push esi
push ebp
push edi
call sub_44733b
add esp 0xc
push esi
push ebp
call sub_43194f
add esp 0x8
cmp eax edi
jne r-xdata
add esi 0x4
jne r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
mov ecx r--data
cmove ecx edi
push ecx
push ebx
push 0x32
push ebp
call sub_4320b6
add esp 0x10
mov edx r--data
mov ecx ebx
push r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0xe
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push 0xf
push ebp
push 0x50
call sub_44733b
add esp 0x8
mov eax r--data
mov edx r--data
mov ecx ebx
mov esi r--data
mov [ esp ] eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x10
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push esi
mov esi r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x11
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x12
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push 0x13
push ebp
xor eax eax
inc eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x33
push ebp
call sub_4473a8
add esp 0x8
mov edx r--data
mov ecx ebx
push esi
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x34
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
xor esi esi
mov edx r--data
mov ecx ebx
push 0x35
push ebp
push esi
call sub_44733b
add esp 0xc
mov eax r--data
mov edx r--data
mov ecx ebx
push eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x36
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push 0x16
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x17
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x1c
push ebp
xor eax eax
inc eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x1d
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x1e
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x28
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push r--data
call sub_447373
add esp 0x4
mov edi eax
mov edx r--data
mov ecx edi
push 0x1f
push ebp
push 0x7
call sub_4474c8
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edi r--data
push esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
cmp eax 0x2
mov eax r--data
mov esi r--data
mov edx r--data
mov ecx ebx
cmove esi eax
push esi
call sub_447373
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
sub esp 0x8
mov esi r--data
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
call sub_483659
add esp 0x8
push eax
push esi
push ebx
call sub_4943f1
add esp 0xc
cmp eax 0x4
ja r-xdata
mov ebx [ esi + r--data ]
push ebx
push 0x32
push ebp
call sub_431b26
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x366
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi 0x5
mov edi r--data
push esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push [ esp + 0x48 ]
call sub_4943f1
add esp 0xc
cmp eax esi
jne r-xdata
jmp [ eax * 4 + jump_table_40b3a4 ]
push edi
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x40 ]
mov eax r--data
push r--data
push edi
call sub_4a7d00
add esp 0x8
mov esi [ esp + 0x40 ]
test eax eax
jne r-xdata
push 0x1
push 0xd
push ebp
push 0x2
push 0xd
push ebp
jmp r-xdata
push 0x0
push 0xd
push ebp
jmp r-xdata
push ecx
push 0x21
push ebp
call sub_431ee3
add esp 0x8
mov eax r--data
mov edx r--data
mov ecx esi
mov [ esp ] eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x9
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x22
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x23
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x24
push ebp
xor eax eax
inc eax
push eax
mov edi eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x25
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x26
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x27
push ebp
push edi
mov ebx edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push r--data
call sub_447373
add esp 0x4
mov edi eax
mov edx r--data
mov ecx edi
push 0x29
push ebp
push [ r--data ]
call sub_4474c8
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x2a
push ebp
call sub_4472f9
add esp 0x8
mov edx r--data
mov ecx esi
push 0x2d
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x20
push ebp
call sub_4472f9
add esp 0x8
mov eax r--data
mov edx r--data
mov ecx esi
push eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x14
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x37
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x38
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x3f
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x40
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x41
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x43
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x42
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x44
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x45
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x46
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x47
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x48
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edi r--data
push ebx
push edi
call sub_483659
add esp 0x8
push eax
push edi
push esi
call sub_4943f1
add esp 0xc
cmp eax ebx
mov eax 0x2
mov edi 0x2
mov edx r--data
mov ecx esi
adc eax 0xffffffff
push 0x4b
push ebp
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x49
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x4a
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x4c
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x4d
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x4e
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x51
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x52
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x53
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x5b
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x5c
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x4f
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov eax 0x50
mov edx r--data
mov ecx esi
push eax
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x54
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x55
push ebp
mov [ esp + 0x8 ] 0x2
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x80
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x56
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x57
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x7d
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x7e
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x7f
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x64
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x65
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x66
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x67
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x6c
push ebp
call sub_4472f9
add esp 0x8
mov edx r--data
mov ecx esi
push 0x68
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x69
push ebp
push 0x5
call sub_44733b
add esp 0xc
mov edi 0x7d0
mov ebx r--data
push edi
push ebx
call sub_483659
add esp 0x8
push eax
push ebx
push esi
call sub_4943f1
add esp 0xc
push eax
push 0x6a
push ebp
call sub_431ee3
add esp 0x4
mov ebx r--data
mov [ esp ] ebx
mov [ esp + 0x4 ] 0x1388
call sub_483659
add esp 0x8
push eax
push ebx
xor ebx ebx
push esi
call sub_4943f1
add esp 0xc
push eax
push 0x6b
push ebp
call sub_431ee3
add esp 0xc
mov edx r--data
mov ecx esi
push 0x60
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x61
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x62
push ebp
xor edi edi
inc edi
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x63
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0xb6
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x82
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x83
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x72
push ebp
push edi
call sub_44733b
add esp 0xc
mov eax r--data
mov edx r--data
mov ecx esi
push eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x5f
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx esi
push 0x73
push ebp
mov eax 0x50
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x74
push ebp
push 0x18
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x75
push ebp
call sub_44771a
add esp 0x8
mov edx r--data
mov ecx esi
push 0x76
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x90
push ebp
push 0x4
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x86
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x87
push ebp
push ebx
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x84
push ebp
xor edi edi
inc edi
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx esi
push 0x85
push ebp
push edi
call sub_44733b
add esp 0xc
xor eax eax
mov edi r--data
inc eax
push eax
push edi
call sub_483659
add esp 0x8
push eax
push edi
push esi
call sub_4943f1
add esp 0xc
inc eax
push eax
push 0x88
mov edi ebp
push ebp
call sub_431ee3
add esp 0xc
cmp eax 0x2
jne r-xdata
mov ecx edi
mov edx r--data
push 0x18
push ebp
push 0x6
call sub_4474c8
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov ecx esi
mov edx r--data
push r--data
call sub_447373
add esp 0x4
mov edi eax
mov edx r--data
mov ecx edi
push 0x19
push ebp
push 0x5
call sub_4474c8
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov ecx esi
mov edx r--data
push 0x1a
push ebp
push 0x3c
call sub_44733b
add esp 0xc
mov ecx esi
mov edx r--data
push r--data
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x1b
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
sub esp 0x4
mov edi r--data
mov [ esp ] edi
mov [ esp + 0x4 ] 0x3
call sub_483659
add esp 0x8
xor ebx ebx
push eax
push edi
push esi
call sub_4943f1
add esp 0xc
cmp eax 0x1
mov ecx 0x0
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov eax r--data
jmp r-xdata
call sub_431ee3
add esp 0xc
mov ebx [ esp + 0x40 ]
push ebx
call sub_43f9d4
add esp 0x4
mov ebx ebp
add [ esp ] 0x3
inc ebx
cmp ebx 0x16
jne r-xdata
mov esi [ esp ]
lea eax [ esi - 0x2 ]
push [ esp + 0x10 ]
push eax
mov eax 0x89
push eax
mov eax edi
push eax
call sub_431fad
add esp 0x10
lea eax [ esi - 0x1 ]
push [ esp + 0xc ]
push eax
mov eax 0x89
push eax
push [ esp + 0x50 ]
call sub_431fad
add esp 0x10
push [ esp + 0x8 ]
push esi
mov eax 0x89
push eax
push [ esp + 0x50 ]
mov esi [ esp + 0x50 ]
call sub_431fad
add esp 0x10
mov ecx eax
mov ecx 0x3
jmp r-xdata
push eax
call sub_43f79e
add esp 0x4
mov edi eax
push ebx
push r--data
lea ebp [ esp + 0x1c ]
push ebp
call sub_432778
add esp 0xc
mov edx ebp
mov ebp ebx
mov ecx esi
push [ ebx * 4 + r--data ]
call sub_447373
add esp 0x4
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
push r--data
push ebx
call sub_442b34
add esp 0x14
cmp eax 0x3
jne r-xdata
xor ebp ebp
mov edx r--data
mov ecx esi
push 0x8c
mov ebx esi
mov esi edi
push esi
push ebp
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x8d
push esi
push ebp
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x8a
push esi
push ebp
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x8b
push esi
push ebp
call sub_44733b
add esp 0xc
mov ecx ebx
xor ebx ebx
mov edx r--data
push 0x8e
push esi
push 0x1
call sub_44733b
add esp 0xc
push eax
call sub_4a65cf
add esp 0x4
push eax
push esi
push 0x8f
push edi
call sub_431fad
add esp 0x10
inc esi
mov eax ebx
cmp esi ebp
jl r-xdata
cmp cl 0x2c
je r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
cmp [ esp ] 0xe0
mov ebx ebp
jl r-xdata
mov [ ebx ] 0x0
inc ebx
inc ebx
jmp r-xdata
push ebx
push r--data
lea esi [ esp + 0x1c ]
push esi
call sub_432778
add esp 0xc
mov ecx [ esp + 0x40 ]
mov eax ebx
mov edx esi
shr eax 0x3
push [ eax + r--data ]
call sub_447373
add esp 0x4
lea ebp [ ebx + 0x20 ]
mov [ esp ] ebx
mov esi ebx
mov ebx eax
mov [ esp + 0x4 ] eax
sub esp 0x4
mov ebx [ esp + 0x44 ]
mov eax r--data
mov edx r--data
mov [ esp ] eax
mov ecx ebx
call sub_447373
add esp 0x4
mov esi eax
push esi
push 0x91
mov ebp edi
push ebp
call sub_43203b
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
xor eax eax
mov edx r--data
mov ecx ebx
push 0x92
push ebp
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x93
push ebp
xor esi esi
inc esi
push esi
call sub_44733b
add esp 0xc
mov eax r--data
mov edx r--data
mov ecx ebx
push eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x81
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push 0x94
push ebp
xor edi edi
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x6d
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x6e
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x58
push ebp
push edi
xor edi edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x59
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x5a
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x6f
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x70
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x71
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x95
push ebp
push edi
call sub_44733b
add esp 0xc
mov eax r--data
mov edx r--data
mov ecx ebx
push eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x96
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push 0x97
push ebp
push esi
xor esi esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x98
push ebp
call sub_4472f9
add esp 0x8
mov edx r--data
mov ecx ebx
push 0x99
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x9a
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x9b
push ebp
call sub_4473a8
add esp 0x8
mov edi r--data
push esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0x9c
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0x9d
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0x9e
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa5
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov edi eax
mov ecx 0x2
sub ecx edi
push ecx
push 0x9f
push ebp
call sub_431ee3
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
mov edi r--data
push eax
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa0
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa1
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa2
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa3
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa4
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa6
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa7
push ebp
call sub_431ee3
add esp 0xc
mov edi r--data
push esi
xor esi esi
push edi
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
mov ecx 0x2
sub ecx eax
push ecx
push 0xa8
push ebp
call sub_431ee3
add esp 0xc
push esi
xor esi esi
push 0xa9
push ebp
call sub_431ee3
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xae
push ebp
xor eax eax
inc eax
push eax
mov edi eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xaf
push ebp
push edi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xb0
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xb1
push ebp
push esi
xor esi esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xb2
push ebp
call sub_44771a
add esp 0x8
mov edx r--data
mov ecx ebx
push 0xb3
push ebp
call sub_44771a
add esp 0x8
mov edx r--data
mov ecx ebx
push 0xb4
push ebp
call sub_44771a
add esp 0x8
mov edx r--data
mov ecx ebx
push 0xb5
push ebp
push edi
call sub_44733b
add esp 0xc
mov eax r--data
mov edx r--data
mov ecx ebx
push eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0x39
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push 0x3a
push ebp
push 0x2580
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x3b
push ebp
push 0x8
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x3c
push ebp
mov eax 0x2
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x3d
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0x3e
push ebp
xor esi esi
inc esi
push esi
call sub_44733b
add esp 0xc
mov eax r--data
mov edx r--data
mov ecx ebx
push eax
call sub_447373
add esp 0x4
mov edi eax
push edi
push 0xb7
push ebp
call sub_43203b
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edx r--data
mov ecx ebx
push 0xaa
push ebp
xor eax eax
push eax
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xab
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xac
push ebp
push esi
call sub_44733b
add esp 0xc
mov edx r--data
mov ecx ebx
push 0xad
push ebp
call sub_4473a8
add esp 0x8
mov ecx [ esp + 0x28 ]
call sub_497c4a
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
sub esp 0x8
mov edi r--data
mov [ esp ] edi
mov [ esp + 0x4 ] 0x0
call sub_483659
add esp 0x8
push eax
push edi
push ebx
call sub_4943f1
add esp 0xc
cmp eax 0x1
jne r-xdata
push 0x0
push 0x9f
push ebp
call sub_431ee3
add esp 0xc
sub_4472f9
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
mov edi edx
push edi
push ecx
call sub_494642
add esp 0x8
mov esi eax
test esi esi
jne r-xdata
push esi
push ebp
push ebx
call sub_43223e
add esp 0xc
push esi
call sub_48f52d
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
push edi
call sub_483609
add esp 0x4
mov esi eax
sub_44733b
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov esi edx
mov edi ecx
push [ esp + 0x14 ]
push esi
call sub_483659
add esp 0x8
push eax
push esi
push edi
call sub_4943f1
add esp 0xc
push eax
push ebp
push ebx
call sub_431ee3
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_447373
push edi
push esi
mov edi [ esp + 0xc ]
mov esi edx
push esi
push ecx
call sub_49433a
add esp 0x8
test eax eax
jne r-xdata
pop esi
pop edi
retn
push esi
call sub_483633
add esp 0x4
test eax eax
je r-xdata
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
pop esi
pop edi
jmp sub_43f79e
sub_4473a8
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
mov esi edx
mov edi ecx
push 0x0
push ebx
push ebp
jmp r-xdata
call sub_431cf7
add esp 0xc
test eax eax
jne r-xdata
push eax
push ebx
push ebp
call sub_432149
add esp 0xc
push 0x0
push ebx
push ebp
mov ecx edi
mov edx esi
push 0x0
call sub_447373
add esp 0x4
mov esi eax
test esi esi
je r-xdata
xor eax eax
mov dl [ esi ]
test dl dl
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
xor eax eax
inc eax
jmp r-xdata
xor ebp ebp
mov ebx esi
pop esi
pop edi
pop ebx
pop ebp
retn
test dl dl
je r-xdata
lea ebx [ ecx + 0x1 ]
cmp dl 0x2c
mov [ eax ] 0x0
cmovne ebx ecx
test edi edi
cmove edi eax
cmp [ esp + 0x18 ] 0x9b
jne r-xdata
cmp dl 0x2c
jne r-xdata
push edi
push esi
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call sub_4320b6
add esp 0x10
push 0x44
push esi
call sub_49ae50
add esp 0x8
test eax eax
je r-xdata
movsx ebx dl
cmp dl 0x3d
cmove ebx ebp
cmp ebx 0x5c
jne r-xdata
mov eax esi
mov ecx ebx
xor edi edi
jmp r-xdata
push esi
call sub_43f79e
add esp 0x4
mov edi eax
push 0x44
push edi
call sub_49ae50
add esp 0x8
mov [ eax ] 0x4c
push r--data
push edi
push 0x9b
push [ esp + 0x20 ]
call sub_4320b6
add esp 0x10
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
inc ecx
movsx ebx [ ecx + 0x1 ]
add ecx 0x2
jmp r-xdata
mov dl [ ebx ]
test dl dl
jne r-xdata
mov [ eax ] bl
inc eax
test ebx ebx
mov dl [ ecx ]
cmove edi eax
sub_4474c8
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov ebp edx
push ecx
call sub_43f79e
add esp 0x4
mov esi eax
lea ecx [ ebp + 0x4 ]
mov [ esp ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] ebp
mov edi esi
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov ebx edi
lea edi [ ebx + 0x1 ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x2c
je r-xdata
inc ebx
inc edi
test al al
jne r-xdata
mov al [ edi ]
test al al
sete cl
cmp al 0x2c
setne dl
inc edi
xor dl cl
jne r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x30 ]
mov eax edi
cmp [ esp ] eax
jge r-xdata
lea ecx [ edi - 0x1 ]
test al al
je r-xdata
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
test eax eax
jle r-xdata
mov edi ecx
mov [ ecx ] 0x0
jmp r-xdata
cmp [ esp ] eax
jl r-xdata
xor edx edx
mov [ esp + 0x4 ] esi
mov esi [ esp + 0x10 ]
xor ebp ebp
cmp [ esp + 0x2c ] 0x0
jle r-xdata
mov ecx [ esp + 0x8 ]
bt ecx eax
jae r-xdata
push 0x168
push r--data
push r--data
mov ebx edi
mov edi ebp
mov ebp edx
call sub_4a509d
mov edx ebp
mov ebp edi
mov edi ebx
mov ebx [ esp + 0x3c ]
add esp 0xc
mov eax [ edi ]
mov ecx [ esi ]
mov ebp [ esp + 0xc ]
mov esi [ esp + 0x4 ]
cmp ecx 0xffffffff
je r-xdata
inc ebp
add esi 0x10
cmp ebp [ esp + 0x2c ]
jl r-xdata
mov eax [ ebp + esi + 0x8 ]
mov [ esp + 0x4 ] edx
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x2c ]
jmp r-xdata
mov edx [ esp + 0x8 ]
xor eax eax
inc eax
shl eax cl
bt edx ecx
jb r-xdata
push ebx
push [ esi - 0x4 ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ebp [ esp + 0xc ]
mov esi [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x14 ] edi
mov eax [ esp ]
mov esi [ ebp + esi + 0xc ]
sar esi 0x1f
and esi eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
bt ecx eax
jae r-xdata
inc edx
cmp edx eax
jne r-xdata
or [ esp + 0x8 ] eax
push ecx
mov esi [ esp + 0x4 ]
push esi
push [ esp + 0x3c ]
push [ esp + 0x3c ]
call sub_431fad
add esp 0x10
inc esi
mov [ esp ] esi
mov esi [ esp + 0x4 ]
mov ebx [ esp + 0x34 ]
cmp eax esi
mov ecx ebx
mov ebx [ esp + 0x30 ]
jle r-xdata
cmp [ esp ] 0x0
mov [ esp + 0x14 ] edi
jle r-xdata
mov esi edx
shl esi 0x4
lea edi [ ebp + esi + 0x4 ]
mov eax [ edi ]
cmp eax 0x20
jl r-xdata
mov edi [ esp + 0x14 ]
push [ edi ]
push esi
push ecx
push ebx
call sub_431fad
add esp 0x10
mov cl [ edi ]
xor eax eax
mov edi [ esp + 0x2c ]
mov ebp [ esp + 0xc ]
mov edx [ esp + 0x4 ]
inc [ esp ]
inc eax
shl eax cl
or [ esp + 0x8 ] eax
mov eax edi
mov edi [ esp ]
mov [ esp + 0x10 ] esi
xor ebp ebp
lea edi [ ebp + esi + 0x8 ]
xor ebp ebp
lea ebp [ edi - 0x1 ]
push ebp
push ecx
push ebx
mov esi ecx
call sub_4319e9
add esp 0xc
push eax
push edi
push esi
push ebx
call sub_431fad
mov ecx esi
mov esi [ esp + 0x20 ]
add esp 0x10
cmp ebp esi
mov edi ebp
jg r-xdata
mov eax [ esp + 0xc ]
mov esi [ eax + esi + 0xc ]
mov eax [ esp ]
shr esi 0x1f
xor esi 0x1
add esi ebp
inc ebp
cmp ebp [ esp ]
jl r-xdata
push ebp
push [ esp + 0x38 ]
push ebx
call sub_4319e9
add esp 0xc
cmp eax [ edi ]
je r-xdata
jmp r-xdata
push 0x17c
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_44771a
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
mov edi edx
push edi
push ecx
call sub_494454
add esp 0x8
mov esi eax
test esi esi
jne r-xdata
push esi
push ebp
push ebx
call sub_4322b9
add esp 0xc
push esi
call sub_48f52d
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
push edi
call sub_4835d4
add esp 0x4
mov esi eax
sub_447761
push ebp
push ebx
push edi
push esi
sub esp 0x80c
mov eax [ rw-data ]
mov ebx [ esp + 0x820 ]
cmp [ esp + 0x824 ] 0x0
mov [ esp + 0x808 ] eax
je r-xdata
push [ ebx + 0x8 ]
call sub_43f9d4
add esp 0x4
push [ ebx + 0x4 ]
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x4 ] eax
jmp r-xdata
mov [ ebx + 0x8 ] 0x0
call sub_494711
mov esi eax
test esi esi
je r-xdata
mov ecx [ esp + 0x808 ]
call sub_497c4a
add esp 0x80c
pop esi
pop edi
pop ebx
pop ebp
retn
xor edi edi
jmp r-xdata
lea ebp [ esp + 0x8 ]
push 0x800
push ebp
push esi
call sub_494765
add esp 0xc
test eax eax
je r-xdata
xor esi esi
lea eax [ edi + 0x1 ]
inc esi
push esi
push eax
push [ ebx + 0x8 ]
call sub_43f8db
add esp 0xc
mov [ ebx + 0x8 ] eax
mov [ eax + edi ] 0x0
mov edi esi
mov ebp [ ebx + 0x8 ]
mov [ ebx ] esi
mov bl [ ebp ]
test bl bl
je r-xdata
xor edi edi
xor ebx ebx
mov [ esp ] 0x0
mov [ esp + 0x4 ] esi
inc edi
push 0x4
push edi
call sub_43f807
add esp 0x8
mov ebp [ esp + 0x820 ]
mov [ ebp + 0x4 ] eax
mov [ eax ] r--data
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
test bl bl
je r-xdata
xor edi edi
inc edi
jmp r-xdata
mov ebp [ esp + 0x820 ]
mov eax [ ebp + 0x8 ]
add esi 0x800
push 0x1
push esi
mov ebp [ esp + 0x828 ]
push [ ebp + 0x8 ]
call sub_43f8db
add esp 0xc
mov [ ebp + 0x8 ] eax
mov [ esp ] esi
jmp r-xdata
mov eax 0x4
push sub_447960
push eax
push esi
push [ ebp + 0x4 ]
call sub_4a7780
add esp 0x10
xor esi esi
inc esi
jmp r-xdata
push r--data
push ebp
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push ebp
call sub_4a7f30
add esp 0x4
lea esi [ ebx + eax + 0x1 ]
lea edi [ ebx + 0x1 ]
cmp [ esp ] esi
jge r-xdata
jmp r-xdata
lea ecx [ esp + 0x8 ]
add eax ebx
mov esi ecx
push esi
push eax
call sub_4a7c00
add esp 0x8
add ebx [ ebp + 0x8 ]
mov ebp esi
push ebx
call sub_4a7f30
add esp 0x4
add edi eax
push 0x800
push ebp
mov esi [ esp + 0xc ]
push esi
call sub_494765
add esp 0xc
test eax eax
mov ebx edi
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
inc ebp
test bl bl
jne r-xdata
mov eax [ esp + 0x820 ]
inc edi
mov [ eax ] edi
jmp r-xdata
push esi
call sub_494826
add esp 0x4
mov ebx [ esp + 0x820 ]
inc edi
test bl bl
jne r-xdata
mov eax [ ebp + 0x4 ]
mov [ eax + esi * 4 ] edi
inc esi
jmp r-xdata
mov bl [ ebp ]
jmp r-xdata
mov bl [ edi ]
jmp r-xdata
mov bl [ ebp ]
test bl bl
jne r-xdata
mov bl [ edi ]
test bl bl
jne r-xdata
sub_447960
push edi
push esi
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov esi [ ecx ]
mov edi [ eax ]
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
xor eax eax
dec eax
jmp r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
pop esi
pop edi
retn
xor eax eax
inc eax
push edi
push esi
call sub_4a7d00
add esp 0x8
jmp r-xdata
sub_4479ac
push ebp
push ebx
push edi
push esi
sub esp 0x170
mov eax [ rw-data ]
mov [ esp + 0x16c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x16c ]
call sub_497c4a
add esp 0x170
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x18c ]
mov esi [ esp + 0x188 ]
cmp [ rw-data ] 0x0
jne r-xdata
lea ebp [ esp + 0x18 ]
push ebx
push esi
push r--data
push ebp
call sub_432778
add esp 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esp + 0x184 ]
xor ebx ebx
push ebx
call [ CreateCompatibleDC@IAT ]
mov esi eax
push ebp
call sub_4a7f30
add esp 0x4
lea ecx [ esp + 0x10 ]
push ecx
push eax
push ebp
push esi
call [ GetTextExtentPoint32A@IAT ]
push esi
call [ DeleteDC@IAT ]
mov esi esp
push esi
push edi
call [ GetWindowRect@IAT ]
lea edi [ esp + 0x10 ]
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov edx 0xf
mov esi 0x10
mov edi [ edi + 0x4 ]
cmp eax edx
cmovle eax esi
sub ecx edi
cmp ecx edx
movzx edx [ rw-data ]
cmovle ecx esi
push ebx
push [ rw-data ]
push ebx
push ebx
push edi
lea esi [ esp + 0x24 ]
push [ esi ]
push ecx
push eax
push 0x80000000
push ebp
push edx
push 0x88
call [ CreateWindowExA@IAT ]
mov ecx 0x4
mov [ rw-data ] eax
push ecx
push eax
call [ ShowWindow@IAT ]
push ebp
push eax
call [ SetWindowTextA@IAT ]
jmp r-xdata
mov edi [ GetSysColor@IAT ]
push 0x18
call edi
mov [ rw-data ] eax
push 0x17
call edi
mov [ rw-data ] eax
lea edi [ esp + 0x1c ]
xor ebp ebp
push 0x150
push ebp
push edi
call sub_49acf0
add esp 0xc
mov eax 0x154
lea ecx [ esp + 0x18 ]
mov [ edi - 0x4 ] eax
push ebp
push ecx
push eax
push 0x29
call [ SystemParametersInfoA@IAT ]
lea eax [ esp + 0xf4 ]
push eax
call [ CreateFontIndirectA@IAT ]
mov [ rw-data ] eax
mov edx [ rw-data ]
lea eax [ esp + 0x18 ]
xor ecx ecx
mov [ eax ] 0x3
mov [ eax + 0x4 ] sub_447b67
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] r--data
push eax
call [ RegisterClassA@IAT ]
mov [ rw-data ] ax
sub_447b67
push ebp
push ebx
push edi
push esi
sub esp 0x60
mov ebx [ esp + 0x78 ]
mov eax [ rw-data ]
mov ebp [ esp + 0x80 ]
mov edi [ esp + 0x74 ]
cmp ebx 0xe
mov [ esp + 0x5c ] eax
jle r-xdata
cmp ebx 0x2
je r-xdata
cmp ebx 0x84
je r-xdata
push [ rw-data ]
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
cmp ebx 0xc
jne r-xdata
xor esi esi
dec esi
jmp r-xdata
cmp ebx 0x14
je r-xdata
push ebp
push [ esp + 0x80 ]
push ebx
push edi
call [ DefWindowProcA@IAT ]
mov esi eax
xor eax eax
push eax
call [ CreateCompatibleDC@IAT ]
mov esi eax
push [ rw-data ]
push esi
call [ SelectObject@IAT ]
push ebp
call sub_4a7f30
add esp 0x4
lea edi [ esp + 0x1c ]
push edi
push eax
push ebp
push esi
call [ GetTextExtentPoint32A@IAT ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov edi [ esp + 0x74 ]
add ecx 0x6
add eax 0x6
push 0x16
push ecx
push eax
mov eax 0x0
push eax
push eax
push eax
push edi
call [ SetWindowPos@IAT ]
xor eax eax
push eax
push eax
push edi
call [ InvalidateRect@IAT ]
push esi
call [ DeleteDC@IAT ]
jmp r-xdata
mov ecx [ esp + 0x5c ]
call sub_497c4a
mov eax esi
add esp 0x60
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
xor esi esi
inc esi
jmp r-xdata
cmp ebx 0xf
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
push edi
call [ BeginPaint@IAT ]
mov ebx [ SelectObject@IAT ]
mov esi eax
push [ rw-data ]
push esi
call ebx
push 0x7
call [ GetStockObject@IAT ]
push eax
push esi
call ebx
push [ rw-data ]
call [ CreateSolidBrush@IAT ]
mov [ esp + 0x8 ] eax
push eax
push esi
call ebx
mov [ esp + 0x4 ] eax
mov eax edi
lea edi [ esp + 0xc ]
push edi
push eax
mov ebx eax
call [ GetClientRect@IAT ]
push [ edi + 0xc ]
push [ edi + 0x8 ]
push [ edi + 0x4 ]
push [ edi ]
push esi
call [ Rectangle@IAT ]
push ebx
call [ GetWindowTextLengthA@IAT ]
mov [ esp ] eax
lea ebx [ eax + 0x1 ]
xor eax eax
inc eax
push eax
push ebx
call sub_43f807
add esp 0x8
mov ebp eax
push ebx
push ebp
mov ebx [ esp + 0x7c ]
push ebx
call [ GetWindowTextA@IAT ]
push [ rw-data ]
push esi
call [ SetTextColor@IAT ]
push [ rw-data ]
push esi
call [ SetBkColor@IAT ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
add ecx 0x3
add eax 0x3
push [ esp ]
push ebp
push ecx
push eax
push esi
call [ TextOutA@IAT ]
push ebp
call sub_43f9d4
add esp 0x4
push [ esp + 0x4 ]
push esi
call [ SelectObject@IAT ]
push [ esp + 0x8 ]
call [ DeleteObject@IAT ]
lea eax [ esp + 0x1c ]
push eax
push ebx
call [ EndPaint@IAT ]
xor esi esi
jmp r-xdata
sub_447d56
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov [ rw-data ] esi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DestroyWindow@IAT ]
mov [ rw-data ] 0x0
sub_447d84
push edi
push esi
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov esi [ esp + 0xc ]
cmp ecx 0x2
je r-xdata
push eax
push r--data
push esi
cmp ecx 0x1
je r-xdata
pop esi
pop edi
retn
push eax
push r--data
push esi
call sub_447e12
add esp 0xc
test [ rw-data ] 0x5
je r-xdata
test ecx ecx
jne r-xdata
mov edx r--data
mov ecx esi
push 0x2d
call sub_44a29f
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
test eax eax
je r-xdata
push eax
push r--data
push esi
jmp r-xdata
test edi edi
je r-xdata
push eax
push r--data
push esi
call sub_447e12
add esp 0xc
call sub_447e12
add esp 0xc
jmp r-xdata
push edi
push r--data
push esi
jmp r-xdata
sub_447e12
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
push edx
push eax
call sub_43fb4c
add esp 0x8
mov esi eax
push esi
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
retn
sub_447e63
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov ebx [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
push 0x0
push 0xad
push [ ebx + 0x248 ]
call sub_431cf7
add esp 0xc
test eax eax
je r-xdata
xor esi esi
dec esi
jmp r-xdata
mov edi [ esp + 0x30 ]
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
push 0x20
push edi
call sub_49af80
add esp 0x8
test eax eax
lea esi [ eax + 0x1 ]
cmove esi edi
push esi
call sub_4a7f30
add esp 0x4
cmp eax 0x2f
je r-xdata
xor esi esi
mov ecx [ esp + 0x34 ]
lea esi [ esp + 0x10 ]
push esi
push eax
call [ ecx + 0xc ]
add esp 0x8
mov esi [ esi ]
mov [ esp + 0x4 ] eax
mov ecx 0x55555556
lea eax [ esi + 0x2 ]
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 4 ]
mov [ esp + 0xc ] eax
lea eax [ eax * 4 + 0x1 ]
mov [ esp + 0x8 ] ecx
push 0x1
push eax
call sub_43f807
add esp 0x8
test esi esi
mov [ esp ] eax
jle r-xdata
cmp [ esi + 0x2 ] 0x3a
je r-xdata
push 0xfc8
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edi [ esp ]
mov eax [ esp + 0x8 ]
mov [ edi + eax ] 0x0
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
push edi
push 0xad
mov eax [ esp + 0x34 ]
push [ eax + 0x248 ]
call sub_431b26
add esp 0xc
mov esi eax
push edi
call sub_43f9d4
add esp 0x4
test esi esi
je r-xdata
mov esi [ esp + 0x4 ]
mov edi [ esp ]
xor ebx ebx
xor ebp ebp
push r--data
push esi
call sub_4a8220
add esp 0x8
cmp [ esi + eax ] 0x0
je r-xdata
push 0xfc9
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor esi esi
inc esi
jmp r-xdata
mov eax [ esp + 0x10 ]
add eax ebx
push edi
push eax
push esi
call sub_43fdae
add esp 0xc
inc ebp
add edi 0x4
add esi 0x3
add ebx 0xfffffffd
cmp ebp [ esp + 0xc ]
jl r-xdata
push esi
push 0xad
push [ ebx + 0x248 ]
call sub_431b26
add esp 0xc
test eax eax
jne r-xdata
push 0xfca
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_44804f
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov esi ecx
mov edi [ esi ]
cmp [ esi + 0x18 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
push 0x13db
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ edi + 0x198 ] 0x2
jne r-xdata
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esi + 0x18 ] 0x0
cmp [ edi + 0x198 ] 0x1
jne r-xdata
lea eax [ esi + 0x20 ]
push eax
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
mov ecx 0x60
call sub_448c44
mov ebp [ esi + 0x4 ]
mov ebx eax
mov ecx ebp
mov [ esp ] ebp
shr ebp 0x10
shr ecx 0x18
mov [ esp + 0x4 ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov edx [ esp ]
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov ecx edi
mov edx ebx
call sub_448c97
or [ esi + 0x14 ] 0x1
mov ecx esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_448263
push 0x0
push [ esi + 0x4 ]
push 0x1
push 0x18
push edi
call sub_448d90
add esp 0x14
or [ esi + 0x14 ] 0x1
jmp r-xdata
sub_44812b
push edi
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax + 0x144 ] 0x4
jne r-xdata
push [ esp + 0x10 ]
push r--data
call sub_43f758
add esp 0x8
mov edi eax
mov ecx esi
mov edx edi
call sub_448174
push edi
call sub_43f9d4
add esp 0x4
mov [ esi + 0x18 ] 0x0
mov ecx esi
pop esi
pop edi
jmp sub_448263
pop esi
pop edi
retn
sub_448174
push ebx
push edi
push esi
mov esi ecx
mov edi edx
mov eax [ esi + 0xc ]
cmp eax 0x3
ja r-xdata
mov [ esi + 0xc ] 0x5
jmp r-xdata
mov ebx [ esi ]
jmp [ eax * 4 + jump_table_41012c ]
pop esi
pop edi
pop ebx
retn
mov [ ebx + 0x128 ] 0x0
push [ ebx + 0x110 ]
call sub_489bb6
add esp 0x4
sub_4481b0
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
push eax
call sub_49719c
add esp 0x4
mov eax r--data
jmp r-xdata
push 0x2035
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x4c ]
test edi edi
mov [ esi + 0xc ] 0x5
je r-xdata
push eax
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
push edi
push eax
push r--data
push ebx
call sub_447e12
add esp 0x10
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_4481e1
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
push eax
call sub_43ff54
add esp 0x4
mov eax r--data
jmp r-xdata
push eax
call sub_492921
add esp 0x4
test edi edi
mov [ esi + 0xc ] 0x5
je r-xdata
push eax
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
push edi
push eax
push r--data
push ebx
call sub_447e12
add esp 0x10
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_448204
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
push eax
call sub_440e52
add esp 0x4
mov eax r--data
test edi edi
mov [ esi + 0xc ] 0x5
je r-xdata
push 0x2040
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x4c ]
push eax
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
push edi
push eax
push r--data
push ebx
call sub_447e12
add esp 0x10
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_448263
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov esi ecx
mov edi [ esi ]
cmp [ edi + 0x198 ] 0x2
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push 0x2067
push r--data
push r--data
call sub_4a509d
add esp 0xc
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x14 ]
mov edx 0x5
mov ecx eax
and ecx 0x5
cmp ecx edx
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
cmp [ esi + 0xc ] 0x5
jne r-xdata
and eax 0xa
mov ecx 0xa
cmp eax ecx
jne r-xdata
mov ecx eax
and ecx 0x2
jne r-xdata
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov ecx 0x61
call sub_448c44
mov ebp [ esi + 0x4 ]
mov ebx eax
mov ecx ebp
mov [ esp ] ebp
shr ebp 0x10
shr ecx 0x18
mov [ esp + 0x4 ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov edx [ esp ]
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov ecx edi
mov edx ebx
call sub_448c97
mov eax [ esi + 0x14 ]
or eax 0x3
mov [ esi + 0x14 ] eax
mov ecx esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_448b7d
push 0x2082
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_44837a
push edi
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax + 0x198 ] 0x2
jne r-xdata
xor edi edi
inc edi
push 0x0
push ecx
push edx
push 0x3
push ecx
push edi
push [ esi + 0x4 ]
push edi
push 0x17
push eax
call sub_448d90
add esp 0x28
xor eax eax
pop esi
pop edi
retn
lea eax [ esi + 0x20 ]
push ecx
push edx
push eax
call sub_43ff80
add esp 0xc
mov ecx esi
pop esi
pop edi
jmp sub_44a44c
sub_4483dc
push ebp
push ebx
push edi
push esi
mov edi ecx
mov ebx edx
mov ebp 0x8000
mov esi [ edi ]
cmp [ esi + 0x198 ] 0x1
je r-xdata
cmp ebp ebx
jl r-xdata
push 0xa9
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov ebp [ edi + 0x38 ]
cmp [ esi + 0xec ] 0x0
jne r-xdata
xor edx edx
mov [ edi + 0x1c ] 0x0
mov ecx esi
dec edx
pop esi
pop edi
pop ebx
pop ebp
jmp sub_44a5f9
mov ecx edi
call sub_448849
cmp [ esi + 0xf4 ] 0x0
je r-xdata
xor ebp ebp
jmp r-xdata
mov edx ebp
sub edx ebx
jle r-xdata
sub_448456
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x20 ]
mov ebp [ esp + 0x18 ]
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor ebx ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x14 ] edi
mov edi [ esp + 0x14 ]
push ebp
call sub_43f79e
add esp 0x4
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x1c ]
mov [ esi ] eax
mov [ esi + 0x10 ] ebx
mov eax [ edi + 0x13c ]
test eax eax
jne r-xdata
push esi
push eax
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
cmp [ edi + 0x198 ] 0x2
je r-xdata
xor eax eax
inc eax
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
xor eax eax
jmp r-xdata
push sub_4484ff
call sub_47dc24
add esp 0x4
mov [ edi + 0x13c ] eax
push 0x1488
push r--data
push r--data
call sub_4a509d
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4484ff
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push [ edi + 0x8 ]
push [ esi + 0x8 ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
cmp [ esi ] eax
jbe r-xdata
sar eax 0x1f
or eax 0x1
jmp r-xdata
sbb eax eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_448550
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
mov esi ecx
mov edi edx
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x1c ]
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebp
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x0
mov ecx [ esi + 0x674 ]
test ecx ecx
je r-xdata
mov [ esi + 0x670 ] eax
mov ecx [ eax ]
test ecx ecx
jle r-xdata
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
jle r-xdata
mov ecx [ esi + ecx * 4 + 0x270 ]
mov [ esi + 0x678 ] ecx
mov ecx [ eax ]
mov [ esi + ecx * 4 + 0x270 ] sub_44a306
mov [ esi + 0x674 ] eax
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esi + 0x670 ]
mov ecx [ ecx + 0x4 ]
mov ecx [ esi + ecx * 4 + 0x270 ]
mov [ esi + 0x67c ] ecx
mov ecx [ eax + 0x4 ]
mov [ esi + ecx * 4 + 0x270 ] sub_44a306
sub_448605
mov eax [ esp + 0x4 ]
push 0x1d
push [ eax + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
xor eax eax
retn
call sub_4928fc
mov ecx eax
xor eax eax
test ecx ecx
setne al
retn
sub_44862f
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
je r-xdata
push ecx
push r--data
push eax
call sub_447e12
add esp 0xc
retn
push edx
push ecx
push r--data
push eax
call sub_447e12
add esp 0x10
retn
sub_44867f
push esi
mov esi ecx
cmp [ esi + 0x198 ] 0x2
jne r-xdata
pop esi
retn
push 0x2d
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x124 ]
test eax eax
je r-xdata
push eax
call sub_47dc82
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esi + 0xf4 ]
test eax eax
je r-xdata
xor eax eax
mov edx r--data
mov ecx esi
push 0x1
push eax
push eax
call sub_44a668
add esp 0xc
jmp r-xdata
push eax
call sub_46ed70
add esp 0x4
test eax eax
jg r-xdata
sub_4486e6
push ebx
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x24 ]
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
push edx
push eax
call sub_43fb4c
add esp 0x8
mov esi eax
test ebx ebx
je r-xdata
push esi
push r--data
push edi
call sub_447e12
add esp 0xc
push esi
push ebx
push r--data
push edi
call sub_447e12
add esp 0x10
jmp r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
retn
sub_448753
push edi
push esi
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov eax [ esp + 0xc ]
push [ esp + 0x10 ]
push [ eax + 0x194 ]
call sub_496724
add esp 0x8
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] esi
pop esi
pop edi
retn
sub_44879f
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov ebp 0x4
mov eax [ esp + 0x38 ]
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
mov [ ebx + 0xc ] ebp
mov ebp [ esp + 0x18 ]
mov [ ebx + 0x4c ] ebp
push eax
push ecx
push edx
push edi
push esi
push [ esp + 0x38 ]
push [ esp + 0x38 ]
push [ ebx + 0x34 ]
push [ ebx + 0x30 ]
push [ ebx + 0x2c ]
push [ ebx + 0x4 ]
push [ ebx + 0x8 ]
push [ esp + 0x4c ]
push ebp
call sub_46e371
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4487f8
push edi
push esi
mov esi [ esp + 0xc ]
mov [ esi + 0x50 ] 0x0
mov edi [ esi ]
push 0xa9
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
mov edx 0x4000
test eax eax
je r-xdata
mov ecx esi
pop esi
pop edi
jmp sub_448849
cmp [ edi + 0xec ] 0x0
jne r-xdata
cmp [ edi + 0xf4 ] 0x0
mov eax 0x7fffffff
mov edx 0x4000
cmove edx eax
sub_448849
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi ecx
test [ esi + 0x14 ] 0x6
je r-xdata
mov edi [ esi ]
cmp [ esi + 0xc ] 0x1
jne r-xdata
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi + 0x50 ]
mov ecx 0x4000
mov ebp edx
test ah 0x1
cmovne ebp ecx
cmp edx ecx
cmovbe ebp edx
mov ecx ebp
shr ecx 0x1f
add ecx ebp
sar ecx 0x1
cmp ecx [ esi + 0x34 ]
jl r-xdata
cmp [ esi + 0x50 ] 0x0
jne r-xdata
test ah 0x4
mov [ esp + 0x8 ] edi
jne r-xdata
lea eax [ esi + 0x48 ]
xor ecx ecx
mov [ esi + 0x3c ] ebp
cmp ebp [ esi + 0x38 ]
jne r-xdata
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov ecx ebp
mov edx r--data
sub ecx [ esi + 0x34 ]
mov [ eax ] ecx
mov ecx esi
push eax
push sub_456488
call sub_454cd8
add esp 0x8
mov ecx edi
mov edx eax
call sub_448c97
cmp [ esi + 0x48 ] 0x2
je r-xdata
mov ecx 0x5d
call sub_448c44
mov edi [ esi + 0x4 ]
mov ebx eax
mov ecx edi
mov [ esp ] edi
shr edi 0x10
shr ecx 0x18
mov [ esp + 0x4 ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov edi ebp
mov [ ecx + eax - 0x3 ] dl
mov edx [ esp ]
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
sub edi [ esi + 0x34 ]
mov ecx edi
mov [ esp ] edi
shr edi 0x10
shr ecx 0x18
mov [ esp + 0x4 ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov edx [ esp ]
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov edx ebx
mov ecx [ esp + 0x8 ]
call sub_448c97
mov [ esi + 0x34 ] ebp
jmp r-xdata
xor ecx ecx
lea eax [ esi + 0x48 ]
inc ecx
jmp r-xdata
mov [ eax ] ecx
sub_448985
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
xor ebp ebp
inc ebp
push 0x5c
push ebp
call sub_43f807
add esp 0x8
mov esi eax
mov ecx esi
mov [ esi ] ebx
call sub_4489be
mov [ esi + 0x10 ] ebp
mov [ esi + 0xc ] 0x3
mov [ esi + 0x4c ] edi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4489be
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x8 ] eax
mov ebx [ esi ]
push [ ebx + 0x124 ]
call sub_47dc82
add esp 0x4
mov edi eax
mov ebp 0x100
lea eax [ edi + 0x1 ]
cmp eax 0x2
jb r-xdata
lea eax [ esp + 0x4 ]
mov [ eax ] ebp
push sub_448b62
push eax
push [ ebx + 0x124 ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
xor ebp ebp
mov [ esp ] esi
dec ebp
xor eax eax
mov [ esi + 0x8 ] ebp
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
cmp [ ebx + 0x198 ] 0x2
jne r-xdata
push 0x4a9
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi ebp
lea ebp [ edi + esi ]
shr ebp 0x1
push ebp
push [ ebx + 0x124 ]
call sub_47e33c
add esp 0x8
lea ecx [ ebp + 0x100 ]
cmp [ eax + 0x8 ] ecx
cmovne edi ebp
cmovne ebp esi
mov eax edi
sub eax ebp
cmp eax 0x1
ja r-xdata
mov esi [ esp ]
add ebp 0x101
push esi
push [ ebx + 0x124 ]
call sub_47dcb3
add esp 0x8
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
push 0xa9
push [ ebx + 0x248 ]
call sub_43194f
add esp 0x8
mov ecx 0x4000
test eax eax
je r-xdata
lea eax [ esi + 0x20 ]
mov [ esi + 0x3c ] ecx
mov [ esi + 0x38 ] ecx
mov [ esi + 0x34 ] ecx
mov [ esi + 0x40 ] 0x0
mov [ esi + 0x48 ] 0x2
push eax
call sub_43ff45
add esp 0x4
cmp [ ebx + 0xec ] 0x0
jne r-xdata
cmp [ ebx + 0xf4 ] 0x0
mov eax 0x7fffffff
mov ecx 0x4000
cmove ecx eax
sub_448af4
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
push 0x5c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov ecx esi
mov [ esi ] ebx
call sub_4489be
mov [ esi + 0xc ] 0x4
mov [ esi + 0x4c ] edi
mov eax [ esi + 0x8 ]
pop esi
pop edi
pop ebx
retn
sub_448b27
push eax
mov ecx [ rw-data ]
mov eax [ esp + 0x8 ]
mov [ esp ] ecx
lea ecx [ esp + 0xc ]
push sub_448b62
push ecx
push [ eax + 0x124 ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp ]
call sub_497c4a
pop eax
retn
mov ecx eax
call sub_448b7d
sub_448b7d
push edi
push esi
mov edi ecx
xor edx edx
mov esi [ edi ]
call sub_448174
push edi
push [ esi + 0x124 ]
call sub_47eb51
add esp 0x8
cmp [ esi + 0x198 ] 0x2
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov ecx esi
pop esi
pop edi
jmp sub_44867f
lea eax [ edi + 0x20 ]
push eax
call sub_43ff54
add esp 0x4
cmp [ edi + 0x40 ] 0x0
je r-xdata
push 0x2057
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_448bdd
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov [ esp ] eax
mov ecx [ esp + 0x24 ]
mov ebp [ esp + 0x2c ]
mov esi [ esp + 0x30 ]
mov ebx [ esp + 0x20 ]
call sub_448c44
mov edi eax
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] esi
mov ecx edi
mov edx [ edi ]
add edx ebp
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi + 0x10 ]
add eax [ edi ]
sub eax ebp
push ebp
push [ esp + 0x4 ]
push eax
call sub_49a1f0
add esp 0xc
mov ecx [ esp + 0x4 ]
mov edx edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_448c97
sub_448c44
push ebx
push edi
push esi
mov ebx ecx
push 0x2c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor edi edi
mov edx 0x6
mov ecx esi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi ] 0x6
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x1 ] bl
mov eax [ esi + 0x10 ]
add eax [ esi ]
mov [ esi + 0x14 ] eax
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_448c97
cmp [ ecx + 0x164 ] 0x0
je sub_44a75f
jmp r-xdata
push edi
push esi
mov edi ecx
mov esi edx
cmp [ edi + 0x164 ] 0x0
jne r-xdata
mov ecx [ edi + 0x15c ]
cmp ecx [ edi + 0x160 ]
jge r-xdata
push 0x9c1
push r--data
push r--data
call sub_4a509d
add esp 0xc
add ecx 0x20
mov [ edi + 0x160 ] ecx
push 0x4
push ecx
push [ edi + 0x158 ]
call sub_43f8db
add esp 0xc
mov [ edi + 0x158 ] eax
mov ecx [ edi + 0x15c ]
mov eax [ edi + 0x158 ]
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ edi + 0x15c ] edx
mov [ eax + ecx * 4 ] esi
pop esi
pop edi
retn
sub_448ca9
push ebp
push ebx
push edi
push esi
push eax
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
mov esi [ edi ]
push [ esp + 0x24 ]
mov ebp eax
push eax
push ebx
push r--data
push esi
call sub_447e12
add esp 0x14
cmp [ esi + 0x198 ] 0x1
jne r-xdata
mov edx r--data
mov ecx edi
call sub_448dc8
mov edi eax
push ebx
call sub_43f6f7
add esp 0x4
mov ebx eax
mov ecx edi
mov edx ebx
call sub_448e7b
push ebx
call sub_43f9d4
add esp 0x4
mov ebx ebp
mov ecx edi
shr ebp 0x10
mov eax ebx
shr eax 0x18
mov [ esp ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov edx r--data
mov ecx edi
call sub_448e7b
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] 0x0
mov ecx esi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
jmp sub_448c97
xor eax eax
inc eax
push 0x0
push ebp
push eax
push ebx
push 0x4
push [ edi + 0x8 ]
push eax
push 0x1d
push esi
call sub_448d90
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
sub_448d90
push esi
sub esp 0x8
mov eax [ rw-data ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov [ esp ] edx
call sub_453669
mov ecx esi
mov edx eax
call sub_4564ae
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
retn
sub_448dc8
push ebp
push ebx
push edi
push esi
push eax
mov ebp ecx
mov ecx 0x5a
mov ebx edx
call sub_448c44
mov esi eax
mov edx ebx
mov ecx esi
call sub_448e7b
mov ebx [ ebp + 0x8 ]
mov ecx esi
mov eax ebx
mov edi ebx
shr eax 0x18
shr edi 0x10
mov [ esp ] eax
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ebx [ ebp + 0x34 ]
mov edx [ esi ]
mov ecx ebx
mov eax ebx
add edx 0x4
shr ecx 0x10
shr eax 0x18
mov [ esi ] edx
mov ebp ecx
mov ecx esi
mov edi eax
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx esi
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x4 ] __dos_header
mov eax esi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_448e7b
push edi
push esi
mov edi ecx
mov esi edx
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ edi ]
mov [ edi + 0x18 ] eax
push esi
call sub_4a7f30
add esp 0x4
mov ecx edi
mov edx esi
push eax
call sub_44a58f
add esp 0x4
pop esi
pop edi
retn
sub_448eb8
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov ebx [ esp + 0x20 ]
mov ebp [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov [ esp + 0x8 ] eax
xor eax eax
inc eax
push 0x6d4
push eax
call sub_43f807
add esp 0x8
mov esi eax
push edi
call sub_43191d
add esp 0x4
mov [ esi + 0x248 ] eax
push 0x7c
push eax
call sub_43194f
add esp 0x8
xor edi edi
mov [ esi + 0x24c ] eax
mov [ esi + 0x198 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0x9c ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0x130 ] 0xffffffff
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
mov [ esi + 0x144 ] edi
mov [ esi + 0x148 ] edi
mov [ esi + 0x14c ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x16c ] edi
mov [ esi + 0x168 ] edi
mov [ esi + 0x174 ] edi
mov [ esi + 0x170 ] edi
mov [ esi + 0x188 ] edi
mov [ esi + 0x184 ] edi
mov [ esi + 0x190 ] edi
mov [ esi + 0x18c ] edi
push sub_49697d
call sub_47dc24
add esp 0x4
mov [ esi + 0x194 ] eax
lea eax [ esi + 0x264 ]
mov [ esi + 0x3c ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x674 ] edi
mov [ esi + 0x670 ] edi
mov [ esi + 0x6a0 ] edi
mov [ esi + 0x15c ] edi
mov [ esi + 0x158 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x160 ] edi
mov [ esi + 0x1a8 ] edi
mov [ esi + 0x1a4 ] edi
mov [ esi + 0x1b0 ] edi
mov [ esi + 0x1ac ] edi
mov [ esi + 0x1b8 ] edi
mov [ esi + 0x1b4 ] edi
mov [ esi + 0x1c0 ] edi
mov [ esi + 0x1bc ] edi
mov [ esi + 0x1c8 ] edi
mov [ esi + 0x1c4 ] edi
mov [ esi + 0x1d4 ] edi
mov [ esi + 0x1d0 ] edi
mov [ esi + 0x1cc ] edi
push eax
call sub_43ff45
add esp 0x4
lea eax [ esi + 0xf4 ]
mov [ esi + 0x260 ] edi
mov [ esi + 0x250 ] edi
mov [ esi + 0x150 ] edi
mov [ esi + 0x154 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0x4c ] edi
mov [ esp ] eax
mov [ esi + 0xf4 ] edi
mov [ esi + 0xf0 ] edi
mov [ esi + 0x10c ] edi
mov [ esi + 0x6ac ] edi
mov [ esi + 0x6c8 ] edi
mov [ esi + 0x6cc ] edi
mov [ ebp ] esi
mov [ esi + 0x110 ] ebx
push 0x73
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
mov [ esi + 0x11c ] eax
mov eax 0x74
push eax
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
mov [ esi + 0x120 ] eax
mov [ esi + 0x124 ] edi
mov [ esi + 0x13c ] edi
mov [ esi + 0x140 ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x104 ] edi
mov [ esi + 0x19c ] edi
mov [ esi + 0x1a0 ] edi
mov [ esi + 0x174 ] edi
mov [ esi + 0x23c ] edi
mov [ esi + 0x238 ] edi
mov [ esi + 0x684 ] edi
mov [ esi + 0x680 ] edi
mov [ esi + 0x68c ] edi
mov [ esi + 0x688 ] edi
push 0x1b
push [ esi + 0x248 ]
call sub_431a8c
add esp 0x8
push eax
call sub_43f4f8
add esp 0x4
mov [ esi + 0x690 ] eax
mov [ esi + 0x694 ] edi
mov [ esi + 0x6d0 ] edi
mov [ esi + 0x6a8 ] edi
call sub_469ae5
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
lea ebx [ esp + 0x4 ]
lea eax [ esi + 0xfc ]
lea ebp [ esi + 0xf8 ]
push ebx
push eax
push ebp
push [ esi + 0x248 ]
call sub_456693
add esp 0x10
xor eax eax
mov [ esi ] r--data
mov [ esi + 0xf4 ] edi
inc eax
mov [ esi + 0xf0 ] eax
push [ esp ]
push esi
push [ esi + 0x248 ]
push [ esi + 0xfc ]
push [ esi + 0xf8 ]
call sub_46efc9
add esp 0x14
test eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xf0 ] edi
je r-xdata
mov [ esi + 0x244 ] sub_456a8b
push 0x3
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
push r--data
push [ esi + 0x110 ]
push eax
push [ esi + 0x248 ]
mov eax [ esp + 0x44 ]
mov edi eax
push edi
push [ esp + 0x44 ]
push [ esp + 0x44 ]
call sub_441360
add esp 0x1c
mov ebp eax
push ebp
call sub_491f41
add esp 0x4
mov ebx eax
mov eax edi
test ebx ebx
je r-xdata
mov [ esi + 0xec ] 0x1
mov [ esi + 0x244 ] sub_45673b
mov [ esi + 0x6a4 ] 0x0
push [ esp + 0x2c ]
call sub_43f79e
add esp 0x4
mov ecx [ esp + 0x34 ]
mov edi ecx
mov [ ecx ] eax
mov edi [ esp + 0x3c ]
mov ebx eax
push [ ebx ]
call sub_43f79e
add esp 0x4
mov [ esi + 0x6a4 ] eax
push [ esi + 0x248 ]
push esi
push edi
mov edi ebx
push [ esp + 0x44 ]
push 0x1
push 0x0
push [ esp + 0x48 ]
push [ edi ]
push ebp
call sub_441484
add esp 0x24
mov [ esi + 0x10 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
mov ebx eax
test ebx ebx
je r-xdata
push ebp
call sub_490c67
jmp r-xdata
mov [ esi + 0x198 ] 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
push 0x21
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x0
push [ esi + 0x110 ]
call sub_48a878
add esp 0x4
call sub_469c06
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
push 0xe9f
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ esi + 0xec ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
push [ edi ]
call sub_43f9d4
add esp 0x4
push [ esp + 0x4 ]
call sub_43f79e
add esp 0x4
mov [ edi ] eax
mov [ esi + 0x198 ] 0x2
mov edx r--data
mov ecx esi
push 0x0
call sub_456f2e
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax ebx
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_449397
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x54 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov eax [ esi + 0x6c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x60 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x64 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x70 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x74 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov eax [ esi + 0x94 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xe8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8c ]
test ecx ecx
je r-xdata
push eax
call sub_4708be
push eax
call [ ecx + 0xc ]
jmp r-xdata
push [ esi + 0xf8 ]
jmp r-xdata
push eax
call sub_4615d8
add esp 0x4
push eax
call sub_471204
push eax
call [ ecx + 0x18 ]
jmp r-xdata
add esp 0x4
call sub_43f9d4
add esp 0x4
mov edx [ esi + 0x15c ]
mov eax [ esi + 0x158 ]
lea ecx [ edx - 0x1 ]
test edx edx
mov [ esi + 0x15c ] ecx
jg r-xdata
add esp 0x4
mov edi [ eax + ecx * 4 ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
push eax
jmp r-xdata
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x670 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x10 ]
mov [ esi + 0x670 ] ecx
push eax
xor eax eax
mov [ esi + 0x674 ] eax
mov [ esi + 0x670 ] eax
mov eax [ esi + 0x124 ]
test eax eax
je r-xdata
mov eax [ esi + 0xf4 ]
test eax eax
je r-xdata
push 0x0
push eax
jmp r-xdata
mov eax [ esi + 0x13c ]
test eax eax
je r-xdata
push eax
call sub_46de34
add esp 0x4
call sub_47e541
add esp 0x8
mov edi eax
test edi edi
jne r-xdata
push [ esi + 0x168 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x18c ]
test eax eax
je r-xdata
push 0x0
push eax
jmp r-xdata
xor edx edx
mov ecx edi
call sub_448174
cmp [ esi + 0x198 ] 0x2
jne r-xdata
push [ esi + 0x124 ]
call sub_47dc40
add esp 0x4
mov [ esi + 0x124 ] 0x0
push 0x0
push [ esi + 0x194 ]
jmp r-xdata
push eax
call sub_496d20
add esp 0x4
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x124 ]
lea eax [ edi + 0x20 ]
mov [ esp ] eax
mov ebp [ edi + 0x40 ]
test ebp ebp
je r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
mov ecx eax
call sub_4561a2
push 0x0
push [ esi + 0x13c ]
push [ esi + 0x13c ]
call sub_47dc40
add esp 0x4
mov [ esi + 0x13c ] 0x0
push [ esp ]
call sub_43ff54
add esp 0x4
push [ ebp + 0x4 ]
push 0x0
push edi
call [ ebp ]
add esp 0xc
mov ebx [ ebp + 0x8 ]
push ebp
call sub_43f9d4
add esp 0x4
test ebx ebx
mov ebp ebx
jne r-xdata
push eax
call sub_4968fd
add esp 0x4
push 0x0
push [ esi + 0x194 ]
push [ esi + 0x194 ]
call sub_47dc40
add esp 0x4
push [ esi + 0x1c4 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x1c8 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x1cc ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x1d0 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x6a4 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0xa0 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x6ac ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
push eax
call sub_45f43e
add esp 0x4
mov [ esi + 0x5c ] 0x0
push esi
call sub_47db90
add esp 0x4
mov eax [ esi + 0x680 ]
test eax eax
je r-xdata
xor edx edx
mov ecx esi
inc edx
call sub_45141c
lea eax [ esi + 0x264 ]
push eax
call sub_43ff54
add esp 0x4
push [ esi + 0x250 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x248 ]
call sub_431816
add esp 0x4
mov eax [ esi + 0x6d0 ]
test eax eax
je r-xdata
push eax
call sub_4405e1
add esp 0x4
mov eax [ esi + 0x6a8 ]
test eax eax
je r-xdata
push eax
call sub_492921
add esp 0x4
push esi
call sub_43f9d4
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_469c06
push eax
call sub_48d9a6
add esp 0x4
sub_449714
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov edi [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
push edi
push [ ebp + 0x248 ]
push [ ebp + 0x680 ]
call sub_4405a1
add esp 0xc
cmp [ ebp + 0x140 ] 0x0
je r-xdata
mov esi 0x1a
push esi
push edi
call sub_43194f
add esp 0x8
mov ebx eax
push esi
push [ ebp + 0x248 ]
call sub_43194f
add esp 0x8
xor edx edx
test ebx ebx
je r-xdata
mov ecx ebp
mov edx edi
call sub_454dd0
mov [ esp ] edx
mov esi [ ebp + 0x690 ]
push 0x1b
push [ ebp + 0x248 ]
call sub_431a8c
add esp 0x8
push eax
call sub_43f4f8
add esp 0x4
cmp esi eax
mov [ ebp + 0x690 ] eax
je r-xdata
cmp eax ebx
je r-xdata
mov edi [ esp + 0x24 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x69c ]
imul edi ebx 0xea60
call [ GetTickCount@IAT ]
mov ecx eax
mov edx r--data
sub ecx [ ebp + 0x69c ]
cmp ecx edi
ja r-xdata
push edi
mov ecx 0x1f
push ecx
push eax
call sub_4319e9
add esp 0xc
mov esi eax
push edi
mov eax 0x1f
push eax
push [ esp + 0x2c ]
call sub_4319e9
add esp 0xc
cmp esi eax
mov eax 0x1
cmovne ebx eax
mov eax r--data
cmovne ebp eax
mov eax [ esp + 0x20 ]
inc edi
cmp edi 0x7
mov eax [ eax + 0x248 ]
jne r-xdata
mov esi 0x22
mov [ esp ] ebx
push esi
push eax
call sub_43194f
add esp 0x8
mov ebx eax
push esi
mov edi [ esp + 0x28 ]
push edi
call sub_43194f
add esp 0x8
mov ecx [ esp + 0x20 ]
mov [ esp + 0x8 ] ebx
cmp ebx eax
mov ebx r--data
mov [ esp + 0x4 ] eax
cmove ebx ebp
mov esi ecx
push [ esi + 0x248 ]
call sub_431816
add esp 0x4
push edi
call sub_43191d
add esp 0x4
mov [ esi + 0x248 ] eax
push 0x7c
push eax
call sub_43194f
add esp 0x8
test ebx ebx
mov ecx esi
mov [ esi + 0x24c ] eax
je r-xdata
cmp [ ebp + 0x688 ] eax
mov edi [ esp + 0x24 ]
ja r-xdata
add esi edi
sub esi eax
push ebp
push sub_44e4a7
push esi
call sub_47d9f4
add esp 0xc
xor edx edx
mov [ ebp + 0x698 ] eax
add esp 0xc
mov eax [ ecx + 0xec ]
test eax eax
jne r-xdata
mov [ esp ] r--data
jmp r-xdata
cmp [ ebp + 0x684 ] eax
jbe r-xdata
cmp [ ecx + 0x694 ] 0x0
je r-xdata
mov esi 0x17
push esi
push [ ebp + 0x248 ]
call sub_43194f
add esp 0x8
mov ebp eax
push esi
push edi
call sub_43194f
add esp 0x8
xor ebx ebx
cmp ebp eax
mov eax [ esp + 0x20 ]
mov ebp r--data
cmove ebp [ esp ]
setne bl
xor edi edi
mov eax [ eax + 0x248 ]
mov edx ebx
push 0x0
push 0xffffffff
call sub_44b0db
add esp 0x14
jmp r-xdata
cmp [ esp ] 0x0
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ ecx + 0x6a0 ] ebx
mov eax [ esp + 0x4 ]
cmp [ esp + 0x8 ] eax
je r-xdata
sub_449935
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ eax + 0x23c ]
test ecx ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call ecx
add esp 0x10
jmp sub_449965
sub_449965
push esi
mov eax [ esp + 0x8 ]
xor esi esi
test eax eax
je r-xdata
mov eax esi
pop esi
retn
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x23c ] 0x0
je r-xdata
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
xor esi esi
mov esi [ eax + 0x1a0 ]
jmp r-xdata
cmp ecx 0x2
jne r-xdata
mov ecx [ eax + 0x198 ]
cmp ecx 0x1
je r-xdata
xor esi esi
mov eax [ eax + 0x128 ]
test eax eax
je r-xdata
add eax 0x20
push eax
call sub_43ff78
add esp 0x4
add esi eax
jmp r-xdata
sub_4499c2
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
mov [ esi + 0x11c ] ecx
mov [ esi + 0x120 ] eax
mov eax [ esi + 0x144 ]
cmp eax 0x3
je r-xdata
push 0x16
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
cmp [ esi + 0x198 ] 0x1
jne r-xdata
add esp 0x4
mov [ esi + 0x148 ] 0x1
jmp r-xdata
mov ecx [ esi + 0x128 ]
test ecx ecx
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
push eax
push eax
push ecx
push eax
push ecx
push [ esi + 0x11c ]
push ecx
push [ esi + 0x120 ]
push ecx
push 0xb
push esi
call sub_448d90
add esp 0x30
jmp r-xdata
xor eax eax
mov edx r--data
push eax
push eax
call sub_454cd8
add esp 0x8
mov ebx [ esi + 0x11c ]
mov edi eax
mov ecx edi
mov eax ebx
mov ebp ebx
shr eax 0x18
shr ebp 0x10
mov [ esp ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx edi
mov ebx [ esi + 0x120 ]
mov eax ebx
mov ebp ebx
shr eax 0x18
shr ebp 0x10
mov [ esp ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx edi
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
xor ebx ebx
mov [ ecx + eax - 0x4 ] ebx
mov ecx edi
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] ebx
mov ecx esi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
jmp sub_448c97
pop esi
pop edi
pop ebx
pop ebp
retn
sub_449b18
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
cmp eax 0xe
jg r-xdata
cmp eax 0xf
je r-xdata
cmp eax 0x6
je r-xdata
mov eax [ esi + 0x144 ]
mov ecx 0x4
or eax 0x4
cmp eax ecx
je r-xdata
cmp eax 0x11
jne r-xdata
cmp eax 0xc
jne r-xdata
pop esi
pop edi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ esi + 0x198 ] 0x1
jne r-xdata
cmp eax 0x22
jl r-xdata
cmp [ esi + 0x694 ] 0x0
jne r-xdata
cmp [ esi + 0x144 ] 0x3
jne r-xdata
test ah 0x2
jne r-xdata
test al 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ eax * 8 + r--data ]
mov [ esi + 0x9c ] eax
mov [ esi + 0x6cc ] 0x1
cmp [ esi + 0x694 ] 0x0
jne r-xdata
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov [ esi + 0x14c ] 0x1
jmp r-xdata
cmp [ esi + 0x198 ] 0x1
jne r-xdata
mov ecx 0x2
call sub_448c44
mov edi eax
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] 0x0
mov ecx esi
mov eax [ edi ]
mov [ edi + 0x18 ] eax
pop esi
pop edi
pop ebx
jmp sub_44a75f
push 0x0
push r--data
push 0x4
push 0x20
push esi
call sub_448d90
add esp 0x14
jmp r-xdata
xor ecx ecx
cmp eax 0x12
mov edx r--data
mov edi r--data
mov ebx r--data
cmovne edx ecx
cmp eax 0x13
mov ecx r--data
cmovne ecx edx
cmp eax 0x14
cmovne edi ecx
cmp eax 0x15
mov ecx r--data
cmovne ecx edi
cmp eax 0x16
mov edi r--data
cmovne ebx ecx
cmp eax 0x17
mov ecx r--data
cmovne ecx ebx
cmp eax 0x18
mov ebx r--data
cmovne edi ecx
cmp eax 0x19
mov ecx r--data
cmovne ecx edi
cmp eax 0x1a
mov edi r--data
cmovne ebx ecx
cmp eax 0x1b
mov ecx r--data
cmovne ecx ebx
cmp eax 0x1c
mov ebx r--data
cmovne edi ecx
cmp eax 0x1d
cmovne ebx edi
cmp eax 0x1e
mov edi r--data
cmovne edi ebx
test edi edi
je r-xdata
mov eax [ esi + 0x144 ]
mov ecx 0x4
or eax 0x4
cmp eax ecx
je r-xdata
cmp [ esi + 0xec ] 0x0
jne r-xdata
cmp [ esi + 0x198 ] 0x2
jne r-xdata
mov ecx [ esi + 0x128 ]
test ecx ecx
je r-xdata
push 0x0
push 0x13
push esi
call sub_448d90
add esp 0xc
jmp r-xdata
cmp [ esi + 0x198 ] 0x2
jne r-xdata
cmp [ esi + 0x198 ] 0x1
jne r-xdata
cmp [ esi + 0x198 ] 0x2
jne r-xdata
mov edx r--data
mov ecx esi
push 0x0
push 0xffffffff
jmp r-xdata
push r--data
push [ esi + 0x110 ]
mov eax [ ecx ]
cmp [ eax + 0x144 ] 0x4
je r-xdata
mov ecx [ esi + 0x128 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x128 ]
test ecx ecx
je r-xdata
push r--data
push [ esi + 0x110 ]
jmp r-xdata
mov edx r--data
mov ecx esi
push 0x0
push 0xffffffff
call sub_44b0db
jmp r-xdata
mov [ esi + 0x100 ] 0x0
test [ ecx + 0x14 ] 0x1
jne r-xdata
xor eax eax
mov edx r--data
push eax
push eax
call sub_454cd8
add esp 0x8
mov ebx eax
mov edx edi
mov ecx ebx
call sub_448e7b
mov ecx esi
mov edx ebx
call sub_448c97
push edi
push r--data
push esi
call sub_447e12
add esp 0xc
jmp r-xdata
xor ebx ebx
mov edx r--data
push ebx
push ebx
call sub_454cd8
add esp 0x8
mov edi eax
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] ebx
mov ecx esi
pop esi
pop edi
pop ebx
jmp sub_448c97
call sub_4842ab
add esp 0x8
mov [ ecx + 0x18 ] 0x1
call sub_44804f
sub_449e40
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x20 ]
push [ esi + 0x6ac ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x198 ]
cmp eax 0x2
je r-xdata
mov ecx [ esi + 0x50 ]
test ch 0x2
jne r-xdata
xor edi edi
cmp eax 0x1
mov eax 0x0
jne r-xdata
xor ebp ebp
xor edi edi
xor eax eax
xor edx edx
push 0x8
push 0x21
push 0x0
call sub_43f8db
mov edx [ esp + 0x2c ]
add esp 0xc
mov ecx [ r--data ]
mov esi [ r--data ]
xor edi edi
mov ebp 0x21
inc edi
mov [ eax + 0x4 ] ecx
mov [ eax ] esi
mov esi edx
mov ecx [ edx + 0x50 ]
mov edx eax
jmp r-xdata
test edi edi
mov [ esi + 0x6ac ] eax
cmove eax edi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
xor edi edi
test [ esi + 0x50 ] 0x1
mov eax 0x0
jne r-xdata
mov [ esp ] eax
mov ebx edi
cmp [ esi + 0xec ] 0x0
je r-xdata
test cl 0x40
jne r-xdata
push 0x8
push 0x21
push 0x0
call sub_43f8db
mov esi [ esp + 0x2c ]
add esp 0xc
mov ecx [ r--data ]
mov edx [ r--data ]
xor ebx ebx
mov edi 0x2
inc ebx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jmp r-xdata
mov edi edx
mov edx ebx
lea ecx [ ebx + 0x11 ]
cmp ecx ebp
mov [ esp + 0x8 ] ecx
jle r-xdata
mov ecx ebp
lea ebx [ edi + 0x1 ]
cmp edi ecx
jb r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax + ebx * 8 + 0x4 ] ecx
mov [ eax + ebx * 8 ] edx
mov eax edi
jmp r-xdata
lea ebx [ edx + 0x2 ]
cmp ebx ebp
jle r-xdata
mov edi edx
lea eax [ edx + ebx * 8 ]
push 0x88
push r--data
push eax
call sub_49a1f0
add esp 0xc
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x8 ]
jmp r-xdata
lea eax [ ecx + ecx * 4 ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1e
add ecx eax
sar ecx 0x2
add ecx 0x20
push 0x8
mov ebp ecx
push ecx
push [ esp + 0x8 ]
call sub_43f8db
add esp 0xc
mov edx eax
mov [ esp ] edx
mov [ esp ] eax
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ edx + edi * 8 + 0x4 ] ecx
mov [ edx + edi * 8 ] eax
jmp r-xdata
lea ecx [ ebx + ebx * 4 ]
shr ecx 0x2
or ecx 0x20
push 0x8
mov ebp ecx
push ecx
push eax
call sub_43f8db
mov esi [ esp + 0x2c ]
add esp 0xc
mov edx eax
test edx edx
je r-xdata
mov eax [ esp ]
mov [ esp + 0x4 ] ebp
mov ecx edi
lea eax [ ebx + ebx * 4 ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1e
add ecx eax
sar ecx 0x2
add ecx 0x20
push 0x8
mov [ esp + 0x8 ] ecx
push ecx
push [ esp + 0x8 ]
mov edi edx
call sub_43f8db
mov esi [ esp + 0x2c ]
mov edx edi
add esp 0xc
mov ecx eax
jmp r-xdata
cmp [ esi + 0x6c8 ] 0x0
je r-xdata
cmp [ esi + 0x128 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
lea edi [ edx + 0x1 ]
cmp edx ebp
jge r-xdata
cmp ebx [ esp + 0x4 ]
mov eax [ esp ]
lea edi [ ebx + 0x1 ]
jl r-xdata
lea ebp [ edx + edx * 4 + 0xf ]
xor edi edi
movsd xmm0 [ r--data ]
movsd xmm1 [ r--data ]
movsd [ ecx + edx * 8 + 0x8 ] xmm0
movsd [ ecx + edx * 8 ] xmm1
cmp [ esi + 0x6c8 ] 0x0
mov [ esp ] eax
jle r-xdata
lea eax [ edi + edi * 4 ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1e
add ecx eax
sar ecx 0x2
add ecx 0x20
push 0x8
push ecx
push [ esp + 0x8 ]
mov ebx edx
call sub_43f8db
mov esi [ esp + 0x2c ]
add esp 0xc
mov ebx edx
jmp r-xdata
mov edx [ r--data ]
mov ebp [ r--data ]
mov [ esp ] eax
mov eax ecx
mov [ eax + ebx * 8 + 0x4 ] ebp
mov [ eax + ebx * 8 ] edx
mov edx edi
mov ebp [ esp + 0x4 ]
lea ecx [ edi + edi * 4 ]
mov edx ecx
sar edx 0x1f
shr edx 0x1e
add edx ecx
sar edx 0x2
add edx 0x20
push 0x8
mov [ esp + 0x8 ] edx
push edx
push eax
call sub_43f8db
mov esi [ esp + 0x2c ]
add esp 0xc
mov ecx eax
mov ecx ebp
sar ecx 0x1f
shr ecx 0x1e
add ecx ebp
sar ecx 0x2
add ecx 0x20
push 0x8
mov [ esp + 0x8 ] ecx
push ecx
push [ esp + 0x8 ]
call sub_43f8db
mov edx [ esp + 0x2c ]
add esp 0xc
mov ecx eax
mov [ esp ] eax
mov ecx edx
mov edx eax
jmp r-xdata
mov eax esi
mov esi [ esi + edi * 4 + 0x6b0 ]
mov edx ecx
mov ecx [ esi * 8 + r--data ]
add esi 0x22
cmp ebx [ esp + 0x4 ]
mov ecx [ ecx + 0x30 ]
mov [ esp + 0x8 ] ecx
jge r-xdata
mov [ ecx + ebx * 8 + 0x4 ] esi
inc edi
add ebp 0x5
mov esi edx
mov eax [ esp + 0x8 ]
mov [ ecx + ebx * 8 ] eax
inc ebx
cmp edi [ edx + 0x6c8 ]
jl r-xdata
sub_44a1c7
push esi
mov esi [ esp + 0x8 ]
mov edx [ esp + 0xc ]
cmp [ esi + 0x198 ] 0x1
jne r-xdata
mov ecx [ esi + 0x128 ]
test ecx ecx
je r-xdata
cmp edx 0x7fff
jg r-xdata
mov ecx esi
pop esi
jmp sub_45341e
call sub_4483dc
mov eax [ esi + 0x1a8 ]
test eax eax
je r-xdata
xor edx edx
mov ecx esi
mov [ esi + 0x1a8 ] 0x0
dec edx
call sub_44a5f9
jmp r-xdata
sub_44a237
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x28 ]
mov [ esp + 0x8 ] eax
call sub_469ae5
mov ecx [ esp + 0x20 ]
mov ebp esp
lea esi [ esp + 0x4 ]
mov edx edi
push 0x0
push ebp
push esi
push ebx
call sub_456693
add esp 0x10
mov edi [ esi ]
push ebx
push [ ebp ]
push edi
call sub_46eecd
add esp 0xc
mov esi eax
push edi
call sub_43f9d4
add esp 0x4
call sub_469c06
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_44a2c6
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov esi edx
mov edi ecx
test ebx ebx
jle r-xdata
pop esi
pop edi
pop ebx
retn
mov al [ esi ]
cmp al 0xd
je r-xdata
inc esi
dec ebx
jne r-xdata
test edi edi
jne r-xdata
push 0x2
call sub_49b55f
add esp 0x4
movsx ecx [ esi ]
push eax
push ecx
call sub_4a6bf0
add esp 0x8
cmp al 0xa
je r-xdata
and al 0x60
je r-xdata
sub_44a306
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov esi [ edi + 0x670 ]
test esi esi
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ esi ]
cmp ecx eax
jne r-xdata
push 0x142c
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp ecx [ esi + 0x4 ]
je r-xdata
mov eax ecx
jmp r-xdata
test eax eax
jle r-xdata
push 0x142e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi ]
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
cmp [ edi + eax * 4 + 0x270 ] sub_44a306
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
cmp [ edi + eax * 4 + 0x270 ] sub_44a306
je r-xdata
mov ecx [ edi + 0x678 ]
mov [ edi + eax * 4 + 0x270 ] ecx
push 0x1431
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi ]
xor eax eax
mov [ edi + 0x674 ] eax
mov [ edi + 0x670 ] eax
mov [ edi + 0x670 ] eax
mov ecx [ eax ]
test ecx ecx
jle r-xdata
mov ecx [ edi + 0x67c ]
mov [ edi + eax * 4 + 0x270 ] ecx
push 0x1435
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jle r-xdata
mov ecx [ edi + ecx * 4 + 0x270 ]
mov [ edi + 0x678 ] ecx
mov eax [ eax ]
mov [ edi + eax * 4 + 0x270 ] sub_44a306
mov eax [ edi + 0x670 ]
push [ esi + 0xc ]
push ebx
push edi
call [ esi + 0x8 ]
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
retn
mov ecx [ edi + ecx * 4 + 0x270 ]
mov [ edi + 0x67c ] ecx
mov eax [ eax + 0x4 ]
mov [ edi + eax * 4 + 0x270 ] sub_44a306
jmp r-xdata
sub_44a44c
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov esi ecx
lea edi [ esi + 0x20 ]
mov [ esp + 0x14 ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
push edi
call sub_43ff78
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] edi
mov [ esp + 0x4 ] eax
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax edi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esi + 0x18 ] 0x0
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x10 ]
push eax
push edi
call sub_44008c
add esp 0xc
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0x2c ]
cmp eax ecx
jbe r-xdata
mov ecx esi
call sub_44804f
mov ecx [ esi + 0x30 ]
cmp eax ecx
jbe r-xdata
mov eax ecx
mov [ esp + 0x10 ] ecx
mov ecx 0x5e
call sub_448c44
mov ebp [ esi + 0x4 ]
mov ebx eax
mov edi esi
mov ecx ebp
shr ecx 0x18
mov [ esp + 0x8 ] ecx
mov ecx ebp
mov edx [ ebx ]
shr ecx 0x10
mov esi ecx
mov ecx ebx
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x8 ]
mov [ ecx + eax - 0x4 ] dl
mov edx esi
mov esi edi
mov [ ecx + eax - 0x3 ] dl
mov edx ebp
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x0
mov ecx ebx
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
mov edx [ esp + 0xc ]
push [ esp + 0x10 ]
call sub_44a58f
add esp 0x4
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_448c97
push [ esp + 0x10 ]
mov edi [ esp + 0x4 ]
push edi
call sub_44000a
add esp 0x8
mov eax [ esi + 0x2c ]
sub eax [ esp + 0x10 ]
mov [ esi + 0x2c ] eax
jne r-xdata
mov [ esp + 0x10 ] ecx
push edi
call sub_43ff78
add esp 0x4
test eax eax
jle r-xdata
sub_44a58f
push ebx
push edi
push esi
mov esi ecx
mov edi edx
mov ebx [ esp + 0x10 ]
mov edx [ esi ]
add edx ebx
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi + 0x10 ]
add eax [ esi ]
sub eax ebx
push ebx
push edi
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ esi + 0x10 ]
sub ecx eax
shr ecx 0x18
mov [ edx + eax - 0x4 ] cl
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ esi + 0x10 ]
sub ecx eax
shr ecx 0x10
mov [ edx + eax - 0x3 ] cl
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ esi + 0x10 ]
sub ecx eax
mov [ edx + eax - 0x2 ] ch
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ esi + 0x10 ]
sub ecx eax
mov [ edx + eax - 0x1 ] cl
pop esi
pop edi
pop ebx
retn
sub_44a5f9
push edi
push esi
mov esi ecx
mov edi [ esi + 0x19c ]
add edx edi
mov [ esi + 0x19c ] edx
jns r-xdata
test edi edi
jne r-xdata
push 0xebb
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edx [ esi + 0x19c ]
test edi edi
je r-xdata
test edx edx
je r-xdata
pop esi
pop edi
retn
test edx edx
jne r-xdata
mov eax [ esi + 0x10 ]
xor edi edi
inc edi
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
xor edi edi
test eax eax
je r-xdata
mov [ esi + 0x260 ] edi
mov ecx [ eax ]
push 0x1
push eax
jmp r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
sub_44a668
push ebp
push ebx
push edi
push esi
push eax
mov ebx [ esp + 0x18 ]
test edx edx
mov esi ecx
cmove edx ebx
test edx edx
je r-xdata
push r--data
call sub_43f79e
add esp 0x4
push edx
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
xor eax eax
mov [ esi + 0x134 ] 0x1
mov [ esi + 0x138 ] ebp
push eax
push eax
push edi
push esi
call sub_44a812
add esp 0x10
push edi
call sub_43f9d4
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x198 ]
cmp eax 0x2
je r-xdata
mov ebp [ esp + 0x20 ]
mov edi eax
test ebx ebx
je r-xdata
mov ebx [ esp + 0x1c ]
xor ecx ecx
inc ecx
call sub_448c44
mov ecx ebx
mov ebp eax
shr ebx 0x10
shr ecx 0x18
mov [ esp ] ecx
mov ecx ebp
mov edx [ ebp ]
add edx 0x4
mov [ ebp ] edx
call sub_44dbe6
mov eax [ ebp ]
mov ecx [ ebp + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx [ esp + 0x1c ]
mov [ ecx + eax - 0x3 ] bl
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov edx [ esp + 0x18 ]
mov ecx ebp
call sub_448e7b
mov edx r--data
mov ecx ebp
call sub_448e7b
mov edx ebp
mov ebp [ esp + 0x20 ]
mov ecx esi
call sub_44a75f
cmp eax 0x1
jne r-xdata
push 0x0
push ebx
push 0x4
push 0x1
push esi
call sub_448d90
add esp 0x14
jmp r-xdata
sub_44a75f
push edi
push esi
mov edi ecx
mov esi edx
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
mov ecx edi
mov edx esi
call sub_44aa3a
mov edx [ esi + 0x14 ]
mov ecx edi
push eax
call sub_44b00f
add esp 0x4
cmp eax 0x8001
jl r-xdata
test [ eax + 0x30 ] 0x1
jne r-xdata
mov eax [ edi + 0x688 ]
add eax [ esi + 0x20 ]
mov [ edi + 0x688 ] eax
cmp [ edi + 0x694 ] 0x0
jne r-xdata
xor edx edx
mov ecx edi
inc edx
push eax
call sub_44b052
add esp 0x4
mov ecx edi
mov edx esi
push 0x0
call sub_44a8af
add esp 0x4
mov ecx edi
pop esi
pop edi
jmp sub_44a98e
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
retn
cmp [ edi + 0xec ] 0x0
jne r-xdata
mov ecx [ edi + 0x690 ]
test ecx ecx
je r-xdata
cmp eax ecx
jbe r-xdata
mov edx r--data
mov ecx edi
push 0x0
push 0xffffffff
call sub_44b0db
add esp 0x8
sub_44a812
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
xor edx edx
xor ebp ebp
mov ecx esi
call sub_45141c
mov ecx [ esi + 0x134 ]
mov edx r--data
mov edi r--data
cmp ecx ebp
cmove edi edx
test ebx ebx
cmovne edi ebx
cmp ecx ebp
je r-xdata
test eax eax
je r-xdata
cmp [ esi + 0x138 ] 0x0
je r-xdata
push edi
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
cmp [ esi + 0x134 ] 0x0
je r-xdata
push [ esi + 0x110 ]
call sub_48a878
add esp 0x4
cmp [ esi + 0x130 ] 0x0
jns r-xdata
push edi
push r--data
push [ esi + 0x110 ]
call sub_489e27
add esp 0xc
cmp [ esi + 0x138 ] 0x0
jne r-xdata
mov [ esi + 0x130 ] 0x0
pop esi
pop edi
pop ebx
pop ebp
retn
sub_44a8af
push ebx
push edi
push esi
mov edi ecx
mov esi edx
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
mov ecx edi
mov edx esi
call sub_44aa3a
mov ecx [ edi + 0x16c ]
mov ebx eax
add eax ecx
cmp eax [ edi + 0x170 ]
jle r-xdata
test [ eax + 0x30 ] 0x1
je r-xdata
mov eax [ edi + 0x168 ]
sub eax 0xffffff80
mov [ edi + 0x170 ] eax
push 0x1
push eax
push [ edi + 0x168 ]
call sub_43f8db
add esp 0xc
mov [ edi + 0x168 ] eax
mov ecx [ edi + 0x16c ]
jmp r-xdata
mov eax [ esp + 0x10 ]
or eax [ edi + 0x16c ]
jne r-xdata
add ecx eax
push ebx
push [ esi + 0x14 ]
push ecx
call sub_49a1f0
add esp 0xc
add [ edi + 0x16c ] ebx
mov eax [ esi + 0x20 ]
add [ edi + 0x68c ] eax
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
retn
test [ edi + 0x51 ] 0x2
jne r-xdata
mov ecx 0x2
call sub_448c44
mov ebx eax
mov edx [ ebx ]
mov ecx ebx
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx ebx
mov [ ecx + eax - 0x4 ] 0x0
mov ecx edi
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
push 0x1
call sub_44a8af
add esp 0x4
sub_44a98e
push ebx
push edi
push esi
mov esi ecx
mov edx [ esi + 0x168 ]
push [ esi + 0x16c ]
call sub_44b00f
add esp 0x4
mov edi eax
xor ebx ebx
mov [ esi + 0x170 ] ebx
mov [ esi + 0x16c ] ebx
push [ esi + 0x168 ]
call sub_43f9d4
add esp 0x4
cmp edi 0x8001
mov [ esi + 0x168 ] ebx
jl r-xdata
cmp [ esi + 0x198 ] 0x2
jne r-xdata
xor edx edx
mov ecx esi
inc edx
push edi
call sub_44b052
add esp 0x4
pop esi
pop edi
pop ebx
retn
mov eax [ esi + 0x68c ]
xor ecx ecx
add eax [ esi + 0x688 ]
mov [ esi + 0x688 ] eax
mov [ esi + 0x68c ] ecx
cmp [ esi + 0x694 ] ecx
jne r-xdata
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov ecx [ esi + 0x690 ]
test ecx ecx
je r-xdata
cmp eax ecx
jbe r-xdata
mov edx r--data
mov ecx esi
push 0x0
push 0xffffffff
call sub_44b0db
add esp 0x8
sub_44aa3a
push ebp
push ebx
push edi
push esi
sub esp 0x50
mov eax [ rw-data ]
mov edi ecx
mov esi edx
mov [ esp + 0x4c ] eax
cmp [ edi + 0x18 ] 0x0
mov [ esp + 0x4 ] edi
je r-xdata
cmp [ edi + 0xec ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
xor ebp ebp
sub eax [ esi + 0x14 ]
add [ esi ] eax
mov [ esi + 0x18 ] ebp
cmp [ edi + 0x24c ] ebp
je r-xdata
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
add eax 0xfffffffb
shr eax 0x18
mov [ ecx + 0x1 ] al
mov eax 0xfffffb
add eax [ esi ]
mov ecx [ esi + 0x10 ]
shr eax 0x10
mov [ ecx + 0x2 ] al
mov eax 0xfffb
add eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + 0x3 ] ah
mov eax 0xfb
add eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + 0x4 ] al
mov eax [ esi + 0x10 ]
inc eax
mov [ esi + 0x14 ] eax
inc [ edi + 0x1ac ]
mov ebp [ esi ]
dec ebp
jmp r-xdata
mov eax [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
xor ebp ebp
mov ecx eax
and ecx 0xfffffffe
cmp ecx 0x5e
jne r-xdata
mov ecx [ edi + 0x60 ]
mov ebx 0x8
mov eax 0x8
test ecx ecx
je r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x10 ]
lea edi [ esp + 0x18 ]
lea ebx [ esp + 0x1c ]
add ecx 0xfffffffb
add edx 0x5
push edi
mov edi [ esp + 0x8 ]
push ebx
push ecx
push edx
push [ edi + 0x90 ]
call [ eax + 0x10 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x4c ]
call sub_497c4a
mov eax ebp
add esp 0x50
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi + 0x188 ] 0x4
jne r-xdata
push 0x7b
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x32
jne r-xdata
mov ecx esi
call sub_44dc2a
cmp [ esi + 0x8 ] 0x5f
jne r-xdata
mov ecx [ edi + 0x70 ]
cmp eax 0x7
cmovg ebx eax
test ecx ecx
mov [ esp + 0x8 ] ecx
je r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
mov ecx esi
lea edx [ edi + 0x5 ]
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi + 0x10 ]
add eax [ esi ]
sub eax edi
push edi
mov edi [ esp + 0x8 ]
push ebx
push eax
call sub_49a1f0
add esp 0xc
push [ esp + 0x1c ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0x3d
jne r-xdata
lea eax [ esp + 0x14 ]
lea ebx [ esp + 0x18 ]
mov [ esi + 0x18 ] 0x0
mov ecx esi
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
lea eax [ esp + 0x14 ]
mov ecx esi
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
mov edx ebx
lea ebx [ esp + 0x14 ]
mov ecx esi
push ebx
call sub_44dc49
add esp 0x4
cmp [ ebx ] 0x8
jne r-xdata
mov eax [ esi + 0x18 ]
lea ebx [ esp + 0x18 ]
mov ecx esi
mov edx ebx
add eax 0x4
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x24 ] 0x2
push eax
call sub_44dc49
add esp 0x4
cmp [ ebx ] 0x0
je r-xdata
mov ecx esi
call sub_44dc2a
xor eax eax
mov edx [ edi + 0x78 ]
mov eax 0xfffffffc
test edx edx
cmove eax edx
jmp r-xdata
mov [ esp ] ebp
push 0x7b
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x62
jne r-xdata
push 0x7b
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push 0x8
push r--data
push [ esp + 0x20 ]
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
xor ebp ebp
mov eax [ esp + 0x14 ]
xor ebp ebp
inc ebp
mov [ esp + 0x20 ] eax
jmp r-xdata
test eax eax
je r-xdata
push 0x92d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi + 0x70 ]
mov edx [ esi ]
mov ecx [ esi + 0x4 ]
mov edi ecx
lea ebp [ edx + 0x4 ]
sub edi edx
cmp ebp ecx
mov ebp 0x4
cmovl ebp edi
add eax edx
add eax ebp
cdq
idiv ebx
mov eax ebx
sub eax edx
cdq
idiv ebx
mov edi [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ebx edx
add ebx ebp
cmp ebx 0x100
jl r-xdata
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_44dc2a
lea ebx [ esp + 0x14 ]
lea edx [ esp + 0x18 ]
mov ecx esi
push ebx
call sub_44dc49
add esp 0x4
cmp [ ebx ] 0x7
jne r-xdata
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_44dc2a
mov eax [ esi + 0x18 ]
lea ecx [ ebp + ebp * 2 ]
lea edi [ esp + 0x14 ]
lea ebx [ esp + 0x18 ]
mov [ esp + 0x8 ] ecx
lea ecx [ esp + ecx * 4 + 0x1c ]
mov [ esp + 0xc ] ecx
mov [ ecx ] eax
mov [ ecx + 0x8 ] 0x1
mov eax [ esi + 0x18 ]
cmp [ esi ] eax
jle r-xdata
xor ebp ebp
mov ebp [ eax + 0x2c ]
jmp r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x18 ]
xor eax eax
cmp ecx edx
setg al
add eax edx
cmp ecx edx
jg r-xdata
mov ecx esi
mov edx ebx
push edi
call sub_44dc49
add esp 0x4
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ esp + 0xc ]
sub eax [ ecx ]
mov ecx [ esp + 0x8 ]
mov [ esp + ecx * 4 + 0x20 ] eax
jmp r-xdata
lea ebx [ ebp + ebp * 2 ]
lea edx [ esp + 0x18 ]
mov ecx esi
mov [ esp + ebx * 4 + 0x1c ] eax
lea eax [ esp + 0x14 ]
mov [ esp + ebx * 4 + 0x24 ] 0x1
push eax
call sub_44dc49
add esp 0x4
lea eax [ esp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
inc eax
mov [ esi + 0x18 ] eax
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
lea edx [ ebx - 0x4 ]
add eax edx
shr eax 0x18
mov [ ecx ] al
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
lea eax [ ebx + eax + 0xfffffc ]
shr eax 0x10
mov [ ecx + 0x1 ] al
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
lea eax [ ebx + eax + 0xfffc ]
mov [ ecx + 0x2 ] ah
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
lea eax [ ebx + eax + 0xfc ]
mov [ ecx + 0x3 ] al
mov edi [ esp + 0x4 ]
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
xor edi edi
mov edx [ esi ]
add ebp ebx
mov ecx esi
add edx ebp
call sub_44dbe6
mov eax [ esi + 0x10 ]
test ebx ebx
mov [ eax + 0x4 ] bl
jle r-xdata
xor edx edx
cmp ecx eax
setg dl
add edx eax
mov [ esi + 0x18 ] edx
cmp ecx eax
jle r-xdata
inc ebp
mov ecx [ esi + 0x18 ]
lea eax [ esp + ebx * 4 + 0x1c ]
inc ebp
lea edx [ esp + 0x18 ]
sub ecx [ eax ]
mov [ eax + 0x4 ] ecx
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
call sub_44dc49
add esp 0x4
lea eax [ esp + 0x18 ]
mov [ esp ] ebp
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x70 ]
test eax eax
je r-xdata
test [ eax + 0x30 ] 0x2
je r-xdata
call sub_469c4e
mov ecx [ esi + 0x10 ]
add ecx [ esi ]
mov [ edi + ecx ] al
inc edi
cmp edi ebx
jl r-xdata
mov edi [ esp + 0x4 ]
mov ecx [ esi + 0x18 ]
lea eax [ esp + edi * 4 + 0x1c ]
sub ecx [ eax ]
mov [ eax + 0x4 ] ecx
lea edx [ esp + 0x18 ]
mov ecx esi
push ebx
call sub_44dc49
add esp 0x4
mov eax [ esi + 0x18 ]
lea edi [ ebp + ebp * 2 ]
mov ecx esi
lea edx [ esp + 0x18 ]
mov [ esp + edi * 4 + 0x1c ] eax
mov [ esp + edi * 4 + 0x24 ] 0x1
push ebx
call sub_44dc49
add esp 0x4
lea eax [ esp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ edi + 0x1ac ]
mov ebx [ esi + 0x28 ]
mov ebp [ esi + 0x24 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ esp + 0x8 ] eax
mov eax [ esi ]
mov [ esp + 0xc ] eax
mov eax [ esi + 0x10 ]
movzx edi [ eax + 0x5 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x184 ]
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x188 ]
push edi
call sub_44dc9c
add esp 0x4
lea ecx [ esp + 0x1c ]
push ebx
push ebp
push [ esp + 0x18 ]
push ecx
push [ esp + 0x10 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push eax
push edi
mov edi [ esp + 0x28 ]
push 0x1
push [ edi + 0x18 ]
call sub_43d2fa
add esp 0x2c
mov eax [ esi + 0x14 ]
sub eax [ esi + 0x10 ]
add [ esi ] eax
mov ecx [ esi + 0x18 ]
lea edx [ ebp + ebp * 2 ]
lea eax [ esp + ebx * 4 + 0x20 ]
sub ecx [ esp + edx * 4 + 0x1c ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
cmp [ edi + 0x78 ] 0x0
je r-xdata
push [ edi + 0x1ac ]
push 0x4
push [ esi + 0x10 ]
push [ edi + 0x68 ]
mov [ esp + 0x18 ] edx
call [ eax + 0x18 ]
mov edx [ esp + 0x18 ]
add esp 0x10
inc [ edi + 0x1ac ]
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
add ebx eax
add ebp eax
mov [ esi + 0x20 ] ebx
mov [ esi + 0x14 ] ecx
mov ecx [ esi ]
add ecx ebx
push ecx
push [ esi + 0x10 ]
push [ edi + 0x68 ]
call [ eax + 0x10 ]
add esp 0xc
mov ecx [ esi ]
add ecx ebx
push [ edi + 0x1ac ]
push ecx
push [ esi + 0x10 ]
push [ edi + 0x80 ]
call [ eax + 0xc ]
add esp 0x10
mov ecx [ edi + 0x60 ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
add ecx ebx
push [ edi + 0x1ac ]
push ecx
push [ esi + 0x10 ]
push [ edi + 0x80 ]
call [ eax + 0xc ]
add esp 0x10
jmp r-xdata
mov eax [ esi + 0x10 ]
add edx [ esi ]
add eax 0x4
push edx
push eax
push [ edi + 0x68 ]
call [ ecx + 0x10 ]
add esp 0xc
mov eax [ edi + 0x70 ]
sub_44b00f
push ebx
push edi
push esi
mov edi ecx
mov ebx [ esp + 0x10 ]
mov esi edx
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push ecx
push 0xffffffff
push 0x1
push eax
call sub_43d2fa
add esp 0x2c
xor eax eax
mov ecx [ eax ]
push ebx
push esi
push eax
call [ ecx + 0x8 ]
add esp 0xc
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_44b052
push ebx
push edi
push esi
mov esi edx
mov edi ecx
cmp [ edi + 0x1a4 ] esi
je r-xdata
pop esi
pop edi
pop ebx
retn
mov eax [ esp + 0x10 ]
mov [ edi + 0x1a4 ] esi
mov [ edi + 0x1a0 ] eax
mov eax [ edi + 0x124 ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_47e33c
add esp 0x8
test eax eax
je r-xdata
xor ebx ebx
inc ebx
push esi
push [ eax + 0x4c ]
call sub_440ec0
cmp ecx 0x2
je r-xdata
mov ecx [ eax + 0xc ]
cmp ecx 0x3
je r-xdata
test esi esi
jne r-xdata
cmp ecx 0x1
jne r-xdata
push ebx
push [ edi + 0x124 ]
call sub_47e33c
add esp 0x8
inc ebx
test eax eax
jne r-xdata
mov ecx eax
call sub_44dea3
jmp r-xdata
push esi
push [ eax + 0x4c ]
call sub_49720f
jmp r-xdata
add esp 0x8
sub_44b0db
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov esi ecx
mov edi edx
mov [ esp + 0x40 ] eax
mov ebp [ esi + 0x1cc ]
test ebp ebp
jne r-xdata
mov [ esp ] esi
cmp [ esi + 0xec ] 0x0
je r-xdata
push 0x74c
push 0x1
call sub_43f807
add esp 0x8
mov [ esi + 0x1cc ] eax
mov [ eax ] 0x0
mov ebp [ esi + 0x1cc ]
mov eax [ esp ]
cmp [ eax + 0x198 ] 0x2
je r-xdata
push 0x18f9
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ ebp ]
mov ebx [ esp + 0x5c ]
mov eax [ esp + 0x58 ]
mov [ esp + 0x8 ] ebp
cmp ecx 0x1b72
jle r-xdata
push 0x18fa
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp ecx 0x1afe
jle r-xdata
cmp ecx 0x1c84
jg r-xdata
mov edi [ esp ]
test ecx ecx
je r-xdata
mov edi [ esp ]
cmp ecx 0x1b30
jg r-xdata
cmp ecx 0x1d7d
jg r-xdata
cmp ecx 0x1beb
jg r-xdata
xor eax eax
mov ecx r--data
mov edx r--data
mov esi 0x4
mov [ ebp + 0x64 ] eax
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x4c ] eax
mov [ ebp + 0x48 ] eax
mov [ ebp + 0x54 ] eax
mov [ ebp + 0x50 ] eax
mov [ ebp + 0x130 ] eax
mov [ ebp + 0x12c ] eax
mov [ ebp + 0x138 ] eax
mov [ ebp + 0x134 ] eax
mov eax [ edi + 0x50 ]
and eax 0x2
cmove edx ecx
shr eax 0x1
sub esi eax
mov [ ebp + 0x40 ] edx
mov [ ebp + 0x44 ] esi
cmp ecx 0x1a26
je r-xdata
cmp ecx 0x1b31
je r-xdata
cmp ecx 0x1aff
je r-xdata
cmp ecx 0x1d7e
je r-xdata
cmp ecx 0x1c85
je r-xdata
cmp ecx 0x1bec
je r-xdata
cmp ecx 0x1b73
je r-xdata
inc esi
cmp esi 0x6
jne r-xdata
jmp [ eax * 4 + jump_table_41013c ]
test ebx ebx
je r-xdata
cmp ecx 0x1abc
jne r-xdata
test ebx ebx
je r-xdata
cmp ecx 0x1b43
jne r-xdata
test ebx ebx
je r-xdata
cmp ecx 0x1b18
jne r-xdata
mov edi [ esp ]
test ebx ebx
je r-xdata
cmp ecx 0x1dfd
jne r-xdata
mov edi [ esp ]
test ebx ebx
je r-xdata
cmp ecx 0x1ced
jne r-xdata
test ebx ebx
je r-xdata
cmp ecx 0x1c2a
jne r-xdata
test ebx ebx
je r-xdata
cmp ecx 0x1b96
jne r-xdata
push esi
push 0x18
push [ edi + 0x248 ]
call sub_4319e9
add esp 0xc
cmp eax 0x5
ja r-xdata
xor esi esi
mov [ ebp + 0xf0 ] 0x0
cmp esi 0x4
jg r-xdata
mov [ ebp ] 0x1a26
jmp r-xdata
cmp [ ebx + 0x8 ] 0x14
jne r-xdata
mov [ ebp ] 0x0
test ebx ebx
je r-xdata
test eax eax
jle r-xdata
push r--data
jmp r-xdata
test ebx ebx
je r-xdata
test eax eax
jle r-xdata
push r--data
jmp r-xdata
test ebx ebx
je r-xdata
mov [ ebp ] 0x1d7e
jmp r-xdata
cmp [ ebx + 0x8 ] 0x15
jne r-xdata
test ebx ebx
je r-xdata
mov [ ebp ] 0x1c85
jmp r-xdata
cmp [ ebx + 0x8 ] 0x20
jne r-xdata
test ebx ebx
je r-xdata
mov [ ebp ] 0x1bec
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1f
jne r-xdata
test ebx ebx
je r-xdata
mov [ ebp ] 0x1b73
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1f
jne r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xf0 ]
lea edx [ ecx + 0x1 ]
mov [ ebp + 0xf0 ] edx
mov [ ebp + ecx * 4 + 0xf4 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0xd4 ]
lea ecx [ eax + 0x1 ]
mov [ ebp + 0xd4 ] ecx
mov [ ebp + eax * 4 + 0xd8 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x40 ]
call sub_497c4a
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
push r--data
jmp r-xdata
xor ecx ecx
mov eax 0x10
lea esi [ esp + 0x34 ]
mov [ edi + 0x98 ] ecx
mov [ edi + 0x9c ] ecx
mov [ ebp + 0x60 ] ecx
mov [ ebp + 0x64 ] ecx
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x18 ] ecx
mov [ ebp + 0x14 ] ecx
mov [ ebp + 0x4c ] ecx
mov [ ebp + 0x48 ] ecx
mov [ ebp + 0x54 ] ecx
mov [ ebp + 0x50 ] ecx
add [ ebx + 0x18 ] eax
lea edi [ esp + 0x38 ]
mov [ ebp + 0x144 ] ecx
mov ecx ebx
mov edx edi
push esi
call sub_44dc49
add esp 0x4
mov eax [ edi ]
xor edi edi
test eax eax
mov [ esp + 0x4 ] eax
je r-xdata
mov edi [ esp ]
test eax eax
jle r-xdata
push r--data
jmp r-xdata
mov eax [ edi + 0x25c ]
mov [ ebp + 0x140 ] eax
mov [ ebp ] 0x1b31
jmp r-xdata
call sub_43f758
add esp 0x4
mov ecx edi
mov [ ebp ] 0x1b43
jmp r-xdata
mov edi [ esp ]
mov eax [ edi + 0x98 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x25c ]
mov [ ebp + 0x140 ] eax
mov [ ebp ] 0x1aff
jmp r-xdata
mov edi [ esp ]
test eax eax
jle r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
mov [ edi + 0x684 ] 0x0
mov eax [ edi + 0x6c ]
test eax eax
je r-xdata
test eax eax
js r-xdata
lea esi [ ebx + 0x8 ]
push [ ebp + 0x70 ]
call sub_43f9d4
add esp 0x4
push r--data
jmp r-xdata
mov eax ebp
lea edx [ ebp + 0x6c ]
mov ecx ebx
sub eax 0xffffff80
push eax
call sub_44dc49
add esp 0x4
cmp [ ebp + 0x6c ] 0x0
je r-xdata
mov edi [ esp ]
test eax eax
jle r-xdata
push r--data
jmp r-xdata
push [ ebp + 0x90 ]
call j_sub_4631d0
add esp 0x4
push r--data
jmp r-xdata
lea eax [ ebp + 0x7c ]
lea edx [ ebp + 0x68 ]
mov ecx ebx
push eax
call sub_44dc49
add esp 0x4
mov edi [ ebp + 0x68 ]
test edi edi
je r-xdata
mov [ ebp ] 0x1c2a
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1e
jne r-xdata
push r--data
jmp r-xdata
mov ecx ebx
call sub_44e1f4
mov ecx ebx
mov [ ebp + 0x1c ] eax
call sub_44e1f4
mov [ ebp + 0x20 ] eax
test eax eax
mov edi [ esp ]
je r-xdata
mov [ ebp ] 0x1b96
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax [ ebp + 0x3c ]
jne r-xdata
push esi
push 0x19
push [ edi + 0x248 ]
call sub_4319e9
add esp 0xc
cmp esi 0x4
jne r-xdata
mov [ ebp + 0x108 ] 0x0
xor esi esi
mov eax [ edi + 0x248 ]
inc esi
cmp esi 0x5
jne r-xdata
push r--data
lea eax [ ebp + 0x48 ]
lea edx [ ebp + 0x10 ]
lea ecx [ ebp + 0xc ]
mov [ esp + 0x10 ] 0x154
mov [ esp + 0x14 ] ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov eax [ edi + 0x25c ]
mov [ ebp + 0x140 ] eax
mov [ ebp ] 0x1abc
jmp r-xdata
call sub_43f758
add esp 0x4
mov ecx [ esp ]
jmp r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov edx [ ebp + 0x48 ]
xor eax eax
mov ecx 0x0
test edx edx
je r-xdata
mov edx [ eax + 0xc ]
cmp ecx 0x2
mov esi [ edx + 0x18 ]
jne r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ edi + 0x25c ]
mov [ ebp + 0x140 ] eax
jmp r-xdata
mov [ ebp ] 0x1b18
jmp r-xdata
mov eax [ ebp + 0x4c ]
test eax eax
je r-xdata
mov ecx [ edi + 0x64 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
cmp eax 0xfffffffe
jne r-xdata
mov ecx [ esp ]
cmp [ ecx + 0x238 ] 0x0
jne r-xdata
push r--data
mov edi [ esp + 0x4 ]
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
jmp r-xdata
push r--data
jmp r-xdata
push [ ebp + 0x70 ]
call sub_43f9d4
add esp 0x4
lea eax [ ebp + 0x2c ]
lea ebx [ edi + 0xc ]
mov [ esp + 0xc ] eax
lea eax [ edi + 0x98 ]
jmp r-xdata
mov eax [ edi + 0x25c ]
mov [ ebp + 0x140 ] eax
mov [ ebp ] 0x1ced
jmp r-xdata
push r--data
jmp r-xdata
mov esi [ esp ]
mov ebx [ ebp + 0x7c ]
lea ecx [ esp + 0x3c ]
mov edx [ esi + 0xc ]
mov [ esp + 0x4 ] edx
mov eax [ esi + 0x98 ]
mov ebp [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ ecx ] al
mov eax ebx
shr eax 0x10
mov [ ecx + 0x1 ] al
mov [ ecx + 0x2 ] bh
mov [ ecx + 0x3 ] bl
push 0x4
push ecx
push edx
call [ ebp + 0x8 ]
add esp 0xc
push ebx
push edi
mov edi esi
push [ esp + 0xc ]
mov ebx [ esp + 0x14 ]
call [ ebp + 0x8 ]
add esp 0xc
mov eax [ edi + 0x9c ]
push [ ebx + 0x7c ]
push [ ebx + 0x68 ]
push eax
call [ eax ]
add esp 0xc
mov [ ebx + 0x88 ] eax
lea eax [ esp + 0x30 ]
push eax
push [ ebx + 0x90 ]
call sub_464eb4
add esp 0x8
mov esi eax
test esi esi
je r-xdata
push r--data
jmp r-xdata
lea eax [ ebp + 0x7c ]
lea edx [ ebp + 0x68 ]
mov ecx ebx
push eax
call sub_44dc49
add esp 0x4
mov esi [ ebp + 0x68 ]
mov edi [ esp ]
test esi esi
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp + 0x1c ]
test ecx ecx
je r-xdata
push r--data
jmp r-xdata
push 0x2
mov esi [ esp + 0x4 ]
push [ esi + 0x110 ]
call sub_489d5f
add esp 0x8
lea eax [ ebp + 0x7c ]
lea edx [ ebp + 0x68 ]
mov ecx ebx
push eax
call sub_44dc49
add esp 0x4
mov eax [ ebp + 0x68 ]
test eax eax
je r-xdata
mov eax [ edi + 0x248 ]
inc esi
cmp esi 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_410154 ]
mov edx eax
call sub_44e0cb
cmp edi 0x4
jne r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
jmp r-xdata
cmp [ ebp + 0x148 ] 0x0
je r-xdata
mov edx [ ebp + 0x4c ]
test edx edx
je r-xdata
mov ecx [ edx + 0x28 ]
push esi
push r--data
push edi
call sub_447e12
add esp 0xc
mov [ edi + 0x184 ] 0x4
push eax
call sub_464da1
add esp 0x4
push esi
push eax
push r--data
push edi
call sub_447e12
add esp 0x10
mov [ edi + 0x184 ] 0x3
push [ edi + 0x98 ]
call sub_464dae
add esp 0x4
test eax eax
mov [ ebp + 0x90 ] eax
je r-xdata
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ edi + 0x84 ]
test eax eax
je r-xdata
mov [ edi + 0x64 ] eax
call [ eax ]
mov [ edi + 0x6c ] eax
mov esi [ esp ]
test [ esi + 0x50 ] 0x40
jne r-xdata
cmp [ ebp + 0x12c ] 0x0
je r-xdata
mov [ ebp ] 0x1dfd
jmp r-xdata
xor eax eax
mov [ ecx + 0x238 ] 0x1
xor edx edx
push eax
push eax
call sub_44e4fe
add esp 0x8
xor esi esi
mov [ edi + 0x184 ] esi
mov [ ebp + 0xd4 ] esi
mov esi eax
mov edx [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0xc ]
mov eax [ esp + 0xc ]
push [ eax ]
call sub_44e23d
add esp 0x4
mov [ esp + 0x4 ] esi
mov eax [ esi ]
mov eax [ eax + 0xc ]
cmp [ eax + 0x14 ] 0x41
jb r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
push [ ebx + 0x90 ]
call j_sub_4631d0
add esp 0x4
push r--data
call sub_43f758
add esp 0x4
mov ecx edi
mov edx eax
call sub_44e0cb
mov [ ebx ] 0x0
jmp r-xdata
lea eax [ edi + 0xc ]
lea ecx [ edi + 0x98 ]
lea edx [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
mov ebx [ edx ]
mov ebp [ eax ]
mov [ esp + 0x4 ] ecx
mov eax [ ecx ]
mov edi [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ esp + 0x3c ] al
mov eax ebx
shr eax 0x10
mov [ esp + 0x3d ] al
mov [ esp + 0x3e ] bh
mov [ esp + 0x3f ] bl
push 0x4
lea eax [ esp + 0x40 ]
push eax
push ebp
call [ edi + 0x8 ]
add esp 0xc
push ebx
push esi
push ebp
call [ edi + 0x8 ]
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x5c ]
lea eax [ esp + 0x2c ]
lea esi [ esp + 0x30 ]
mov edx esi
push eax
call sub_44dc49
add esp 0x4
mov edi [ esi ]
test edi edi
je r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
mov ebx [ ebp + 0x7c ]
lea ecx [ esp + 0x3c ]
mov edi [ eax + 0xc ]
mov eax [ esp ]
mov eax [ eax + 0x98 ]
mov ebp [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ ecx ] al
mov eax ebx
shr eax 0x10
mov [ ecx + 0x1 ] al
mov [ ecx + 0x2 ] bh
mov [ ecx + 0x3 ] bl
push 0x4
push ecx
push edi
call [ ebp + 0x8 ]
add esp 0xc
push ebx
push esi
push edi
mov edi [ esp + 0xc ]
call [ ebp + 0x8 ]
mov ebp [ esp + 0x14 ]
add esp 0xc
mov eax [ edi + 0x9c ]
push [ ebp + 0x7c ]
push [ ebp + 0x68 ]
push eax
call [ eax ]
add esp 0xc
mov ecx [ esp + 0x5c ]
mov [ ebp + 0x88 ] eax
lea ebx [ esp + 0x3c ]
lea eax [ ebp + 0x84 ]
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
mov esi [ ebx ]
test esi esi
je r-xdata
push eax
push ecx
call sub_46157b
add esp 0x8
mov [ edi + 0xe8 ] eax
mov [ ebp + 0x38 ] 0x20
mov [ ebp + 0x3c ] 0x21
jmp r-xdata
push r--data
jmp r-xdata
mov ecx [ esi + 0x9c ]
push [ ebp + 0x7c ]
push eax
push ecx
call [ ecx ]
add esp 0xc
mov ecx ebx
mov [ ebp + 0x88 ] eax
call sub_44e1f4
test eax eax
mov [ ebp + 0x28 ] eax
je r-xdata
push esi
push 0x1f
push eax
call sub_4319e9
add esp 0xc
cmp eax 0x6
ja r-xdata
push 0x17
push eax
call sub_43194f
add esp 0x8
test eax eax
mov eax r--data
mov ecx r--data
cmovne ecx eax
xor eax eax
inc eax
mov [ ebp + 0x128 ] ecx
xor ecx ecx
mov [ edi + 0x164 ] eax
mov [ edi + 0x694 ] eax
lea eax [ ebp + 0x14c ]
cmp esi 0x5
jg r-xdata
cmp edi 0x5
jne r-xdata
mov eax [ esp + 0x28 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
lea eax [ ebp + 0x10 ]
call sub_44a668
add esp 0xc
mov [ ebp ] esi
jmp r-xdata
cmp ecx eax
cmovge eax ecx
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x98 ]
mov ecx [ ecx + 0xc ]
mov ecx [ ecx + 0x14 ]
shl ecx 0x3
cmp eax ecx
cmovle ecx eax
mov [ ebp + 0x4 ] ecx
push [ edi + 0x98 ]
call sub_461508
add esp 0x4
test eax eax
je r-xdata
mov eax [ edx + 0x28 ]
push r--data
jmp r-xdata
lea ecx [ esp + 0x3c ]
push ecx
push eax
call sub_464eb4
add esp 0x8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ ebp + 0x54 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x74 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
push edi
push r--data
push esi
call sub_447e12
add esp 0xc
xor eax eax
mov [ esi + 0x688 ] eax
mov [ esi + 0x684 ] eax
push 0x1a
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
push esi
call sub_447e12
add esp 0xc
xor ebx ebx
mov edi esi
jmp r-xdata
mov [ ebp + 0x12c ] 0x1
cmp [ ebp + 0x130 ] 0x0
je r-xdata
push 0x1e15
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea esi [ ebp + 0x94 ]
push esi
push [ ebx ]
call [ eax + 0xc ]
add esp 0x8
mov [ edi + 0xe8 ] 0x0
mov eax [ ebp + 0x88 ]
test eax eax
je r-xdata
push 0x1c96
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov eax [ eax + 0xc ]
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
jmp r-xdata
lea eax [ edi + 0x9c ]
lea edx [ ebp + 0x134 ]
lea ecx [ ebp + 0x78 ]
lea ebx [ ebp + 0x74 ]
lea esi [ ebp + 0x88 ]
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] edx
push r--data
call sub_43f758
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x2c ]
mov esi [ eax ]
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov ebp [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ esp + 0x3c ] al
mov eax ebx
shr eax 0x10
mov [ esp + 0x3d ] al
mov [ esp + 0x3e ] bh
mov [ esp + 0x3f ] bl
push 0x4
lea eax [ esp + 0x40 ]
push eax
push esi
call [ ebp + 0x8 ]
add esp 0xc
push ebx
push edi
push esi
call [ ebp + 0x8 ]
add esp 0xc
push ebx
push edi
mov ebp [ esp + 0x10 ]
push [ ebp + 0x90 ]
call sub_464fab
add esp 0xc
test eax eax
mov [ ebp + 0x2c ] eax
je r-xdata
push r--data
jmp r-xdata
push 0x1
push [ ebp + 0x84 ]
call sub_43f807
add esp 0x8
mov [ ebp + 0x70 ] eax
push [ ebp + 0x84 ]
push esi
push eax
call sub_49a1f0
add esp 0xc
push [ ebp + 0x84 ]
push [ ebp + 0x70 ]
call sub_46b4ef
add esp 0x8
test eax eax
mov [ ebp + 0x8c ] eax
je r-xdata
mov eax [ edi + 0x98 ]
mov eax [ eax + 0xc ]
push [ eax + 0x18 ]
push r--data
push edi
call sub_447e12
add esp 0xc
push 0x2
push [ edi + 0x110 ]
call sub_489d5f
add esp 0x8
mov eax [ ebp + 0x4 ]
add eax eax
push eax
push [ edi + 0xe8 ]
call sub_461624
add esp 0x8
mov [ ebp + 0x24 ] eax
mov ecx [ ebp + 0x38 ]
call sub_448c44
mov esi eax
lea edx [ esp + 0x3c ]
mov [ ebp + 0x13c ] esi
mov ecx [ ebp + 0x24 ]
call sub_44e2b0
mov edx [ esi ]
mov ecx esi
mov ebx eax
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx ebx
mov [ ecx + eax - 0x4 ] 0x0
mov ecx esi
mov eax [ esi ]
mov [ esi + 0x18 ] eax
lea eax [ esp + 0x3c ]
push [ eax ]
call sub_44a58f
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
mov edx [ ebp + 0x13c ]
mov ecx edi
call sub_44a75f
push 0x1
push [ edi + 0x110 ]
call sub_489d5f
add esp 0x8
call sub_43f758
add esp 0x4
push r--data
jmp r-xdata
mov eax ebp
lea edx [ ebp + 0x6c ]
mov ecx ebx
sub eax 0xffffff80
push eax
call sub_44dc49
add esp 0x4
cmp [ ebp + 0x6c ] 0x0
je r-xdata
mov [ eax + edx ] 0x0
add edx 0xc
cmp edx 0xc0
jne r-xdata
inc ecx
add eax 0xc0
cmp ecx 0x8
jne r-xdata
mov eax [ ebp + 0x108 ]
lea ecx [ eax + 0x1 ]
mov [ ebp + 0x108 ] ecx
mov [ ebp + eax * 4 + 0x10c ] 0x0
jmp r-xdata
mov [ esp + 0x1c ] 0x0
mov eax [ ebp + 0x4c ]
mov cl 0x1
mov [ esp + 0x1c ] ecx
test eax eax
je r-xdata
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ edi + 0x184 ] 0x1
push [ edi + 0x98 ]
call sub_461518
add esp 0x4
mov [ edi + 0xe8 ] eax
mov [ ebp + 0x38 ] 0x1e
mov [ ebp + 0x3c ] 0x1f
mov eax [ edi + 0x98 ]
push [ eax + 0x4 ]
push r--data
push edi
call sub_447e12
add esp 0xc
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ edi + 0x184 ] 0x2
mov eax [ ebp + 0x4 ]
lea ecx [ eax - 0x1 ]
sar ecx 0x1f
shr ecx 0x1a
lea ecx [ eax + ecx - 0x1 ]
mov eax 0x200
shr ecx 0x6
shl eax cl
mov ecx 0x400
cmp eax 0x3ff
cmovg ecx eax
mov eax 0x2000
cmp ecx 0x2001
cmovl eax ecx
mov [ ebp + 0x8 ] eax
test [ edi + 0x51 ] 0x10
jne r-xdata
push [ ebp + 0x90 ]
call j_sub_4631d0
add esp 0x4
push r--data
jmp r-xdata
mov ecx 0x1e
call sub_448c44
mov ebx edi
mov edi eax
mov [ ebp + 0x13c ] edi
mov ecx edi
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx esi
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ edi ]
mov [ edi + 0x18 ] eax
mov ecx [ ebp + 0x13c ]
push [ esp + 0x3c ]
call sub_44a58f
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov edx [ ebp + 0x13c ]
mov ecx ebx
call sub_44a75f
jmp r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ edi + 0x260 ] 0x1
mov eax [ ebp + 0x48 ]
push edi
push sub_44e1b5
push [ eax + 0x20 ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ ebp + 0x140 ] eax
js r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
jmp r-xdata
mov eax [ edi + 0x94 ]
test eax eax
je r-xdata
mov [ edi + 0x74 ] eax
mov ecx [ ebp + 0x5c ]
mov [ edi + 0x7c ] ecx
push [ edi + 0x6c ]
call [ eax ]
add esp 0x4
mov [ edi + 0x84 ] eax
push 0x1a
mov esi [ esp + 0x4 ]
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
imul eax eax 0xea60
push esi
push sub_44e4a7
push eax
call sub_47d9f4
add esp 0xc
mov [ esi + 0x698 ] eax
jmp r-xdata
mov [ ebp + 0x130 ] 0x0
push r--data
jmp r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edi + 0x9c ]
mov edx [ edx ]
mov edx [ edx + 0xc ]
push [ edx + 0x14 ]
push esi
push [ ebp + 0x80 ]
push [ ebp + 0x6c ]
push eax
call [ ecx + 0x28 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
push [ esi ]
call [ eax + 0x4 ]
add esp 0x4
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx eax
call sub_44e0cb
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push [ ebp + 0x90 ]
call j_sub_4631d0
add esp 0x4
push r--data
jmp r-xdata
mov ecx [ esp + 0x5c ]
mov eax ebp
lea edx [ ebp + 0x6c ]
sub eax 0xffffff80
push eax
call sub_44dc49
add esp 0x4
cmp [ ebp + 0x6c ] 0x0
mov edi [ esp ]
je r-xdata
push [ ebp + 0x70 ]
call sub_43f9d4
add esp 0x4
push r--data
jmp r-xdata
mov eax [ ebp + 0x70 ]
mov ecx ebx
mov [ esp + 0x4 ] eax
mov ebx [ ebp + 0x84 ]
mov eax [ edi + 0x98 ]
mov esi [ edi + 0xc ]
mov ebp [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ esp + 0x3c ] al
mov eax ebx
shr eax 0x10
mov [ esp + 0x3d ] al
mov [ esp + 0x3e ] bh
mov [ esp + 0x3f ] bl
push 0x4
push ecx
push esi
call [ ebp + 0x8 ]
add esp 0xc
push ebx
push [ esp + 0x8 ]
push esi
call [ ebp + 0x8 ]
add esp 0xc
mov esi [ esp + 0x8 ]
push [ esi + 0x8c ]
call sub_46b516
add esp 0x4
mov ecx [ edi + 0x98 ]
mov ebp eax
mov ecx [ ecx + 0xc ]
mov ecx [ ecx + 0x14 ]
mov [ esp + 0xc ] eax
shl ecx 0x4
sub ebp ecx
neg ecx
add ebp 0xffffffcf
lea eax [ eax + ecx - 0x32 ]
push eax
call sub_45b936
add esp 0x4
test ebp ebp
mov [ esi + 0x2c ] eax
jle r-xdata
push r--data
push [ ebp + 0x28 ]
push [ esi + 0xe8 ]
call sub_461760
add esp 0x8
test eax eax
je r-xdata
xor edx edx
mov [ esp + 0x14 ] ebx
mov eax [ ebp + 0xd4 ]
test eax eax
jle r-xdata
push [ esp + 0x4 ]
push [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
push [ eax * 4 + r--data ]
push r--data
call sub_43f758
add esp 0x10
mov edx [ esp + 0x4 ]
mov ecx edi
push [ esp + 0xc ]
call sub_44e107
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x34 ]
mov ebx [ esp + 0x8 ]
mov esi edi
mov [ esp + 0x18 ] edi
or esi 0x1
xor ebp ebp
dec ebp
mov [ esp + 0xc ] eax
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
mov [ ebp + 0x50 ] eax
xor ecx ecx
cmp [ eax + 0x28 ] 0x0
setne cl
mov [ ebp + 0x58 ] ecx
jmp r-xdata
mov [ edi + 0x260 ] 0x1
cmp [ edi + 0x6c8 ] 0x0
jle r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov ecx 0x1e
call sub_448c44
mov esi eax
lea eax [ ebp + 0x13c ]
mov [ esp + 0xc ] eax
mov [ ebp + 0x13c ] esi
mov ecx esi
mov ebx [ ebp + 0x8 ]
mov eax ebx
mov edi ebx
shr eax 0x10
shr edi 0x18
mov [ esp + 0x4 ] eax
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov edx edi
mov ecx 0x22
call sub_448c44
lea ecx [ ebp + 0x13c ]
mov esi eax
mov [ esp + 0xc ] ecx
mov [ ebp + 0x13c ] esi
mov ecx esi
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x40000
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x13c ]
mov eax ebx
mov edi ebx
mov ecx esi
shr eax 0x18
shr edi 0x10
mov [ esp + 0x4 ] eax
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov esi [ ebp + 0x13c ]
mov edx [ esi ]
mov ecx esi
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov bh 0x20
xor edx edx
mov [ esp + 0x4 ] 0x0
mov bl dl
jmp r-xdata
mov [ edi + 0x260 ] 0x1
mov eax [ ebp + 0x4c ]
push edi
push sub_44e1b5
push [ eax + 0x20 ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ ebp + 0x140 ] eax
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ ebp + 0x64 ]
mov [ edi + 0x8c ] eax
call [ eax + 0x14 ]
mov [ edi + 0x94 ] eax
mov eax [ edi + 0x64 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x8c ]
push eax
call [ ecx + 0x18 ]
add esp 0x4
push r--data
jmp r-xdata
lea eax [ ebp + 0x88 ]
mov [ esp + 0x10 ] eax
lea eax [ edi + 0x9c ]
mov [ esp + 0x4 ] eax
mov eax [ eax ]
push [ ebp + 0x88 ]
call [ eax + 0x8 ]
add esp 0x4
mov esi eax
lea ebx [ ebp + 0x134 ]
mov [ ebp + 0x74 ] esi
cmp [ ebp + 0x134 ] 0x0
je r-xdata
mov ecx 0x15
call sub_448c44
mov ecx edi
mov edx eax
mov [ ebp + 0x13c ] eax
call sub_44a75f
mov [ edi + 0x688 ] 0x0
mov eax [ edi + 0x68 ]
test eax eax
je r-xdata
mov eax [ esp ]
lea esi [ ebp + 0x94 ]
mov ecx 0x10
lea edi [ eax + 0xa4 ]
[ edi ] [ esi ]
mov edi [ esp ]
mov eax [ edi + 0x98 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x14 ]
cmp eax 0x41
mov [ edi + 0xe4 ] eax
jb r-xdata
push r--data
jmp r-xdata
lea eax [ ebp + 0x2c ]
mov [ esp + 0xc ] eax
push [ ebp + 0x90 ]
call j_sub_4631d0
jmp r-xdata
lea ebx [ esp + 0x30 ]
mov ecx eax
mov edx ebx
call sub_44e2b0
mov ebx [ ebx ]
xor ebp ebp
mov esi eax
inc ebp
mov [ esp + 0x10 ] esi
lea eax [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
push ebp
push eax
call sub_43f807
add esp 0x8
mov ecx ebx
mov [ esp + 0x4 ] eax
shr ecx 0x18
mov [ eax ] cl
mov ecx ebx
shr ecx 0x10
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bh
mov [ eax + 0x3 ] bl
lea ecx [ eax + 0x4 ]
push ebx
push esi
push ecx
call sub_49a1f0
add esp 0xc
mov ecx [ esp + 0xc ]
lea eax [ ecx + 0x7 ]
sar eax 0x1f
shr eax 0x1d
lea edi [ ecx + eax + 0x7 ]
sar edi 0x3
push ebp
push edi
call sub_43f807
add esp 0x8
mov ebp [ esp ]
mov [ esp + 0xc ] eax
mov esi [ esp + 0x8 ]
mov ecx [ ebp + 0x98 ]
push [ esi + 0x8c ]
push edi
push eax
push [ esp + 0x20 ]
push [ esp + 0x14 ]
push [ ecx + 0xc ]
call sub_46b526
add esp 0x18
mov ecx 0x1f
call sub_448c44
mov ebx eax
mov [ esi + 0x13c ] ebx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
mov ecx [ esi + 0x13c ]
mov edx [ esp + 0xc ]
push edi
call sub_44a58f
add esp 0x4
mov edx [ esi + 0x13c ]
mov ecx ebp
call sub_44a75f
mov eax [ ebp + 0x98 ]
mov ecx edi
mov edx [ ebp + 0xc ]
mov esi ecx
mov ebx [ eax + 0xc ]
mov eax ecx
shr eax 0x18
mov [ esp + 0x3c ] al
mov eax ecx
shr eax 0x10
mov [ esp + 0x3d ] al
mov eax 0x4
mov [ esp + 0x3e ] ch
mov [ esp + 0x3f ] cl
push eax
lea eax [ esp + 0x40 ]
push eax
mov edi edx
push edi
call [ ebx + 0x8 ]
add esp 0xc
push esi
mov esi [ esp + 0x10 ]
push esi
push edi
call [ ebx + 0x8 ]
add esp 0xc
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esp + 0x10 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x8 ]
push [ esi + 0x8c ]
call sub_46b505
add esp 0x4
mov ebp esi
jmp r-xdata
xor esi esi
xor ebx ebx
push [ ebp + 0x28 ]
push [ esi + 0xe8 ]
call sub_4617bb
add esp 0x8
mov [ ebp + 0x2c ] eax
push 0x0
push [ esi + 0x110 ]
call sub_489d5f
add esp 0x8
mov eax [ esp ]
mov edi [ ebp + 0x68 ]
mov ebx [ ebp + 0x7c ]
lea ecx [ esp + 0x3c ]
lea eax [ eax + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ esp ]
mov esi [ eax + 0xc ]
mov eax [ esp ]
mov eax [ eax + 0x98 ]
mov ebp [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ ecx ] al
mov eax ebx
shr eax 0x10
mov [ ecx + 0x1 ] al
mov eax [ esp ]
mov [ ecx + 0x2 ] bh
mov [ ecx + 0x3 ] bl
lea eax [ eax + 0x98 ]
mov [ esp + 0x4 ] eax
push 0x4
push ecx
push esi
call [ ebp + 0x8 ]
add esp 0xc
push ebx
push edi
mov edi [ esp + 0x8 ]
push esi
call [ ebp + 0x8 ]
mov ebp [ esp + 0x14 ]
add esp 0xc
push [ edi + 0x98 ]
call sub_461508
add esp 0x4
test eax eax
je r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
mov ebp [ esp + 0x8 ]
cmp [ ebp + 0x134 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
xor edx edx
xor ebp ebp
lea edi [ ecx + 0x14c ]
cmp [ esp + 0x18 ] 0x1
ja r-xdata
cmp esi 0x7
jne r-xdata
mov ebp [ esp + 0x8 ]
xor ecx ecx
mov [ ebp + 0x54 ] eax
cmp [ eax + 0x28 ] 0x0
setne cl
mov [ ebp + 0x5c ] ecx
jmp r-xdata
inc edi
mov ecx ebx
lea edx [ esp + 0x38 ]
push esi
call sub_44dc49
add esp 0x4
mov eax [ esp + 0x38 ]
add [ esp + 0x10 ] 0xc0
test eax eax
mov [ esp + 0x4 ] eax
jne r-xdata
xor esi esi
xor ebx ebx
xor esi esi
mov eax [ esi + 0x10 ]
mov ecx [ esi ]
mov [ eax + ecx - 0x4 ] dl
mov edx [ esp + 0x4 ]
mov [ eax + ecx - 0x3 ] dl
mov [ eax + ecx - 0x2 ] bh
mov [ eax + ecx - 0x1 ] bl
mov eax [ esp + 0xc ]
mov ecx [ esp ]
mov edx [ eax ]
call sub_44a75f
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x74 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x2c ]
lea esi [ ebp + 0x94 ]
mov ecx edi
push [ eax + 0x2c ]
push 0x44
push esi
call sub_44e34d
add esp 0xc
mov edi eax
mov eax [ esp ]
mov eax [ eax + 0x64 ]
push edi
mov ecx [ esp + 0x4 ]
push [ ecx + 0x6c ]
call [ eax + 0xc ]
add esp 0x8
mov eax [ esp ]
mov eax [ eax + 0x64 ]
push [ eax + 0x2c ]
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov eax [ esp ]
mov edx [ ebp + 0x2c ]
mov ecx [ esp ]
mov eax [ eax + 0x64 ]
push [ eax + 0x24 ]
push 0x42
push esi
call sub_44e34d
add esp 0xc
mov edi eax
mov eax [ esp ]
mov eax [ eax + 0x64 ]
push edi
mov ecx [ esp + 0x4 ]
push [ ecx + 0x6c ]
call [ eax + 0x8 ]
add esp 0x8
mov eax [ esp ]
mov eax [ eax + 0x64 ]
push [ eax + 0x24 ]
push edi
call sub_48f5d3
add esp 0x8
push edi
mov edi [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
lea eax [ ebp + 0x74 ]
mov [ esp + 0xc ] ebx
xor edi edi
xor ebx ebx
xor ebp ebp
mov [ esp + 0x14 ] eax
cmp [ edi + 0x6cc ] 0x0
je r-xdata
mov eax [ ebp + 0x48 ]
test eax eax
mov [ edi + 0x60 ] eax
je r-xdata
mov ecx [ edi + 0x60 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov [ ebx ] 0x1
push 0x1d2b
push r--data
push r--data
call sub_4a509d
add esp 0xc
add esp 0x4
mov eax esi
shr eax cl
and eax 0x1
push eax
push ebx
mov eax [ esp + 0x10 ]
push [ eax + 0x2c ]
call sub_45b9c6
add esp 0xc
inc ebx
cmp ebp ebx
jne r-xdata
mov esi ecx
call sub_469c4e
mov ecx esi
mov esi eax
mov eax [ edi + 0x98 ]
mov edx [ edi + 0xc ]
lea esi [ ebp + 0x2c ]
mov ecx [ eax + 0xc ]
push [ ebp + 0x24 ]
call sub_44e23d
add esp 0x4
mov eax [ edi + 0x98 ]
mov edx [ edi + 0xc ]
mov ecx [ eax + 0xc ]
push [ ebp + 0x28 ]
call sub_44e23d
add esp 0x4
push [ edi + 0xe8 ]
call sub_4615d8
add esp 0x4
push [ ebp + 0x28 ]
call sub_45b91a
add esp 0x4
push [ edi + 0x98 ]
call sub_461508
add esp 0x4
test eax eax
mov [ esp + 0xc ] esi
je r-xdata
test [ edi + 0x51 ] 0x10
jne r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp + 0xf0 ] 0x0
mov edi [ esp ]
jle r-xdata
mov esi [ esp ]
cmp [ esi + 0x98 ] 0x0
jne r-xdata
xor ebp ebp
inc ebp
cmp [ ebx ] 0x0
jle r-xdata
mov edi [ esp + 0x18 ]
lea esi [ esp + 0x34 ]
cmp edi 0x3
ja r-xdata
cmp ebp 0xffffffff
je r-xdata
inc ebp
add ebx 0xc
cmp ebp 0xf
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + eax - 0x4 ]
mov ecx [ eax + 0x4 ]
push [ esp + 0xc ]
call sub_44e107
add esp 0x4
test eax eax
je r-xdata
push edi
push sub_44e1b5
push ecx
push r--data
push eax
call sub_484828
add esp 0x14
mov [ ebp + 0x140 ] eax
push edi
push sub_44e1b5
push esi
push ecx
push eax
call sub_48488b
add esp 0x14
mov [ ebp + 0x140 ] eax
push esi
call sub_43f9d4
add esp 0x4
mov eax [ ebp + 0x140 ]
jmp r-xdata
mov ebp [ esp + 0x8 ]
jmp r-xdata
cmp eax [ edi * 8 + r--data ]
je r-xdata
mov eax [ edi + 0x64 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x2c ]
lea esi [ ebp + 0x94 ]
mov ecx edi
push [ eax + 0x30 ]
push 0x46
push esi
call sub_44e34d
add esp 0xc
mov edi eax
mov eax [ esp ]
mov eax [ eax + 0x74 ]
push edi
mov ecx [ esp + 0x4 ]
push [ ecx + 0x84 ]
call [ eax + 0x8 ]
add esp 0x8
mov eax [ esp ]
mov eax [ eax + 0x74 ]
push [ eax + 0x30 ]
push edi
call sub_48f5d3
add esp 0x8
push edi
mov edi [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
inc ebp
cmp ebp 0x6
jne r-xdata
mov ecx [ esp ]
xor edx edx
mov ecx [ ecx + 0x6c8 ]
test ecx ecx
jle r-xdata
push esi
push [ edi + 0xa0 ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push [ ebp + 0x88 ]
push [ edi + 0x9c ]
call sub_46982f
add esp 0x8
mov [ ebp + 0x78 ] eax
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ ebp + 0x78 ]
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ ebp + 0x78 ]
call sub_43f9d4
add esp 0x4
mov eax [ edi + 0x9c ]
push [ ebp + 0x74 ]
push [ eax + 0x34 ]
push [ edi + 0xfc ]
push [ edi + 0xf8 ]
call sub_494b46
add esp 0x10
mov [ edi + 0x6cc ] 0x0
mov eax [ ebp + 0x74 ]
mov [ edi + 0xa0 ] eax
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
call [ eax ]
mov [ edi + 0x68 ] eax
mov ecx ebx
and ecx 0x7
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x2c ]
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
push [ ebp + 0x20 ]
call sub_45b91a
add esp 0x4
push [ ebp + 0x1c ]
call sub_45b91a
mov eax [ ebp + 0x8 ]
mov edx [ edi + 0x98 ]
mov ecx [ edi + 0xc ]
mov ebx eax
mov edx [ edx + 0xc ]
shr ebx 0x18
mov [ esp + 0x3c ] bl
mov ebx eax
shr ebx 0x10
mov [ esp + 0x3d ] bl
mov [ esp + 0x3e ] ah
mov [ esp + 0x3f ] al
push 0x4
lea ebx [ esp + 0x40 ]
push ebx
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov al 0x10
mov esi [ esp + 0x10 ]
test [ edi + 0x51 ] al
jne r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
mov ecx [ ecx ]
mov eax [ eax ]
mov ecx [ ecx + 0xc ]
mov [ esp + 0x3c ] 0x40000
push 0x4
lea edx [ esp + 0x40 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ esp + 0xc ] 0x2
lea eax [ ebp + 0x20c ]
mov ecx ebp
xor ebp ebp
mov [ esp + 0xc ] 0x0
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x9c ]
lea ecx [ ebp + 0x20c ]
mov edx [ eax + 0x30 ]
call sub_44e093
mov ecx [ esi + 0x9c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
push 0x19bf
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0x8 ]
mov ebx [ ecx + edx * 4 + 0xd8 ]
test ebx ebx
je r-xdata
inc edx
cmp edx eax
jl r-xdata
xor esi esi
mov [ esp + 0x4 ] edx
mov ebp [ esp + 0x8 ]
cmp edi 0x4
jne r-xdata
mov ebp [ esp + 0x8 ]
jmp [ edi * 4 + jump_table_410170 ]
mov edx [ esp + 0x4 ]
mov ecx edi
push [ esp + 0xc ]
call sub_44e16b
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x144 ] 0x0
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edi [ ebx + eax - 0x8 ]
test edi edi
je r-xdata
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x130 ] 0x1
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
jns r-xdata
mov edi [ esp ]
inc ebx
cmp ebx [ edi + 0x6c8 ]
jl r-xdata
mov eax [ edi * 8 + r--data ]
mov ebp [ esp + 0x8 ]
test esi esi
mov eax [ eax + 0x30 ]
je r-xdata
cmp ebp 0x3
jle r-xdata
mov eax [ edi + 0x74 ]
test eax eax
je r-xdata
push [ eax + 0x34 ]
push r--data
push edi
call sub_447e12
add esp 0xc
mov eax [ ebp * 8 + r--data ]
mov ecx [ esp + 0x4 ]
cmp eax [ ecx ]
je r-xdata
mov esi [ esp ]
test edi edi
je r-xdata
cmp edx ecx
jge r-xdata
mov esi [ esp ]
cmp [ esi + edx * 4 + 0x6b0 ] ebp
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
jmp r-xdata
push r--data
jmp r-xdata
mov eax [ ebp + 0x50 ]
mov [ edi + 0x70 ] eax
test eax eax
mov ecx [ ebp + 0x58 ]
mov [ edi + 0x78 ] ecx
je r-xdata
mov ecx [ edi + 0x70 ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov ebx [ esp + 0x4 ]
mov edx [ esi ]
mov eax [ ebx ]
mov ecx [ eax + 0xc ]
push [ ebp + 0x1c ]
call sub_44e23d
add esp 0x4
mov eax [ ebx ]
mov edx [ esi ]
mov ecx [ eax + 0xc ]
push [ ebp + 0x20 ]
call sub_44e23d
add esp 0x4
mov ecx [ esp + 0x4 ]
mov eax [ esi ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xc ]
mov [ esp + 0x3c ] 0x200000
push 0x4
push ebx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ esp + 0xc ]
mov ecx eax
inc ecx
mov eax ecx
cmp ecx 0x4
mov [ esp + 0xc ] eax
jne r-xdata
mov ecx [ esp + 0xc ]
xor ebx ebx
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x6
lea edi [ ebp + ecx + 0x14c ]
xor ecx ecx
cmp [ ebx + r--data ] eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx edi
mov eax [ eax + esi * 4 ]
mov edx [ eax ]
call sub_44e093
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + esi * 4 ]
inc esi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ebp
cmp esi [ ebx ]
jl r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax + 0xd4 ]
jmp r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x450 ]
mov [ ebp + 0x50 ] eax
mov eax [ ebx + 0x454 ]
mov [ ebp + 0x58 ] eax
jmp r-xdata
mov eax [ ebx + 0x150 ]
mov ecx [ esp ]
mov [ ecx + 0x98 ] eax
mov eax [ ebx + 0x154 ]
mov ecx [ esp + 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov edi [ edi + ebx * 4 + 0x6b0 ]
xor ebp ebp
dec ebp
jmp r-xdata
push eax
call sub_43f79e
add esp 0x4
mov esi eax
push 0x0
push eax
push r--data
push esi
call sub_43fa97
add esp 0x10
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov esi edi
jmp r-xdata
inc ebp
push ebp
push 0x19
mov eax [ esp + 0x8 ]
push [ eax + 0x248 ]
call sub_4319e9
add esp 0xc
test eax eax
je r-xdata
mov eax [ edi + 0x8c ]
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x64 ]
xor edx edx
mov esi r--data
cmp [ ecx + 0x38 ] edx
mov ecx r--data
cmove ecx esi
cmp [ edi + 0x7c ] edx
mov edx r--data
cmove edx esi
push ecx
push edx
push [ eax + 0x34 ]
push r--data
push edi
call sub_447e12
add esp 0x14
mov ebp [ esp + 0x8 ]
push [ ebp + 0x88 ]
push [ esi + 0x9c ]
call sub_46982f
add esp 0x8
lea ecx [ ebp + 0x78 ]
mov [ esp + 0x18 ] ecx
mov [ ebp + 0x78 ] eax
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ ebp + 0x78 ]
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ ebp + 0x88 ]
push [ esi + 0x9c ]
push [ ebp + 0x78 ]
push esi
call sub_447e63
add esp 0x10
test eax eax
mov edi esi
mov [ ebp + 0x140 ] eax
je r-xdata
cmp ebx 0x1
mov eax r--data
mov ecx r--data
mov ebx r--data
mov edx r--data
cmovg ecx eax
cmovg edx ebx
push ecx
push edx
push edi
push r--data
push esi
call sub_447e12
add esp 0x14
push edi
call sub_43f9d4
add esp 0x4
mov eax [ eax + 0x30 ]
test edi edi
je r-xdata
inc edx
cmp edx ecx
jl r-xdata
mov esi [ esp + 0x10 ]
mov eax [ edi + 0x90 ]
test eax eax
je r-xdata
push [ edi + 0x68 ]
call [ eax ]
add esp 0x4
mov [ edi + 0x80 ] eax
mov eax [ ebp + 0x108 ]
test eax eax
jle r-xdata
mov eax [ ebp + 0x44 ]
mov esi 0x4
xor ebx ebx
inc ebx
cmp [ esi ] 0x0
jle r-xdata
cmp ebx 0x2c
jne r-xdata
mov esi [ ebx + r--data ]
push [ esi + 0x34 ]
push [ edi + 0xfc ]
push [ edi + 0xf8 ]
call sub_494b22
add esp 0xc
test eax eax
je r-xdata
cmp edi 0x6
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ebx + ecx - 0x4 ]
mov [ ebp + 0x54 ] eax
mov eax [ ebx + ecx ]
mov [ ebp + 0x5c ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ edi + 0x9c ]
mov eax [ edi + 0x110 ]
test esi esi
mov ecx [ ecx + 0x30 ]
je r-xdata
push [ ebp + 0x2c ]
call sub_45b91a
add esp 0x4
push [ edi + 0x110 ]
call sub_489bb6
add esp 0x4
mov eax [ edi + 0x6a0 ]
test eax eax
je r-xdata
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
push r--data
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
jns r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
push eax
push edi
push r--data
call sub_43f758
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x60 ]
mov [ edi + 0x88 ] eax
call [ eax + 0x8 ]
mov [ edi + 0x90 ] eax
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x88 ]
push eax
call [ ecx + 0xc ]
add esp 0x4
inc esi
cmp esi 0x6
jne r-xdata
lea eax [ esi + esi * 2 ]
xor ebx ebx
shl eax 0x6
lea edi [ ebp + eax + 0x14c ]
mov esi [ ebp + ecx * 4 + 0x10c ]
test esi esi
je r-xdata
inc ecx
cmp ecx eax
jl r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ecx
mov eax [ esp + 0x8 ]
add ebx 0x8
mov eax [ eax + ebp * 4 + 0xf4 ]
mov ecx [ esp + 0x8 ]
inc ebp
mov eax [ ecx + 0xf0 ]
cmp ebp eax
jl r-xdata
mov edx [ esi + 0x30 ]
mov ecx [ esp + 0x4 ]
call sub_44e093
mov [ eax + 0x4 ] esi
mov ecx [ esp + 0xc ]
mov [ eax + 0x8 ] ecx
mov eax [ ebx + 0x5d0 ]
mov [ ebp + 0x60 ] eax
jmp r-xdata
cmp edi 0x7
jne r-xdata
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
lea esi [ esp + 0x34 ]
cmp edi 0x6
jle r-xdata
lea esi [ ebx + 0x8 ]
mov [ edi + 0x694 ] 0x0
call [ GetTickCount@IAT ]
mov [ edi + 0x69c ] eax
push 0x1a
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push eax
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ edi + 0x6a0 ] 0x0
xor ebx ebx
jmp r-xdata
push [ ecx ]
call sub_43f9d4
add esp 0x4
mov eax [ ebx ]
mov [ edi + 0xa0 ] eax
mov ebx [ esp + 0xc ]
jmp r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov esi eax
push edi
call sub_43f9d4
add esp 0x4
inc ebx
mov edi esi
mov eax [ edi + 0x70 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x2c ]
mov ecx [ esp ]
lea edi [ ebp + 0x94 ]
push [ eax + 0x2c ]
push 0x43
push edi
call sub_44e34d
add esp 0xc
mov esi eax
mov eax [ esp ]
mov eax [ eax + 0x60 ]
push esi
mov ecx [ esp + 0x4 ]
push [ ecx + 0x68 ]
call [ eax + 0xc ]
add esp 0x8
mov eax [ esp ]
mov eax [ eax + 0x60 ]
push [ eax + 0x2c ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp ]
mov edx [ ebp + 0x2c ]
mov ecx [ esp ]
mov eax [ eax + 0x60 ]
push [ eax + 0x24 ]
push 0x41
push edi
mov edi [ esp + 0xc ]
call sub_44e34d
add esp 0xc
mov esi eax
mov eax [ edi + 0x60 ]
push esi
push [ edi + 0x68 ]
call [ eax + 0x8 ]
add esp 0x8
mov eax [ edi + 0x60 ]
push [ eax + 0x24 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
test eax eax
jle r-xdata
mov esi 0x6
mov eax [ ebp + 0x40 ]
mov ecx edi
mov eax [ eax + ebx * 4 ]
mov edx [ eax + 0x24 ]
call sub_44e093
mov ecx [ ebp + 0x40 ]
mov ecx [ ecx + ebx * 4 ]
inc ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov eax [ ebp + 0x44 ]
cmp ebx eax
jl r-xdata
test eax eax
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx edi
mov eax [ eax + ebp * 4 ]
mov edx [ eax + 0x20 ]
call sub_44e093
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + ebp * 4 ]
inc ebp
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ebx
cmp ebp [ esi ]
jl r-xdata
mov ebp [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov eax [ ebp + 0x108 ]
jmp r-xdata
mov eax [ ecx + ebp * 4 + 0xf4 ]
mov edx [ esp + 0xc ]
mov ecx 0x1
mov ebx 0x4
test eax eax
cmove edx ecx
mov [ esp + 0xc ] edx
jmp r-xdata
test eax eax
mov ebp ecx
jle r-xdata
jmp r-xdata
jmp r-xdata
cmp [ esi ] 0x14
jne r-xdata
push 0x1a
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
imul eax eax 0xea60
push edi
push sub_44e4a7
push eax
call sub_47d9f4
add esp 0xc
mov [ edi + 0x698 ] eax
jmp r-xdata
mov [ edi + 0x260 ] 0x1
mov eax [ edi + 0x9c ]
push edi
push sub_44e1b5
push [ ebp + 0x78 ]
push [ ebp + 0x74 ]
push [ eax + 0x34 ]
push [ edi + 0xfc ]
push [ edi + 0xf8 ]
push [ edi + 0x110 ]
call sub_4846a7
add esp 0x20
test eax eax
mov [ ebp + 0x140 ] eax
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x2c ]
lea esi [ ebp + 0x94 ]
mov ecx edi
push [ eax + 0x30 ]
push 0x45
push esi
call sub_44e34d
add esp 0xc
mov esi eax
mov eax [ edi + 0x70 ]
push esi
push [ edi + 0x80 ]
call [ eax + 0x8 ]
add esp 0x8
mov eax [ edi + 0x70 ]
push [ eax + 0x30 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov ebx 0xfffffff8
mov eax [ ebp + 0x128 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
xor ebx ebx
xor esi esi
xor ebx ebx
mov eax [ ebx + 0x690 ]
lea esi [ esp + 0x34 ]
mov [ ebp + 0x64 ] eax
mov ebx [ esp + 0x14 ]
cmp [ ebp + 0x130 ] 0x0
je r-xdata
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x70 ]
test eax eax
je r-xdata
push [ eax + 0x34 ]
push r--data
push edi
call sub_447e12
add esp 0xc
add ebx 0x4
jne r-xdata
mov edx [ ebp + 0x4 ]
test edx edx
je r-xdata
mov ecx edi
call sub_44e093
mov ecx [ ebp + 0x128 ]
mov [ eax + 0x4 ] ecx
inc ebx
cmp ebx eax
jl r-xdata
mov ecx edi
call sub_44e093
mov ecx [ ebp + 0x40 ]
mov ecx [ ecx + ebx * 4 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov eax [ ebp + 0x44 ]
cmp [ ebp + r--data ] eax
jne r-xdata
lea edi [ esp + 0x38 ]
mov ecx ebx
mov edx edi
push esi
call sub_44dc49
add esp 0x4
mov ecx ebx
mov edx edi
push esi
call sub_44dc49
add esp 0x4
mov eax [ ebx + 0x18 ]
cmp [ ebx ] eax
jle r-xdata
push r--data
mov eax [ esp + 0x4 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ edi + 0x88 ]
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x60 ]
xor edx edx
mov esi r--data
cmp [ ecx + 0x38 ] edx
mov ecx r--data
cmove ecx esi
cmp [ edi + 0x78 ] edx
mov edx r--data
cmove edx esi
push ecx
push edx
push [ eax + 0x34 ]
push r--data
push edi
call sub_447e12
add esp 0x14
mov ebp [ ebx + r--data ]
mov ecx edi
mov edx [ ebp ]
call sub_44e093
mov [ eax + 0x4 ] ebp
mov eax [ esp + 0x8 ]
cmp [ eax + 0x12c ] 0x0
je r-xdata
mov ebp [ esp + 0x8 ]
inc esi
cmp esi 0x8
jne r-xdata
mov ecx edi
call sub_44e093
mov [ eax + 0x4 ] ebp
mov ecx [ ebp + 0x40 ]
mov ecx [ ecx + ebx * 4 ]
mov edx [ ecx + 0x28 ]
test edx edx
je r-xdata
cmp ebp 0x2c
jne r-xdata
mov edi [ ebp + r--data ]
mov ecx [ esp + 0x4 ]
mov edx [ edi + 0x30 ]
call sub_44e093
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
xor eax eax
mov ecx [ ebx + 0x14 ]
cmp [ ecx + eax ] 0x0
lea eax [ eax + 0x1 ]
mov [ ebx + 0x18 ] eax
je r-xdata
xor esi esi
mov [ edi + 0x164 ] esi
cmp [ edi + 0x15c ] esi
jle r-xdata
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
mov eax [ ebp + 0x128 ]
mov edx [ eax ]
lea eax [ esi + esi * 2 ]
shl eax 0x6
lea edi [ ebp + eax + 0x14c ]
mov ecx edi
call sub_44e093
mov ecx [ ebp + 0x128 ]
mov [ eax + 0x4 ] ecx
cmp [ ebp + 0x12c ] 0x0
je r-xdata
mov ecx 0x14
call sub_448c44
mov esi 0x10
mov [ ebp + 0x13c ] eax
mov eax [ esp + 0x8 ]
add ebp 0x8
mov eax [ eax + esi * 4 + 0xf4 ]
mov ebp [ esp + 0x8 ]
inc esi
cmp esi [ ebp + 0xf0 ]
jl r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
cmp [ ebp + 0x144 ] 0x0
sete al
jmp r-xdata
mov ecx edi
mov [ edi + 0x15c ] 0x0
call sub_44a98e
mov eax [ edi + 0x158 ]
mov ecx edi
mov edx [ eax + esi * 4 ]
push 0x0
call sub_44a8af
add esp 0x4
inc esi
cmp esi [ edi + 0x15c ]
jl r-xdata
call sub_469c4e
mov edi [ ebp + 0x13c ]
mov ebx eax
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
dec esi
mov [ ecx + eax - 0x1 ] bl
jne r-xdata
mov edi [ ebp + 0x13c ]
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
xor esi esi
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ edi ]
mov [ edi + 0x18 ] eax
lea eax [ ebp + 0x14c ]
mov eax [ ebp + esi * 4 + 0xf4 ]
mov ecx 0x1
mov ebp 0x4
test eax eax
cmove ebx ecx
jmp r-xdata
jmp r-xdata
mov [ edi + 0x260 ] 0x1
mov eax [ edi + 0x98 ]
push edi
push sub_44e1b5
push [ eax ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ ebp + 0x140 ] eax
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov ecx [ esp ]
movzx eax al
mov [ ebp + 0x148 ] eax
mov eax [ ecx + 0x98 ]
mov eax [ eax + 0xc ]
call [ eax ]
mov edi eax
mov eax [ esp ]
mov [ eax + 0xc ] edi
mov eax [ esp ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ecx eax
mov eax [ esp ]
lea esi [ esp + 0x3c ]
mov ebp ecx
mov eax [ eax + 0x98 ]
mov ebx [ eax + 0xc ]
mov eax ecx
shr eax 0x18
mov [ esi ] al
mov eax ecx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] ch
mov [ esi + 0x3 ] cl
push eax
push esi
push edi
call [ ebx + 0x8 ]
add esp 0xc
push ebp
push [ esp + 0x8 ]
push edi
call [ ebx + 0x8 ]
add esp 0xc
mov eax [ esp ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ecx eax
mov eax [ esp ]
mov edi ecx
mov ebx [ eax + 0xc ]
mov eax [ esp ]
mov eax [ eax + 0x98 ]
mov ebp [ eax + 0xc ]
mov eax ecx
shr eax 0x18
mov [ esi ] al
mov eax ecx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] ch
mov [ esi + 0x3 ] cl
push eax
push esi
push ebx
call [ ebp + 0x8 ]
add esp 0xc
push edi
push [ esp + 0x8 ]
push ebx
call [ ebp + 0x8 ]
add esp 0xc
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov ebx [ eax + 0x34 ]
mov eax [ esp ]
mov ebp [ eax + 0xc ]
mov eax [ esp ]
mov eax [ eax + 0x98 ]
mov edi [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ esi ] al
mov eax ebx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] bh
mov [ esi + 0x3 ] bl
push eax
push esi
push ebp
call [ edi + 0x8 ]
add esp 0xc
push ebx
push [ esp + 0x8 ]
push ebp
call [ edi + 0x8 ]
add esp 0xc
mov eax [ esp + 0x8 ]
push [ eax + 0x30 ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x14 ]
mov ebx [ eax ]
mov edi [ eax + 0x14 ]
mov eax [ esp ]
mov ebp [ eax + 0xc ]
mov eax [ esp ]
inc ebx
dec edi
mov eax [ eax + 0x98 ]
mov ecx [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ esi ] al
mov eax ebx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] bh
mov [ esi + 0x3 ] bl
push eax
push esi
push ebp
mov esi ecx
call [ esi + 0x8 ]
add esp 0xc
push ebx
push edi
mov edi [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x14 ]
call [ esi + 0x8 ]
add esp 0xc
cmp [ ebp + 0xc ] 0x0
mov eax [ esp + 0x20 ]
je r-xdata
mov edi [ ebp + 0x13c ]
mov esi [ esp + 0xc ]
mov edx [ edi ]
mov ecx edi
inc esi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ edi ]
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x4 ]
add eax 0xc0
cmp esi 0x8
jne r-xdata
mov ebp [ ebp + 0x13c ]
mov eax [ ebp ]
cmp eax [ ebp + 0x18 ]
jle r-xdata
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
xor ebx ebx
mov [ esp + 0xc ] esi
mov esi eax
mov [ esp + 0x4 ] eax
dec ebx
mov edi [ ebp + 0x13c ]
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
xor esi esi
mov [ ecx + eax - 0x4 ] esi
mov eax [ edi ]
mov [ edi + 0x18 ] eax
mov edi [ ebp + 0x13c ]
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x0
mov edi [ ebp + 0x13c ]
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x4 ] esi
mov eax [ ebp + 0x13c ]
mov eax [ eax ]
add eax 0xfffffffb
xor ecx ecx
inc ecx
mov [ ebp + 0x34 ] eax
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ ebp + 0x30 ] eax
mov ecx [ ebp + 0x13c ]
mov ecx [ ecx + 0x10 ]
add ecx 0x5
push [ ebp + 0x34 ]
push ecx
push eax
call sub_49a1f0
add esp 0xc
mov edi [ esp ]
mov edx [ ebp + 0x13c ]
mov ecx edi
call sub_44a75f
mov ebx [ esp + 0x14 ]
push edi
call sub_4a7f30
add esp 0x4
mov ecx ebp
mov edx edi
push eax
call sub_44a58f
add esp 0x4
mov ebp [ esp + 0x8 ]
inc ebx
add esi 0xc
cmp ebx 0xf
jl r-xdata
mov edx r--data
mov ecx ebp
push 0x1
call sub_44a58f
add esp 0x4
mov edi [ esi ]
test edi edi
je r-xdata
sub_44d789
mov eax [ ebx + 0x210 ]
mov ecx [ esp ]
xor esi esi
mov [ ecx + 0x9c ] eax
mov eax [ ebx + 0x214 ]
mov edx [ esp + 0x20 ]
mov [ edx ] eax
mov [ ecx + 0x6c8 ] 0x0
inc esi
cmp esi 0x6
jne r-xdata
mov ecx [ edi + 0x30 ]
mov edx [ esp + 0x4 ]
push [ esp + 0xc ]
call sub_44e107
add esp 0x4
test eax eax
je r-xdata
mov edi [ esi * 8 + r--data ]
mov eax [ esp ]
cmp edi [ eax + 0x9c ]
je r-xdata
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
lea esi [ esp + 0x34 ]
cmp edi 0x6
jle r-xdata
push [ edi + 0x34 ]
mov eax [ esp + 0x4 ]
push [ eax + 0xfc ]
push [ eax + 0xf8 ]
call sub_494b22
add esp 0xc
test eax eax
jne r-xdata
inc edi
mov ecx ebx
lea edx [ esp + 0x38 ]
push esi
call sub_44dc49
add esp 0x4
mov eax [ esp + 0x38 ]
add [ esp + 0x10 ] 0xc0
test eax eax
mov [ esp + 0x4 ] eax
jne r-xdata
jmp r-xdata
mov edx [ esp ]
mov eax [ edx + 0x6c8 ]
lea ecx [ eax + 0x1 ]
mov [ edx + 0x6c8 ] ecx
mov [ edx + eax * 4 + 0x6b0 ] esi
cmp edi 0x4
jne r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx [ esp ]
jmp r-xdata
cmp [ ebp + 0x130 ] 0x0
je r-xdata
cmp edi 0x5
jne r-xdata
mov eax [ esp + 0x28 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edx eax
call sub_44e0cb
mov [ ebp ] 0x0
lea edi [ esp + 0x38 ]
mov ecx ebx
mov edx edi
push esi
call sub_44dc49
add esp 0x4
mov ecx ebx
mov edx edi
push esi
call sub_44dc49
add esp 0x4
mov eax [ ebx + 0x18 ]
cmp [ ebx ] eax
jle r-xdata
push r--data
mov eax [ esp + 0x4 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ esp + 0x1c ] 0x0
mov eax [ ebp + 0x4c ]
mov cl 0x1
mov [ esp + 0x1c ] ecx
test eax eax
je r-xdata
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebx + 0x14 ]
cmp [ ecx + eax ] 0x0
lea eax [ eax + 0x1 ]
mov [ ebx + 0x18 ] eax
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
push [ eax * 4 + r--data ]
push r--data
call sub_43f758
add esp 0x10
mov ecx [ esp ]
mov edx eax
call sub_44e0cb
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
mov edx [ esp + 0x4 ]
mov ecx edi
push [ esp + 0xc ]
call sub_44e107
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x34 ]
mov ebx [ esp + 0x8 ]
mov esi edi
mov [ esp + 0x18 ] edi
or esi 0x1
xor ebp ebp
dec ebp
mov [ esp + 0xc ] eax
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
mov [ ebp + 0x50 ] eax
xor ecx ecx
cmp [ eax + 0x28 ] 0x0
setne cl
mov [ ebp + 0x58 ] ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
cmp [ ebp + 0x144 ] 0x0
sete al
jmp r-xdata
mov ecx [ esp + 0x40 ]
call sub_497c4a
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esp + 0x18 ] 0x1
ja r-xdata
cmp esi 0x7
jne r-xdata
mov ebp [ esp + 0x8 ]
xor ecx ecx
mov [ ebp + 0x54 ] eax
cmp [ eax + 0x28 ] 0x0
setne cl
mov [ ebp + 0x5c ] ecx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ edi + 0x260 ] 0x1
mov eax [ edi + 0x98 ]
push edi
push sub_44e1b5
push [ eax ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ ebp + 0x140 ] eax
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov ecx [ esp ]
movzx eax al
mov [ ebp + 0x148 ] eax
mov eax [ ecx + 0x98 ]
mov eax [ eax + 0xc ]
call [ eax ]
mov edi eax
mov eax [ esp ]
mov [ eax + 0xc ] edi
mov eax [ esp ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ecx eax
mov eax [ esp ]
lea esi [ esp + 0x3c ]
mov ebp ecx
mov eax [ eax + 0x98 ]
mov ebx [ eax + 0xc ]
mov eax ecx
shr eax 0x18
mov [ esi ] al
mov eax ecx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] ch
mov [ esi + 0x3 ] cl
push eax
push esi
push edi
call [ ebx + 0x8 ]
add esp 0xc
push ebp
push [ esp + 0x8 ]
push edi
call [ ebx + 0x8 ]
add esp 0xc
mov eax [ esp ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ecx eax
mov eax [ esp ]
mov edi ecx
mov ebx [ eax + 0xc ]
mov eax [ esp ]
mov eax [ eax + 0x98 ]
mov ebp [ eax + 0xc ]
mov eax ecx
shr eax 0x18
mov [ esi ] al
mov eax ecx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] ch
mov [ esi + 0x3 ] cl
push eax
push esi
push ebx
call [ ebp + 0x8 ]
add esp 0xc
push edi
push [ esp + 0x8 ]
push ebx
call [ ebp + 0x8 ]
add esp 0xc
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov ebx [ eax + 0x34 ]
mov eax [ esp ]
mov ebp [ eax + 0xc ]
mov eax [ esp ]
mov eax [ eax + 0x98 ]
mov edi [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ esi ] al
mov eax ebx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] bh
mov [ esi + 0x3 ] bl
push eax
push esi
push ebp
call [ edi + 0x8 ]
add esp 0xc
push ebx
push [ esp + 0x8 ]
push ebp
call [ edi + 0x8 ]
add esp 0xc
mov eax [ esp + 0x8 ]
push [ eax + 0x30 ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x14 ]
mov ebx [ eax ]
mov edi [ eax + 0x14 ]
mov eax [ esp ]
mov ebp [ eax + 0xc ]
mov eax [ esp ]
inc ebx
dec edi
mov eax [ eax + 0x98 ]
mov ecx [ eax + 0xc ]
mov eax ebx
shr eax 0x18
mov [ esi ] al
mov eax ebx
shr eax 0x10
mov [ esi + 0x1 ] al
mov eax 0x4
mov [ esi + 0x2 ] bh
mov [ esi + 0x3 ] bl
push eax
push esi
push ebp
mov esi ecx
call [ esi + 0x8 ]
add esp 0xc
push ebx
push edi
mov edi [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x14 ]
call [ esi + 0x8 ]
add esp 0xc
cmp [ ebp + 0xc ] 0x0
mov eax [ esp + 0x20 ]
je r-xdata
mov edi [ esp + 0x18 ]
lea esi [ esp + 0x34 ]
cmp edi 0x3
ja r-xdata
cmp ebp 0xffffffff
je r-xdata
inc ebp
add ebx 0xc
cmp ebp 0xf
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x4 ]
mov eax [ ebx + eax - 0x4 ]
mov ecx [ eax + 0x4 ]
push [ esp + 0xc ]
call sub_44e107
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ edi + 0x260 ] 0x1
cmp [ edi + 0x6c8 ] 0x0
jle r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x8 ]
cmp edi 0x4
jne r-xdata
mov ebp [ esp + 0x8 ]
jmp [ edi * 4 + jump_table_410170 ]
mov edx [ esp + 0x4 ]
mov ecx edi
push [ esp + 0xc ]
call sub_44e16b
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x144 ] 0x0
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edi [ ebx + eax - 0x8 ]
test edi edi
je r-xdata
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x130 ] 0x1
cmp [ ebp + 0x148 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ edi + 0x260 ] 0x1
mov eax [ ebp + 0x48 ]
push edi
push sub_44e1b5
push [ eax + 0x20 ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ ebp + 0x140 ] eax
js r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
xor esi esi
xor ebx ebx
xor esi esi
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov [ ebp ] 0x1abc
jmp r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x450 ]
mov [ ebp + 0x50 ] eax
mov eax [ ebx + 0x454 ]
mov [ ebp + 0x58 ] eax
jmp r-xdata
mov eax [ ebx + 0x150 ]
mov ecx [ esp ]
mov [ ecx + 0x98 ] eax
mov eax [ ebx + 0x154 ]
mov ecx [ esp + 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov edi [ esp ]
mov eax [ edi + 0x98 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp ] 0x1b43
jmp r-xdata
mov [ edi + 0x260 ] 0x1
mov eax [ ebp + 0x4c ]
push edi
push sub_44e1b5
push [ eax + 0x20 ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ ebp + 0x140 ] eax
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov [ ebp ] 0x1b18
jmp r-xdata
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
push edi
push sub_44e1b5
push ecx
push r--data
push eax
call sub_484828
add esp 0x14
mov [ ebp + 0x140 ] eax
push edi
push sub_44e1b5
push esi
push ecx
push eax
call sub_48488b
add esp 0x14
mov [ ebp + 0x140 ] eax
push esi
call sub_43f9d4
add esp 0x4
mov eax [ ebp + 0x140 ]
jmp r-xdata
mov ebp [ esp + 0x8 ]
jmp r-xdata
cmp eax [ edi * 8 + r--data ]
je r-xdata
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
lea eax [ ebp + 0x10 ]
cmp edi 0x6
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ebx + ecx - 0x4 ]
mov [ ebp + 0x54 ] eax
mov eax [ ebx + ecx ]
mov [ ebp + 0x5c ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov edx [ ebp + 0x48 ]
xor eax eax
mov ecx 0x0
test edx edx
je r-xdata
mov edx [ eax + 0xc ]
cmp ecx 0x2
mov esi [ edx + 0x18 ]
jne r-xdata
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
lea eax [ edi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
jns r-xdata
mov edi [ esp ]
inc ebx
cmp ebx [ edi + 0x6c8 ]
jl r-xdata
mov eax [ edi * 8 + r--data ]
mov ebp [ esp + 0x8 ]
test esi esi
mov eax [ eax + 0x30 ]
je r-xdata
cmp ebp 0x3
jle r-xdata
mov eax [ ebx + 0x5d0 ]
mov [ ebp + 0x60 ] eax
jmp r-xdata
cmp edi 0x7
jne r-xdata
mov edx [ ebp + 0x4c ]
test edx edx
je r-xdata
mov ecx [ edx + 0x28 ]
push esi
push r--data
push edi
call sub_447e12
add esp 0xc
mov [ edi + 0x184 ] 0x4
mov [ ebp ] 0x1c2a
jmp r-xdata
push eax
call sub_464da1
add esp 0x4
push esi
push eax
push r--data
push edi
call sub_447e12
add esp 0x10
mov [ edi + 0x184 ] 0x3
push [ edi + 0x98 ]
call sub_464dae
add esp 0x4
test eax eax
mov [ ebp + 0x90 ] eax
je r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov [ ebp ] 0x1b31
jmp r-xdata
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
jmp r-xdata
xor esi esi
mov [ edi + 0x260 ] esi
cmp [ ebp + 0x140 ] esi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov [ ebp ] 0x1aff
jmp r-xdata
mov edi [ edi + ebx * 4 + 0x6b0 ]
xor ebp ebp
dec ebp
jmp r-xdata
push eax
call sub_43f79e
add esp 0x4
mov esi eax
push 0x0
push eax
push r--data
push esi
call sub_43fa97
add esp 0x10
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov esi edi
jmp r-xdata
inc ebp
push ebp
push 0x19
mov eax [ esp + 0x8 ]
push [ eax + 0x248 ]
call sub_4319e9
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
cmp ecx eax
cmovge eax ecx
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x98 ]
mov ecx [ ecx + 0xc ]
mov ecx [ ecx + 0x14 ]
shl ecx 0x3
cmp eax ecx
cmovle ecx eax
mov [ ebp + 0x4 ] ecx
push [ edi + 0x98 ]
call sub_461508
add esp 0x4
test eax eax
je r-xdata
mov eax [ edx + 0x28 ]
push r--data
jmp r-xdata
lea ecx [ esp + 0x3c ]
push ecx
push eax
call sub_464eb4
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
jmp r-xdata
call sub_44a668
add esp 0xc
mov [ ebp ] esi
jmp r-xdata
mov edx r--data
mov ecx edi
push 0x1
push esi
push esi
jmp r-xdata
mov ecx [ edi + 0x9c ]
mov eax [ edi + 0x110 ]
test esi esi
mov ecx [ ecx + 0x30 ]
je r-xdata
mov eax [ ebx + 0x690 ]
lea esi [ esp + 0x34 ]
mov [ ebp + 0x64 ] eax
mov ebx [ esp + 0x14 ]
mov [ edi + 0x184 ] 0x1
push [ edi + 0x98 ]
call sub_461518
add esp 0x4
mov [ edi + 0xe8 ] eax
mov [ ebp + 0x38 ] 0x1e
mov [ ebp + 0x3c ] 0x1f
mov eax [ edi + 0x98 ]
push [ eax + 0x4 ]
push r--data
push edi
call sub_447e12
add esp 0xc
mov eax [ edi + 0x98 ]
mov eax [ eax + 0xc ]
push [ eax + 0x18 ]
push r--data
push edi
call sub_447e12
add esp 0xc
push 0x2
push [ edi + 0x110 ]
call sub_489d5f
add esp 0x8
mov eax [ ebp + 0x4 ]
add eax eax
push eax
push [ edi + 0xe8 ]
call sub_461624
add esp 0x8
mov [ ebp + 0x24 ] eax
mov ecx [ ebp + 0x38 ]
call sub_448c44
mov esi eax
lea edx [ esp + 0x3c ]
mov [ ebp + 0x13c ] esi
mov ecx [ ebp + 0x24 ]
call sub_44e2b0
mov edx [ esi ]
mov ecx esi
mov ebx eax
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx ebx
mov [ ecx + eax - 0x4 ] 0x0
mov ecx esi
mov eax [ esi ]
mov [ esi + 0x18 ] eax
lea eax [ esp + 0x3c ]
push [ eax ]
call sub_44a58f
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
mov edx [ ebp + 0x13c ]
mov ecx edi
call sub_44a75f
push 0x1
push [ edi + 0x110 ]
call sub_489d5f
add esp 0x8
mov [ ebp ] 0x1b96
jmp r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ edi + 0x184 ] 0x2
mov eax [ ebp + 0x4 ]
lea ecx [ eax - 0x1 ]
sar ecx 0x1f
shr ecx 0x1a
lea ecx [ eax + ecx - 0x1 ]
mov eax 0x200
shr ecx 0x6
shl eax cl
mov ecx 0x400
cmp eax 0x3ff
cmovg ecx eax
mov eax 0x2000
cmp ecx 0x2001
cmovl eax ecx
mov [ ebp + 0x8 ] eax
test [ edi + 0x51 ] 0x10
jne r-xdata
call sub_43f758
add esp 0x4
mov ecx edi
push [ ebp + 0x90 ]
call j_sub_4631d0
add esp 0x4
push r--data
jmp r-xdata
mov ecx 0x1e
call sub_448c44
mov ebx edi
mov edi eax
mov [ ebp + 0x13c ] edi
mov ecx edi
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx esi
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ edi ]
mov [ edi + 0x18 ] eax
mov ecx [ ebp + 0x13c ]
push [ esp + 0x3c ]
call sub_44a58f
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov edx [ ebp + 0x13c ]
mov ecx ebx
call sub_44a75f
jmp r-xdata
mov ecx 0x1e
call sub_448c44
mov esi eax
lea eax [ ebp + 0x13c ]
mov [ esp + 0xc ] eax
mov [ ebp + 0x13c ] esi
mov ecx esi
mov ebx [ ebp + 0x8 ]
mov eax ebx
mov edi ebx
shr eax 0x10
shr edi 0x18
mov [ esp + 0x4 ] eax
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov edx edi
mov ecx 0x22
call sub_448c44
lea ecx [ ebp + 0x13c ]
mov esi eax
mov [ esp + 0xc ] ecx
mov [ ebp + 0x13c ] esi
mov ecx esi
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x40000
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x13c ]
mov eax ebx
mov edi ebx
mov ecx esi
shr eax 0x18
shr edi 0x10
mov [ esp + 0x4 ] eax
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov esi [ ebp + 0x13c ]
mov edx [ esi ]
mov ecx esi
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov bh 0x20
xor edx edx
mov [ esp + 0x4 ] 0x0
mov bl dl
jmp r-xdata
mov [ ebp ] 0x1bec
jmp r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi ]
mov [ eax + ecx - 0x4 ] dl
mov edx [ esp + 0x4 ]
mov [ eax + ecx - 0x3 ] dl
mov [ eax + ecx - 0x2 ] bh
mov [ eax + ecx - 0x1 ] bl
mov eax [ esp + 0xc ]
mov ecx [ esp ]
mov edx [ eax ]
call sub_44a75f
mov [ ebp ] 0x1b73
jmp r-xdata
sub_44dbe6
push ebx
push edi
push esi
mov esi ecx
cmp [ esi + 0x1c ] edx
jge r-xdata
pop esi
pop edi
pop ebx
retn
mov edi [ esi + 0x14 ]
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
xor ebx ebx
mov eax [ esi + 0x10 ]
mov ebx edi
sub ebx eax
jmp r-xdata
add eax ebx
mov [ esi + 0x14 ] eax
add edx 0x100
mov [ esi + 0x1c ] edx
push 0x1
push edx
push eax
call sub_43f8db
add esp 0xc
test edi edi
mov [ esi + 0x10 ] eax
je r-xdata
sub_44dc2a
push esi
mov esi [ ecx ]
mov edx [ ecx + 0x18 ]
xor eax eax
sub esi edx
cmp esi 0x4
jl r-xdata
pop esi
retn
mov eax [ ecx + 0x14 ]
mov eax [ eax + edx ]
add edx 0x4
mov [ ecx + 0x18 ] edx
bswap eax
sub_44dc49
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov edi edx
xor eax eax
mov esi ecx
mov [ edi ] eax
mov [ ebx ] eax
mov ecx [ esi ]
mov eax [ esi + 0x18 ]
sub ecx eax
cmp ecx 0x4
jl r-xdata
pop esi
pop edi
pop ebx
retn
mov ecx [ esi + 0x14 ]
mov eax [ ecx + eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
mov [ ebx ] eax
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
add eax 0x4
mov [ esi + 0x18 ] eax
sub ecx eax
cmp ecx [ ebx ]
jl r-xdata
add eax [ esi + 0x14 ]
mov [ edi ] eax
mov eax [ ebx ]
add [ esi + 0x18 ] eax
sub_44dc9c
push edi
push esi
mov esi [ esp + 0xc ]
cmp edx 0x3
jne r-xdata
cmp edx 0x3
jne r-xdata
mov eax r--data
cmp esi 0x3c
je r-xdata
cmp edx 0x3
jne r-xdata
mov eax r--data
cmp esi 0x3d
je r-xdata
pop esi
pop edi
retn
cmp edx 0x3
jne r-xdata
mov eax r--data
cmp esi 0x3f
je r-xdata
cmp edx 0x3
jne r-xdata
mov eax r--data
cmp esi 0x40
je r-xdata
cmp edx 0x3
jne r-xdata
mov eax r--data
cmp esi 0x41
je r-xdata
lea edi [ esi - 0x1 ]
cmp edi 0x5
ja r-xdata
mov eax r--data
cmp esi 0x42
jne r-xdata
cmp esi 0x14
je r-xdata
mov eax r--data
jmp [ edi * 4 + jump_table_410180 ]
mov eax r--data
jmp r-xdata
cmp esi 0x15
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov eax r--data
jmp r-xdata
cmp ecx 0x1
jne r-xdata
mov eax r--data
cmp esi 0x1e
je r-xdata
cmp ecx 0x2
jne r-xdata
mov eax r--data
cmp esi 0x1f
je r-xdata
cmp ecx 0x2
jne r-xdata
mov eax r--data
cmp esi 0x1e
je r-xdata
cmp ecx 0x2
jne r-xdata
mov eax r--data
cmp esi 0x22
je r-xdata
cmp ecx 0x2
jne r-xdata
mov eax r--data
cmp esi 0x1f
je r-xdata
cmp ecx 0x2
jne r-xdata
mov eax r--data
cmp esi 0x20
je r-xdata
cmp ecx 0x4
jne r-xdata
mov eax r--data
cmp esi 0x21
je r-xdata
cmp ecx 0x4
jne r-xdata
mov eax r--data
cmp esi 0x1e
je r-xdata
cmp ecx 0x4
jne r-xdata
mov eax r--data
cmp esi 0x1f
je r-xdata
cmp ecx 0x3
jne r-xdata
mov eax r--data
cmp esi 0x20
je r-xdata
cmp ecx 0x3
jne r-xdata
mov eax r--data
cmp esi 0x1e
je r-xdata
lea eax [ esi - 0x32 ]
cmp eax 0x4
jae r-xdata
mov eax r--data
cmp esi 0x1f
je r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esi * 4 + r--data ]
jmp r-xdata
cmp edx 0x2
jne r-xdata
mov eax r--data
cmp esi 0x3c
je r-xdata
cmp edx 0x4
jne r-xdata
mov eax r--data
cmp esi 0x3c
je r-xdata
cmp edx 0x4
jne r-xdata
mov eax r--data
cmp esi 0x3c
je r-xdata
lea ecx [ esi - 0x50 ]
mov eax r--data
cmp ecx 0x15
jae r-xdata
mov eax r--data
cmp esi 0x3d
je r-xdata
mov eax [ esi * 4 + r--data ]
jmp r-xdata
sub_44dea3
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0xc ] eax
cmp [ esi + 0x58 ] 0x0
jne r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
cmp [ eax + 0x198 ] 0x2
jne r-xdata
test [ esi + 0x14 ] 0x1
lea ebx [ esi + 0x4c ]
jne r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push ebx
call sub_43ff54
add esp 0x4
jmp r-xdata
push ebx
call sub_43ff78
add esp 0x4
mov edi eax
cmp edi 0x4
jae r-xdata
push 0x4
lea eax [ esp + 0xc ]
push eax
push ebx
call sub_4400ae
add esp 0xc
mov ebp [ esp + 0x8 ]
bswap ebp
cmp ebp 0x2001
jae r-xdata
mov eax [ esi + 0x14 ]
test al 0x4
je r-xdata
xor edx edx
mov ecx esi
push 0x0
call sub_44e017
add esp 0x4
mov eax [ esi ]
cmp [ eax + 0x144 ] 0x4
je r-xdata
add edi 0xfffffffc
cmp ebp edi
ja r-xdata
test al 0x1
jne r-xdata
test [ esi + 0x14 ] 0x1
jne r-xdata
add ebp 0x4
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov edi eax
push ebp
push edi
push ebx
call sub_4400ae
add esp 0xc
push ebp
push ebx
call sub_44000a
add esp 0x8
push esi
push sub_44e067
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
push ebp
push edi
call sub_492936
add esp 0x18
mov [ esi + 0x58 ] eax
push edi
call sub_43f9d4
add esp 0x4
cmp [ esi + 0x58 ] 0x0
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x144 ] 0x4
je r-xdata
jmp r-xdata
mov edx [ esp + 0x4 ]
mov ecx esi
push [ esp ]
call sub_44e017
add esp 0x4
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
push ebx
call sub_43ff78
add esp 0x4
mov edi eax
cmp edi 0x3
ja r-xdata
mov ecx esi
mov [ esi + 0x18 ] 0x1
call sub_44804f
jmp r-xdata
jmp r-xdata
sub_44e017
push ebx
push edi
push esi
mov esi ecx
mov ebx [ esp + 0x10 ]
mov edi edx
mov [ esi + 0x58 ] 0x0
test [ esi + 0x14 ] 0x1
je r-xdata
test edi edi
mov eax 0x5
mov edx r--data
mov ecx esi
cmove ebx eax
cmovne edx edi
push ebx
call sub_44837a
add esp 0x4
pop esi
pop edi
pop ebx
retn
push 0xf13
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_44e067
push edi
push esi
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
mov ecx esi
mov edx edi
push [ esp + 0x14 ]
call sub_44e017
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
mov ecx esi
pop esi
pop edi
jmp sub_44dea3
sub_44e093
push esi
xor eax eax
dec eax
mov [ ecx ] edx
cmp esi edx
je r-xdata
inc eax
add ecx 0xc
cmp eax 0xe
jle r-xdata
mov esi [ ecx ]
test esi esi
je r-xdata
push 0x18bb
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor ecx ecx
jmp r-xdata
mov eax ecx
pop esi
retn
sub_44e0cb
push edi
push esi
mov esi edx
xor edx edx
mov edi ecx
call sub_45141c
push esi
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push esi
push r--data
push [ edi + 0x110 ]
call sub_489e27
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
retn
sub_44e107
push ebp
push ebx
push edi
push esi
mov edi ecx
xor eax eax
mov ebx edx
test edi edi
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
mov esi [ esp + 0x14 ]
mov ecx edi
mov edx ebx
push esi
call sub_44e16b
add esp 0x4
xor ecx ecx
inc ecx
test eax eax
je r-xdata
push esi
push 0x2c
push ebx
call sub_4989c0
add esp 0xc
mov ebp eax
test ebp ebp
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
inc ebp
add esi ebx
mov ecx edi
sub esi ebp
mov edx ebp
push esi
call sub_44e16b
add esp 0x4
test eax eax
mov ebx ebp
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_44e16b
push ebp
push ebx
push edi
push esi
mov edi ecx
xor eax eax
mov esi edx
test edi edi
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov ebp [ esp + 0x14 ]
push edi
call sub_4a7f30
add esp 0x4
mov ebx eax
cmp ebx ebp
jg r-xdata
xor eax eax
push ebx
push esi
push edi
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
xor eax eax
inc eax
cmp ebx ebp
je r-xdata
cmp [ esi + ebx ] 0x2c
jne r-xdata
jmp r-xdata
sub_44e1b5
push esi
mov esi [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov [ esi + 0x25c ] eax
cmp [ esi + 0x198 ] 0x1
jne r-xdata
xor edx edx
mov ecx esi
push 0x0
push 0xffffffff
call sub_44b0db
xor edx edx
mov ecx esi
push 0x0
push 0xffffffff
call sub_451579
jmp r-xdata
add esp 0x8
mov ecx esi
pop esi
jmp sub_45341e
sub_44e1f4
push esi
sub esp 0xc
mov eax [ rw-data ]
lea esi [ esp + 0x4 ]
mov edx esi
mov [ esp + 0x8 ] eax
mov eax esp
push eax
call sub_44dc49
add esp 0x4
mov eax [ esi ]
xor esi esi
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
retn
cmp [ eax ] 0x0
js r-xdata
push [ esp ]
push eax
call sub_45d5e4
add esp 0x8
mov esi eax
sub_44e23d
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov [ esp ] ecx
mov ecx [ esp + 0x24 ]
lea ebp [ esp + 0x4 ]
mov edi edx
mov eax [ rw-data ]
mov edx ebp
mov [ esp + 0xc ] eax
call sub_44e2b0
mov ebx [ ebp ]
mov esi eax
lea ecx [ esp + 0x8 ]
mov eax ebx
shr eax 0x18
mov [ ecx ] al
mov eax ebx
shr eax 0x10
mov [ ecx + 0x1 ] al
mov [ ecx + 0x2 ] bh
mov [ ecx + 0x3 ] bl
push 0x4
push ecx
push edi
mov ebp [ esp + 0xc ]
call [ ebp + 0x8 ]
add esp 0xc
push ebx
push esi
push edi
call [ ebp + 0x8 ]
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_44e2b0
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] ecx
push ecx
call sub_45d970
add esp 0x4
mov ebp eax
lea eax [ ebp + 0x7 ]
sar eax 0x1f
shr eax 0x1d
lea esi [ ebp + eax + 0x7 ]
sar esi 0x3
lea eax [ esi + 0x1 ]
push 0x1
mov [ esp + 0x4 ] eax
push eax
call sub_43f807
add esp 0x8
mov edi eax
test ebp ebp
mov [ edi ] 0x0
jle r-xdata
xor ecx ecx
lea ebp [ esi - 0x1 ]
xor ebx ebx
mov esi [ esp ]
mov ecx edi
add ecx eax
sub esi eax
push esi
push ecx
push edi
call sub_49a770
add esp 0xc
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov eax edi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi + eax ] 0x0
jne r-xdata
push ebp
push [ esp + 0xc ]
call sub_45da64
add esp 0x8
mov [ edi + ebx + 0x1 ] al
inc ebx
dec ebp
cmp esi ebx
jg r-xdata
cmp [ edi + eax + 0x1 ] 0x0
lea ecx [ eax + 0x1 ]
jns r-xdata
mov eax ecx
cmp eax esi
jg r-xdata
sub_44e34d
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edi [ esp + 0x34 ]
mov eax [ rw-data ]
test edi edi
mov [ esp + 0x14 ] eax
je r-xdata
xor ebx ebx
mov [ esp ] edx
mov eax [ ecx + 0x98 ]
mov ebx [ eax + 0xc ]
mov esi [ ebx + 0x14 ]
mov [ esp + 0x4 ] ecx
lea edi [ edi + esi - 0x1 ]
mov eax edi
cdq
idiv esi
mov esi ebx
sub edi edx
push 0x1
mov [ esp + 0x10 ] edi
push edi
call sub_43f807
add esp 0x8
mov ebx eax
call [ esi ]
mov ecx [ esp + 0x4 ]
mov ebp eax
test [ ecx + 0x50 ] 0x20
jne r-xdata
push [ esi + 0x14 ]
push [ esp + 0x30 ]
push ebp
call [ esi + 0x8 ]
add esp 0xc
lea eax [ esp + 0x30 ]
push 0x1
push eax
push ebp
call [ esi + 0x8 ]
add esp 0xc
mov edi esi
mov esi [ esp + 0x4 ]
lea eax [ esi + 0xa4 ]
push [ esi + 0xe4 ]
push eax
push ebp
call [ edi + 0x8 ]
add esp 0xc
push ebx
push ebp
call [ edi + 0xc ]
add esp 0x8
mov ebp [ esp + 0xc ]
cmp ebp [ edi + 0x14 ]
jle r-xdata
mov ecx esi
mov edx ebp
push [ esp ]
call sub_44e23d
add esp 0x4
mov ecx [ esp + 0x34 ]
sub ebp ecx
jle r-xdata
call [ edi ]
test [ esi + 0x50 ] 0x20
jne r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax ebx
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax ebx
add eax ecx
push ebp
push eax
call sub_48f5d3
add esp 0x8
jmp r-xdata
mov [ esp + 0x8 ] eax
push [ edi + 0x14 ]
push [ esp + 0x30 ]
push eax
call [ edi + 0x8 ]
add esp 0xc
mov eax [ edi + 0x14 ]
cmp eax ebp
jge r-xdata
mov ecx edi
mov edx eax
push [ esp ]
mov esi eax
call sub_44e23d
mov eax esi
add esp 0x4
push [ esp + 0x8 ]
call [ edi + 0x10 ]
add esp 0x4
mov esi eax
mov [ esp + 0x10 ] ebx
mov ecx [ esp + 0x10 ]
lea ebp [ ecx + esi ]
mov ecx ebp
sub ecx eax
push eax
push ecx
mov ebx [ esp + 0x10 ]
push ebx
call [ edi + 0x8 ]
add esp 0xc
push ebx
call [ edi + 0x4 ]
add esp 0x4
push ebp
mov ebx [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
push eax
call [ edi + 0xc ]
add esp 0x8
mov eax [ edi + 0x14 ]
add esi eax
cmp esi ebp
jl r-xdata
sub_44e4a7
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x144 ] 0x4
je r-xdata
pop esi
retn
cmp [ esi + 0x694 ] 0x0
jne r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
push 0x1a
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
cmp [ esi + 0x698 ] eax
jne r-xdata
mov edx r--data
mov ecx esi
push 0x0
push 0xffffffff
call sub_44b0db
add esp 0x8
jmp r-xdata
sub_44e4fe
push ebp
push ebx
push edi
push esi
sub esp 0x68
mov eax [ rw-data ]
mov edi ecx
mov ebx edx
mov [ esp + 0x64 ] eax
mov esi [ edi + 0x1d0 ]
test esi esi
jne r-xdata
mov edx [ esi ]
mov ecx [ esp + 0x80 ]
mov eax [ esp + 0x7c ]
xor ebp ebp
cmp edx 0x27fa
jg r-xdata
push 0xe8
push 0x1
call sub_43f807
add esp 0x8
mov [ edi + 0x1d0 ] eax
mov [ eax ] 0x0
mov esi [ edi + 0x1d0 ]
cmp edx 0x290a
jle r-xdata
cmp edx 0x2593
jle r-xdata
cmp edx 0x2897
jle r-xdata
cmp edx 0x29f6
jg r-xdata
cmp edx 0x246d
jle r-xdata
cmp edx 0x26d2
jg r-xdata
cmp edx 0x27fb
je r-xdata
cmp edx 0x2898
je r-xdata
cmp edx 0x29f7
je r-xdata
cmp edx 0x290b
je r-xdata
test edx edx
je r-xdata
cmp edx 0x246e
je r-xdata
cmp edx 0x26d3
je r-xdata
cmp edx 0x2594
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x283f
jne r-xdata
mov ebp 0x2898
test ecx ecx
jne r-xdata
cmp edx 0x28be
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x2a84
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x294a
je r-xdata
mov eax sub_453af8
movd xmm0 eax
mov [ edi + 0x288 ] eax
pshufd xmm0 xmm0 0x0
movdqu [ edi + 0x338 ] xmm0
mov [ edi + 0x360 ] eax
mov [ edi + 0x364 ] eax
mov [ edi + 0x3b0 ] eax
mov [ edi + 0x3b4 ] eax
mov [ edi + 0x3b8 ] eax
movdqu [ edi + 0x3d8 ] xmm0
mov [ edi + 0x3e8 ] eax
mov [ edi + 0x3ec ] eax
mov [ edi + 0x3f0 ] eax
mov [ edi + 0x3f4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x2c ] eax
cmp [ edi + 0xec ] eax
je r-xdata
cmp edx 0x2463
jne r-xdata
test ecx ecx
je r-xdata
cmp edx 0x24cd
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x26f7
je r-xdata
test ecx ecx
jne r-xdata
cmp edx 0x2644
je r-xdata
mov ebp 0x27fb
jmp r-xdata
cmp [ ecx + 0x8 ] 0x3d
jne r-xdata
mov [ esi ] ebp
mov ecx [ esp + 0x64 ]
call sub_497c4a
add esp 0x68
pop esi
pop edi
pop ebx
pop ebp
retn
test ecx ecx
je r-xdata
push eax
push ebx
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov [ edi + 0x100 ] 0x0
jmp r-xdata
test ecx ecx
je r-xdata
cmp edx 0x28dc
mov ebp 0x0
jne r-xdata
mov ebp 0x29f7
jmp r-xdata
mov eax [ ecx + 0x8 ]
lea edx [ eax - 0x5b ]
cmp edx 0x2
jae r-xdata
test ecx ecx
je r-xdata
cmp edx 0x2ab1
jne r-xdata
mov ebp 0x290b
jmp r-xdata
mov ebp edi
mov edi esi
xor esi esi
inc esi
mov ebp 0x294a
test ecx ecx
jne r-xdata
cmp edx 0x298d
jne r-xdata
push 0x23
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov ebp 0x246e
jmp r-xdata
cmp [ ecx + 0x8 ] 0x6
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x2555
jne r-xdata
mov ebp 0x26d3
jmp r-xdata
cmp [ ecx + 0x8 ] 0x3c
jne r-xdata
mov ebp 0x26f7
test ecx ecx
jne r-xdata
cmp edx 0x27aa
jne r-xdata
mov [ esp ] edi
lea edi [ edi + 0x178 ]
push edi
call sub_43ff78
add esp 0x4
mov ebx eax
test ebx ebx
je r-xdata
mov ebp 0x2594
jmp r-xdata
test ecx ecx
je r-xdata
cmp edx 0x268a
jne r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ esi + 0xe4 ] 0x4
jmp r-xdata
mov [ esp ] edi
mov edi esi
lea esi [ esp + 0x44 ]
lea ebx [ esp + 0x40 ]
mov edx ebx
push esi
call sub_44dc49
add esp 0x4
mov eax [ ebx ]
mov [ edi + 0xd4 ] eax
mov eax [ esi ]
mov esi edi
mov edi [ esp ]
mov [ esi + 0xd0 ] eax
mov eax [ esi + 0xe4 ]
cmp eax 0x1
jne r-xdata
mov ebp 0x283f
jmp r-xdata
cmp [ ecx + 0x8 ] 0x3c
je r-xdata
test eax eax
js r-xdata
mov ebp 0x28be
jmp r-xdata
cmp [ ecx + 0x8 ] 0x3c
jne r-xdata
mov ebp 0x28dc
test ecx ecx
jne r-xdata
push eax
push r--data
jmp r-xdata
mov ebx ecx
call sub_44dc2a
mov ecx [ edi + 0x128 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov ebp 0x2a84
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp eax 0x63
je r-xdata
test ecx ecx
je r-xdata
mov [ edi + 0xc ] 0x1
mov esi [ edi + 0x48 ]
push esi
call sub_4a7f30
add esp 0x4
push eax
push esi
mov esi edi
call sub_48f5d3
add esp 0x8
push [ esi + 0x48 ]
call sub_43f9d4
add esp 0x4
mov edi ebp
jmp r-xdata
test esi esi
mov eax r--data
mov ebx r--data
cmove ebx eax
push ebx
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
lea eax [ esi * 4 + 0x1c ]
mov ecx ebp
mov edx ebx
push eax
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx ebp
push 0x2
call sub_44a29f
add esp 0x4
mov ecx [ esp + 0x80 ]
lea ebx [ esp + 0x1c ]
lea esi [ esp + 0x18 ]
mov edx ebx
push esi
call sub_44dc49
add esp 0x4
mov [ esp ] ebp
push [ ebp + 0x110 ]
call sub_43f7d4
add esp 0x4
mov ebp edi
xor edi edi
inc edi
mov [ ebp + 0x3c ] eax
mov [ eax ] edi
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ ebp + 0x3c ]
mov [ ecx + 0x4 ] eax
mov ecx r--data
mov eax [ ebx ]
test eax eax
cmovne ecx eax
push ecx
push [ esi ]
mov esi ebp
push r--data
call sub_43f758
add esp 0xc
mov ecx [ esi + 0x3c ]
mov [ ecx + 0xc ] eax
mov eax [ esi + 0x3c ]
mov [ eax + 0x10 ] edi
push r--data
call sub_43f79e
add esp 0x4
xor ebx ebx
push ebx
push eax
push [ esi + 0x3c ]
call sub_43f887
add esp 0xc
push r--data
call sub_43f79e
add esp 0x4
push ebx
push eax
push [ esi + 0x3c ]
call sub_43f887
add esp 0xc
push r--data
call sub_43f79e
add esp 0x4
push ebx
push eax
push [ esi + 0x3c ]
call sub_43f887
add esp 0xc
jmp r-xdata
push eax
push ebx
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov [ edi + 0x100 ] 0x0
jmp r-xdata
mov ebp edi
mov edi esi
xor esi esi
test ecx ecx
jne r-xdata
mov ecx 0x5
call sub_448c44
mov edx r--data
mov ecx eax
mov [ esi + 0xb8 ] eax
call sub_448e7b
mov edx [ esi + 0xb8 ]
mov ecx edi
call sub_448c97
lea eax [ esi + 0x8 ]
lea eax [ edi + 0x178 ]
push eax
call sub_43ff45
add esp 0x4
xor eax eax
mov [ edi + 0x344 ] sub_453b0d
mov [ esi + 0x50 ] eax
cmp [ esi + 0x34 ] eax
je r-xdata
mov ebp 0x2463
jmp r-xdata
cmp [ ecx + 0x8 ] 0x6
lea eax [ esi + 0x8 ]
je r-xdata
push r--data
jmp r-xdata
mov ebp 0x24cd
test eax eax
jg r-xdata
push r--data
jmp r-xdata
mov ebp 0x2555
test ecx ecx
jne r-xdata
mov [ esi + 0xc ] 0x1
mov [ esi + 0x4 ] 0x2
jmp r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
xor ebx ebx
test [ rw-data ] 0x1
je r-xdata
push eax
push ebx
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov [ edi + 0x100 ] 0x0
jmp r-xdata
test ecx ecx
je r-xdata
push edi
call sub_43ff54
add esp 0x4
mov ecx [ esp + 0x80 ]
mov edi [ esp ]
mov eax [ ecx + 0x8 ]
cmp eax 0x33
je r-xdata
test [ rw-data ] 0x5
je r-xdata
mov ebp 0x2644
jmp r-xdata
cmp [ ecx + 0x8 ] 0x3c
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + 0xc0 ]
lea ecx [ esi + 0xe0 ]
push ecx
push eax
call [ eax + 0x10 ]
add esp 0x8
mov eax [ esi + 0xc0 ]
lea ecx [ esi + 0xc4 ]
push ecx
push eax
test eax eax
je r-xdata
lea eax [ esi + 0xe4 ]
lea ecx [ esi + 0xc4 ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ecx
lea eax [ esp + 0x28 ]
mov ebx ecx
lea edx [ esp + 0x34 ]
push eax
call sub_44dc49
add esp 0x4
lea eax [ esp + 0x24 ]
lea edx [ esp + 0x30 ]
mov ecx ebx
push eax
call sub_44dc49
add esp 0x4
lea eax [ esp + 0x20 ]
lea edx [ esp + 0x2c ]
mov ecx ebx
push eax
call sub_44dc49
add esp 0x4
mov [ esp ] edi
push [ edi + 0x110 ]
call sub_43f7d4
add esp 0x4
mov ecx ebx
mov [ esi + 0x3c ] eax
mov [ eax ] 0x1
call sub_44dc2a
mov ebp esi
test eax eax
mov [ esi + 0x40 ] eax
jle r-xdata
xor eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0x7
mov [ esi + 0x30 ] eax
jmp r-xdata
mov [ edi + 0x100 ] 0x1
mov ebp 0x2898
jmp r-xdata
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push eax
push ebx
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov [ edi + 0x100 ] 0x0
jmp r-xdata
call sub_43f758
add esp 0x8
jmp r-xdata
push r--data
cmp [ ebx + 0x8 ] 0x5c
jne r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
jmp r-xdata
cmp eax 0x64
jne r-xdata
mov ecx [ edi + 0x128 ]
mov ebp 0x2ab1
test ecx ecx
je r-xdata
push [ ecx + 0x8 ]
push r--data
jmp r-xdata
xor eax eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x54 ] eax
cmp [ esi + 0xc ] eax
je r-xdata
test ebx ebx
je r-xdata
test eax eax
js r-xdata
cmp [ ecx + 0x8 ] 0x3c
jne r-xdata
mov ebp 0x298d
jmp r-xdata
mov ecx 0x5
call sub_448c44
mov edx r--data
mov ecx eax
mov [ esi + 0xb8 ] eax
call sub_448e7b
mov edx [ esi + 0xb8 ]
mov ecx edi
call sub_448c97
push 0x20
push [ edi + 0x248 ]
call sub_431daf
add esp 0x8
mov [ esi + 0xbc ] eax
push eax
call sub_48f51e
add esp 0x4
test eax eax
jne r-xdata
mov [ esi + 0x4c ] 0x0
lea ebp [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
jmp r-xdata
call sub_43f758
add esp 0x4
jmp r-xdata
mov ebx [ edi + 0x254 ]
mov [ esp + 0x5c ] ebx
mov eax [ edi + 0x258 ]
mov [ esi + 0x78 ] eax
jmp r-xdata
push eax
push ebx
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov [ edi + 0x100 ] 0x0
jmp r-xdata
test ebx ebx
je r-xdata
mov edx r--data
mov ecx edi
push 0x20
call sub_44a29f
add esp 0x4
mov ebp [ esi + 0x64 ]
push ebp
call sub_4a7f30
add esp 0x4
mov ecx edi
mov edx ebp
push eax
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx edi
push 0x3
call sub_44a29f
add esp 0x4
jmp r-xdata
test eax eax
js r-xdata
mov ebp 0x27aa
jmp r-xdata
cmp [ ecx + 0x8 ] 0x3c
jne r-xdata
mov [ esi + 0xc ] 0x0
cmp [ ecx + 0x8 ] 0x33
jne r-xdata
cmp eax 0x34
jne r-xdata
push 0x1
push ebx
call sub_43f807
add esp 0x8
mov ebp eax
push ebx
push ebp
push edi
call sub_4400ae
add esp 0xc
test [ rw-data ] 0x2
jne r-xdata
lea eax [ esi + 0xc ]
test [ rw-data ] 0x1
je r-xdata
mov ebp 0x268a
test eax eax
jg r-xdata
push r--data
jmp r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
xor ecx ecx
call sub_448c44
mov ebx eax
mov ebp edi
mov [ esi + 0xb8 ] ebx
mov ecx ebx
mov edi [ ebx ]
lea edx [ edi + 0x4 ]
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
xor edx edx
mov [ ecx + eax - 0x4 ] edx
lea edx [ ebp + 0xa4 ]
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
mov ecx [ esi + 0xb8 ]
push [ ebp + 0xe4 ]
call sub_44a58f
add esp 0x4
mov ebx [ esi + 0xb8 ]
mov edx [ ebx ]
mov ecx ebx
inc edx
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x32
mov edx [ ebp + 0x250 ]
mov ecx [ esi + 0xb8 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov eax [ esi + 0xb8 ]
mov ebx esi
mov ecx [ esi + 0xc0 ]
lea esi [ ebx + 0xc8 ]
mov edx [ eax + 0x10 ]
add edx edi
mov [ ebx + 0xcc ] edx
mov eax [ eax ]
sub eax edi
lea edi [ esp + 0x38 ]
mov [ ebx + 0xc8 ] eax
lea eax [ ebx + 0xc4 ]
mov [ esp + 0x4 ] eax
push edi
push esi
mov esi ebx
push [ esi + 0xc4 ]
push ecx
call [ ecx + 0x24 ]
add esp 0x10
mov ecx 0x42
call sub_448c44
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
xor edx edx
mov [ ecx + eax - 0x4 ] edx
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
mov edx [ edi + 0x4 ]
mov ecx [ esi + 0xb8 ]
push [ edi ]
call sub_44a58f
add esp 0x4
mov edx [ esi + 0xb8 ]
mov ecx ebp
call sub_448c97
mov eax [ esi + 0xc0 ]
push edi
push eax
call [ eax + 0x28 ]
add esp 0x8
xor eax eax
lea ecx [ esi + 0xe0 ]
mov [ esi + 0xc ] eax
mov eax [ esi + 0xc0 ]
push ecx
push eax
call [ eax + 0x10 ]
add esp 0x8
mov eax [ esi + 0xc0 ]
push [ esp + 0x4 ]
mov edi ebp
push eax
jmp r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
mov ecx [ esi + 0xc0 ]
lea eax [ esi + 0xc8 ]
push eax
push [ esi + 0xc4 ]
push ecx
call [ ecx + 0x2c ]
add esp 0xc
test eax eax
jne r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
mov ebp [ esp + 0x10 ]
cmp [ ebp ] 0x0
je r-xdata
mov esi [ esp + 0x28 ]
test esi esi
je r-xdata
xor edi edi
lea esi [ esp + 0x60 ]
push [ esi + 0x3c ]
call sub_43fa0e
add esp 0x4
xor ebp ebp
xor edx edx
mov ecx edi
push 0x1
push 0xd
push r--data
jmp r-xdata
mov ecx 0x3d
mov [ esp ] edi
call sub_448c44
mov edi eax
mov [ esi + 0xb8 ] edi
mov ecx edi
mov ebx [ esi + 0x40 ]
mov eax ebx
mov ebp ebx
shr eax 0x18
shr ebp 0x10
mov [ esp + 0x4 ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp + 0x4 ]
mov edi esi
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
cmp [ esi + 0x40 ] 0x0
jle r-xdata
test eax eax
js r-xdata
mov ecx edi
mov edx eax
call sub_44e0cb
jmp r-xdata
mov ecx ebx
call sub_44dc2a
mov ecx [ edi + 0x128 ]
mov [ ecx + 0x4 ] eax
xor ecx ecx
mov eax [ edi + 0x128 ]
mov [ eax + 0x10 ] ecx
mov eax [ edi + 0x128 ]
mov [ eax + 0xc ] ecx
mov ecx ebx
call sub_44dc2a
mov ecx [ edi + 0x128 ]
mov [ ecx + 0x2c ] eax
mov ecx ebx
call sub_44dc2a
mov ecx [ edi + 0x128 ]
mov [ ecx + 0x30 ] eax
push [ edi + 0x110 ]
call sub_489bb6
add esp 0x4
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
jmp r-xdata
mov ecx ebx
call sub_453ee1
mov ebx edi
mov edi eax
push edi
push r--data
call sub_43f758
add esp 0x8
mov ecx ebx
mov edx eax
call sub_44e0cb
push edi
call sub_43f9d4
jmp r-xdata
mov [ edi + 0x144 ] 0x3
cmp [ edi + 0x148 ] 0x0
je r-xdata
push eax
push r--data
cmp [ edi + 0x174 ] 0x0
je r-xdata
mov edx ebx
push eax
call sub_44837a
xor eax eax
push eax
push eax
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov edi [ esp ]
mov ecx 0x32
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov ebx [ esp ]
mov edx [ ebx + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x1
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0xb8 ]
call sub_448e7b
mov eax [ esi + 0x3c ]
mov ecx [ esi + 0xb8 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
call sub_448e7b
push [ esi + 0x3c ]
call sub_43fa0e
add esp 0x4
mov edx [ esi + 0xb8 ]
mov ecx ebx
call sub_453d34
push r--data
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
mov ebp 0x298d
jmp r-xdata
mov [ edi + 0x100 ] 0x1
mov ebp 0x294a
jmp r-xdata
mov eax [ esi + 0x3c ]
je r-xdata
mov esi edi
jmp r-xdata
xor eax eax
mov [ esi + 0x84 ] eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x7c ] eax
push 0x1c
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push [ esi + 0xbc ]
call sub_48f4f9
add esp 0x4
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
push [ esi + 0xbc ]
call sub_469879
add esp 0x4
mov ebx eax
cmp ebx 0xa
ja r-xdata
test ecx ecx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov ecx edi
mov edx eax
call sub_44e0cb
lea eax [ esi + 0x70 ]
test ebx ebx
mov [ eax ] ebx
je r-xdata
test eax eax
js r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov ecx 0x32
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ edi + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ebp [ esi + 0xb8 ]
mov edx [ ebp ]
mov ecx ebp
inc edx
mov [ ebp ] edx
call sub_44dbe6
mov eax [ ebp ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x1
mov eax [ ebx ]
mov ecx [ esi + 0xb8 ]
mov edx [ eax + 0x30 ]
call sub_448e7b
mov eax [ ebx ]
mov [ esp + 0xc ] esi
lea esi [ esp + 0x60 ]
push esi
mov [ esp + 0x8 ] ebx
push [ ebx + 0x4 ]
call [ eax + 0xc ]
add esp 0x8
mov ecx [ esp + 0xc ]
mov ebx eax
mov ebp [ ecx + 0xb8 ]
mov edx [ ebp ]
mov ecx ebp
add edx 0x4
mov [ ebp ] edx
call sub_44dbe6
mov eax [ ebp ]
mov ecx [ ebp + 0x10 ]
mov edx ebx
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ ebp ]
mov [ ebp + 0x18 ] eax
mov eax [ esp + 0xc ]
mov ecx [ eax + 0xb8 ]
mov [ esp + 0x8 ] ebx
push [ esi ]
call sub_44a58f
add esp 0x4
mov eax [ esp + 0xc ]
xor ebx ebx
mov ecx [ edi + 0xe4 ]
cmp [ edi + 0x50 ] bl
mov eax [ eax + 0xb8 ]
mov eax [ eax ]
lea edx [ eax + ecx - 0x1 ]
lea esi [ eax + ecx - 0x5 ]
cmovns esi edx
xor eax eax
inc eax
push eax
push esi
call sub_43f807
add esp 0x8
cmp [ edi + 0x50 ] bl
mov ebp eax
js r-xdata
mov [ edi + 0x100 ] 0x1
mov ebp 0x26f7
jmp r-xdata
mov eax [ esi + 0x3c ]
je r-xdata
push r--data
push [ edi + 0x110 ]
mov [ esp ] edi
mov edi esi
lea esi [ esp + 0x44 ]
lea ebx [ esp + 0x40 ]
mov edx ebx
push esi
call sub_44dc49
add esp 0x4
mov eax [ ebx ]
mov [ edi + 0xd4 ] eax
mov edx [ esi ]
mov [ edi + 0xd0 ] edx
mov ecx [ edi + 0xc8 ]
lea esi [ ecx + 0x2 ]
cmp edx esi
mov esi edi
jne r-xdata
lea eax [ esi + 0x14 ]
xor ebp ebp
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x80 ]
lea eax [ esp + 0x54 ]
lea edx [ esp + 0x58 ]
push eax
call sub_44dc49
mov edx [ esp + 0x84 ]
add esp 0x4
mov eax [ edx + 0x18 ]
cmp [ edx ] eax
jle r-xdata
cmp [ esi + 0x4 ] 0x5
jne r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
xor ecx ecx
mov [ esi + 0x38 ] 0x1
inc ecx
xor ecx ecx
mov edx ebp
push ebx
call sub_44a2c6
add esp 0x4
push ebx
push ebp
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_48d171
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x80 ]
inc eax
mov [ esi + 0x80 ] eax
cmp eax [ esi + 0x84 ]
jl r-xdata
xor eax eax
inc eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x20 ] eax
jmp r-xdata
mov ecx 0x32
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ edi + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ebx [ esi + 0xb8 ]
mov edx [ ebx ]
mov ecx ebx
inc edx
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x1
mov ebx [ esi + 0xb8 ]
mov edx [ ebx ]
mov ecx ebx
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov ebp edi
mov edi esi
xor esi esi
mov [ ecx + eax - 0x4 ] esi
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
mov edx [ edi + 0x8c ]
mov ecx [ edi + 0xb8 ]
push [ edi + 0x98 ]
call sub_44a58f
add esp 0x4
mov ebx [ edi + 0xb8 ]
mov edx [ ebx ]
mov ecx ebx
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x4 ] esi
mov esi edi
mov edi ebp
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
mov edx [ esi + 0x88 ]
mov ecx [ esi + 0xb8 ]
push [ esi + 0x94 ]
call sub_44a58f
add esp 0x4
mov eax [ esi + 0xb8 ]
mov ecx [ edi + 0xe4 ]
mov eax [ eax ]
lea eax [ eax + ecx - 0x1 ]
mov [ esi + 0xa0 ] eax
cmp [ edi + 0x50 ] 0x0
jns r-xdata
mov edx r--data
mov ecx edi
push 0x20
call sub_44a29f
add esp 0x4
mov edx [ esi + 0x90 ]
mov ecx edi
push [ esi + 0x9c ]
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx edi
push 0xe
call sub_44a29f
add esp 0x4
mov eax [ edi + 0x254 ]
mov [ esp + 0x50 ] eax
mov ecx [ edi + 0x258 ]
mov [ esi + 0xa4 ] ecx
call sub_43f758
add esp 0x4
call [ eax + 0x20 ]
mov eax [ esp + 0x4 ]
mov eax [ eax ]
push [ esi + 0xcc ]
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ esi + 0xcc ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x4 ]
mov ebp 0x27fb
mov eax [ eax ]
cmp eax 0x1
jne r-xdata
mov ecx 0x3d
call sub_448c44
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
mov ecx [ esi + 0xb8 ]
mov edx [ esi + 0xdc ]
push [ esi + 0xd8 ]
call sub_44a58f
add esp 0x4
mov edx [ esi + 0xb8 ]
mov ecx edi
call sub_448c97
mov eax [ esi + 0xc0 ]
push ebp
push eax
call [ eax + 0x18 ]
add esp 0x8
xor edi edi
push r--data
call sub_43f79e
add esp 0x4
xor edi edi
inc edi
push [ esp + 0x34 ]
push esi
push r--data
call sub_43f758
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
mov ecx [ edx + 0x14 ]
xor ebx ebx
cmp [ ecx + eax ] 0x0
setne bl
inc eax
mov [ edx + 0x18 ] eax
call sub_44a668
add esp 0xc
jmp r-xdata
mov edx [ edi + 0xb8 ]
mov ecx [ esp ]
call sub_453d34
push [ edi + 0x3c ]
call sub_43fa0e
add esp 0x4
mov ebp 0x28be
xor esi esi
mov [ edi + 0x100 ] 0x1
mov ebp 0x28dc
jmp r-xdata
mov eax [ esi + 0x3c ]
je r-xdata
mov eax sub_4540b4
movd xmm0 eax
mov eax sub_45408f
movd xmm1 eax
mov eax sub_453f6e
punpckldq xmm1 xmm0
movd xmm0 eax
mov eax sub_454c8a
pshufd xmm0 xmm0 0x50
punpcklqdq xmm0 xmm1
movdqu [ edi + 0x3e8 ] xmm0
mov [ edi + 0x3dc ] sub_454184
mov [ edi + 0x3e0 ] sub_45424c
mov [ edi + 0x3f8 ] sub_4542f5
mov [ edi + 0x3d8 ] sub_45476b
mov [ edi + 0x3fc ] eax
mov [ edi + 0x400 ] eax
mov eax [ edi + 0xf4 ]
test eax eax
je r-xdata
add esp 0x4
jmp r-xdata
cmp [ edi + 0x14c ] 0x0
je r-xdata
push [ edi + 0x120 ]
push [ edi + 0x11c ]
push edi
call sub_4499c2
add esp 0xc
push 0x15
push [ edi + 0x248 ]
call sub_431a8c
add esp 0x8
cmp [ eax ] 0x0
je r-xdata
push r--data
jmp r-xdata
push eax
call sub_43fa0e
add esp 0x4
mov ebx edi
mov edi esi
mov esi [ edi + 0x48 ]
push esi
call sub_4a7f30
add esp 0x4
push eax
push esi
mov esi edi
call sub_48f5d3
add esp 0x8
push [ esi + 0x48 ]
call sub_43f9d4
add esp 0x4
xor ebp ebp
xor edx edx
mov ecx ebx
push 0x1
push 0xd
push r--data
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
call sub_4928fc
test eax eax
je r-xdata
push ebx
call sub_4698af
add esp 0x4
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
push ebx
call sub_4698af
add esp 0x4
mov ebx eax
push [ esi + 0xbc ]
call sub_48f4f9
add esp 0x4
push ebx
push eax
push r--data
call sub_43f758
add esp 0xc
mov ebx eax
push ebx
call sub_4a7f30
add esp 0x4
mov ecx edi
mov edx ebx
push eax
call sub_44a29f
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
mov [ esi + 0x50 ] 0x0
mov eax 0x608
bt eax ebx
jae r-xdata
cmp [ esi + 0x4c ] 0x0
mov ebx edi
lea edi [ esi + 0x4c ]
je r-xdata
xor eax eax
mov [ edi + 0x344 ] eax
cmp [ esi + 0x50 ] eax
je r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
jmp r-xdata
cmp [ esi + 0x78 ] 0x5
jl r-xdata
mov [ edi + 0x100 ] 0x1
mov ebp 0x2555
jmp r-xdata
mov eax [ esi + 0x3c ]
je r-xdata
xor ebp ebp
push [ edi + 0x110 ]
call sub_43f7d4
add esp 0x4
mov ebx edi
mov [ esi + 0x3c ] eax
mov edi esi
xor esi esi
mov [ eax ] esi
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ edi + 0x3c ]
mov [ ecx + 0x4 ] eax
push [ edi + 0x64 ]
push r--data
call sub_43f758
add esp 0x8
push esi
push eax
push [ edi + 0x3c ]
call sub_43f887
add esp 0xc
push esi
push esi
mov esi edi
mov edi ebx
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
lea eax [ ebp + ebx ]
lea ecx [ edi + 0xa4 ]
push [ edi + 0xe4 ]
push ecx
push eax
call sub_49a1f0
add esp 0xc
mov [ esp ] edi
mov eax ebp
add ebx [ edi + 0xe4 ]
mov edi ebp
mov ebp [ esp + 0xc ]
mov ecx [ ebp + 0xb8 ]
add eax ebx
mov edx [ ecx ]
mov ecx [ ecx + 0x10 ]
add edx 0xfffffffb
add ecx 0x5
push edx
push ecx
push eax
call sub_49a1f0
add esp 0xc
mov eax [ ebp + 0xb8 ]
mov eax [ eax ]
lea eax [ eax + ebx - 0x5 ]
cmp eax esi
je r-xdata
mov al [ edi + 0xe7 ]
mov ebx 0x4
mov [ ebp ] al
mov al [ edi + 0xe6 ]
mov [ ebp + 0x1 ] al
mov al [ edi + 0xe5 ]
mov [ ebp + 0x2 ] al
mov al [ edi + 0xe4 ]
mov [ ebp + 0x3 ] al
push eax
call sub_43fa0e
add esp 0x4
xor ebp ebp
xor edx edx
mov ecx edi
push 0x1
push 0xd
push r--data
jmp r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_43f79e
add esp 0x4
mov ebp eax
push [ esi + 0x3c ]
call sub_43fa0e
add esp 0x4
jmp r-xdata
add esp 0x8
jmp r-xdata
push r--data
mov edi [ esp + 0x4 ]
push [ edi + 0x110 ]
jmp r-xdata
cmp [ eax ] 0x6
jne r-xdata
mov edx [ esp ]
xor ecx ecx
mov [ edx + 0x188 ] ecx
cmp [ eax ] ecx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov ecx [ edx + 0x14 ]
cmp [ ecx + eax ] 0x0
lea eax [ eax + 0x1 ]
mov [ edx + 0x18 ] eax
je r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
push ebp
call sub_43f9d4
add esp 0x4
mov [ esi + 0x24 ] 0x1
jmp r-xdata
mov ecx [ esi + 0x94 ]
lea edx [ ecx + eax + 0xd ]
lea eax [ ecx + eax + 0x11 ]
mov [ esi + 0xa8 ] edx
push 0x1
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0xb0 ] eax
mov cl [ esi + 0xab ]
mov [ eax ] cl
mov al [ esi + 0xaa ]
mov ecx [ esi + 0xb0 ]
mov [ ecx + 0x1 ] al
mov al [ esi + 0xa9 ]
mov ecx [ esi + 0xb0 ]
mov [ ecx + 0x2 ] al
mov al [ esi + 0xa8 ]
mov ecx [ esi + 0xb0 ]
mov [ ecx + 0x3 ] al
mov eax [ esi + 0xb0 ]
lea ecx [ eax + 0x5 ]
mov [ esi + 0xac ] ecx
mov [ eax + 0x4 ] 0xd
mov al [ esi + 0x97 ]
mov ecx [ esi + 0xac ]
mov [ ecx ] al
mov al [ esi + 0x96 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x1 ] al
mov al [ esi + 0x95 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x2 ] al
mov al [ esi + 0x94 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x3 ] al
mov eax [ esi + 0xac ]
add eax 0x4
mov [ esi + 0xac ] eax
push [ esi + 0x94 ]
push [ esi + 0x88 ]
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x94 ]
mov ecx [ esi + 0xac ]
lea edx [ ecx + eax ]
mov [ esi + 0xac ] edx
mov dl [ esi + 0xa3 ]
mov [ ecx + eax ] dl
mov al [ esi + 0xa2 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x1 ] al
mov al [ esi + 0xa1 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x2 ] al
mov al [ esi + 0xa0 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x3 ] al
mov eax [ esi + 0xac ]
add eax 0x4
mov [ esi + 0xac ] eax
cmp [ edi + 0x50 ] 0x0
js r-xdata
add eax 0xfffffffc
mov [ esi + 0xa0 ] eax
cmp [ esi + 0x7c ] 0x0
je r-xdata
mov ecx [ esi + 0xa4 ]
cmp ecx 0x9
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x3c ]
mov [ eax + 0x10 ] ecx
push edi
push edi
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov edi [ esp ]
mov ecx r--data
test eax eax
mov edx r--data
cmovne edx ecx
push [ esp + 0x30 ]
push eax
push edx
push r--data
call sub_43f758
add esp 0x10
mov ecx [ esi + 0x3c ]
mov [ ecx + 0xc ] eax
xor ecx ecx
inc ecx
mov ecx [ ebp + 0x3c ]
mov [ ecx + 0x4 ] eax
mov ecx 0x0
mov eax [ ebp + 0x3c ]
mov [ eax + 0x8 ] edi
xor edi edi
or esi [ ebp + 0x40 ]
mov eax [ esp + 0x24 ]
or esi eax
mov esi ebp
je r-xdata
mov ecx rw-data
mov eax 0x20
mov [ esp + 0x60 ] rw-data
mov [ esp + 0x48 ] 0x20
mov ecx [ esp + 0x60 ]
jmp r-xdata
mov eax [ edi + 0x3c ]
mov ecx [ edi + 0xb8 ]
mov eax [ eax + 0x18 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x8 ]
call sub_448e7b
inc esi
cmp esi [ edi + 0x40 ]
jl r-xdata
push eax
call sub_43fa0e
add esp 0x4
xor ebp ebp
xor edx edx
mov ecx edi
push 0x1
push 0xd
push r--data
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_43f79e
add esp 0x4
mov [ esi + 0x48 ] eax
push [ esi + 0x3c ]
call sub_43fa0e
add esp 0x4
mov ecx 0x32
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ edi + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ebx edi
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x0
mov edx [ esi + 0x48 ]
mov ecx [ esi + 0xb8 ]
call sub_448e7b
mov edx [ esi + 0xb8 ]
mov ecx ebx
call sub_453d34
push r--data
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax 0x4
mov [ esi + 0x4 ] eax
mov ebp edi
cmp [ ebp + 0x128 ] 0x0
lea edi [ ebp + 0x248 ]
je r-xdata
push [ edi + 0x8 ]
push eax
call sub_46ed80
add esp 0x8
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
push 0xc
push edi
call sub_449b18
add esp 0x8
mov ebp esi
mov esi edi
lea edi [ esi + 0x248 ]
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ esp ] esi
mov [ esi + 0x174 ] 0x1
xor eax eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x8 ]
push [ ecx + 0x8 ]
call sub_4a7d00
add esp 0x8
xor ebx ebx
test eax eax
mov [ esp ] edi
sete bl
je r-xdata
mov ebx edi
mov edi esi
mov esi [ edi + 0x48 ]
push esi
call sub_4a7f30
add esp 0x4
push eax
push esi
mov esi edi
mov edi ebx
call sub_48f5d3
add esp 0x8
push [ esi + 0x48 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x3c ]
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_43f79e
add esp 0x4
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
mov eax [ eax + 0x18 ]
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ esi + 0x68 ] 0x1000000
lea eax [ esi + 0x68 ]
mov [ esi + 0x6c ] 0xb
lea ecx [ esi + 0x78 ]
lea edx [ esp + 0x5c ]
push edi
push sub_453528
push ecx
push edx
push 0x5
push eax
call sub_492936
add esp 0x18
mov ebp 0x24cd
test eax eax
mov [ edi + 0x6d0 ] eax
jne r-xdata
mov ebp edi
lea eax [ esi + 0x64 ]
lea ecx [ esi + 0x54 ]
lea edx [ esi + 0x60 ]
mov edi esi
lea esi [ esp + 0x60 ]
push esi
mov esi edi
push eax
push ecx
push edx
push [ esi + 0xbc ]
call sub_469149
add esp 0x14
test eax eax
mov [ esi + 0x50 ] eax
je r-xdata
push [ ebx + 0x248 ]
call sub_44422f
add esp 0x4
test eax eax
mov [ ebx + 0x250 ] eax
je r-xdata
push 0x1e
push [ ebx + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
push [ esi + 0x60 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x50 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x64 ]
call sub_43f9d4
add esp 0x4
cmp [ ebx + 0x4 ] 0xc
jne r-xdata
push eax
call sub_43fa0e
add esp 0x4
xor ebp ebp
mov edx r--data
mov ecx edi
push 0x1
push ebp
push ebp
jmp r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_43f79e
add esp 0x4
lea ebp [ edi + 0x250 ]
mov [ edi + 0x250 ] eax
push [ esi + 0x3c ]
call sub_43fa0e
add esp 0x4
lea eax [ esi + 0x34 ]
mov ebx edi
lea edi [ esi + 0x4c ]
mov [ esp + 0x4 ] eax
cmp ebx rw-data
je r-xdata
push ebp
call sub_4a7f30
add esp 0x4
push eax
push ebp
call sub_48f5d3
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
mov ebp [ esp + 0x4 ]
lea ebx [ esp + 0x48 ]
mov eax [ ebp ]
push ebx
push esi
mov [ esp + 0x1c ] edi
push edi
push [ ebp + 0x4 ]
call [ eax + 0x2c ]
add esp 0x10
mov esi [ esp + 0xc ]
mov [ esp + 0x10 ] eax
mov edi [ esp ]
mov edx [ esi + 0xb8 ]
mov ecx edi
push [ ebx ]
push eax
push [ esp + 0x68 ]
mov ebx [ esp + 0x14 ]
push ebx
call sub_453b88
add esp 0x10
push ebx
call sub_43f9d4
add esp 0x4
push [ esp + 0x10 ]
call sub_43f9d4
add esp 0x4
push [ esp + 0x14 ]
call sub_43f9d4
add esp 0x4
mov edx [ esi + 0xb8 ]
mov ecx edi
call sub_448c97
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ esi + 0x4 ] 0x1
mov eax [ ebp ]
push [ ebp + 0x4 ]
call [ eax + 0x4 ]
add esp 0x4
push [ ebp + 0x8 ]
call sub_43f9d4
add esp 0x4
push ebp
call sub_43f9d4
push 0x2757
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x20
push [ edi + 0x248 ]
call sub_431daf
add esp 0x8
lea ecx [ esp + 0x4c ]
mov [ esi + 0xbc ] eax
push ecx
push ebp
push eax
call sub_46818d
add esp 0xc
mov ebx eax
test ebp ebp
je r-xdata
call sub_4842ab
jmp r-xdata
movsx edx [ eax + 0x1 ]
cmp ecx edx
jne r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
push 0x25f4
push r--data
push r--data
call sub_4a509d
add esp 0xc
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov ecx edi
mov edx r--data
push 0xf
call sub_44a29f
add esp 0x4
push 0x1e
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
xor ecx ecx
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_410198 ]
mov edx r--data
mov ecx edi
push 0x21
call sub_44a29f
add esp 0x4
push r--data
push [ edi + 0x110 ]
jmp r-xdata
lea ecx [ edi + 0xa4 ]
push [ edi + 0xe4 ]
push ecx
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0xac ]
mov ecx [ esi + 0xb8 ]
add eax [ edi + 0xe4 ]
mov [ esi + 0xac ] eax
mov edx [ ecx ]
mov ecx [ ecx + 0x10 ]
add edx 0xfffffffb
add ecx 0x5
push edx
push ecx
push eax
call sub_49a1f0
add esp 0xc
mov ecx [ esi + 0xb8 ]
mov eax [ esi + 0xac ]
lea edx [ esp + 0x50 ]
mov ecx [ ecx ]
lea eax [ eax + ecx - 0x5 ]
xor ecx ecx
mov [ esi + 0xac ] eax
mov [ eax ] cl
mov eax [ esi + 0xac ]
mov [ eax + 0x1 ] cl
mov eax [ esi + 0xac ]
mov [ eax + 0x2 ] cl
mov eax [ esi + 0xac ]
mov [ eax + 0x3 ] cl
lea eax [ esi + 0xa4 ]
mov ecx [ esi + 0xa8 ]
add ecx 0x4
push edi
push sub_453528
push eax
push edx
push ecx
push [ esi + 0xb0 ]
call sub_492936
add esp 0x18
mov ebp 0x268a
test eax eax
mov [ edi + 0x6d0 ] eax
jne r-xdata
mov cl [ edi + 0xe7 ]
mov [ eax ] cl
mov al [ edi + 0xe6 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x1 ] al
mov al [ edi + 0xe5 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x2 ] al
mov al [ edi + 0xe4 ]
mov ecx [ esi + 0xac ]
mov [ ecx + 0x3 ] al
mov eax [ esi + 0xac ]
add eax 0x4
mov [ esi + 0xac ] eax
push r--data
cmp [ eax + 0x4 ] 0xe
jne r-xdata
mov ebx [ esp + 0x80 ]
mov edx esi
lea eax [ esp + 0x48 ]
mov ecx ebx
push eax
call sub_44dc49
mov edx ebx
add esp 0x4
mov eax [ edx + 0x18 ]
mov ebx 0x0
cmp [ edx ] eax
jle r-xdata
push ecx
push eax
push r--data
call sub_43f758
add esp 0xc
push ebx
push eax
mov ebx ebp
push [ ebx + 0x3c ]
call sub_43f887
add esp 0xc
inc edi
cmp edi [ ebx + 0x40 ]
jl r-xdata
mov edx [ ebp + 0x248 ]
mov ecx ebp
call sub_454dd0
cmp [ ebp + 0x128 ] 0x0
je r-xdata
push 0xa9
push [ edi ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp [ edi + 0x128 ] 0x0
mov ebp 0x2ab1
je r-xdata
push eax
call sub_43c0cc
add esp 0x4
movzx eax al
mov ecx 0x2c
mov esi 0x15
sub ecx eax
sub esi eax
push ecx
push [ edi ]
call sub_43194f
add esp 0x8
mov ebx eax
push esi
push [ edi ]
call sub_431a8c
add esp 0x8
mov edi eax
test ebx ebx
je r-xdata
mov edx r--data
mov ecx edi
push 0x18
call sub_44a29f
add esp 0x4
jmp r-xdata
mov ebx [ esp + 0x5c ]
push [ esp + 0x60 ]
push r--data
push ebp
call sub_447e12
add esp 0xc
mov esi [ esp + 0x60 ]
push [ edi + 0xbc ]
call sub_48f4f9
add esp 0x4
push esi
mov esi edi
mov edi ebp
push eax
push r--data
call sub_43f758
add esp 0xc
mov ebx eax
push ebx
call sub_4a7f30
add esp 0x4
mov ecx edi
mov edx ebx
push eax
call sub_44a29f
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
jmp r-xdata
xor eax eax
cmp ebx 0x3
mov edi ebp
sete al
mov [ esi + 0x58 ] eax
je r-xdata
push [ ebx + 0x110 ]
call sub_43f7d4
add esp 0x4
mov [ esi + 0x3c ] eax
mov edi esi
xor esi esi
inc esi
mov [ eax ] esi
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ edi + 0x3c ]
mov [ ecx + 0x4 ] eax
push r--data
call sub_43f79e
add esp 0x4
push esi
mov esi edi
push eax
push [ esi + 0x3c ]
call sub_43f887
add esp 0xc
xor eax eax
push eax
push eax
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov edi ebx
test [ rw-data ] 0x5
lea ecx [ ebx + 0x250 ]
mov [ esp + 0x4 ] ebp
mov [ esp + 0x8 ] ecx
je r-xdata
mov [ esp + 0x4 ] ebp
lea ebp [ ebx + 0x250 ]
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov eax [ ebx + 0x5 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
mov [ esi + 0x84 ] eax
js r-xdata
mov ecx [ esi + 0x7c ]
test ecx ecx
je r-xdata
test ebp ebp
je r-xdata
test ebx ebx
jne r-xdata
add eax 0x2
push ecx
push [ esi + 0xcc ]
push eax
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
cmp [ esi + 0x84 ] 0x0
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
lea ebp [ esi + 0x34 ]
mov [ esi + 0x34 ] ecx
jmp r-xdata
jmp r-xdata
mov ebx edi
mov edi [ esp + 0x58 ]
mov ebp [ esp + 0x54 ]
mov ecx r--data
mov edx edi
push ebp
call sub_44e107
add esp 0x4
mov [ esi + 0x14 ] eax
mov ecx r--data
mov edx edi
push ebp
call sub_44e107
add esp 0x4
mov [ esi + 0x18 ] eax
push 0x26
push [ ebx + 0x248 ]
call sub_43194f
add esp 0x8
xor ebx ebx
test eax eax
je r-xdata
call sub_4842ab
add esp 0x8
mov eax [ esp + 0x50 ]
jmp r-xdata
mov eax [ eax + 0x5 ]
add ecx 0xfffffff7
bswap eax
cmp eax ecx
jbe r-xdata
xor eax eax
mov edi ebp
inc eax
mov [ ebp + 0x104 ] eax
mov [ ebp + 0x108 ] eax
cmp [ ebp + 0x12c ] 0x0
je r-xdata
cmp [ ebp + 0xec ] 0x0
jne r-xdata
mov [ edi + 0x100 ] 0x1
jmp r-xdata
mov eax [ esp ]
cmp [ edi ] 0x0
mov ecx [ eax + 0x128 ]
je r-xdata
mov [ esp + 0x4 ] edi
mov edi [ esp ]
mov edx r--data
mov ecx [ edi + 0x128 ]
push 0x0
push sub_455d79
call sub_454cd8
add esp 0x8
mov [ ebp + 0xb8 ] eax
mov ecx eax
lea esi [ ebp + 0xb8 ]
mov ebx ebp
mov edx [ esp + 0x4 ]
call sub_448e7b
jmp r-xdata
push 0x0
push [ esi + 0xbc ]
call sub_4695f7
add esp 0x8
mov [ esi + 0x5c ] eax
jmp r-xdata
push r--data
push edi
call sub_447e12
add esp 0x8
mov ebp [ esp + 0x8 ]
jmp r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebp eax
push ebp
call sub_4a7f30
add esp 0x4
mov ecx ebx
mov edx ebp
push eax
call sub_44a29f
add esp 0x4
push ebp
call sub_43f9d4
add esp 0x4
mov [ edi ] 0x1
xor edi edi
mov ecx 0x32
mov [ ebx + 0x188 ] edi
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ ebp ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov edx [ esi + 0xb8 ]
mov ecx ebx
call sub_448c97
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edi
mov eax [ esp + 0x4 ]
mov [ eax ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x24 ] edi
mov edi ebx
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
push sub_453dfd
call sub_47dc24
add esp 0x4
mov [ edi + 0x124 ] eax
mov [ edi + 0x3e4 ] sub_453e19
mov [ edi + 0x3b0 ] sub_453e84
push 0x2d
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp [ edi + 0xec ] 0x0
jne r-xdata
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
jmp r-xdata
add ebx 0x9
test eax eax
mov [ esp ] edi
mov [ esp + 0x8 ] ebx
je r-xdata
add eax 0x9
mov [ esi + 0x74 ] eax
mov [ esi + 0x80 ] 0x0
mov [ esi + 0x74 ] ecx
jmp r-xdata
mov edx r--data
mov ecx edi
push 0x1c
call sub_44a29f
add esp 0x4
mov ebx [ esp + 0x4c ]
push ebx
call sub_4a7f30
add esp 0x4
mov ecx edi
mov edx ebx
push eax
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx edi
push 0x3
call sub_44a29f
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov eax [ esi + 0xc0 ]
mov ebx esi
lea esi [ ebx + 0xe0 ]
push esi
mov ebp [ esp + 0x4 ]
push [ ebp + 0x6a4 ]
push eax
call [ eax + 0xc ]
add esp 0xc
test eax eax
mov [ ebx + 0xe4 ] eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x4 ] 0x5
mov ebx [ r--data ]
xor edi edi
inc eax
mov [ esi + 0x2c ] eax
mov [ esi + 0xc ] eax
mov eax [ esp ]
test ebx ebx
mov [ eax + 0x188 ] 0x3
mov [ esi + 0xc0 ] edi
jle r-xdata
mov ebp [ esp ]
mov [ ebp + 0x188 ] 0x1
push [ esi + 0x80 ]
push r--data
push ebp
call sub_447e12
add esp 0xc
mov eax [ esi + 0x74 ]
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov [ esi + 0x94 ] eax
mov ecx [ esi + 0x74 ]
lea edx [ ecx + 0x4 ]
lea eax [ ecx + eax + 0x4 ]
mov [ esi + 0x88 ] edx
mov [ esi + 0x74 ] eax
mov eax [ ecx + 0x4 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0x88 ]
mov eax [ esi + 0x74 ]
add ecx 0x4
mov [ esi + 0x8c ] ecx
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov [ esi + 0x9c ] eax
mov ecx [ esi + 0x74 ]
lea edx [ ecx + 0x4 ]
lea eax [ ecx + eax + 0x4 ]
mov ecx 0x32
mov [ esi + 0x90 ] edx
mov [ esi + 0x74 ] eax
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ ebp + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x0
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov ebx esi
xor esi esi
mov [ ecx + eax - 0x4 ] esi
mov eax [ edi ]
mov [ edi + 0x18 ] eax
mov edx [ ebx + 0x8c ]
mov ecx [ ebx + 0xb8 ]
push [ ebx + 0x98 ]
call sub_44a58f
add esp 0x4
mov edi [ ebx + 0xb8 ]
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x4 ] esi
mov esi ebx
mov eax [ edi ]
mov [ edi + 0x18 ] eax
mov edx [ esi + 0x88 ]
mov ecx [ esi + 0xb8 ]
push [ esi + 0x94 ]
call sub_44a58f
add esp 0x4
mov edx [ esi + 0xb8 ]
mov ecx ebp
call sub_448c97
mov [ esi + 0x4 ] 0x3
cmp [ esi + 0x58 ] 0x0
je r-xdata
xor eax eax
mov ecx r--data
mov edx edi
push ebp
call sub_44e107
add esp 0x4
test eax eax
setne al
jmp r-xdata
mov [ esi + 0xb4 ] eax
push [ esi + 0xb0 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esi + 0xb4 ]
mov ecx edi
mov edi esi
mov edx [ edi + 0xb8 ]
mov esi [ eax + 0x5 ]
add eax 0x9
bswap esi
push esi
mov esi edi
mov edi ecx
push eax
push [ esi + 0x94 ]
push [ esi + 0x88 ]
call sub_453b88
add esp 0x10
mov edx [ esi + 0xb8 ]
mov ecx edi
call sub_448c97
lea eax [ esi + 0x4 ]
jmp r-xdata
push 0x95
push [ edi ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp + 0xf4 ] 0x0
jne r-xdata
mov edx r--data
push 0x0
push sub_455d79
call sub_454cd8
add esp 0x8
lea esi [ ebp + 0xb8 ]
mov ebx ebp
mov [ ebp + 0xb8 ] eax
mov edx r--data
push 0x0
push sub_455d79
call sub_454cd8
add esp 0x8
mov ecx eax
mov edx edi
lea esi [ ebp + 0xb8 ]
mov ebx ebp
mov [ ebp + 0xb8 ] eax
call sub_448e7b
jmp r-xdata
mov edx [ esi ]
mov ecx edi
call sub_448c97
mov ebp 0x2a84
mov esi ebx
push 0x5c
push 0x1
call sub_43f807
add esp 0x8
mov [ edi + 0x128 ] eax
mov [ eax ] edi
mov ecx [ edi + 0x128 ]
call sub_4489be
push 0x2e
push [ edi + 0x248 ]
call sub_431a8c
add esp 0x8
cmp [ eax ] 0x0
je r-xdata
mov [ edi + 0x128 ] 0x0
mov edx r--data
mov ecx edi
push 0x0
push 0xfffffffe
call sub_44b0db
add esp 0x8
mov [ esi + 0x84 ] 0x0
jmp r-xdata
xor eax eax
mov edi [ esi + 0x78 ]
xor edx edx
mov ecx ebx
add edi 0xfffffff7
add esp 0x4
jmp r-xdata
mov edx r--data
mov ecx edi
push 0x12
call sub_44a29f
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xc0 ]
lea ebx [ edi + 0xc4 ]
push ebx
push eax
call [ eax + 0x1c ]
add esp 0x8
test eax eax
mov [ edi + 0xe4 ] eax
je r-xdata
cmp eax 0x3
mov eax [ ebp + 0x110 ]
jne r-xdata
push edi
push ebp
push r--data
call sub_43f758
add esp 0xc
mov ecx [ esp ]
mov edi eax
mov edx edi
push 0x0
push 0xe
push r--data
call sub_44a668
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ebx [ esp ]
mov [ ebx + 0x188 ] 0x2
push [ ebx + 0x110 ]
call sub_43f7d4
add esp 0x4
mov [ esi + 0x3c ] eax
mov [ eax ] 0x1
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ esi + 0x3c ]
mov [ ecx + 0x4 ] eax
push [ ebx + 0xf8 ]
push [ ebx + 0x250 ]
push r--data
call sub_43f758
add esp 0xc
mov edi esi
xor esi esi
push esi
push eax
push [ edi + 0x3c ]
call sub_43f887
add esp 0xc
push esi
push esi
mov esi edi
mov edi ebx
push [ esi + 0x3c ]
call sub_48d18c
add esp 0xc
mov [ esi + 0x4 ] 0x6
mov ecx 0x32
mov eax 0x4
mov edi [ esp ]
mov [ edi + 0x188 ] eax
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ edi + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov edx [ esi + 0xb8 ]
mov ecx edi
call sub_448c97
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x278d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esi + 0xc0 ]
mov ebp esi
cmp [ esi + 0x20 ] 0x0
je r-xdata
lea eax [ esi + 0x14 ]
mov [ esi + 0x28 ] ebx
mov ecx r--data
mov edx edi
push ebp
call sub_44e107
add esp 0x4
test eax eax
je r-xdata
movzx eax al
mov [ esi + 0x1c ] eax
push 0x27
mov eax [ esp + 0x4 ]
push [ eax + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x1
push ebp
call sub_448605
add esp 0x4
test eax eax
je r-xdata
mov ebx esi
mov esi [ ebp + 0x248 ]
push 0x96
push esi
call sub_431a8c
add esp 0x8
push esi
push eax
call sub_4969e8
add esp 0x8
test eax eax
mov [ ebp + 0x18c ] eax
je r-xdata
mov ecx [ ebp + 0x128 ]
xor eax eax
mov edx r--data
push eax
push eax
call sub_454cd8
add esp 0x8
mov ecx ebp
mov edx eax
mov [ esi + 0xb8 ] eax
call sub_448c97
mov edi [ esp ]
mov ecx [ edi + 0x128 ]
mov edx r--data
call sub_448dc8
mov [ esi + 0xb8 ] eax
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov edx [ esi + 0xb8 ]
mov ecx edi
call sub_448c97
xor eax eax
push 0x2f
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
mov ebx edi
mov edi eax
push 0x2e
push [ ebx + 0x248 ]
call sub_431a8c
add esp 0x8
push r--data
push edi
mov edi ebx
push eax
push [ edi + 0x128 ]
call sub_448ca9
add esp 0x10
xor eax eax
inc eax
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
mov ebp [ esp + 0x8 ]
jle r-xdata
push r--data
mov edi [ esp + 0x4 ]
push edi
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ebp ecx
mov eax [ ecx ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ebx eax
test ebx ebx
js r-xdata
lea ecx [ edi + 0xe4 ]
mov esi edi
lea eax [ edi + 0xd0 ]
mov [ esp + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ esp + 0x8 ] ebx
jmp r-xdata
push r--data
mov ebx [ esp + 0x4 ]
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ edi + 0xc0 ]
push esi
push eax
call [ eax + 0x10 ]
add esp 0x8
mov esi edi
mov edi ebx
jmp r-xdata
push r--data
push eax
push r--data
push eax
jmp r-xdata
xor ebp ebp
jmp r-xdata
mov ecx 0x32
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ edi + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esi + 0xc0 ]
lea ecx [ esi + 0xc8 ]
push ecx
push eax
call [ eax + 0x8 ]
add esp 0x8
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x1000000
mov ebx [ esi + 0xc8 ]
mov edi [ esi + 0xb8 ]
add ebx 0x2
mov ecx edi
mov eax ebx
mov ebp ebx
shr eax 0x18
shr ebp 0x10
mov [ esp + 0x4 ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x6
mov edi [ esi + 0xb8 ]
mov bl [ esi + 0xc8 ]
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov ebp esi
mov [ ecx + eax - 0x1 ] bl
mov edi [ esi + 0xb8 ]
mov esi [ ebp + 0xc8 ]
mov ebx [ ebp + 0xcc ]
mov edx [ edi ]
mov ecx edi
add edx esi
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi + 0x10 ]
add eax [ edi ]
sub eax esi
push esi
mov esi ebp
push ebx
push eax
call sub_49a1f0
add esp 0xc
mov edx [ esi + 0xb8 ]
mov ecx [ esp ]
call sub_448c97
push eax
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
inc edi
cmp edi ebx
jl r-xdata
mov ecx [ ecx ]
xor esi esi
mov ebx [ esp ]
xor eax eax
mov ecx 0x32
inc eax
mov [ ebx + 0x188 ] eax
mov [ esi + 0x20 ] eax
call sub_448c44
mov [ esi + 0xb8 ] eax
mov ecx eax
mov edx [ ebx + 0x250 ]
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov ecx [ esi + 0xb8 ]
mov edx r--data
call sub_448e7b
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x0
mov edx [ esi + 0x60 ]
mov ecx [ esi + 0xb8 ]
call sub_448e7b
mov edi [ esi + 0xb8 ]
mov edx [ edi ]
mov ecx edi
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x0
mov eax [ edi ]
mov [ edi + 0x18 ] eax
mov edx [ esi + 0x50 ]
mov ecx [ esi + 0xb8 ]
push [ esi + 0x54 ]
call sub_44a58f
add esp 0x4
mov edx [ esi + 0xb8 ]
mov ecx ebx
call sub_448c97
push r--data
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esp ]
mov eax [ eax + 0x6a8 ]
test eax eax
jne r-xdata
mov [ esp ] ebp
mov ebp esi
push 0x16
push [ edi ]
call sub_43194f
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push [ ebp + 0x128 ]
call sub_45584f
add esp 0xc
push r--data
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x97
push [ ebp + 0x248 ]
call sub_43194f
add esp 0x8
push eax
push [ ebp + 0x194 ]
call sub_496724
add esp 0x8
mov [ ebp + 0x190 ] eax
mov ecx [ ebp + 0x18c ]
mov [ eax + 0x1c ] ecx
xor eax eax
push eax
push eax
push [ ebp + 0x128 ]
call sub_455707
add esp 0xc
jmp r-xdata
mov [ edi + 0x12c ] eax
cmp [ esi + 0x7c ] 0x0
mov edi [ esp ]
jne r-xdata
xor edi edi
mov [ esp + 0xc ] esi
call sub_447e12
jmp r-xdata
push r--data
mov edi [ esp + 0x4 ]
push edi
jmp r-xdata
add edi 0xfffffffc
sub edi ebx
jl r-xdata
mov eax [ esi + 0xc0 ]
lea edi [ esi + 0xd8 ]
lea ebp [ esi + 0xd0 ]
mov eax [ eax + 0x14 ]
mov [ esp + 0x14 ] eax
push 0x28
mov ebx [ esp + 0x4 ]
push [ ebx + 0x248 ]
call sub_43194f
add esp 0x8
mov [ esp + 0x10 ] edi
push edi
push ebp
push eax
push [ esi + 0xe0 ]
push [ esp + 0x18 ]
push [ esi + 0xc0 ]
call [ esp + 0x2c ]
mov edi ebx
add esp 0x18
mov [ esi + 0xe4 ] eax
cmp eax 0x2
mov eax [ edi + 0x110 ]
jae r-xdata
call sub_4842ab
add esp 0x8
mov esi edi
mov edi [ esp ]
jmp r-xdata
push edi
push 0x29
mov esi [ esp + 0x8 ]
push [ esi + 0x248 ]
call sub_4319e9
add esp 0xc
mov ecx [ esi + 0x6a8 ]
mov edx [ ecx + 0x4 ]
test edx edx
jle r-xdata
mov esi ebp
mov ecx [ esi + 0xc0 ]
jmp r-xdata
mov esi ebp
mov [ esi + 0xc0 ] ecx
inc esi
add ecx 0x54
cmp esi edx
jl r-xdata
xor ebx ebx
cmp [ eax + 0x4 ] 0x0
setg bl
mov ebx [ esp ]
push [ ebx + 0x248 ]
call sub_48d530
add esp 0x4
mov [ ebx + 0x6a8 ] eax
xor esi esi
push esi
push esi
mov ebx [ esp + 0x8 ]
push [ ebx + 0x128 ]
call sub_455be2
add esp 0xc
cmp [ ebx + 0x174 ] esi
sete al
xor eax eax
push eax
push eax
mov eax [ esp + 0x8 ]
push [ eax + 0x128 ]
call sub_45590a
add esp 0xc
mov esi ebx
push r--data
push [ edi + 0x110 ]
call sub_4842ab
mov eax [ ebp + ebx + 0x4 ]
mov esi ebx
add esi ebp
bswap eax
push eax
call sub_43b2d8
add esp 0x4
lea ebp [ eax + esi + 0x8 ]
mov esi [ esp + 0xc ]
inc edi
cmp edi [ esi + 0x84 ]
jl r-xdata
lea eax [ ebp + 0x4 ]
push ebx
push [ esi + 0x50 ]
push eax
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
add esp 0x8
mov eax [ ebp + ebx + 0x4 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
mov edi [ esp ]
test eax eax
je r-xdata
cmp [ ecx ] eax
je r-xdata
mov eax [ ebp ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ebx eax
mov [ esi + 0x94 ] ebx
cmp ebx [ esi + 0x54 ]
jne r-xdata
jmp r-xdata
push edi
push r--data
push [ esp + 0x8 ]
call sub_447e12
add esp 0xc
mov [ esi + 0x80 ] edi
mov [ esi + 0x7c ] ebp
push r--data
mov edi [ esp + 0x4 ]
push edi
add edi 0xfffffffc
sub edi eax
jl r-xdata
lea ecx [ ebp + ebx + 0x4 ]
mov edx [ esp + 0x4 ]
lea ecx [ ecx + eax + 0x4 ]
mov eax [ esi + 0x84 ]
inc edx
cmp edx eax
jl r-xdata
cmp edi 0x3
jle r-xdata
jmp r-xdata
push eax
push r--data
mov edi [ esp + 0x8 ]
push edi
call sub_447e12
add esp 0xc
cmp [ esi + 0x50 ] 0x0
je r-xdata
sub_45141c
push ebx
push edi
push esi
mov esi ecx
mov ebx edx
mov [ esi + 0x144 ] 0x4
push esi
call sub_47db90
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
xor edi edi
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
xor edi edi
test ebx ebx
mov [ esi + 0x10 ] edi
je r-xdata
mov eax [ esi + 0x124 ]
test eax eax
je r-xdata
xor edi edi
inc edi
push [ esi + 0x110 ]
call sub_48a878
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x140 ]
test eax eax
je r-xdata
push 0x0
push eax
jmp r-xdata
mov eax [ esi + 0xf4 ]
test eax eax
je r-xdata
push 0x0
push eax
jmp r-xdata
call sub_47e33c
add esp 0x8
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
pop esi
pop edi
pop ebx
retn
push eax
call sub_46de34
add esp 0x4
mov [ esi + 0xf4 ] 0x0
call sub_47e33c
add esp 0x8
mov ebx eax
test ebx ebx
jne r-xdata
xor edx edx
mov ecx ebx
call sub_448174
push ebx
push [ esi + 0x124 ]
call sub_47eb51
add esp 0x8
cmp [ esi + 0x198 ] 0x2
jne r-xdata
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
push [ esi + 0x140 ]
call sub_47dc40
add esp 0x4
mov [ esi + 0x140 ] 0x0
push ebx
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x124 ]
lea eax [ ebx + 0x20 ]
push eax
call sub_43ff54
add esp 0x4
push ebx
push [ esi + 0x140 ]
call sub_47eb51
add esp 0x8
push [ ebx + 0x10 ]
call sub_43f9d4
add esp 0x4
push [ ebx + 0x14 ]
call sub_43f9d4
add esp 0x4
push [ ebx + 0x18 ]
call sub_43f9d4
add esp 0x4
push [ ebx + 0x1c ]
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x140 ]
push eax
call sub_440e71
add esp 0x4
sub_451579
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff8
sub esp 0x110
mov eax [ rw-data ]
mov edi ecx
mov ebx edx
mov [ esp + 0x108 ] eax
mov esi [ edi + 0x1c8 ]
mov [ esp + 0x4 ] edi
test esi esi
jne r-xdata
mov ecx [ esi ]
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp ecx 0x11fa
jg r-xdata
push 0x100
push 0x1
call sub_43f807
add esp 0x8
mov [ edi + 0x1c8 ] eax
mov [ eax ] 0x0
mov esi [ edi + 0x1c8 ]
cmp ecx 0x12b3
jle r-xdata
cmp ecx 0x1111
jle r-xdata
cmp ecx 0x1258
jg r-xdata
cmp ecx 0x12f9
jle r-xdata
cmp ecx 0x1078
jg r-xdata
cmp ecx 0x1142
jle r-xdata
cmp ecx 0x1259
je r-xdata
cmp ecx 0x11fb
je r-xdata
cmp ecx 0x12b4
je r-xdata
cmp ecx 0x12fa
je r-xdata
cmp ecx 0x1079
je r-xdata
test ecx ecx
je r-xdata
cmp ecx 0x1112
je r-xdata
cmp ecx 0x1143
je r-xdata
test edi edi
jne r-xdata
cmp ecx 0x128e
jne r-xdata
test edi edi
je r-xdata
cmp ecx 0x120f
jne r-xdata
test edi edi
je r-xdata
cmp ecx 0x12cf
jne r-xdata
test edi edi
je r-xdata
cmp ecx 0x1335
je r-xdata
test edi edi
je r-xdata
cmp ecx 0x10cf
jne r-xdata
test edi edi
je r-xdata
cmp ecx 0x1016
jne r-xdata
test edi edi
je r-xdata
cmp ecx 0x1126
jne r-xdata
test edi edi
je r-xdata
cmp ecx 0x118e
je r-xdata
mov [ esi ] 0x1259
jmp r-xdata
push eax
push ebx
push [ esi + 0x54 ]
call sub_48d18c
add esp 0xc
mov edi [ esp + 0x4 ]
mov [ edi + 0x100 ] 0x0
jmp r-xdata
xor edi edi
mov [ esi ] 0x0
inc edi
jmp r-xdata
test edi edi
je r-xdata
test eax eax
jle r-xdata
push r--data
jmp r-xdata
test edi edi
je r-xdata
mov [ esi ] 0x12b4
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0xe
je r-xdata
test edi edi
je r-xdata
mov [ esi ] 0x12fa
jmp r-xdata
cmp [ edi + 0x8 ] 0x47
jne r-xdata
test edi edi
jne r-xdata
cmp ecx 0x13c2
jne r-xdata
mov edi [ esp + 0x4 ]
test eax eax
jle r-xdata
push r--data
jmp r-xdata
test edi edi
je r-xdata
mov [ esi ] 0x1016
jmp r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
mov [ esi ] 0x1112
jmp r-xdata
cmp [ edi + 0x8 ] 0xe
jne r-xdata
test edi edi
jne r-xdata
mov [ esi ] 0x1143
jmp r-xdata
mov eax [ esi + 0x18 ]
shr eax 0x2
not eax
and eax 0x1
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x24 ] eax
mov eax 0x20
push eax
mov ebx [ esp + 0x8 ]
push [ ebx + 0x248 ]
call sub_431daf
add esp 0x8
mov [ esi + 0xb4 ] eax
push eax
call sub_48f51e
add esp 0x4
test eax eax
jne r-xdata
test edi edi
jne r-xdata
cmp ecx 0x11d4
jne r-xdata
xor edi edi
test eax eax
js r-xdata
mov ecx [ esp + 0x108 ]
call sub_497c4a
mov eax edi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esi ] 0x128e
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0x7
je r-xdata
mov eax [ esp + 0x4 ]
mov edi [ eax + 0x254 ]
mov [ esp + 0x20 ] edi
mov eax [ eax + 0x258 ]
mov [ esp + 0x1c ] eax
mov [ esi ] 0x11fb
jmp r-xdata
call sub_43f758
add esp 0x4
mov [ esi ] 0x120f
jmp r-xdata
cmp [ edi + 0x8 ] 0xe
mov edi [ esp + 0x4 ]
mov eax [ edi + 0x110 ]
jne r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
cmp eax 0xf
jne r-xdata
mov [ esi ] 0x12cf
jmp r-xdata
cmp [ edi + 0x8 ] 0x28
jne r-xdata
push r--data
mov ebx [ esp + 0x8 ]
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
mov edx r--data
mov ecx ebx
push 0x24
call sub_44a29f
add esp 0x4
mov [ esi + 0x28 ] 0x1
jmp r-xdata
lea ebx [ esp + 0xac ]
lea eax [ esp + 0x28 ]
mov ecx edi
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov [ esi ] 0x1335
jmp r-xdata
push eax
push ebx
push [ esi + 0x54 ]
call sub_48d18c
add esp 0xc
mov edi [ esp + 0x4 ]
mov [ edi + 0x100 ] 0x0
jmp r-xdata
test edi edi
je r-xdata
mov eax [ edi + 0x25c ]
mov [ esi + 0xb0 ] eax
mov [ esi ] 0x1079
jmp r-xdata
mov edi [ esp + 0x4 ]
test eax eax
jle r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
mov ecx [ edi ]
mov eax [ edi + 0x18 ]
sub ecx eax
cmp ecx 0x8
jl r-xdata
push r--data
jmp r-xdata
push r--data
mov edi [ esp + 0x8 ]
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x1
call sub_49b55f
add esp 0x4
push eax
call sub_4a687d
add esp 0x4
push [ edi + 0x248 ]
call sub_44422f
add esp 0x4
test eax eax
mov [ edi + 0x250 ] eax
jne r-xdata
mov [ esi ] 0x1126
jmp r-xdata
push eax
push ebx
push [ esi + 0x54 ]
call sub_48d18c
add esp 0xc
mov edi [ esp + 0x4 ]
mov [ edi + 0x100 ] 0x0
jmp r-xdata
mov [ esi + 0x40 ] 0x0
push [ esi + 0xb4 ]
call sub_48f4f9
add esp 0x4
push eax
push r--data
push ebx
call sub_447e12
add esp 0xc
push [ esi + 0xb4 ]
call sub_469879
add esp 0x4
mov ebx eax
cmp ebx 0x8
je r-xdata
mov edi [ esp + 0x4 ]
test eax eax
jg r-xdata
test edi edi
je r-xdata
mov [ edi + 0x100 ] 0x1
mov eax [ esi + 0x54 ]
je r-xdata
mov ecx edi
call sub_453571
test eax eax
je r-xdata
cmp eax 0xf
jne r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
mov ebx [ esp + 0x4 ]
cmp [ edi + 0x4 ] 0x4
mov eax [ ebx + 0x110 ]
jne r-xdata
push r--data
push eax
jmp r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
test [ rw-data ] 0x1
je r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
push eax
call sub_43f9d4
add esp 0x4
push [ esi + 0x48 ]
call sub_43f9d4
add esp 0x4
push r--data
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
test [ rw-data ] 0x4
je r-xdata
lea ebx [ esp + 0xac ]
lea eax [ esp + 0x28 ]
mov ecx edi
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0xf
jne r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esi + 0x54 ]
mov [ eax ] 0x1
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ esi + 0x54 ]
mov [ ecx + 0x4 ] eax
mov [ esp + 0xc ] esi
mov eax [ esi + 0x54 ]
mov [ eax + 0x8 ] 0x0
mov esi [ esp + 0x28 ]
push esi
push 0xa
push ebx
call sub_4989c0
add esp 0xc
test eax eax
je r-xdata
test eax eax
js r-xdata
mov [ esi ] 0x13c2
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax 0xe
je r-xdata
xor edi edi
mov ecx ebx
mov [ ecx + 0x260 ] edi
cmp [ esi + 0xb0 ] edi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ edi + 0x25c ]
mov [ esi + 0xb0 ] eax
mov [ esi ] 0x10cf
jmp r-xdata
push r--data
jmp r-xdata
lea ecx [ eax + 0x8 ]
mov [ edi + 0x18 ] ecx
add eax [ edi + 0x14 ]
je r-xdata
xor ecx ecx
mov edx 0x4
push ecx
push eax
push edx
push edx
push edi
call sub_448d90
add esp 0x14
push [ edi + 0x250 ]
push r--data
call sub_43f758
add esp 0x8
mov ecx edi
mov edi eax
push edi
mov ebx ecx
push [ ecx + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ rw-data ]
test al 0x4
je r-xdata
push [ edi + 0x110 ]
call sub_43f7d4
add esp 0x4
mov ebx edi
mov [ esi + 0x54 ] eax
mov edi esi
xor esi esi
inc esi
mov [ eax ] esi
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ edi + 0x54 ]
mov [ ecx + 0x4 ] eax
push r--data
call sub_43f79e
add esp 0x4
push esi
mov esi edi
mov edi ebx
push eax
push [ esi + 0x54 ]
call sub_43f887
add esp 0xc
xor eax eax
push eax
push eax
push [ esi + 0x54 ]
call sub_48d18c
add esp 0xc
test eax eax
js r-xdata
mov [ esi + 0x5c ] 0x9
push 0x1c
mov eax [ esp + 0x8 ]
push [ eax + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + 0x48 ]
lea ecx [ esi + 0x44 ]
lea edx [ esi + 0x40 ]
mov [ esp + 0xc ] esi
lea esi [ esp + 0xac ]
push esi
mov esi [ esp + 0x10 ]
push eax
push ecx
push edx
push [ esi + 0xb4 ]
call sub_467e74
add esp 0x14
test eax eax
je r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi ] 0x118e
jmp r-xdata
mov eax [ edi + 0x254 ]
mov [ esp + 0x24 ] eax
mov ecx [ edi + 0x258 ]
mov [ esi + 0x70 ] ecx
jmp r-xdata
mov [ esi ] 0x11d4
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp [ edi + 0x8 ] 0x7
mov eax [ eax + 0x110 ]
jne r-xdata
push eax
call sub_43fa0e
add esp 0x4
mov ecx [ esp + 0x4 ]
jmp r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_43f79e
add esp 0x4
mov edi eax
push [ esi + 0x54 ]
call sub_43fa0e
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
sub ecx 0xffffff80
push ecx
mov [ esp + 0xc ] eax
push eax
call sub_46a009
add esp 0x8
mov ebx eax
mov [ esp + 0xc ] esi
push [ esi + 0x90 ]
call sub_45b91a
add esp 0x4
mov edi 0x1f
lea esi [ esp + 0x28 ]
push r--data
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov edx r--data
push 0x20
jmp r-xdata
push [ esi + 0x68 ]
call sub_43f9d4
add esp 0x4
cmp [ esi + 0x40 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
lea edi [ esi + 0x78 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x74 ]
inc eax
mov [ esi + 0x74 ] eax
jmp r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
lea eax [ edi + 0x5 ]
push 0x0
push 0x10
push eax
push 0x3
push 0x8
push ebx
call sub_448d90
add esp 0x18
push edi
call sub_43f9d4
add esp 0x4
call sub_4842ab
add esp 0x8
mov [ esi + 0x7c ] 0x1
jmp r-xdata
mov edx r--data
mov ecx edi
push 0x1d
call sub_44a29f
add esp 0x4
mov edx [ esi + 0xa8 ]
mov ecx edi
push [ esi + 0xac ]
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx edi
push 0xe
call sub_44a29f
add esp 0x4
mov ecx [ esp + 0x4 ]
mov edx r--data
push 0x2d
mov [ esi + 0x24 ] 0x1
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov edx r--data
push 0x1d
call sub_44a29f
add esp 0x4
push r--data
jmp r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esi + 0x54 ]
mov [ eax ] 0x1
push r--data
call sub_43f79e
add esp 0x4
mov [ esp + 0xc ] esi
mov ecx [ esi + 0x54 ]
mov [ ecx + 0x4 ] eax
mov esi [ esp + 0x28 ]
push esi
push 0xa
push ebx
call sub_4989c0
add esp 0xc
test eax eax
je r-xdata
push ebx
push esi
push r--data
call sub_43f758
add esp 0xc
mov edi eax
push r--data
call sub_43f79e
add esp 0x4
push r--data
call sub_43f79e
add esp 0x4
mov edi eax
push ebx
push esi
push r--data
call sub_43f758
add esp 0xc
jmp r-xdata
mov [ edi + 0x100 ] 0x1
je r-xdata
cmp eax 0xf
jne r-xdata
mov edx r--data
lea ebx [ esi + 0x8 ]
mov edi ecx
xor edi edi
mov ecx ebx
mov [ ecx + 0x260 ] edi
cmp [ esi + 0xb0 ] edi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
movsd xmm0 [ eax ]
lea eax [ esi + 0xc ]
lea edx [ esi + 0xb8 ]
mov ecx edi
mov [ esp + 0x8 ] edx
movsd [ esp + 0x28 ] xmm0
push eax
call sub_4534d8
add esp 0x4
test eax eax
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
and eax 0x3
cmp eax 0x3
je r-xdata
mov [ edi + 0x100 ] 0x1
mov eax [ esi + 0x54 ]
je r-xdata
cmp [ esi + 0x40 ] 0x0
mov edi [ esp + 0x4 ]
je r-xdata
call sub_4928fc
test eax eax
je r-xdata
push [ esp + 0xac ]
push r--data
push [ esp + 0xc ]
call sub_447e12
add esp 0xc
mov esi [ esp + 0xac ]
mov eax [ esp + 0xc ]
push [ eax + 0xb4 ]
call sub_48f4f9
add esp 0x4
push esi
mov esi [ esp + 0x10 ]
push eax
push r--data
xor eax eax
cmp ebx 0x2
sete al
mov [ esi + 0x4c ] eax
je r-xdata
push ebx
call sub_4698af
add esp 0x4
push eax
push r--data
push [ esp + 0xc ]
call sub_447e12
add esp 0xc
push ebx
call sub_4698af
add esp 0x4
mov ebx eax
push [ esi + 0xb4 ]
call sub_48f4f9
add esp 0x4
push ebx
push eax
push r--data
jmp r-xdata
test eax eax
mov [ esi + 0x68 ] eax
je r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
jmp r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
mov ecx edi
call sub_453571
test eax eax
mov [ esi + 0xa4 ] eax
je r-xdata
xor edi edi
xor edx edx
push 0x1
push edi
push r--data
jmp r-xdata
add esp 0x4
push edi
push ebx
call sub_45da64
add esp 0x8
mov [ esi ] al
dec edi
inc esi
xor eax eax
dec eax
cmp edi eax
jne r-xdata
lea esi [ esp + 0xac ]
push esi
call sub_466c84
add esp 0x4
lea eax [ esp + 0x28 ]
push 0x20
push eax
push esi
call sub_466c9e
add esp 0xc
mov edi [ esp + 0xc ]
mov ecx 0x10
lea eax [ edi + 0x2c ]
push ecx
push eax
push esi
call sub_466c9e
add esp 0xc
push esi
mov esi edi
lea edi [ esp + 0x2c ]
push edi
call sub_4674df
add esp 0x8
push 0x0
mov eax 0x10
push eax
push edi
push 0x3
push 0x8
push [ esp + 0x18 ]
call sub_448d90
add esp 0x18
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
call sub_44a29f
add esp 0x4
jmp r-xdata
cmp [ esi + 0x7c ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax [ edi ]
jge r-xdata
push [ esi + 0x8c ]
call sub_45b91a
add esp 0x4
push [ esi + 0x88 ]
call sub_45b91a
add esp 0x4
push [ esi + 0xa4 ]
call sub_45b91a
add esp 0x4
cmp [ esi + 0x7c ] 0x0
jne r-xdata
push ebx
push esi
push r--data
call sub_43f758
add esp 0xc
mov edi eax
push r--data
call sub_43f79e
add esp 0x4
push r--data
call sub_43f79e
add esp 0x4
mov edi eax
push ebx
push esi
push r--data
call sub_43f758
add esp 0xc
jmp r-xdata
cmp [ esi + 0x5c ] 0x9
jne r-xdata
cmp [ edi ] 0x0
mov ebx eax
mov eax r--data
mov ecx r--data
cmovne ecx eax
push edi
push ecx
push r--data
call sub_43f758
add esp 0xc
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x54 ]
mov [ ecx + 0xc ] eax
mov eax [ esi + 0x54 ]
mov [ eax + 0x10 ] 0x1
push 0x0
push ebx
push [ esi + 0x54 ]
call sub_43f887
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
push [ esi + 0x54 ]
call sub_43fa0e
add esp 0x4
mov ecx edi
mov eax [ esi + 0x5c ]
cmp eax 0x9
jne r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
call sub_44a668
add esp 0xc
mov [ esi ] edi
jmp r-xdata
inc eax
cmp eax 0x20
jne r-xdata
mov cl [ esi + eax + 0x2c ]
mov edx [ esi + 0x8 ]
xor [ edx + eax ] cl
mov edx r--data
jmp r-xdata
lea eax [ esi + 0x3c ]
mov edi ecx
push r--data
jmp r-xdata
lea ebx [ esi + 0xdc ]
lea eax [ esi + 0x10 ]
mov ecx edi
mov edx ebx
push eax
call sub_4534d8
add esp 0x4
test eax eax
je r-xdata
push edi
call sub_4a7f30
add esp 0x4
mov ecx ebx
mov edx edi
push eax
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx ebx
push 0x2
call sub_44a29f
add esp 0x4
push eax
call sub_43fa0e
add esp 0x4
mov ecx edi
xor edi edi
mov edx r--data
jmp r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_43f79e
add esp 0x4
mov [ edi + 0x250 ] eax
push [ esi + 0x54 ]
call sub_43fa0e
add esp 0x4
mov eax [ edi + 0x250 ]
push [ edi + 0x110 ]
call sub_43f7d4
add esp 0x4
mov [ esi + 0x54 ] eax
mov eax edi
lea edi [ eax + 0x248 ]
push 0x25
push [ eax + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
push 0x0
push [ esi + 0xb4 ]
call sub_467ded
add esp 0x8
mov [ esi + 0x50 ] eax
jmp r-xdata
push r--data
push [ esp + 0x8 ]
call sub_447e12
add esp 0x8
call sub_43f758
add esp 0xc
mov ebx eax
push ebx
call sub_4a7f30
add esp 0x4
mov ecx [ esp + 0x4 ]
mov edx ebx
push eax
call sub_44a29f
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
push r--data
push [ edi + 0x110 ]
jmp r-xdata
cmp [ esi + 0x70 ] 0x5
jl r-xdata
push [ esi + 0x8c ]
call sub_45d9f4
add esp 0x4
mov edi eax
push [ esi + 0x88 ]
call sub_45d9f4
add esp 0x4
mov ebx eax
add ebx edi
push [ esi + 0xa4 ]
call sub_45d9f4
add esp 0x4
lea ecx [ eax + ebx + 0x19 ]
lea eax [ eax + ebx + 0x1d ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x8 ] eax
push 0x1
push eax
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x10 ]
mov edi eax
mov eax ecx
shr eax 0x18
mov [ edi ] al
mov eax ecx
shr eax 0x10
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] ch
mov [ edi + 0x3 ] cl
mov [ edi + 0x4 ] 0x3
push [ esi + 0x88 ]
call sub_45d970
add esp 0x4
shr eax 0x18
mov [ edi + 0x5 ] al
push [ esi + 0x88 ]
call sub_45d970
add esp 0x4
shr eax 0x10
mov [ edi + 0x6 ] al
push [ esi + 0x88 ]
call sub_45d970
add esp 0x4
mov [ edi + 0x7 ] ah
push [ esi + 0x88 ]
call sub_45d970
add esp 0x4
mov [ edi + 0x8 ] al
lea eax [ edi + 0x9 ]
push [ esi + 0x8c ]
push eax
call sub_45daba
add esp 0x8
mov [ esp + 0xc ] esi
lea esi [ edi + eax + 0x9 ]
mov eax [ esp + 0xc ]
push [ eax + 0x88 ]
push esi
call sub_45daba
add esp 0x8
mov ebx eax
add ebx esi
mov esi [ esp + 0xc ]
push [ esi + 0xa4 ]
push ebx
call sub_45daba
add esp 0x8
movsd xmm0 [ esi + 0x2c ]
movsd xmm1 [ esi + 0x34 ]
lea ecx [ esp + 0x20 ]
movsd [ eax + ebx + 0x8 ] xmm1
movsd [ eax + ebx ] xmm0
mov [ eax + ebx + 0x10 ] 0x1000000
lea eax [ esp + 0x1c ]
mov ebx [ esp + 0x4 ]
push ebx
push sub_453528
push eax
push ecx
push [ esp + 0x18 ]
push edi
call sub_492936
add esp 0x18
mov [ ebx + 0x6d0 ] eax
mov ebx eax
push edi
call sub_43f9d4
add esp 0x4
test ebx ebx
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
call sub_4a7f30
add esp 0x4
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
mov ebx [ esi + 0x6c ]
mov eax [ esi + 0x70 ]
mov edi esi
lea ecx [ ebx + 0x4 ]
mov [ esi + 0x6c ] ecx
sub eax ecx
lea esi [ edi + 0x8c ]
add eax [ edi + 0x68 ]
push eax
call sub_43b2d8
add esp 0x4
push esi
mov esi edi
push eax
push [ esi + 0x6c ]
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
push 0x25
push [ edi ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp [ edi ] 0x0
mov ebx eax
mov eax r--data
mov ecx r--data
cmovne ecx eax
push edi
push ecx
push r--data
call sub_43f758
add esp 0xc
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x54 ]
mov [ ecx + 0xc ] eax
mov eax [ esi + 0x54 ]
mov [ eax + 0x10 ] 0x1
push 0x0
push ebx
push [ esi + 0x54 ]
call sub_43f887
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x4 ]
lea edi [ eax + 0x248 ]
jmp r-xdata
lea edi [ esi + 0x54 ]
jmp r-xdata
test [ esi + 0x18 ] 0x8
jne r-xdata
mov ecx [ esi + 0x54 ]
lea ebx [ esi + 0x54 ]
mov ecx [ ecx + 0x18 ]
mov ecx [ ecx ]
push 0x0
push [ ecx + 0x8 ]
push 0x4
push eax
push edi
call sub_448d90
add esp 0x14
add edi 0x110
jmp r-xdata
mov eax [ edi + 0x50 ]
test al 0x5
je r-xdata
mov ecx [ esp + 0x4 ]
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov edx r--data
push 0xf
call sub_44a29f
add esp 0x4
mov cl [ edi + eax + 0x1c ]
mov edx [ ebx ]
cmp eax 0xf
mov [ edx + eax ] cl
jg r-xdata
mov ecx [ esi + 0xe0 ]
mov edx esi
mov eax [ esi + 0x8 ]
lea edi [ esi + 0xdc ]
mov [ esp + 0xc ] edx
lea esi [ edx + 0xb8 ]
cmp ecx [ edx + 0xbc ]
jle r-xdata
push 0x1
push edi
push edi
jmp r-xdata
push r--data
jmp r-xdata
cmp eax 0x3
je r-xdata
push r--data
mov eax [ esp + 0x8 ]
mov [ esp + 0x14 ] ebx
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
lea ebx [ esp + 0xac ]
mov [ ebx + 0x6 ] 0x0
mov [ ebx + 0x4 ] 0x2020
mov [ ebx ] 0x20202020
mov [ esi + 0xfc ] 0x0
push ebx
call sub_4a7f30
add esp 0x4
mov ecx 0x50
sub ecx eax
lea eax [ esp + eax + 0xac ]
push [ esp + 0x10 ]
push ecx
push eax
call sub_46a3b9
add esp 0xc
push ebx
mov ebx [ esp + 0x8 ]
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
mov ecx edi
call sub_44dc2a
mov ecx edi
mov [ ebx + 0x40 ] eax
call sub_44dc2a
mov ecx edi
mov [ esi + 0x14 ] eax
call sub_44dc2a
mov [ esi + 0x18 ] eax
test [ ebx + 0x50 ] 0x8
je r-xdata
test [ esi + 0x18 ] 0x20
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x20 ] 0x1
push r--data
mov edi [ esp + 0x8 ]
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ esi + 0x60 ] 0x1000000
lea eax [ esi + 0x60 ]
mov [ esi + 0x64 ] 0x1
lea ecx [ esi + 0x70 ]
lea edx [ esp + 0x24 ]
push edi
push sub_453528
push ecx
push edx
push 0x5
push eax
call sub_492936
add esp 0x18
test eax eax
mov [ edi + 0x6d0 ] eax
je r-xdata
call sub_4842ab
add esp 0x8
cmp [ eax + 0x4 ] 0x2
jne r-xdata
mov edi [ esp + 0x20 ]
jmp r-xdata
mov edi [ esp + 0x4 ]
mov edx r--data
mov ecx edi
push 0x13
call sub_44a29f
add esp 0x4
jmp r-xdata
mov edi [ esp + 0x4 ]
cmp ebx 0x1
je r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
add eax [ esi + 0x6c ]
lea edi [ esi + 0x88 ]
mov [ esi + 0x6c ] eax
mov ecx [ esi + 0x70 ]
sub ecx eax
add ecx [ esi + 0x68 ]
push ecx
call sub_43b2d8
add esp 0x4
push edi
push eax
push [ esi + 0x6c ]
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
test [ esi + 0x1a ] 0x1
je r-xdata
xor eax eax
push eax
push eax
push [ edi ]
call sub_48d18c
add esp 0xc
mov edi [ esp + 0x4 ]
mov eax [ esi + 0x54 ]
lea edi [ esi + 0x54 ]
mov [ eax ] 0x1
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ esi + 0x54 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
push [ eax + 0xf8 ]
push [ eax + 0x250 ]
push r--data
call sub_43f758
add esp 0xc
push 0x0
push eax
push [ esi + 0x54 ]
call sub_43f887
add esp 0xc
push r--data
push r--data
push [ edi ]
call sub_4842ab
add esp 0x8
push [ ebx ]
call sub_43fa0e
add esp 0x4
mov eax [ esi + 0x54 ]
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_4a7f30
add esp 0x4
mov edx eax
mov ecx eax
xor edi edi
mov ebx 0xf
mov [ esp + 0x8 ] eax
and edx 0xfffffff8
or ecx 0x7
cmp eax 0x10
cmovge edi edx
cmovge ebx ecx
cmp eax edi
jl r-xdata
test al 0x4
jne r-xdata
push edi
push 0x20
push eax
call sub_469df3
add esp 0xc
test eax eax
je r-xdata
push esi
push 0x20
push eax
call sub_469df3
add esp 0xc
test eax eax
je r-xdata
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push r--data
cmp eax 0x6
jne r-xdata
lea edi [ esp + 0xac ]
mov [ ebx + 0x44 ] 0x1
push edi
call sub_466c84
add esp 0x4
push [ esi + 0xe0 ]
push [ esi + 0x10 ]
push edi
call sub_466c9e
add esp 0xc
push [ esi + 0xbc ]
push [ esi + 0xc ]
push edi
call sub_466c9e
add esp 0xc
lea eax [ esp + 0x28 ]
push 0x8
push eax
push edi
call sub_466c9e
add esp 0xc
mov [ esp + 0xc ] esi
lea eax [ esi + 0x2c ]
push edi
push eax
call sub_4674df
add esp 0x8
mov esi 0x1c
and eax 0xfffffffb
mov [ esi + 0x18 ] eax
cmp [ esi + 0x24 ] 0x0
je r-xdata
test [ rw-data ] 0x1
je r-xdata
mov eax [ esp + 0x24 ]
lea ecx [ eax + 0x5 ]
mov [ esi + 0x6c ] ecx
mov eax [ eax + 0x5 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
lea edi [ esi + 0x78 ]
test eax eax
mov [ esi + 0x78 ] eax
js r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
push 0x0
push [ esi + 0x88 ]
push 0x5
push 0x6
push edi
call sub_448d90
add esp 0x14
test ebx ebx
jne r-xdata
add eax [ esi + 0x6c ]
mov [ esi + 0x6c ] eax
mov ecx [ esi + 0x70 ]
sub ecx eax
add ecx [ esi + 0x68 ]
cmp ecx 0x4
jl r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
push 0x137d
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ esp + 0x8 ] ebx
jle r-xdata
lea eax [ esi + 0x54 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x54 ]
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push [ eax + 0x8 ]
call sub_4a7f30
add esp 0x4
mov ebx [ esp + 0x4 ]
mov edi eax
lea eax [ ebx + 0x110 ]
mov [ esp + 0x10 ] eax
push r--data
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esi + 0x54 ]
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push 0x0
push edi
push [ eax + 0x8 ]
mov eax [ esi + 0x54 ]
mov eax [ eax + 0x18 ]
mov eax [ eax ]
mov ebx [ eax + 0x8 ]
push ebx
call sub_4a7f30
add esp 0x4
mov edi eax
cmp edi 0x3f
ja r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx [ esp + 0x4 ]
mov edx eax
call sub_44e0cb
mov eax [ esp + 0xc ]
xor edi edi
mov [ eax ] 0x0
jmp r-xdata
mov eax [ esp + 0xc ]
mov edi esi
lea eax [ eax + 0xe0 ]
mov eax [ esp + 0xc ]
lea eax [ eax + 0xbc ]
jmp r-xdata
mov eax [ esi + 0xc4 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xc0 ] 0x0
mov eax [ esi + 0x4 ]
mov edx 0x3
mov ebx 0x2
mov ecx eax
and ecx 0x1f
shl ecx 0x3
push 0x0
push [ edi + 0x44 ]
push 0x1
push eax
sar eax 0x5
push [ esi + 0x8 ]
push edx
push ecx
push ebx
push eax
push ebx
mov eax 0x8
push eax
lea eax [ esp + 0x54 ]
push eax
push edx
push [ esi + 0x3c ]
push ebx
push edx
push edi
call sub_448d90
add esp 0x44
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x3c ]
mov ecx r--data
mov edx r--data
cmp eax ebx
mov ebx r--data
cmove edx ecx
cmp eax 0x6
cmovne ebx edx
mov [ edi + 0x54 ] ebx
call [ ebx ]
mov [ edi + 0x58 ] eax
lea edx [ edi + 0x1c ]
mov ecx [ edi + 0x54 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0x8
mov eax [ edi + 0x54 ]
push [ eax + 0x18 ]
push r--data
push edi
call sub_447e12
add esp 0xc
call sub_45f424
mov [ edi + 0x5c ] eax
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push r--data
jmp r-xdata
call sub_469c4e
mov [ ebx + esi ] al
inc esi
cmp esi 0x3c
jne r-xdata
mov esi [ esp + 0xc ]
mov eax [ esi + 0xe0 ]
lea ecx [ eax * 8 ]
cmp [ esi + 0xdc ] ecx
jg r-xdata
mov [ esi + 0x5c ] 0x29
push r--data
mov edi [ esp + 0x8 ]
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x0
push 0x27
push edi
call sub_448d90
add esp 0xc
push 0x20
push [ edi + 0x248 ]
call sub_431daf
add esp 0x8
mov [ esi + 0xb4 ] eax
push eax
call sub_48f4f9
add esp 0x4
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
mov [ esi + 0x1c ] 0x1
jmp r-xdata
mov edx r--data
mov ecx edi
push 0x23
call sub_44a29f
add esp 0x4
push eax
push r--data
mov ebx [ esp + 0xc ]
push ebx
call sub_447e12
add esp 0xc
xor eax eax
mov [ edi ] 0x0
mov ebx [ esp + 0x4 ]
jmp r-xdata
xor edi edi
test [ rw-data ] 0x1
je r-xdata
push [ edi + 0x110 ]
call sub_43f7d4
add esp 0x4
mov ebx edi
mov [ esi + 0x54 ] eax
mov edi esi
xor esi esi
mov [ eax ] esi
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ edi + 0x54 ]
mov [ ecx + 0x4 ] eax
push [ edi + 0x48 ]
push r--data
call sub_43f758
add esp 0x8
push esi
push eax
push [ edi + 0x54 ]
call sub_43f887
add esp 0xc
push esi
push esi
mov esi edi
mov edi ebx
push [ esi + 0x54 ]
call sub_48d18c
add esp 0xc
jmp r-xdata
push 0x1281
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
mov edx r--data
mov ecx edi
push 0x1f
call sub_44a29f
add esp 0x4
push [ esi + 0xb4 ]
call sub_48f4f9
add esp 0x4
mov ebx edi
mov edi eax
push edi
call sub_4a7f30
add esp 0x4
mov ecx ebx
mov edx edi
push eax
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx ebx
push 0x2
call sub_44a29f
add esp 0x4
mov edi [ esp + 0x18 ]
push edi
call sub_4a7f30
add esp 0x4
mov edx edi
mov edi ebx
mov ecx ebx
push eax
call sub_44a29f
add esp 0x4
mov edx r--data
mov ecx edi
push 0x4
call sub_44a29f
add esp 0x4
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov [ esi + 0xac ] eax
mov ecx [ esi + 0x6c ]
add ecx 0x4
test eax eax
mov [ esi + 0x6c ] ecx
js r-xdata
mov [ esi + 0x5c ] 0x48
push r--data
mov edi [ esp + 0x8 ]
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x0
push 0x46
push edi
call sub_448d90
add esp 0xc
mov edi [ esp + 0x4 ]
lea eax [ esi + 0x54 ]
mov [ esp + 0x8 ] eax
lea eax [ edi + 0x110 ]
mov [ esp + 0x10 ] eax
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov ecx edi
call sub_44a98e
push ebx
mov ebx [ esp + 0xc ]
call sub_43f9d4
mov edi [ esp + 0x14 ]
add esp 0x4
jmp r-xdata
mov [ esp + 0xc ] esi
xor ecx ecx
lea eax [ ebx + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov ecx ebx
mov ebx eax
cmp edi ecx
mov [ esp + 0x10 ] ecx
jg r-xdata
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x4 ]
lea eax [ esi + 0x54 ]
mov [ esp + 0x8 ] eax
lea eax [ ebx + 0x110 ]
mov [ esp + 0x10 ] eax
push r--data
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x0
push edi
push [ esp + 0x1c ]
jmp r-xdata
lea eax [ esp + 0xac ]
push ebx
mov ebx eax
push ebx
call sub_4a7c00
add esp 0x8
mov eax edi
inc eax
cmp eax 0x3f
ja r-xdata
push r--data
mov eax [ esp + 0x8 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
mov esi [ esp + 0xc ]
xor ebx ebx
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x14 ] 0x0
lea eax [ esi + 0x3c ]
mov [ esp + 0x10 ] eax
push edi
push [ eax ]
push [ ebx ]
call sub_469df3
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0xe4 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xc4 ] 0x0
push r--data
jmp r-xdata
mov ecx [ esi + 0xbc ]
lea edx [ ecx * 8 ]
cmp [ esi + 0xb8 ] edx
jle r-xdata
add [ esi + 0x6c ] 0x4
push eax
push r--data
push ebx
call sub_447e12
add esp 0xc
lea eax [ esi + 0x74 ]
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esi + 0x74 ] 0x0
push 0x20
mov eax [ esp + 0x8 ]
push [ eax + 0x248 ]
call sub_431daf
add esp 0x8
mov ecx esi
lea edx [ esp + 0x18 ]
mov [ esi + 0xb4 ] eax
sub ecx 0xffffff80
push edx
push edi
push ecx
push eax
call sub_467980
add esp 0x10
mov ebx eax
test edi edi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx r--data
push 0x19
call sub_44a29f
mov eax [ esi + 0x70 ]
sub eax ecx
add eax [ esi + 0x68 ]
push eax
call sub_43b2d8
add esp 0x4
mov ecx [ esi + 0xac ]
cmp eax ecx
jge r-xdata
test edi edi
jle r-xdata
mov eax [ esi + 0x54 ]
mov eax [ eax + 0x18 ]
mov eax [ eax ]
push 0x0
push [ eax + 0x8 ]
push 0x4
push [ esi + 0x5c ]
push [ esp + 0x14 ]
call sub_4535b5
add esp 0x14
jmp r-xdata
push 0x3
push edi
push 0x1
push [ esi + 0x5c ]
push ebx
mov ebx [ esp + 0x28 ]
call sub_448d90
mov edi [ esp + 0x30 ]
add esp 0x20
mov edi 0x40
call sub_469c4e
mov [ esp + edi + 0xad ] al
inc edi
cmp edi 0x3f
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax ]
jmp r-xdata
xor ecx ecx
mov esi r--data
mov edx 0x6
inc ecx
jmp [ eax * 4 + jump_table_4101b8 ]
mov eax [ esi + 0xe8 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xe4 ] 0x0
cmp eax ecx
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
cmovg eax edi
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
xor esi esi
inc esi
push esi
push eax
call sub_43f807
add esp 0x8
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
lea ebx [ ecx + 0x8 ]
mov [ edx + 0x8 ] eax
push edi
call sub_46a24a
add esp 0x4
push esi
mov esi [ esp + 0x10 ]
push eax
call sub_43f807
add esp 0x8
push edi
mov [ esp + 0xc ] eax
push eax
call sub_46a293
add esp 0x8
lea eax [ esp + 0x48 ]
push edi
push 0x64
push eax
call sub_46a3b9
add esp 0xc
xor edi edi
push edi
push edi
lea eax [ esp + 0x50 ]
push eax
push [ esp + 0x10 ]
call sub_447e63
add esp 0x10
test eax eax
mov [ esi + 0xb0 ] eax
je r-xdata
mov edx [ esi + 0x6c ]
mov eax [ esi + 0x40 ]
add ecx edx
test eax eax
mov [ esi + 0xa8 ] edx
mov [ esi + 0x6c ] ecx
je r-xdata
mov [ ebx + edi ] 0x0
push 0x0
push ebx
push 0x4
push 0x20
push [ esp + 0x14 ]
call sub_4535b5
add esp 0x14
mov esi [ esp + 0xc ]
xor esi esi
cmp edi [ esp + 0x10 ]
lea edi [ edi + 0x1 ]
jl r-xdata
mov eax [ esi + 0x14 ]
mov ecx 0x1
bt eax edx
mov edx [ esp + 0x8 ]
cmovb edx ecx
mov [ esp + 0x8 ] edx
mov ecx ebx
mov esi [ esp + 0xc ]
cmp edi 0x5
jg r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xe8 ] 0x0
push r--data
call sub_43f758
add esp 0x4
mov ecx [ esp + 0x4 ]
mov edx eax
call sub_44e0cb
push [ esp + 0x8 ]
call sub_43f9d4
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
js r-xdata
mov eax [ esp + 0x8 ]
push [ eax ]
push r--data
mov ebx [ esp + 0xc ]
push ebx
call sub_447e12
add esp 0xc
push 0x0
push [ edi ]
push 0x5
push 0x6
push ebx
call sub_448d90
add esp 0x14
push [ esi + 0x44 ]
push eax
push ebx
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
cmp edi [ esp + 0x8 ]
jne r-xdata
call sub_469c4e
test al al
mov [ ebx + esi ] al
je r-xdata
inc esi
cmp esi edi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
inc edi
cmp [ esp + 0x8 ] 0x0
mov ebx ecx
je r-xdata
mov edi [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x4 ]
jmp r-xdata
push [ esi + 0x74 ]
push r--data
push [ esp + 0xc ]
call sub_447e12
add esp 0xc
mov [ esi + 0x1c ] 0x1
test [ esi + 0x14 ] 0x8
mov edi [ esp + 0x4 ]
jne r-xdata
mov edi [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
test ecx ecx
je r-xdata
push edi
push 0x1f
mov eax [ esp + 0xc ]
push [ eax + 0x248 ]
call sub_4319e9
add esp 0xc
cmp eax 0x4
ja r-xdata
mov [ edi + 0x260 ] 0x1
push edi
push sub_44e1b5
lea eax [ esp + 0x50 ]
push eax
mov ebx [ esp + 0x14 ]
push ebx
push r--data
push [ edi + 0xfc ]
push [ edi + 0xf8 ]
push [ edi + 0x110 ]
call sub_4846a7
add esp 0x20
mov [ esi + 0xb0 ] eax
push ebx
call sub_43f9d4
add esp 0x4
cmp [ esi + 0xb0 ] 0x0
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
xor eax eax
push r--data
push r--data
jmp r-xdata
mov eax [ eax ]
cmp eax 0x2
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
lea eax [ edi + 0x10 ]
mov ebx edi
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov edx eax
call sub_44e0cb
mov [ esi ] 0x0
call sub_43f758
add esp 0x4
mov ecx edi
jmp r-xdata
mov [ edi + 0x260 ] 0x1
push edi
push sub_44e1b5
push [ esp + 0x1c ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ esi + 0xb0 ] eax
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
lea eax [ edi + 0x10 ]
mov ebx edi
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
sub_4527a8
mov esi r--data
mov edx 0x3
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edx
mov [ esp + 0x14 ] esi
mov esi [ esp + 0xc ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
inc edi
cmp [ esp + 0x8 ] 0x0
mov ebx ecx
je r-xdata
test [ esi + 0x14 ] 0x8
mov edi [ esp + 0x4 ]
jne r-xdata
mov edi [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
test ecx ecx
je r-xdata
push edi
push 0x1f
mov eax [ esp + 0xc ]
push [ eax + 0x248 ]
call sub_4319e9
add esp 0xc
cmp eax 0x4
ja r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ eax ]
cmp eax 0x2
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax ]
jmp r-xdata
xor ecx ecx
mov esi r--data
mov edx 0x6
inc ecx
jmp [ eax * 4 + jump_table_4101b8 ]
mov edx eax
call sub_44e0cb
mov [ esi ] 0x0
call sub_43f758
add esp 0x4
mov ecx edi
jmp r-xdata
push r--data
jmp r-xdata
cmp eax 0x3
je r-xdata
mov [ edi + 0x260 ] 0x1
push edi
push sub_44e1b5
push [ esp + 0x1c ]
push r--data
push [ edi + 0x110 ]
call sub_484828
add esp 0x14
test eax eax
mov [ esi + 0xb0 ] eax
jns r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ esi + 0x14 ]
mov ecx 0x1
bt eax edx
mov edx [ esp + 0x8 ]
cmovb edx ecx
mov [ esp + 0x8 ] edx
mov ecx ebx
mov esi [ esp + 0xc ]
cmp edi 0x5
jg r-xdata
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push r--data
cmp eax 0x6
jne r-xdata
lea eax [ edi + 0x10 ]
mov ebx edi
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0xc4 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xc0 ] 0x0
mov eax [ esi + 0x4 ]
mov edx 0x3
mov ebx 0x2
mov ecx eax
and ecx 0x1f
shl ecx 0x3
push 0x0
push [ edi + 0x44 ]
push 0x1
push eax
sar eax 0x5
push [ esi + 0x8 ]
push edx
push ecx
push ebx
push eax
push ebx
mov eax 0x8
push eax
lea eax [ esp + 0x54 ]
push eax
push edx
push [ esi + 0x3c ]
push ebx
push edx
push edi
call sub_448d90
add esp 0x44
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x3c ]
mov ecx r--data
mov edx r--data
cmp eax ebx
mov ebx r--data
cmove edx ecx
cmp eax 0x6
cmovne ebx edx
mov [ edi + 0x54 ] ebx
call [ ebx ]
mov [ edi + 0x58 ] eax
lea edx [ edi + 0x1c ]
mov ecx [ edi + 0x54 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0x8
mov eax [ edi + 0x54 ]
push [ eax + 0x18 ]
push r--data
push edi
call sub_447e12
add esp 0xc
call sub_45f424
mov [ edi + 0x5c ] eax
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push r--data
jmp r-xdata
xor edi edi
mov ecx ebx
mov [ ecx + 0x260 ] edi
cmp [ esi + 0xb0 ] edi
je r-xdata
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov [ esi ] 0x10cf
jmp r-xdata
mov eax [ esi + 0xe4 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xc4 ] 0x0
mov edx r--data
jmp r-xdata
lea eax [ esi + 0x3c ]
mov edi ecx
xor edi edi
mov eax [ esi + 0xe8 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xe4 ] 0x0
push 0x1
push edi
push edi
jmp r-xdata
mov [ esi ] 0x1112
jmp r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ esi + 0xe8 ] 0x0
call sub_44a668
add esp 0xc
mov [ esi ] edi
jmp r-xdata
mov ecx [ esp + 0x108 ]
call sub_497c4a
mov eax edi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45341e
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x10 ] eax
cmp [ esi + 0x260 ] 0x0
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebx [ esi + 0x264 ]
lea ebp [ esp + 0x4 ]
lea edi [ esp + 0x8 ]
mov [ esp ] ebx
push ebp
lea eax [ esp + 0x10 ]
push eax
push ebx
call sub_44008c
add esp 0xc
mov eax [ esp + 0xc ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x260 ]
test eax eax
jne r-xdata
mov ecx ebx
test ebx ebx
mov ecx ebx
jle r-xdata
mov ebx [ esp ]
test eax eax
je r-xdata
push ebx
push [ esp + 0x4 ]
call sub_44000a
add esp 0x8
mov eax [ esi + 0x260 ]
sub ebx ecx
jle r-xdata
mov ecx esi
mov edx edi
push ebp
call sub_453ab9
add esp 0x4
mov eax [ esi + 0x260 ]
mov ecx [ esp + 0x4 ]
test eax eax
jne r-xdata
push ebx
call sub_43ff78
add esp 0x4
test eax eax
je r-xdata
test ecx ecx
jg r-xdata
jmp r-xdata
sub_4534d8
push edi
push esi
mov esi ecx
mov eax [ esi ]
mov ecx [ esi + 0x18 ]
sub eax ecx
add ecx [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_469cdc
add esp 0x14
test eax eax
js r-xdata
xor edi edi
add eax [ esi + 0x18 ]
xor edi edi
inc edi
mov [ esi + 0x18 ] eax
cmp eax [ esi ]
jl r-xdata
mov eax edi
pop esi
pop edi
retn
push 0xaad
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
sub_453528
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov [ ecx + 0x6d0 ] 0x0
mov [ ecx + 0x254 ] edx
mov [ ecx + 0x258 ] eax
cmp [ ecx + 0x198 ] 0x1
jne r-xdata
xor edx edx
push 0x0
push 0xffffffff
call sub_44e4fe
add esp 0x8
retn
xor edx edx
push 0x0
push 0xffffffff
call sub_451579
add esp 0x8
retn
sub_453571
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi ecx
mov edx esp
mov [ esp + 0x4 ] eax
mov eax [ esi ]
mov ecx [ esi + 0x18 ]
sub eax ecx
add ecx [ esi + 0x14 ]
push edx
push eax
push ecx
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
xor esi esi
add [ esi + 0x18 ] eax
mov esi [ esp ]
jmp r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
retn
sub_4535b5
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
lea edx [ esp + 0x24 ]
mov [ esp + 0x8 ] eax
mov [ esp ] edx
call sub_453669
mov edi eax
lea eax [ esp + 0x4 ]
mov ecx esi
mov edx edi
push eax
call sub_4537d0
add esp 0x4
mov ecx [ esi + 0x16c ]
mov ebx eax
add eax ecx
cmp eax [ esi + 0x170 ]
jle r-xdata
mov eax [ esi + 0x168 ]
sub eax 0xffffff80
mov [ esi + 0x170 ] eax
push 0x1
push eax
push [ esi + 0x168 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x168 ] eax
mov ecx [ esi + 0x16c ]
jmp r-xdata
add ecx eax
mov eax [ edi + 0x10 ]
add eax [ esp + 0x4 ]
push ebx
push eax
push ecx
call sub_49a1f0
add esp 0xc
add [ esi + 0x16c ] ebx
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
sub_453669
push ebp
push ebx
push edi
push esi
push eax
mov edi edx
mov ebx ecx
push 0x2c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor ebp ebp
mov edx 0xd
mov ecx esi
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x1c ] ebp
mov [ esi ] 0xd
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x1 ] bl
mov eax [ esi + 0x10 ]
add eax [ esi ]
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x24 ] ebp
mov [ esi + 0x28 ] ebp
jmp r-xdata
mov ebp edi
mov eax [ ebp ]
lea edi [ ebp + 0x4 ]
cmp eax 0x5
ja r-xdata
jmp [ eax * 4 + jump_table_4101cc ]
mov eax esi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4537d0
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov esi ecx
mov edi edx
mov [ esp + 0x40 ] eax
cmp [ esi + 0x18 ] 0x0
mov [ esp + 0x4 ] esi
je r-xdata
cmp [ esi + 0x3c ] 0x0
mov edx esi
je r-xdata
mov eax [ edi + 0x10 ]
xor ebp ebp
sub eax [ edi + 0x14 ]
add [ edi ] eax
mov [ edi + 0x18 ] ebp
cmp [ esi + 0x24c ] ebp
je r-xdata
mov edx [ edi ]
lea ebx [ edi + 0x10 ]
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
lea ebx [ edi + 0x10 ]
lea ebp [ esp + 0xc ]
lea esi [ esp + 0x10 ]
add eax 0xfffffff4
add ecx 0xc
push ebp
push esi
push eax
push ecx
push [ edx + 0x90 ]
call sub_4708de
add esp 0x14
mov edx [ ebp ]
mov ecx edi
add edx 0x2
call sub_44dbe6
mov eax [ edi + 0x10 ]
mov esi [ esi ]
add eax 0xc
push [ ebp ]
push esi
push eax
call sub_49a1f0
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
mov edx [ ebp ]
add edx 0xc
mov [ edi ] edx
jmp r-xdata
mov eax [ edi + 0x8 ]
mov eax [ edi + 0x8 ]
cmp eax 0x10
je r-xdata
call sub_469c4e
mov ecx [ ebx ]
mov [ ecx + esi + 0x1 ] al
inc esi
cmp esi 0xb
jl r-xdata
mov ecx [ esp ]
lea eax [ edi + ecx - 0x4 ]
add edi ecx
mov esi ecx
mov ecx [ ebx ]
lea ecx [ ecx + ebp + 0x4 ]
push eax
push ecx
call sub_45f3f7
add esp 0x8
mov edx [ ebx ]
mov ecx eax
shr ecx 0x18
add edx ebp
mov [ edx + edi ] cl
mov ecx eax
mov edx [ ebx ]
shr ecx 0x10
add edx ebp
mov [ edx + edi + 0x1 ] cl
mov edx esi
mov ecx [ ebx ]
add ecx ebp
mov [ ecx + edi + 0x2 ] ah
mov ecx [ ebx ]
add ecx ebp
mov [ ecx + edi + 0x3 ] al
mov eax edx
mov ecx [ ebx ]
shr eax 0x18
mov [ ecx + ebp ] al
mov eax edx
mov ecx [ ebx ]
shr eax 0x10
mov [ ecx + ebp + 0x1 ] al
mov eax [ ebx ]
mov [ eax + ebp + 0x2 ] dh
mov eax [ ebx ]
mov [ eax + ebp + 0x3 ] dl
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x54 ]
test eax eax
je r-xdata
add edx 0x4
mov ecx edi
call sub_44dbe6
mov eax [ edi ]
lea ecx [ eax + 0x4 ]
lea ebp [ eax - 0x8 ]
mov [ edi ] ecx
mov ecx ebp
mov [ esp ] ebp
mov edi 0x8
sar ecx 0x1f
shr ecx 0x1d
lea ecx [ eax + ecx - 0x8 ]
and ecx 0xfffffff8
sub ebp ecx
neg ecx
sub edi ebp
lea esi [ eax + ecx - 0x9 ]
push 0x7b
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x48
je r-xdata
mov eax 0x4
xor ebp ebp
cmp eax 0x17
jne r-xdata
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
lea ecx [ ecx + ebp + 0x4 ]
push edi
push ecx
push [ edx + 0x58 ]
call [ eax + 0xc ]
add esp 0xc
mov eax [ edi + 0x8 ]
lea eax [ ebp + ebp * 2 ]
mov [ esp + eax * 4 + 0x10 ] 0x0
mov ecx [ edi ]
mov [ esp + eax * 4 + 0x14 ] ecx
xor ecx ecx
inc ecx
mov [ esp + eax * 4 + 0x18 ] ecx
cmp eax 0x29
jne r-xdata
xor ebp ebp
mov eax [ esp + 0x8 ]
xor ebp ebp
inc ebp
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx edi
call sub_44dc2a
mov eax [ edi + 0x18 ]
add eax 0x4
jmp r-xdata
mov ecx [ esp + 0x40 ]
add edi 0x4
call sub_497c4a
mov eax edi
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ eax ] ebp
mov [ esp ] ebp
mov eax [ edi + 0x10 ]
mov esi [ edi + 0x14 ]
mov ebp [ edi ]
movzx ebx [ eax + 0xc ]
mov ecx ebx
call sub_453aa3
xor ecx ecx
lea edx [ esp + 0x10 ]
push ecx
push ecx
push ecx
push edx
push [ esp + 0x10 ]
push ebp
push esi
push eax
push ebx
push 0x1
mov esi [ esp + 0x2c ]
push [ esi + 0x18 ]
call sub_43d2fa
add esp 0x2c
mov eax [ edi + 0x14 ]
sub eax [ edi + 0x10 ]
add [ edi ] eax
push 0x7b
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x22
jne r-xdata
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x8 ]
lea ebx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x2
mov ecx edi
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
lea ebx [ esp + 0xc ]
mov ecx edi
mov [ edi + 0x18 ] eax
lea eax [ esp + 0x8 ]
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
mov eax [ edi + 0x18 ]
lea esi [ ebp + ebp * 2 ]
mov ecx edi
mov edx ebx
mov [ esp + esi * 4 + 0x10 ] eax
lea eax [ esp + 0x8 ]
mov [ esp + esi * 4 + 0x18 ] 0x1
push eax
call sub_44dc49
add esp 0x4
xor eax eax
cmp [ ebx ] eax
je r-xdata
mov ecx [ edi + 0x18 ]
lea eax [ esp + esi * 4 + 0x10 ]
sub ecx [ eax ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc ebp
jmp r-xdata
sub_453ab9
push edi
push esi
mov esi ecx
push [ esp + 0xc ]
push edx
push esi
call [ esi + 0x240 ]
add esp 0xc
mov edi eax
test edi edi
je r-xdata
pop esi
pop edi
retn
xor eax eax
push edi
push eax
push eax
push esi
call [ esi + 0x23c ]
add esp 0x10
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
sub_453b0d
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x8 ] eax
push 0x24
push [ edi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
add edi 0x178
push edi
call sub_43ff78
add esp 0x4
cmp eax 0x20000
jg r-xdata
mov ecx [ esp + 0x20 ]
lea esi [ esp + 0x4 ]
xor eax eax
mov ebx esp
mov [ esi ] eax
mov [ ebx ] eax
mov edx esi
push ebx
call sub_44dc49
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
push [ esp ]
push eax
push edi
call sub_43ff80
add esp 0xc
sub_453b88
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebp [ esp + 0x24 ]
mov eax [ rw-data ]
mov edi [ esp + 0x28 ]
mov esi edx
cmp ebp 0x10
mov [ esp + 0x8 ] eax
jl r-xdata
mov edx [ esi ]
mov ecx esi
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] 0x0
mov ecx esi
mov eax [ esi ]
mov [ esi + 0x18 ] eax
push [ esp + 0x2c ]
mov eax [ ecx + 0x50 ]
and eax 0x10
je r-xdata
mov ebx [ esp + 0x20 ]
mov eax [ ebx ]
bswap eax
cmp eax 0x7
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x7
push r--data
push eax
call sub_498a6d
mov ecx ebx
add esp 0xc
test eax eax
je r-xdata
mov eax [ ecx + 0xb ]
bswap eax
push eax
call sub_43b2d8
mov ecx ebx
add esp 0x4
test eax eax
js r-xdata
lea edx [ ebp - 0xf ]
cmp eax edx
jg r-xdata
lea edx [ eax + 0xf ]
sub ebp edx
cmp ebp 0x4
jl r-xdata
mov ecx [ ecx + edx ]
bswap ecx
push ecx
mov [ esp + 0x4 ] eax
call sub_43b2d8
mov edx [ esp + 0x4 ]
mov ecx ebx
add esp 0x4
mov ebx eax
test ebx ebx
js r-xdata
add ebp 0xfffffffc
cmp ebx ebp
jg r-xdata
test ebx ebx
jle r-xdata
cmp [ esp + 0x2c ] 0xf
jl r-xdata
lea eax [ ecx + edx + 0x13 ]
mov eax [ edi + 0xb ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ebp eax
mov eax [ esp + 0x2c ]
lea eax [ eax - 0xf ]
cmp ebp eax
jne r-xdata
inc eax
cmp ebx 0x1
lea ebx [ ebx - 0x1 ]
jg r-xdata
cmp ebx ebp
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov edx [ esi ]
mov ecx esi
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] 0x0
mov ecx esi
mov eax [ esi ]
mov [ esi + 0x18 ] eax
push 0xb
call sub_44a58f
add esp 0x4
mov eax ebx
lea ecx [ esp + 0x4 ]
shr eax 0x18
mov edx ecx
mov [ ecx ] al
mov eax ebx
shr eax 0x10
mov [ ecx + 0x1 ] al
mov eax 0x4
mov [ ecx + 0x2 ] bh
mov [ ecx + 0x3 ] bl
mov ecx esi
push eax
call sub_44a58f
add esp 0x4
lea eax [ esp + 0x4 ]
mov [ eax ] 0x0
jmp r-xdata
cmp ebx ebp
jg r-xdata
dec ebx
mov ecx esi
lea edx [ esp + 0x4 ]
push 0x1
call sub_44a58f
add esp 0x4
add edi 0xf
mov ecx esi
mov edx edi
push ebp
jmp r-xdata
call sub_44a58f
add esp 0x4
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_453d34
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x4 ] eax
call sub_455d95
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov ecx esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_44a98e
test [ esi + 0x51 ] 0x2
jne r-xdata
mov edx 0x100
mov ebx [ eax + 0x24 ]
mov ecx [ esi + 0x88 ]
sub edx [ esi + 0x16c ]
lea edi [ ebx + edx - 0x1 ]
mov eax edi
cdq
idiv ebx
sub edi edx
test ecx ecx
je r-xdata
mov ecx 0x2
call sub_448c44
mov ebx eax
mov edx [ ebx ]
mov ecx ebx
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
xor edx edx
test edi edi
mov [ ecx + eax - 0x4 ] edx
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
jle r-xdata
push [ esi + 0x90 ]
call [ ecx + 0x20 ]
add esp 0x4
sub edi eax
mov ecx esi
mov edx ebx
call sub_455d95
lea ebp [ esp + 0x3 ]
call sub_469c4e
mov [ esp + 0x3 ] al
mov ecx ebx
mov edx ebp
push 0x1
call sub_44a58f
add esp 0x4
dec edi
jne r-xdata
sub_453e19
push edi
push esi
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx edi
call sub_455e1e
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
retn
test [ esi + 0x14 ] 0x1
jne r-xdata
mov ecx edi
call sub_44dc2a
add [ esi + 0x2c ] eax
test [ esi + 0x14 ] 0x1
jne r-xdata
mov ecx esi
call sub_44a44c
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x3
je r-xdata
push [ esi + 0x4c ]
call sub_440e99
cmp eax 0x2
je r-xdata
mov ecx esi
pop esi
pop edi
jmp sub_44dea3
cmp eax 0x1
jne r-xdata
push [ esi + 0x4c ]
call sub_4971e3
jmp r-xdata
add esp 0x4
sub_453e84
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x18 ]
lea edx [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax esp
mov ecx esi
push eax
call sub_44dc49
add esp 0x4
mov eax [ esi + 0x18 ]
cmp [ esi ] eax
jle r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
retn
mov ecx [ esi + 0x14 ]
cmp [ ecx + eax ] 0x0
lea eax [ eax + 0x1 ]
mov [ esi + 0x18 ] eax
je r-xdata
mov esi [ esp + 0x14 ]
mov ecx 0x52
call sub_448c44
mov ecx esi
mov edx eax
call sub_448c97
sub_453ee1
push ebp
push ebx
push edi
push esi
sub esp 0x10c
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x108 ] eax
call sub_44dc2a
lea ecx [ eax - 0x1 ]
cmp ecx 0x3
jbe r-xdata
mov ebx [ eax * 4 + r--data ]
lea ebx [ esp + 0x8 ]
push eax
push r--data
push ebx
call sub_432778
add esp 0xc
jmp r-xdata
mov ebp esp
lea edi [ esp + 0x4 ]
mov ecx esi
mov edx edi
push ebp
call sub_44dc49
add esp 0x4
mov eax [ edi ]
mov ecx r--data
test eax eax
cmovne ecx eax
push ecx
push [ ebp ]
push ebx
push r--data
call sub_43f758
add esp 0x10
mov ecx [ esp + 0x108 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x10c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_453f6e
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebp [ esp + 0x24 ]
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
mov edx ebp
mov [ esp + 0x8 ] eax
call sub_455e1e
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebx ebx
cmp [ ebp + 0x8 ] 0x5f
jne r-xdata
mov eax esp
lea esi [ esp + 0x4 ]
mov ecx ebp
mov edx esi
push eax
call sub_44dc49
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx ebp
call sub_44dc2a
mov ebx eax
mov esi [ esp ]
sub [ edi + 0x34 ] esi
sub [ edi + 0x3c ] esi
cmp ebx 0x2
jb r-xdata
xor edx edx
cmp ebx 0x1
mov ecx edi
sete dl
push esi
push eax
call sub_455f42
add esp 0x8
cmp [ edi + 0x3c ] 0x0
mov ebx eax
jg r-xdata
xor esi esi
mov [ esp ] 0x0
mov eax [ edi + 0x38 ]
mov edx eax
sub edx ebx
jle r-xdata
cmp [ edi + 0x48 ] 0x2
jne r-xdata
cmp ebx eax
jle r-xdata
mov ecx edi
call sub_448849
mov eax [ edi + 0x38 ]
mov eax [ edi + 0x38 ]
cmp eax 0x3fffffff
jg r-xdata
push 0xa9
mov eax [ esp + 0x24 ]
push [ eax + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
add eax 0x4000
mov [ edi + 0x38 ] eax
mov eax [ esp + 0x20 ]
cmp [ eax + 0xec ] 0x0
je r-xdata
mov ecx [ esp + 0x20 ]
xor edx edx
mov [ edi + 0x1c ] 0x1
inc edx
call sub_44a5f9
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ esp + 0x20 ]
mov eax [ eax + 0xf4 ]
test eax eax
je r-xdata
jmp r-xdata
sub_45408f
push esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
call sub_455e1e
mov esi eax
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_455fb8
mov ecx esi
pop esi
jmp sub_448263
sub_4540b4
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov ecx edi
call sub_455e1e
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
retn
mov ecx esi
call sub_455fb8
test [ edi + 0x51 ] 0x8
je r-xdata
mov ebx [ esi + 0x40 ]
test ebx ebx
jne r-xdata
jmp r-xdata
push [ ebx + 0x4 ]
push 0x0
push esi
call [ ebx ]
add esp 0xc
mov eax [ ebx + 0x8 ]
mov [ esi + 0x40 ] eax
push ebx
call sub_43f9d4
add esp 0x4
test [ esi + 0x14 ] 0x1
jne r-xdata
mov eax [ esi + 0x14 ]
test al 0x8
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x3
je r-xdata
or eax 0x8
mov ecx esi
mov [ esi + 0x14 ] eax
pop esi
pop edi
pop ebx
jmp sub_448263
push 0x1
push [ esi + 0x4c ]
call sub_440ec0
jmp r-xdata
cmp eax 0x1
je r-xdata
add esp 0x8
push 0x1
push [ esi + 0x4c ]
call sub_49720f
test eax eax
jne r-xdata
test [ esi + 0x14 ] 0x1
jne r-xdata
mov eax esi
add eax 0x20
push eax
call sub_43ff54
add esp 0x4
mov eax [ esi ]
cmp [ eax + 0x144 ] 0x4
je r-xdata
mov [ edi + 0x100 ] 0x0
jmp r-xdata
mov ecx esi
mov [ esi + 0x18 ] 0x1
call sub_44804f
sub_454184
push edi
push esi
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx edi
call sub_455e1e
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx edi
call sub_44dc2a
mov ecx edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x10 ] 0x0
call sub_44dc2a
mov ecx edi
mov [ esi + 0x2c ] eax
call sub_44dc2a
mov [ esi + 0x30 ] eax
mov eax [ esi + 0xc ]
cmp eax 0x5
je r-xdata
push 0x210e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx esi
call sub_448263
jmp r-xdata
cmp eax 0x3
jne r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
push 0x212c
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
mov ecx esi
pop esi
pop edi
jmp sub_44804f
push eax
call sub_440f1a
add esp 0x4
jmp r-xdata
push 0x2115
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x4c ]
sub_45424c
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
mov ecx esi
mov edx ebx
call sub_455e1e
mov edi eax
test edi edi
je r-xdata
pop esi
pop edi
pop ebx
retn
cmp [ edi + 0x10 ] 0x0
jne r-xdata
mov eax [ edi + 0xc ]
cmp eax 0x5
je r-xdata
push 0x2157
push r--data
push r--data
call sub_4a509d
add esp 0xc
push edi
push [ esi + 0x124 ]
call sub_47eb51
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
cmp eax 0x3
jne r-xdata
push 0x2170
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx ebx
call sub_453ee1
mov ebx eax
push ebx
push r--data
push esi
call sub_447e12
add esp 0xc
push ebx
call sub_43f9d4
add esp 0x4
push [ edi + 0x4c ]
call sub_440e52
add esp 0x4
jmp r-xdata
sub_4542f5
push ebp
push ebx
push edi
push esi
sub esp 0x2c
mov ebp [ esp + 0x44 ]
mov edi [ esp + 0x40 ]
mov eax [ rw-data ]
mov ecx edi
mov edx ebp
mov [ esp + 0x28 ] eax
call sub_455e1e
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov ecx [ esp + 0x28 ]
call sub_497c4a
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ esp + 0x20 ]
mov ecx ebp
lea edx [ esp + 0x24 ]
push eax
call sub_44dc49
add esp 0x4
mov esi [ ebp ]
mov ebx [ ebp + 0x18 ]
xor ecx ecx
cmp esi ebx
jle r-xdata
mov eax [ esp + 0x10 ]
mov ebp 0x64
mov edx [ eax + 0x14 ]
cmp eax [ edi + 0x128 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
xor ecx ecx
cmp [ eax + ebx ] 0x0
setne cl
inc ebx
mov [ ebp + 0x18 ] ebx
test ecx ecx
je r-xdata
cmp [ esp + 0x20 ] 0xb
jne r-xdata
and edx 0x2
jne r-xdata
mov edi [ esp + 0x24 ]
mov [ esp + 0x8 ] edx
mov [ esp + 0xc ] ecx
push 0xb
push r--data
push edi
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov ecx ebp
call sub_448c44
mov ebx eax
mov eax [ esp + 0x10 ]
mov edx [ ebx ]
mov eax [ eax + 0x4 ]
add edx 0x4
mov [ ebx ] edx
mov ecx eax
mov edi eax
mov esi eax
shr ecx 0x18
shr edi 0x10
mov ebp ecx
mov ecx ebx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx ebp
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov edx esi
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov ecx [ esp + 0x40 ]
mov edx ebx
call sub_448c97
mov ecx [ esp + 0x44 ]
call sub_44dc2a
mov edi [ esp + 0x40 ]
mov [ edi + 0x130 ] eax
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
jmp r-xdata
push 0xb
push r--data
push edi
call sub_498a6d
add esp 0xc
mov edi [ esp + 0x40 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov ebp 0x63
mov eax [ esp + 0x44 ]
mov [ esp + 0x18 ] 0x0
mov eax [ eax + 0x14 ]
mov ebp [ eax + ebx ]
bswap ebp
test ebp ebp
je r-xdata
lea esi [ edi + 0x130 ]
mov [ edi + 0x130 ] 0x80
jmp r-xdata
add eax ebx
sub esi ebx
mov [ esp + 0x4 ] eax
push 0x5
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
mov ebp [ esp + 0x44 ]
lea edi [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
mov ecx ebp
push edi
call sub_44dc49
add esp 0x4
mov edi [ edi ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea ecx [ eax + 0x4 ]
mov [ esp ] 0x0
cmp ecx esi
jg r-xdata
mov [ esp ] 0x0
mov ebx [ esp + 0x1c ]
push ebx
push edi
push r--data
call sub_43f758
add esp 0xc
cmp edi 0x3
mov [ esp ] eax
je r-xdata
mov ebx [ esp + 0x44 ]
lea ecx [ eax + 0x4 ]
cmp ecx esi
jle r-xdata
add ebp 0x5
push ebp
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx + eax ]
bswap eax
add eax ecx
push eax
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
lea esi [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
push esi
call sub_44dc49
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp [ edx + eax ] 0x0
setne bl
inc eax
mov [ ecx + 0x18 ] eax
push 0x3
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
cmp edi 0x4
jne r-xdata
test ecx ecx
mov ebp 0x0
mov ebx 0x0
mov [ edi + 0x130 ] 0x80
sete cl
xor esi esi
test cl al
je r-xdata
test al al
jne r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx + eax ]
bswap eax
add eax ecx
push eax
call sub_43b2d8
add esp 0x4
mov ebx [ esp + 0x44 ]
test eax eax
js r-xdata
lea ecx [ eax + 0x4 ]
cmp ecx esi
jg r-xdata
mov esi [ esp ]
push [ esp + 0x1c ]
push eax
push r--data
call sub_43f758
add esp 0xc
mov ebp eax
mov edi [ esp + 0x40 ]
mov eax 0x88
jmp r-xdata
push 0x3
push r--data
push ebx
call sub_498a6d
add esp 0xc
mov edi [ esp + 0x40 ]
test eax eax
je r-xdata
mov edi [ esp + 0x40 ]
cmp [ ebx ] 0x54524241
je r-xdata
test ebp ebp
mov ecx r--data
mov eax r--data
mov edx r--data
cmovne ecx ebp
test ebx ebx
cmove edx eax
test esi esi
cmovne eax esi
push ecx
push edx
push eax
push r--data
push edi
call sub_447e12
add esp 0x14
push esi
call sub_43f9d4
add esp 0x4
push ebp
call sub_43f9d4
add esp 0x4
lea esi [ edi + 0x130 ]
mov ecx ebx
mov [ edi + 0x130 ] 0x80
call sub_44dc2a
mov ebp eax
push ebp
push r--data
call sub_43f758
add esp 0x8
sub ebp 0xffffff80
mov [ esp ] eax
mov [ edi + 0x130 ] ebp
mov ebp ebx
jmp r-xdata
xor eax eax
lea ecx [ eax + 0x4 ]
cmp ecx esi
jg r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx + eax ]
bswap eax
add eax ecx
push eax
call sub_43b2d8
add esp 0x4
test eax eax
setne cl
cmp eax esi
sete al
and al cl
movzx eax al
mov [ esp ] eax
jmp r-xdata
mov [ esi ] eax
mov eax 0x84
jmp r-xdata
push 0x3
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
mov edi [ esp + 0x40 ]
mov eax 0x96
jmp r-xdata
cmp [ ebx ] 0x56474553
mov edi [ esp + 0x40 ]
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx ebp
xor ebp ebp
mov ebx 0x0
cmp [ ecx ] eax
jle r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx + eax ]
bswap eax
add eax ecx
push eax
call sub_43b2d8
add esp 0x4
test eax eax
setne cl
cmp eax esi
sete al
and al cl
jmp r-xdata
mov eax 0x80
mov eax 0x82
jmp r-xdata
mov eax 0x8b
jmp r-xdata
cmp [ ebx ] 0x4d524554
jne r-xdata
mov ecx [ esp ]
test ecx ecx
je r-xdata
mov eax 0x8f
jmp r-xdata
sub_45476b
push ebp
push ebx
push edi
push esi
sub esp 0x4c
mov esi [ esp + 0x64 ]
mov eax [ rw-data ]
mov ebp [ esp + 0x60 ]
lea ebx [ esp + 0x40 ]
lea edx [ esp + 0x44 ]
mov ecx esi
mov [ esp + 0x48 ] eax
push ebx
call sub_44dc49
add esp 0x4
push 0x5c
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
mov ecx esi
mov [ edi ] ebp
call sub_44dc2a
mov ecx esi
mov [ esp ] eax
call sub_44dc2a
mov ecx esi
mov [ esp + 0xc ] eax
call sub_44dc2a
mov ecx [ ebx ]
mov ebp r--data
cmp ecx 0x16
je r-xdata
mov [ esp + 0x8 ] eax
push 0x16
push r--data
push [ esp + 0x4c ]
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
cmp ecx 0xf
je r-xdata
mov eax [ esp ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x10 ] 0x0
mov eax [ esp + 0x60 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov [ esp + 0x8 ] eax
push 0xf
push r--data
push [ esp + 0x4c ]
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
cmp ecx 0x3
jne r-xdata
mov ebp r--data
jmp r-xdata
mov eax edi
mov [ edi + 0xc ] 0x2
add eax 0x4c
push eax
call sub_43ff45
add esp 0x4
xor ebx ebx
mov [ edi + 0x58 ] ebx
mov eax [ esp ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x10 ] ebx
jmp r-xdata
lea ebp [ esp + 0x18 ]
lea ebx [ esp + 0x14 ]
mov ecx esi
mov edx ebp
push ebx
call sub_44dc49
add esp 0x4
mov eax [ ebp ]
mov ebp r--data
test eax eax
cmove eax ebp
push eax
push [ ebx ]
push r--data
call sub_43f758
add esp 0xc
lea ebx [ esp + 0x1c ]
mov ecx esi
mov [ ebx + 0x8 ] eax
call sub_44dc2a
mov [ ebx ] eax
lea eax [ esp + 0x38 ]
mov ecx esi
lea edx [ esp + 0x3c ]
push eax
call sub_44dc49
add esp 0x4
mov ecx esi
call sub_44dc2a
xor ebx ebx
mov [ esp + 0x10 ] eax
push ebx
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x68 ]
push [ eax + 0x13c ]
call sub_47e50d
add esp 0xc
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x3c ]
mov eax [ eax ]
test eax eax
cmovne ebp eax
push [ esp + 0x10 ]
push ebp
lea eax [ esp + 0x40 ]
push [ eax ]
lea eax [ esp + 0x28 ]
push [ eax ]
push [ eax + 0x8 ]
mov ebp eax
push r--data
push [ esp + 0x78 ]
call sub_447e12
add esp 0x1c
push [ ebp + 0x8 ]
call sub_43f9d4
mov ecx [ esp + 0x8 ]
add esp 0x4
test ecx ecx
je r-xdata
mov [ esp + 0x8 ] eax
push 0x3
push r--data
push [ esp + 0x4c ]
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
mov ecx edi
call sub_4489be
mov eax [ esp + 0xc ]
test ebx ebx
mov [ edi + 0x2c ] eax
mov eax [ esp + 0x8 ]
mov [ edi + 0x30 ] eax
je r-xdata
mov ebp r--data
jmp r-xdata
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea ebp [ esp + 0x3c ]
lea ebx [ esp + 0x38 ]
mov ecx esi
mov edx ebp
push ebx
call sub_44dc49
add esp 0x4
mov eax [ ebp ]
mov ecx r--data
test eax eax
cmovne ecx eax
push ecx
push [ ebx ]
push r--data
call sub_43f758
add esp 0xc
mov ecx esi
mov ebx eax
call sub_44dc2a
mov esi eax
push esi
mov [ esp + 0x8 ] ebx
push ebx
push r--data
mov ebx [ esp + 0x6c ]
push ebx
call sub_447e12
add esp 0x10
xor ebp ebp
cmp [ ebx + 0x4c ] ebp
jne r-xdata
mov ecx 0x5b
call sub_448c44
mov ebx [ edi + 0x4 ]
mov esi eax
mov ecx esi
mov eax ebx
mov ebp ebx
shr eax 0x18
shr ebp 0x10
mov [ esp ] eax
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx esi
mov ebx [ edi + 0x8 ]
mov eax ebx
mov ebp ebx
shr eax 0x18
shr ebp 0x10
mov [ esp ] eax
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ebx [ edi + 0x34 ]
mov edx [ esi ]
mov ecx ebx
mov eax ebx
add edx 0x4
shr ecx 0x10
shr eax 0x18
mov [ esi ] edx
mov ebp ecx
mov ecx esi
mov edi eax
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx esi
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx esi
mov [ ecx + eax - 0x4 ] __dos_header
mov ecx [ esp + 0x60 ]
call sub_448c97
jmp r-xdata
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] ebx
mov [ edi + 0x34 ] ebx
mov esi [ esp ]
mov eax [ ecx + 0x18 ]
mov esi ecx
mov ecx edi
add ecx 0x4c
push [ eax + 0x24 ]
mov ebp [ esp + 0x64 ]
push [ ebp + 0x248 ]
push edi
push [ esi + 0x4 ]
push [ esi + 0xc ]
push ecx
call sub_440628
add esp 0x18
mov ebp eax
push [ esi + 0x4 ]
push [ esi + 0xc ]
mov esi [ esp + 0x68 ]
push r--data
push esi
call sub_447e12
add esp 0x10
test ebp ebp
je r-xdata
push [ esi ]
push [ esi + 0x14 ]
push [ esi + 0x8 ]
push eax
call sub_46e667
add esp 0x10
push edi
jmp r-xdata
push esi
push [ esp + 0x8 ]
push edi
push [ ebx + 0x194 ]
call sub_497095
add esp 0x10
mov [ edi + 0x4c ] eax
xor eax eax
inc eax
mov [ edi + 0xc ] eax
mov [ edi + 0x50 ] eax
mov eax ebx
xor ebx ebx
cmp [ eax + 0xf4 ] 0x0
setne bl
shl ebx 0x7
push r--data
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
cmp [ ebx + 0xf4 ] 0x0
je r-xdata
mov ecx [ esp + 0x48 ]
call sub_497c4a
add esp 0x4c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx 0x5c
mov [ esp + 0xc ] ebp
call sub_448c44
mov ebx [ edi + 0x4 ]
mov esi eax
mov [ esp ] edi
mov edx [ esi ]
mov ecx esi
mov ebp ebx
mov edi ebx
add edx 0x4
shr ebp 0x18
shr edi 0x10
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx ebp
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx esi
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x4 ] 0x2000000
mov ecx esi
mov edi [ esp + 0xc ]
mov edx edi
call sub_448e7b
mov edx r--data
mov ecx esi
call sub_448e7b
mov ebx [ esp + 0x60 ]
mov edx esi
mov ecx ebx
call sub_448c97
push edi
push r--data
push ebx
call sub_447e12
add esp 0xc
push [ esp ]
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
xor ebp ebp
mov [ edi + 0xc ] 0x3
push ebp
push r--data
push esi
call sub_447e12
add esp 0xc
push ebp
call sub_43f9d4
add esp 0x4
mov ebp r--data
jmp r-xdata
call sub_43f9d4
add esp 0x4
xor eax eax
test ebp ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x10 ] eax
jne r-xdata
mov ebp r--data
xor ebx ebx
jmp r-xdata
mov esi [ esp ]
mov eax [ esp + 0x4 ]
push eax
call sub_43f9d4
add esp 0x4
jmp r-xdata
sub_454c8a
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx edi
call sub_455e1e
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
retn
mov ebx [ esi + 0x40 ]
test ebx ebx
je r-xdata
pop esi
pop edi
pop ebx
jmp sub_456090
push [ ebx + 0x4 ]
push edi
push esi
call [ ebx ]
add esp 0xc
mov eax [ ebx + 0x8 ]
mov [ esi + 0x40 ] eax
push ebx
call sub_43f9d4
add esp 0x4
mov ecx esi
pop esi
pop edi
pop ebx
jmp sub_448263
sub_454cd8
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov [ esp + 0x4 ] edx
mov esi ecx
test [ esi + 0x14 ] 0xa
je r-xdata
mov ecx 0x62
call sub_448c44
mov ebx [ esi + 0x4 ]
mov edi eax
mov [ esp ] esi
mov edx [ edi ]
mov ecx edi
mov eax ebx
mov ebp ebx
add edx 0x4
shr eax 0x10
shr ebp 0x18
mov esi eax
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx ebp
mov [ ecx + eax - 0x4 ] dl
mov edx esi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx edi
mov edx [ esp + 0x4 ]
call sub_448e7b
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
cmp [ esp + 0x1c ] 0x0
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
setne [ ecx + eax - 0x1 ]
je r-xdata
push 0x1ef5
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp [ esp + 0x20 ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov ecx [ esp ]
mov ebx eax
test [ ecx + 0x14 ] 0xa
mov esi ecx
je r-xdata
mov eax [ esp + 0x1c ]
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] ebp
mov [ ebx + 0x8 ] eax
cmp [ esi + 0x40 ] eax
je r-xdata
push 0x1ed7
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ esi + 0x40 ]
mov eax [ esi + 0x44 ]
add eax 0x8
jmp r-xdata
mov [ eax ] ebx
mov [ esi + 0x44 ] ebx
sub_454dd0
push ebp
push ebx
push edi
push esi
sub esp 0x30
mov [ esp + 0x14 ] edx
mov ebx ecx
mov eax [ rw-data ]
mov [ esp + 0x2c ] eax
mov eax [ ebx + 0x140 ]
test eax eax
je r-xdata
push sub_4560de
call sub_47dc24
add esp 0x4
mov [ ebx + 0x140 ] eax
push 0x0
push eax
call sub_47e33c
add esp 0x8
test eax eax
je r-xdata
push 0x0
push [ ebx + 0x140 ]
call sub_47e33c
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov ebp [ esp + 0x28 ]
mov dl [ ebp ]
mov eax edx
add al 0xcc
cmp al 0xd
ja r-xdata
lea eax [ esp + 0x28 ]
push eax
push 0x0
push 0x9b
push [ esp + 0x20 ]
call sub_431bea
add esp 0x10
mov esi eax
mov [ esp ] ebx
test esi esi
je r-xdata
xor esi esi
inc esi
push 0x0
push [ ebx + 0x140 ]
call sub_47e33c
add esp 0x8
mov esi eax
test esi esi
je r-xdata
xor ebp ebp
mov eax edx
mov dl 0x41
movzx eax al
mov ecx 0x2005
bt ecx eax
jae r-xdata
mov [ eax ] 0x0
push esi
push [ ebx + 0x140 ]
call sub_47e33c
add esp 0x8
inc esi
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x2c ]
call sub_497c4a
add esp 0x30
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebx ebx
inc ebx
mov edi ebx
jmp r-xdata
inc ebp
push ebp
push [ ebx + 0x140 ]
call sub_47e33c
add esp 0x8
mov esi eax
test esi esi
jne r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0x4 ]
mov edx r--data
mov edi r--data
mov ebx r--data
test ecx ecx
cmovne edx edi
mov edi r--data
cmove ecx edi
cmp eax 0x52
mov edi r--data
cmove edi ebx
cmp eax 0x4c
mov eax r--data
cmove edi eax
push [ esi + 0x8 ]
push edx
push ecx
push edi
push r--data
call sub_43f758
add esp 0x14
cmp [ esi + 0x4 ] 0x44
mov edi eax
je r-xdata
inc ebp
mov [ esp + 0x8 ] al
jmp r-xdata
cmp al 0x4c
jne r-xdata
mov al [ ebp + 0x1 ]
inc ebp
jmp r-xdata
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ esp ]
push edi
push r--data
push ebx
call sub_447e12
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push [ esi + 0xc ]
push [ esi + 0x14 ]
push edi
push r--data
call sub_43f758
add esp 0x10
mov ebx eax
push edi
call sub_43f9d4
add esp 0x4
mov edi ebx
push 0x3a
push ebp
call sub_43f67d
add esp 0x8
mov edi eax
mov [ esp + 0x1c ] 0x0
test edi edi
je r-xdata
mov [ esp + 0x8 ] 0x4c
cmp al 0x52
mov [ esp + 0x13 ] dl
je r-xdata
push edi
mov eax [ esp + 0x4 ]
push [ eax + 0x140 ]
call sub_47e33c
add esp 0x8
mov esi eax
inc edi
test esi esi
jne r-xdata
mov [ esp + 0x4 ] edi
mov ecx r--data
mov edx r--data
mov edi r--data
mov ebp r--data
mov ebx r--data
mov eax [ esi + 0x18 ]
test eax eax
cmovne ecx edx
mov edx r--data
cmovne edx edi
mov edi r--data
cmove eax edi
mov edi [ esi + 0x10 ]
test edi edi
cmovne ebp ebx
mov ebx r--data
cmove edi ebx
push ecx
push [ esi + 0x8 ]
push edx
push eax
push ebp
push edi
push r--data
call sub_43f758
add esp 0x1c
mov [ esp + 0x8 ] 0x0
mov ebx eax
cmp [ esi + 0x4 ] 0x44
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
cmp [ ebx + 0x198 ] 0x1
je r-xdata
mov [ esp + 0xc ] 0x0
mov eax edi
sub eax ebp
push ebp
push eax
push r--data
call sub_43f758
add esp 0xc
mov ebx eax
push ebx
call sub_43f6f7
add esp 0x4
mov [ esp + 0xc ] eax
push ebx
mov ebx [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
inc edi
mov ebp edi
jmp r-xdata
lea eax [ esi + 0x28 ]
push [ esi + 0x24 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
push 0xffffffff
push 0x0
call sub_440c77
add esp 0x20
mov edi eax
mov ecx r--data
mov edx r--data
mov eax r--data
mov ebp ebx
mov ebx r--data
test edi edi
cmovne ecx edx
mov edx [ esi + 0x24 ]
cmovne eax edi
mov esi r--data
cmp edx 0x2
cmove esi ebx
mov ebx ebp
cmp edx 0x1
mov ebp r--data
cmove esi ebp
push eax
push ecx
push ebx
push esi
push r--data
push [ esp + 0x14 ]
call sub_447e12
add esp 0x18
test edi edi
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx r--data
mov edx r--data
mov ebp r--data
mov edi r--data
test eax eax
cmovne ecx edx
mov edx r--data
cmove eax ebp
cmovne edx edi
push ecx
push [ esi + 0xc ]
push edx
push eax
push [ esi + 0x14 ]
push r--data
call sub_43f758
add esp 0x18
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x4 ]
cmp eax 0x44
je r-xdata
push ebp
push [ ebx + 0x140 ]
call sub_47e541
add esp 0x8
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x14 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x18 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x1c ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
dec ebp
push eax
call sub_440e71
add esp 0x4
jmp r-xdata
push edi
push [ ebx + 0x13c ]
call sub_47eb51
add esp 0x8
mov ecx edi
call sub_4561a2
mov ecx 0x50
call sub_448c44
mov ebx eax
mov edx r--data
mov ecx ebx
call sub_448e7b
mov edx [ ebx ]
mov ecx ebx
inc edx
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x0
mov edx [ esi + 0x10 ]
test edx edx
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
mov [ esp + 0x4 ] edi
jne r-xdata
push ebp
call sub_491f8a
add esp 0x4
mov edi eax
mov eax 0x1
test edi edi
mov [ esp + 0x1c ] eax
jne r-xdata
push ebp
call sub_4a65cf
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
mov edi [ esp + 0x4 ]
push ebx
call sub_43f9d4
add esp 0x4
push [ esp + 0x8 ]
call sub_43f9d4
add esp 0x4
push edi
cmp eax 0x4c
jne r-xdata
mov ecx ebx
call sub_448e7b
mov eax [ esi + 0x8 ]
mov ecx eax
mov [ esp + 0x4 ] eax
shr eax 0x10
shr ecx 0x18
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x8 ]
mov [ ecx + eax - 0x4 ] dl
mov edx [ esp + 0xc ]
mov [ ecx + eax - 0x3 ] dl
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov edx ebx
mov ecx [ esp ]
mov ebx ecx
call sub_448c97
push 0x9a
push [ esp + 0x18 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_43f60a
add esp 0x8
mov edi eax
lea ebx [ esi + edi ]
push esi
push edi
push r--data
call sub_43f758
add esp 0xc
mov [ esp + 0x18 ] eax
lea eax [ esi + edi + 0x1 ]
mov esi ebx
cmp [ eax - 0x1 ] 0x0
cmovne esi eax
push esi
call sub_4a65cf
add esp 0x4
mov ebx eax
test ebx ebx
je r-xdata
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push ebp
push r--data
push ebx
call sub_447e12
add esp 0xc
xor edi edi
xor eax eax
inc eax
mov [ esp + 0x1c ] eax
mov eax [ esp ]
cmp [ eax + 0x13c ] 0x0
jne r-xdata
lea eax [ esi + 0x28 ]
push [ esi + 0x24 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
push [ esi + 0xc ]
push [ esi + 0x14 ]
call sub_440c77
add esp 0x20
mov edi eax
mov ecx r--data
mov edx r--data
mov eax r--data
mov ebp ebx
mov ebx r--data
test edi edi
cmovne ecx edx
mov edx [ esi + 0x24 ]
cmovne eax edi
mov esi r--data
cmp edx 0x2
cmove esi ebx
mov ebx ebp
cmp edx 0x1
mov ebp r--data
cmove esi ebp
push eax
push ecx
push [ esp + 0x10 ]
push ebx
push esi
push r--data
push [ esp + 0x18 ]
call sub_447e12
add esp 0x1c
test edi edi
je r-xdata
mov edx r--data
mov edx r--data
jmp r-xdata
push esi
call sub_491f8a
add esp 0x4
mov edi [ esp + 0x4 ]
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp + 0x8 ]
mov edi [ esp + 0x4 ]
xor ecx ecx
jmp r-xdata
xor ecx ecx
xor esi esi
xor ebx ebx
mov al 0x44
mov [ esp + 0x18 ] 0x0
dec ebx
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
mov [ edi + 0x14 ] 0x0
push [ esi + 0x14 ]
call sub_43f79e
add esp 0x4
mov [ edi + 0xc ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edi [ esp ]
mov eax sub_4484ff
mov ecx sub_4561d5
cmp [ edi + 0x198 ] 0x1
cmove eax ecx
push eax
call sub_47dc24
add esp 0x4
mov [ edi + 0x13c ] eax
push edi
jmp r-xdata
push esi
push r--data
mov ebx [ esp + 0x8 ]
push ebx
call sub_447e12
add esp 0xc
xor eax eax
inc eax
mov ecx eax
mov al [ esp + 0x8 ]
jmp r-xdata
test edi edi
je r-xdata
mov ebx [ esp ]
jmp r-xdata
test ebx ebx
je r-xdata
push 0x9a
push [ esp + 0x18 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push eax
jmp r-xdata
call sub_43f9d4
add esp 0x4
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push [ esp + 0x18 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] esi
push 0x2c
push 0x1
mov [ esp + 0x10 ] al
call sub_43f807
add esp 0x8
mov esi eax
movsx eax [ esp + 0x8 ]
xor edi edi
mov [ esi + 0x4 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x10 ] eax
mov eax 0x0
cmp [ esp + 0x1c ] 0x0
je r-xdata
push r--data
push r--data
jmp r-xdata
call sub_43f79e
add esp 0x4
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ edi ] eax
push edi
mov ebp [ esp + 0x4 ]
push [ ebp + 0x13c ]
call sub_47dcb3
add esp 0x8
cmp eax edi
je r-xdata
mov [ esi + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x18 ]
mov [ esi + 0x14 ] eax
cmp [ esp + 0x24 ] 0x0
je r-xdata
push ebp
call sub_43f79e
add esp 0x4
push [ esp + 0x8 ]
push ebx
push r--data
push ebp
call sub_447e12
add esp 0x10
mov [ edi + 0x10 ] ebx
mov [ esi + 0x20 ] edi
mov [ edi + 0x18 ] esi
cmp [ ebp + 0x198 ] 0x1
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x14 ]
push r--data
push ebp
call sub_447e12
add esp 0x10
push edi
jmp r-xdata
xor eax eax
mov [ esi + 0x1c ] edi
mov [ esi + 0xc ] ebx
mov edx 0x1
mov [ esi + 0x28 ] eax
mov [ esi + 0x20 ] eax
xor eax eax
mov cl [ esp + 0x13 ]
cmp cl 0x36
sete al
add eax eax
cmp cl 0x34
cmove eax edx
mov [ esi + 0x24 ] eax
push esi
mov ebx [ esp + 0x4 ]
push [ ebx + 0x140 ]
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
push [ esp + 0x20 ]
call sub_43f79e
add esp 0x4
mov edi eax
mov ecx 0x50
call sub_448c44
mov esi eax
mov edx r--data
mov ecx esi
call sub_448e7b
mov edx [ esi ]
mov ecx esi
inc edx
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x1
mov ecx esi
mov edx [ edi + 0x8 ]
call sub_448e7b
mov ebx [ edi ]
mov eax ebx
mov ecx ebx
shr eax 0x18
shr ecx 0x10
mov [ esp + 0x18 ] ecx
mov [ esp + 0xc ] eax
mov ecx esi
mov edx [ esi ]
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ esp + 0xc ]
mov [ ecx + eax - 0x4 ] dl
mov edx [ esp + 0x18 ]
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx ebp
mov edx esi
call sub_448c97
mov edx 0x51
mov ecx ebp
push edi
push sub_45620b
push 0x52
push 0x0
push [ esi + 0xc ]
mov eax 0x1
push eax
push [ esi + 0x14 ]
push 0x4
push [ esi + 0x8 ]
push eax
push 0x1c
push ebp
call sub_448d90
add esp 0x24
mov edx 0xe
mov ecx ebp
push edi
push sub_45620b
push 0xf
jmp r-xdata
mov [ esi ] 0x2
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
call sub_448550
add esp 0xc
xor ebx ebx
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
push [ esp + 0x2c ]
push 0x9b
push [ esp + 0x20 ]
call sub_431bea
add esp 0x10
mov esi eax
test esi esi
jne r-xdata
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x14 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x18 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x1c ]
call sub_43f9d4
add esp 0x4
push esi
jmp r-xdata
mov [ eax ] 0x1
call sub_43f9d4
add esp 0x4
sub_455707
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x24 ]
mov edi [ eax ]
test esi esi
je r-xdata
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov ecx [ edi + 0x128 ]
mov edx r--data
push esi
push sub_455707
call sub_454cd8
add esp 0x8
mov ebx eax
mov edx [ ebx ]
mov ecx ebx
inc edx
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x0
mov ecx ebx
mov eax [ edi + 0x190 ]
mov edx [ eax + 0xc ]
call sub_448e7b
mov eax [ edi + 0x190 ]
mov ecx ebx
mov edx [ eax + 0x10 ]
call sub_448e7b
mov eax [ edi + 0x18c ]
mov ebp [ eax + 0xc ]
mov ecx ebp
mov [ esp ] ebp
shr ebp 0x10
shr ecx 0x18
mov [ esp + 0x4 ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ ecx + eax - 0x4 ] dl
mov edx ebp
mov [ ecx + eax - 0x3 ] dl
mov edx [ esp ]
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov ecx edi
mov edx ebx
call sub_448c97
mov [ esi ] 0x2353
add esp 0x8
jmp r-xdata
cmp eax 0x2353
jne r-xdata
push esi
call sub_43f9d4
add esp 0xc
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp [ eax + 0x8 ] 0x63
mov eax [ edi + 0x110 ]
jne r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
push r--data
push eax
call sub_4842ab
add esp 0x8
mov [ edi + 0x4c ] 0x1
jmp r-xdata
sub_45584f
push edi
push esi
mov eax [ esp + 0xc ]
mov esi [ esp + 0x14 ]
mov edi [ eax ]
test esi esi
je r-xdata
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop edi
retn
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov ecx [ edi + 0x128 ]
mov edx r--data
push esi
push sub_45584f
call sub_454cd8
add esp 0x8
mov ecx edi
mov edx eax
call sub_448c97
mov [ esi ] 0x2373
jmp r-xdata
cmp eax 0x2373
jne r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
cmp [ eax + 0x8 ] 0x63
mov eax [ edi + 0x110 ]
jne r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
push r--data
push eax
call sub_4842ab
add esp 0x8
mov [ edi + 0x48 ] 0x1
jmp r-xdata
sub_45590a
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x24 ]
mov esi [ eax ]
test edi edi
je r-xdata
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
mov [ edi ] 0x0
mov eax [ edi ]
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax 0x9600
mov [ esp + 0x4 ] edi
lea ebx [ esi + 0x114 ]
lea ebp [ esi + 0x118 ]
mov [ esi + 0x114 ] eax
mov [ esi + 0x118 ] eax
push 0x31
push [ esi + 0x248 ]
call sub_431a8c
add esp 0x8
push ebp
push ebx
push r--data
push eax
call sub_442b34
add esp 0x10
mov ecx [ esi + 0x128 ]
mov edx r--data
push edi
push sub_45590a
call sub_454cd8
add esp 0x8
mov ebx eax
push 0x30
push [ esi + 0x248 ]
call sub_431a8c
add esp 0x8
mov ecx ebx
mov edx eax
call sub_448e7b
mov eax [ esi + 0x11c ]
mov ecx eax
mov edi eax
mov ebp eax
shr ecx 0x18
shr edi 0x10
mov [ esp ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov edx ebp
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov eax [ esi + 0x120 ]
mov ecx eax
mov edi eax
mov ebp eax
shr ecx 0x18
shr edi 0x10
mov [ esp ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov edx ebp
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
xor ebp ebp
mov [ ecx + eax - 0x4 ] ebp
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x4 ] ebp
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx sub_456312
mov [ ecx + eax - 0x4 ] ebp
mov ecx esi
mov eax [ ebx ]
mov [ ebx + 0x18 ] eax
push ebx
call sub_456293
add esp 0x4
mov edx [ ebx ]
mov ecx ebx
inc edx
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x80
mov eax [ esi + 0x118 ]
mov ecx eax
mov edi eax
mov ebp eax
shr ecx 0x18
shr edi 0x10
mov [ esp ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov edx ebp
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
mov ecx ebx
mov edx [ ebx ]
inc edx
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov [ ecx + eax - 0x1 ] 0x81
mov eax [ esi + 0x114 ]
mov ecx eax
mov edi eax
mov ebp eax
shr ecx 0x18
shr edi 0x10
mov [ esp ] ecx
mov ecx ebx
mov edx [ ebx ]
add edx 0x4
mov [ ebx ] edx
call sub_44dbe6
mov eax [ ebx ]
mov ecx [ ebx + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] dl
mov edx ebp
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
xor eax eax
mov edx r--data
mov ecx ebx
inc eax
push eax
call sub_44a58f
add esp 0x4
mov ecx esi
mov edx ebx
call sub_448c97
mov [ esi + 0x144 ] 0x2
mov eax [ esp + 0x4 ]
mov [ eax ] 0x23a4
add esp 0x8
jmp r-xdata
cmp eax 0x23a4
jne r-xdata
push edi
call sub_43f9d4
add esp 0xc
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp [ eax + 0x8 ] 0x63
jne r-xdata
mov edx r--data
mov ecx esi
push 0x20
call sub_44a29f
add esp 0x4
mov [ esi + 0x104 ] 0x1
add esi 0x108
push [ esi + 0x118 ]
push [ esi + 0x114 ]
push r--data
push esi
call sub_447e12
add esp 0x10
add esi 0x154
jmp r-xdata
mov [ esi ] 0x1
sub_455be2
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ecx [ rw-data ]
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x28 ]
mov [ esp + 0x8 ] ecx
test esi esi
mov edi [ eax ]
je r-xdata
push 0x10
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] 0x0
mov eax [ esi ]
cmp eax 0x23e0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esp ] esi
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x128 ]
mov edx r--data
push esi
push sub_455be2
call sub_454cd8
add esp 0x8
mov edx [ esp + 0x4 ]
mov esi ebp
mov ebp eax
mov ecx ebp
call sub_448e7b
mov ecx ebp
mov edx ebx
call sub_448e7b
mov edx ebp
mov ebp esi
mov esi [ esp ]
mov ecx edi
call sub_448c97
inc [ esi + 0x4 ]
push ebp
push [ esp + 0x8 ]
push 0x33
push [ edi + 0x248 ]
call sub_431bea
add esp 0x10
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ eax + 0x8 ] 0x63
jne r-xdata
xor eax eax
lea ebp [ esp + 0x4 ]
mov [ esi + 0x4 ] eax
push ebp
push eax
push 0x33
push [ edi + 0x248 ]
call sub_431bea
add esp 0x10
mov ebx eax
test ebx ebx
je r-xdata
jmp r-xdata
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax [ esi + 0x8 ]
dec eax
inc [ esi + 0xc ]
test eax eax
mov [ esi + 0x8 ] eax
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
sub eax ecx
jne r-xdata
mov [ esi ] 0x23e0
jmp r-xdata
test ecx ecx
je r-xdata
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
push r--data
push [ edi + 0x110 ]
call sub_4842ab
add esp 0x8
mov edx r--data
mov ecx edi
push 0x2d
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
mov edx r--data
mov ecx edi
push 0x31
jmp r-xdata
call sub_44a29f
add esp 0x4
sub_455d95
cmp [ ecx + 0x164 ] 0x0
jne r-xdata
push edi
push esi
mov edi ecx
mov esi edx
cmp [ edi + 0x164 ] 0x0
jne r-xdata
push 0x0
call sub_44a8af
add esp 0x4
retn
mov ecx [ edi + 0x15c ]
cmp ecx [ edi + 0x160 ]
jge r-xdata
push 0x9c1
push r--data
push r--data
call sub_4a509d
add esp 0xc
add ecx 0x20
mov [ edi + 0x160 ] ecx
push 0x4
push ecx
push [ edi + 0x158 ]
call sub_43f8db
add esp 0xc
mov [ edi + 0x158 ] eax
mov ecx [ edi + 0x15c ]
mov eax [ edi + 0x158 ]
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ edi + 0x15c ] edx
mov [ eax + ecx * 4 ] esi
pop esi
pop edi
retn
sub_455e1e
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi edx
mov esi ecx
mov ecx edi
mov [ esp + 0x8 ] eax
call sub_44dc2a
lea ecx [ esp + 0x4 ]
mov edx 0x15
mov ebx 0x5b
mov ebp 0x5c
mov [ ecx ] eax
cmp [ esi + 0x198 ] 0x1
mov eax [ edi + 0x8 ]
cmove ebx edx
mov edx 0x16
cmove ebp edx
cmp eax ebx
sete [ esp + 0x3 ]
cmp eax ebp
sete [ esp + 0x2 ]
push sub_448b62
push ecx
push [ esi + 0x124 ]
call sub_47e50d
add esp 0xc
mov ebx eax
test ebx ebx
je r-xdata
mov ebx r--data
jmp r-xdata
cmp [ ebx + 0xc ] 0x4
jne r-xdata
mov ebp [ esp + 0x4 ]
mov eax [ edi + 0x8 ]
cmp [ esi + 0x198 ] 0x1
jne r-xdata
mov al [ esp + 0x3 ]
or al [ esp + 0x2 ]
movzx ecx al
mov eax [ ebx + 0x10 ]
cmp eax ecx
je r-xdata
push [ edi ]
push [ edi + 0x14 ]
push [ edi + 0x8 ]
push [ ebx + 0x4c ]
call sub_46e667
add esp 0x10
xor ebx ebx
jmp r-xdata
mov ecx [ esi + 0x184 ]
mov edx [ esi + 0x188 ]
push eax
call sub_44dc9c
add esp 0x4
mov ecx eax
call sub_453aa3
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax ebx
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
test eax eax
mov eax r--data
mov ebx r--data
cmovne ebx eax
push ebp
push ebx
push eax
push r--data
call sub_43f758
add esp 0x10
xor ebx ebx
mov edi eax
xor edx edx
mov ecx esi
push 0x0
push 0x2
push edi
call sub_44a668
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
sub_455f42
push edi
push esi
mov esi ecx
mov edi [ esi + 0xc ]
cmp edi 0x3
ja r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
jmp [ edi * 4 + jump_table_4101e4 ]
pop esi
pop edi
retn
mov esi [ esi ]
push ecx
push eax
push edx
push [ esi + 0x110 ]
call sub_48d156
add esp 0x10
jmp r-xdata
sub_455fb8
push edi
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test al 0x4
jne r-xdata
pop esi
pop edi
retn
or eax 0x4
mov [ esi + 0x14 ] eax
mov eax [ esi + 0xc ]
cmp eax 0x3
ja r-xdata
jmp [ eax * 4 + jump_table_4101f4 ]
mov edi [ esi ]
cmp [ edi + 0x150 ] 0x0
jne r-xdata
mov [ edi + 0x150 ] 0x1
jmp r-xdata
push [ edi + 0x110 ]
call sub_48d188
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x144 ] 0x4
je r-xdata
cmp [ edi + 0x154 ] 0x0
je r-xdata
test [ esi + 0x14 ] 0x1
jne r-xdata
mov ecx esi
mov [ esi + 0x18 ] 0x1
call sub_44804f
sub_456031
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
push eax
call sub_497b51
jmp r-xdata
push 0x2092
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x4c ]
add esp 0x4
pop esi
pop edi
retn
sub_456063
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
push eax
call sub_440f09
add esp 0x4
pop esi
pop edi
retn
push 0x209a
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x4c ]
sub_456090
push edi
push esi
mov esi [ esp + 0xc ]
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0x184 ]
mov edx [ esi + 0x188 ]
push [ eax + 0x8 ]
call sub_44dc9c
add esp 0x4
push eax
push r--data
call sub_43f758
add esp 0x8
mov edi eax
xor edx edx
mov ecx esi
push 0x0
push 0x2
push edi
call sub_44a668
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
retn
sub_4560de
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
xor esi esi
inc esi
mov edi [ ebx + 0x4 ]
mov eax [ ebp + 0x4 ]
cmp edi eax
jg r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
xor ecx ecx
dec ecx
cmp edi eax
jge r-xdata
mov eax [ ebp + 0x24 ]
cmp [ ebx + 0x24 ] eax
jg r-xdata
mov esi ecx
jmp r-xdata
jl r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ ebx + 0x10 ]
xor eax eax
mov esi edx
or esi ecx
sete al
dec eax
xor esi esi
inc esi
test ecx ecx
cmovne eax esi
test edx edx
je r-xdata
test eax eax
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] eax
mov eax 0xffffffff
ja r-xdata
sar eax 0x1f
or eax 0x1
push edx
push ecx
call sub_4a7d00
add esp 0x8
jb r-xdata
mov esi eax
cmp edi 0x44
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebx + 0x14 ]
xor eax eax
mov esi edx
or esi ecx
sete al
dec eax
xor esi esi
inc esi
test ecx ecx
cmovne eax esi
test edx edx
je r-xdata
xor esi esi
jmp r-xdata
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebx + 0xc ] eax
mov eax 0xffffffff
ja r-xdata
push edx
push ecx
call sub_4a7d00
add esp 0x8
mov esi eax
jb r-xdata
jmp r-xdata
sub_4561a2
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0xc ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
sub_4561d5
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push [ edi + 0xc ]
push [ esi + 0xc ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ esi + 0x4 ] eax
jbe r-xdata
sar eax 0x1f
or eax 0x1
jmp r-xdata
sbb eax eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_45620b
push edi
push esi
mov edi [ esp + 0xc ]
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx 0xe
mov edx 0x51
cmp [ edi + 0x198 ] 0x1
cmove edx ecx
cmp [ eax + 0x8 ] edx
mov eax [ esi + 0x10 ]
jne r-xdata
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
push esi
push [ edi + 0x13c ]
call sub_47eb51
add esp 0x8
cmp eax esi
je r-xdata
push eax
push r--data
push edi
call sub_447e12
add esp 0xc
pop esi
pop edi
retn
mov eax [ esi + 0x18 ]
mov ecx esi
mov [ eax + 0x20 ] 0x0
pop esi
pop edi
jmp sub_4561a2
push 0x1477
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_456293
push ebp
push ebx
push edi
push esi
push eax
mov edi ecx
xor ebp ebp
mov [ esp ] edx
inc eax
push eax
push esi
push [ esp + 0x20 ]
call [ esp + 0xc ]
add esp 0xc
cmp cl 0x41
jne r-xdata
lea esi [ ebp + r--data ]
mov ebx [ esi ]
push ebx
push 0x32
push [ edi + 0x248 ]
call sub_431bb4
add esp 0xc
mov cl [ eax ]
cmp cl 0x56
je r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
add ebp 0xc
cmp ebp 0x288
jne r-xdata
push ebx
push [ edi + 0x110 ]
call sub_484d72
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
push ebx
push esi
push [ esp + 0x20 ]
call [ esp + 0xc ]
add esp 0xc
push ebx
call sub_43f9d4
add esp 0x4
jmp r-xdata
sub_456312
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
mov edx [ edi + 0x8 ]
cmp edx 0x1
je r-xdata
call sub_4563d6
xor eax eax
test edx edx
jne r-xdata
mov edx [ esi ]
mov bl [ edi + 0x4 ]
mov ecx esi
mov edi eax
inc edx
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x1 ] bl
mov eax edi
mov ebx edi
mov ecx esi
mov edx [ esi ]
shr eax 0x18
shr ebx 0x10
mov ebp eax
add edx 0x4
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx ebp
mov [ ecx + eax - 0x4 ] dl
mov edx edi
mov [ ecx + eax - 0x3 ] bl
mov [ ecx + eax - 0x2 ] dh
mov [ ecx + eax - 0x1 ] dl
pop esi
pop edi
pop ebx
pop ebp
retn
call sub_45638e
jmp r-xdata
sub_45638e
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x4 ] eax
cmp [ esi ] 0x0
je r-xdata
mov esi 0xff
mov ebx esp
xor edi edi
mov [ ebx ] edi
push ebx
push esi
call sub_43f584
add esp 0x8
cmp [ ebx ] edi
jne r-xdata
movsx esi al
jmp r-xdata
mov al [ esi ]
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
retn
sub_4563d6
push ebx
push esi
mov esi ecx
push r--data
push esi
call sub_4a4640
add esp 0x8
xor ebx ebx
inc ebx
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push r--data
push esi
call sub_4a4640
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4a4640
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4a4640
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4a4640
add esp 0x8
xor ebx ebx
test eax eax
je r-xdata
push r--data
push esi
call sub_4a4640
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4a4640
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4a4640
add esp 0x8
test eax eax
je r-xdata
push esi
call sub_4a65cf
add esp 0x4
xor ebx ebx
test eax eax
setne bl
sub_456488
push esi
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x8 ]
mov ecx [ eax ]
add [ esi + 0x3c ] ecx
push eax
call sub_43f9d4
add esp 0x4
cmp [ esi + 0x48 ] 0x1
jne r-xdata
pop esi
retn
mov [ esi + 0x48 ] 0x2
sub_4564ae
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi edx
mov edi ecx
mov ebx esp
mov [ esp + 0x4 ] eax
push ebx
call sub_4537d0
add esp 0x4
mov edx [ esi + 0x10 ]
mov ecx edi
add edx [ ebx ]
push eax
call sub_44b00f
add esp 0x4
cmp eax 0x8001
jl r-xdata
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
retn
xor edx edx
mov ecx edi
inc edx
push eax
call sub_44b052
add esp 0x4
sub_456515
mov eax [ esp + 0x4 ]
cmp [ eax + 0xf0 ] 0x0
je r-xdata
push [ eax + 0x10c ]
push [ eax + 0x248 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ eax + 0x110 ]
call sub_430000
add esp 0x20
retn
retn
sub_456552
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x28 ]
mov esi [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] edi
mov [ esp ] ebx
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1bc ]
cmp eax 0xd79
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push edi
push ebx
push ecx
push 0xffffffff
push ecx
push eax
call sub_43d2fa
add esp 0x2c
lea ebx [ esi + 0x264 ]
mov edi esp
mov ebp 0xd79
cmp eax 0xd54
je r-xdata
cmp [ esi + 0x260 ] 0x0
jne r-xdata
test eax eax
jle r-xdata
movzx eax [ ebx ]
push eax
push esi
call [ esi + 0x244 ]
add esp 0x8
inc ebx
dec edi
test eax eax
mov [ esp ] ebx
mov [ esp + 0x4 ] edi
jne r-xdata
xor ebp ebp
test eax eax
jne r-xdata
push eax
push [ esp + 0x4 ]
push ebx
call sub_43ff80
add esp 0xc
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x0
add [ esp ] eax
push ebx
call sub_43ff78
add esp 0x4
mov ecx esi
test eax eax
jle r-xdata
mov [ esi + 0x1bc ] ebp
cmp [ esi + 0x144 ] 0x4
jne r-xdata
test edi edi
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
xor edx edx
mov ecx esi
inc edx
call sub_45141c
lea eax [ esp + 0x4 ]
mov edx edi
push eax
call sub_453ab9
add esp 0x4
call sub_45341e
jmp r-xdata
mov ebp 0xd54
jmp r-xdata
push ebx
call sub_43ff78
add esp 0x4
test eax eax
mov eax [ esp + 0x4 ]
jg r-xdata
jmp r-xdata
cmp [ esi + 0x144 ] 0x4
jne r-xdata
sub_456693
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x20 ]
mov esi edx
mov edi ecx
push 0x9
push [ esp + 0x18 ]
call sub_431a8c
add esp 0x8
test ebx ebx
je r-xdata
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebx ] eax
push edi
call sub_43f6f7
add esp 0x4
test esi esi
mov ecx 0x16
mov [ ebx ] eax
cmovns ecx esi
mov [ ebp ] ecx
push eax
call sub_43f79e
add esp 0x4
mov esi eax
mov [ ebp ] 0x16
push 0x3a
push esi
call sub_43f6bb
add esp 0x8
mov edi eax
test edi edi
je r-xdata
push esi
call sub_43f6f7
add esp 0x4
mov [ ebx ] eax
push esi
call sub_43f9d4
add esp 0x4
jmp r-xdata
push 0x3a
push esi
call sub_43f67d
add esp 0x8
cmp edi eax
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
mov [ edi ] al
cmp [ edi + 0x1 ] al
je r-xdata
inc edi
push edi
call sub_4a65cf
add esp 0x4
mov [ ebp ] eax
sub_45673b
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x18 ]
mov ebp [ esi + 0x1d4 ]
test ebp ebp
jne r-xdata
mov eax [ ebp ]
mov cl [ esp + 0x1c ]
xor ebx ebx
cmp eax 0xcc8
jle r-xdata
push 0x20
push 0x1
call sub_43f807
add esp 0x8
mov [ esi + 0x1d4 ] eax
mov [ eax ] 0x0
mov ebp [ esi + 0x1d4 ]
test eax eax
je r-xdata
cmp eax 0xcc9
je r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x0
cmp eax 0xcc4
mov eax 0x0
jne r-xdata
xor ebx ebx
cmp cl 0xa
sete bl
add ebx 0xcc9
xor eax eax
jmp r-xdata
cmp eax 0xcca
je r-xdata
xor eax eax
mov ebx 0xcc4
jmp r-xdata
mov [ ebp ] ebx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x1c ]
inc eax
cmp eax 0x2a
mov [ ebp + 0x1c ] eax
jne r-xdata
inc eax
cmp eax 0xce0
mov eax 0x0
jne r-xdata
cmp [ eax + r--data ] cl
jne r-xdata
mov eax 0x3b
mov ebx ecx
lea edi [ ebp + 0x18 ]
mov [ ebp + 0x18 ] eax
push 0x1
push eax
call sub_43f807
add esp 0x8
mov [ ebp + 0x14 ] eax
push 0x2b
push r--data
push eax
call sub_49a1f0
add esp 0xc
mov [ ebp + 0x4 ] 0x2a
mov [ ebp + 0x1c ] 0x0
mov ecx 0x2a
mov ebx ecx
mov ecx [ ebp + 0x4 ]
lea edi [ ebp + 0x18 ]
jmp r-xdata
add eax 0x10
lea edi [ ebp + 0x14 ]
mov [ ebp + 0x18 ] eax
push 0x1
push eax
push [ ebp + 0x14 ]
call sub_43f8db
add esp 0xc
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x4 ]
mov eax [ ebp + 0x14 ]
lea edi [ ebp + 0x14 ]
jmp r-xdata
mov eax [ edi ]
lea edx [ eax - 0x1 ]
cmp ecx edx
jge r-xdata
cmp bl 0xa
jne r-xdata
cmp bl 0x2d
jne r-xdata
lea edx [ ecx + 0x1 ]
mov [ ebp + 0x4 ] edx
mov [ eax + ecx ] bl
mov ecx [ ebp + 0x1c ]
test ecx ecx
js r-xdata
xor eax eax
mov ebx 0xce0
xor ebx ebx
mov [ esp ] edi
mov [ esi + 0x48 ] ebx
mov [ esi + 0x230 ] ebx
mov eax [ ebp + 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax ] bl
mov edi [ ebp + 0x14 ]
push r--data
push edi
call sub_4a7d90
add esp 0x8
mov [ edi + eax ] bl
push [ ebp + 0x14 ]
push r--data
push esi
call sub_447e12
add esp 0xc
mov edx [ ebp + 0x14 ]
mov ecx esi
call sub_45706c
lea edi [ ebp + 0x8 ]
mov edx r--data
mov ecx edi
call sub_4576e1
test eax eax
js r-xdata
xor eax eax
mov ebx 0xce0
inc eax
cmp ecx 0x8
ja r-xdata
mov [ ebp + ecx + 0x8 ] 0x0
mov [ ebp + 0x1c ] 0xffffffff
jmp r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
jmp r-xdata
push 0x21
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
lea edx [ ecx + 0x1 ]
mov [ ebp + 0x1c ] edx
mov dh [ esp + 0x1c ]
mov [ ebp + ecx + 0x8 ] dh
jmp r-xdata
xor eax eax
jmp r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
xor ebx ebx
mov [ esi + 0x198 ] 0x2
push r--data
push esi
call sub_447e12
add esp 0x8
mov edx r--data
mov ecx esi
push edi
call sub_456f2e
add esp 0x4
mov ecx sub_4579a2
mov eax 0x9c
mov [ esi + 0x23c ] sub_457779
movd xmm0 ecx
pshufd xmm0 xmm0 0x0
movdqu [ esi + eax * 4 ] xmm0
add eax 0x4
cmp eax 0x19c
jne r-xdata
mov eax sub_456090
movd xmm0 eax
mov [ esi + 0x3b0 ] eax
mov [ esi + 0x3b4 ] eax
mov [ esi + 0x3b8 ] eax
pshufd xmm0 xmm0 0x0
movdqu [ esi + 0x3d8 ] xmm0
movdqu [ esi + 0x3e8 ] xmm0
mov [ esi + 0x3f8 ] eax
mov [ esi + 0x3fc ] eax
mov [ esi + 0x400 ] eax
mov [ esi + 0x27c ] eax
mov [ esi + 0x274 ] sub_457a05
mov [ esi + 0x278 ] sub_457b04
mov [ esi + 0x280 ] sub_457b05
mov [ esi + 0x240 ] sub_4577b1
push [ esi + 0x110 ]
call sub_489bb6
add esp 0x4
mov [ esi + 0x144 ] 0x1
push esi
push rw-data
push [ esi + 0x248 ]
call sub_440508
add esp 0xc
xor ebx ebx
mov [ esi + 0x680 ] eax
xor edx edx
mov ecx esi
push ebx
push ebx
call sub_44e4fe
add esp 0x8
mov eax [ esp ]
push [ eax ]
call sub_43f9d4
add esp 0x4
jmp r-xdata
sub_456a8b
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x18 ]
mov ebp [ esi + 0x1c4 ]
test ebp ebp
jne r-xdata
mov eax [ ebp ]
mov dl [ esp + 0x1c ]
xor ecx ecx
cmp eax 0xc37
jle r-xdata
push 0x28
push 0x1
call sub_43f807
add esp 0x8
mov [ esi + 0x1c4 ] eax
mov [ eax ] 0x0
mov ebp [ esi + 0x1c4 ]
test eax eax
je r-xdata
cmp eax 0xc38
je r-xdata
xor eax eax
mov [ ebp + 0x1c ] 0x0
cmp eax 0xc33
mov eax 0x0
jne r-xdata
xor ecx ecx
cmp dl 0xa
sete cl
or ecx 0xc38
xor eax eax
jmp r-xdata
cmp eax 0xc39
je r-xdata
xor eax eax
mov ecx 0xc33
jmp r-xdata
mov [ ebp ] ecx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x1c ]
inc eax
cmp eax 0x4
mov [ ebp + 0x1c ] eax
jne r-xdata
inc eax
cmp eax 0xc51
mov eax 0x0
jne r-xdata
cmp [ eax + r--data ] dl
jne r-xdata
xor eax eax
lea edi [ ebp + 0x18 ]
mov ecx 0x15
inc eax
mov [ esi + 0x10c ] eax
mov [ ebp + 0x18 ] ecx
push eax
push ecx
call sub_43f807
add esp 0x8
mov ecx 0x4
mov [ ebp + 0x14 ] eax
mov [ eax + 0x4 ] 0x0
mov [ eax ] 0x2d485353
mov [ ebp + 0x4 ] ecx
mov [ ebp + 0x1c ] 0x0
mov ecx [ ebp + 0x4 ]
lea edi [ ebp + 0x18 ]
jmp r-xdata
add eax 0x10
lea edi [ ebp + 0x14 ]
mov [ ebp + 0x18 ] eax
push 0x1
push eax
push [ ebp + 0x14 ]
call sub_43f8db
add esp 0xc
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x4 ]
mov eax [ ebp + 0x14 ]
lea edi [ ebp + 0x14 ]
jmp r-xdata
mov eax [ edi ]
lea edx [ eax - 0x1 ]
cmp ecx edx
jge r-xdata
cmp bl 0xa
jne r-xdata
cmp bl 0x2d
jne r-xdata
mov bl [ esp + 0x1c ]
lea edx [ ecx + 0x1 ]
mov [ ebp + 0x4 ] edx
mov [ eax + ecx ] bl
mov edx [ ebp + 0x1c ]
test edx edx
js r-xdata
xor eax eax
mov ecx 0xc51
xor ebx ebx
mov [ esp ] edi
mov [ esi + 0x48 ] ebx
mov [ esi + 0x21c ] ebx
mov eax [ ebp + 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax ] bl
mov edi [ ebp + 0x14 ]
push r--data
push edi
call sub_4a7d90
add esp 0x8
mov [ edi + eax ] bl
push [ ebp + 0x14 ]
push r--data
push esi
call sub_447e12
add esp 0xc
mov edx [ ebp + 0x14 ]
mov ecx esi
call sub_45706c
lea edi [ ebp + 0x8 ]
mov edx r--data
mov ecx edi
call sub_4576e1
shr eax 0x1f
mov edx r--data
mov ecx edi
mov [ ebp + 0x20 ] eax
call sub_4576e1
shr eax 0x1f
xor eax 0x1
mov [ ebp + 0x24 ] eax
push 0x21
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
xor eax eax
mov ecx 0xc51
inc eax
cmp edx 0x8
ja r-xdata
mov [ ebp + edx + 0x8 ] 0x0
mov [ ebp + 0x1c ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
push 0x21
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x3
jne r-xdata
lea esi [ edx + 0x1 ]
mov [ ebp + 0x1c ] esi
mov [ ebp + edx + 0x8 ] bl
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
je r-xdata
push r--data
push 0xc73
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
xor ecx ecx
inc ecx
push 0x21
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
mov ecx 0x2
cmp eax 0x1
jg r-xdata
xor ecx ecx
xor eax eax
jmp r-xdata
push r--data
jmp r-xdata
cmp [ esi + 0x198 ] 0x2
jne r-xdata
mov edx r--data
mov ecx esi
push edi
call sub_456f2e
add esp 0x4
mov [ esi + 0x198 ] ecx
push ecx
push r--data
push esi
call sub_447e12
add esp 0xc
push 0x21
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x3
je r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
jmp r-xdata
mov [ esi + 0x23c ] sub_458694
lea eax [ esi + 0x270 ]
push 0x400
push 0x0
push eax
call sub_49acf0
add esp 0xc
mov [ esi + 0x274 ] sub_459963
mov [ esi + 0x2f0 ] sub_457b04
mov [ esi + 0x300 ] sub_4599c0
mov [ esi + 0x240 ] sub_458efb
mov ebx [ esp ]
push r--data
mov ebx [ esp + 0x4 ]
push [ ebx ]
call sub_4a7d90
add esp 0x8
xor ecx ecx
mov edi eax
lea eax [ edi + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x8 ] eax
push edi
push [ ebx ]
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x8 ]
mov ecx sub_4579a2
movd xmm0 ecx
pshufd xmm0 xmm0 0x0
mov [ eax + edi ] 0x0
mov eax 0x9c
mov [ esi + 0x23c ] sub_457c44
movdqu [ esi + eax * 4 ] xmm0
add eax 0x4
cmp eax 0x19c
jne r-xdata
mov ecx sub_459396
mov eax sub_456090
movd xmm0 ecx
mov [ esi + 0x27c ] eax
mov [ esi + 0x284 ] eax
mov [ esi + 0x288 ] eax
mov [ esi + 0x2c0 ] ecx
mov [ esi + 0x2c4 ] ecx
pshufd xmm0 xmm0 0x0
movdqu [ esi + 0x2e8 ] xmm0
movd xmm0 eax
pshufd xmm0 xmm0 0x0
movdqu [ esi + 0x338 ] xmm0
mov [ esi + 0x360 ] eax
mov [ esi + 0x364 ] eax
mov [ esi + 0x3b0 ] eax
mov [ esi + 0x3b4 ] eax
mov [ esi + 0x3b8 ] eax
movdqu [ esi + 0x3d8 ] xmm0
movdqu [ esi + 0x3e8 ] xmm0
mov [ esi + 0x3f8 ] eax
mov [ esi + 0x3fc ] eax
mov [ esi + 0x400 ] eax
mov [ esi + 0x274 ] sub_457a05
mov [ esi + 0x278 ] sub_457b04
mov [ esi + 0x280 ] sub_457b05
mov eax [ esi + 0x198 ]
mov [ esi + 0x240 ] sub_457ccf
mov ebx [ esp ]
cmp eax 0x2
jne r-xdata
push [ esi + 0x110 ]
call sub_489bb6
add esp 0x4
mov [ esi + 0x144 ] 0x1
push esi
push rw-data
push [ esi + 0x248 ]
call sub_440508
add esp 0xc
mov [ esi + 0x680 ] eax
push [ ebx ]
call sub_43f9d4
add esp 0x4
xor edx edx
mov ecx esi
push 0x0
push 0xffffffff
call sub_44b0db
add esp 0x8
jmp r-xdata
sub_456f2e
push ebp
push ebx
push edi
push esi
mov esi ecx
mov ebx edx
cmp [ esi + 0x198 ] 0x2
jne r-xdata
mov edi [ esp + 0x14 ]
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebx
push r--data
jmp r-xdata
mov edx r--data
mov ecx edi
mov ebp r--data
call sub_4576e1
test eax eax
cmovle ebp edi
push r--data
push ebp
push r--data
push 0xbff
push r--data
push r--data
call sub_4a509d
add esp 0xc
call sub_43f758
add esp 0xc
mov edi eax
push ebx
call sub_4a7f30
add esp 0x4
lea ebx [ edi + eax + 0x1 ]
jmp r-xdata
mov al [ ebx - 0x1 ]
test al al
je r-xdata
push 0xbe4
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
cmp al 0x2d
jne r-xdata
mov al [ ebx ]
cmp al 0x20
je r-xdata
inc ebx
jmp r-xdata
mov [ ebx ] 0x5f
cmp al 0x2d
je r-xdata
test al al
jne r-xdata
inc ebx
cmp [ esi + 0x198 ] 0x2
jne r-xdata
push r--data
push edi
call sub_4a7d90
add esp 0x8
push edi
push eax
push r--data
push esi
call sub_447e12
add esp 0x10
push edi
call sub_4a7f30
add esp 0x4
mov ecx esi
mov edx edi
push eax
call sub_44b00f
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
push r--data
push edi
call sub_4a7d90
add esp 0x8
xor ecx ecx
mov ebx eax
inc ecx
lea eax [ ebx + 0x1 ]
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x4 ] eax
push ebx
push edi
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x4 ]
mov [ eax + ebx ] 0x0
sub_45706c
push ebp
push ebx
push edi
push esi
mov edi edx
mov esi ecx
sub esp 0x8
mov ebp r--data
mov [ esp + 0x4 ] ebp
mov [ esp ] edi
call sub_4a7d90
add esp 0x8
lea ebx [ edi + eax ]
xor ecx ecx
lea eax [ edi + eax + 0x1 ]
cmp [ eax - 0x1 ] cl
cmovne ebx eax
push ebp
push ebx
call sub_4a7d90
add esp 0x8
lea edi [ ebx + eax ]
lea eax [ ebx + eax + 0x1 ]
xor ecx ecx
cmp [ eax - 0x1 ] cl
mov [ esi + 0x50 ] 0x0
cmovne edi eax
push 0x9c
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x50 ] 0x1
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x9c
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
or [ esi + 0x50 ] 0x4
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x9d
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0x9d
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x50 ] 0x8
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x9e
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0x9e
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x50 ] 0x2
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x9f
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0x9f
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x50 ] 0x20
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa0
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0xa0
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x50 ] 0x10
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa1
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0xa1
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x50 ] 0x80
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa2
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0xa2
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x50 ] 0x40
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa3
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0xa3
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x51 ] 0x1
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa4
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push 0xa4
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
push 0xa6
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x51 ] 0x2
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa5
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x51 ] 0x10
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa6
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push 0xa8
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
or [ esi + 0x51 ] 0x4
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa7
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
or [ esi + 0x51 ] 0x8
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push 0xa8
push [ esi + 0x248 ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
jne r-xdata
push edi
push r--data
call sub_47ec6c
add esp 0x8
test eax eax
je r-xdata
sub_4576e1
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov ebx 0xa
mov esi edx
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x4 ]
push ebx
push eax
push ecx
call sub_4a8292
add esp 0xc
mov edi eax
mov ebp esp
push ebx
push ebp
push esi
call sub_4a8292
add esp 0xc
cmp edi eax
jne r-xdata
xor ecx ecx
inc ecx
xor esi esi
dec esi
cmp edi eax
cmovae esi ecx
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x4 ]
cmp [ eax ] 0x2e
jne r-xdata
mov esi [ esp ]
cmp [ esi ] 0x2e
jne r-xdata
inc eax
mov [ esp + 0x4 ] eax
mov ebx 0xa
push ebx
push ecx
push eax
call sub_4a8292
add esp 0xc
mov edi eax
push ebx
push ebp
push esi
call sub_4a8292
add esp 0xc
xor esi esi
cmp edi eax
je r-xdata
inc esi
mov [ esp ] esi
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_457779
mov ecx [ esp + 0x4 ]
cmp [ ecx + 0x144 ] 0x4
je r-xdata
retn
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
push 0x0
push [ esp + 0x10 ]
call sub_44e4fe
add esp 0x8
mov edx [ eax + 0x8 ]
push eax
push ecx
call [ ecx + edx * 4 + 0x270 ]
add esp 0x8
retn
sub_4577b1
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x1b8 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x22c ] 0x0
cmp eax 0x78e
je r-xdata
mov eax [ esi + 0x224 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
mov [ esi + 0x228 ] eax
jle r-xdata
cmp [ ebp ] 0x0
je r-xdata
cmp eax 0x7a5
je r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov [ esi + 0x1b8 ] 0x0
jmp r-xdata
cmp eax 0x9000
jae r-xdata
mov [ esi + 0x1b8 ] 0x78e
jmp r-xdata
mov eax [ edx ]
lea ecx [ eax + 0x1 ]
mov [ edx ] ecx
mov al [ eax ]
mov ecx [ esi + 0x22c ]
mov [ esi + ecx + 0x224 ] al
dec [ ebp ]
mov eax [ esi + 0x22c ]
inc eax
mov [ esi + 0x22c ] eax
jmp r-xdata
cmp [ ebp ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
xor eax eax
mov edi ebp
lea ebp [ esi + 0x228 ]
inc eax
push 0x2c
push eax
call sub_43f807
add esp 0x8
xor ebx ebx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x1c ] ebx
mov [ esi + 0x234 ] eax
xor eax eax
inc eax
push eax
push [ esi + 0x228 ]
call sub_43f807
add esp 0x8
mov ecx [ esi + 0x234 ]
mov [ ecx + 0x10 ] eax
mov eax [ esi + 0x228 ]
mov ecx [ esi + 0x234 ]
mov [ ecx + 0x20 ] eax
mov eax [ esi + 0x230 ]
mov ecx [ esi + 0x234 ]
lea edx [ eax + 0x1 ]
mov [ esi + 0x230 ] edx
mov [ ecx + 0xc ] eax
jmp r-xdata
cmp eax 0x3
jg r-xdata
mov [ esi + 0x1b8 ] 0x7a5
mov eax [ edx ]
mov edi ebp
lea ecx [ eax + 0x1 ]
mov [ edx ] ecx
mov edx [ esi + 0x234 ]
mov al [ eax ]
mov ecx [ esi + 0x22c ]
mov edx [ edx + 0x10 ]
mov [ edx + ecx ] al
dec [ ebp ]
lea ebp [ esi + 0x228 ]
mov ebx [ esi + 0x22c ]
inc ebx
mov [ esi + 0x1b8 ] 0x0
mov eax [ esi + 0x234 ]
jmp r-xdata
mov [ esi + 0x22c ] ebx
jmp r-xdata
cmp ebx [ ebp ]
mov edx [ esp + 0x18 ]
mov ebp edi
jge r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x234 ]
mov ecx [ eax + 0x10 ]
movzx ecx [ ecx ]
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0x234 ]
mov ecx [ eax + 0x10 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov eax [ esi + 0x228 ]
mov ecx [ esi + 0x234 ]
dec eax
mov [ ecx ] eax
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ esi + 0x234 ]
mov [ eax + 0x18 ] 0x0
mov edx [ esi + 0x234 ]
mov ecx esi
call sub_457b65
sub_4579a2
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x18 ]
mov ecx 0x3
mov [ esp ] eax
mov ebx [ esp + 0x1c ]
call sub_448c44
mov edi eax
mov ebx [ ebx + 0xc ]
mov edx [ edi ]
mov ecx edi
mov eax ebx
mov esi ebx
add edx 0x4
shr eax 0x18
shr esi 0x10
mov ebp eax
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx ebp
mov [ ecx + eax - 0x4 ] dl
mov edx esi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov edx edi
mov ecx [ esp ]
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
jmp sub_44a75f
sub_457a05
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ebx [ esp + 0x28 ]
mov eax [ rw-data ]
mov ecx ebx
mov [ esp + 0xc ] eax
call sub_44dc2a
mov edi eax
lea eax [ esp + 0x4 ]
lea edx [ esp + 0x8 ]
mov ecx ebx
push eax
call sub_44dc49
add esp 0x4
test edi edi
setg al
cmp edi 0x10
setb cl
and cl al
cmp cl 0x1
mov [ esp + 0x3 ] cl
jne r-xdata
push edi
push r--data
push [ edi * 4 + r--data ]
push r--data
jmp r-xdata
push ebp
push esi
push eax
push edi
push r--data
call sub_43f758
add esp 0x14
mov ecx [ esp + 0x24 ]
mov edx eax
call sub_44e0cb
push ebx
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi * 4 + r--data ]
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
mov eax [ esp + 0x28 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x8 ]
mov esi [ esp + 0x4 ]
mov ebp r--data
test eax eax
cmovne ebp eax
push ebp
push esi
push r--data
call sub_43f758
add esp 0xc
mov ebx eax
push ebx
mov eax [ esp + 0x28 ]
push [ eax + 0x110 ]
call sub_4842ab
add esp 0x8
cmp [ esp + 0x3 ] 0x0
mov eax r--data
je r-xdata
sub_457b05
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x8 ] eax
mov eax [ ecx + 0x18 ]
cmp [ ecx ] eax
jle r-xdata
mov ebx esp
lea esi [ esp + 0x4 ]
mov edx esi
push ebx
call sub_44dc49
add esp 0x4
mov eax [ esi ]
mov ecx r--data
test eax eax
cmovne ecx eax
push ecx
push [ ebx ]
push r--data
push edi
call sub_447e12
add esp 0x10
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
inc eax
mov [ ecx + 0x18 ] eax
sub_457b65
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov edi edx
mov ebp ecx
mov ebx 0x0
mov [ esp + 0x40 ] eax
xor eax eax
mov [ edi + 0x18 ] eax
cmp [ ebp + 0x24c ] eax
je r-xdata
mov eax [ edi + 0x14 ]
mov [ esp + 0x4 ] eax
mov eax [ edi ]
mov [ esp ] eax
mov esi [ edi + 0x8 ]
mov ecx [ ebp + 0x184 ]
mov edx [ ebp + 0x188 ]
lea edi [ edi + 0xc ]
push esi
call sub_44dc9c
add esp 0x4
xor edx edx
lea ecx [ esp + 0x10 ]
push edx
push edx
push edi
push ecx
push ebx
push [ esp + 0x14 ]
push [ esp + 0x1c ]
push eax
push esi
push edx
push [ ebp + 0x18 ]
call sub_43d2fa
add esp 0x2c
mov ecx [ esp + 0x40 ]
call sub_497c4a
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi + 0x8 ]
mov ebx 0x0
and eax 0xfffffffe
cmp eax 0x5e
jne r-xdata
mov ecx edi
call sub_44dc2a
cmp [ edi + 0x8 ] 0x5f
jne r-xdata
mov eax [ edi + 0x18 ]
lea ebx [ esp + 0xc ]
mov ecx edi
mov edx ebx
add eax 0x4
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x2
push eax
call sub_44dc49
add esp 0x4
cmp [ ebx ] 0x0
mov ebx 0x0
je r-xdata
mov ecx edi
call sub_44dc2a
mov eax [ esp + 0x8 ]
xor ebx ebx
inc ebx
mov [ esp + 0x14 ] eax
sub_457c44
push edi
push esi
mov esi [ esp + 0xc ]
cmp [ esi + 0x144 ] 0x4
je r-xdata
pop esi
pop edi
retn
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
cmp [ esi + 0x238 ] 0x0
je r-xdata
mov eax [ esi + 0x684 ]
add eax [ edi + 0x20 ]
mov [ esi + 0x684 ] eax
cmp [ esi + 0x694 ] 0x0
jne r-xdata
mov ecx esi
push 0x0
push eax
call sub_44b0db
mov ecx esi
push 0x0
push eax
call sub_44e4fe
jmp r-xdata
mov eax [ edi + 0x8 ]
push edi
push esi
call [ esi + eax * 4 + 0x270 ]
jmp r-xdata
mov ecx [ esi + 0x690 ]
test ecx ecx
je r-xdata
add esp 0x8
cmp eax ecx
jbe r-xdata
mov edx r--data
mov ecx esi
push 0x0
push 0xffffffff
call sub_44b0db
add esp 0x8
sub_457ccf
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x1b4 ]
cmp eax 0x6b1
jle r-xdata
test eax eax
je r-xdata
cmp eax 0x6fb
jg r-xdata
push 0x2c
push 0x1
call sub_43f807
add esp 0x8
xor ecx ecx
mov ebx 0x8
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ esi + 0x220 ] eax
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0x220 ]
mov [ eax ] ecx
mov eax 0x8
mov edx [ esi + 0x64 ]
test edx edx
je r-xdata
cmp eax 0x67c
je r-xdata
cmp eax 0x6fc
je r-xdata
cmp eax 0x6b2
je r-xdata
cmp ebx 0x7
cmovg eax ebx
mov [ esi + 0x218 ] eax
mov ebx [ esi + 0x74 ]
test ebx ebx
je r-xdata
mov ebx [ edx + 0x24 ]
cmp [ edi ] 0x0
je r-xdata
cmp eax 0x68d
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp eax 0x728
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp eax 0x6de
je r-xdata
test edx edx
mov [ esi + 0x210 ] ecx
je r-xdata
mov ecx [ ebx + 0x2c ]
mov [ esi + 0x1b4 ] 0x67c
jmp r-xdata
mov eax [ ebx ]
lea ebp [ esi + 0x214 ]
lea ecx [ eax + 0x1 ]
mov [ ebx ] ecx
lea ebx [ esi + 0x210 ]
mov edx [ esi + 0x220 ]
mov al [ eax ]
mov ecx [ esi + 0x214 ]
mov edx [ edx + 0x10 ]
mov [ edx + ecx ] al
dec [ edi ]
mov eax [ esi + 0x214 ]
inc eax
mov [ esi + 0x214 ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
jmp r-xdata
mov [ esi + 0x1b4 ] 0x6fc
jmp r-xdata
mov eax [ ebx ]
lea ebp [ esi + 0x218 ]
lea ecx [ eax + 0x1 ]
mov [ ebx ] ecx
mov edx [ esi + 0x220 ]
mov al [ eax ]
mov ecx [ esi + 0x214 ]
mov edx [ edx + 0x10 ]
mov [ edx + ecx ] al
dec [ edi ]
mov eax [ esi + 0x214 ]
inc eax
cmp [ edi ] 0x0
je r-xdata
jmp r-xdata
mov [ esi + 0x1b4 ] 0x6b2
jmp r-xdata
mov eax [ ebx ]
lea ecx [ eax + 0x1 ]
mov [ ebx ] ecx
mov edx [ esi + 0x220 ]
mov al [ eax ]
mov ecx [ esi + 0x214 ]
mov edx [ edx + 0x10 ]
mov [ edx + ecx ] al
dec [ edi ]
mov eax [ esi + 0x214 ]
inc eax
cmp [ edi ] 0x0
je r-xdata
jmp r-xdata
test ebx ebx
jne r-xdata
test [ edx + 0x30 ] 0x1
jne r-xdata
xor esi esi
cmp eax [ ebx ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
jge r-xdata
mov [ esi + 0x1b4 ] 0x68d
jmp r-xdata
mov eax [ ebx ]
lea ebp [ esi + 0x214 ]
lea ecx [ eax + 0x1 ]
mov [ ebx ] ecx
mov ecx [ esi + 0x210 ]
mov edx [ esi + 0x220 ]
mov al [ eax ]
add ecx [ esi + 0x20c ]
mov edx [ edx + 0x10 ]
add ecx [ esi + 0x214 ]
mov [ edx + ecx ] al
dec [ edi ]
mov eax [ esi + 0x214 ]
inc eax
mov [ esi + 0x214 ] eax
jmp r-xdata
mov [ esi + 0x1b4 ] 0x0
mov esi [ esi + 0x220 ]
jmp r-xdata
mov ecx [ ebp ]
cmp eax ecx
jge r-xdata
mov [ esi + 0x1b4 ] 0x728
jmp r-xdata
mov eax [ ebx ]
mov ebp edi
lea ecx [ eax + 0x1 ]
mov [ ebx ] ecx
lea ebx [ esi + 0x210 ]
mov edx [ esi + 0x220 ]
mov al [ eax ]
mov ecx [ esi + 0x214 ]
mov edx [ edx + 0x10 ]
mov [ edx + ecx ] al
dec [ ebp ]
lea ebp [ esi + 0x20c ]
mov eax [ esi + 0x214 ]
inc eax
jmp r-xdata
cmp eax 0x3
jg r-xdata
mov [ esi + 0x1b4 ] 0x6de
jmp r-xdata
mov eax [ ebx ]
mov ebp edi
lea ecx [ eax + 0x1 ]
mov [ ebx ] ecx
lea ebx [ esi + 0x210 ]
mov edx [ esi + 0x220 ]
mov al [ eax ]
mov ecx [ esi + 0x214 ]
mov edx [ edx + 0x10 ]
mov [ edx + ecx ] al
dec [ ebp ]
lea ebp [ esi + 0x20c ]
mov eax [ esi + 0x214 ]
inc eax
jmp r-xdata
cmp [ esi + 0x7c ] 0x0
je r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
mov [ esi + 0x20c ] 0x0
mov eax [ esi + 0x74 ]
push [ esi + 0x84 ]
call [ eax + 0x14 ]
add esp 0x4
mov eax [ esi + 0x21c ]
lea edx [ esp + 0x4 ]
mov ecx eax
shr ecx 0x18
mov [ edx ] cl
mov ecx eax
shr ecx 0x10
mov [ edx + 0x1 ] cl
mov [ edx + 0x2 ] ah
mov [ edx + 0x3 ] al
mov eax [ esi + 0x74 ]
push 0x4
push edx
push [ esi + 0x84 ]
call [ eax + 0x18 ]
add esp 0xc
jmp r-xdata
mov ecx [ esi + 0x218 ]
cmp eax ecx
jge r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov [ esi + 0x214 ] eax
mov edx [ ebx ]
mov ecx [ ebp ]
mov ebx [ esp + 0x24 ]
add edx ecx
cmp eax edx
jge r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov [ esi + 0x214 ] eax
mov ecx [ ebx ]
mov ebx [ esp + 0x24 ]
add ecx [ ebp ]
cmp eax ecx
jge r-xdata
lea ebp [ esi + 0x218 ]
push 0x1
push eax
call sub_43f807
add esp 0x8
mov ecx [ esi + 0x220 ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov [ ecx + 0x10 ] eax
xor eax eax
mov [ esi + 0x200 ] eax
jmp r-xdata
push 0x1
push 0x4
call sub_43f807
add esp 0x8
mov ecx [ esi + 0x220 ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov [ ecx + 0x10 ] eax
xor eax eax
mov [ esi + 0x200 ] eax
jmp r-xdata
cmp [ esi + 0x7c ] 0x0
je r-xdata
xor eax eax
mov [ ebp ] 0x0
mov eax [ esi + 0x220 ]
mov edx [ esi + 0x64 ]
mov eax [ eax + 0x10 ]
add eax [ esi + 0x20c ]
push ecx
push eax
push [ esi + 0x6c ]
call [ edx + 0x14 ]
add esp 0xc
mov eax [ esi + 0x220 ]
mov ecx [ esi + 0x74 ]
mov eax [ eax + 0x10 ]
add eax [ esi + 0x20c ]
push [ esi + 0x218 ]
push eax
push [ esi + 0x84 ]
call [ ecx + 0x18 ]
add esp 0xc
mov eax [ esi + 0x20c ]
add eax [ esi + 0x218 ]
mov [ esi + 0x20c ] eax
mov ecx [ esi + 0x220 ]
add eax [ ecx + 0x10 ]
mov ecx [ esi + 0x74 ]
push eax
push [ esi + 0x84 ]
call [ ecx + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x220 ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ecx eax
cmp ecx 0x9000
mov [ esi + 0x200 ] ecx
ja r-xdata
mov edx [ esi + 0x220 ]
push ecx
push [ edx + 0x10 ]
push [ esi + 0x6c ]
call [ eax + 0x14 ]
add esp 0xc
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax [ esi + 0x220 ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
bswap eax
push eax
jmp r-xdata
test [ eax + 0x30 ] 0x2
jne r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov [ esi + 0x214 ] eax
jmp r-xdata
mov [ esi + 0x214 ] eax
jmp r-xdata
lea ebx [ esi + 0x210 ]
add ecx 0x9000
push 0x1
push ecx
call sub_43f807
add esp 0x8
mov ecx [ esi + 0x220 ]
lea ebp [ esi + 0x214 ]
mov [ ecx + 0x10 ] eax
xor eax eax
mov [ esi + 0x214 ] 0x0
mov ecx [ esi + 0x20c ]
mov eax [ esi + 0x220 ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov [ esi + 0x200 ] eax
mov ecx [ esi + 0x20c ]
lea edx [ ecx - 0x4 ]
cmp eax edx
jne r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x220 ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
add ecx 0x4
mov eax ecx
cdq
idiv [ ebp ]
test edx edx
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov edx [ esi + 0x218 ]
mov edi [ esi + 0x220 ]
sub ecx edx
add edx [ edi + 0x10 ]
push ecx
push edx
push [ esi + 0x6c ]
call [ eax + 0x14 ]
add esp 0xc
call sub_43b2d8
add esp 0x4
mov ecx eax
cmp ecx 0x9000
mov [ esi + 0x200 ] ecx
ja r-xdata
mov ecx [ esi + 0x220 ]
lea ebx [ esp + 0x4 ]
mov ecx [ ecx + 0x10 ]
mov ecx [ ecx ]
mov [ ebx ] ecx
push [ esi + 0x21c ]
push 0x4
push ebx
push [ esi + 0x6c ]
call [ eax + 0x1c ]
add esp 0x10
mov eax [ ebx ]
bswap eax
push eax
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x200 ]
mov edx [ esi + 0x220 ]
add ecx 0x4
push [ esi + 0x21c ]
push ecx
push [ edx + 0x10 ]
push [ esi + 0x84 ]
call [ eax + 0x10 ]
add esp 0x10
test eax eax
je r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x220 ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
cmp ecx 0x9000
jb r-xdata
add ecx [ esi + 0x210 ]
mov eax [ esi + 0x220 ]
mov [ eax + 0x1c ] ecx
mov eax [ esi + 0x220 ]
push 0x1
push [ eax + 0x1c ]
push [ eax + 0x10 ]
call sub_43f8db
add esp 0xc
mov ecx [ esi + 0x220 ]
mov [ ecx + 0x10 ] eax
jmp r-xdata
call sub_43f9d4
add esp 0x4
mov [ esi + 0x20c ] ecx
lea ebp [ esi + 0x20c ]
lea ebx [ esi + 0x210 ]
add ecx [ esi + 0x210 ]
mov eax [ esi + 0x220 ]
mov [ eax + 0x1c ] ecx
mov eax [ esi + 0x220 ]
push 0x1
push [ eax + 0x1c ]
push [ eax + 0x10 ]
call sub_43f8db
add esp 0xc
mov ecx [ esi + 0x220 ]
mov [ ecx + 0x10 ] eax
mov eax [ esi + 0x218 ]
mov eax [ esi + 0x220 ]
mov ecx [ eax + 0x10 ]
movzx edx [ ecx + 0x4 ]
mov ecx 0x4
cmp edx ecx
mov [ esi + 0x204 ] edx
jb r-xdata
mov ecx [ esi + 0x200 ]
mov edx [ esi + 0x220 ]
add ecx 0x4
push [ esi + 0x21c ]
push ecx
push [ edx + 0x10 ]
push [ esi + 0x84 ]
call [ eax + 0x10 ]
add esp 0x10
test eax eax
jne r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x220 ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
mov eax ecx
cdq
idiv [ esi + 0x218 ]
test edx edx
je r-xdata
mov edx [ esi + 0x220 ]
mov ecx [ esi + 0x20c ]
mov edx [ edx + 0x10 ]
add ecx 0xfffffffc
add edx 0x4
push ecx
push edx
push [ esi + 0x6c ]
call [ eax + 0x14 ]
add esp 0xc
jmp r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x220 ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x220 ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
mov ecx [ esi + 0x200 ]
sub ecx edx
jle r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x220 ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
add ecx 0x4
lea ebp [ esi + 0x20c ]
lea ebx [ esi + 0x210 ]
mov [ esi + 0x20c ] ecx
add ecx [ esi + 0x210 ]
mov eax [ esi + 0x220 ]
mov [ eax + 0x1c ] ecx
mov eax [ esi + 0x220 ]
push 0x1
push [ eax + 0x1c ]
push [ eax + 0x10 ]
call sub_43f8db
add esp 0xc
mov ecx [ esi + 0x220 ]
mov [ ecx + 0x10 ] eax
mov eax 0x4
lea edx [ ecx - 0x1 ]
add ecx 0x4
mov [ esi + 0x208 ] edx
mov [ eax ] ecx
mov eax [ esi + 0x20c ]
mov ecx [ esi + 0x220 ]
mov [ ecx + 0x20 ] eax
mov eax [ esi + 0x21c ]
mov ecx [ esi + 0x220 ]
lea edx [ eax + 0x1 ]
mov [ esi + 0x21c ] edx
mov [ ecx + 0xc ] eax
mov eax [ esi + 0x20c ]
mov ecx [ esi + 0x220 ]
sub eax [ esi + 0x204 ]
mov [ ecx ] eax
mov eax [ esi + 0x220 ]
cmp [ eax ] 0x0
jns r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
push 0x74f
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x220 ]
cmp [ eax ] 0x5
jg r-xdata
mov ecx [ esi + 0x220 ]
mov edi esp
lea ebx [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x10 ]
add edx 0xfffffffb
add ecx 0x5
push edi
push ebx
push edx
push ecx
push [ esi + 0x94 ]
call [ eax + 0x1c ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ eax + 0x10 ]
movzx ecx [ ecx + 0x5 ]
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0x220 ]
mov ecx [ eax + 0x10 ]
add ecx 0x6
mov [ eax + 0x14 ] ecx
mov eax [ esi + 0x220 ]
add [ eax ] 0xfffffffa
mov eax [ esi + 0x220 ]
cmp [ eax ] 0x0
jns r-xdata
push eax
push esi
call sub_4579a2
add esp 0x8
jmp r-xdata
mov ecx [ esp ]
mov eax [ esi + 0x220 ]
lea edx [ ecx + 0x5 ]
cmp [ eax + 0x1c ] edx
jge r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
push 0x777
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x1b4 ] 0x0
add ecx 0x5
mov [ eax ] ecx
mov eax [ esi + 0x220 ]
mov edi [ esp + 0x4 ]
mov eax [ eax + 0x10 ]
add eax 0x5
push [ esp ]
push edi
push eax
call sub_49a1f0
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov [ eax + 0x1c ] edx
mov eax [ esi + 0x220 ]
push 0x1
push [ eax + 0x1c ]
push [ eax + 0x10 ]
call sub_43f8db
add esp 0xc
mov ecx [ esi + 0x220 ]
mov [ ecx + 0x10 ] eax
mov ecx [ esp ]
mov eax [ esi + 0x220 ]
mov eax [ esi + 0x220 ]
mov [ eax + 0x18 ] 0x0
mov edx [ esi + 0x220 ]
mov ecx esi
call sub_457b65
sub_458694
push ebp
push ebx
push edi
push esi
push eax
mov ebx [ esp + 0x18 ]
cmp [ ebx + 0x144 ] 0x4
je r-xdata
add esp 0x4
mov ebp [ esp + 0x24 ]
test ebp ebp
je r-xdata
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + eax * 4 + 0x270 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x1c0 ]
xor ebx ebx
cmp eax 0x1775
jg r-xdata
mov ecx ebx
mov edx edi
push ebp
push esi
call sub_451579
add esp 0x8
test eax eax
je r-xdata
push ebp
push ebx
call eax
add esp 0xc
jmp r-xdata
cmp eax 0x1776
je r-xdata
test eax eax
je r-xdata
mov [ ebx + 0x238 ] 0x1
pop esi
pop edi
pop ebx
pop ebp
retn
test ebp ebp
je r-xdata
cmp eax 0x178b
je r-xdata
mov ebp [ esp + 0x18 ]
mov eax sub_4593ab
mov [ ebp + 0x2b8 ] eax
mov [ ebp + 0x2b4 ] eax
mov eax sub_4594e6
mov [ ebp + 0x2d4 ] eax
mov [ ebp + 0x2d0 ] eax
mov eax sub_45958a
movd xmm0 eax
mov eax sub_459490
movd xmm1 eax
mov eax sub_459444
movd xmm3 eax
mov eax sub_459603
punpckldq xmm1 xmm0
movd xmm2 eax
punpckldq xmm2 xmm3
punpcklqdq xmm2 xmm1
movdqu [ ebp + 0x2c0 ] xmm2
push ebp
call sub_448605
add esp 0x4
test eax eax
je r-xdata
cmp eax 0x1723
je r-xdata
mov ebx 0x1776
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0xfffffffe
cmp ecx 0xe
jne r-xdata
test ebp ebp
je r-xdata
cmp eax 0x17c4
jne r-xdata
push 0x95
push [ ebp + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push r--data
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
push 0x0
push 0x1e
push ebp
call sub_448d90
add esp 0xc
mov ebx 0x1723
jmp r-xdata
test ebp ebp
je r-xdata
cmp eax 0x174d
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
push r--data
jmp r-xdata
cmp eax 0xf
jne r-xdata
mov ebx 0x178b
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0xfffffffe
cmp ecx 0xe
jne r-xdata
test ebp ebp
je r-xdata
mov edx [ ebp + 0x248 ]
mov ecx ebp
call sub_454dd0
mov [ ebp + 0x2e4 ] sub_459772
push 0x16
push [ ebp + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0x248 ]
push 0x96
push esi
call sub_431a8c
add esp 0x8
push esi
push eax
call sub_4969e8
add esp 0x8
test eax eax
mov [ ebp + 0x18c ] eax
je r-xdata
mov [ ebp + 0x1c0 ] ebx
mov ebx 0x1723
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0xfffffffe
cmp ecx 0xe
jne r-xdata
test ebp ebp
je r-xdata
call sub_43f758
add esp 0x4
mov ebp [ esp + 0x18 ]
mov ebp [ esp + 0x18 ]
push [ ebp + 0x118 ]
push [ ebp + 0x114 ]
push r--data
push ebp
call sub_447e12
add esp 0x10
lea eax [ ebp + 0x154 ]
jmp r-xdata
mov ebp [ esp + 0x18 ]
mov edx r--data
mov ecx ebp
push 0x20
call sub_44a29f
add esp 0x4
jmp r-xdata
push r--data
mov ebp [ esp + 0x18 ]
cmp eax 0xf
jne r-xdata
mov ebx 0x17c4
test esi esi
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ebp [ esp + 0x18 ]
mov ebx 0x17c4
mov ecx eax
and ecx 0xfffffffe
cmp ecx 0xe
je r-xdata
mov eax 0x9600
lea esi [ ebp + 0x114 ]
lea edi [ ebp + 0x118 ]
mov [ ebp + 0x114 ] eax
mov [ ebp + 0x118 ] eax
push 0x31
push [ ebp + 0x248 ]
call sub_431a8c
add esp 0x8
push edi
push esi
push r--data
push eax
call sub_442b34
add esp 0x10
push 0x2c
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
xor eax eax
mov edx 0xd
mov ecx edi
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x1c ] eax
mov [ edi ] 0xd
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0xa
mov eax [ edi + 0x10 ]
add eax [ edi ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ edi + 0x8 ] 0xa
mov [ edi + 0x24 ] eax
mov [ edi + 0x28 ] eax
push 0x30
push [ ebp + 0x248 ]
call sub_431a8c
add esp 0x8
mov ecx edi
mov edx eax
call sub_448e7b
mov ebx [ ebp + 0x120 ]
mov ecx edi
mov eax ebx
mov esi ebx
shr eax 0x18
shr esi 0x10
mov [ esp ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx esi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx edi
mov ebx [ ebp + 0x11c ]
mov eax ebx
mov esi ebx
shr eax 0x18
shr esi 0x10
mov [ esp ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx esi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx edi
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
xor esi esi
mov [ ecx + eax - 0x4 ] esi
mov ecx edi
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx sub_459905
mov [ ecx + eax - 0x4 ] esi
mov ecx ebp
push edi
call sub_456293
add esp 0x4
mov edx [ edi ]
mov ecx edi
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0xc0
mov ecx edi
mov ebx [ ebp + 0x118 ]
mov eax ebx
mov esi ebx
shr eax 0x18
shr esi 0x10
mov [ esp ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx esi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx edi
mov edx [ edi ]
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov [ ecx + eax - 0x1 ] 0xc1
mov ecx edi
mov ebx [ ebp + 0x114 ]
mov eax ebx
mov esi ebx
shr eax 0x18
shr esi 0x10
mov [ esp ] eax
mov edx [ edi ]
add edx 0x4
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx [ esp ]
mov [ ecx + eax - 0x4 ] dl
mov edx esi
mov [ ecx + eax - 0x3 ] dl
mov [ ecx + eax - 0x2 ] bh
mov [ ecx + eax - 0x1 ] bl
mov ecx edi
mov edx [ edi ]
inc edx
mov [ edi ] edx
call sub_44dbe6
mov eax [ edi ]
mov ecx [ edi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x1 ] 0x0
mov ecx ebp
call sub_4564ae
mov [ ebp + 0x144 ] 0x2
mov ebx 0x1776
jmp r-xdata
lea eax [ ebp + 0x108 ]
mov [ ebp + 0x104 ] 0x1
push r--data
push [ ebp + 0x110 ]
push 0x97
push [ ebp + 0x248 ]
call sub_43194f
add esp 0x8
push eax
push [ ebp + 0x194 ]
call sub_496724
add esp 0x8
mov [ ebp + 0x190 ] eax
mov ecx [ ebp + 0x18c ]
mov [ eax + 0x1c ] ecx
push r--data
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
test [ ebp + 0x44 ] 0x1
jne r-xdata
push r--data
jmp r-xdata
mov ebp [ esp + 0x18 ]
cmp eax 0xf
mov eax [ ebp + 0x110 ]
jne r-xdata
mov ebx 0x174d
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0xfffffffe
cmp ecx 0xe
jne r-xdata
mov [ eax ] 0x1
push 0x17
push [ ebp + 0x248 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push r--data
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ ebp + 0x3c ] 0x1
call sub_470630
mov [ ebp + 0x90 ] eax
push r--data
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
call sub_470fd0
mov [ ebp + 0x94 ] eax
push r--data
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
jmp r-xdata
mov edx r--data
mov ecx ebp
push 0x1c
call sub_44a29f
add esp 0x4
cmp esi 0x201
mov ebp 0x200
cmovl ebp esi
push 0x0
push ebp
push edi
push 0x3
push ebp
push 0x1
push 0x10
push [ esp + 0x34 ]
call sub_448d90
add esp 0x20
add edi ebp
sub esi ebp
jg r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
lea esi [ ebp + 0x248 ]
push 0x14
push [ esi ]
call sub_431a8c
add esp 0x8
mov edi eax
push 0x2b
push [ esi ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x6
push 0x1
push 0x25
push ebp
call sub_448d90
add esp 0x14
mov ebx 0x178b
jmp r-xdata
mov eax [ ebp + 0x18c ]
mov ecx [ ebp + 0x190 ]
mov edx 0x4
push 0x0
push [ eax + 0xc ]
push 0x1
push [ ecx + 0x10 ]
push edx
push [ ecx + 0xc ]
push edx
push 0x22
push ebp
call sub_448d90
add esp 0x24
mov eax [ ebp + 0x190 ]
mov ecx 0x4
push 0x0
push [ eax + 0x10 ]
push ecx
push [ eax + 0xc ]
push ecx
push 0x22
push ebp
call sub_448d90
add esp 0x1c
jmp r-xdata
push r--data
push eax
call sub_4842ab
add esp 0x8
mov [ ebp + 0x48 ] 0x1
mov [ ebp + 0x2ec ] sub_459648
push r--data
push eax
call sub_4842ab
add esp 0x8
jmp r-xdata
push r--data
jmp r-xdata
mov ebp [ esp + 0x18 ]
cmp eax 0xf
mov eax [ ebp + 0x110 ]
jne r-xdata
jmp r-xdata
mov ecx ebp
mov edx eax
call sub_44e0cb
xor ebx ebx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
push 0x15
push [ esi ]
call sub_431a8c
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x174d
push r--data
push eax
call sub_4842ab
add esp 0x8
mov [ ebp + 0x4c ] 0x1
mov [ ebp + 0x2dc ] sub_4596c3
jmp r-xdata
push r--data
push eax
jmp r-xdata
push 0x0
push 0xc
push ebp
call sub_448d90
add esp 0xc
push 0x0
push edi
push 0x4
push 0xd
push ebp
call sub_448d90
add esp 0x14
jmp r-xdata
push 0x15
push [ ebp + 0x248 ]
call sub_431a8c
add esp 0x8
mov edi eax
mov [ ebp + 0x174 ] 0x1
call sub_4842ab
add esp 0x8
cmp [ ebp + 0x14c ] 0x0
je r-xdata
push [ ebp + 0x120 ]
push [ ebp + 0x11c ]
push ebp
call sub_4499c2
add esp 0xc
push r--data
push [ ebp + 0x110 ]
call sub_4842ab
add esp 0x8
mov [ ebp + 0x144 ] 0x3
cmp [ ebp + 0x148 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push 0xc
push ebp
call sub_449b18
add esp 0x8
mov [ ebp + 0x100 ] 0x1
push sub_453dfd
call sub_47dc24
add esp 0x4
mov [ ebp + 0x124 ] eax
mov ebx 0x17c4
jmp r-xdata
push eax
call sub_43c0cc
add esp 0x4
sub_458efb
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov esi [ esp + 0x58 ]
mov edi [ esp + 0x60 ]
mov ebx [ esp + 0x5c ]
mov [ esp + 0x40 ] eax
mov eax [ esi + 0x1b0 ]
test eax eax
je r-xdata
push 0x2c
push 0x1
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ esi + 0x1fc ] eax
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0x1fc ]
mov [ eax ] ecx
mov [ esi + 0x1d8 ] ecx
cmp eax 0x55c
je r-xdata
mov eax [ esi + 0x1d8 ]
mov ecx [ esi + 0x1fc ]
mov edx eax
mov ebp eax
sar edx 0x1f
shr edx 0x1d
add edx eax
and edx 0xfffffff8
sub ebp edx
mov edx 0x8
sub edx ebp
mov [ esi + 0x1dc ] edx
add edx eax
add eax 0xfffffffb
mov [ esi + 0x1e0 ] edx
mov [ ecx ] eax
mov eax [ esi + 0x1e0 ]
test eax eax
js r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp eax 0x574
je r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x1fc ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
mov ecx [ esi + 0x1fc ]
mov [ ecx + 0x1c ] eax
push 0x1
push [ esi + 0x1e0 ]
call sub_43f807
add esp 0x8
mov ecx [ esi + 0x1fc ]
mov [ ecx + 0x10 ] eax
mov eax [ esi + 0x1e0 ]
mov ecx [ esi + 0x1fc ]
mov [ esi + 0x1e4 ] eax
mov ecx [ ecx + 0x10 ]
mov [ esi + 0x1f0 ] ecx
jmp r-xdata
mov [ esi + 0x1b0 ] 0x55c
jmp r-xdata
mov ecx [ ebx ]
mov eax [ esi + 0x1d8 ]
movzx ecx [ ecx ]
shl eax 0x8
or ecx eax
mov [ esi + 0x1d8 ] ecx
inc [ ebx ]
dec [ edi ]
mov ecx [ esi + 0x1f4 ]
inc ecx
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
lea ebp [ esi + 0x1fc ]
call sub_43f9d4
add esp 0x4
mov [ esi + 0x1b0 ] 0x0
test eax eax
jle r-xdata
xor esi esi
cmp ecx 0x3
mov [ esi + 0x1f4 ] ecx
jg r-xdata
mov [ esi + 0x1b0 ] 0x574
jmp r-xdata
mov ecx [ esi + 0x1f8 ]
cmp ecx eax
jle r-xdata
mov ecx [ esp + 0x40 ]
call sub_497c4a
mov eax esi
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esi + 0x54 ] 0x0
je r-xdata
mov [ esi + 0x1f8 ] eax
push ecx
push [ ebx ]
push [ esi + 0x1f0 ]
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x1f8 ]
add [ ebx ] eax
mov eax [ esi + 0x1f8 ]
sub [ edi ] eax
mov ecx [ esi + 0x1f8 ]
mov eax [ esi + 0x1e4 ]
add [ esi + 0x1f0 ] ecx
sub eax ecx
mov [ esi + 0x1e4 ] eax
jmp r-xdata
mov ecx eax
mov [ esi + 0x1f8 ] eax
lea ebp [ esi + 0x1fc ]
jmp r-xdata
mov eax [ esi + 0x1fc ]
push 0x0
push [ esi + 0x1e0 ]
push [ eax + 0x10 ]
push [ esi + 0x5c ]
call sub_45f45f
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0x1e0 ]
mov ecx [ ebp ]
add eax 0xfffffffc
push eax
push [ ecx + 0x10 ]
call sub_45f3f7
add esp 0x8
mov [ esi + 0x1e8 ] eax
mov ecx [ ebp ]
mov edi [ esi + 0x1e0 ]
mov edx [ ecx + 0x10 ]
mov edx [ edx + edi - 0x4 ]
bswap edx
cmp edx eax
mov [ esi + 0x1ec ] edx
jne r-xdata
mov eax [ esi + 0x54 ]
lea ebp [ esi + 0x1fc ]
test eax eax
je r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ esi + 0x1fc ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ ebp ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
mov eax [ ecx + 0x10 ]
mov edx [ esi + 0x1dc ]
lea eax [ eax + edx + 0x1 ]
mov [ ecx + 0x14 ] eax
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov ecx [ esi + 0x1fc ]
push [ esi + 0x1e0 ]
push [ ecx + 0x10 ]
push [ esi + 0x58 ]
call [ eax + 0x10 ]
add esp 0xc
mov eax [ ebp ]
mov ecx [ eax + 0x14 ]
movzx ecx [ ecx - 0x1 ]
mov [ eax + 0x8 ] ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ ebp ]
lea edx [ esp + 0xc ]
lea edi [ esp + 0x10 ]
mov ecx [ eax ]
mov eax [ eax + 0x14 ]
inc ecx
dec eax
push edx
push edi
push ecx
push eax
push [ esi + 0x94 ]
call sub_4712ae
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp ]
mov [ eax + 0x18 ] 0x0
jmp r-xdata
mov edi [ ebp ]
xor eax eax
mov ebx 0x0
mov [ edi + 0x18 ] eax
cmp [ esi + 0x24c ] eax
je r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
mov edi [ ebp ]
push [ edi + 0x10 ]
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
mov eax [ esp + 0xc ]
mov edx [ esi + 0x1dc ]
mov ecx [ ebp ]
add edx eax
cmp [ ecx + 0x1c ] edx
jge r-xdata
mov [ esi + 0x1b0 ] 0x0
mov esi [ ebp ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov [ esp + 0x4 ] eax
mov eax [ edi ]
mov [ esp ] eax
mov edi [ edi + 0x8 ]
mov ecx edi
call sub_453aa3
xor edx edx
lea ecx [ esp + 0x10 ]
push edx
push edx
push edx
push ecx
push ebx
push [ esp + 0x14 ]
push [ esp + 0x1c ]
push eax
push edi
push edx
push [ esi + 0x18 ]
call sub_43d2fa
add esp 0x2c
mov ecx [ edi + 0x8 ]
mov eax 0x4
lea edx [ ecx - 0x11 ]
cmp edx 0x2
jb r-xdata
mov ecx [ ecx + 0x14 ]
dec ecx
push eax
push [ esp + 0x14 ]
push ecx
call sub_49a1f0
add esp 0xc
push [ esp + 0x10 ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0xc ]
mov ecx [ ebp ]
dec eax
mov [ ecx ] eax
mov [ ecx + 0x1c ] edx
mov eax [ ebp ]
push 0x1
push [ eax + 0x1c ]
push [ eax + 0x10 ]
call sub_43f8db
add esp 0xc
mov ecx [ ebp ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp ]
mov edx [ esi + 0x1dc ]
mov ecx [ eax + 0x10 ]
lea ecx [ ecx + edx + 0x1 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp ]
mov eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
lea ebx [ esp + 0xc ]
lea eax [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x2
mov ecx edi
mov edx ebx
push eax
call sub_44dc49
add esp 0x4
cmp [ ebx ] 0x0
mov ebx 0x0
je r-xdata
cmp ecx 0x17
mov ebx 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
xor ebx ebx
inc ebx
mov [ esp + 0x14 ] eax
mov ecx edi
call sub_44dc2a
mov eax [ edi + 0x18 ]
add eax 0x4
sub_4593ab
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
lea ebx [ esp + 0x4 ]
mov edx ebx
mov [ esp + 0x8 ] eax
mov eax esp
mov ecx edi
push eax
call sub_44dc49
add esp 0x4
mov eax [ ebx ]
test eax eax
je r-xdata
push r--data
call sub_43f758
add esp 0x4
mov ecx esi
mov edx eax
call sub_44e0cb
xor ecx ecx
cmp [ edi + 0x8 ] 0x12
sete cl
push [ esp ]
push eax
push ecx
push [ esi + 0x110 ]
call sub_48d156
add esp 0x10
cmp eax 0x8001
jl r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
mov eax [ esi + 0x1a8 ]
test eax eax
jne r-xdata
xor edx edx
mov ecx esi
mov [ esi + 0x1a8 ] 0x1
inc edx
call sub_44a5f9
jmp r-xdata
sub_459444
push edi
push esi
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx edi
call sub_455e1e
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
retn
cmp [ esi + 0xc ] 0x3
jne r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov ecx edi
call sub_44dc2a
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] eax
push [ esi + 0x4c ]
call sub_440f1a
add esp 0x4
mov ecx esi
pop esi
pop edi
jmp sub_44804f
sub_459490
push edi
push esi
mov esi [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ecx esi
call sub_455e1e
mov edi eax
test edi edi
je r-xdata
pop esi
pop edi
retn
cmp [ edi + 0xc ] 0x3
jne r-xdata
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push [ edi + 0x4c ]
call sub_440e52
add esp 0x4
push edi
push [ esi + 0x124 ]
call sub_47eb51
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
sub_4594e6
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov ecx edi
mov edx ebx
call sub_455e1e
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
retn
mov ecx [ ebx + 0x8 ]
cmp ecx 0x18
jne r-xdata
mov eax [ esi + 0x14 ]
cmp ecx 0x19
jne r-xdata
mov ecx esi
call sub_455fb8
mov ecx [ ebx + 0x8 ]
mov ecx eax
and ecx 0x7
cmp ecx 0x5
jne r-xdata
mov ecx eax
and ecx 0x8
jne r-xdata
and eax 0xa
mov ecx 0xa
cmp eax ecx
jne r-xdata
push 0x0
push [ esi + 0x4 ]
push 0x1
push 0x19
push edi
call sub_448d90
add esp 0x14
mov eax [ esi + 0x14 ]
or eax 0x2
mov [ esi + 0x14 ] eax
test al 0x1
jne r-xdata
mov ecx esi
pop esi
pop edi
pop ebx
jmp sub_448b7d
or eax 0x8
mov [ esi + 0x14 ] eax
push [ esi + 0x8 ]
push r--data
call sub_43f758
add esp 0x8
mov ecx edi
mov edx eax
call sub_44e0cb
mov eax [ esi + 0x14 ]
sub_45958a
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x1c ]
mov ebx [ esp + 0x20 ]
mov eax [ rw-data ]
mov ecx esi
mov edx ebx
mov [ esp + 0x8 ] eax
call sub_455e1e
mov edi eax
mov eax esp
lea edx [ esp + 0x4 ]
mov ecx ebx
push eax
call sub_44dc49
add esp 0x4
test edi edi
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
xor edx edx
mov ecx edi
push [ esp ]
push [ esp + 0x8 ]
call sub_455f42
add esp 0x8
cmp eax 0x8001
jl r-xdata
mov eax [ edi + 0x1c ]
test eax eax
jne r-xdata
xor edx edx
mov ecx esi
mov [ edi + 0x1c ] 0x1
inc edx
call sub_44a5f9
sub_459603
push edi
push esi
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0xc ]
call sub_44dc2a
mov [ esi + 0x130 ] eax
push eax
push r--data
push esi
call sub_447e12
add esp 0xc
xor edi edi
push edi
push 0x21
push esi
call sub_448d90
add esp 0xc
xor edx edx
mov ecx esi
push 0x1
push edi
push edi
call sub_44a668
add esp 0xc
pop esi
pop edi
retn
sub_459648
push ebp
push ebx
push edi
push esi
mov ecx [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
call sub_44dc2a
cmp [ ebx + 0x48 ] 0x0
mov esi eax
je r-xdata
push 0x0
push esi
push 0x1
push 0x16
push ebx
call sub_448d90
add esp 0x14
xor ebp ebp
inc ebp
push 0x5c
push ebp
call sub_43f807
add esp 0x8
mov edi eax
mov ecx edi
mov [ edi ] ebx
call sub_4489be
mov [ edi + 0x4 ] esi
xor esi esi
lea eax [ edi + 0x4c ]
mov [ edi + 0x10 ] esi
mov [ edi + 0xc ] 0x2
mov [ edi + 0x58 ] esi
push eax
call sub_43ff45
add esp 0x4
push esi
push [ edi + 0x8 ]
push ebp
push [ edi + 0x4 ]
push ebp
push 0x15
push ebx
call sub_448d90
add esp 0x1c
jmp r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4596c3
push ebp
push ebx
push edi
push esi
mov ecx [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
call sub_44dc2a
mov esi eax
push r--data
push [ ebx + 0x110 ]
call sub_4842ab
add esp 0x8
cmp [ ebx + 0x4c ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
push 0x16
push ebx
call sub_448d90
add esp 0x14
push r--data
push [ ebx + 0x110 ]
xor eax eax
inc eax
push 0x5c
push eax
call sub_43f807
add esp 0x8
mov edi eax
mov ecx edi
mov [ edi ] ebx
call sub_4489be
xor ebp ebp
push 0xffffffff
push ebp
push edi
push [ ebx + 0x194 ]
call sub_497095
add esp 0x10
mov [ edi + 0x4c ] eax
xor eax eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x10 ] ebp
inc eax
mov [ edi + 0xc ] eax
push ebp
push [ edi + 0x8 ]
push eax
push esi
push eax
push 0x15
push ebx
call sub_448d90
add esp 0x1c
push r--data
push [ ebx + 0x110 ]
jmp r-xdata
call sub_4842ab
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_459772
push ebp
push ebx
push edi
push esi
sub esp 0x2c
mov edi [ esp + 0x44 ]
mov eax [ rw-data ]
mov ecx edi
mov [ esp + 0x28 ] eax
call sub_44dc2a
lea ebx [ esp + 0x4 ]
mov esi eax
lea ebp [ esp + 0x8 ]
mov ecx edi
mov edx ebx
push ebp
call sub_44dc49
add esp 0x4
mov ecx edi
call sub_44dc2a
mov edi eax
mov eax [ ebx ]
mov ecx r--data
test eax eax
cmovne ecx eax
push ecx
push [ ebp ]
push r--data
call sub_43f758
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ ecx + 0xc ] eax
xor eax eax
mov [ ecx + 0x4 ] edi
push eax
push ecx
mov eax [ esp + 0x48 ]
push [ eax + 0x13c ]
call sub_47e50d
add esp 0xc
mov ebp eax
test ebp ebp
je r-xdata
push edi
push [ esp + 0x1c ]
push r--data
mov eax [ esp + 0x4c ]
mov edi eax
push edi
call sub_447e12
add esp 0x10
push 0x0
push esi
push 0x1
push 0x16
push edi
mov [ esp ] esi
push 0x5c
push 0x1
call sub_43f807
add esp 0x8
mov esi [ esp + 0x40 ]
mov ebx eax
mov [ ebx ] esi
push edi
push [ esp + 0x1c ]
push r--data
push esi
call sub_447e12
add esp 0x10
mov eax [ ebp + 0x18 ]
push [ eax + 0x24 ]
push [ esi + 0x248 ]
push ebx
lea eax [ ebx + 0x4c ]
push edi
push [ esp + 0x28 ]
push eax
call sub_440628
add esp 0x18
mov edi eax
test edi edi
je r-xdata
push [ esp + 0x18 ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x28 ]
call sub_497c4a
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx ebx
call sub_4489be
mov esi [ esp ]
xor eax eax
xor ecx ecx
inc ecx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0xc ] 0x3
push eax
push [ ebx + 0x8 ]
push ecx
push esi
push ecx
push 0x15
mov eax [ esp + 0x58 ]
mov esi eax
push esi
call sub_448d90
add esp 0x1c
push r--data
push [ esi + 0x110 ]
call sub_4842ab
add esp 0x8
push edi
push r--data
mov eax [ esp + 0x48 ]
mov esi eax
push esi
call sub_447e12
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
push 0x0
push [ esp + 0x4 ]
push 0x1
push 0x16
push esi
jmp r-xdata
call sub_448d90
add esp 0x14
jmp r-xdata
sub_459905
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x10 ]
mov edx [ edi + 0x8 ]
cmp edx 0x1
je r-xdata
call sub_4563d6
xor eax eax
test edx edx
jne r-xdata
mov edx [ esi ]
mov bl [ edi + 0x4 ]
mov ecx esi
mov edi eax
inc edx
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov [ ecx + eax - 0x1 ] bl
mov ecx esi
mov edx [ esi ]
inc edx
mov [ esi ] edx
call sub_44dbe6
mov eax [ esi ]
mov ecx [ esi + 0x10 ]
mov edx edi
mov [ ecx + eax - 0x1 ] dl
pop esi
pop edi
pop ebx
retn
call sub_45638e
jmp r-xdata
sub_459963
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov ebx esp
lea edi [ esp + 0x4 ]
mov edx edi
mov [ esp + 0x8 ] eax
push ebx
call sub_44dc49
add esp 0x4
mov eax [ edi ]
mov ecx r--data
test eax eax
cmovne ecx eax
push ecx
push [ ebx ]
push r--data
call sub_43f758
add esp 0xc
mov ecx esi
mov edx eax
call sub_44e0cb
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
sub_4599c0
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov ebx esp
lea esi [ esp + 0x4 ]
mov edx esi
mov [ esp + 0x8 ] eax
push ebx
call sub_44dc49
add esp 0x4
mov eax [ esi ]
mov ecx r--data
test eax eax
cmovne ecx eax
push ecx
push [ ebx ]
push r--data
push edi
call sub_447e12
add esp 0x10
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
sub_459a40
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ esp + 0x28 ]
mov esi ecx
mov [ esp + 0x4 ] edx
lea eax [ eax - 0x10 ]
cmp eax 0x10
ja r-xdata
push 0x3a7
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx 0x10101
bt ecx eax
jb r-xdata
mov eax 0x4
lea eax [ ebp * 4 ]
mov ecx esi
sub ecx eax
xor eax eax
mov [ esp ] ecx
inc eax
xor ecx ecx
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x28 ]
mov ebx 0xa
mov [ esi + 0x3e8 ] 0x4
mov ecx eax
mov ebp ecx
sar ebp 0x1f
shr ebp 0x1e
add ebp ecx
sar ebp 0x2
cmp ecx 0x10
lea eax [ ebp + 0x6 ]
cmovge ebx eax
lea eax [ ebx * 4 + 0x4 ]
mov [ esi + 0x3ec ] ebx
mov [ esi + 0x3c0 ] sub_459f7a
mov [ esi + 0x3c4 ] sub_45a28a
test eax eax
jle r-xdata
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
xor edx edx
xor ebp ebp
mov [ esp + 0x10 ] esi
mov eax ecx
mov ebx [ esi + ecx * 4 - 0x4 ]
cdq
idiv ebp
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
mov ebx [ eax + ecx * 4 ]
bswap ebx
jmp r-xdata
dec edx
cmp ebp ebx
lea ebp [ ebp + 0x1 ]
jl r-xdata
xor edi edi
mov [ esp + 0x4 ] edx
mov [ esp ] ebp
mov eax ebx
movzx edi bl
movzx edx bh
shr ebx 0x18
shr eax 0x10
mov [ esp + 0xc ] edi
mov edi [ esp + 0x8 ]
movzx edx [ edx + r--data ]
movzx ebx [ ebx + r--data ]
movzx eax al
movzx eax [ eax + r--data ]
xor eax edi
shl eax 0x8
or edx eax
mov eax [ esp + 0xc ]
shl edx 0x8
movzx eax [ eax + r--data ]
or eax edx
mov edx edi
mov edi 0x1b
shl eax 0x8
or ebx eax
mov eax edx
and eax 0x7f
add eax eax
test dl dl
mov edx 0x0
cmovs edx edi
xor edx eax
mov [ esp + 0x8 ] edx
cmp [ esp + 0x28 ] 0x1c
jl r-xdata
mov [ esi + ecx * 4 ] ebx
inc ecx
mov ebx [ esi + 0x3ec ]
mov eax [ esi + 0x3e8 ]
lea edx [ ebx + 0x1 ]
imul edx eax
cmp ecx edx
jl r-xdata
test eax eax
jle r-xdata
imul eax ebp
add eax edi
inc edi
mov [ esi + eax * 4 + 0x1e0 ] ecx
mov eax [ esi + 0x3e8 ]
mov ebx [ esi + 0x3ec ]
cmp edi eax
jl r-xdata
cmp ebx ebp
je r-xdata
cmp ecx ebp
jge r-xdata
jmp r-xdata
mov eax [ esp ]
xor ebx [ eax + ecx * 4 ]
cmp edx 0x4
jne r-xdata
lea ecx [ edx + ebx ]
imul ecx eax
add ecx edi
test ebp ebp
mov ecx [ esi + ecx * 4 ]
je r-xdata
mov ebx ecx
movzx ebp ch
movzx esi cl
shr ecx 0x18
shr ebx 0x10
movzx edx [ ecx + r--data ]
movzx ebx bl
movzx ecx [ ebx + r--data ]
mov ecx [ ecx * 4 + r--data ]
xor ecx [ edx * 4 + r--data ]
movzx edx [ ebp + r--data ]
mov ebp [ esp ]
xor ecx [ edx * 4 + r--data ]
movzx edx [ esi + r--data ]
mov esi [ esp + 0x10 ]
xor ecx [ edx * 4 + r--data ]
mov edx [ esp + 0x4 ]
test ebx ebx
js r-xdata
mov eax ebx
movzx edx bh
movzx edi bl
shr ebx 0x18
shr eax 0x10
movzx ebx [ ebx + r--data ]
movzx edx [ edx + r--data ]
movzx eax al
movzx eax [ eax + r--data ]
shl ebx 0x8
or eax ebx
movzx ebx [ edi + r--data ]
shl eax 0x8
or edx eax
shl edx 0x8
or ebx edx
jmp r-xdata
sub_459cf8
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov edi [ esp + 0x2c ]
mov ebx edx
mov esi ecx
test bl 0xf
mov [ esp + 0x14 ] eax
je r-xdata
lea eax [ edi + 0x3c8 ]
test ebx ebx
mov [ esp ] eax
movsd xmm0 [ edi + 0x3c8 ]
movsd xmm1 [ edi + 0x3d0 ]
movsd [ esp + 0xc ] xmm1
movsd [ esp + 0x4 ] xmm0
jle r-xdata
push 0x409
push r--data
push r--data
call sub_4a509d
add esp 0xc
movsd xmm0 [ esp + 0x4 ]
movsd xmm1 [ esp + 0xc ]
mov eax [ esp ]
movsd [ eax + 0x8 ] xmm1
movsd [ eax ] xmm0
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp 0x10
mov ecx [ esi + eax * 4 ]
bswap ecx
xor [ esp + eax * 4 + 0x4 ] ecx
inc eax
cmp eax 0x4
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
push edi
call [ edi + 0x3c0 ]
add esp 0x8
xor eax eax
mov cl [ esp + eax * 4 + 0x7 ]
mov [ esi + eax * 4 ] cl
mov cl [ esp + eax * 4 + 0x6 ]
mov [ esi + eax * 4 + 0x1 ] cl
mov cl [ esp + eax * 4 + 0x5 ]
mov [ esi + eax * 4 + 0x2 ] cl
mov cl [ esp + eax * 4 + 0x4 ]
mov [ esi + eax * 4 + 0x3 ] cl
inc eax
cmp eax 0x4
jne r-xdata
add esi 0x10
cmp ebx ebp
lea ebx [ ebx - 0x10 ]
jg r-xdata
xor eax eax
sub_459de1
push ebp
push ebx
push edi
push esi
sub esp 0x38
mov eax [ rw-data ]
mov edi [ esp + 0x4c ]
mov ebx edx
mov esi ecx
test bl 0xf
mov [ esp + 0x34 ] eax
je r-xdata
lea eax [ edi + 0x3c8 ]
test ebx ebx
mov [ esp ] eax
movsd xmm0 [ edi + 0x3c8 ]
movsd xmm1 [ edi + 0x3d0 ]
movsd [ esp + 0x2c ] xmm1
movsd [ esp + 0x24 ] xmm0
jle r-xdata
push 0x41f
push r--data
push r--data
call sub_4a509d
add esp 0xc
movsd xmm0 [ esp + 0x24 ]
movsd xmm1 [ esp + 0x2c ]
mov eax [ esp ]
movsd [ eax + 0x8 ] xmm1
movsd [ eax ] xmm0
mov ecx [ esp + 0x34 ]
call sub_497c4a
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp 0x10
mov ecx [ esi + eax * 4 ]
bswap ecx
mov [ esp + eax * 4 + 0x4 ] ecx
mov [ esp + eax * 4 + 0x14 ] ecx
inc eax
cmp eax 0x4
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push edi
call [ edi + 0x3c4 ]
add esp 0x8
xor eax eax
mov ecx [ esp + eax * 4 + 0x14 ]
xor ecx [ esp + eax * 4 + 0x24 ]
shr ecx 0x18
mov [ esi + eax * 4 ] cl
mov ecx [ esp + eax * 4 + 0x14 ]
xor ecx [ esp + eax * 4 + 0x24 ]
shr ecx 0x10
mov [ esi + eax * 4 + 0x1 ] cl
mov ecx [ esp + eax * 4 + 0x14 ]
xor ecx [ esp + eax * 4 + 0x24 ]
mov [ esi + eax * 4 + 0x2 ] ch
mov ecx [ esp + eax * 4 + 0x14 ]
xor ecx [ esp + eax * 4 + 0x24 ]
mov [ esi + eax * 4 + 0x3 ] cl
mov ecx [ esp + eax * 4 + 0x4 ]
mov [ esp + eax * 4 + 0x24 ] ecx
inc eax
cmp eax 0x4
jne r-xdata
add esi 0x10
cmp ebx ebp
lea ebx [ ebx - 0x10 ]
jg r-xdata
xor eax eax
sub_459edf
push ebx
push edi
push esi
sub esp 0x3f4
mov eax [ rw-data ]
mov esi [ esp + 0x408 ]
mov edi [ esp + 0x40c ]
mov edx [ esp + 0x404 ]
mov ebx esp
mov ecx ebx
mov [ esp + 0x3f0 ] eax
push 0x20
call sub_459a40
add esp 0x4
xor eax eax
mov ecx esi
mov edx edi
mov [ ebx + 0x3cc ] eax
mov [ ebx + 0x3c8 ] eax
mov [ ebx + 0x3d4 ] eax
mov [ ebx + 0x3d0 ] eax
mov [ ebx + 0x3dc ] eax
mov [ ebx + 0x3d8 ] eax
mov [ ebx + 0x3e4 ] eax
mov [ ebx + 0x3e0 ] eax
push ebx
call sub_459de1
add esp 0x4
push 0x3f0
push ebx
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x3f0 ]
call sub_497c4a
add esp 0x3f4
pop esi
pop edi
pop ebx
retn
sub_459f7a
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
mov [ esp + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ eax + 0xc ]
lea eax [ edx + 0x1c ]
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x2c ]
mov edi [ esp + 0xc ]
mov edx [ eax + 0x3ec ]
mov eax [ esp + 0x30 ]
xor ebx [ edi - 0x1c ]
mov esi eax
dec edx
mov [ esi ] ebx
mov eax [ esp + 0x4 ]
xor eax [ edi - 0x18 ]
mov [ esp + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov eax [ esp ]
xor eax [ edi - 0x14 ]
mov [ esp ] eax
mov [ esi + 0x8 ] eax
mov eax ebx
xor ecx [ edi - 0x10 ]
shr eax 0x18
cmp [ esp + 0x8 ] edx
mov [ esi + 0xc ] ecx
jl r-xdata
mov edx [ esp + 0x4 ]
movzx edi bh
mov esi edx
shr edx 0xe
and edx 0x3fc
shr esi 0x18
mov ebp [ edx + r--data ]
mov edx ecx
mov ecx [ esp ]
xor ebp [ eax * 4 + r--data ]
movzx eax ch
xor ebp [ eax * 4 + r--data ]
movzx eax dl
xor ebp [ eax * 4 + r--data ]
mov eax ecx
shr ecx 0x18
shr eax 0xe
and eax 0x3fc
mov eax [ eax + r--data ]
xor eax [ esi * 4 + r--data ]
movzx esi dh
xor eax [ esi * 4 + r--data ]
movzx esi bl
shr ebx 0xe
and ebx 0x3fc
xor eax [ esi * 4 + r--data ]
mov esi edx
shr edx 0x18
shr esi 0xe
and esi 0x3fc
mov esi [ esi + r--data ]
xor esi [ ecx * 4 + r--data ]
mov ecx [ esp + 0x4 ]
xor esi [ edi * 4 + r--data ]
movzx edi cl
movzx ecx ch
xor esi [ edi * 4 + r--data ]
mov edi [ ebx + r--data ]
mov ebx ebp
xor edi [ edx * 4 + r--data ]
xor edi [ ecx * 4 + r--data ]
movzx ecx [ esp ]
xor edi [ ecx * 4 + r--data ]
mov ecx [ esp + 0x30 ]
mov [ ecx ] ebp
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] esi
mov [ ecx + 0xc ] edi
inc [ esp + 0x8 ]
add [ esp + 0xc ] 0x10
mov ecx edi
mov [ esp ] esi
mov [ esp + 0x4 ] eax
mov ebp [ esp ]
movzx edx cl
mov edi [ esp + 0x4 ]
movzx eax [ eax + r--data ]
pxor xmm4 xmm4
pxor xmm5 xmm5
mov [ esp + 0x8 ] edx
movzx edx ch
mov [ esp + 0x14 ] edx
mov edx ecx
shr ecx 0x18
movzx ecx [ ecx + r--data ]
shr edx 0x10
mov esi ebp
shr esi 0x18
movzx esi [ esi + r--data ]
shl ecx 0x8
or ecx esi
mov esi edi
shr esi 0x18
movzx esi [ esi + r--data ]
shl esi 0x8
or esi eax
movzx eax bl
movd xmm0 esi
mov [ esp + 0x10 ] eax
mov eax edi
pinsrw xmm0 ecx 0x1
movzx ecx dl
movzx edx bh
shr ebx 0x10
movzx esi bl
movzx ecx [ ecx + r--data ]
mov ebx ebp
punpcklbw xmm0 xmm4
movzx esi [ esi + r--data ]
shr ebx 0x10
punpcklwd xmm0 xmm4
movzx edi bl
mov ebx ebp
pslld xmm0 0x18
movzx edi [ edi + r--data ]
shl esi 0x8
or esi ecx
mov ecx eax
shr ecx 0x10
shl edi 0x8
movzx ecx cl
movzx ecx [ ecx + r--data ]
or edi ecx
movzx ecx [ edx + r--data ]
movzx edx ah
movd xmm1 edi
movzx edx [ edx + r--data ]
pinsrw xmm1 esi 0x1
mov esi [ esp + 0x14 ]
punpcklbw xmm1 xmm4
punpcklwd xmm5 xmm1
shl edx 0x8
movzx esi [ esi + r--data ]
or edx ecx
movzx ecx bh
movzx ecx [ ecx + r--data ]
shl esi 0x8
or esi ecx
movzx ecx al
mov eax [ esp + 0x10 ]
movd xmm2 esi
movzx esi bl
movzx ecx [ ecx + r--data ]
pinsrw xmm2 edx 0x1
movzx edx [ esi + r--data ]
punpcklbw xmm2 xmm4
movzx eax [ eax + r--data ]
punpcklwd xmm2 xmm4
pslld xmm2 0x8
shl edx 0x8
por xmm2 xmm0
or edx ecx
mov ecx [ esp + 0x8 ]
shl eax 0x8
movzx ecx [ ecx + r--data ]
or eax ecx
movd xmm3 eax
mov eax [ esp + 0x30 ]
pinsrw xmm3 edx 0x1
punpcklbw xmm3 xmm4
punpcklwd xmm3 xmm4
por xmm3 xmm2
mov ecx eax
por xmm3 xmm5
movdqu [ ecx ] xmm3
movd eax xmm3
pshufd xmm0 xmm3 0xe5
mov edx [ esp + 0xc ]
movd esi xmm0
pshufd xmm0 xmm3 0x4e
movd edi xmm0
pshufd xmm0 xmm3 0xe7
xor eax [ edx - 0xc ]
mov [ ecx ] eax
xor esi [ edx - 0x8 ]
mov [ ecx + 0x4 ] esi
movd esi xmm0
xor edi [ edx - 0x4 ]
mov [ ecx + 0x8 ] edi
xor esi [ edx ]
mov [ ecx + 0xc ] esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45a28a
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
mov ebp [ eax ]
mov [ esp ] ecx
mov ebx [ eax + 0x8 ]
mov ecx [ eax + 0xc ]
lea eax [ esi + 0x1fc ]
mov [ esp + 0x4 ] 0x0
mov [ esp + 0xc ] eax
jmp r-xdata
mov edi [ esp + 0xc ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
xor ebp [ edi - 0x1c ]
mov esi edx
mov eax [ eax + 0x3ec ]
mov [ esi ] ebp
dec eax
mov edx [ esp ]
xor edx [ edi - 0x18 ]
mov [ esp ] edx
mov [ esi + 0x4 ] edx
mov edx ebp
xor ebx [ edi - 0x14 ]
shr edx 0x18
mov [ esi + 0x8 ] ebx
xor ecx [ edi - 0x10 ]
mov edi [ esp + 0x4 ]
mov [ esp + 0x8 ] ebp
cmp edi eax
mov [ esi + 0xc ] ecx
jl r-xdata
mov eax ecx
mov [ esp + 0x4 ] edi
mov edi [ esp + 0x8 ]
shr eax 0xe
and eax 0x3fc
mov esi [ eax + r--data ]
movzx eax bh
shr edi 0xe
and edi 0x3fc
mov ebp [ edi + r--data ]
mov edi ebx
xor esi [ edx * 4 + r--data ]
mov edx [ esp ]
shr edi 0x18
xor esi [ eax * 4 + r--data ]
movzx eax dl
xor esi [ eax * 4 + r--data ]
mov eax edx
shr eax 0x18
xor ebp [ eax * 4 + r--data ]
movzx eax ch
xor ebp [ eax * 4 + r--data ]
movzx eax bl
shr ebx 0xe
and ebx 0x3fc
xor ebp [ eax * 4 + r--data ]
mov eax edx
mov edx ecx
mov ecx [ esp + 0x8 ]
shr eax 0xe
and eax 0x3fc
mov eax [ eax + r--data ]
xor eax [ edi * 4 + r--data ]
movzx edi ch
mov ecx [ esp ]
xor eax [ edi * 4 + r--data ]
movzx edi dl
shr edx 0x18
movzx ecx ch
xor eax [ edi * 4 + r--data ]
mov edi [ ebx + r--data ]
xor edi [ edx * 4 + r--data ]
mov ebx eax
xor edi [ ecx * 4 + r--data ]
movzx ecx [ esp + 0x8 ]
xor edi [ ecx * 4 + r--data ]
mov ecx [ esp + 0x30 ]
mov [ ecx ] esi
mov [ ecx + 0x4 ] ebp
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edi
inc [ esp + 0x4 ]
add [ esp + 0xc ] 0x10
mov [ esp ] ebp
mov ecx edi
mov ebp esi
mov ebp [ esp ]
mov edi ebx
movzx edx [ edx + r--data ]
pxor xmm4 xmm4
pxor xmm5 xmm5
shr edi 0x18
movzx edi [ edi + r--data ]
mov eax ebp
shr eax 0x10
movzx esi al
movzx eax ch
mov [ esp + 0x10 ] eax
movzx eax cl
movzx esi [ esi + r--data ]
mov [ esp + 0x4 ] eax
mov eax ecx
shr ecx 0x18
movzx ecx [ ecx + r--data ]
shr eax 0x10
movzx eax al
movzx eax [ eax + r--data ]
shl ecx 0x8
or ecx edi
mov edi ebp
shr edi 0x18
movzx edi [ edi + r--data ]
shl edi 0x8
or edi edx
movzx edx bh
movd xmm0 edi
pinsrw xmm0 ecx 0x1
movzx ecx bl
shr ebx 0x10
movzx edi bl
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x8 ]
punpcklbw xmm0 xmm4
movzx edi [ edi + r--data ]
punpcklwd xmm0 xmm4
pslld xmm0 0x18
mov ebx ecx
shl edi 0x8
shr ebx 0x10
or edi esi
movzx esi bl
mov ebx ebp
movzx esi [ esi + r--data ]
shl esi 0x8
or esi eax
movzx eax ch
movd xmm1 esi
movzx esi bh
movzx eax [ eax + r--data ]
movzx esi [ esi + r--data ]
pinsrw xmm1 edi 0x1
punpcklbw xmm1 xmm4
punpcklwd xmm5 xmm1
shl esi 0x8
or esi eax
movzx eax [ edx + r--data ]
mov edx [ esp + 0x10 ]
movzx edx [ edx + r--data ]
shl edx 0x8
or edx eax
movzx eax bl
movd xmm2 edx
movzx edx cl
mov ecx [ esp + 0x4 ]
movzx eax [ eax + r--data ]
pinsrw xmm2 esi 0x1
movzx edx [ edx + r--data ]
punpcklbw xmm2 xmm4
punpcklwd xmm2 xmm4
movzx esi [ ecx + r--data ]
mov ecx [ esp + 0x14 ]
pslld xmm2 0x8
shl edx 0x8
por xmm2 xmm0
movzx ecx [ ecx + r--data ]
or edx esi
shl ecx 0x8
or ecx eax
mov eax [ esp + 0x30 ]
movd xmm3 ecx
pinsrw xmm3 edx 0x1
punpcklbw xmm3 xmm4
punpcklwd xmm3 xmm4
mov ecx eax
por xmm3 xmm2
por xmm3 xmm5
movdqu [ ecx ] xmm3
movd eax xmm3
pshufd xmm0 xmm3 0xe5
mov edx [ esp + 0xc ]
movd esi xmm0
pshufd xmm0 xmm3 0x4e
movd edi xmm0
pshufd xmm0 xmm3 0xe7
xor eax [ edx - 0xc ]
mov [ ecx ] eax
xor esi [ edx - 0x8 ]
mov [ ecx + 0x4 ] esi
movd esi xmm0
xor edi [ edx - 0x4 ]
mov [ ecx + 0x8 ] edi
xor esi [ edx ]
mov [ ecx + 0xc ] esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45a59c
push ebp
push ebx
push edi
push esi
sub esp 0x28
mov ebx [ esp + 0x44 ]
mov eax [ rw-data ]
test bl 0xf
mov [ esp + 0x24 ] eax
je r-xdata
mov eax [ esp + 0x3c ]
test ebx ebx
mov ecx eax
lea eax [ ecx + 0x3c8 ]
mov [ esp ] eax
movsd xmm0 [ ecx + 0x3c8 ]
movsd xmm1 [ ecx + 0x3d0 ]
movsd [ esp + 0x1c ] xmm1
movsd [ esp + 0x14 ] xmm0
jle r-xdata
push 0x437
push r--data
push r--data
call sub_4a509d
add esp 0xc
movsd xmm0 [ esp + 0x14 ]
movsd xmm1 [ esp + 0x1c ]
mov eax [ esp ]
movsd [ eax + 0x8 ] xmm1
movsd [ eax ] xmm0
mov ecx [ esp + 0x24 ]
call sub_497c4a
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp [ esp + 0x40 ]
movzx ecx [ ebp + eax * 4 ]
movzx ebx [ ebp + eax * 4 + 0x1 ]
movzx edx [ ebp + eax * 4 + 0x2 ]
movzx esi [ ebp + eax * 4 + 0x3 ]
shl ecx 0x18
shl ebx 0x10
shl edx 0x8
xor ecx [ esp + eax * 4 + 0x4 ]
shr ecx 0x18
mov [ ebp + eax * 4 ] cl
mov ecx esi
xor ebx [ esp + eax * 4 + 0x4 ]
shr ebx 0x10
mov [ ebp + eax * 4 + 0x1 ] bl
xor edx [ esp + eax * 4 + 0x4 ]
mov [ ebp + eax * 4 + 0x2 ] dh
xor ecx [ esp + eax * 4 + 0x4 ]
mov [ ebp + eax * 4 + 0x3 ] cl
inc eax
cmp eax 0x4
jne r-xdata
mov eax 0x4
mov ebx edi
mov eax 0x10
add ebp 0x10
cmp ebx eax
lea ebx [ ebx - 0x10 ]
jg r-xdata
dec eax
jg r-xdata
movsd xmm1 [ esp + 0x1c ]
movsd xmm0 [ esp + 0x14 ]
mov edi ebx
lea eax [ esp + 0x4 ]
movsd [ esp + 0xc ] xmm1
movsd [ esp + 0x4 ] xmm0
push eax
mov eax [ esp + 0x40 ]
push eax
call [ eax + 0x3c0 ]
add esp 0x8
xor eax eax
inc [ esp + eax * 4 + 0x10 ]
jne r-xdata
sub_45a6ff
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebx [ esp + 0x20 ]
mov esi [ esp + 0x28 ]
mov dl [ ebx ]
mov cl [ ebx + 0x1 ]
test esi esi
jle r-xdata
mov [ ebx ] dl
mov [ ebx + 0x1 ] cl
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x24 ]
lea eax [ esi + 0xff ]
add al dl
inc dl
mov [ esp + 0x4 ] eax
mov [ esp + 0x3 ] dl
movzx ebp dl
movzx ecx cl
movzx eax [ ebx + ebp + 0x2 ]
add ecx eax
mov [ esp + 0x8 ] eax
movzx eax cl
mov dh [ ebx + eax + 0x2 ]
mov [ ebx + ebp + 0x2 ] dh
mov edx [ esp + 0x8 ]
mov [ ebx + eax + 0x2 ] dl
movzx eax [ ebx + ebp + 0x2 ]
add eax edx
mov dl [ esp + 0x3 ]
movzx eax al
mov al [ ebx + eax + 0x2 ]
inc dl
xor [ edi ] al
inc edi
dec esi
jne r-xdata
mov eax [ esp + 0x4 ]
inc al
mov edx eax
sub_45a79d
push ebx
push edi
push esi
sub esp 0x104
mov ebx [ esp + 0x114 ]
mov eax [ rw-data ]
mov edi edx
mov esi ecx
cmp ebx 0x101
mov [ esp + 0x100 ] eax
jb r-xdata
xor ecx ecx
mov [ esi ] 0x0
push 0x26
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor edx edx
mov eax ecx
mov [ esi + ecx + 0x2 ] cl
div ebx
mov al [ edi + edx ]
mov [ esp + ecx ] al
inc ecx
cmp ecx 0x100
jne r-xdata
xor ecx ecx
xor eax eax
movzx edx [ esi + eax + 0x2 ]
movzx ebx [ esp + eax ]
add ecx edx
add ebx ecx
movzx ecx bl
mov bl [ esi + ecx + 0x2 ]
mov [ esi + eax + 0x2 ] bl
inc eax
mov [ esi + ecx + 0x2 ] dl
cmp eax 0x100
jne r-xdata
mov ecx [ esp + 0x100 ]
call sub_497c4a
add esp 0x104
pop esi
pop edi
pop ebx
retn
sub_45a837
push ebx
push edi
push esi
mov esi ecx
mov ebx 0x600
push 0x1
push ebx
call sub_43f807
add esp 0x8
mov edi eax
push ebx
push 0x0
push edi
call sub_49acf0
add esp 0xc
push ebx
push edi
push esi
call sub_45a6ff
add esp 0xc
push ebx
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
retn
sub_45a87c
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
xor ecx [ esi + 0x1000 ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1004 ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x1008 ]
mov ecx edx
mov eax edx
shr ecx 0xe
shr eax 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + eax * 4 ]
movzx eax dh
xor ecx [ esi + eax * 4 + 0x800 ]
movzx eax dl
add ecx [ esi + eax * 4 + 0xc00 ]
xor ecx ebx
xor ecx [ esi + 0x100c ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1010 ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x1014 ]
mov ecx edx
mov eax edx
shr ecx 0xe
shr eax 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + eax * 4 ]
movzx eax dh
xor ecx [ esi + eax * 4 + 0x800 ]
movzx eax dl
add ecx [ esi + eax * 4 + 0xc00 ]
xor ecx ebx
xor ecx [ esi + 0x1018 ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x101c ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x1020 ]
mov ecx edx
mov eax edx
shr ecx 0xe
shr eax 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + eax * 4 ]
movzx eax dh
xor ecx [ esi + eax * 4 + 0x800 ]
movzx eax dl
add ecx [ esi + eax * 4 + 0xc00 ]
xor ecx ebx
xor ecx [ esi + 0x1024 ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1028 ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x102c ]
mov eax edx
mov ecx edx
shr eax 0xe
shr ecx 0x18
and eax 0x3fc
mov eax [ esi + eax + 0x400 ]
add eax [ esi + ecx * 4 ]
movzx ecx dh
xor eax [ esi + ecx * 4 + 0x800 ]
movzx ecx dl
add eax [ esi + ecx * 4 + 0xc00 ]
xor eax ebx
xor eax [ esi + 0x1030 ]
mov ebx eax
mov ecx eax
shr ebx 0xe
shr ecx 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + ecx * 4 ]
movzx ecx ah
xor ebx [ esi + ecx * 4 + 0x800 ]
movzx ecx al
add ebx [ esi + ecx * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1034 ]
mov ecx ebx
mov edx ebx
shr ecx 0xe
shr edx 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + edx * 4 ]
movzx edx bh
xor ecx [ esi + edx * 4 + 0x800 ]
movzx edx bl
add ecx [ esi + edx * 4 + 0xc00 ]
xor ecx eax
xor ecx [ esi + 0x1038 ]
mov eax ecx
mov edx ecx
shr eax 0xe
shr edx 0x18
and eax 0x3fc
mov eax [ esi + eax + 0x400 ]
add eax [ esi + edx * 4 ]
movzx edx ch
xor eax [ esi + edx * 4 + 0x800 ]
movzx edx cl
xor ecx [ esi + 0x1040 ]
add eax [ esi + edx * 4 + 0xc00 ]
xor eax ebx
xor eax [ esi + 0x103c ]
mov ebx eax
mov edx eax
shr ebx 0xe
shr edx 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + edx * 4 ]
movzx edx ah
xor ebx [ esi + edx * 4 + 0x800 ]
movzx edx al
xor eax [ esi + 0x1044 ]
add ebx [ esi + edx * 4 + 0xc00 ]
mov [ edi ] eax
xor ecx ebx
mov [ edi + 0x4 ] ecx
pop esi
pop edi
pop ebx
retn
sub_45abfa
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov esi [ esp + 0x34 ]
mov ecx [ rw-data ]
movzx eax [ esp + 0x30 ]
test esi esi
mov [ esp + 0x10 ] ecx
je r-xdata
xor ecx ecx
lea esi [ esp + 0x7 ]
inc ecx
mov [ esi ] 0x0
mov cx [ esp + 0x38 ]
jmp r-xdata
mov eax ecx
cdq
idiv ebx
mov eax [ esp + 0x2c ]
movzx ebp [ eax + edx ]
lea eax [ ecx + 0x1 ]
cdq
shl ebp 0x18
xor ebp [ edi + ecx + 0x1000 ]
mov [ edi + ecx + 0x1000 ] ebp
idiv ebx
mov eax [ esp + 0x2c ]
movzx edi [ eax + edx ]
mov eax [ esp + 0x28 ]
shl edi 0x10
xor edi ebp
mov [ eax + ecx + 0x1000 ] edi
lea eax [ ecx + 0x2 ]
cdq
idiv ebx
mov eax [ esp + 0x2c ]
movzx ebp [ eax + edx ]
lea eax [ ecx + 0x3 ]
cdq
shl ebp 0x8
xor ebp edi
mov edi [ esp + 0x28 ]
mov [ edi + ecx + 0x1000 ] ebp
idiv ebx
mov eax [ esp + 0x2c ]
movzx eax [ eax + edx ]
xor eax ebp
mov [ edi + ecx + 0x1000 ] eax
add ecx 0x4
cmp ecx 0x48
jne r-xdata
movsx ebp [ esp ]
xor ebx ebx
lea eax [ esp + 0x8 ]
xor edx edx
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov edi [ esp + 0x28 ]
mov [ esp ] ecx
movsx ebx ax
xor ecx ecx
mov ecx edi
lea eax [ ebx + edi ]
sar ecx 0x1f
cdq
shr ecx 0x1e
idiv ebp
add ecx edi
movzx eax [ esi + edx ]
mov edx edi
and ecx 0x1c
sub edx ecx
mov ecx 0x18
shl edx 0x3
sub ecx edx
shl eax cl
mov ecx edi
inc edi
and ecx 0xfffffffc
xor [ esp + ecx + 0x8 ] eax
cmp edi 0x8
jne r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
add ebx 0x8
mov edi eax
push edi
lea eax [ esp + 0xc ]
push eax
call sub_45a87c
add esp 0x8
mov edx [ esp ]
mov eax [ esp + 0x8 ]
mov [ edi + edx * 4 + 0x1000 ] eax
mov ecx edx
mov eax [ esp + 0xc ]
or ecx 0x1
cmp edx 0x10
lea edx [ edx + 0x2 ]
mov [ edi + ecx * 4 + 0x1000 ] eax
jl r-xdata
xor edi edi
mov [ esp ] edx
xor edx edx
mov edi 0x48
mov ecx ebx
lea eax [ edi + ebx ]
sar ecx 0x1f
cdq
shr ecx 0x1e
idiv ebp
add ecx ebx
movzx eax [ esi + edx ]
mov edx ebx
and ecx 0x1c
sub edx ecx
mov ecx 0x18
shl edx 0x3
sub ecx edx
shl eax cl
mov ecx ebx
inc ebx
and ecx 0xfffffffc
xor [ esp + ecx + 0x8 ] eax
cmp ebx 0x8
jne r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
add edi 0x8
mov ebx eax
push ebx
lea eax [ esp + 0xc ]
push eax
call sub_45a87c
add esp 0x8
mov edx [ esp ]
mov eax [ esp + 0x8 ]
mov [ ebx + edx * 4 ] eax
mov ecx edx
mov eax [ esp + 0xc ]
or ecx 0x1
cmp edx 0xfe
lea edx [ edx + 0x2 ]
mov [ ebx + ecx * 4 ] eax
jl r-xdata
xor ebx ebx
mov [ esp ] edx
xor edx edx
mov edi 0x448
mov ecx ebx
lea eax [ edi + ebx ]
sar ecx 0x1f
cdq
shr ecx 0x1e
idiv ebp
add ecx ebx
movzx eax [ esi + edx ]
mov edx ebx
and ecx 0x1c
sub edx ecx
mov ecx 0x18
shl edx 0x3
sub ecx edx
shl eax cl
mov ecx ebx
inc ebx
and ecx 0xfffffffc
xor [ esp + ecx + 0x8 ] eax
cmp ebx 0x8
jne r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
add edi 0x8
mov ebx eax
push ebx
lea eax [ esp + 0xc ]
push eax
call sub_45a87c
add esp 0x8
mov edx [ esp ]
mov eax [ esp + 0x8 ]
mov [ ebx + edx * 4 + 0x400 ] eax
mov ecx edx
mov eax [ esp + 0xc ]
or ecx 0x1
cmp edx 0xfe
lea edx [ edx + 0x2 ]
mov [ ebx + ecx * 4 + 0x400 ] eax
jl r-xdata
xor ebx ebx
mov [ esp ] edx
xor edx edx
mov edi 0x848
mov ecx ebx
lea eax [ edi + ebx ]
sar ecx 0x1f
cdq
shr ecx 0x1e
idiv ebp
add ecx ebx
movzx eax [ esi + edx ]
mov edx ebx
and ecx 0x1c
sub edx ecx
mov ecx 0x18
shl edx 0x3
sub ecx edx
shl eax cl
mov ecx ebx
inc ebx
and ecx 0xfffffffc
xor [ esp + ecx + 0x8 ] eax
cmp ebx 0x8
jne r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
add edi 0x8
mov ebx eax
push ebx
lea eax [ esp + 0xc ]
push eax
call sub_45a87c
add esp 0x8
mov edx [ esp ]
mov eax [ esp + 0x8 ]
mov [ ebx + edx * 4 + 0x800 ] eax
mov ecx edx
mov eax [ esp + 0xc ]
or ecx 0x1
cmp edx 0xfe
lea edx [ edx + 0x2 ]
mov [ ebx + ecx * 4 + 0x800 ] eax
jl r-xdata
xor ebx ebx
mov [ esp ] edx
xor edx edx
mov edi 0xc48
mov ecx ebx
lea eax [ edi + ebx ]
sar ecx 0x1f
cdq
shr ecx 0x1e
idiv ebp
add ecx ebx
movzx eax [ esi + edx ]
mov edx ebx
and ecx 0x1c
sub edx ecx
mov ecx 0x18
shl edx 0x3
sub ecx edx
shl eax cl
mov ecx ebx
inc ebx
and ecx 0xfffffffc
xor [ esp + ecx + 0x8 ] eax
cmp ebx 0x8
jne r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
add edi 0x8
mov ebx eax
push ebx
lea eax [ esp + 0xc ]
push eax
call sub_45a87c
add esp 0x8
mov edx [ esp ]
mov eax [ esp + 0x8 ]
mov [ ebx + edx * 4 + 0xc00 ] eax
mov ecx edx
mov eax [ esp + 0xc ]
or ecx 0x1
cmp edx 0xfe
lea edx [ edx + 0x2 ]
mov [ ebx + ecx * 4 + 0xc00 ] eax
jl r-xdata
xor ebx ebx
mov [ esp ] edx
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45af9c
push esi
mov esi [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov ecx esi
push 0x20
call sub_45b189
add esp 0x4
xor eax eax
mov [ esi + 0x1048 ] eax
mov [ esi + 0x104c ] eax
mov eax 0x1050
push eax
push esi
lea eax [ esi + 0x1050 ]
push eax
call sub_49a1f0
add esp 0xc
pop esi
retn
sub_45afd7
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebx [ esp + 0x28 ]
mov eax [ rw-data ]
test bl 0x7
mov [ esp + 0x8 ] eax
je r-xdata
mov eax [ esp + 0x20 ]
test ebx ebx
mov ecx [ eax + 0x1048 ]
mov edx [ eax + 0x104c ]
jle r-xdata
push 0x133
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ eax + 0x1048 ] ecx
mov [ eax + 0x104c ] edx
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x24 ]
add ebx 0x8
mov ebp esp
mov esi 0x8
xor ecx [ edi ]
xor edx [ edi + 0x4 ]
push eax
push ebp
call sub_45a87c
add esp 0x8
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
add ebx 0xfffffff8
mov eax ecx
mov [ edi ] cl
mov [ edi + 0x1 ] ch
shr eax 0x10
mov [ edi + 0x2 ] al
mov eax ecx
shr eax 0x18
mov [ edi + 0x3 ] al
mov eax edx
mov [ edi + 0x4 ] dl
mov [ edi + 0x5 ] dh
shr eax 0x10
mov [ edi + 0x6 ] al
mov eax edx
shr eax 0x18
mov [ edi + 0x7 ] al
mov eax [ esp + 0x20 ]
add edi 0x8
cmp ebx esi
jg r-xdata
sub_45b095
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov ecx [ esp + 0x34 ]
mov eax [ rw-data ]
mov esi [ esp + 0x2c ]
test cl 0x7
mov [ esp + 0x14 ] eax
je r-xdata
mov ebx [ esi + 0x2098 ]
mov eax [ esi + 0x209c ]
test ecx ecx
jle r-xdata
push 0x161
push r--data
push r--data
mov edi ecx
call sub_4a509d
mov ecx edi
add esp 0xc
mov esi ebx
mov edx eax
mov ebp [ esp + 0x30 ]
lea edx [ esi + 0x1050 ]
add ecx 0x8
mov [ esp ] edx
mov [ esp + 0x8 ] ecx
mov ecx [ ebp ]
mov [ esp + 0x4 ] ecx
mov esi [ ebp + 0x4 ]
mov edx esi
push [ esp ]
lea edi [ esp + 0x10 ]
push edi
mov edi eax
call sub_45b200
mov edx esi
mov esi [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
add esp 0x8
xor ebx [ esp + 0xc ]
xor edi [ esp + 0x10 ]
add ecx 0xfffffff8
mov eax ebx
mov [ ebp ] bl
mov [ ebp + 0x1 ] bh
shr ebx 0x18
shr eax 0x10
mov [ ebp + 0x2 ] al
mov [ ebp + 0x3 ] bl
mov ebx edi
mov eax ebx
mov [ ebp + 0x4 ] bl
mov [ ebp + 0x5 ] bh
shr ebx 0x18
shr eax 0x10
mov [ ebp + 0x6 ] al
mov eax 0x8
mov [ ebp + 0x7 ] bl
add ebp 0x8
mov ebx esi
cmp ecx eax
mov eax edx
jg r-xdata
jmp r-xdata
mov eax [ esp + 0x2c ]
mov [ eax + 0x2098 ] esi
mov [ eax + 0x209c ] edx
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45b189
push ebx
push edi
push esi
mov eax ecx
mov ecx 0x12
mov esi r--data
movzx ebx [ esp + 0x10 ]
lea edi [ eax + 0x1000 ]
[ edi ] [ esi ]
xor ecx ecx
movups xmm0 [ ecx + r--data ]
movups xmm1 [ ecx + r--data ]
movups xmm2 [ ecx + r--data ]
movups [ eax + ecx ] xmm0
movups [ eax + ecx + 0x400 ] xmm1
movups xmm1 [ ecx + r--data ]
movups [ eax + ecx + 0x800 ] xmm2
movups [ eax + ecx + 0xc00 ] xmm1
add ecx 0x10
cmp ecx 0x400
jne r-xdata
xor ecx ecx
movsx esi bx
push ecx
push ecx
push esi
push edx
push eax
call sub_45abfa
add esp 0x14
pop esi
pop edi
pop ebx
retn
sub_45b200
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
xor ecx [ esi + 0x1044 ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1040 ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x103c ]
mov ecx edx
mov eax edx
shr ecx 0xe
shr eax 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + eax * 4 ]
movzx eax dh
xor ecx [ esi + eax * 4 + 0x800 ]
movzx eax dl
add ecx [ esi + eax * 4 + 0xc00 ]
xor ecx ebx
xor ecx [ esi + 0x1038 ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1034 ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x1030 ]
mov ecx edx
mov eax edx
shr ecx 0xe
shr eax 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + eax * 4 ]
movzx eax dh
xor ecx [ esi + eax * 4 + 0x800 ]
movzx eax dl
add ecx [ esi + eax * 4 + 0xc00 ]
xor ecx ebx
xor ecx [ esi + 0x102c ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1028 ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x1024 ]
mov ecx edx
mov eax edx
shr ecx 0xe
shr eax 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + eax * 4 ]
movzx eax dh
xor ecx [ esi + eax * 4 + 0x800 ]
movzx eax dl
add ecx [ esi + eax * 4 + 0xc00 ]
xor ecx ebx
xor ecx [ esi + 0x1020 ]
mov ebx ecx
mov eax ecx
shr ebx 0xe
shr eax 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + eax * 4 ]
movzx eax ch
xor ebx [ esi + eax * 4 + 0x800 ]
movzx eax cl
add ebx [ esi + eax * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x101c ]
mov edx ebx
mov eax ebx
shr edx 0xe
shr eax 0x18
and edx 0x3fc
mov edx [ esi + edx + 0x400 ]
add edx [ esi + eax * 4 ]
movzx eax bh
xor edx [ esi + eax * 4 + 0x800 ]
movzx eax bl
add edx [ esi + eax * 4 + 0xc00 ]
xor edx ecx
xor edx [ esi + 0x1018 ]
mov eax edx
mov ecx edx
shr eax 0xe
shr ecx 0x18
and eax 0x3fc
mov eax [ esi + eax + 0x400 ]
add eax [ esi + ecx * 4 ]
movzx ecx dh
xor eax [ esi + ecx * 4 + 0x800 ]
movzx ecx dl
add eax [ esi + ecx * 4 + 0xc00 ]
xor eax ebx
xor eax [ esi + 0x1014 ]
mov ebx eax
mov ecx eax
shr ebx 0xe
shr ecx 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + ecx * 4 ]
movzx ecx ah
xor ebx [ esi + ecx * 4 + 0x800 ]
movzx ecx al
add ebx [ esi + ecx * 4 + 0xc00 ]
xor ebx edx
xor ebx [ esi + 0x1010 ]
mov ecx ebx
mov edx ebx
shr ecx 0xe
shr edx 0x18
and ecx 0x3fc
mov ecx [ esi + ecx + 0x400 ]
add ecx [ esi + edx * 4 ]
movzx edx bh
xor ecx [ esi + edx * 4 + 0x800 ]
movzx edx bl
add ecx [ esi + edx * 4 + 0xc00 ]
xor ecx eax
xor ecx [ esi + 0x100c ]
mov eax ecx
mov edx ecx
shr eax 0xe
shr edx 0x18
and eax 0x3fc
mov eax [ esi + eax + 0x400 ]
add eax [ esi + edx * 4 ]
movzx edx ch
xor eax [ esi + edx * 4 + 0x800 ]
movzx edx cl
xor ecx [ esi + 0x1004 ]
add eax [ esi + edx * 4 + 0xc00 ]
xor eax ebx
xor eax [ esi + 0x1008 ]
mov ebx eax
mov edx eax
shr ebx 0xe
shr edx 0x18
and ebx 0x3fc
mov ebx [ esi + ebx + 0x400 ]
add ebx [ esi + edx * 4 ]
movzx edx ah
xor ebx [ esi + edx * 4 + 0x800 ]
movzx edx al
xor eax [ esi + 0x1000 ]
add ebx [ esi + edx * 4 + 0xc00 ]
mov [ edi ] eax
xor ecx ebx
mov [ edi + 0x4 ] ecx
pop esi
pop edi
pop ebx
retn
sub_45b5af
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov ebx [ esp + 0x38 ]
mov eax [ rw-data ]
mov esi [ esp + 0x30 ]
test bl 0x7
mov [ esp + 0x18 ] eax
je r-xdata
mov eax [ esi + 0x1048 ]
mov edi [ esi + 0x104c ]
test ebx ebx
jle r-xdata
push 0x1b5
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x1048 ] eax
mov [ esi + 0x104c ] edi
mov ecx [ esp + 0x18 ]
call sub_497c4a
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx ebx
mov ebp [ esp + 0x34 ]
mov edx 0xfffffff7
mov [ esp + 0x4 ] edi
not ecx
cmp ecx 0xfffffff6
cmovg edx ecx
lea ecx [ ebx + edx + 0x8 ]
add ebx 0x8
mov [ esp ] ecx
mov ecx eax
mov [ esp + 0xc ] ebx
mov edx edi
mov [ esp + 0x8 ] ecx
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_45a87c
add esp 0x8
movzx ebx [ ebp ]
movzx edx [ ebp + 0x1 ]
mov esi [ esp + 0x10 ]
movzx ecx [ ebp + 0x2 ]
movzx eax [ ebp + 0x3 ]
shl ebx 0x18
shl edx 0x10
shl ecx 0x8
xor ebx esi
xor edx esi
mov esi [ esp + 0x30 ]
shr ebx 0x18
shr edx 0x10
mov [ ebp ] bl
mov [ ebp + 0x1 ] dl
xor ecx [ esp + 0x10 ]
mov [ ebp + 0x2 ] ch
xor eax [ esp + 0x10 ]
mov [ ebp + 0x3 ] al
movzx ebx [ ebp + 0x4 ]
movzx edx [ ebp + 0x5 ]
movzx ecx [ ebp + 0x6 ]
movzx eax [ ebp + 0x7 ]
shl ebx 0x18
shl edx 0x10
shl ecx 0x8
xor ebx [ esp + 0x14 ]
shr ebx 0x18
mov [ ebp + 0x4 ] bl
xor edx [ esp + 0x14 ]
mov ebx [ esp + 0xc ]
shr edx 0x10
mov [ ebp + 0x5 ] dl
xor ecx [ esp + 0x14 ]
mov [ ebp + 0x6 ] ch
mov ecx 0x8
xor eax [ esp + 0x14 ]
mov [ ebp + 0x7 ] al
xor eax eax
cmp edi 0xffffffff
lea edi [ edi + 0x1 ]
sete al
add ebx 0xfffffff8
add ebp 0x8
add eax [ esp + 0x8 ]
cmp ebx ecx
jg r-xdata
mov ecx [ esp ]
mov edi [ esp + 0x4 ]
shr ecx 0x3
lea edi [ ecx + edi + 0x1 ]
sub_45b710
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov edx [ esp + 0x28 ]
mov eax [ rw-data ]
mov esi [ esp + 0x20 ]
test dl 0x7
mov [ esp + 0x8 ] eax
je r-xdata
mov ebx [ esi + 0x1048 ]
mov eax [ esi + 0x104c ]
mov ebp esi
test edx edx
jle r-xdata
push 0x17d
push r--data
push r--data
mov edi edx
call sub_4a509d
mov edx edi
add esp 0xc
mov [ ebp + 0x1048 ] ebx
mov [ ebp + 0x104c ] eax
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x24 ]
add edx 0x8
mov esi edx
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
bswap edx
bswap ecx
xor edx eax
xor ecx ebx
push ebp
lea eax [ esp + 0x4 ]
push eax
call sub_45a87c
mov edx esi
add esp 0x8
mov ebx [ esp ]
mov eax [ esp + 0x4 ]
add edx 0xfffffff8
mov esi 0x8
mov ecx ebx
shr ecx 0x18
mov [ edi ] cl
mov ecx ebx
shr ecx 0x10
mov [ edi + 0x1 ] cl
mov ecx eax
mov [ edi + 0x2 ] bh
mov [ edi + 0x3 ] bl
shr ecx 0x18
mov [ edi + 0x4 ] cl
mov ecx eax
shr ecx 0x10
mov [ edi + 0x5 ] cl
mov [ edi + 0x6 ] ah
mov [ edi + 0x7 ] al
add edi 0x8
cmp edx esi
jg r-xdata
sub_45b7de
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov ecx [ esp + 0x30 ]
mov eax [ rw-data ]
test cl 0x7
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ esp + 0x28 ]
test ecx ecx
mov ebx [ eax + 0x1048 ]
mov edx [ eax + 0x104c ]
jle r-xdata
push 0x199
push r--data
push r--data
mov esi ecx
call sub_4a509d
mov ecx esi
add esp 0xc
mov esi ebx
mov edi edx
mov ebp [ esp + 0x2c ]
add ecx 0x8
mov [ esp ] edx
mov [ esp + 0x4 ] ecx
mov esi [ ebp ]
mov edi [ ebp + 0x4 ]
bswap esi
bswap edi
mov ecx esi
mov edx edi
push eax
lea eax [ esp + 0xc ]
push eax
call sub_45b200
mov ecx [ esp + 0xc ]
add esp 0x8
mov edx [ esp ]
xor ebx [ esp + 0x8 ]
add ecx 0xfffffff8
mov eax ebx
xor edx [ esp + 0xc ]
shr eax 0x18
mov [ ebp ] al
mov eax ebx
shr eax 0x10
mov [ ebp + 0x1 ] al
mov eax edx
mov [ ebp + 0x2 ] bh
mov [ ebp + 0x3 ] bl
mov ebx esi
shr eax 0x18
mov [ ebp + 0x4 ] al
mov eax edx
shr eax 0x10
mov [ ebp + 0x5 ] al
mov eax [ esp + 0x28 ]
mov [ ebp + 0x6 ] dh
mov [ ebp + 0x7 ] dl
mov edx 0x8
add ebp 0x8
cmp ecx edx
mov edx edi
jg r-xdata
jmp r-xdata
mov [ eax + 0x1048 ] esi
mov [ eax + 0x104c ] edi
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45b8e2
push edi
push esi
mov edi [ esp + 0xc ]
mov eax [ edi ]
inc eax
push 0x4
push eax
call sub_43f807
add esp 0x8
mov esi eax
test esi esi
je r-xdata
call sub_4a519f
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
push esi
call sub_49a1f0
add esp 0xc
mov eax esi
pop esi
pop edi
retn
sub_45b936
push edi
push esi
mov edi [ esp + 0xc ]
test edi edi
jns r-xdata
mov ecx edi
sar ecx 0x1f
shr ecx 0x1b
add ecx edi
sar ecx 0x5
inc ecx
call sub_45b97c
mov esi eax
xor eax eax
inc eax
push eax
push edi
push esi
call sub_45b9c6
add esp 0xc
mov eax esi
pop esi
pop edi
retn
push 0x51
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_45b97c
push edi
push esi
mov esi ecx
cmp esi 0x3ffffff
jb r-xdata
lea eax [ esi + 0x1 ]
push 0x4
push eax
call sub_43f807
add esp 0x8
mov edi eax
lea eax [ esi * 4 + 0x4 ]
push eax
push 0x0
push edi
call sub_49acf0
add esp 0xc
mov [ edi ] esi
mov eax edi
pop esi
pop edi
retn
push 0x2d
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_45b9c6
push edi
push esi
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
test ecx ecx
js r-xdata
test edx edx
jne r-xdata
mov eax [ esp + 0xc ]
mov esi [ eax ]
shl esi 0x5
cmp esi ecx
jle r-xdata
call sub_4a519f
pop esi
pop edi
retn
mov esi ecx
shr esi 0x5
xor edi edi
inc edi
shl edi cl
test edx edx
je r-xdata
not edi
and [ eax + esi * 4 + 0x4 ] edi
jmp r-xdata
or [ eax + esi * 4 + 0x4 ] edi
jmp r-xdata
sub_45ba09
push ebp
push ebx
push edi
push esi
sub esp 0x40
mov ebx [ esp + 0x5c ]
mov esi [ esp + 0x54 ]
mov eax [ ebx ]
cmp [ ebx + eax * 4 ] 0x0
jne r-xdata
push ebx
push esi
call sub_45be66
add esp 0x8
mov ebp [ ebx ]
mov edi eax
push 0x4
push ebp
call sub_43f807
add esp 0x8
test ebp ebp
mov [ esp + 0x10 ] eax
jle r-xdata
push 0x3b9
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x4
push ebp
call sub_43f807
add esp 0x8
mov esi [ edi ]
mov ecx ebp
mov ebx eax
sub ecx esi
mov eax esi
test ecx ecx
jle r-xdata
mov edx [ esp + 0x10 ]
mov eax ebp
xor ecx ecx
neg eax
test eax eax
mov [ esp + 0x24 ] ebx
jle r-xdata
shl ecx 0x2
push ecx
push 0x0
push ebx
call sub_49acf0
add esp 0xc
mov eax [ edi ]
mov esi [ ebx ]
add esi ecx
dec ecx
mov esi [ ebx + esi * 4 ]
mov [ edx ] esi
add edx 0x4
cmp eax ecx
jne r-xdata
lea ebx [ ebp + ebp ]
mov esi 0x4
push esi
push ebx
call sub_43f807
add esp 0x8
mov [ esp + 0x4 ] eax
push esi
push ebx
call sub_43f807
add esp 0x8
test ebp ebp
mov [ esp + 0x8 ] eax
mov [ esp + 0x1c ] ebp
mov [ esp + 0x28 ] ebx
jle r-xdata
mov ecx [ esp + 0x24 ]
lea edx [ ebp * 4 ]
shl esi 0x2
sub edx esi
xor esi esi
add ecx edx
xor edx edx
mov eax [ esp + 0x4 ]
xor esi esi
mov [ eax + ebx * 4 - 0x4 ] 0x1
xor eax eax
inc eax
test ebx ebx
cmovg eax ebx
xor esi esi
shl eax 0x2
push eax
push esi
mov ebx [ esp + 0xc ]
push ebx
call sub_49acf0
add esp 0xc
mov eax [ esp + 0x28 ]
cmp ebp 0x33
mov [ ebx + eax * 4 - 0x4 ] 0x1
jl r-xdata
add eax edx
dec edx
mov eax [ edi + eax * 4 ]
mov [ ecx + esi * 4 ] eax
inc esi
mov eax [ edi ]
cmp eax esi
jg r-xdata
mov ebx 0x1f
xor ecx ecx
jmp r-xdata
xor ecx ecx
mov ebx 0x1f
push 0x4
push esi
call sub_43f807
add esp 0x8
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x58 ]
mov eax [ eax ]
test eax eax
jle r-xdata
mov eax [ esp + 0x1c ]
xor esi esi
mov eax [ esp + 0x10 ]
mov [ esp ] ebx
mov [ esp + 0xc ] ecx
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] edi
mov edx 0x10
xor ebp ebp
mov eax [ eax ]
mov esi eax
mov ebx ebp
xor edx edx
test ebp ebp
lea ebp [ ebp - 0x1 ]
mov ebx 0x1f
setle dl
cmovle ebp ebx
add ecx edx
mov ebx ebp
cmp eax ecx
jg r-xdata
mov ecx eax
mov edx eax
shr ecx 0x1
sub edx ecx
neg ecx
lea eax [ eax + ecx + 0x1 ]
lea esi [ esi + edx * 4 + 0x4 ]
cmp edx 0x31
jg r-xdata
jmp r-xdata
mov ecx 0x20
mov edi esi
sub ecx edx
shr edi cl
mov ecx 0x0
test edi edi
cmove ecx edx
shl esi cl
add ebp ecx
sar edx 0x1
jne r-xdata
mov esi [ esp + 0x1c ]
test ebp ebp
mov [ esp + 0x34 ] ebp
je r-xdata
mov ebp [ esp + 0x58 ]
mov edx eax
sub edx ecx
mov edx [ ebp + edx * 4 ]
mov ebp ebx
bt edx ebx
jb r-xdata
jmp r-xdata
mov ebx [ esp + 0xc ]
mov ebp [ esp ]
mov ecx eax
call sub_45bea4
mov ecx eax
mov eax [ esp + 0x58 ]
mov eax [ eax ]
cmp ebx eax
jge r-xdata
mov edx ebp
mov ecx edx
shl eax cl
cmp esi 0x2
jl r-xdata
mov edi [ esp + 0x4 ]
mov esi [ esp + 0x8 ]
mov [ esp + 0x18 ] edi
mov edx [ esp + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x8 ]
mov edi edx
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov ecx 0x20
sub ecx edx
shr esi cl
or eax esi
mov eax [ esi ]
cmp eax 0x2
jb r-xdata
mov eax ebp
lea ecx [ edi + ebp * 4 ]
xor edx edx
neg eax
mov esi [ esp + 0x8 ]
mov [ esp + 0xc ] ebx
mov ebx [ esp + 0x14 ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x4 ] edx
lea edi [ ebp * 8 ]
push edi
mov ebx [ esp + 0x1c ]
push ebx
call sub_48f5d3
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x38 ]
shl eax 0x2
push eax
mov ebx [ esp + 0x30 ]
push ebx
call sub_48f5d3
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
push edi
mov edi [ esp + 0x4 ]
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
shl ebp 0x2
push ebp
mov edi [ esp + 0x14 ]
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
push ebp
mov edi [ esp + 0x28 ]
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x3c ]
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov eax esi
add esp 0x40
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esi + eax * 4 ] 0x0
jne r-xdata
mov ebx [ esi ]
mov edi [ ecx ]
add ecx 0x4
add ebx edx
dec edx
cmp eax edx
mov [ esi + ebx * 4 ] edi
jne r-xdata
test ebp ebp
js r-xdata
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
mov ebp esi
mov esi [ esp + 0x4 ]
mov edx edi
mov edi [ esp + 0x14 ]
mov ebx edx
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x8 ]
mov [ esp + 0x8 ] esi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x4 ] eax
mov eax ebp
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
lea ecx [ ebx + ebp * 4 ]
push esi
push ebp
push edi
call sub_45bf31
add esp 0xc
mov edx [ esp + 0x28 ]
mov ecx edi
push [ esp + 0x34 ]
push [ esp + 0x34 ]
push 0x0
push ebp
push [ esp + 0x20 ]
call sub_45c27a
add esp 0x14
mov eax esi
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x8 ]
mov edx ebx
jmp r-xdata
dec eax
cmp eax 0x1
mov [ esi ] eax
ja r-xdata
mov eax [ esp + 0x5c ]
mov [ esp ] esi
mov ecx [ eax ]
call sub_45b97c
mov ebp [ esp + 0x1c ]
mov esi eax
test ebp ebp
jle r-xdata
mov [ esp ] ebp
mov ebp [ esp + 0x1c ]
lea ecx [ edi + ebp * 4 ]
mov edx ecx
push eax
push ebp
push ebx
mov esi ebx
mov ebx eax
call sub_45bf31
add esp 0xc
mov edx [ esp + 0x28 ]
mov [ esp + 0x14 ] esi
mov ecx esi
push [ esp + 0x34 ]
push [ esp + 0x34 ]
push 0x0
push ebp
mov eax [ esp + 0x20 ]
mov esi ebx
push eax
call sub_45c27a
add esp 0x14
mov eax [ esp + 0x58 ]
mov edx [ esp ]
mov ecx eax
mov eax [ ecx ]
sub eax [ esp + 0xc ]
mov eax [ ecx + eax * 4 ]
bt eax edx
jae r-xdata
mov eax [ esp + 0x58 ]
mov ebx [ esp + 0xc ]
mov eax [ eax ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x4 ]
mov [ esp + 0x8 ] esi
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov ebp [ esp ]
test ebp ebp
lea ebp [ ebp - 0x1 ]
jg r-xdata
inc ebx
mov ebp 0x1f
cmp ebx eax
jl r-xdata
sub_45be66
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov ecx [ ebx ]
call sub_45b97c
mov esi eax
mov ecx edi
mov edx ebx
push 0x0
push esi
call sub_45dfb3
add esp 0x8
mov eax [ esi ]
cmp eax 0x2
jb r-xdata
mov eax esi
pop esi
pop edi
pop ebx
retn
cmp [ esi + eax * 4 ] 0x0
jne r-xdata
dec eax
cmp eax 0x1
mov [ esi ] eax
ja r-xdata
sub_45bea4
push ebp
push ebx
push edi
push esi
mov esi ecx
test esi esi
js r-xdata
mov eax esi
xor edx edx
shr eax 0x10
lea ecx [ eax + 0x1 ]
or eax 0x80000000
div ecx
mov ecx eax
shl ecx 0x10
mov eax ecx
mul esi
add eax ecx
adc edx 0x0
xor edi edi
not eax
inc edi
not edx
add edi eax
adc edx 0x0
mov eax edx
mul ecx
mov ecx edx
shld ecx eax 0x1
mov eax ecx
mul esi
add eax ecx
adc edx 0x0
js r-xdata
push 0x22c
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edi esi
xor ebx ebx
not edi
add edi 0x1
setb bl
dec ecx
mov ebp edi
add ebp eax
adc edx ebx
dec ecx
sub eax esi
dec edx
js r-xdata
mov eax ecx
pop esi
pop edi
pop ebx
pop ebp
retn
add eax esi
adc edx 0x0
inc ecx
test edx edx
jns r-xdata
jmp r-xdata
sub_45bf31
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov ebx [ esp + 0x34 ]
mov ebp [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
mov [ esp + 0x10 ] ecx
cmp ebx 0x32
jle r-xdata
test ebx ebx
jle r-xdata
mov ebp ebx
mov esi [ esp + 0x38 ]
mov edi ebx
shr ebp 0x1
sub edi ebp
lea eax [ edi + 0x1 ]
mov [ esp + 0xc ] eax
push esi
push ebp
push [ esp + 0x38 ]
call sub_45bf31
add esp 0xc
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x30 ]
and ebx 0xfffffffe
mov [ esp ] ebx
lea edx [ ecx + ebp * 4 ]
mov ecx [ esp + 0x10 ]
lea eax [ eax + ebx * 4 ]
lea ecx [ ecx + ebp * 4 ]
push esi
push edi
push eax
call sub_45bf31
add esp 0xc
xor eax eax
test ebp ebp
mov [ esi + edi * 4 + 0x8 ] eax
mov [ esp + 0x4 ] edi
mov [ esi + edi * 4 + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esp + 0x8 ] ebp
je r-xdata
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
lea edi [ ebx + ebx ]
inc eax
test edi edi
cmovg eax edi
xor ecx ecx
shl eax 0x2
push eax
push ecx
push ebp
call sub_49acf0
add esp 0xc
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
lea edx [ ebp + edi * 4 ]
mov [ esp + 0x4 ] edx
lea ecx [ ecx + ebx * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esp ] eax
mov [ esp + 0xc ] ecx
mov eax [ esp + 0x4 ]
lea edx [ esi + eax * 4 + 0x4 ]
test eax eax
jle r-xdata
mov edi [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov ebx [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
mov edx ecx
mov eax edi
lea ecx [ edi + edi ]
sub eax edx
sub ecx edx
lea eax [ esi + eax * 4 ]
lea ecx [ esi + ecx * 4 ]
lea esi [ ecx + ebx - 0x4 ]
mov ecx [ esp ]
mov eax [ esi ]
mul [ ecx ]
xor ecx ecx
mov ebp eax
mov eax [ esp + 0x4 ]
add edi [ eax + ebx - 0x4 ]
setb cl
add edi ebp
mov [ eax + ebx - 0x4 ] edi
mov edi ecx
adc edi edx
add ebx 0xfffffffc
mov ecx [ esp + 0xc ]
cmp esi [ esp + 0x14 ]
ja r-xdata
mov eax [ esp + 0x4 ]
mov [ eax + ebx - 0x4 ] edi
mov eax [ esp ]
mov edx [ esp + 0x8 ]
cmp eax [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
ja r-xdata
mov [ esi ] 0x0
xor ebx ebx
mov edi [ esp + 0x34 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
xor ebx ebx
mov [ esp + 0x18 ] edx
lea eax [ eax + edi * 4 - 0x4 ]
mov edi [ ebp ]
add ebp 0x4
mov [ eax ] edi
add eax 0x4
mov edi [ ebx ]
add ebx 0x4
mov [ ecx ] edi
add ecx 0x4
dec edx
jne r-xdata
mov eax [ esp + 0x4 ]
add [ esp ] 0xfffffffc
xor ebx ebx
xor edi edi
lea eax [ eax - 0x4 ]
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov edx [ esp ]
add ebx ebx
mov edi ebp
sub ebx edx
lea ecx [ esi + ebx * 4 ]
xor edx edx
add ebx [ esi + ecx * 4 - 0x4 ]
setb dl
add ebx [ eax ]
mov [ esi + ecx * 4 - 0x4 ] ebx
mov ebx edx
adc ebx 0x0
dec ecx
add eax 0xfffffffc
cmp ecx 0x1
jg r-xdata
mov [ esi ] ebx
lea ecx [ edi + edi + 0x1 ]
xor ebp ebp
mov eax [ esp + 0x14 ]
sub ecx [ esp ]
mov edx [ esp + 0x18 ]
lea eax [ eax + edi * 4 - 0x4 ]
mov edi [ esp + 0xc ]
lea ecx [ esi + ecx * 4 ]
mov [ esi + 0x4 ] eax
mov ecx [ esp + 0x34 ]
cmp [ esp + 0x4 ] 0x0
js r-xdata
mov eax [ esp + 0x34 ]
xor edi edi
lea ecx [ eax + eax + 0x1 ]
lea edx [ ebp + eax * 8 - 0x4 ]
sub ecx [ esp ]
mov ebx [ edi ]
add edi 0x4
mov [ ecx ] ebx
add ecx 0x4
dec edx
jne r-xdata
xor ebx ebx
add ebp [ ecx ]
setb bl
add ebp [ eax ]
adc ebx 0x0
dec edi
mov [ ecx ] ebp
add eax 0xfffffffc
add ecx 0xfffffffc
cmp edi 0x1
mov ebp ebx
jg r-xdata
jmp r-xdata
mov edx [ esp + 0x8 ]
lea eax [ ecx + ecx + 0x3 ]
mov edi eax
lea ebx [ edx + edx ]
lea edx [ edx * 4 ]
mov [ esp + 0x4 ] ebx
sub edi ebx
lea ebx [ ecx * 4 + 0x3 ]
sub ebx edx
xor ebp ebp
mov [ esp ] ebx
lea ebx [ esi + ebx * 4 ]
inc ebp
xor eax eax
add edi [ esi + ecx * 4 ]
setb al
add edi [ edx ]
adc eax 0x0
mov [ esi + ecx * 4 ] edi
dec ecx
add edx 0xfffffffc
cmp ecx 0x1
mov edi eax
jg r-xdata
mov [ edx ] ebx
mov ecx esi
mov ebx [ esp + 0xc ]
mov eax ebx
lea edi [ esi + ebx * 8 ]
shl eax 0x4
add eax esi
push eax
push ebx
push edi
call sub_45bf31
add esp 0xc
xor eax eax
cmp [ esp ] 0x0
mov ebp [ esp + 0x30 ]
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
jle r-xdata
mov edx [ esi + edi * 4 - 0x8 ]
xor ecx ecx
add ebp [ ebx ]
not edx
setb cl
add ebp edx
adc ecx 0x0
dec edi
mov [ ebx ] ebp
add ebx 0xfffffffc
cmp edi 0x1
mov ebp ecx
jg r-xdata
mov edi [ esp + 0x34 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp ]
mov ebp [ esp + 0x30 ]
sub eax [ esp + 0x4 ]
lea edx [ edi + edx ]
lea ecx [ esi + ecx * 4 ]
xor esi esi
lea edx [ ebp + edx * 4 - 0x4 ]
xor ebx ebx
add esi [ edx ]
setb bl
add esi [ ecx ]
mov [ edx ] esi
mov esi ebx
adc esi 0x0
dec eax
add ecx 0xfffffffc
add edx 0xfffffffc
cmp eax 0x1
jg r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x8 ]
mov eax edi
lea edi [ ecx + ecx * 2 - 0x3 ]
sub edi eax
xor eax eax
add esi [ ebp + edi * 4 ]
setb al
mov [ ebp + edi * 4 ] esi
lea edi [ edi - 0x1 ]
mov esi eax
jb r-xdata
push 0x135
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ edi + 0x1 ]
test eax eax
jg r-xdata
sub_45c27a
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov [ esp + 0x8 ] edx
sub edx [ esp + 0x5c ]
mov ebp [ esp + 0x60 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x18 ] edx
js r-xdata
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x5c ]
jle r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov esi [ esp + 0x68 ]
mov [ esp + 0x4 ] 0x0
inc eax
mov edi eax
mov eax [ esp + 0x5c ]
sub edi ecx
mov edx eax
lea eax [ edx - 0x1 ]
add edi edx
mov [ esp + 0x24 ] eax
mov eax ecx
mov [ esp + 0x30 ] edi
shl eax 0x5
lea esi [ esi + eax - 0x1f ]
mov eax edx
shl eax 0x5
sub esi eax
lea eax [ ecx - 0x1 ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x1c ] esi
lea eax [ eax - 0x4 ]
mov [ esp + 0x38 ] eax
test ebp ebp
je r-xdata
sub eax [ esp + 0x8 ]
mov ecx [ esp + 0x58 ]
mov edi [ esp + 0xc ]
xor edx edx
lea esi [ ecx + eax * 4 ]
mov eax [ esp + 0x4 ]
add [ esp + 0x1c ] 0xffffffe0
mov ecx [ esp + 0x20 ]
cmp eax [ esp + 0x18 ]
mov [ esp + 0x4 ] ecx
jl r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x4 ]
lea ecx [ ecx + edx ]
shl ecx 0x5
sub ecx [ esp + 0x68 ]
mov [ esp + 0x28 ] ecx
add esp 0x44
xor edx edx
mov ecx ebp
inc edx
push 0x0
call sub_45e143
add esp 0x48
jmp r-xdata
cmp [ edi + edx * 4 ] ecx
mov bl 0x14
ja r-xdata
mov ecx [ esi + edx * 4 ]
mov ecx [ esp + 0x4 ]
lea eax [ ecx + 0x1 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0xc ]
mov eax [ eax + ecx * 4 ]
test eax eax
je r-xdata
mov esi ecx
mov ecx 0x20
mov ebx edi
sub ecx edx
shr ebx cl
test ebx ebx
mov ebx 0x0
cmove ebx edx
mov ecx ebx
shl edi cl
lea ecx [ ebx + esi ]
sar edx 0x1
jne r-xdata
mov [ esp ] ecx
mov ecx [ esp ]
shl eax cl
mov ecx [ esp ]
test ecx ecx
jle r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov cl 0x1
jb r-xdata
mov ebx 0x0
mul [ esp + 0x64 ]
mov eax [ esp + 0x28 ]
lea eax [ eax + ecx ]
xor ecx ecx
mov [ esp + 0x10 ] edx
inc ecx
mov edi ecx
sub edi eax
js r-xdata
mov ecx [ esp + 0x20 ]
cmp ecx [ esp + 0x8 ]
jge r-xdata
test cl cl
jne r-xdata
mov ecx ebx
cmp edi 0xffffffe0
jle r-xdata
mov ecx [ esp + 0x18 ]
mov eax edi
mov edx edi
shr eax 0x5
sub ecx eax
and edx 0x1f
mov [ esp + 0x2c ] edx
je r-xdata
mov ecx [ esp ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov edi [ esp ]
mov edx [ ecx + edx * 4 + 0x4 ]
mov ecx 0x20
sub ecx edi
shr edx cl
mov ecx edi
or eax edx
jmp r-xdata
cmp cl 0x14
jne r-xdata
inc edx
cmp edx [ esp + 0x8 ]
jl r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp ]
mov edx [ esp + 0x10 ]
xor edi edi
lea ecx [ eax + ecx - 0x1 ]
shr edx cl
mov ecx [ esp + 0x18 ]
test edx edx
mov [ esp + 0x10 ] edx
je r-xdata
mov eax [ esp + 0x24 ]
lea eax [ eax + ecx ]
cmp eax [ esp + 0x4 ]
jl r-xdata
add ecx [ esp + 0x24 ]
cmp ecx [ esp + 0x4 ]
jl r-xdata
cmp [ esp + 0x8 ] 0x0
mov edi [ esp + 0x5c ]
jle r-xdata
mov ecx eax
add ecx edx
mov ecx 0x0
js r-xdata
jmp r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x38 ]
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x5c ]
xor ebp ebp
lea esi [ eax + ecx * 4 ]
dec ecx
xor ebx ebx
inc ebx
mov [ esp ] ecx
mov eax 0x20
mov [ esp + 0x14 ] edi
xor ecx ecx
sub eax [ esp + 0x2c ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x1c ]
sub eax ebx
sub eax esi
mov esi [ esp + 0x34 ]
shr eax 0x5
sub esi eax
mov eax [ esp + 0x5c ]
xor edi edi
xor ebp ebp
inc edi
mov esi [ esp + 0xc ]
inc [ esp + 0x8 ]
dec edi
xor eax eax
inc eax
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
mov eax [ eax + ecx * 4 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx ebp
push edi
call sub_45e143
add esp 0x4
mul [ esp + 0x10 ]
add eax ebp
adc edx 0x0
xor ecx ecx
add ebx [ esi + edi * 4 ]
not eax
mov ebp edx
setb cl
add ebx eax
mov [ esi + edi * 4 ] ebx
adc ecx 0x0
mov eax [ esp ]
mov ebx ecx
lea eax [ eax + edi - 0x1 ]
dec edi
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0x58 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov eax [ esp + 0x10 ]
mul ebx
mov ebp eax
add ebp ecx
mov ecx [ esp + 0x2c ]
mov eax ebp
adc edx 0x0
xor ebx ebx
shl eax cl
mov ecx [ esp + 0xc ]
or eax [ esp + 0x40 ]
add edi [ ecx + esi * 4 ]
not eax
setb bl
add edi eax
mov [ ecx + esi * 4 ] edi
adc ebx 0x0
dec esi
mov ecx [ esp + 0x3c ]
mov eax [ esp ]
mov edi ebx
shr ebp cl
dec eax
cmp esi [ esp + 0x4 ]
mov ecx edx
jge r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp ]
mov ebx [ eax + edx * 4 - 0x4 ]
xor ecx ecx
mov ecx [ esp + 0x58 ]
mov ecx [ ecx + edi * 4 ]
jmp r-xdata
mov edx 0x10
xor ecx ecx
mov edi eax
test edi edi
mov eax 0x0
jle r-xdata
mov ebp [ esp + 0x60 ]
mov edi [ esp + 0x14 ]
mov edx eax
test eax eax
mov ebx 0x0
mov [ esp + 0x40 ] ebp
mov [ esp ] edx
jle r-xdata
jmp r-xdata
test edi edi
js r-xdata
not ecx
xor edx edx
add ecx eax
mov eax [ esp + 0x8 ]
setb dl
add ecx [ esi + eax * 4 - 0x8 ]
adc edx 0x0
mov [ esi + eax * 4 - 0x8 ] ecx
dec eax
dec edi
mov [ esp + 0x8 ] eax
cmp eax 0x1
mov eax edx
jg r-xdata
sub_45c5e9
push ebp
push ebx
push edi
push esi
sub esp 0x40
mov eax [ esp + 0x58 ]
mov edi [ esp + 0x5c ]
mov [ esp + 0x18 ] eax
mov eax [ edi ]
mov esi [ esp + 0x54 ]
cmp [ edi + eax * 4 ] 0x0
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
push 0x42c
push r--data
push r--data
call sub_4a509d
add esp 0xc
push edi
push esi
call sub_45be66
add esp 0x8
mov ebx [ edi ]
mov ebp eax
mov eax ebx
shl eax 0x5
push eax
call sub_45b936
add esp 0x4
mov ecx edi
mov edi eax
push edi
mov [ esp + 0x10 ] ecx
push ecx
call sub_45cb53
add esp 0x8
mov esi eax
test esi esi
jne r-xdata
add esp 0x40
pop esi
pop edi
pop ebx
pop ebp
jmp sub_45ba09
push [ esp + 0xc ]
push edi
push ebp
call sub_45cea6
add esp 0xc
mov [ esp + 0x24 ] edi
mov edi ebp
mov ebp eax
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
push [ esp + 0xc ]
mov edi [ esp + 0x28 ]
push edi
call sub_45be66
add esp 0x8
mov [ esp ] eax
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov eax 0x4
push eax
push ebx
call sub_43f807
add esp 0x8
test ebx ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x4 ] ebp
jle r-xdata
push 0x443
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x4
push ebx
call sub_43f807
add esp 0x8
mov edi eax
mov eax [ esi ]
mov edi [ esp + 0xc ]
lea eax [ eax + ebx * 4 - 0x4 ]
xor ecx ecx
mov eax [ ebp ]
lea ecx [ ebx * 4 ]
push ecx
push 0x0
push eax
mov ebp eax
call sub_49acf0
add esp 0xc
xor ecx ecx
lea eax [ ebx + 0x1 ]
inc ecx
mov edx [ edi + ecx * 4 + 0x4 ]
inc ecx
mov [ eax ] edx
add eax 0xfffffffc
cmp ebx ecx
jne r-xdata
push 0x4
push ebx
call sub_43f807
add esp 0x8
mov edi eax
mov eax [ esi ]
test ebx ebx
jle r-xdata
lea eax [ ecx * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
lea eax [ ebx + ebx * 2 ]
cmp ebx 0x33
mov edx 0x0
jl r-xdata
lea eax [ ebp + ebx * 8 - 0x4 ]
xor edx edx
mov esi [ edi + eax * 4 - 0x8 ]
xor edx edx
add ecx [ ebp + eax * 4 - 0x8 ]
not esi
setb dl
add ecx esi
adc edx 0x0
mov [ edi + eax * 4 - 0x8 ] ecx
dec eax
cmp eax 0x1
mov ecx edx
jg r-xdata
mov ebp [ esp + 0x4 ]
test ebx ebx
mov eax [ ebp ]
jle r-xdata
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov eax 0x4
push eax
push ebx
call sub_43f807
add esp 0x8
test ebx ebx
mov [ esp + 0x28 ] eax
jle r-xdata
xor edx edx
xor ebp ebp
lea ecx [ ebx - 0x1 ]
dec ebp
add edx eax
push 0x4
mov [ esp + 0x40 ] edx
push edx
call sub_43f807
add esp 0x8
mov edi eax
mov eax [ esp + 0x18 ]
mov eax [ eax ]
mov [ esp + 0x14 ] ebx
test eax eax
jle r-xdata
xor edx edx
mov ecx ebx
mov [ eax ] ecx
add eax 0xfffffffc
cmp ebx esi
mov edx esi
mov ecx [ edi ]
jne r-xdata
mov ecx [ edi + edx * 4 + 0x4 ]
lea eax [ eax * 4 + 0x4 ]
mov [ esp + 0x30 ] edi
push eax
push ebp
call sub_48f5d3
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
mov edi 0x4
lea esi [ ebx + ebx ]
push edi
push esi
call sub_43f807
add esp 0x8
mov ebp eax
push edi
push esi
call sub_43f807
add esp 0x8
mov [ esp + 0x8 ] eax
test ebx ebx
mov edi [ esp ]
mov ecx [ edi ]
jle r-xdata
mov ecx [ esp + 0x28 ]
xor edx edx
lea ecx [ ecx + ebx * 4 - 0x4 ]
mov [ edi + ecx * 4 ] eax
dec ecx
inc edx
mov eax [ esi ]
cmp ecx ebp
jne r-xdata
mov eax [ esi + edx * 4 + 0x4 ]
mov ecx 0x1f
xor ebx ebx
xor ebx ebx
mov ecx 0x1f
mov edi edx
mov edx ecx
mov esi ecx
shr edx 0x1
sub esi edx
neg edx
lea ecx [ ecx + edx + 0x1 ]
mov edx edi
cmp esi 0x31
lea edx [ edx + esi * 4 + 0x4 ]
jg r-xdata
cmp edx ecx
lea esi [ edx + 0x1 ]
mov ecx 0x0
jge r-xdata
mov [ ecx ] eax
add ecx 0xfffffffc
cmp ebx esi
mov edx esi
mov eax [ ebp ]
jne r-xdata
mov eax [ ebp + edx * 4 + 0x4 ]
cmp edx eax
mov eax 0x0
jge r-xdata
mov ebp [ esp + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] ebp
mov [ esp ] ebp
mov [ esp ] ebp
mov [ esp + 0x10 ] ebp
mov ecx [ esp + 0x8 ]
mov edx ecx
mov [ esp + 0x1c ] ecx
mov ecx esi
mov esi ecx
cmp ebx eax
mov [ esp + 0x34 ] edi
jge r-xdata
xor edx edx
test ecx ecx
lea ecx [ ecx - 0x1 ]
mov esi 0x1f
setle dl
cmovle ecx esi
add ebx edx
cmp eax ebx
jg r-xdata
cmp edx eax
lea esi [ edx + 0x1 ]
mov eax 0x0
jge r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0x2
jb r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp ]
mov eax ecx
lea ecx [ edx + ecx * 4 ]
xor edx edx
neg eax
mov ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x38 ] ebx
mov ebx ecx
mov esi edx
mov eax edi
mov [ esp + 0x2c ] ebp
mov esi [ esp + 0x18 ]
mov edx eax
sub edx ebx
mov edx [ esi + edx * 4 ]
bt edx ecx
jb r-xdata
jmp r-xdata
mov eax [ esp + 0x3c ]
shl eax 0x2
push eax
mov esi [ esp + 0x38 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov ebx [ esp + 0x14 ]
lea esi [ ebx * 8 ]
push esi
mov ebp [ esp + 0x14 ]
push ebp
call sub_48f5d3
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
shl ebx 0x2
push ebx
mov esi [ esp + 0x34 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push ebx
mov esi [ esp + 0x24 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push ebx
mov esi [ esp + 0x2c ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
add esp 0x40
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi + eax * 4 ] 0x0
jne r-xdata
mov ebx [ edi ]
mov esi [ ecx ]
add ecx 0x4
add ebx edx
dec edx
cmp eax edx
mov [ edi + ebx * 4 ] esi
jne r-xdata
test ecx ecx
js r-xdata
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
mov ebp [ esp + 0x2c ]
mov edx [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x8 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
mov [ esp ] eax
mov eax esi
mov [ esp + 0x8 ] ebp
mov esi edx
mov [ esp + 0x1c ] ecx
mov ebx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
lea ecx [ ebx + ebp * 4 ]
push esi
push ebp
mov esi [ esp + 0x8 ]
push esi
call sub_45bf31
add esp 0xc
mov edx [ esp + 0x20 ]
mov ecx esi
push ebp
mov esi [ esp + 0x38 ]
push esi
push edi
call sub_45d1be
add esp 0xc
mov ecx [ esp + 0x1c ]
mov ebp [ esp + 0x8 ]
mov eax esi
mov edx ebx
mov esi ebx
jmp r-xdata
dec eax
cmp eax 0x1
mov [ edi ] eax
ja r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ esp ]
mov edx [ esp + 0x20 ]
push ebx
push edi
push [ esp + 0x38 ]
call sub_45d1be
add esp 0xc
mov eax [ esp + 0xc ]
mov ecx [ eax ]
call sub_45b97c
mov edi eax
test ebx ebx
jle r-xdata
mov ebp [ esp + 0x14 ]
mov ecx [ esp ]
lea ecx [ ecx + ebp * 4 ]
mov edx ecx
push eax
push ebp
push esi
mov edi esi
mov esi eax
call sub_45bf31
add esp 0xc
mov [ esp + 0x24 ] edi
mov ecx edi
mov edx [ esp + 0x20 ]
push ebp
push esi
mov edi [ esp + 0x38 ]
push edi
call sub_45d1be
add esp 0xc
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
sub eax [ esp + 0x38 ]
mov eax [ ecx + eax * 4 ]
mov [ esp + 0x4 ] ebx
bt eax ebx
jae r-xdata
mov edi eax
mov eax [ esp + 0x18 ]
mov eax [ eax ]
mov [ esp + 0x4 ] ebp
mov [ esp + 0x8 ] ebp
mov [ esp + 0x1c ] ecx
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x38 ]
jmp r-xdata
mov ebx [ esp + 0x4 ]
test ebx ebx
lea ebx [ ebx - 0x1 ]
jg r-xdata
inc ebx
mov ecx 0x1f
cmp ebx eax
jl r-xdata
sub_45cb53
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
push edi
call sub_45b8e2
add esp 0x4
mov [ esp + 0x8 ] eax
push esi
call sub_45b8e2
add esp 0x4
mov ebp eax
push [ rw-data ]
call sub_45b8e2
add esp 0x4
mov [ esp + 0xc ] eax
push [ rw-data ]
call sub_45b8e2
add esp 0x4
mov ebx eax
mov eax [ esi ]
cmp [ esi + eax * 4 ] 0x0
jne r-xdata
mov eax [ edi ]
cmp [ edi + eax * 4 ] 0x0
jne r-xdata
push 0x7e2
push r--data
push r--data
call sub_4a509d
add esp 0xc
push [ rw-data ]
push ebp
call sub_45d3b9
add esp 0x8
mov esi [ esp + 0xc ]
test eax eax
mov edi ebx
je r-xdata
push 0x7e3
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebx [ esp + 0x8 ]
mov [ esp ] 0x0
xor ebx ebx
inc ebx
mov esi edi
jmp r-xdata
mov ebp [ esp + 0x30 ]
mov [ esp + 0x4 ] edi
mov ecx [ ebp ]
call sub_45b97c
mov esi eax
cmp [ esi ] 0x0
jle r-xdata
lea eax [ ecx * 4 + 0x4 ]
push eax
push ebx
call sub_48f5d3
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x8 ]
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x10 ]
mov eax [ esi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
jmp r-xdata
mov [ esp ] edi
mov [ esp + 0xc ] esi
call sub_45b97c
mov edi [ esp + 0x8 ]
mov ebp eax
mov ecx [ edi ]
call sub_45b97c
mov esi eax
mov ecx edi
mov [ esp + 0x14 ] ebx
mov edx ebx
push esi
push ebp
call sub_45dfb3
add esp 0x8
mov eax [ ebp ]
cmp eax 0x2
jb r-xdata
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
inc eax
mov ebp [ esp + 0x4 ]
xor edx edx
xor ecx ecx
inc ecx
mov eax ecx
mov eax [ esi ]
cmp eax 0x2
jb r-xdata
cmp [ ebp + eax * 4 ] 0x0
jne r-xdata
xor ebx ebx
cmp ecx [ ebp ]
jg r-xdata
mov edi [ esp + 0x30 ]
mov edi [ edi + ecx * 4 ]
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0xc ]
push edi
push [ esp + 0x14 ]
push esi
call sub_45dd54
add esp 0xc
mov [ esp + 0x4 ] eax
mov ebx [ esp ]
mov eax [ edi ]
neg ebx
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
mov edi [ esp + 0x8 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push [ rw-data ]
push ebp
call sub_45d3b9
add esp 0x8
test eax eax
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov esi eax
mov [ esp + 0x8 ] ecx
jne r-xdata
cmp [ esi + eax * 4 ] 0x0
jne r-xdata
dec eax
cmp eax 0x1
mov [ ebp ] eax
ja r-xdata
sub edi ebx
not ebx
sub edi edx
cmp edi ebx
mov [ esi + ecx * 4 ] edi
seta bh
setae bl
test edx edx
jne r-xdata
mov ebx [ esp + 0x4 ]
mov ebx [ ebx + ecx * 4 ]
mov [ esp + 0x10 ] edi
mov edi ebx
mov ebx ebp
push [ rw-data ]
push ebx
call sub_45d3b9
add esp 0x8
mov ecx [ ebx ]
test eax eax
je r-xdata
cmp [ esp ] 0x0
mov esi eax
mov ebx ecx
setg dl
mov [ esp ] edx
jmp r-xdata
dec eax
cmp eax 0x1
mov [ esi ] eax
ja r-xdata
test edi edi
movzx edx bl
cmovne eax ecx
cmp ecx [ esi ]
lea ecx [ ecx + 0x1 ]
jl r-xdata
mov bl bh
mov eax [ ebp ]
lea eax [ eax * 4 + 0x4 ]
push eax
push ebp
call sub_48f5d3
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
mov eax [ ebx ]
lea eax [ eax * 4 + 0x4 ]
push eax
push ebx
call sub_48f5d3
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
cmp [ esp ] 0x0
je r-xdata
mov edi [ esp + 0x30 ]
cmp ecx [ edi ]
mov edi 0x0
jg r-xdata
jmp r-xdata
mov [ esi ] eax
mov edi [ esp + 0x4 ]
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
sub_45cea6
push ebp
push ebx
push edi
push esi
sub esp 0x24
mov ebx [ esp + 0x40 ]
mov ebp [ ebx ]
cmp [ ebx + ebp * 4 ] 0x0
jne r-xdata
mov esi [ esp + 0x3c ]
mov edi [ esp + 0x38 ]
push 0x4
push ebp
call sub_43f807
add esp 0x8
test ebp ebp
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ebp
jle r-xdata
push 0x4c1
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebp [ ebx ]
mov eax [ edi ]
mov ebx [ esi ]
mov ecx [ esp + 0x4 ]
cmp eax ebx
cmova ebx eax
lea eax [ ebx + ebx ]
cmp eax ecx
jg r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
xor ecx ecx
neg eax
push 0x4
push ebx
call sub_43f807
add esp 0x8
mov ebp [ edi ]
mov ecx ebx
mov [ esp ] ecx
sub ecx ebp
mov ebx ebp
test ecx ecx
jle r-xdata
mov ebx ecx
shr ebx 0x1f
add ebx ecx
sar ebx 0x1
inc ebx
mov ebp [ ebx ]
add ebp ecx
dec ecx
mov ebp [ ebx + ebp * 4 ]
mov [ edx ] ebp
add edx 0x4
cmp eax ecx
jne r-xdata
test ebx ebx
mov [ esp + 0x10 ] eax
jle r-xdata
shl ecx 0x2
push ecx
push 0x0
push eax
mov ebx eax
call sub_49acf0
mov eax ebx
add esp 0xc
mov ebx [ edi ]
push 0x4
mov ebp [ esp + 0x4 ]
push ebp
call sub_43f807
add esp 0x8
mov edi [ esi ]
mov ecx ebp
mov ebx eax
sub ecx edi
mov eax edi
test ecx ecx
jle r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x10 ]
shl ebp 0x2
lea edx [ eax * 4 ]
sub edx ebp
xor ebp ebp
add ecx edx
xor edx edx
test eax eax
jle r-xdata
shl ecx 0x2
push ecx
push 0x0
push ebx
call sub_49acf0
add esp 0xc
mov eax [ esi ]
add ebx edx
dec edx
mov eax [ edi + ebx * 4 ]
mov [ ecx + ebp * 4 ] eax
inc ebp
mov ebx [ edi ]
cmp ebx ebp
jg r-xdata
mov [ esp + 0x18 ] ebx
lea eax [ ebp + ebp ]
push 0x4
mov [ esp + 0x24 ] eax
push eax
call sub_43f807
add esp 0x8
xor ebx ebx
cmp ebp 0x33
mov esi 0x0
mov [ esp + 0xc ] eax
jl r-xdata
lea edx [ ebp * 4 ]
shl edi 0x2
mov ecx ebx
sub edx edi
xor edi edi
add ecx edx
xor edx edx
push 0x4
push esi
call sub_43f807
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov edx 0x10
mov eax [ eax ]
mov edi eax
xor esi esi
mov eax ebp
add eax edx
dec edx
mov eax [ esi + eax * 4 ]
mov [ ecx + edi * 4 ] eax
inc edi
mov eax [ esi ]
cmp eax edi
jg r-xdata
mov ecx 0x20
mov ebp edi
sub ecx edx
shr ebp cl
mov ecx 0x0
test ebp ebp
cmove ecx edx
shl edi cl
add ebx ecx
sar edx 0x1
jne r-xdata
test ebx ebx
mov [ esp + 0x1c ] esi
je r-xdata
mov ecx eax
mov edx eax
shr ecx 0x1
sub edx ecx
neg ecx
lea eax [ eax + ecx + 0x1 ]
lea esi [ esi + edx * 4 + 0x4 ]
cmp edx 0x31
jg r-xdata
mov ebp [ esp ]
mov ecx ebx
mov ebp [ esp ]
shl eax cl
cmp [ esp + 0x4 ] 0x2
jl r-xdata
mov eax [ esi ]
mov ebx esi
cmp eax 0x2
jb r-xdata
mov eax [ esp + 0x4 ]
not edi
mov ecx [ esp + 0xc ]
not eax
cmp eax edi
cmovge edi eax
mov eax [ esp ]
shl edi 0x2
lea eax [ edi + eax * 8 ]
lea eax [ ecx + eax + 0x4 ]
xor ecx ecx
mov ecx eax
call sub_45bea4
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov esi eax
push [ esp + 0x14 ]
push ebp
mov edi [ esp + 0x14 ]
push edi
call sub_45bf31
add esp 0xc
mov ecx edi
mov edi [ esp + 0x20 ]
xor ebp ebp
mov edx edi
push ebx
push esi
push ebp
mov esi [ esp + 0x10 ]
push esi
push [ esp + 0x18 ]
call sub_45c27a
add esp 0x14
cmp esi edi
mov ebx edi
cmovle ebx esi
mov ecx ebx
call sub_45b97c
mov esi eax
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx 0x20
sub ecx ebx
shr edx cl
or eax edx
jmp r-xdata
mov eax [ esp + 0x1c ]
shl eax 0x2
push eax
mov esi [ esp + 0x18 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov edi [ esp ]
lea eax [ edi * 8 ]
push eax
mov esi [ esp + 0x10 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x4 ]
shl eax 0x2
push eax
mov esi [ esp + 0xc ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
shl edi 0x2
push edi
mov esi [ esp + 0x14 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push edi
mov esi [ esp + 0x1c ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov eax ebx
add esp 0x24
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ ebx + eax * 4 ] 0x0
jne r-xdata
mov edi [ esi ]
mov edx [ eax + ecx * 4 ]
inc ecx
add edi ebp
dec ebp
cmp ecx ebx
mov [ esi + edi * 4 ] edx
jl r-xdata
dec eax
cmp eax 0x1
mov [ ebx ] eax
ja r-xdata
sub_45d1be
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebp [ esp + 0x24 ]
mov edi ecx
mov ecx [ esp + 0x20 ]
mov esi edx
mov edx [ esp + 0x1c ]
lea eax [ ebp + ebp * 2 ]
lea ebx [ ecx + eax * 4 ]
mov [ esp + 0x4 ] eax
mov eax ecx
lea ecx [ edi + ebp * 4 ]
mov [ esp ] ecx
push ebx
push ebp
push eax
call sub_45e21b
add esp 0xc
mov ecx [ esp + 0x20 ]
mov edx esi
lea eax [ ecx + ebp * 4 ]
push ebx
push ebp
push eax
call sub_45bf31
add esp 0xc
test ebp ebp
jle r-xdata
xor eax eax
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
lea ecx [ ebp + ebp + 0x1 ]
lea edx [ eax + edx * 4 - 0x4 ]
xor eax eax
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
xor ebx ebx
add eax [ edi + ecx * 4 - 0x8 ]
setb bl
add eax [ edx ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax ebx
adc eax 0x0
dec ecx
add edx 0xfffffffc
cmp ecx 0x1
jg r-xdata
test ebp ebp
jle r-xdata
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ edi + ebp * 8 - 0x4 ]
inc ebp
xor ecx ecx
inc ecx
mov ecx [ esi + eax * 4 ]
add eax ebp
cmp [ edi + eax * 4 ] ecx
ja r-xdata
test eax eax
jne r-xdata
mov ecx ebp
mov edx edi
mov edi [ esi + ebp * 4 - 0x8 ]
xor edx edx
add ecx [ eax ]
not edi
setb dl
add ecx edi
adc edx 0x0
dec ebp
mov [ eax ] ecx
add eax 0xfffffffc
cmp ebp 0x1
mov ecx edx
jg r-xdata
jmp r-xdata
test ebp ebp
jle r-xdata
mov ebx [ edx ]
mov [ edx + ebp * 4 ] ebx
mov [ edx ] 0x0
add edx 0x4
dec ecx
jne r-xdata
mov edx [ esp ]
xor eax eax
cmp eax ebp
jge r-xdata
inc eax
cmp eax ebp
jl r-xdata
mov ecx [ edx + eax * 4 ]
cmp ecx [ esi + eax * 4 ]
jne r-xdata
jmp r-xdata
sub_45d2b8
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
push ebx
push edi
call sub_45d3b9
add esp 0x8
test eax eax
mov esi edi
js r-xdata
push ebx
push ebp
call sub_45d3b9
add esp 0x8
test eax eax
mov edi ebp
js r-xdata
push ebx
push edi
call sub_45be66
add esp 0x8
mov esi eax
push edi
push esi
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
push ebx
push ebp
call sub_45be66
add esp 0x8
mov edi eax
push edi
push ebx
call sub_45d490
add esp 0x8
mov ebp eax
test ebp ebp
jne r-xdata
push edi
push esi
call sub_45d490
add esp 0x8
mov ebx eax
jmp r-xdata
push esi
push ebp
call sub_45d53d
add esp 0x8
mov ebx eax
mov eax [ ebp ]
lea eax [ eax * 4 + 0x4 ]
push eax
push ebp
call sub_48f5d3
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
mov ebp [ esp + 0x18 ]
push 0x523
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp esi [ esp + 0x14 ]
je r-xdata
cmp edi ebp
je r-xdata
mov eax [ esi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov eax ebx
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
sub_45d3b9
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov eax [ eax ]
mov ecx [ ecx ]
mov esi eax
cmp eax 0x1
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov edx [ esp + 0x14 ]
xor eax eax
cmp [ edx + 0x4 ] 0x0
setne al
mov esi eax
mov eax esi
mov edi ecx
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
xor ecx ecx
cmp [ eax + 0x4 ] 0x0
setne cl
test ecx ecx
je r-xdata
mov edx [ esp + 0x14 ]
mov eax esi
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov eax esi
cmp eax ecx
cmovge ecx eax
xor eax eax
dec eax
mov eax [ esp + 0x18 ]
cmp [ eax + ecx * 4 ] 0x0
jne r-xdata
push 0x664
push r--data
push r--data
call sub_4a509d
mov ecx edi
add esp 0xc
xor eax eax
mov edx esi
xor ebp ebp
cmp ecx edx
mov edx 0x0
jg r-xdata
push 0x665
push r--data
push r--data
call sub_4a509d
mov ecx edi
add esp 0xc
mov ebx edi
cmp ecx ebx
jg r-xdata
mov edx [ esp + 0x14 ]
mov edx [ edx + ecx * 4 ]
cmp edx ebp
jb r-xdata
mov ebx [ esp + 0x18 ]
mov ebp [ ebx + ecx * 4 ]
pop esi
pop edi
pop ebx
pop ebp
retn
setbe bl
movzx ebx bl
sub ecx ebx
cmp edx ebp
jbe r-xdata
test ecx ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_45d490
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov eax [ eax ]
mov esi [ ecx ]
cmp eax esi
cmovge esi eax
mov ecx esi
call sub_45b97c
mov edi eax
test esi esi
mov [ esp ] esi
jle r-xdata
mov [ edi ] 0x0
xor esi esi
xor ecx ecx
inc ecx
mov edx ecx
mov eax [ esp + 0x1c ]
xor ebp ebp
cmp ecx [ eax ]
jg r-xdata
mov eax [ esp + 0x18 ]
mov ebx [ eax + ecx * 4 ]
xor eax eax
add ebx edx
not ebp
setb al
add ebx ebp
mov edx eax
mov eax esi
mov [ edi + ecx * 4 ] ebx
adc edx 0x0
test ebx ebx
cmovne eax ecx
cmp ecx esi
cmovg esi eax
cmp ecx [ esp ]
lea ecx [ ecx + 0x1 ]
jl r-xdata
mov eax [ esp + 0x1c ]
mov ebp [ eax + ecx * 4 ]
mov eax [ esp + 0x18 ]
mov ebx 0x0
cmp ecx [ eax ]
jg r-xdata
test edx edx
mov [ edi ] esi
jne r-xdata
mov eax edi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ esi * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
xor edi edi
jmp r-xdata
sub_45d53d
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov eax [ eax ]
mov esi [ ecx ]
cmp eax esi
cmovge esi eax
lea ecx [ esi + 0x1 ]
call sub_45b97c
xor ecx ecx
test esi esi
mov [ esp ] esi
js r-xdata
mov [ eax ] ecx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
xor edx edx
xor ebp ebp
inc edx
mov ebx [ esp + 0x1c ]
xor edi edi
cmp edx [ ebx ]
jg r-xdata
mov esi [ esp + 0x18 ]
mov esi [ esi + edx * 4 ]
xor ebx ebx
add esi ebp
setb bl
add esi edi
mov edi ecx
adc ebx 0x0
test esi esi
mov [ eax + edx * 4 ] esi
cmovne edi edx
cmp edx ecx
mov ebp ebx
cmovg ecx edi
cmp edx [ esp ]
lea edx [ edx + 0x1 ]
jle r-xdata
mov edi [ esp + 0x1c ]
mov edi [ edi + edx * 4 ]
mov esi [ esp + 0x18 ]
cmp edx [ esi ]
mov esi 0x0
jg r-xdata
sub_45d5bd
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x2
jl r-xdata
xor ecx ecx
inc ecx
xor ecx ecx
inc ecx
dec [ eax + ecx * 4 ]
retn
mov [ eax + ecx * 4 ] 0xffffffff
inc ecx
cmp ecx [ eax ]
jl r-xdata
cmp [ eax + ecx * 4 ] 0x0
jne r-xdata
jmp r-xdata
sub_45d5e4
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
cmp ebx 0xfffffff
jb r-xdata
lea eax [ ebx + 0x3 ]
sar eax 0x1f
shr eax 0x1e
lea edi [ ebx + eax + 0x3 ]
sar edi 0x2
mov ecx edi
call sub_45b97c
mov esi eax
test ebx ebx
jle r-xdata
push 0x583
push r--data
push r--data
call sub_4a509d
add esp 0xc
je r-xdata
mov eax esi
add eax 0x4
xor ecx ecx
inc ecx
test edi edi
cmovg ecx edi
xor edx edx
shl ecx 0x2
push ecx
push edx
push eax
call sub_49acf0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
cmp eax 0x2
jb r-xdata
mov eax [ esp + 0x14 ]
lea edx [ ebx * 8 - 0x8 ]
dec ebx
xor edi edi
dec edi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esi + eax * 4 ] 0x0
jne r-xdata
movzx ebp [ eax ]
mov ecx edx
inc eax
add edx 0xfffffff8
and cl 0x18
shl ebp cl
mov ecx ebx
sar ecx 0x1f
shr ecx 0x1e
add ecx ebx
dec ebx
and ecx 0xfffffffc
or [ esi + ecx + 0x4 ] ebp
cmp ebx edi
jne r-xdata
dec eax
cmp eax 0x1
mov [ esi ] eax
ja r-xdata
sub_45d698
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x18 ]
cmp edi 0xfffffff
jb r-xdata
lea eax [ edi + 0x3 ]
sar eax 0x1f
shr eax 0x1e
lea ebx [ edi + eax + 0x3 ]
sar ebx 0x2
mov ecx ebx
call sub_45b97c
mov esi eax
test edi edi
jle r-xdata
push 0x599
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi ]
cmp eax 0x2
jb r-xdata
mov eax esi
mov ebp [ esp + 0x14 ]
add eax 0x4
xor ecx ecx
inc ecx
test ebx ebx
cmovg ecx ebx
xor ebx ebx
shl ecx 0x2
push ecx
push ebx
push eax
call sub_49acf0
add esp 0xc
xor eax eax
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esi + eax * 4 ] 0x0
jne r-xdata
movzx edx [ ebp + eax ]
mov ecx ebx
add ebx 0x8
and cl 0x18
shl edx cl
mov ecx eax
inc eax
and ecx 0xfffffffc
or [ esi + ecx + 0x4 ] edx
cmp edi eax
jne r-xdata
dec eax
cmp eax 0x1
mov [ esi ] eax
ja r-xdata
sub_45d738
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x14 ]
push [ rw-data ]
call sub_45b8e2
add esp 0x4
mov esi eax
mov al [ ebp ]
test al al
je r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
inc ebp
mov eax [ esi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
push 0x0
push [ rw-data ]
push esi
call sub_45dd54
add esp 0xc
mov ebx eax
movsx eax [ ebp - 0x1 ]
add eax 0xffffffd0
push eax
call sub_45d836
add esp 0x4
mov edi eax
mov eax [ esi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push edi
push ebx
call sub_45d53d
add esp 0x8
mov esi eax
mov eax [ ebx ]
lea eax [ eax * 4 + 0x4 ]
push eax
push ebx
call sub_48f5d3
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov al [ ebp ]
inc ebp
test al al
jne r-xdata
movzx eax al
add eax 0xffffffd0
cmp eax 0x9
ja r-xdata
jmp r-xdata
sub_45d836
push esi
mov esi [ esp + 0x8 ]
push 0x4
push 0x2
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ eax + 0x4 ] 0x0
mov [ eax ] 0x1
pop esi
retn
mov [ eax + ecx * 4 + 0x4 ] esi
test esi esi
lea ecx [ ecx + 0x1 ]
je r-xdata
test ecx ecx
jg r-xdata
jmp r-xdata
mov [ eax ] ecx
sub_45d86b
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
shl ecx 0x5
mov eax ebx
xor edx edx
sar eax 0x1f
shr eax 0x1d
add eax ebx
mov ecx eax
and eax 0xfffffff8
sar ecx 0x3
sub ebx eax
setne dl
add edx ecx
push 0x1
mov [ esp + 0x4 ] edx
push edx
call sub_43f807
add esp 0x8
mov ecx 0x8
mov ebp eax
mov eax 0xff
xor edi edi
sub ecx ebx
shr eax cl
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x20 ]
mov eax ecx
shr eax 0x5
mov eax [ edx + eax * 4 + 0x4 ]
shr eax cl
test eax eax
je r-xdata
mov edx [ esp ]
test edx edx
jle r-xdata
mov eax [ edi ]
lea eax [ eax * 4 + 0x4 ]
push eax
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov ebx ecx
dec ecx
js r-xdata
xor eax eax
mov edi edx
mov esi ebp
push edx
push ebp
call sub_45d5e4
add esp 0x8
mov edi eax
push [ esp + 0x1c ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
movzx ecx [ ebp + eax - 0x1 ]
and ecx [ esp + 0x4 ]
mov [ ebp + eax - 0x1 ] cl
call sub_469c4e
mov [ esi ] al
inc esi
dec edi
jne r-xdata
mov edx [ esp ]
mov eax edx
jmp r-xdata
test edi edi
je r-xdata
push [ esp + 0x20 ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
jg r-xdata
test ebx ebx
je r-xdata
push [ esp ]
push ebp
call sub_48f5d3
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
mov eax edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45d970
push esi
mov edx [ esp + 0x8 ]
mov ecx [ edx ]
shl ecx 0x5
pop esi
retn
mov esi ecx
shr esi 0x5
mov esi [ edx + esi * 4 + 0x4 ]
shr esi cl
test esi esi
je r-xdata
mov eax ecx
dec ecx
js r-xdata
sub_45d990
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x18 ]
xor esi esi
dec esi
cmp eax 0x2
jl r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x14 ]
xor ecx ecx
xor edx edx
mov ebp ecx
movzx ecx [ edi + edx ]
inc edx
shl ebp 0x8
or ecx ebp
cmp edx 0x2
jne r-xdata
lea edx [ ecx + 0x7 ]
sar edx 0x1f
shr edx 0x1d
lea ebp [ ecx + edx + 0x7 ]
sar ebp 0x3
lea ecx [ ebp + 0x2 ]
cmp ecx eax
jg r-xdata
test ebx ebx
mov esi ecx
je r-xdata
lea esi [ edi + 0x2 ]
push ebp
push esi
call sub_45d5e4
add esp 0x8
add esi ebp
mov [ ebx ] eax
sub esi edi
sub_45d9f4
push esi
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
shl ecx 0x5
or ecx 0x7
mov eax edx
sar eax 0x1f
shr eax 0x1d
add eax edx
sar eax 0x3
add eax 0x2
pop esi
retn
mov esi ecx
shr esi 0x5
mov esi [ eax + esi * 4 + 0x4 ]
shr esi cl
lea ecx [ edx - 0x1 ]
test esi esi
je r-xdata
mov edx ecx
add ecx 0xfffffff8
js r-xdata
sub_45da2c
push esi
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
shl ecx 0x5
or ecx 0x8
mov eax edx
sar eax 0x1f
shr eax 0x1d
add eax edx
sar eax 0x3
add eax 0x4
pop esi
retn
mov esi ecx
shr esi 0x5
mov esi [ eax + esi * 4 + 0x4 ]
shr esi cl
lea ecx [ edx - 0x1 ]
test esi esi
je r-xdata
mov edx ecx
add ecx 0xfffffff7
js r-xdata
sub_45da64
push esi
mov ecx [ esp + 0xc ]
xor eax eax
test ecx ecx
js r-xdata
pop esi
retn
mov edx [ esp + 0x8 ]
mov esi [ edx ]
shl esi 0x2
cmp esi ecx
jle r-xdata
mov eax ecx
shl cl 0x3
and eax 0xfffffffc
and cl 0x18
mov eax [ edx + eax + 0x4 ]
shr eax cl
movzx eax al
sub_45da92
push esi
mov ecx [ esp + 0xc ]
xor eax eax
test ecx ecx
js r-xdata
pop esi
retn
mov edx [ esp + 0x8 ]
mov esi [ edx ]
shl esi 0x5
cmp esi ecx
jle r-xdata
mov eax ecx
shr eax 0x5
mov eax [ edx + eax * 4 + 0x4 ]
shr eax cl
and eax 0x1
sub_45daba
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov edx [ eax ]
shl edx 0x5
lea ecx [ edx + 0xe ]
lea ecx [ ebp - 0x7 ]
sar ecx 0x1f
shr ecx 0x1d
lea esi [ ebp + ecx - 0x7 ]
sar esi 0x3
lea eax [ esi + 0x2 ]
mov [ esp ] eax
mov eax [ esp + 0x1c ]
mov esi ecx
shr esi 0x5
mov esi [ eax + esi * 4 + 0x4 ]
shr esi cl
lea ecx [ ebp - 0x1 ]
test esi esi
je r-xdata
cmp ebp 0xf
mov [ edi ] bh
mov [ edi + 0x1 ] bl
jb r-xdata
mov eax [ esp + 0x1c ]
mov ecx edx
shr ecx 0x5
mov eax [ eax + ecx * 4 + 0x4 ]
mov ecx edx
shr eax cl
test eax eax
je r-xdata
mov ebp ecx
add ecx 0xfffffff1
js r-xdata
mov eax [ esp ]
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
add edi 0x2
lea edx [ esi * 8 - 0x8 ]
mov ebx edx
dec edx
js r-xdata
mov [ edi ] cl
inc edi
add edx 0xfffffff8
test esi esi
jne r-xdata
mov eax [ esp + 0x1c ]
mov eax [ eax ]
shl eax 0x2
cmp eax ebx
jl r-xdata
mov ebx esi
xor ecx ecx
lea esi [ ebx - 0x1 ]
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x1c ]
mov eax esi
and eax 0xfffffffc
mov ebx [ ecx + eax + 0x4 ]
mov ecx edx
and cl 0x18
shr ebx cl
movzx ecx bl
sub_45db74
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov esi eax
test eax eax
jns r-xdata
mov eax [ ebx ]
shl eax 0x5
dec eax
push 0x67d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax 0x1f
mov edx esi
sub eax edx
lea edx [ eax + ecx ]
lea eax [ eax + ecx + 0x1 ]
sar eax 0x1f
shr eax 0x1b
lea ecx [ eax + edx + 0x1 ]
sar ecx 0x5
call sub_45b97c
test eax eax
je r-xdata
mov eax ecx
shr eax 0x5
mov edx [ ebx + eax * 4 + 0x4 ]
lea eax [ ecx - 0x1 ]
shr edx cl
test edx edx
je r-xdata
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
xor edi edi
cmp [ eax ] edi
jle r-xdata
mov ecx eax
test ecx ecx
js r-xdata
mov ecx esi
mov ebp 0x20
sar ecx 0x1f
shr ecx 0x1b
add ecx esi
mov edx ecx
and ecx 0xffffffe0
sub esi ecx
sar edx 0x5
sub ebp esi
mov [ esp + 0xc ] esi
lea esi [ ebx + edx * 4 + 0x8 ]
inc edx
mov [ esp + 0x4 ] ebp
mov [ esp + 0x8 ] edx
mov [ esp ] esi
mov esi [ esi - 0x4 ]
mov ecx [ esp + 0xc ]
mov ebx ebp
shr esi cl
mov ecx [ esp + 0x4 ]
shl ebx cl
or ebx esi
mov esi ebp
mov [ eax + edi * 4 + 0x4 ] ebx
inc edi
mov ebx edx
cmp edi [ eax ]
jl r-xdata
mov ecx [ esp ]
mov ebp [ ecx + edi * 4 ]
mov ecx [ esp + 0x8 ]
xor ebp ebp
mov edx ebx
lea ecx [ ecx + edi ]
cmp ecx [ ebx ]
jge r-xdata
sub_45dc56
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
test esi esi
jns r-xdata
mov eax [ edi ]
shl eax 0x5
dec eax
push 0x69a
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ esi + ecx ]
lea ecx [ esi + ecx + 0x20 ]
sar ecx 0x1f
shr ecx 0x1b
lea ecx [ ecx + eax + 0x20 ]
sar ecx 0x5
call sub_45b97c
mov edx esi
mov ebp eax
sar edx 0x1f
shr edx 0x1b
add edx esi
mov eax edx
sar edx 0x5
and eax 0xffffffe0
lea ecx [ edx + 0x1 ]
sub esi eax
je r-xdata
mov eax ecx
shr eax 0x5
mov edx [ edi + eax * 4 + 0x4 ]
lea eax [ ecx - 0x1 ]
shr edx cl
test edx edx
je r-xdata
mov edx [ edi ]
lea eax [ ebp + ecx * 4 ]
add edi 0x4
shl edx 0x2
push edx
push edi
push eax
call sub_49a1f0
add esp 0xc
cmp [ edi ] 0x0
jle r-xdata
mov ecx eax
test ecx ecx
js r-xdata
mov eax ebp
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax 0x20
mov [ esp + 0x4 ] ebp
lea ebp [ ebp + ecx * 4 ]
xor ecx ecx
xor ebx ebx
mov [ esp + 0x8 ] esi
sub eax esi
mov [ esp ] ebp
mov [ esp + 0xc ] eax
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ edi + esi * 4 + 0x4 ]
mov ebp eax
shl ebp cl
mov ecx [ esp ]
or ebp ebx
mov ebx eax
mov [ ecx + esi * 4 ] ebp
mov ecx [ esp + 0xc ]
mov eax [ edi ]
shr ebx cl
add eax edx
lea ecx [ edx + esi + 0x1 ]
cmp ecx eax
lea ecx [ esi + 0x1 ]
jl r-xdata
mov eax [ esp ]
mov ebp [ esp + 0x4 ]
test ebx ebx
je r-xdata
mov [ eax + esi * 4 + 0x4 ] ebx
jmp r-xdata
sub_45dd54
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov ecx [ esp + 0x2c ]
mov edi [ esp + 0x28 ]
mov eax [ edi ]
mov esi [ ecx ]
cmp eax esi
mov [ esp + 0x10 ] esi
mov [ esp + 0xc ] eax
cmovge esi eax
xor ebp ebp
lea ebx [ esi * 4 ]
cmp esi 0x33
jl r-xdata
mov eax ebx
add ebp ebx
mov [ esp ] eax
push 0x4
mov [ esp + 0xc ] ebp
push ebp
call sub_43f807
add esp 0x8
test esi esi
mov [ esp + 0x4 ] eax
jle r-xdata
xor ebp ebp
mov eax esi
mov ecx [ esp + 0x4 ]
mov eax [ esp ]
lea eax [ ecx + eax * 4 ]
lea edi [ ecx + esi * 8 ]
lea edx [ ecx + esi * 4 ]
push eax
push esi
push edi
call sub_45bf31
add esp 0xc
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x10 ]
mov edi [ esp + 0xc ]
lea ecx [ edx + edi + 0x1 ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp ]
mov edx esi
lea eax [ eax + ecx ]
xor ecx ecx
mov ecx eax
mov edx eax
shr ecx 0x1
sub edx ecx
neg ecx
lea eax [ eax + ecx + 0x1 ]
lea ebp [ ebp + edx * 4 + 0x4 ]
cmp edx 0x31
jg r-xdata
mov [ esp ] ecx
call sub_45b97c
mov edi eax
cmp [ edi ] 0x0
jle r-xdata
mov eax [ eax ]
add edx edi
cmp edx eax
lea eax [ eax + 0x1 ]
cmovl ecx eax
mov ebx [ esp + 0x4 ]
mov [ ebx + ecx * 4 ] ebp
mov ebx [ esp + 0x2c ]
xor ebp ebp
cmp edx [ ebx ]
jg r-xdata
mov ebp [ edi + edx * 4 ]
mov ebp [ esp + 0x8 ]
xor eax eax
mov edx [ esp + 0x4 ]
mov eax esi
mov ebp [ esp + 0x8 ]
lea ecx [ esi + esi ]
shl eax 0x4
lea edx [ edx + eax - 0x4 ]
xor eax eax
xor esi esi
inc esi
mov [ eax + ecx * 4 ] ebp
inc ecx
dec edx
cmp esi ecx
jg r-xdata
mov ebx [ esp + 0x2c ]
mov ebp [ ebx + edx * 4 ]
shl ebp 0x2
mov [ edi ] eax
push ebp
mov esi [ esp + 0x8 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esp + 0x30 ] 0x0
je r-xdata
test ebx ebx
mov [ edi + esi * 4 ] ebx
cmovne eax esi
add edx 0xfffffffc
cmp esi [ edi ]
lea esi [ esi + 0x1 ]
jl r-xdata
mov ebx [ edx ]
cmp edx [ edi ]
mov ebp 0x0
jg r-xdata
xor esi esi
xor ecx ecx
mov edx eax
inc ecx
jmp r-xdata
cmp esi ecx
mov ebx 0x0
jg r-xdata
jmp r-xdata
cmp ecx eax
mov eax 0x0
jg r-xdata
mov [ edi ] eax
cmp [ esp ] 0x0
jle r-xdata
mov ebx [ esp + 0x30 ]
xor ebp ebp
cmp ecx [ ebx ]
jg r-xdata
mov eax [ edi + ecx * 4 ]
xor ebx ebx
add eax esi
mov esi edx
setb bl
add eax ebp
adc ebx 0x0
test eax eax
mov [ edi + ecx * 4 ] eax
cmovne esi ecx
cmp ecx edx
cmovg edx esi
cmp [ esp ] ecx
jne r-xdata
mov ebx [ esp + 0x30 ]
mov ebp [ ebx + ecx * 4 ]
mov eax [ edi ]
inc ecx
mov esi ebx
mov ebp [ esp + 0x8 ]
mov eax edx
sub_45df04
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_45b8e2
add esp 0x4
mov ecx [ eax ]
lea esi [ ecx + 0x1 ]
test esi esi
jle r-xdata
test edx edx
je r-xdata
pop esi
retn
xor esi esi
inc esi
cmp edx 0x2
jb r-xdata
mov edx [ esi + ecx * 4 ]
test ecx ecx
lea ecx [ ecx - 0x1 ]
jle r-xdata
add ecx 0x2
xor edx edx
dec edx
lea esi [ esi + esi + 0x1 ]
cmp esi edx
jb r-xdata
mov [ eax + ecx * 4 - 0x4 ] esi
dec ecx
mov esi edx
cmp ecx 0x1
jg r-xdata
sub_45df4d
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
xor ebx ebx
inc ebx
mov eax [ eax ]
test eax eax
cmovg ebx eax
lea ecx [ ebx + 0x1 ]
call sub_45b97c
xor edx edx
xor ecx ecx
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp + 0x14 ]
xor esi esi
cmp edx [ ecx ]
jae r-xdata
test edx edx
mov edi 0x0
cmovle edi [ esp + 0x18 ]
xor ecx ecx
add edi ebp
mov ebp 0x0
setb cl
add edi esi
adc ecx ebp
mov [ eax + edx * 4 + 0x4 ] edi
inc edx
test edi edi
mov ebp ecx
je r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ ecx + edx * 4 + 0x4 ]
cmp edx ebx
jg r-xdata
jmp r-xdata
mov ebp ecx
mov [ eax ] edx
sub_45dfb3
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov esi edx
mov ebp ecx
mov ebx [ esi ]
cmp [ esi + ebx * 4 ] 0x0
jne r-xdata
push 0x4
push ebx
call sub_43f807
add esp 0x8
test ebx ebx
mov [ esp ] eax
jle r-xdata
push 0x540
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebx [ esi ]
mov eax [ ebp ]
lea edi [ ebx + 0x1 ]
cmp eax ebx
cmovg edi eax
push 0x4
push edi
call sub_43f807
add esp 0x8
mov esi eax
test edi edi
jle r-xdata
mov edx [ esp ]
mov eax ebx
xor ecx ecx
neg eax
mov [ esp + 0xc ] ebx
cmp [ ebp ] 0x0
jle r-xdata
lea eax [ edi * 4 ]
push eax
push 0x0
push esi
call sub_49acf0
add esp 0xc
mov edi [ esi ]
add edi ecx
dec ecx
mov edi [ esi + edi * 4 ]
mov [ edx ] edi
add edx 0x4
cmp eax ecx
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x4 ] edi
mov ebp [ esp + 0x24 ]
mov edx 0x10
xor ebx ebx
mov eax [ eax ]
mov [ esp + 0x8 ] eax
lea eax [ esi + edi * 4 - 0x4 ]
xor ecx ecx
mov ecx 0x20
mov edi eax
sub ecx edx
shr edi cl
mov ecx 0x0
test edi edi
cmove ecx edx
shl eax cl
add ebx ecx
sar edx 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp + ecx * 4 + 0x4 ]
inc ecx
mov [ eax ] edx
add eax 0xfffffffc
cmp ecx [ ebp ]
jl r-xdata
mov edi [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
mov ecx ebx
mov edi [ esp + 0x4 ]
shl edx cl
cmp [ esp + 0xc ] 0x2
jl r-xdata
shl edi 0x2
push edi
mov edi [ esp + 0x4 ]
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x4 ]
shl eax 0x2
push eax
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ ebp ] 0x0
jle r-xdata
mov ecx edx
call sub_45bea4
mov ecx esi
mov edx edi
push ebx
push eax
push [ esp + 0x30 ]
mov edi [ esp + 0x18 ]
push edi
push [ esp + 0x10 ]
call sub_45c27a
add esp 0x14
test ebp ebp
je r-xdata
mov eax [ esp ]
mov ecx 0x20
sub ecx ebx
mov eax [ eax + 0x4 ]
shr eax cl
or edx eax
jmp r-xdata
mov eax [ esp + 0x4 ]
xor ecx ecx
dec eax
mov [ ebp + ecx * 4 + 0x4 ] edx
inc ecx
dec eax
cmp ecx [ ebp ]
jl r-xdata
mov edx [ esi + eax * 4 ]
test eax eax
mov edx 0x0
js r-xdata
sub_45e143
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov edi edx
mov esi ecx
mov ecx 0x20
mov ebp eax
mov ebx eax
sar ebp 0x1f
shr ebp 0x1b
add ebp eax
mov edx ebp
and edx 0xffffffe0
sub ebx edx
sub ecx ebx
mov ebx edi
shr ebx cl
xor ecx ecx
sub eax edx
cmovne ecx ebx
sar ebp 0x5
mov ebx ecx
mov ecx eax
lea edx [ ebp + 0x1 ]
shl edi cl
cmp edx [ esi ]
jbe r-xdata
xor ecx ecx
add edi [ esi + ebp * 4 + 0x4 ]
mov eax ebx
setb cl
mov [ esi + ebp * 4 + 0x4 ] edi
mov edi ebx
or eax ecx
je r-xdata
push 0x200
push r--data
push r--data
call sub_4a509d
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ ebp + 0x2 ]
cmp eax [ esi ]
jbe r-xdata
xor ebx ebx
add ecx edi
setb bl
add ecx [ esi + ebp * 4 + 0x8 ]
adc ebx 0x0
mov [ esi + ebp * 4 + 0x8 ] ecx
je r-xdata
push 0x205
push r--data
push r--data
mov ebx ecx
call sub_4a509d
mov ecx ebx
add esp 0xc
add ebp 0x3
xor eax eax
add ebx [ esi + ebp * 4 ]
setb al
mov [ esi + ebp * 4 ] ebx
lea ebp [ ebp + 0x1 ]
mov ebx eax
jb r-xdata
push 0x209
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp ebp [ esi ]
jbe r-xdata
sub_45e21b
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x30 ]
mov ebp edx
mov esi ecx
cmp edi 0x32
jle r-xdata
test edi edi
jle r-xdata
mov ecx ebp
mov ebp [ esp + 0x38 ]
mov edx edi
shr edi 0x1
mov [ esp + 0x4 ] esi
mov eax edx
mov [ esp + 0x8 ] ecx
sub eax edi
mov [ esp ] eax
lea eax [ ebp + edx * 8 ]
mov [ esp + 0x18 ] eax
mov eax edx
lea edx [ ecx + edi * 4 ]
lea ecx [ edi * 4 ]
mov [ esp + 0x10 ] ecx
lea ecx [ esi + edi * 4 ]
mov esi [ esp + 0x18 ]
and eax 0xfffffffe
mov [ esp + 0xc ] eax
lea eax [ ebp + eax * 4 ]
push esi
push [ esp + 0x4 ]
mov [ esp + 0x1c ] eax
push eax
call sub_45bf31
add esp 0xc
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x34 ]
lea eax [ ebp + edi * 4 ]
lea edx [ ecx + edx * 4 ]
mov ecx [ esp + 0x4 ]
sub edx [ esp + 0x10 ]
push esi
push edi
push eax
call sub_45e21b
add esp 0xc
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
lea ecx [ ecx + eax * 4 ]
sub ecx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
push ebp
call sub_45e21b
add esp 0xc
mov eax [ esp ]
test eax eax
jle r-xdata
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ edi * 4 ]
push eax
push 0x0
push ebx
call sub_49acf0
add esp 0xc
mov eax edi
lea ecx [ esi + edi * 4 ]
mov [ esp + 0x4 ] esi
lea edx [ ebx + eax * 4 ]
lea edi [ ebp + eax * 4 - 0x4 ]
mov ebp edx
mov eax edi
lea edx [ ebp + esi * 4 - 0x4 ]
lea ecx [ edi + 0x1 ]
xor esi esi
neg eax
mov eax [ esp ]
lea ecx [ ebx + edi * 4 ]
mov edx eax
lea eax [ edx + esi ]
lea eax [ ebp + eax * 4 ]
mov esi [ esp + 0x4 ]
add ebp 0xfffffffc
mov ebx edx
cmp ecx esi
ja r-xdata
xor esi esi
xor ebx ebx
mov [ esp + 0x8 ] ecx
xor ebx ebx
add esi [ ebp + ecx * 4 - 0x8 ]
setb bl
add esi [ edx ]
adc ebx 0x0
mov [ ebp + ecx * 4 - 0x8 ] esi
dec ecx
add edx 0xfffffffc
cmp ecx 0x1
mov esi ebx
jg r-xdata
mov ecx [ esp ]
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x30 ]
inc edi
lea ecx [ edx + ecx * 4 ]
lea eax [ ecx + eax * 4 ]
xor ecx ecx
mov esi [ eax ]
add eax 0x4
mov [ ecx ] esi
add ecx 0x4
dec edx
jne r-xdata
mov esi [ esp + 0xc ]
test edi edi
je r-xdata
add ecx 0xfffffffc
cmp ebp ebx
mov edx ebx
jbe r-xdata
mov eax [ edi + esi ]
mul [ ecx ]
xor ecx ecx
mov [ esp ] eax
mov eax ebp
lea ebp [ eax + esi - 0x4 ]
add ebx [ ebp ]
setb cl
add ebx [ esp ]
adc ecx edx
mov [ ebp ] ebx
mov edx [ esp + 0x30 ]
add esi 0xfffffffc
mov ebx ecx
mov ecx [ esp + 0x8 ]
cmp ebp edx
mov ebp eax
ja r-xdata
xor edx edx
add ecx [ ebp + edi * 4 - 0x8 ]
setb dl
add ecx [ eax + edi * 4 - 0x8 ]
adc edx 0x0
mov [ esi + edi * 4 - 0x8 ] ecx
dec edi
cmp edi 0x1
mov ecx edx
jg r-xdata
jmp r-xdata
sub_45e3dc
push 0x160
push 0x1
call sub_43f807
add esp 0x8
test eax eax
je r-xdata
retn
xor ecx ecx
mov [ eax + 0x118 ] ecx
mov [ eax + 0x114 ] ecx
mov [ eax + 0x120 ] ecx
mov [ eax + 0x11c ] ecx
mov [ eax + 0x15c ] ecx
mov [ eax + 0x13c ] ecx
mov [ eax + 0x138 ] ecx
mov [ eax + 0x148 ] ecx
mov [ eax + 0x144 ] ecx
mov [ eax + 0x140 ] ecx
sub_45e42e
push edi
push esi
mov esi [ esp + 0xc ]
mov edi 0x84
push edi
push esi
call sub_48f5d3
add esp 0x8
lea eax [ esi + 0x84 ]
push edi
push eax
call sub_48f5d3
add esp 0x8
add esi 0x114
push 0x4c
push esi
call sub_48f5d3
add esp 0x8
pop esi
pop edi
jmp sub_43f9d4
sub_45e46c
push edi
push esi
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
lea edx [ edi + 0x20 ]
mov ecx esi
call sub_45e51b
add esi 0x84
mov edx edi
mov ecx esi
pop esi
pop edi
jmp sub_45e51b
sub_45e4c5
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ecx edi
call sub_45e990
mov ecx edi
mov edx esi
push ebx
call sub_45e55f
add esp 0x4
pop esi
pop edi
pop ebx
retn
sub_45e4f0
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ecx edi
call sub_45e990
mov ecx edi
mov edx esi
push ebx
call sub_45e55f
add esp 0x4
pop esi
pop edi
pop ebx
retn
sub_45e51b
movaps xmm0 [ r--data ]
movups [ ecx ] xmm0
mov eax [ edx ]
mov [ ecx + 0x10 ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x14 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x18 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0x1c ] eax
mov eax [ edx + 0x10 ]
mov [ ecx + 0x20 ] eax
mov eax [ edx + 0x14 ]
mov [ ecx + 0x24 ] eax
mov eax [ edx + 0x18 ]
mov [ ecx + 0x28 ] eax
mov eax [ edx + 0x1c ]
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x80 ] 0x40
retn
sub_45e55f
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov esi edx
mov edi ecx
test ebx ebx
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi + 0x80 ]
xor ebp ebp
inc ebp
cmp eax 0x3f
jg r-xdata
mov ecx edi
call sub_45e5ba
mov eax [ edi + 0x80 ]
cmp eax 0x40
jl r-xdata
lea ecx [ eax + 0x1 ]
mov [ edi + 0x80 ] ecx
mov al [ edi + eax + 0x40 ]
xor [ esi ] al
inc esi
cmp ebx ebp
lea ebx [ ebx - 0x1 ]
mov eax [ edi + 0x80 ]
je r-xdata
test ebx ebx
jne r-xdata
cmp eax 0x40
jl r-xdata
sub_45e5ba
push ebp
push ebx
push edi
push esi
sub esp 0x68
mov eax [ rw-data ]
mov edx ecx
lea ebx [ esp + 0x24 ]
mov ecx 0x10
mov edi ebx
mov esi edx
mov [ esp + 0x64 ] eax
mov [ esp + 0x18 ] edx
[ edi ] [ esi ]
mov edx [ ebx + 0x24 ]
mov ecx [ ebx + 0x4 ]
movd xmm0 [ ebx + 0x10 ]
movd xmm1 [ ebx + 0x1c ]
mov eax [ ebx ]
mov esi [ ebx + 0x30 ]
mov edi [ ebx + 0x38 ]
mov ebp [ ebx + 0x3c ]
mov [ esp + 0x8 ] edx
mov edx [ ebx + 0x8 ]
mov [ esp ] ecx
mov ecx [ ebx + 0x20 ]
punpckldq xmm1 xmm0
movq xmm0 [ ebx + 0x14 ]
mov [ esp + 0x10 ] edx
mov edx [ ebx + 0x28 ]
mov [ esp + 0xc ] ecx
mov ecx [ ebx + 0x34 ]
punpcklqdq xmm0 xmm1
mov [ esp + 0x4 ] edx
mov edx [ ebx + 0xc ]
mov ebx [ ebx + 0x2c ]
mov [ esp + 0x14 ] edx
mov edx 0xfffffffe
pshufd xmm1 xmm0 0xe7
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] ebx
movd xmm5 [ esp + 0xc ]
movd edx xmm1
pshufd xmm1 xmm0 0xe5
add edx eax
movd eax xmm0
movd ebx xmm1
pshufd xmm1 xmm0 0x4e
add eax [ esp ]
add ebx [ esp + 0x10 ]
xor esi edx
rol esi 0x10
mov [ esp ] eax
movd eax xmm1
xor edi ebx
movd xmm1 esi
add eax [ esp + 0x14 ]
rol edi 0x10
movd xmm4 edi
xor ebp eax
rol ebp 0x10
movd xmm2 ebp
mov ebp [ esp ]
punpckldq xmm2 xmm1
movd xmm1 [ esp + 0x1c ]
xor ecx ebp
rol ecx 0x10
punpckldq xmm1 xmm5
movd xmm3 ecx
punpckldq xmm3 xmm4
movd xmm4 [ esp + 0x4 ]
punpcklqdq xmm3 xmm2
movd xmm2 [ esp + 0x8 ]
punpckldq xmm2 xmm4
punpcklqdq xmm2 xmm1
paddd xmm2 xmm3
pxor xmm0 xmm2
movdqa xmm1 xmm0
psrld xmm0 0x14
pslld xmm1 0xc
por xmm0 xmm1
pshufd xmm1 xmm0 0xe7
movd esi xmm0
movd ecx xmm1
pshufd xmm1 xmm0 0xe5
add esi ebp
movd edi xmm1
pshufd xmm1 xmm0 0x4e
add ecx edx
movd xmm6 esi
movd edx xmm1
add edi ebx
movd xmm1 ecx
movdqa xmm4 xmm6
add edx eax
movd xmm7 edi
movd xmm5 edx
punpckldq xmm4 xmm7
mov edx [ esp + 0x20 ]
punpckldq xmm7 xmm5
punpckldq xmm5 xmm1
punpckldq xmm1 xmm6
punpcklqdq xmm4 xmm5
punpcklqdq xmm1 xmm7
pxor xmm4 xmm3
movdqa xmm3 xmm4
psrld xmm4 0x18
add edx 0x2
pslld xmm3 0x8
cmp edx 0x12
por xmm4 xmm3
paddd xmm2 xmm4
pxor xmm0 xmm2
pshufd xmm2 xmm2 0x39
movdqa xmm3 xmm0
psrld xmm0 0x19
pslld xmm3 0x7
por xmm0 xmm3
pshufd xmm3 xmm4 0x4e
paddd xmm1 xmm0
pxor xmm3 xmm1
movdqa xmm4 xmm3
psrld xmm3 0x10
pslld xmm4 0x10
por xmm3 xmm4
paddd xmm2 xmm3
pxor xmm0 xmm2
movdqa xmm4 xmm0
psrld xmm0 0x14
pslld xmm4 0xc
por xmm0 xmm4
paddd xmm1 xmm0
pshufd xmm4 xmm1 0xe5
pxor xmm3 xmm1
movd eax xmm1
movd [ esp ] xmm4
pshufd xmm4 xmm1 0x4e
movd [ esp + 0x10 ] xmm4
pshufd xmm4 xmm1 0xe7
movd [ esp + 0x14 ] xmm4
movdqa xmm4 xmm3
psrld xmm3 0x18
pslld xmm4 0x8
por xmm3 xmm4
paddd xmm2 xmm3
pshufd xmm6 xmm3 0xe7
pshufd xmm5 xmm3 0x4e
movd ebp xmm3
pxor xmm0 xmm2
movd [ esp + 0x4 ] xmm2
movd edi xmm6
movd ecx xmm5
movdqa xmm4 xmm0
psrld xmm0 0x19
pslld xmm4 0x7
por xmm0 xmm4
pshufd xmm4 xmm2 0xe7
movd [ esp + 0x8 ] xmm4
pshufd xmm4 xmm2 0xe5
pshufd xmm2 xmm2 0x4e
movd ebx xmm4
pshufd xmm4 xmm3 0xe5
movd [ esp + 0xc ] xmm2
movd esi xmm4
jl r-xdata
mov edx [ esp + 0xc ]
mov [ esp + 0x54 ] esi
mov esi [ esp + 0x8 ]
pshufd xmm0 xmm0 0x93
mov [ esp + 0x44 ] edx
mov edx [ esp + 0x4 ]
mov [ esp + 0x58 ] ecx
mov [ esp + 0x48 ] esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x5c ] edi
mov [ esp + 0x4c ] edx
movdqu [ esp + 0x34 ] xmm0
movdqu [ esp + 0x24 ] xmm1
mov [ esp + 0x60 ] ebp
mov [ esp + 0x50 ] ebx
add eax [ esi ]
mov [ esp + 0x24 ] eax
xor eax eax
inc eax
mov ecx [ esi + eax * 4 ]
add [ esp + eax * 4 + 0x24 ] ecx
inc eax
cmp eax 0x10
jne r-xdata
movaps xmm0 [ r--data ]
movdqa xmm1 [ r--data ]
movdqa xmm2 [ r--data ]
xor eax eax
movsd xmm3 [ esp + eax * 4 + 0x24 ]
shufps xmm3 xmm3 0xd4
movaps xmm4 xmm3
shufps xmm3 xmm3 0xe8
andps xmm4 xmm0
pshuflw xmm3 xmm3 0xe8
movaps xmm5 xmm4
movaps xmm6 xmm4
psrlq xmm4 0x18
psrlq xmm5 0x8
psrlq xmm6 0x10
pshufd xmm4 xmm4 0xe8
pshufd xmm5 xmm5 0xe8
pshuflw xmm4 xmm4 0xe8
pshuflw xmm5 xmm5 0xe8
punpckldq xmm3 xmm5
pshufd xmm5 xmm6 0xe8
pshuflw xmm5 xmm5 0xe8
pand xmm3 xmm1
punpckldq xmm5 xmm4
pshufd xmm3 xmm3 0x44
pand xmm5 xmm1
pshuflw xmm3 xmm3 0xe8
pshufd xmm4 xmm5 0x44
pshufhw xmm3 xmm3 0xed
movdqa xmm5 xmm2
pshuflw xmm4 xmm4 0x84
packuswb xmm3 xmm0
pshufhw xmm4 xmm4 0xd4
pand xmm3 xmm2
packuswb xmm4 xmm0
pandn xmm5 xmm4
por xmm3 xmm5
movq [ esi + eax * 4 + 0x40 ] xmm3
add eax 0x2
cmp eax 0x10
jne r-xdata
mov [ esi + 0x80 ] 0x0
push 0x40
lea eax [ esp + 0x28 ]
push eax
call sub_48f5d3
add esp 0x8
inc [ esi + 0x30 ]
jne r-xdata
mov ecx [ esp + 0x64 ]
call sub_497c4a
add esp 0x68
pop esi
pop edi
pop ebx
pop ebp
retn
inc [ esi + 0x34 ]
sub_45e990
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi esp
mov esi ecx
mov [ esp + 0x8 ] eax
mov eax edx
mov [ edi ] 0x0
mov [ edi + 0x4 ] dl
mov [ edi + 0x5 ] dh
shr edx 0x18
shr eax 0x10
mov [ edi + 0x6 ] al
mov [ edi + 0x7 ] dl
mov edx edi
call sub_45e9f0
lea ecx [ esi + 0x84 ]
mov edx edi
call sub_45e9f0
inc [ esi + 0xb4 ]
push 0x8
push edi
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
retn
sub_45ea19
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
mov edx edi
push [ esp + 0x1c ]
push ebx
call sub_45ed96
add esp 0x8
add edi ebx
add esi 0x114
mov ecx esi
mov edx edi
pop esi
pop edi
pop ebx
jmp sub_45f274
sub_45ea4d
push ebx
push edi
push esi
sub esp 0x14
mov ecx [ rw-data ]
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
mov [ esp + 0x10 ] ecx
mov ecx esi
mov edx edi
push eax
push ebx
call sub_45ed96
add esp 0x8
add edi ebx
add esi 0x114
mov ebx esp
mov ecx esi
mov edx ebx
call sub_45f274
push 0x10
push ebx
push edi
call sub_440320
add esp 0xc
mov ecx [ esp + 0x10 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
pop ebx
retn
sub_45eaae
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x15c ] ecx
mov [ eax + 0x13c ] ecx
mov [ eax + 0x138 ] ecx
mov [ eax + 0x148 ] ecx
mov [ eax + 0x144 ] ecx
mov [ eax + 0x140 ] ecx
mov [ eax + 0x10c ] ecx
mov [ eax + 0x108 ] ecx
mov [ eax + 0x114 ] ecx
mov [ eax + 0x110 ] ecx
mov [ eax + 0x120 ] ecx
mov [ eax + 0x11c ] ecx
mov [ eax + 0x118 ] ecx
retn
sub_45eb03
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov eax [ rw-data ]
mov ebp [ esp + 0x30 ]
mov ebx [ esp + 0x38 ]
mov esi [ esp + 0x34 ]
mov [ esp + 0x18 ] eax
test ebx ebx
mov eax [ ebp + 0x108 ]
setne cl
je r-xdata
mov [ esp ] cl
cmp eax 0x3
jg r-xdata
cmp [ esp ] 0x0
je r-xdata
lea edi [ ebp + 0x84 ]
lea edx [ ebp + 0x10c ]
mov ecx edi
call sub_45e9f0
inc [ ebp + 0x108 ]
mov ecx edi
call sub_45e5ba
movsd xmm0 [ ebp + 0xc4 ]
movsd xmm1 [ ebp + 0xcc ]
mov al 0xf
lea edi [ ebp + 0x114 ]
movsd [ esp + 0x8 ] xmm0
movsd [ esp + 0x10 ] xmm1
and [ esp + 0xb ] al
and [ esp + 0xf ] al
and [ esp + 0x13 ] al
and [ esp + 0x17 ] al
mov al 0xfc
and [ esp + 0xc ] al
and [ esp + 0x10 ] al
and [ esp + 0x14 ] al
xor eax eax
mov [ ebp + 0x128 ] eax
mov [ ebp + 0x124 ] eax
mov [ ebp + 0x130 ] eax
mov [ ebp + 0x12c ] eax
mov [ ebp + 0x134 ] eax
xor ecx ecx
inc ecx
mov ecx [ esp + 0x18 ]
call sub_497c4a
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x15c ]
lea edi [ ebp + 0x114 ]
mov [ esp ] edi
test eax eax
je r-xdata
mov ebp eax
movzx edx [ esp + eax + 0x8 ]
mov ecx eax
sar ebp 0x1f
shr ebp 0x1e
add ebp eax
and ebp 0x1c
sub ecx ebp
shl cl 0x3
shl edx cl
mov ecx eax
inc eax
and ecx 0xfffffffc
or [ edi + ecx + 0x10 ] edx
cmp eax 0x10
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x10
push eax
call sub_48f5d3
add esp 0x8
mov ebp [ esp + 0x30 ]
movsd xmm0 [ ebp + 0xd4 ]
movsd xmm1 [ ebp + 0xdc ]
movsd [ edi + 0x8 ] xmm1
movsd [ edi ] xmm0
mov [ ebp + 0x104 ] 0x40
cmp eax 0x4
jne r-xdata
cmp edx 0x3
jl r-xdata
cmp ebx 0x10
jl r-xdata
cmp eax 0xf
jg r-xdata
mov dl [ esi ]
mov edi 0x7
inc esi
sub edi eax
cmp ebx ecx
lea ebx [ ebx - 0x1 ]
mov [ ebp + edi + 0x10c ] dl
mov edx [ ebp + 0x108 ]
lea eax [ edx + 0x1 ]
mov [ ebp + 0x108 ] eax
setne [ esp ]
je r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov ecx 0xffffffe0
lea ebp [ ebx + 0x10 ]
mov edi esi
not eax
cmp eax 0xffffffdf
cmovg ecx eax
lea eax [ ebx + ecx + 0x10 ]
and eax 0xfffffff0
mov [ esp + 0x4 ] eax
cmp eax 0x10
jne r-xdata
xor ecx ecx
inc ecx
lea eax [ ebp + 0x14c ]
push ebx
push esi
push eax
call sub_49a1f0
add esp 0xc
mov [ ebp + 0x15c ] ebx
mov ecx [ esp ]
mov eax 0x10
mov edx edi
push eax
call sub_45ee50
add esp 0x4
add ebp 0xfffffff0
add edi 0x10
cmp ebp 0x1f
jg r-xdata
mov eax [ esp + 0x4 ]
mov ebp [ esp + 0x30 ]
add ebx 0xfffffff0
sub ebx eax
lea esi [ esi + eax + 0x10 ]
mov edi [ esp ]
lea edx [ ebp + 0x14c ]
mov ecx edi
push 0x10
call sub_45ee50
add esp 0x4
mov [ ebp + 0x15c ] 0x0
cmp eax 0x10
jl r-xdata
mov dl [ esi ]
lea edi [ eax + 0x1 ]
inc esi
cmp ebx ecx
lea ebx [ ebx - 0x1 ]
mov [ ebp + 0x15c ] edi
mov [ ebp + eax + 0x14c ] dl
mov eax [ ebp + 0x15c ]
je r-xdata
sub_45ed53
push edi
push esi
sub esp 0x14
mov ecx 0x114
mov eax [ rw-data ]
mov edi [ esp + 0x24 ]
mov esi esp
add ecx [ esp + 0x20 ]
mov edx esi
mov [ esp + 0x10 ] eax
call sub_45f274
push 0x10
push esi
push edi
call sub_440320
add esp 0xc
mov ecx [ esp + 0x10 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
retn
sub_45ed96
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov esi ecx
mov ecx [ rw-data ]
mov eax [ esp + 0x20 ]
mov ebp esp
mov ebx 0x4
mov edi edx
mov [ esp + 0x4 ] ecx
xor ecx ecx
mov [ esi + 0x15c ] ecx
mov [ esi + 0x13c ] ecx
mov [ esi + 0x138 ] ecx
mov [ esi + 0x148 ] ecx
mov [ esi + 0x144 ] ecx
mov [ esi + 0x140 ] ecx
mov [ esi + 0x10c ] ecx
mov [ esi + 0x108 ] ecx
mov [ esi + 0x114 ] ecx
mov [ esi + 0x110 ] ecx
mov [ esi + 0x120 ] ecx
mov [ esi + 0x11c ] ecx
mov [ esi + 0x118 ] ecx
mov ecx eax
shr ecx 0x18
mov [ ebp ] cl
mov ecx eax
shr ecx 0x10
mov [ ebp + 0x1 ] cl
mov [ ebp + 0x2 ] ah
mov [ ebp + 0x3 ] al
push ebx
push ebp
push esi
call sub_45eb03
add esp 0xc
push ebx
push ebp
call sub_48f5d3
add esp 0x8
push [ esp + 0x1c ]
push edi
push esi
call sub_45eb03
add esp 0xc
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45ee50
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x70
mov [ esp + 0x34 ] ecx
mov eax [ ebp + 0x8 ]
xor esi esi
xorps xmm0 xmm0
mov ecx [ rw-data ]
test eax eax
mov [ esp + 0x68 ] ecx
mov [ esp + 0x60 ] esi
movaps [ esp + 0x50 ] xmm0
jle r-xdata
mov edx eax
lea edi [ esp + 0x50 ]
sar edx 0x1f
shr edx 0x1e
add edx eax
and edx 0xfffffffc
sub eax edx
shl al 0x3
xor esi esi
inc esi
mov ecx eax
shl esi cl
mov ecx edi
or [ esp + edx + 0x50 ] esi
mov esi [ esp + 0x34 ]
mov edx edi
lea eax [ esi + 0x24 ]
push eax
call sub_45f23d
add esp 0x4
mov eax [ esi + 0x10 ]
mov ecx [ edi ]
mov [ esp ] eax
mul ecx
mov ebx [ esi + 0x14 ]
mov [ esp + 0x4c ] eax
mov [ esp + 0x18 ] edx
mov eax ebx
mov [ esp + 0x14 ] ebx
mul ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x4 ] edx
mov eax [ esi + 0x18 ]
mov [ esp + 0x1c ] eax
mul ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x20 ] edx
mov eax [ esi + 0x1c ]
mov [ esp + 0x10 ] eax
mul ecx
mov [ esp + 0x8 ] eax
mov [ esp + 0x44 ] edx
mov edi [ esi + 0x20 ]
mov eax edi
mov [ esp + 0x2c ] edi
mul ecx
mov ecx eax
lea eax [ esp + 0x50 ]
mov [ esp + 0x3c ] edx
mov ebx [ eax + 0x4 ]
mov eax [ esp ]
mul ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x24 ] edx
mul ebx
mov [ esp + 0x38 ] eax
mov eax edi
mov esi edx
mov edi [ esp + 0xc ]
mul ebx
mov ebx [ esp + 0x20 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x30 ]
add eax [ esp + 0x18 ]
adc edi [ esp + 0x4 ]
adc [ esp + 0x8 ] ebx
mov ebx [ esp + 0x40 ]
adc ecx [ esp + 0x44 ]
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x3c ]
adc [ esp + 0x28 ] ecx
adc edx 0x0
add edi [ esp + 0x38 ]
mov [ esp + 0x18 ] edx
adc esi 0x0
add eax [ esp + 0x48 ]
adc edi [ esp + 0x24 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x1c ]
adc esi 0x0
mul ebx
mov [ esp + 0xc ] edi
mov edi eax
mov eax [ esp + 0x10 ]
mov ecx edx
add edi [ esp + 0x8 ]
adc ecx 0x0
add edi esi
adc ecx 0x0
mul ebx
mov esi eax
mov ebx edx
lea eax [ esp + 0x50 ]
add esi [ esp + 0x4 ]
adc ebx 0x0
add esi ecx
mov ecx [ eax + 0x8 ]
mov eax [ esp ]
adc ebx 0x0
add ebx [ esp + 0x28 ]
mov [ esp + 0x8 ] ecx
adc [ esp + 0x18 ] 0x0
mul ecx
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] edx
mul ecx
mov ecx edx
mov edx [ esp + 0xc ]
add eax edi
adc ecx 0x0
add [ esp + 0x28 ] edx
adc eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x1c ]
adc ecx 0x0
mul [ esp + 0x8 ]
add eax esi
mov edi edx
mov esi [ esp + 0x8 ]
adc edi 0x0
add eax ecx
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
adc edi 0x0
mul esi
mov ecx edx
add eax ebx
adc ecx 0x0
add eax edi
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x2c ]
adc ecx 0x0
mul esi
add eax [ esp + 0x18 ]
adc edx 0x0
add eax ecx
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x50 ]
adc edx 0x0
mov esi [ eax + 0xc ]
mov eax [ esp ]
mov [ esp + 0x8 ] edx
mul esi
mov ebx eax
mov eax [ esp + 0x14 ]
mov ecx edx
mul esi
add eax [ esp + 0x4 ]
mov edi edx
adc edi 0x0
add ebx [ esp + 0xc ]
adc eax ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x1c ]
adc edi 0x0
mul esi
mov ecx eax
mov eax [ esp + 0x10 ]
mov ebx edx
add ecx [ esp + 0x24 ]
adc ebx 0x0
add ecx edi
adc ebx 0x0
mul esi
add eax [ esp + 0x20 ]
adc edx 0x0
add eax ebx
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x2c ]
adc edx 0x0
mov [ esp + 0x24 ] edx
mul esi
mov esi eax
lea eax [ esp + 0x50 ]
add esi [ esp + 0x8 ]
mov edi [ eax + 0x10 ]
mov eax [ esp ]
adc edx 0x0
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] edx
mul edi
mov ebx eax
mov eax [ esp + 0x14 ]
mov [ esp ] edx
mul edi
mov edi edx
add eax ecx
adc edi 0x0
add ebx [ esp + 0x4 ]
adc eax [ esp ]
mov [ esp + 0x14 ] ebx
mov [ esp ] eax
mov eax [ esp + 0x1c ]
adc edi 0x0
mul [ esp + 0xc ]
mov ecx eax
mov ebx edx
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
add ecx [ esp + 0x20 ]
adc ebx 0x0
add ecx edi
mov edi [ esp + 0x2c ]
adc ebx 0x0
imul edi edx
mul edx
add esi [ esp + 0x24 ]
adc edi [ esp + 0x8 ]
add esi eax
adc edx 0x0
add esi ebx
mov ebx [ esp + 0x14 ]
adc edx edi
mov eax edx
mov edi edx
shr edx 0x4
shld eax esi 0x1e
shld esi ecx 0x1e
mov [ esp + 0x1c ] edx
shr edi 0x2
mov [ esp + 0x10 ] eax
mov eax [ esp ]
and edi 0x3
shld ecx eax 0x1e
shld eax ebx 0x1e
and ebx 0x3
mov [ esp + 0x14 ] ebx
mov ebx 0x5
mov [ esp ] eax
mul ebx
mov eax ecx
mov [ esp + 0x2c ] edx
mul ebx
mov ecx eax
mov eax esi
mov [ esp + 0xc ] edx
mul ebx
mov esi eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
mul ebx
mov ebx eax
mov eax [ esp ]
mov [ esp + 0x8 ] edx
lea edx [ edi + edi * 4 ]
mov edi [ esp + 0x30 ]
lea eax [ eax + eax * 4 ]
add eax [ esp + 0x4c ]
adc edi 0x0
mov [ esp ] eax
setb [ esp + 0x30 ]
add edx [ esp + 0x14 ]
add ecx [ esp + 0x2c ]
adc esi [ esp + 0xc ]
mov [ esp + 0x10 ] ecx
adc ebx [ esp + 0x4 ]
adc edx [ esp + 0x8 ]
xor ecx ecx
add esi [ esp + 0x28 ]
setb cl
xor eax eax
add ebx [ esp + 0x18 ]
setb al
add [ esp + 0x10 ] edi
movzx edi [ esp + 0x30 ]
adc esi edi
mov edi [ esp + 0x1c ]
adc ecx ebx
mov ebx [ esp + 0x10 ]
adc eax 0x0
lea edi [ edi + edi * 4 ]
lea edi [ edi + edi * 4 ]
add edi [ esp ]
adc ebx 0x0
adc esi 0x0
adc ecx 0x0
adc eax edx
mov edx [ esp + 0x34 ]
mov [ edx + 0x24 ] edi
mov [ edx + 0x28 ] ebx
mov [ edx + 0x2c ] esi
mov [ edx + 0x30 ] ecx
mov [ edx + 0x34 ] eax
mov ecx [ esp + 0x68 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx esi
movzx edi [ edx + esi ]
mov ecx esi
sar ebx 0x1f
shr ebx 0x1e
add ebx esi
and ebx 0x1c
sub ecx ebx
shl cl 0x3
shl edi cl
mov ecx esi
inc esi
and ecx 0xfffffffc
or [ esp + ecx + 0x50 ] edi
cmp eax esi
jne r-xdata
sub_45f23d
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov esi [ edx + 0xc ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
mov ebp [ eax + 0x8 ]
add edi [ edx ]
adc ebx [ edx + 0x4 ]
adc ebp [ edx + 0x8 ]
mov edx [ edx + 0x10 ]
adc esi [ eax + 0xc ]
adc edx [ eax + 0x10 ]
mov [ ecx ] edi
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0xc ] esi
mov [ ecx + 0x10 ] edx
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45f274
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x30
mov eax [ rw-data ]
mov edi ecx
mov esi edx
mov [ esp + 0x28 ] eax
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
xorps xmm0 xmm0
xor eax eax
movaps [ esp + 0x10 ] xmm0
mov [ esp + 0x20 ] 0x0
lea edx [ edi + 0x38 ]
mov ecx edi
push eax
call sub_45ee50
add esp 0x4
mov ebx eax
movzx edx [ edi + eax ]
mov ecx eax
sar ebx 0x1f
shr ebx 0x1e
add ebx eax
and ebx 0x1c
sub ecx ebx
shl cl 0x3
shl edx cl
mov ecx eax
inc eax
and ecx 0xfffffffc
or [ esp + ecx + 0x10 ] edx
cmp eax 0x10
jne r-xdata
mov eax [ edi + 0x34 ]
mov ecx eax
and eax 0x3
shr ecx 0x2
mov [ esp + 0x8 ] eax
lea eax [ ecx + ecx * 4 ]
add eax [ edi + 0x24 ]
mov [ esp ] eax
mov eax [ edi + 0x28 ]
mov edx [ edi + 0x2c ]
mov ebx [ edi + 0x30 ]
adc eax 0x0
adc edx 0x0
mov ecx eax
adc ebx 0x0
seto al
lahf
setb [ esp + 0x4 ]
mov eax eax
mov [ esp + 0xc ] eax
mov eax 0x5
add eax [ esp ]
mov eax ecx
adc eax 0x0
mov eax edx
adc eax 0x0
mov eax ebx
adc eax 0x0
movzx eax [ esp + 0x4 ]
adc eax [ esp + 0x8 ]
shr eax 0x2
lea eax [ eax + eax * 4 ]
add eax [ esp ]
adc ecx 0x0
mov [ esp ] eax
adc edx 0x0
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0xc ]
adc ebx 0x0
setb al
movzx eax al
push eax
mov eax ecx
add al 0x7f
sahf
pop eax
mov ecx [ esp ]
adc eax [ esp + 0x8 ]
mov [ edi + 0x24 ] ecx
and eax 0x3
mov ecx [ esp + 0x4 ]
mov [ edi + 0x28 ] ecx
mov [ edi + 0x2c ] edx
mov [ edi + 0x30 ] ebx
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x24 ]
lea ecx [ esp + 0x10 ]
mov edx ecx
push eax
call sub_45f23d
add esp 0x4
xor eax eax
mov edi eax
mov ecx eax
sar edi 0x1f
and ecx 0xfffffffc
shr edi 0x1e
mov edx [ esp + ecx + 0x10 ]
mov ecx eax
add edi eax
and edi 0x1c
sub ecx edi
shl cl 0x3
shr edx cl
mov [ esi + eax ] dl
inc eax
cmp eax 0x10
jne r-xdata
mov ecx [ esp + 0x28 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45f3cc
push edi
push esi
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0xc ]
test ecx ecx
je r-xdata
pop esi
pop edi
retn
mov edx [ esp + 0x10 ]
movzx esi [ edx ]
movzx edi al
shr eax 0x8
inc edx
xor edi esi
xor eax [ edi * 4 + r--data ]
dec ecx
jne r-xdata
sub_45f3f7
push edi
push esi
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
mov edx [ esp + 0xc ]
xor eax eax
movzx esi [ edx ]
movzx edi al
shr eax 0x8
inc edx
xor edi esi
xor eax [ edi * 4 + r--data ]
dec ecx
jne r-xdata
jmp r-xdata
pop esi
pop edi
retn
sub_45f45f
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov edi [ esp + 0x28 ]
mov ebp [ esp + 0x20 ]
cmp edi 0x40000
ja r-xdata
push 0x72
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax edi
and eax 0x7
je r-xdata
mov ecx esi
lea esi [ ecx * 4 ]
cmp ecx eax
jb r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
mov edx [ ebp + 0x4 ]
mov eax edi
shr eax 0x3
lea eax [ eax + eax * 2 ]
shr eax 0x1
mov esi edx
mov [ ebp + 0x4 ] ecx
push 0x2
push ecx
call sub_43f807
add esp 0x8
mov esi [ esp + 0x2c ]
mov esi [ esp + 0x2c ]
cmp ecx edx
jbe r-xdata
mov ecx [ ebp + 0x4 ]
add ecx ecx
push ecx
push 0xff
push eax
call sub_49acf0
add esp 0xc
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp edi 0x38
ja r-xdata
mov [ ebp + 0x4 ] ecx
push 0x2
push ecx
push eax
call sub_43f8db
add esp 0xc
jmp r-xdata
test edi edi
jle r-xdata
mov eax [ esi ]
mov edx [ ebp + 0x4 ]
mov ecx [ ebp ]
bswap eax
dec edx
and edx eax
mov [ ecx + edx * 2 ] 0xfffe
mov [ esp ] 0x0
mov eax [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov ebp 0x8
lea edi [ ebx + eax ]
xor eax eax
inc eax
mov [ esp ] eax
mov [ ebp ] eax
mov ebx [ esp + 0x24 ]
xor edx edx
lea ecx [ ebx + edi ]
mov [ esp + 0x4 ] ecx
xor ecx ecx
inc ecx
mov [ esp ] ecx
mov eax [ esp + 0x24 ]
cmp ebx eax
mov esi eax
jbe r-xdata
push 0x8
push esi
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
and edi ebp
movzx eax [ esi + edi * 2 ]
cmp eax 0xfffe
je r-xdata
mov esi [ esp + 0x2c ]
add ebx 0x8
cmp ebx edi
jb r-xdata
push ebp
push esi
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
mov ecx ebx
push esi
push [ esp + 0x2c ]
call sub_45f67f
add esp 0x8
test eax eax
jne r-xdata
push 0x8
push [ esp + 0x30 ]
push ebx
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
movzx ecx ax
cmp ecx 0xffff
je r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov edx [ esp + 0x24 ]
mov ecx ebx
push [ esp + 0x2c ]
push [ esp + 0x2c ]
call sub_45f67f
add esp 0x8
test eax eax
jne r-xdata
add esi 0x8
cmp esi ebx
jb r-xdata
mov eax [ esp ]
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
jmp r-xdata
inc edi
mov edx [ esp + 0x24 ]
mov ecx ebx
push [ esp + 0x2c ]
push [ esp + 0x2c ]
jmp r-xdata
mov ebp [ esp + 0x20 ]
mov edx [ esp + 0x8 ]
add ebx 0x8
mov eax [ ebp ]
mov [ eax + edi * 2 ] dx
inc edx
cmp ebx [ esp + 0x4 ]
jb r-xdata
mov ecx [ esp + 0x24 ]
lea eax [ ecx + eax * 8 ]
push 0x8
push eax
push ebx
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_45f67f
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x8 ] edx
mov edi [ ebx ]
mov esi [ ebp ]
mov ebp [ ebp + 0x4 ]
bswap edi
dec ebp
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x24 ]
mov ecx ebx
push [ esp + 0x2c ]
push [ esp + 0x2c ]
sub_45f67f
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
xor ebx ebx
mov esi edx
mov [ esp ] ecx
test eax eax
je r-xdata
test ebp ebp
jle r-xdata
push 0x8
push eax
push ecx
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
test ebx ebx
sete al
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
add ebp esi
mov edi 0x4
mov [ esp + 0x4 ] ebp
mov ebp [ esp ]
mov edi 0x4
push edi
push rw-data
push 0x0
call sub_45f3cc
add esp 0xc
push edi
push rw-data
push eax
call sub_45f3cc
add esp 0xc
mov ebx eax
mov eax 0x8
push eax
push esi
push ebp
call sub_498a6d
add esp 0xc
test eax eax
mov eax rw-data
mov ecx rw-data
cmove eax ecx
push edi
push eax
push ebx
call sub_45f3cc
add esp 0xc
push edi
push rw-data
push eax
call sub_45f3cc
add esp 0xc
add esi 0x8
mov ebx eax
cmp esi [ esp + 0x4 ]
jb r-xdata
sub_45f734
push ebp
push ebx
push edi
push esi
sub esp 0x19c
mov eax [ rw-data ]
mov ebp [ esp + 0x1b0 ]
mov esi [ esp + 0x1b4 ]
mov edi [ esp + 0x1b8 ]
mov ebx esp
mov [ esp + 0x198 ] eax
mov ecx [ ebp ]
mov edx [ ebp + 0x4 ]
bswap edx
bswap ecx
push ebx
call sub_45f7da
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
lea eax [ esp + 0x88 ]
bswap edx
bswap ecx
push eax
call sub_45f7da
add esp 0x4
mov ecx [ ebp ]
mov edx [ ebp + 0x4 ]
lea eax [ esp + 0x110 ]
bswap edx
bswap ecx
push eax
call sub_45f7da
add esp 0x4
mov ecx esi
mov edx edi
push ebx
call sub_45f904
add esp 0x4
push 0x198
push ebx
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x198 ]
call sub_497c4a
add esp 0x19c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45f7da
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
xor esi esi
mov [ esp + 0x8 ] eax
mov eax 0xffffff90
mov [ esp ] edx
mov [ esp + 0x4 ] ecx
add eax 0x4
jne r-xdata
mov edx ecx
shr edx 0x5
mov edx [ esp + edx * 4 ]
shr edx cl
and edx 0x1
or esi edx
mov ecx [ eax + r--data ]
add esi esi
test ecx ecx
js r-xdata
xor ebx ebx
mov eax 0xffffff90
add eax 0x4
jne r-xdata
mov edx ecx
shr edx 0x5
mov edx [ esp + edx * 4 ]
shr edx cl
and edx 0x1
or ebx edx
mov ecx [ eax + r--data ]
add ebx ebx
test ecx ecx
js r-xdata
xor ebp ebp
add eax 0x4
jne r-xdata
mov edi ecx
shr edi 0x5
mov edi [ esp + edi * 4 ]
shr edi cl
and edi 0x1
or edx edi
mov ecx [ eax + r--data ]
add edx edx
test ecx ecx
js r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + ebp * 4 ] edx
xor eax eax
mov edx 0xffffff80
add edx 0x4
jne r-xdata
mov edi ecx
shr edi 0x5
mov edi [ esp + edi * 4 ]
shr edi cl
and edi 0x1
or eax edi
mov ecx [ edx + r--data ]
add eax eax
test ecx ecx
js r-xdata
mov ecx [ esp + 0x20 ]
mov [ ecx + ebp * 4 + 0x40 ] eax
inc ebp
cmp ebp 0x10
jne r-xdata
mov eax [ ebp * 4 + r--data ]
mov edx 0x1c
mov edi esi
mov ecx eax
sub edx eax
shl edi cl
mov ecx edx
shr esi cl
mov ecx eax
mov eax 0xffffff80
or esi edi
mov edi ebx
shl edi cl
mov ecx edx
and esi 0xfffffff
xor edx edx
shr ebx cl
or ebx edi
and ebx 0xfffffff
mov [ esp ] ebx
mov [ esp + 0x4 ] esi
mov ecx [ esp + 0x20 ]
xor eax eax
mov [ ecx + 0x84 ] eax
mov [ ecx + 0x80 ] eax
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45f904
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov esi edx
mov edi ecx
lea eax [ ebx + 0x110 ]
push eax
call sub_45fdc2
add esp 0x4
add ebx 0x88
mov ecx edi
mov edx esi
push ebx
call sub_45fc9e
add esp 0x4
mov ecx edi
mov edx esi
pop esi
pop edi
pop ebx
jmp sub_45fdc2
sub_45f93d
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov esi edx
mov edi ecx
push ebx
call sub_45fc9e
add esp 0x4
lea eax [ ebx + 0x88 ]
mov ecx edi
mov edx esi
push eax
call sub_45fdc2
add esp 0x4
add ebx 0x110
mov ecx edi
mov edx esi
push ebx
call sub_45fc9e
add esp 0x4
pop esi
pop edi
pop ebx
retn
sub_45f97b
push ebp
push ebx
push edi
push esi
sub esp 0x20
mov eax [ rw-data ]
mov esi [ esp + 0x34 ]
mov ebx edx
test bl 0x7
mov [ esp + 0x1c ] eax
je r-xdata
mov ebx [ esi + 0x80 ]
mov eax [ esi + 0x84 ]
mov edi edx
test edi edi
je r-xdata
push 0x2bd
push r--data
push r--data
mov edi edx
mov ebx ecx
call sub_4a509d
mov ecx ebx
mov edx edi
add esp 0xc
mov esi eax
mov ebp ebx
lea ebp [ esi + 0x110 ]
lea esi [ esi + 0x88 ]
xor edi edi
mov [ esp ] eax
mov [ esp + 0x10 ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] esi
mov ebp [ ecx + edi ]
mov esi [ ecx + edi + 0x4 ]
lea eax [ esp + 0x14 ]
mov ecx eax
bswap ebp
bswap esi
mov edx ebp
push [ esp + 0x8 ]
push esi
call sub_45ff7a
add esp 0x8
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x14 ]
push [ esp + 0x4 ]
push [ esp + 0x1c ]
call sub_46091b
add esp 0x8
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x14 ]
push [ esp + 0x34 ]
push [ esp + 0x1c ]
call sub_45ff7a
mov ecx [ esp + 0x14 ]
add esp 0x8
mov edx [ esp ]
xor ebx [ esp + 0x14 ]
mov eax ebx
xor edx [ esp + 0x18 ]
shr eax 0x18
mov [ ecx + edi ] al
mov eax ebx
shr eax 0x10
mov [ ecx + edi + 0x1 ] al
mov eax edx
mov [ ecx + edi + 0x2 ] bh
mov [ ecx + edi + 0x3 ] bl
mov ebx ebp
shr eax 0x18
mov [ ecx + edi + 0x4 ] al
mov eax edx
shr eax 0x10
mov [ ecx + edi + 0x5 ] al
mov [ ecx + edi + 0x6 ] dh
mov [ ecx + edi + 0x7 ] dl
add edi 0x8
mov [ esp ] esi
mov eax [ esp + 0x10 ]
cmp edi eax
jb r-xdata
jmp r-xdata
mov eax [ esp + 0x34 ]
mov [ eax + 0x80 ] ebp
mov [ eax + 0x84 ] esi
mov ecx [ esp + 0x1c ]
call sub_497c4a
add esp 0x20
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45fab9
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov edi [ esp + 0x28 ]
mov ebx edx
mov esi ecx
test bl 0x7
mov [ esp + 0x10 ] eax
je r-xdata
mov ecx [ edi + 0x80 ]
mov eax [ edi + 0x84 ]
test ebx ebx
je r-xdata
push 0x29b
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edx [ esp + 0x28 ]
mov [ edx + 0x80 ] ecx
mov [ edx + 0x84 ] eax
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
lea edx [ edi + 0x88 ]
lea edi [ edi + 0x110 ]
xor ebp ebp
mov [ esp + 0x4 ] edx
mov [ esp ] edi
mov edx [ esi + ebp ]
mov edi ebx
mov ebx [ esi + ebp + 0x4 ]
bswap edx
bswap ebx
xor edx ecx
lea ecx [ esp + 0x8 ]
xor ebx eax
mov ecx ecx
push [ esp + 0x28 ]
push ebx
mov ebx edi
call sub_46091b
add esp 0x8
mov edx [ esp + 0x8 ]
lea edi [ esp + 0x8 ]
mov ecx edi
push [ esp + 0x4 ]
push [ esp + 0x10 ]
call sub_45ff7a
add esp 0x8
mov edx [ esp + 0x8 ]
mov ecx edi
push [ esp ]
push [ esp + 0x10 ]
call sub_46091b
add esp 0x8
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov edx ecx
shr edx 0x18
mov [ esi + ebp ] dl
mov edx ecx
shr edx 0x10
mov [ esi + ebp + 0x1 ] dl
mov edx eax
mov [ esi + ebp + 0x2 ] ch
mov [ esi + ebp + 0x3 ] cl
shr edx 0x18
mov [ esi + ebp + 0x4 ] dl
mov edx eax
shr edx 0x10
mov [ esi + ebp + 0x5 ] dl
mov [ esi + ebp + 0x6 ] ah
mov [ esi + ebp + 0x7 ] al
add ebp 0x8
cmp ebp ebx
jb r-xdata
sub_45fbd2
push ebx
push edi
push esi
sub esp 0x8c
mov eax [ rw-data ]
mov ecx [ esp + 0x9c ]
mov esi [ esp + 0xa0 ]
mov edi [ esp + 0xa4 ]
mov ebx esp
mov edx ebx
mov [ esp + 0x88 ] eax
call sub_45fc28
mov ecx esi
mov edx edi
push ebx
call sub_45fc9e
add esp 0x4
mov ecx [ esp + 0x88 ]
call sub_497c4a
add esp 0x8c
pop esi
pop edi
pop ebx
retn
sub_45fc28
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov [ esp ] edx
mov edx ecx
xor esi esi
xor edi edi
xor ebx ebx
mov ecx [ rw-data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
add ecx 0xfffffff9
mov eax esi
mov ebp 0x7f
shr eax cl
shl ebp cl
add al al
not ebp
mov [ esp + ebx + 0x4 ] al
inc ebx
and esi ebp
cmp ebx 0x8
jne r-xdata
movzx ebp [ edx + edi ]
shl esi 0x8
add ecx 0x8
inc edi
or esi ebp
cmp ecx 0x6
jg r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
bswap edx
bswap ecx
push [ esp ]
call sub_45f7da
add esp 0x4
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45fc9e
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov edi [ esp + 0x24 ]
mov ebx edx
mov esi ecx
test bl 0x7
mov [ esp + 0xc ] eax
je r-xdata
mov ecx [ edi + 0x80 ]
mov eax [ edi + 0x84 ]
mov edx edi
test ebx ebx
je r-xdata
push 0x261
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebx edx
mov [ esp ] ebx
xor ebp ebp
mov ebx edx
mov edx [ esi + ebp ]
mov edi [ esi + ebp + 0x4 ]
bswap edx
bswap edi
xor edx ecx
lea ecx [ esp + 0x4 ]
xor edi eax
push ebx
push edi
call sub_46091b
add esp 0x8
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov edx ecx
shr edx 0x18
mov [ esi + ebp ] dl
mov edx ecx
shr edx 0x10
mov [ esi + ebp + 0x1 ] dl
mov edx eax
mov [ esi + ebp + 0x2 ] ch
mov [ esi + ebp + 0x3 ] cl
shr edx 0x18
mov [ esi + ebp + 0x4 ] dl
mov edx eax
shr edx 0x10
mov [ esi + ebp + 0x5 ] dl
mov [ esi + ebp + 0x6 ] ah
mov [ esi + ebp + 0x7 ] al
add ebp 0x8
cmp ebp [ esp ]
jb r-xdata
jmp r-xdata
mov [ ebx + 0x80 ] ecx
mov [ ebx + 0x84 ] eax
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45fd6c
push ebx
push edi
push esi
sub esp 0x8c
mov eax [ rw-data ]
mov ecx [ esp + 0x9c ]
mov esi [ esp + 0xa0 ]
mov edi [ esp + 0xa4 ]
mov ebx esp
mov edx ebx
mov [ esp + 0x88 ] eax
call sub_45fc28
mov ecx esi
mov edx edi
push ebx
call sub_45fdc2
add esp 0x4
mov ecx [ esp + 0x88 ]
call sub_497c4a
add esp 0x8c
pop esi
pop edi
pop ebx
retn
sub_45fdc2
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov eax [ rw-data ]
mov edi ecx
test dl 0x7
mov [ esp + 0x18 ] eax
je r-xdata
mov eax [ esp + 0x30 ]
test edx edx
mov ebx [ eax + 0x80 ]
mov ecx [ eax + 0x84 ]
je r-xdata
push 0x279
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
add esp 0xc
mov esi ecx
mov ebp ebx
mov [ esp ] edi
xor edi edi
mov [ esp + 0x4 ] edx
mov esi [ esp ]
mov [ esp + 0x8 ] ecx
lea ecx [ esp + 0x10 ]
mov ebp [ esi + edi ]
mov eax [ esi + edi + 0x4 ]
bswap ebp
bswap eax
mov [ esp + 0xc ] eax
mov edx ebp
push [ esp + 0x30 ]
push eax
call sub_45ff7a
mov edx [ esp + 0xc ]
add esp 0x8
mov ecx [ esp + 0x8 ]
xor ebx [ esp + 0x10 ]
mov eax ebx
xor ecx [ esp + 0x14 ]
shr eax 0x18
mov [ esi + edi ] al
mov eax ebx
shr eax 0x10
mov [ esi + edi + 0x1 ] al
mov eax ecx
mov [ esi + edi + 0x2 ] bh
mov [ esi + edi + 0x3 ] bl
mov ebx ebp
shr eax 0x18
mov [ esi + edi + 0x4 ] al
mov eax ecx
shr eax 0x10
mov [ esi + edi + 0x5 ] al
mov [ esi + edi + 0x6 ] ch
mov [ esi + edi + 0x7 ] cl
mov eax [ esp + 0x30 ]
add edi 0x8
mov esi [ esp + 0xc ]
cmp edi edx
mov ecx esi
jb r-xdata
jmp r-xdata
mov [ eax + 0x80 ] ebp
mov [ eax + 0x84 ] esi
mov ecx [ esp + 0x18 ]
call sub_497c4a
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_45fecc
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push edi
push esi
call sub_4612ea
add esp 0x8
add esi 0x198
push edi
push esi
call sub_4612ea
add esp 0x8
pop esi
pop edi
retn
sub_45ff2b
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push edi
push esi
call sub_4614db
add esp 0x8
add esi 0x88
push edi
push esi
call sub_4614db
add esp 0x8
pop esi
pop edi
retn
sub_45ff7a
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x18 ]
mov edi edx
mov [ esp ] ecx
mov ecx [ esp + 0x1c ]
shr edi 0x4
xor edi esi
mov eax [ ecx + 0x3c ]
and edi 0xf0f0f0f
mov ebx edi
xor edi esi
shl ebx 0x4
movzx esi di
xor ebx edx
mov edx ebx
shr edx 0x10
xor esi edx
mov edx esi
xor esi edi
shl edx 0x10
mov edi esi
xor edx ebx
shr edi 0x2
xor edi edx
and edi 0x33333333
lea ebx [ edi * 4 ]
xor edi edx
xor ebx esi
mov edx ebx
shr edx 0x8
xor edx edi
and edx 0xff00ff
mov ebp edx
xor edx edi
shl ebp 0x8
mov edi edx
xor ebp ebx
shr edi 0x1
mov ebx [ ecx + 0x7c ]
xor edi ebp
and edi 0x55555555
lea esi [ edi + edi ]
xor edi ebp
shld edi ebp 0x1
xor esi edx
xor ebx edi
xor eax edi
rol esi 0x1
mov edx ebx
mov ebp eax
shr edx 0x16
rol ebp 0x1c
and edx 0xfc
shr ebp 0x16
mov edx [ edx + r--data ]
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp eax
shr ebp 0x12
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
shr ebp 0xe
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp eax
shr eax 0xa
and eax 0xfc
shr ebp 0x2
and ebp 0xfc
or edx [ eax + r--data ]
mov eax ebx
and ebx 0x3f
shr eax 0x6
and eax 0xfc
or edx [ eax + r--data ]
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x38 ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x78 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x34 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x74 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0x30 ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x70 ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x2c ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x6c ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x28 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x68 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0x24 ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x64 ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x20 ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x60 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x1c ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x5c ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0x18 ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x58 ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x14 ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x54 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x10 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x50 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0xc ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x4c ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x8 ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x48 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x4 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x44 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx ]
xor edi edx
mov edx [ ecx + 0x40 ]
xor ebx edi
mov ecx ebx
rol ecx 0x1c
xor edx edi
shr ecx 0x16
mov eax edx
and ecx 0xfc
shr eax 0x16
and eax 0xfc
mov eax [ eax + r--data ]
or eax [ ecx + r--data ]
mov ecx ebx
shr ecx 0x12
and ecx 0xfc
or eax [ ecx + r--data ]
mov ecx edx
shr ecx 0xe
and ecx 0xfc
or eax [ ecx + r--data ]
mov ecx ebx
shr ebx 0xa
and ebx 0xfc
shr ecx 0x2
and ecx 0xfc
or eax [ ebx + r--data ]
mov ebx edx
and edx 0x3f
shr ebx 0x6
and ebx 0xfc
or eax [ ebx + r--data ]
or eax [ ecx + r--data ]
or eax [ edx * 4 + r--data ]
xor eax esi
ror eax 0x1
mov ecx eax
xor ecx edi
ror edi 0x1
shr ecx 0x1
and ecx 0x55555555
lea edx [ ecx + ecx ]
xor ecx edi
xor edx eax
mov eax ecx
shr eax 0x8
xor eax edx
and eax 0xff00ff
mov esi eax
xor eax edx
shl esi 0x8
xor esi ecx
mov ecx esi
shr ecx 0x2
xor ecx eax
and ecx 0x33333333
lea edx [ ecx * 4 ]
xor ecx eax
xor edx esi
mov eax ecx
shr eax 0x10
movzx esi dx
xor esi eax
mov eax esi
xor esi edx
shl eax 0x10
xor eax ecx
mov ecx eax
shr ecx 0x4
xor ecx esi
and ecx 0xf0f0f0f
mov edx ecx
xor ecx esi
mov esi [ esp ]
shl edx 0x4
xor edx eax
mov [ esi ] edx
mov [ esi + 0x4 ] ecx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46091b
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x18 ]
mov edi edx
mov [ esp ] ecx
mov ecx [ esp + 0x1c ]
shr edi 0x4
xor edi esi
mov eax [ ecx ]
and edi 0xf0f0f0f
mov ebx edi
xor edi esi
shl ebx 0x4
movzx esi di
xor ebx edx
mov edx ebx
shr edx 0x10
xor esi edx
mov edx esi
xor esi edi
shl edx 0x10
mov edi esi
xor edx ebx
shr edi 0x2
xor edi edx
and edi 0x33333333
lea ebx [ edi * 4 ]
xor edi edx
xor ebx esi
mov edx ebx
shr edx 0x8
xor edx edi
and edx 0xff00ff
mov ebp edx
xor edx edi
shl ebp 0x8
mov edi edx
xor ebp ebx
shr edi 0x1
mov ebx [ ecx + 0x40 ]
xor edi ebp
and edi 0x55555555
lea esi [ edi + edi ]
xor edi ebp
shld edi ebp 0x1
xor esi edx
xor ebx edi
xor eax edi
rol esi 0x1
mov edx ebx
mov ebp eax
shr edx 0x16
rol ebp 0x1c
and edx 0xfc
shr ebp 0x16
mov edx [ edx + r--data ]
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp eax
shr ebp 0x12
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
shr ebp 0xe
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp eax
shr eax 0xa
and eax 0xfc
shr ebp 0x2
and ebp 0xfc
or edx [ eax + r--data ]
mov eax ebx
and ebx 0x3f
shr eax 0x6
and eax 0xfc
or edx [ eax + r--data ]
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x4 ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x44 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x8 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x48 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0xc ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x4c ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x10 ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x50 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x14 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x54 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0x18 ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x58 ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x1c ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x5c ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x20 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x60 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0x24 ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x64 ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x28 ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x68 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x2c ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x6c ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
mov ebp [ ecx + 0x30 ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x70 ]
xor edi edx
xor ebx edi
xor ebp edi
mov edx ebx
mov eax ebp
shr edx 0x16
rol eax 0x1c
and edx 0xfc
shr eax 0x16
mov edx [ edx + r--data ]
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edx [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edx [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edx [ ebp + r--data ]
mov ebp [ ecx + 0x34 ]
or edx [ eax + r--data ]
or edx [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x74 ]
xor edx esi
xor ebx edx
xor ebp edx
mov esi ebx
mov eax ebp
shr esi 0x16
rol eax 0x1c
and esi 0xfc
shr eax 0x16
mov esi [ esi + r--data ]
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or esi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or esi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or esi [ ebp + r--data ]
mov ebp [ ecx + 0x38 ]
or esi [ eax + r--data ]
or esi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x78 ]
xor esi edi
xor ebx esi
xor ebp esi
mov edi ebx
mov eax ebp
shr edi 0x16
rol eax 0x1c
and edi 0xfc
shr eax 0x16
mov edi [ edi + r--data ]
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr eax 0x12
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebx
shr eax 0xe
and eax 0xfc
or edi [ eax + r--data ]
mov eax ebp
shr ebp 0xa
and ebp 0xfc
shr eax 0x2
and eax 0xfc
or edi [ ebp + r--data ]
mov ebp ebx
and ebx 0x3f
shr ebp 0x6
and ebp 0xfc
or edi [ ebp + r--data ]
or edi [ eax + r--data ]
or edi [ ebx * 4 + r--data ]
mov ebx [ ecx + 0x3c ]
xor edi edx
mov edx [ ecx + 0x7c ]
xor ebx edi
mov ecx ebx
rol ecx 0x1c
xor edx edi
shr ecx 0x16
mov eax edx
and ecx 0xfc
shr eax 0x16
and eax 0xfc
mov eax [ eax + r--data ]
or eax [ ecx + r--data ]
mov ecx ebx
shr ecx 0x12
and ecx 0xfc
or eax [ ecx + r--data ]
mov ecx edx
shr ecx 0xe
and ecx 0xfc
or eax [ ecx + r--data ]
mov ecx ebx
shr ebx 0xa
and ebx 0xfc
shr ecx 0x2
and ecx 0xfc
or eax [ ebx + r--data ]
mov ebx edx
and edx 0x3f
shr ebx 0x6
and ebx 0xfc
or eax [ ebx + r--data ]
or eax [ ecx + r--data ]
or eax [ edx * 4 + r--data ]
xor eax esi
ror eax 0x1
mov ecx eax
xor ecx edi
ror edi 0x1
shr ecx 0x1
and ecx 0x55555555
lea edx [ ecx + ecx ]
xor ecx edi
xor edx eax
mov eax ecx
shr eax 0x8
xor eax edx
and eax 0xff00ff
mov esi eax
xor eax edx
shl esi 0x8
xor esi ecx
mov ecx esi
shr ecx 0x2
xor ecx eax
and ecx 0x33333333
lea edx [ ecx * 4 ]
xor ecx eax
xor edx esi
mov eax ecx
shr eax 0x10
movzx esi dx
xor esi eax
mov eax esi
xor esi edx
shl eax 0x10
xor eax ecx
mov ecx eax
shr ecx 0x4
xor ecx esi
and ecx 0xf0f0f0f
mov edx ecx
xor ecx esi
mov esi [ esp ]
shl edx 0x4
xor edx eax
mov [ esi ] edx
mov [ esi + 0x4 ] ecx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4612ea
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
bswap edx
bswap ecx
push esi
call sub_45f7da
add esp 0x4
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
lea eax [ esi + 0x88 ]
bswap edx
bswap ecx
push eax
call sub_45f7da
add esp 0x4
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
add esi 0x110
bswap edx
bswap ecx
push esi
call sub_45f7da
add esp 0x4
pop esi
pop edi
retn
sub_46133b
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov ecx [ esp + 0x38 ]
mov eax [ rw-data ]
mov ebx [ esp + 0x30 ]
test cl 0x7
mov [ esp + 0x18 ] eax
je r-xdata
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0x84 ]
test ecx ecx
je r-xdata
push 0x2d9
push r--data
push r--data
mov esi ecx
call sub_4a509d
mov ecx esi
add esp 0xc
mov [ ebx + 0x80 ] edx
mov [ ebx + 0x84 ] eax
mov ecx [ esp + 0x18 ]
call sub_497c4a
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x34 ]
lea ecx [ ebx + 0x88 ]
xor edi edi
mov [ esp + 0xc ] ecx
lea ecx [ ebx + 0x110 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
lea ebp [ esp + 0x10 ]
mov [ esp ] eax
mov edx [ esp + 0x4 ]
mov ecx ebp
push ebx
push eax
call sub_46091b
add esp 0x8
mov edx [ esp + 0x10 ]
mov ecx ebp
push [ esp + 0xc ]
push [ esp + 0x18 ]
call sub_45ff7a
add esp 0x8
mov edx [ esp + 0x10 ]
mov ecx ebp
push [ esp + 0x8 ]
push [ esp + 0x18 ]
call sub_46091b
add esp 0x8
movzx ebx [ esi + edi ]
movzx edx [ esi + edi + 0x1 ]
mov ebp [ esp + 0x10 ]
movzx ecx [ esi + edi + 0x2 ]
movzx eax [ esi + edi + 0x3 ]
shl ebx 0x18
shl edx 0x10
shl ecx 0x8
xor ebx ebp
xor edx ebp
shr ebx 0x18
shr edx 0x10
mov [ esi + edi ] bl
mov [ esi + edi + 0x1 ] dl
xor ecx [ esp + 0x10 ]
mov [ esi + edi + 0x2 ] ch
xor eax [ esp + 0x10 ]
mov [ esi + edi + 0x3 ] al
movzx ebx [ esi + edi + 0x4 ]
movzx edx [ esi + edi + 0x5 ]
movzx ecx [ esi + edi + 0x6 ]
movzx eax [ esi + edi + 0x7 ]
shl ebx 0x18
shl edx 0x10
shl ecx 0x8
xor ebx [ esp + 0x14 ]
shr ebx 0x18
mov [ esi + edi + 0x4 ] bl
mov ebx [ esp + 0x30 ]
xor edx [ esp + 0x14 ]
shr edx 0x10
mov [ esi + edi + 0x5 ] dl
xor ecx [ esp + 0x14 ]
mov edx [ esp + 0x4 ]
mov [ esi + edi + 0x6 ] ch
mov ecx [ esp + 0x38 ]
xor eax [ esp + 0x14 ]
mov [ esi + edi + 0x7 ] al
xor eax eax
cmp [ esp ] 0xffffffff
sete al
add edi 0x8
add edx eax
mov eax [ esp ]
cmp edi ecx
lea eax [ eax + 0x1 ]
jb r-xdata
sub_461518
push ebx
push edi
push esi
mov eax [ esp + 0x10 ]
xor ebx ebx
inc ebx
mov edi [ eax + 0x10 ]
push 0x18
push ebx
call sub_43f807
add esp 0x8
mov esi eax
push [ edi + 0x8 ]
push [ edi ]
call sub_45d5e4
add esp 0x8
mov [ esi + 0x8 ] eax
push [ edi + 0xc ]
push [ edi + 0x4 ]
call sub_45d5e4
add esp 0x8
mov [ esi + 0x14 ] eax
push ebx
push [ esi + 0x8 ]
call sub_45db74
add esp 0x8
mov [ esi + 0xc ] eax
push eax
call sub_45df04
add esp 0x4
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_46157b
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
xor ebp ebp
inc ebp
push 0x18
push ebp
call sub_43f807
add esp 0x8
mov esi eax
push ebx
call sub_45b8e2
add esp 0x4
mov [ esi + 0x8 ] eax
push edi
call sub_45b8e2
add esp 0x4
mov [ esi + 0x14 ] eax
push ebp
push [ esi + 0x8 ]
call sub_45db74
add esp 0x8
mov [ esi + 0xc ] eax
push eax
call sub_45df04
add esp 0x4
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4615d8
push esi
mov esi [ esp + 0x8 ]
push [ esi ]
call sub_45b91a
add esp 0x4
push [ esi + 0x4 ]
call sub_45b91a
add esp 0x4
push [ esi + 0x8 ]
call sub_45b91a
add esp 0x4
push [ esi + 0x14 ]
call sub_45b91a
add esp 0x4
push [ esi + 0xc ]
call sub_45b91a
add esp 0x4
push [ esi + 0x10 ]
call sub_45b91a
add esp 0x4
pop esi
jmp sub_43f9d4
sub_461624
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov esi [ esp + 0x28 ]
mov ebp [ esp + 0x24 ]
push [ ebp + 0x10 ]
call sub_45d9f4
add esp 0x4
mov edi eax
push 0x1
push edi
call sub_43f807
add esp 0x8
mov [ esp ] eax
add eax 0x2
lea ecx [ edi - 0x2 ]
mov [ esp + 0x4 ] edi
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] ecx
test esi esi
je r-xdata
push eax
call sub_45b91a
add esp 0x4
push [ ebp + 0x10 ]
push [ esp + 0x4 ]
call sub_45daba
add esp 0x8
cmp [ esp + 0x4 ] 0x3
jl r-xdata
push [ ebp + 0x10 ]
call sub_45d970
add esp 0x4
cmp eax esi
jge r-xdata
push ebp
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_45d990
add esp 0xc
jmp r-xdata
mov esi [ esp + 0x8 ]
mov edi [ esp + 0xc ]
push esi
call sub_45b936
add esp 0x4
test esi esi
mov [ ebp ] eax
jle r-xdata
push [ rw-data ]
push [ ebp ]
call sub_45d3b9
add esp 0x8
mov esi [ esp + 0x28 ]
test eax eax
jle r-xdata
call sub_469c4e
movzx ecx [ edi ]
and ecx eax
mov [ edi ] cl
inc edi
dec esi
jne r-xdata
xor edi edi
xor ebx ebx
xor esi esi
mov eax [ ebp ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp ]
call sub_45d3b9
add esp 0x8
test eax eax
jns r-xdata
mov eax ebx
and eax 0x1
push eax
push esi
push [ ebp ]
call sub_45b9c6
add esp 0xc
inc esi
sar ebx 0x1
dec edi
cmp [ esp + 0x28 ] esi
jne r-xdata
mov edi 0x8
call sub_469c4e
mov ebx eax
push [ esp ]
call sub_43f9d4
add esp 0x4
push [ ebp + 0x8 ]
push [ ebp ]
push [ ebp + 0x14 ]
call sub_45c5e9
add esp 0xc
mov [ ebp + 0x4 ] eax
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
test edi edi
jne r-xdata
sub_461760
push edi
push esi
mov edi [ esp + 0x10 ]
push [ rw-data ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
jle r-xdata
mov eax r--data
mov eax [ esp + 0xc ]
push [ rw-data ]
push [ eax + 0x8 ]
call sub_45d490
add esp 0x8
mov esi eax
push esi
push edi
call sub_45d3b9
add esp 0x8
mov edi eax
push esi
call sub_45b91a
add esp 0x4
xor ecx ecx
test edi edi
mov eax r--data
cmovs eax ecx
jmp r-xdata
pop esi
pop edi
retn
sub_4617d4
push ebp
push ebx
push edi
push esi
sub esp 0x1ec
mov eax [ rw-data ]
mov esi [ esp + 0x200 ]
mov [ esp + 0x1e8 ] eax
lea eax [ esp + 0x114 ]
push eax
mov edi eax
call sub_46c2fc
add esp 0x4
push esi
call sub_4a7f30
add esp 0x4
inc eax
push eax
push esi
push edi
call sub_46c333
add esp 0xc
push [ esp + 0x208 ]
call sub_45d970
add esp 0x4
mov esi eax
mov ebp esp
lea eax [ esi + 0x8 ]
sar eax 0x1f
shr eax 0x1d
lea ebx [ esi + eax + 0x8 ]
sar ebx 0x3
mov eax ebx
shr eax 0x18
mov [ ebp ] al
mov eax ebx
shr eax 0x10
mov [ ebp + 0x1 ] al
mov [ ebp + 0x2 ] bh
mov [ ebp + 0x3 ] bl
push 0x4
push ebp
mov eax edi
push eax
call sub_46c333
add esp 0xc
test esi esi
js r-xdata
push 0x4
push ebp
call sub_48f5d3
add esp 0x8
lea esi [ esp + 0xd4 ]
push esi
push edi
call sub_46d24e
add esp 0x8
push edi
call sub_46c2fc
add esp 0x4
push 0x40
push esi
push edi
call sub_46c333
add esp 0xc
push [ esp + 0x210 ]
push [ esp + 0x210 ]
push edi
call sub_46c333
add esp 0xc
mov ebx 0xd4
jmp r-xdata
inc ebx
xor esi esi
inc esi
push ebx
mov ebp edi
push edi
lea eax [ esp + 0x8 ]
mov esi eax
push esi
call sub_49a1f0
add esp 0xc
lea eax [ esp + 0xd4 ]
mov edi eax
push edi
push esi
call sub_46d24e
add esp 0x8
push ebx
push esi
call sub_48f5d3
add esp 0x8
push 0x40
push edi
call sub_45d5e4
add esp 0x8
mov edi eax
push [ esp + 0x204 ]
push edi
call sub_45be66
add esp 0x8
mov esi eax
push edi
call sub_45b91a
add esp 0x4
push [ rw-data ]
push esi
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx - 0x2 ]
push eax
push [ esp + 0x20c ]
call sub_45da64
add esp 0x8
mov [ esp ] al
push esi
push ebp
push edi
call sub_46c333
add esp 0xc
dec ebx
cmp ebx esi
jg r-xdata
push esi
call sub_45b91a
add esp 0x4
push 0x1
push r--data
mov edi ebp
push edi
call sub_46c333
add esp 0xc
push [ rw-data ]
push esi
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
push 0xd4
push ebp
call sub_48f5d3
add esp 0x8
push 0x40
lea eax [ esp + 0xd8 ]
push eax
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x1e8 ]
call sub_497c4a
mov eax esi
add esp 0x1ec
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4619b6
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov eax esp
lea edi [ esp + 0x4 ]
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x24 ]
push eax
push edi
call sub_462a36
add esp 0x8
mov eax [ edi ]
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
xor edi edi
cmp [ esp ] 0x7
jne r-xdata
push 0x7
push r--data
push eax
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
lea edi [ esp + 0x20 ]
lea ebx [ esp + 0x24 ]
mov ecx edi
mov edx ebx
call sub_462a89
mov ecx edi
mov edx ebx
mov [ esi ] eax
call sub_462a89
mov ecx edi
mov edx ebx
mov [ esi + 0x4 ] eax
call sub_462a89
mov ecx edi
mov edx ebx
mov [ esi + 0x8 ] eax
call sub_462a89
xor edi edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] edi
cmp [ esi ] edi
je r-xdata
push esi
call sub_461ab5
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax edi
add esp 0xc
pop esi
pop edi
pop ebx
retn
cmp [ esi + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
push [ rw-data ]
push ecx
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
push [ rw-data ]
push [ esi ]
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
mov edi esi
jmp r-xdata
sub_461ab5
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
pop esi
jmp sub_43f9d4
push eax
call sub_45b91a
add esp 0x4
sub_461b0f
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov edi [ esp + 0x1c ]
xor ecx ecx
mov eax [ edi ]
test eax eax
je r-xdata
mov eax ecx
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push eax
call sub_45d970
add esp 0x4
mov esi eax
push [ edi + 0x4 ]
call sub_45d970
add esp 0x4
mov ebx eax
push [ edi + 0x8 ]
call sub_45d970
add esp 0x4
mov ebp eax
push [ edi + 0xc ]
call sub_45d970
add esp 0x4
movd xmm0 esi
movd xmm1 ebx
movd xmm2 eax
punpckldq xmm0 xmm1
movd xmm1 ebp
punpckldq xmm1 xmm2
punpcklqdq xmm0 xmm1
pslld xmm0 0x2
paddd xmm0 [ r--data ]
movdqa xmm1 xmm0
psrad xmm1 0x1f
psrld xmm1 0x1c
paddd xmm1 xmm0
psrad xmm1 0x4
pshufd xmm0 xmm1 0x4e
paddd xmm0 xmm1
pshufd xmm1 xmm0 0xe5
paddd xmm1 xmm0
movd eax xmm1
add eax 0xd
push 0x1
push eax
call sub_43f807
xor ecx ecx
add esp 0x8
mov ebp eax
test ebp ebp
je r-xdata
mov [ ebp + 0x2 ] 0x0
mov [ ebp ] 0x7830
push [ edi ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
mov ebx edi
mov [ esp ] ebp
sar ecx 0x1f
shr ecx 0x1e
lea ecx [ eax + ecx + 0x3 ]
sar ecx 0x2
xor eax eax
inc eax
test ecx ecx
cmovle ecx eax
test ecx ecx
je r-xdata
mov edi 0x2
lea esi [ ecx - 0x1 ]
lea edi [ ebp + 0x2 ]
mov [ esp + 0x4 ] ecx
mov eax [ esp ]
lea esi [ ebp + 0x3 ]
mov [ eax + ebp ] 0x78302c
push [ ebx + 0x8 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
sar ecx 0x1f
shr ecx 0x1e
lea edi [ eax + ecx + 0x3 ]
mov eax 0x1
sar edi 0x2
test edi edi
cmovle edi eax
test edi edi
je r-xdata
add ebp [ esp ]
add edi esi
dec esi
mov [ esp + 0x4 ] edi
mov eax esi
shr eax 0x1f
add eax esi
mov ebp eax
sar eax 0x1
and ebp 0x3e
push eax
push [ ebx ]
call sub_45da64
add esp 0x8
mov ecx esi
dec esi
sub ecx ebp
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ edi ] al
inc edi
xor eax eax
dec eax
cmp esi eax
jne r-xdata
mov edi [ esp + 0x4 ]
mov ebp [ esp ]
add edi 0x2
jmp r-xdata
mov edi [ esp ]
lea ebp [ esi + 0x3 ]
mov [ edi + esi ] 0x78302c
push [ ebx + 0xc ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
sar ecx 0x1f
shr ecx 0x1e
lea eax [ eax + ecx + 0x3 ]
mov ecx 0x1
sar eax 0x2
test eax eax
cmovg ecx eax
mov eax ecx
test eax eax
je r-xdata
add esi [ esp ]
add ebp edi
dec edi
mov eax esi
shr eax 0x1f
add eax esi
mov edi eax
sar eax 0x1
and edi 0x3e
push eax
push [ ebx + 0x4 ]
call sub_45da64
add esp 0x8
mov ecx esi
dec esi
sub ecx edi
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ ebp ] al
inc ebp
xor eax eax
dec eax
cmp esi eax
jne r-xdata
mov eax [ esp + 0x4 ]
add eax 0x3
mov ebp eax
mov [ ebp + edi ] 0x78302c
lea ebp [ edi + 0x3 ]
push [ ebx + 0x4 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
sar ecx 0x1f
shr ecx 0x1e
lea esi [ eax + ecx + 0x3 ]
mov eax 0x1
sar esi 0x2
test esi esi
cmovle esi eax
test esi esi
je r-xdata
mov ecx [ esp ]
mov [ ecx + ebp ] 0x0
add esi eax
dec eax
add edi ebp
mov eax edi
shr eax 0x1f
add eax edi
mov ebx eax
sar eax 0x1
and ebx 0x3e
push eax
mov eax [ esp + 0x20 ]
push [ eax + 0x8 ]
call sub_45da64
add esp 0x8
mov ecx edi
dec edi
sub ecx ebx
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ esi ] al
inc esi
xor eax eax
dec eax
cmp edi eax
jne r-xdata
mov ebx [ esp + 0x1c ]
add ebp 0x3
mov esi ebp
mov ebp eax
shr eax 0x1f
add eax ebp
mov ebx eax
sar eax 0x1
and ebx 0x3e
push eax
mov eax [ esp + 0x20 ]
push [ eax + 0xc ]
call sub_45da64
add esp 0x8
mov ecx ebp
sub ecx ebx
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ edi ] al
mov eax ebp
inc edi
dec eax
xor ecx ecx
dec ecx
cmp eax ecx
jne r-xdata
add esi 0x3
mov ebp esi
sub_461ddb
push ebp
push ebx
push edi
push esi
sub esp 0x24
mov ebp [ esp + 0x38 ]
push [ ebp ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0x8 ] eax
sar ecx 0x1f
shr ecx 0x1d
lea ebx [ eax + ecx + 0x8 ]
sar ebx 0x3
push [ ebp + 0x4 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0xc ] eax
sar ecx 0x1f
shr ecx 0x1d
lea edi [ eax + ecx + 0x8 ]
sar edi 0x3
push [ ebp + 0x8 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0x18 ] eax
sar ecx 0x1f
shr ecx 0x1d
lea esi [ eax + ecx + 0x8 ]
sar esi 0x3
push [ ebp + 0xc ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x4 ] esi
sar ecx 0x1f
shr ecx 0x1d
lea ecx [ eax + ecx + 0x8 ]
lea eax [ ebx + edi ]
sar ecx 0x3
add eax esi
mov [ esp ] ecx
lea eax [ ecx + eax + 0x1b ]
push 0x1
mov [ esp + 0x24 ] eax
push eax
call sub_43f807
add esp 0x8
mov ecx ebx
mov [ eax ] 0x7000000
mov [ eax + 0xa ] 0x73
mov [ eax + 0x8 ] 0x7364
mov [ eax + 0x4 ] 0x2d687373
lea edi [ eax + 0xf ]
shr ecx 0x18
mov [ eax + 0xb ] cl
mov ecx ebx
shr ecx 0x10
mov [ eax + 0xc ] cl
mov [ eax + 0xd ] bh
mov [ eax + 0xe ] bl
mov [ esp + 0x10 ] eax
cmp [ esp + 0x8 ] 0xfffffff0
ja r-xdata
mov ecx [ esp + 0x14 ]
lea ebx [ edi + 0x4 ]
mov eax ecx
shr eax 0x18
mov [ edi ] al
mov eax ecx
shr eax 0x10
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] ch
mov [ edi + 0x3 ] cl
cmp [ esp + 0xc ] 0xfffffff0
ja r-xdata
lea eax [ ebx + 0xf ]
dec ebx
xor esi esi
dec esi
mov [ esp + 0x8 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
lea edi [ ebx + 0x4 ]
mov eax edx
shr eax 0x18
mov [ ebx ] al
mov eax edx
shr eax 0x10
mov [ ebx + 0x1 ] al
mov [ ebx + 0x2 ] dh
mov [ ebx + 0x3 ] dl
cmp [ esp + 0x18 ] 0xfffffff0
ja r-xdata
lea eax [ ecx + 0x4 ]
dec ecx
mov [ esp + 0xc ] eax
push ebx
push [ ebp ]
call sub_45da64
add esp 0x8
dec ebx
mov [ edi ] al
inc edi
cmp ebx esi
jne r-xdata
mov edi [ esp + 0x8 ]
add edi [ esp + 0x10 ]
mov eax ecx
lea ebx [ edi + 0x4 ]
shr eax 0x18
mov [ edi ] al
mov eax ecx
shr eax 0x10
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] ch
mov [ edi + 0x3 ] cl
cmp [ esp + 0x1c ] 0xfffffff0
ja r-xdata
lea eax [ edx + 0x4 ]
dec edx
mov [ esp + 0x4 ] eax
push ecx
push [ ebp + 0x4 ]
mov esi ecx
call sub_45da64
mov ecx esi
add esp 0x8
mov [ ebx ] al
inc ebx
dec ecx
xor eax eax
dec eax
cmp ecx eax
jne r-xdata
add edi [ esp + 0xc ]
mov ebx edi
mov ebp [ esp + 0x10 ]
mov edi [ esp + 0x20 ]
mov esi [ esp + 0x3c ]
mov eax ebp
add eax edi
cmp ebx eax
je r-xdata
lea eax [ ecx + 0x4 ]
dec ecx
mov [ esp ] eax
push edx
push [ ebp + 0x8 ]
mov esi edx
call sub_45da64
mov edx esi
add esp 0x8
mov [ edi ] al
inc edi
dec edx
xor eax eax
dec eax
cmp edx eax
jne r-xdata
add ebx [ esp + 0x4 ]
mov ecx [ esp ]
mov edi ebx
mov [ esi ] edi
mov eax ebp
add esp 0x24
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x155
push r--data
push r--data
call sub_4a509d
add esp 0xc
push ecx
push [ ebp + 0xc ]
mov esi ebp
mov ebp ecx
call sub_45da64
mov ecx ebp
mov ebp esi
add esp 0x8
mov [ ebx ] al
inc ebx
dec ecx
xor eax eax
dec eax
cmp ecx eax
jne r-xdata
add edi [ esp ]
mov ebx edi
sub_462006
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebp [ esp + 0x1c ]
push [ ebp + 0x10 ]
call sub_45d970
add esp 0x4
mov edi eax
lea eax [ edi + 0x8 ]
sar eax 0x1f
shr eax 0x1d
lea ebx [ edi + eax + 0x8 ]
sar ebx 0x3
lea eax [ ebx + 0x4 ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
call sub_43f807
add esp 0x8
mov ecx ebx
shr ecx 0x18
mov [ eax ] cl
mov ecx ebx
shr ecx 0x10
cmp edi 0xfffffff0
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bh
mov [ esp ] eax
mov [ eax + 0x3 ] bl
ja r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov eax [ esp ]
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp ]
dec ebx
add edi 0x4
xor esi esi
dec esi
push ebx
push [ ebp + 0x10 ]
call sub_45da64
add esp 0x8
dec ebx
mov [ edi ] al
inc edi
cmp ebx esi
jne r-xdata
sub_462090
push ebp
push ebx
push edi
push esi
sub esp 0x84
mov edi [ rw-data ]
mov edx [ esp + 0xa0 ]
mov esi [ esp + 0xa4 ]
mov eax [ esp + 0x98 ]
mov ecx [ esp + 0x9c ]
mov [ esp + 0x80 ] edi
mov [ esp + 0x8 ] esi
push edx
push ecx
push eax
call sub_4619b6
add esp 0xc
mov edi eax
xor esi esi
test edi edi
je r-xdata
mov ecx [ esp + 0x80 ]
call sub_497c4a
mov eax esi
add esp 0x84
pop esi
pop edi
pop ebx
pop ebp
retn
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0xa8 ]
call sub_462a89
test eax eax
mov [ edi + 0x10 ] eax
je r-xdata
push edi
mov ebx esp
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0xa8 ]
mov [ ebx ] 0xffffffff
push ebx
push eax
call sub_462a36
add esp 0x8
cmp [ ebx ] 0x14
jne r-xdata
push [ edi ]
push [ edi + 0x10 ]
push [ edi + 0x8 ]
call sub_45c5e9
add esp 0xc
mov ebx eax
push [ edi + 0xc ]
push ebx
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
lea ebx [ esp + 0x20 ]
push ebx
call sub_46d63e
add esp 0x4
mov edx [ edi ]
mov ecx ebx
call sub_462ad1
mov edx [ edi + 0x4 ]
mov ecx ebx
call sub_462ad1
mov edx [ edi + 0x8 ]
mov ecx ebx
call sub_462ad1
lea ebp [ esp + 0xc ]
push ebp
push ebx
call sub_46d779
add esp 0x8
push 0x14
push ebp
push [ esp + 0xc ]
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
push ebx
call sub_45b91a
add esp 0x4
mov esi edi
jmp r-xdata
push edi
call sub_461ab5
add esp 0x4
push ebx
call sub_45b91a
jmp r-xdata
push edi
jmp r-xdata
add esp 0x4
call sub_461ab5
sub_4621cf
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov ecx edi
mov edx ebx
mov esi eax
call sub_462a89
mov ecx edi
mov edx ebx
mov [ esi ] eax
call sub_462a89
mov ecx edi
mov edx ebx
mov [ esi + 0x4 ] eax
call sub_462a89
mov ecx edi
mov edx ebx
mov [ esi + 0x8 ] eax
call sub_462a89
mov ecx edi
mov edx ebx
mov [ esi + 0xc ] eax
call sub_462a89
mov [ esi + 0x10 ] eax
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_461ab5
add esp 0x4
xor esi esi
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ rw-data ]
push ecx
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
push [ rw-data ]
push [ esi ]
call sub_45d3b9
add esp 0x8
test eax eax
jne r-xdata
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_462278
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebp [ esp + 0x1c ]
push [ ebp ]
call sub_45da2c
add esp 0x4
mov esi eax
push [ ebp + 0x4 ]
call sub_45da2c
add esp 0x4
mov edi eax
add edi esi
push [ ebp + 0x8 ]
call sub_45da2c
add esp 0x4
mov esi eax
add esi edi
push [ ebp + 0xc ]
call sub_45da2c
add esp 0x4
mov ebx eax
add ebx esi
push [ ebp + 0x10 ]
call sub_45da2c
add esp 0x4
mov esi eax
add esi ebx
cmp esi [ esp + 0x24 ]
jg r-xdata
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x20 ]
push [ ebp ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebx ] al
push [ ebp ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebx + 0x1 ] al
push [ ebp ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebx + 0x2 ] ah
push [ ebp ]
call sub_45da2c
add esp 0x4
add eax 0xfc
mov [ ebx + 0x3 ] al
push [ ebp ]
call sub_45da2c
add esp 0x4
cmp eax 0x4
mov esi 0x4
je r-xdata
push [ ebp + 0x4 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebx + esi ] al
push [ ebp + 0x4 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebx + esi + 0x1 ] al
push [ ebp + 0x4 ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebx + esi + 0x2 ] ah
push [ ebp + 0x4 ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea edi [ esi + 0x4 ]
mov [ ebx + esi + 0x3 ] al
push [ ebp + 0x4 ]
call sub_45da2c
add esp 0x4
mov ecx eax
mov edx 0x4
cmp ecx edx
je r-xdata
mov edi eax
mov [ esp ] eax
mov eax ebx
mov ebx ebp
add edi 0xfffffffb
xor esi esi
lea ebp [ eax + 0x4 ]
dec esi
push [ ebp + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebx + edi ] al
push [ ebp + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebx + edi + 0x1 ] al
push [ ebp + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebx + edi + 0x2 ] ah
push [ ebp + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea esi [ edi + 0x4 ]
mov [ ebx + edi + 0x3 ] al
push [ ebp + 0x8 ]
call sub_45da2c
add esp 0x4
mov ecx 0x4
cmp eax ecx
je r-xdata
add edi ebx
mov ebx ebp
xor ebp ebp
mov [ esp ] esi
lea esi [ ecx - 0x5 ]
mov [ esp + 0x4 ] ecx
dec ebp
push edi
push [ ebx ]
call sub_45da64
add esp 0x8
dec edi
mov [ ebp ] al
inc ebp
cmp edi esi
jne r-xdata
mov ebp ebx
mov esi [ esp ]
mov ebx [ esp + 0x20 ]
push [ ebp + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebx + esi ] al
push [ ebp + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebx + esi + 0x1 ] al
push [ ebp + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebx + esi + 0x2 ] ah
push [ ebp + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea edi [ esi + 0x4 ]
mov [ ebx + esi + 0x3 ] al
push [ ebp + 0xc ]
call sub_45da2c
add esp 0x4
mov ecx eax
mov edx 0x4
cmp ecx edx
je r-xdata
mov ecx ebx
mov ebx ebp
lea ebp [ eax - 0x5 ]
mov [ esp ] eax
add esi ecx
push esi
push [ ebx + 0x4 ]
call sub_45da64
add esp 0x8
dec esi
mov [ edi ] al
inc edi
cmp esi ebp
jne r-xdata
mov eax [ esp + 0x4 ]
mov ebp ebx
mov ebx [ esp + 0x20 ]
add eax [ esp ]
mov edi eax
push [ ebp + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebx + edi ] al
push [ ebp + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebx + edi + 0x1 ] al
push [ ebp + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebx + edi + 0x2 ] ah
push [ ebp + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea esi [ edi + 0x4 ]
mov [ ebx + edi + 0x3 ] al
push [ ebp + 0x10 ]
call sub_45da2c
add esp 0x4
mov ecx 0x4
cmp eax ecx
je r-xdata
mov eax ebx
mov ebx ebp
lea ebp [ ecx - 0x5 ]
mov [ esp ] ecx
add edi eax
push ebp
push [ ebx + 0x8 ]
call sub_45da64
add esp 0x8
mov [ esi ] al
dec ebp
inc esi
xor eax eax
dec eax
cmp ebp eax
jne r-xdata
mov esi [ esp ]
mov ebp ebx
mov ebx [ esp + 0x20 ]
add esi edi
mov ecx esi
mov esi ebp
lea ebp [ eax - 0x5 ]
mov [ esp ] eax
add ebx ecx
push ebp
push [ ebx + 0xc ]
call sub_45da64
add esp 0x8
mov [ edi ] al
dec ebp
inc edi
xor eax eax
dec eax
cmp ebp eax
jne r-xdata
mov edi [ esp ]
mov ebp ebx
mov ebx [ esp + 0x20 ]
add edi esi
push ebp
push [ esi + 0x10 ]
call sub_45da64
add esp 0x8
mov [ ebx ] al
dec ebp
inc ebx
xor eax eax
dec eax
cmp ebp eax
jne r-xdata
mov esi [ esp ]
add esi edi
sub_4625db
push edi
push esi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_4619b6
add esp 0xc
mov esi eax
test esi esi
je r-xdata
xor eax eax
dec eax
push [ esi ]
call sub_45d970
add esp 0x4
mov edi eax
push esi
call sub_461ab5
add esp 0x4
mov eax edi
jmp r-xdata
pop esi
pop edi
retn
sub_462616
push ebp
push ebx
push edi
push esi
sub esp 0x3c
mov eax [ esp + 0x58 ]
mov esi [ esp + 0x54 ]
mov ecx [ rw-data ]
mov ebp [ esp + 0x50 ]
xor ebx ebx
mov [ esp + 0x38 ] ecx
cmp [ ebp ] 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
call sub_497c4a
mov eax ebx
add esp 0x3c
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi 0x28
cmp eax 0x28
jne r-xdata
lea eax [ esp + 0x1c ]
lea esi [ esp + 0x20 ]
lea ecx [ esp + 0x54 ]
lea edx [ esp + 0x58 ]
push eax
push esi
call sub_462a36
add esp 0x8
mov eax [ esi ]
test eax eax
je r-xdata
mov eax 0x14
push eax
push esi
call sub_45d5e4
add esp 0x8
lea edx [ esi + 0x14 ]
lea ecx [ edi - 0x14 ]
cmp edi 0x27
mov [ esp + 0x54 ] edx
mov [ esp + 0x58 ] ecx
jg r-xdata
cmp [ esp + 0x1c ] 0x7
jne r-xdata
push 0x14
push edx
mov [ esp + 0x8 ] eax
call sub_45d5e4
mov ecx [ esp + 0x8 ]
add esp 0x8
add edi 0xffffffd8
add esi 0x28
test ecx ecx
mov [ esp + 0x58 ] edi
mov edi eax
mov [ esp + 0x54 ] esi
je r-xdata
test eax eax
je r-xdata
push 0x7
push r--data
push eax
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
test edi edi
je r-xdata
push eax
jmp r-xdata
mov esi [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
add esi 0x4
lea edi [ eax - 0x4 ]
cmp eax 0x18
mov [ esp + 0x54 ] esi
mov [ esp + 0x58 ] edi
jge r-xdata
test edi edi
je r-xdata
push ecx
call sub_45b91a
add esp 0x4
push [ rw-data ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
call sub_45b91a
add esp 0x4
jmp r-xdata
push edi
jmp r-xdata
push [ esp ]
call sub_45b91a
add esp 0x4
push edi
jmp r-xdata
push [ ebp + 0x4 ]
push edi
call sub_45cb53
add esp 0x8
test eax eax
je r-xdata
push [ esp ]
call sub_45b91a
add esp 0x4
push edi
lea esi [ esp + 0x24 ]
push esi
push [ esp + 0x64 ]
push [ esp + 0x64 ]
mov ebx eax
mov [ esp + 0x20 ] ebx
call sub_46d857
add esp 0xc
mov eax 0x14
push eax
push esi
call sub_45d5e4
add esp 0x8
lea ecx [ esp + 0x38 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] ecx
push [ ebp + 0x4 ]
push ebx
push eax
call sub_45cea6
add esp 0xc
mov esi eax
mov [ esp + 0x10 ] esi
push [ ebp + 0x4 ]
push ebx
push [ esp + 0x8 ]
call sub_45cea6
add esp 0xc
mov ebx eax
mov [ esp + 0xc ] ebx
push [ ebp ]
push esi
push [ ebp + 0x8 ]
call sub_45c5e9
add esp 0xc
mov esi eax
push [ ebp ]
push ebx
push [ ebp + 0xc ]
call sub_45c5e9
add esp 0xc
mov [ esp + 0x8 ] eax
push [ ebp ]
push eax
push esi
call sub_45cea6
add esp 0xc
mov [ esp + 0x4 ] eax
push [ ebp + 0x4 ]
push [ rw-data ]
push eax
call sub_45cea6
add esp 0xc
mov ebp eax
push [ esp ]
push ebp
call sub_45d3b9
add esp 0x8
xor ebx ebx
test eax eax
sete bl
push [ esp + 0x14 ]
call sub_45b91a
add esp 0x4
push [ esp + 0x18 ]
call sub_45b91a
add esp 0x4
push [ esp + 0x10 ]
call sub_45b91a
add esp 0x4
push [ esp + 0xc ]
call sub_45b91a
add esp 0x4
push esi
call sub_45b91a
add esp 0x4
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
push [ esp + 0x4 ]
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
push [ esp ]
call sub_45b91a
add esp 0x4
push edi
jmp r-xdata
sub_4628b6
push ebp
push ebx
push edi
push esi
sub esp 0x24
mov edx [ rw-data ]
mov ebx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
lea esi [ esp + 0xc ]
mov [ esp + 0x20 ] edx
push esi
push ecx
push eax
call sub_46d857
add esp 0xc
push 0x14
push esi
push [ ebx + 0x10 ]
push [ ebx + 0x4 ]
push r--data
call sub_4617d4
add esp 0x14
mov edi eax
push [ ebx + 0x4 ]
push edi
call sub_45cb53
add esp 0x8
test eax eax
mov [ esp ] eax
jne r-xdata
push [ ebx ]
push edi
push [ ebx + 0x8 ]
call sub_45c5e9
add esp 0xc
mov [ esp + 0x8 ] edi
mov edi eax
push [ ebx + 0x4 ]
push edi
call sub_45be66
add esp 0x8
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
push 0x14
push esi
call sub_45d5e4
add esp 0x8
mov [ esp + 0x4 ] eax
push eax
mov esi ebp
push ebp
push [ ebx + 0x10 ]
call sub_45dd54
add esp 0xc
mov ebp eax
push [ ebx + 0x4 ]
push ebp
mov edi [ esp + 0x8 ]
push edi
call sub_45cea6
add esp 0xc
mov ebx eax
push ebp
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
push [ esp + 0x4 ]
call sub_45b91a
add esp 0x4
push 0x1
push 0x37
call sub_43f807
add esp 0x8
mov ebp eax
mov edi 0x13
mov [ eax ] 0x7000000
mov [ eax + 0xa ] 0x73
mov [ eax + 0x8 ] 0x7364
mov [ eax + 0x4 ] 0x2d687373
mov [ eax + 0xb ] 0x28000000
mov [ esp ] eax
add ebp 0xf
push 0x26f
push r--data
push r--data
call sub_4a509d
add esp 0xc
push edi
push esi
call sub_45da64
add esp 0x8
mov [ ebp ] al
push edi
push ebx
call sub_45da64
add esp 0x8
mov [ ebp + 0x14 ] al
dec edi
inc ebp
xor eax eax
dec eax
cmp edi eax
jne r-xdata
push esi
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esp + 0x44 ]
mov [ eax ] 0x37
mov ecx [ esp + 0x20 ]
call sub_497c4a
mov eax [ esp ]
add esp 0x24
pop esi
pop edi
pop ebx
pop ebp
retn
sub_462a36
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov esi edx
mov edi ecx
mov [ ebx ] 0x0
cmp [ esi ] 0x4
jl r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov ebp [ esp + 0x18 ]
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
mov [ ebp ] eax
js r-xdata
add [ esi ] 0xfffffffc
mov eax [ edi ]
add eax 0x4
mov [ edi ] eax
mov ecx [ esi ]
cmp ecx [ ebp ]
jl r-xdata
mov [ ebx ] eax
mov eax [ ebp ]
add [ edi ] eax
mov eax [ ebp ]
sub [ esi ] eax
sub_462a89
push esi
sub esp 0xc
mov eax [ rw-data ]
lea esi [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax esp
push eax
push esi
call sub_462a36
add esp 0x8
mov eax [ esi ]
xor esi esi
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
retn
cmp [ eax ] 0x0
js r-xdata
push [ esp ]
push eax
call sub_45d5e4
add esp 0x8
mov esi eax
sub_462ad1
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi edx
mov edi ecx
mov [ esp + 0x4 ] eax
push esi
call sub_45d970
add esp 0x4
mov ebp eax
mov ecx esp
lea eax [ ebp + 0x8 ]
sar eax 0x1f
shr eax 0x1d
lea ebx [ ebp + eax + 0x8 ]
sar ebx 0x3
mov eax ebx
shr eax 0x18
mov [ ecx ] al
mov eax ebx
shr eax 0x10
mov [ ecx + 0x1 ] al
mov [ ecx + 0x2 ] bh
mov [ ecx + 0x3 ] bl
push 0x4
push ecx
push edi
call sub_46d65f
add esp 0xc
test ebp ebp
js r-xdata
push 0x4
lea eax [ esp + 0x4 ]
push eax
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
inc ebx
xor ebp ebp
inc ebp
lea eax [ ebx - 0x2 ]
push eax
push esi
call sub_45da64
add esp 0x8
mov [ esp ] al
push ebp
lea eax [ esp + 0x4 ]
push eax
push edi
call sub_46d65f
add esp 0xc
dec ebx
cmp ebx ebp
jg r-xdata
sub_462b70
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov [ esi ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov [ esi + 0x10 ] 0x0
pop esi
jmp sub_43f9d4
push eax
call sub_45b91a
add esp 0x4
sub_462bbb
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ esp + 0x2c ]
mov ebx [ esp + 0x30 ]
mov esi [ eax ]
mov eax [ esi ]
cmp eax 0x2
je r-xdata
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
xor eax eax
mov [ edi ] esi
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] 0x1
push ebx
call sub_45d970
add esp 0x4
mov esi eax
mov ebp edi
test edi edi
je r-xdata
test eax eax
jne r-xdata
mov eax ebp
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
test esi esi
js r-xdata
mov esi [ esp + 0x2c ]
xor edx edx
mov ecx esi
call sub_465b1b
mov ecx esi
mov edi eax
call sub_465443
mov ebp eax
push ebx
call sub_45d970
add esp 0x4
mov esi edi
cmp eax 0x2
jl r-xdata
mov ecx esi
call sub_465258
mov ecx [ esp + 0x2c ]
mov edx ebx
push eax
call sub_46519e
add esp 0x4
mov ebp eax
mov ecx ebp
call sub_465295
test eax eax
jne r-xdata
xor edx edx
mov ecx ebp
call sub_465b1b
mov edi eax
push ebp
call sub_462b70
add esp 0x4
test edi edi
mov ebp 0x0
je r-xdata
push esi
call sub_462b70
add esp 0x4
mov ecx ebp
call sub_465295
test eax eax
jne r-xdata
dec eax
push ebp
jmp r-xdata
push esi
push ebx
call sub_45da92
add esp 0x8
test eax eax
je r-xdata
push ebp
push [ esp + 0x4 ]
call sub_462b70
add esp 0x4
xor edx edx
mov ecx ebx
call sub_465b1b
mov ebp eax
push ebx
call sub_462b70
add esp 0x4
mov esi edi
push ebx
call sub_462b70
add esp 0x4
mov ebx [ esp + 0x4 ]
xor edx edx
mov ecx ebx
call sub_465b1b
mov esi eax
push ebx
call sub_462b70
add esp 0x4
mov ebp edi
jmp r-xdata
call sub_462b70
add esp 0x4
xor ebp ebp
mov ebp edi
mov edx [ esp + 0x2c ]
mov ecx edi
push 0x0
call sub_4654c4
add esp 0x4
mov ebp eax
push edi
call sub_462b70
add esp 0x4
jmp r-xdata
dec eax
mov [ esp + 0x14 ] eax
push eax
push ebx
call sub_45da92
add esp 0x8
mov [ esp + 0x10 ] eax
mov ebx ebp
mov ecx esi
mov eax [ rw-data ]
mov ebp [ ebx + 0xc ]
mov esi [ ecx + 0xc ]
mov edi ecx
mov [ esp + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
test ebp ebp
cmove ebp eax
test esi esi
cmove esi eax
mov edx ebp
push [ ebx ]
call sub_46609a
add esp 0x4
mov [ esp ] eax
mov eax [ ebx ]
push [ eax + 0x10 ]
push esi
push [ edi + 0x4 ]
call sub_45d2b8
add esp 0xc
mov [ esp + 0x8 ] eax
mov ecx [ ebx ]
push [ ecx + 0x10 ]
push eax
mov edi [ esp + 0x8 ]
push edi
call sub_45cea6
add esp 0xc
mov [ esp + 0xc ] eax
push edi
call sub_45b91a
add esp 0x4
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
mov eax [ ebx ]
push [ eax + 0x10 ]
push ebp
push [ ebx + 0x4 ]
call sub_45d2b8
add esp 0xc
mov edi eax
mov eax [ esp + 0x4 ]
mov edx esi
mov ecx [ eax + 0x4 ]
push [ ebx ]
call sub_46609a
add esp 0x4
mov esi eax
mov eax [ ebx ]
push [ eax + 0x10 ]
push esi
push edi
call sub_45cea6
add esp 0xc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
push esi
call sub_45b91a
add esp 0x4
mov esi [ esp + 0xc ]
mov edx ebp
mov ecx esi
push [ ebx ]
call sub_46609a
add esp 0x4
mov edi eax
mov eax [ ebx ]
push [ eax + 0x10 ]
push edi
push edi
call sub_45cea6
add esp 0xc
mov [ esp ] eax
push edi
call sub_45b91a
add esp 0x4
mov eax [ ebx ]
push [ eax + 0x10 ]
push ebp
push esi
call sub_45d2b8
add esp 0xc
mov edi eax
push esi
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov eax [ ebx ]
push [ eax + 0x10 ]
push edi
push edi
call sub_45cea6
add esp 0xc
mov esi eax
push edi
call sub_45b91a
add esp 0x4
mov eax [ ebx ]
push [ eax + 0x10 ]
push esi
mov eax [ esp + 0x34 ]
push [ eax + 0x4 ]
call sub_45cea6
add esp 0xc
mov ebp eax
push esi
call sub_45b91a
add esp 0x4
mov esi [ ebx ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
cmp [ esp + 0x10 ] 0x0
mov ecx 0x0
mov [ edi ] esi
mov eax [ esp ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x30 ]
test eax eax
jg r-xdata
dec esi
test ebp ebp
jne r-xdata
test esi esi
jle r-xdata
jmp r-xdata
sub_462edb
push ebp
push ebx
push edi
push esi
sub esp 0x118
mov eax [ rw-data ]
mov edi [ esp + 0x130 ]
mov [ esp + 0x114 ] eax
mov eax [ edi ]
cmp eax 0x2
je r-xdata
mov eax esp
push eax
call sub_46c2fc
add esp 0x4
mov ebp [ edi + 0xc ]
shr ebp 0x3
je r-xdata
xor esi esi
test eax eax
jne r-xdata
lea esi [ esp + 0xd4 ]
push esi
lea eax [ esp + 0x4 ]
push eax
call sub_46d24e
add esp 0x8
and [ esi ] 0xf8
mov al [ esi + 0x1f ]
and al 0x3f
or al 0x40
mov [ esi + 0x1f ] al
push 0x20
push esi
call sub_45d698
add esp 0x8
mov edi eax
mov eax [ esp + 0x130 ]
add eax 0x1c
push edi
push eax
call sub_462bbb
add esp 0x8
mov esi eax
push edi
call sub_45b91a
add esp 0x4
xor ebx ebx
xor edi edi
lea esi [ esp + 0xd4 ]
inc edi
mov ecx [ esp + 0x114 ]
call sub_497c4a
mov eax esi
add esp 0x118
pop esi
pop edi
pop ebx
pop ebp
retn
add edi 0x20
push [ esp + 0x12c ]
push edi
call sub_462bbb
add esp 0x8
mov esi eax
jmp r-xdata
push ebx
push [ esp + 0x130 ]
call sub_45da64
add esp 0x8
mov [ esp + 0xd4 ] al
push edi
push esi
lea eax [ esp + 0x8 ]
push eax
call sub_46c333
add esp 0xc
inc ebx
cmp ebp ebx
jne r-xdata
sub_462fd4
mov al [ rw-data ]
test al al
jne r-xdata
mov eax rw-data
retn
push esi
mov esi 0x20
mov [ rw-data ] 0x0
mov [ rw-data ] 0x2
mov [ rw-data ] 0x100
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] r--data
mov [ rw-data ] 0x1
pop esi
sub_46308d
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
mov ebp esp
lea ebx [ esp + 0x4 ]
lea edx [ esp + 0x28 ]
mov [ esp + 0x8 ] eax
mov esi [ ecx + 0x38 ]
lea ecx [ esp + 0x24 ]
push ebp
push ebx
call sub_4661dd
add esp 0x8
xor edi edi
cmp [ ebx ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax edi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
call [ esi ]
mov esi eax
mov edx 0x2
mov eax [ esi ]
mov ecx eax
or ecx 0x2
cmp ecx edx
je r-xdata
test eax eax
je r-xdata
push 0x6e9
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi ]
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x28 ]
push ebp
push ebx
call sub_4661dd
add esp 0x8
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
mov eax [ esp + 0x20 ]
xor edi edi
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x28 ]
mov [ ebx ] eax
lea eax [ ebx + 0x4 ]
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x18 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x11 ] edi
mov [ ebx + 0xd ] edi
push eax
call sub_466230
add esp 0x4
test eax eax
je r-xdata
push [ esi + 0x4 ]
push eax
push [ esp + 0x8 ]
call sub_440356
add esp 0xc
test eax eax
jne r-xdata
push ebx
call sub_4631d0
add esp 0x4
mov eax ebx
add eax 0x8
mov eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
push ebx
call sub_4631d0
add esp 0x4
xor edi edi
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push [ esi + 0x10 ]
push eax
call sub_45d3b9
add esp 0x8
test eax eax
jns r-xdata
push [ esi + 0x10 ]
push [ ebx + 0xc ]
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
mov edi ebx
jmp r-xdata
sub_4631d0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
pop esi
jmp sub_43f9d4
push eax
call sub_45b91a
add esp 0x4
sub_463221
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebx [ esp + 0x1c ]
xor eax eax
mov edi [ ebx + 0x8 ]
test edi edi
je r-xdata
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov esi 0x7
push eax
call sub_4a7f30
add esp 0x4
mov esi eax
add esi 0x7
jmp r-xdata
xor eax eax
push eax
push r--data
push esi
call sub_432778
add esp 0xc
jmp r-xdata
push edi
call sub_45d970
add esp 0x4
lea ecx [ eax * 4 + 0x3c ]
sar ecx 0x1f
shr ecx 0x1c
lea edi [ ecx + eax * 4 + 0x3c ]
sar edi 0x4
add edi esi
push [ ebx + 0xc ]
call sub_45d970
add esp 0x4
lea ecx [ eax * 4 + 0x3c ]
sar ecx 0x1f
shr ecx 0x1c
lea eax [ ecx + eax * 4 + 0x3c ]
sar eax 0x4
add eax edi
push 0x1
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov edi [ esp ]
mov eax [ esp + 0x1c ]
lea ebx [ ebp + 0x3 ]
mov [ edi + ebp ] 0x78302c
push [ eax + 0xc ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
sar ecx 0x1f
shr ecx 0x1e
lea eax [ eax + ecx + 0x3 ]
sar eax 0x2
test eax eax
cmovg esi eax
test esi esi
je r-xdata
add ebx edi
dec edi
add ebp eax
mov [ esp + 0x4 ] ebx
lea ebp [ eax + 0x2 ]
mov [ esi + eax + 0x2 ] 0x0
mov [ esi + eax ] 0x7830
push [ ebx + 0x8 ]
mov ebx eax
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
sar ecx 0x1f
shr ecx 0x1e
lea edi [ eax + ecx + 0x3 ]
mov eax esi
sar edi 0x2
xor esi esi
mov [ esp ] eax
inc esi
test edi edi
cmovle edi esi
test edi edi
je r-xdata
mov eax [ esp ]
mov [ eax + ebx ] 0x0
add ebp esi
dec esi
add edi ebx
mov eax edi
shr eax 0x1f
add eax edi
mov ebx eax
sar eax 0x1
and ebx 0x3e
push eax
mov eax [ esp + 0x20 ]
push [ eax + 0x8 ]
call sub_45da64
add esp 0x8
mov ecx edi
dec edi
sub ecx ebx
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ ebp ] al
inc ebp
xor eax eax
dec eax
cmp edi eax
jne r-xdata
mov eax [ esp + 0x4 ]
add eax 0x2
mov ebp eax
mov eax esi
shr eax 0x1f
add eax esi
mov ebx eax
sar eax 0x1
and ebx 0x3e
push eax
mov eax [ esp + 0x20 ]
push [ eax + 0xc ]
call sub_45da64
add esp 0x8
mov ecx esi
dec esi
sub ecx ebx
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ edi ] al
inc edi
xor eax eax
dec eax
cmp esi eax
jne r-xdata
add ebp 0x3
mov ebx ebp
sub_4633e7
push ebp
push ebx
push edi
push esi
sub esp 0x20
mov ebp [ esp + 0x34 ]
mov eax [ ebp ]
push [ eax + 0x30 ]
call sub_4a7f30
add esp 0x4
mov edi [ ebp + 0x4 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov ebx eax
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
xor ebx ebx
cmp ecx 0x2
jne r-xdata
push eax
call sub_4a7f30
add esp 0x4
mov esi eax
mov [ esp + 0xc ] esi
push [ edi + 0x10 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x7 ]
mov [ esp + 0x10 ] eax
sar ecx 0x1f
shr ecx 0x1d
lea edi [ eax + ecx + 0x7 ]
lea ecx [ ebx + esi ]
sar edi 0x3
lea eax [ edi + edi ]
mov [ esp + 0x8 ] eax
mov eax ecx
mov [ esp + 0x18 ] eax
lea eax [ ecx + edi * 2 + 0xd ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov eax ebx
shr eax 0x18
mov [ esi ] al
mov eax ebx
shr eax 0x10
mov [ esi + 0x1 ] al
mov [ esi + 0x2 ] bh
mov [ esi + 0x3 ] bl
lea eax [ esi + 0x4 ]
mov ecx [ ebp ]
push ebx
push [ ecx + 0x30 ]
push eax
call sub_49a1f0
add esp 0xc
mov edx [ esp + 0xc ]
lea eax [ esi + ebx + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax edx
shr eax 0x18
mov [ esi + ebx + 0x4 ] al
mov eax edx
shr eax 0x10
mov [ esi + ebx + 0x5 ] al
mov [ esi + ebx + 0x6 ] dh
mov [ esi + ebx + 0x7 ] dl
mov [ esp ] esi
lea eax [ esi + ebx + 0x8 ]
mov ecx [ ebp + 0x4 ]
push edx
mov esi edx
push [ ecx + 0x4 ]
push eax
call sub_49a1f0
add esp 0xc
mov ecx [ esp + 0x1c ]
mov eax edi
mov ebx ebp
shr eax 0x17
lea ebp [ esi + ecx + 0x9 ]
mov [ ebp - 0x5 ] al
mov eax edi
shr eax 0xf
mov [ ebp - 0x4 ] al
mov eax edi
shr eax 0x7
mov [ ebp - 0x3 ] al
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
add eax 0xe
or cl 0x1
cmp eax 0xf
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] 0x4
jb r-xdata
push 0x756
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edi [ ebp + 0x4 ]
mov eax [ edi + 0x4 ]
mov eax ebx
add esp 0x20
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ edi + 0xc ]
cmp ecx 0x10
jb r-xdata
mov edi [ esp + 0x4 ]
mov ebx [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x8 ] edi
lea esi [ edi - 0x1 ]
lea eax [ edi + eax + 0xd ]
xor edi edi
dec edi
mov [ esp + 0xc ] eax
mov ebx ecx
mov [ esp ] ecx
shr ebx 0x3
lea ecx [ eax + ebx + 0x8 ]
push 0x1
mov [ esp + 0x8 ] ecx
push ecx
mov edi eax
call sub_43f807
add esp 0x8
mov edx edi
mov esi eax
mov eax edx
shr eax 0x18
mov [ esi ] al
mov eax edx
shr eax 0x10
mov [ esi + 0x1 ] al
mov [ esi + 0x2 ] dh
mov [ esi + 0x3 ] dl
lea eax [ esi + 0x4 ]
mov ecx [ ebp ]
push edx
push [ ecx + 0x30 ]
push eax
call sub_49a1f0
add esp 0xc
mov ecx [ esp ]
mov [ esp + 0x14 ] edi
mov eax ecx
shr eax 0x1b
mov [ esi + edi + 0x4 ] al
mov eax ecx
shr ecx 0xb
shr eax 0x13
mov [ esi + edi + 0x5 ] al
mov [ esi + edi + 0x6 ] cl
mov [ esi + edi + 0x7 ] bl
dec ebx
push 0x0
push [ ebp + 0xc ]
call sub_45da64
add esp 0x8
mov edi esi
mov [ esp ] esi
xor esi esi
add edi [ esp + 0x14 ]
mov [ esi ] edi
push 0x777
push r--data
push r--data
call sub_4a509d
add esp 0xc
push esi
push [ ebx + 0x8 ]
call sub_45da64
add esp 0x8
dec esi
mov [ ebp ] al
inc ebp
cmp esi edi
jne r-xdata
mov ebx [ esp ]
mov ebp ebx
add ebp [ esp + 0xc ]
cmp [ esp + 0x10 ] 0xf
jae r-xdata
mov [ edi + esi + 0x8 ] al
inc esi
push esi
push [ ebp + 0xc ]
call sub_45da64
add esp 0x8
cmp esi ebx
jl r-xdata
mov ecx ebp
lea ebp [ esi + edi + 0x9 ]
and al 0x7f
mov [ ebp - 0x1 ] al
push 0x0
push [ ecx + 0x8 ]
call sub_45da92
add esp 0x8
movzx ecx [ ebp - 0x1 ]
shl eax 0x7
or ecx eax
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov ebx ebp
lea esi [ ecx - 0x1 ]
mov edi [ esp + 0x4 ]
jmp r-xdata
push esi
mov eax [ esp + 0x38 ]
push [ eax + 0xc ]
call sub_45da64
add esp 0x8
dec esi
mov [ ebx ] al
inc ebx
cmp esi edi
jne r-xdata
add ebp [ esp + 0x8 ]
mov esi [ esp + 0x38 ]
lea eax [ ebx + edi ]
cmp ebp eax
je r-xdata
sub_4636a3
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebp [ esp + 0x20 ]
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebp ebp
jmp r-xdata
mov ecx [ ebp + 0x4 ]
mov esi [ ecx ]
push eax
call sub_45d970
add esp 0x4
xor ecx ecx
xor edx edx
mov edi 0x2
dec edx
cmp esi edi
mov esi edx
cmove ecx esi
lea edx [ ecx + eax ]
lea eax [ ecx + eax + 0x8 ]
mov [ esp + 0x8 ] eax
sar eax 0x1f
shr eax 0x1d
lea ebx [ eax + edx + 0x8 ]
sar ebx 0x3
lea eax [ ebx + 0x4 ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
call sub_43f807
add esp 0x8
mov ecx ebx
lea edi [ eax + 0x4 ]
shr ecx 0x18
mov [ eax ] cl
mov ecx ebx
shr ecx 0x10
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bh
mov [ eax + 0x3 ] bl
mov [ esp ] eax
mov ecx 0x2
mov eax [ ebp + 0x4 ]
cmp [ eax ] ecx
jne r-xdata
mov eax ebp
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
add eax 0x7
cmp eax 0xf
jae r-xdata
cmp [ esp + 0x8 ] 0x8
jl r-xdata
dec ebx
mov ebx [ esp + 0x4 ]
mov ebp [ esp ]
jmp r-xdata
xor esi esi
push ebx
push [ ebp + 0x18 ]
call sub_45da64
add esp 0x8
dec ebx
mov [ edi ] al
inc edi
cmp ebx esi
jne r-xdata
mov ebx [ esp + 0x4 ]
mov ebp [ esp ]
lea edi [ ebp + ebx ]
mov esi [ esp + 0x24 ]
lea eax [ ebp + ebx ]
cmp edi eax
je r-xdata
push esi
push [ ebp + 0x18 ]
call sub_45da64
add esp 0x8
mov [ edi + esi ] al
inc esi
cmp ebx esi
jne r-xdata
jmp r-xdata
mov [ esi ] ebx
push 0x7a0
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_4637b0
push ebx
push edi
push esi
sub esp 0x10
mov edi [ rw-data ]
mov edx [ esp + 0x28 ]
mov esi [ esp + 0x2c ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0xc ] edi
mov [ esp ] esi
push edx
push ecx
push eax
call sub_46308d
add esp 0xc
mov esi eax
xor edi edi
test esi esi
je r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax edi
add esp 0x10
pop esi
pop edi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx esp
lea edx [ esp + 0x30 ]
call sub_466278
jmp r-xdata
cmp eax 0x2
jne r-xdata
test eax eax
mov [ esi + 0x18 ] eax
je r-xdata
push esi
jmp r-xdata
lea eax [ esp + 0x4 ]
lea ebx [ esp + 0x8 ]
mov ecx esp
lea edx [ esp + 0x30 ]
push eax
push ebx
call sub_4661dd
add esp 0x8
mov eax [ ebx ]
test eax eax
je r-xdata
push esi
push [ esi + 0x4 ]
push eax
call sub_462edb
add esp 0x8
mov edi eax
test edi edi
je r-xdata
call sub_4631d0
add esp 0x4
xor eax eax
push [ esp + 0x4 ]
push eax
call sub_45d698
add esp 0x8
jmp r-xdata
push esi
call sub_4631d0
add esp 0x4
xor esi esi
push [ esi + 0x8 ]
push [ edi + 0x4 ]
call sub_45d3b9
add esp 0x8
test eax eax
jne r-xdata
push [ esi + 0xc ]
push [ edi + 0x8 ]
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
push edi
call sub_462b70
add esp 0x4
mov edi esi
jmp r-xdata
sub_4638a7
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov ebx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x8 ]
mov ecx ebx
push eax
push esi
call sub_4661dd
add esp 0x8
mov edi [ esi ]
test edi edi
je r-xdata
xor ebp ebp
mov ebp [ esp + 0x2c ]
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] ebp
call sub_462fd4
xor ebp ebp
mov [ esi + 0x4 ] rw-data
lea eax [ esi + 0x4 ]
mov ecx edi
mov [ esi + 0x18 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0x11 ] ebp
mov [ esi + 0xd ] ebp
mov edx [ esp + 0x8 ]
mov [ esp ] edx
push eax
call sub_4662c0
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_4631d0
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x34 ]
lea eax [ esp + 0x4 ]
lea ebp [ esp + 0xc ]
mov ecx ebx
push eax
push ebp
call sub_4661dd
add esp 0x8
mov ebp [ ebp ]
test ebp ebp
je r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax ebp
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
cmp [ esp + 0x4 ] 0x40
jne r-xdata
push 0x20
push ebp
call sub_45d698
add esp 0x8
mov [ esi + 0x18 ] eax
push [ esi + 0x4 ]
push eax
call sub_462edb
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
push esi
call sub_4631d0
add esp 0x4
xor esi esi
mov eax esi
add eax 0x8
push [ eax ]
push [ ebx + 0x4 ]
call sub_45d3b9
add esp 0x8
test eax eax
jne r-xdata
push esi
jmp r-xdata
mov eax 0x20
add ebp 0x20
push eax
push edi
push ebp
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
push [ esi + 0xc ]
push [ ebx + 0x8 ]
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
call sub_4631d0
add esp 0x4
mov ebp esi
jmp r-xdata
push ebx
call sub_462b70
add esp 0x4
cmp [ esp ] 0x20
jne r-xdata
sub_463a02
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov ebp [ esp + 0x28 ]
xor esi esi
mov eax [ ebp + 0x4 ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x30 ]
push [ ebp + 0xc ]
call sub_45d970
add esp 0x4
mov ebx eax
lea eax [ ebx + 0x7 ]
sar eax 0x1f
shr eax 0x1d
lea esi [ ebx + eax + 0x7 ]
sar esi 0x3
push [ ebp + 0x18 ]
call sub_45d970
mov ecx esi
add esp 0x4
lea edx [ eax + 0x7 ]
sar edx 0x1f
shr edx 0x1d
lea edx [ eax + edx + 0x7 ]
sar edx 0x3
lea esi [ edx + ecx * 2 + 0x8 ]
cmp esi edi
jg r-xdata
mov edi [ esp + 0x2c ]
mov [ esp + 0x8 ] eax
mov eax ecx
mov [ esp ] esi
mov [ esp + 0x4 ] edx
mov esi ebx
lea ebx [ ecx - 0x1 ]
shr eax 0x18
mov [ edi ] al
mov eax ecx
shr eax 0x10
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] ch
mov [ edi + 0x3 ] cl
add edi 0x4
mov [ esp + 0xc ] ecx
push 0x0
push [ ebp + 0xc ]
call sub_45da64
add esp 0x8
cmp esi 0x9
mov [ esp + 0x10 ] esi
jl r-xdata
and al 0x7f
xor ebp ebp
mov [ edi ] al
push ebp
mov eax [ esp + 0x2c ]
push [ eax + 0x8 ]
call sub_45da92
add esp 0x8
movzx ecx [ edi ]
shl eax 0x7
or ecx eax
mov [ edi ] cl
mov ecx [ esp + 0xc ]
add ecx [ esp + 0x4 ]
mov eax ecx
shr eax 0x18
mov [ edi + 0x1 ] al
mov eax ecx
shr eax 0x10
mov [ edi + 0x2 ] al
mov [ edi + 0x3 ] ch
mov [ edi + 0x4 ] cl
add edi 0x5
cmp [ esp + 0x8 ] 0x0
jle r-xdata
mov esi ebp
xor ebp ebp
push 0x0
mov ebp [ esp + 0x2c ]
push [ ebp + 0xc ]
call sub_45da64
add esp 0x8
cmp [ esp + 0x10 ] 0x9
jl r-xdata
mov esi [ esp + 0x28 ]
mov [ edi + ebp ] al
inc ebp
push ebp
push [ esi + 0xc ]
call sub_45da64
add esp 0x8
cmp ebp ebx
jl r-xdata
add edi ebp
mov esi [ esp ]
and al 0x7f
mov [ edi ] al
push 0x0
push [ ebp + 0x8 ]
call sub_45da92
add esp 0x8
movzx ecx [ edi ]
shl eax 0x7
or ecx eax
mov [ edi ] cl
xor esi esi
push ebp
push [ esi + 0x18 ]
call sub_45da64
add esp 0x8
mov [ edi + ebp ] al
inc ebp
cmp ebp [ esp + 0x4 ]
jl r-xdata
add edi ebp
mov [ edi + esi ] al
inc esi
push esi
push [ ebp + 0xc ]
call sub_45da64
add esp 0x8
cmp esi ebx
jl r-xdata
add edi esi
sub_463b81
push esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_46308d
add esp 0xc
test eax eax
je r-xdata
xor esi esi
dec esi
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0xc ]
push eax
call sub_4631d0
add esp 0x4
jmp r-xdata
mov eax esi
pop esi
retn
sub_463bb2
push ebp
push ebx
push edi
push esi
sub esp 0x13c
mov eax [ rw-data ]
mov edi [ esp + 0x150 ]
xor ebx ebx
mov [ esp + 0x138 ] eax
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x138 ]
call sub_497c4a
mov eax ebx
add esp 0x13c
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi + 0xc ] 0x0
je r-xdata
lea eax [ edi + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov [ esp + 0x4 ] eax
lea esi [ esp + 0x1c ]
lea ebp [ esp + 0x20 ]
lea ecx [ esp + 0x154 ]
lea edx [ esp + 0x158 ]
mov eax [ edi ]
mov eax [ eax + 0x38 ]
mov [ esp + 0x8 ] eax
push esi
push ebp
call sub_4661dd
add esp 0x8
mov eax [ ebp ]
test eax eax
je r-xdata
mov ecx [ edi ]
push [ ecx + 0x30 ]
push eax
push [ esp + 0x24 ]
call sub_440356
add esp 0xc
test eax eax
je r-xdata
lea ecx [ esp + 0x154 ]
lea edx [ esp + 0x158 ]
push esi
push ebp
call sub_4661dd
add esp 0x8
mov ebp [ esp + 0x20 ]
test ebp ebp
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x160 ]
mov ecx [ esp + 0x15c ]
mov esi [ eax ]
cmp [ esi ] 0x2
jne r-xdata
mov ebp edx
mov esi ecx
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x1c ]
call sub_466278
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x100
jne r-xdata
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x1c ]
call sub_466278
test eax eax
je r-xdata
shr eax 0x2
and eax 0x3ffffffe
cmp [ esp + 0x1c ] eax
jne r-xdata
push edi
jmp r-xdata
mov ebx [ esp + 0x8 ]
mov [ esp + 0xc ] edi
mov [ esp ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x14 ]
cmp eax 0x41
mov [ esp + 0x10 ] eax
jb r-xdata
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov [ eax ] esi
mov esi eax
xor ebx ebx
test esi esi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0xd ] ebx
mov [ esi + 0x9 ] ebx
je r-xdata
call sub_45b91a
jmp r-xdata
call [ ecx ]
mov edi eax
mov eax [ ebx + 0x4 ]
push ebp
push esi
push edi
call [ eax + 0x8 ]
add esp 0xc
mov eax [ ebx + 0x4 ]
lea esi [ esp + 0x24 ]
push esi
push edi
call [ eax + 0xc ]
add esp 0x8
mov eax [ esp + 0x4 ]
xor ebx ebx
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
push 0x950
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x4 ]
mov ecx ebp
mov eax [ eax ]
mov edx [ eax + 0xc ]
shr edx 0x3
push esi
call sub_465100
add esp 0x4
test eax eax
je r-xdata
add esp 0x4
push [ rw-data ]
mov edi [ esp + 0x10 ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
mov ebp [ esp ]
mov edi [ esp + 0xc ]
jmp r-xdata
push esi
jmp r-xdata
mov [ esp ] esi
mov eax [ edi + 0x4 ]
mov eax [ eax + 0xc ]
shr eax 0x3
lea ecx [ ebp + eax ]
push eax
push ecx
call sub_45d698
add esp 0x8
lea esi [ esp + 0x24 ]
mov [ esp + 0x8 ] eax
push esi
call sub_46c2fc
add esp 0x4
mov eax [ edi + 0x4 ]
mov eax [ eax + 0xc ]
shr eax 0x3
push eax
push ebp
push esi
call sub_46c333
add esp 0xc
mov eax [ edi + 0x4 ]
mov esi [ eax + 0xc ]
push 0x0
push [ edi + 0xc ]
call sub_45da64
add esp 0x8
cmp esi 0x10
jb r-xdata
mov ebp [ esp ]
mov eax [ esp + 0x4 ]
mov eax [ eax ]
push [ eax + 0x1c ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
push edi
call sub_45b91a
add esp 0x4
push ebp
call sub_462b70
and al 0x7f
lea esi [ esp + 0x1b ]
mov [ esi ] al
push 0x0
push [ edi + 0x8 ]
call sub_45da92
add esp 0x8
movzx ecx [ esi ]
shl eax 0x7
or ecx eax
mov [ esi ] cl
push 0x1
push esi
lea eax [ esp + 0x2c ]
mov ebp eax
push ebp
call sub_46c333
add esp 0xc
push [ esp + 0x160 ]
push [ esp + 0x160 ]
push ebp
call sub_46c333
add esp 0xc
lea esi [ esp + 0xf8 ]
push esi
push ebp
call sub_46d24e
add esp 0x8
push 0x40
push esi
call sub_45d698
add esp 0x8
mov ebp eax
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x8 ]
add eax 0x1c
push esi
push eax
call sub_462bbb
add esp 0x8
mov edi eax
push esi
call sub_45b91a
add esp 0x4
test edi edi
je r-xdata
shr esi 0x3
xor ebp ebp
dec esi
push [ rw-data ]
mov ebp [ esp + 0x4 ]
push ebp
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
push [ esp ]
call sub_462b70
add esp 0x4
push ebp
jmp r-xdata
push ebp
push [ esp + 0x8 ]
call sub_462bbb
add esp 0x8
mov esi eax
push ebp
call sub_45b91a
add esp 0x4
test esi esi
je r-xdata
mov [ esp + 0x1b ] al
xor eax eax
inc eax
push eax
lea eax [ esp + 0x1f ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_46c333
add esp 0xc
inc ebp
push ebp
push [ edi + 0xc ]
call sub_45da64
add esp 0x8
cmp ebp esi
jl r-xdata
mov ecx ebp
mov ebp [ esp + 0x4 ]
mov eax [ ebp ]
push [ eax + 0x1c ]
push ecx
call sub_45d3b9
add esp 0x8
test eax eax
jns r-xdata
push edi
call sub_462b70
add esp 0x4
push [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] edi
mov edi [ esp ]
mov edx esi
mov ecx edi
push 0x0
call sub_4654c4
add esp 0x4
mov ebp eax
push edi
call sub_462b70
add esp 0x4
push esi
call sub_462b70
add esp 0x4
test ebp ebp
je r-xdata
push [ esp + 0x10 ]
push esi
call sub_45d5e4
add esp 0x8
mov esi eax
mov eax [ ebp ]
push [ eax + 0x1c ]
call sub_45d970
add esp 0x4
mov ebp eax
push esi
call sub_45d970
add esp 0x4
sub eax ebp
jle r-xdata
push [ esp + 0x4 ]
push [ ebp + 0x4 ]
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_45d3b9
add esp 0x8
xor ebx ebx
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
mov ebp [ esp ]
mov eax [ eax ]
push [ eax + 0x1c ]
push esi
call sub_45be66
add esp 0x8
mov [ esp + 0x8 ] eax
push esi
mov esi [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x1c ]
push ebp
call sub_45cb53
add esp 0x8
test eax eax
je r-xdata
push eax
push esi
call sub_45db74
add esp 0x8
mov ebp eax
push esi
call sub_45b91a
add esp 0x4
mov esi ebp
push esi
call sub_462b70
add esp 0x4
push ebp
jmp r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x8 ]
call sub_45d3b9
add esp 0x8
xor ebx ebx
test eax eax
sete bl
push [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esi ]
push [ ecx + 0x1c ]
push eax
push [ esp + 0x10 ]
mov ebx eax
call sub_45cea6
add esp 0xc
mov [ esp + 0x10 ] eax
mov eax [ esi ]
push [ eax + 0x1c ]
push ebx
push edi
call sub_45cea6
add esp 0xc
mov [ esp + 0x14 ] eax
push ebx
call sub_45b91a
add esp 0x4
mov ecx [ esi ]
xor ebx ebx
cmp [ ecx ] 0x0
jne r-xdata
call sub_45b91a
add esp 0x4
jmp r-xdata
push [ esp + 0x10 ]
call sub_45b91a
add esp 0x4
push [ esp + 0x14 ]
call sub_45b91a
add esp 0x4
test ebx ebx
je r-xdata
call sub_465258
mov edi eax
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
mov ecx [ eax ]
add ecx 0x20
push edi
call sub_46519e
add esp 0x4
mov esi eax
test esi esi
je r-xdata
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
push [ eax + 0x1c ]
push [ ebx + 0x4 ]
call sub_45be66
add esp 0x8
mov esi eax
push ebx
call sub_462b70
add esp 0x4
push esi
push edi
call sub_45d3b9
add esp 0x8
xor ebx ebx
test eax eax
sete bl
push esi
call sub_45b91a
add esp 0x4
push [ esp + 0x8 ]
mov ebp [ esp ]
mov edi [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x14 ]
push edi
call sub_46519e
add esp 0x4
mov ebp eax
test ebp ebp
je r-xdata
push esi
jmp r-xdata
mov ecx esi
mov edx ebp
push edi
call sub_4654c4
add esp 0x4
mov edi eax
push esi
call sub_462b70
add esp 0x4
push ebp
call sub_462b70
add esp 0x4
mov ecx edi
call sub_465295
test eax eax
je r-xdata
call sub_462b70
add esp 0x4
push edi
mov ebx edi
jmp r-xdata
sub_46419d
push ebp
push ebx
push edi
push esi
sub esp 0x134
mov eax [ rw-data ]
mov ebx [ esp + 0x148 ]
mov [ esp + 0x130 ] eax
cmp [ ebx + 0x18 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x2
jne r-xdata
mov eax [ ebx ]
mov edi [ eax + 0x38 ]
mov ecx [ edi + 0x4 ]
mov ebp [ ecx + 0x14 ]
cmp ebp 0x41
jb r-xdata
mov ebp [ eax + 0xc ]
lea eax [ esp + 0x1c ]
mov [ esp + 0x4 ] ebp
shr ebp 0x3
push eax
call sub_46c2fc
add esp 0x4
test ebp ebp
je r-xdata
call [ ecx ]
mov esi eax
mov eax [ edi + 0x4 ]
push [ esp + 0x150 ]
push [ esp + 0x150 ]
push esi
call [ eax + 0x8 ]
add esp 0xc
mov eax [ edi + 0x4 ]
lea edi [ esp + 0x1c ]
push edi
push esi
call [ eax + 0xc ]
add esp 0x8
mov eax ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx ] 0x0
jne r-xdata
push 0x9e9
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ edi + 0x4 ]
lea esi [ esp + 0xf0 ]
mov [ esp ] ebp
push esi
lea edi [ esp + 0x20 ]
push edi
call sub_46d24e
add esp 0x8
and [ esi ] 0xf8
mov al [ esi + 0x1f ]
and al 0x3f
or al 0x40
mov [ esi + 0x1f ] al
push 0x20
push esi
call sub_45d698
add esp 0x8
mov [ esp + 0xc ] eax
push edi
call sub_46c2fc
add esp 0x4
mov ebp [ esp + 0x148 ]
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0xc ]
mov ecx eax
shr eax 0x3
shr ecx 0x2
sub ecx eax
lea eax [ esp + eax + 0xf0 ]
push ecx
push eax
push edi
call sub_46c333
add esp 0xc
push [ esp + 0x150 ]
push [ esp + 0x150 ]
push edi
call sub_46c333
add esp 0xc
push esi
push edi
call sub_46d24e
add esp 0x8
push 0x40
push esi
call sub_45d698
add esp 0x8
mov ebx eax
mov eax [ ebp + 0x4 ]
add eax 0x1c
push ebx
push eax
call sub_462bbb
add esp 0x8
mov esi eax
test esi esi
je r-xdata
xor esi esi
xor edi edi
lea ebx [ esp + 0x1a ]
inc edi
mov eax [ eax + 0x18 ]
mov [ esp ] eax
push ebp
push edi
call sub_45d5e4
add esp 0x8
mov esi eax
push [ ebx + 0x1c ]
call sub_45d970
add esp 0x4
mov edi eax
push esi
call sub_45d970
add esp 0x4
sub eax edi
jle r-xdata
push ebx
call sub_45b91a
add esp 0x4
push [ esp + 0xc ]
jmp r-xdata
mov [ esp + 0x8 ] ebx
push edi
call sub_46c2fc
add esp 0x4
mov ebp [ esp ]
dec ebp
push 0x0
mov [ esp + 0x4 ] esi
push [ esi + 0x8 ]
call sub_45da64
add esp 0x8
cmp [ esp + 0x4 ] 0x10
jb r-xdata
push esi
mov eax [ esp + 0x14c ]
push [ eax + 0x18 ]
call sub_45da64
add esp 0x8
mov [ esp + 0x1a ] al
push edi
push ebx
lea eax [ esp + 0x24 ]
push eax
call sub_46c333
add esp 0xc
inc esi
cmp ebp esi
jne r-xdata
lea edi [ esp + 0xf0 ]
push edi
push ebp
lea eax [ esp + 0x24 ]
push eax
call sub_46d857
add esp 0xc
push 0x14
push edi
mov ebp [ esp + 0x8 ]
push ebp
push [ ebx + 0x1c ]
push r--data
call sub_4617d4
add esp 0x14
lea ecx [ ebx + 0x20 ]
mov [ esp + 0x4 ] eax
push eax
push ecx
call sub_462bbb
add esp 0x8
mov edi eax
test edi edi
je r-xdata
push eax
push esi
call sub_45db74
add esp 0x8
mov edi eax
push esi
call sub_45b91a
add esp 0x4
mov esi edi
call sub_45b91a
add esp 0x4
mov ebx [ esp ]
lea esi [ esp + 0x1c ]
mov ebx [ esp ]
xor edi edi
lea esi [ esp + 0x1c ]
push esi
call sub_45b91a
add esp 0x4
push [ esp + 0x4 ]
jmp r-xdata
push [ ebx + 0x1c ]
push [ edi + 0x4 ]
call sub_45be66
add esp 0x8
mov ebp eax
push edi
call sub_462b70
add esp 0x4
push [ ebx + 0x1c ]
push [ esp + 0x4 ]
mov [ esp + 0x8 ] ebp
push ebp
call sub_45cea6
add esp 0xc
mov edi eax
push [ ebx + 0x1c ]
push esi
call sub_45be66
add esp 0x8
mov ebp eax
push esi
call sub_45b91a
add esp 0x4
push ebp
push edi
call sub_45d53d
add esp 0x8
mov esi eax
push edi
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
push [ ebx + 0x1c ]
push esi
call sub_45be66
add esp 0x8
mov ebp eax
push esi
call sub_45b91a
add esp 0x4
push [ ebx + 0x1c ]
mov esi [ esp + 0x8 ]
push esi
call sub_45cb53
add esp 0x8
mov edi eax
push esi
call sub_45b91a
add esp 0x4
test edi edi
je r-xdata
mov esi [ esp + 0x148 ]
mov esi [ esp + 0x148 ]
xor edi edi
mov [ esp + 0x1b ] al
xor eax eax
inc eax
push eax
lea eax [ esp + 0x1f ]
push eax
push esi
call sub_46c333
add esp 0xc
inc edi
push edi
push [ ebx + 0x8 ]
call sub_45da64
add esp 0x8
cmp edi ebp
jl r-xdata
jmp r-xdata
push ebp
call sub_45b91a
add esp 0x4
mov edi [ esp ]
push edi
call sub_45b91a
add esp 0x4
xor esi esi
test edi edi
mov eax edi
jne r-xdata
push [ ebx + 0x1c ]
push edi
push ebp
call sub_45cea6
add esp 0xc
mov esi eax
push ebp
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
mov eax [ esp ]
test eax eax
je r-xdata
and al 0x7f
xor edi edi
mov [ ebx ] al
push edi
mov esi [ esp + 0x4 ]
push [ esi + 0x4 ]
call sub_45da92
add esp 0x8
movzx ecx [ ebx ]
shl eax 0x7
or ecx eax
mov [ ebx ] cl
push esi
call sub_462b70
add esp 0x4
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
mov [ esp + 0x8 ] ebp
lea ebp [ esi - 0x1 ]
mov esi [ esp ]
xor edi edi
mov [ esp + 0x1b ] al
xor eax eax
inc eax
push eax
push ebx
lea eax [ esp + 0x24 ]
push eax
call sub_46c333
add esp 0xc
inc edi
push edi
push [ esi + 0xc ]
call sub_45da64
add esp 0x8
cmp edi ebp
jl r-xdata
jmp r-xdata
and al 0x7f
lea edi [ esp + 0x1b ]
mov [ edi ] al
xor eax eax
push eax
push [ ebx + 0x4 ]
call sub_45da92
add esp 0x8
movzx ecx [ edi ]
shl eax 0x7
or ecx eax
mov [ edi ] cl
push 0x1
mov ebx edi
push edi
push esi
call sub_46c333
add esp 0xc
xor eax eax
push eax
mov eax [ esp + 0x14c ]
push [ eax + 0xc ]
call sub_45da64
add esp 0x8
cmp [ esp + 0x4 ] 0x10
jb r-xdata
push eax
call sub_45b91a
add esp 0x4
jmp r-xdata
test eax eax
je r-xdata
test esi esi
je r-xdata
push ebp
call sub_45b91a
add esp 0x4
mov esi [ esp + 0x4 ]
jmp r-xdata
push edi
push ebp
call sub_45da64
add esp 0x8
mov [ ebx + edi + 0x1 ] al
inc edi
cmp esi edi
jne r-xdata
mov [ ebx + edi ] al
inc edi
push edi
push [ esi + 0x8 ]
call sub_45da64
add esp 0x8
cmp edi ebp
jl r-xdata
mov ebp [ esp + 0x8 ]
add ebx edi
and al 0x7f
mov [ esp + 0x1b ] al
xor eax eax
push eax
push [ esi + 0x8 ]
mov edi esi
call sub_45da92
add esp 0x8
movzx ecx [ esp + 0x1b ]
shl eax 0x7
or ecx eax
xor eax eax
inc eax
mov [ esp + 0x1b ] cl
push eax
push ebx
lea eax [ esp + 0x24 ]
mov ebx eax
push ebx
call sub_46c333
add esp 0xc
push [ esp + 0x150 ]
push [ esp + 0x150 ]
push ebx
call sub_46c333
add esp 0xc
lea eax [ esp + 0xf0 ]
mov esi eax
push esi
push ebx
call sub_46d24e
add esp 0x8
push 0x40
push esi
call sub_45d698
add esp 0x8
mov ebp eax
mov eax [ edi + 0x4 ]
push [ eax + 0x14 ]
mov edi [ esp + 0x10 ]
push edi
push ebp
call sub_45cea6
add esp 0xc
mov esi eax
push edi
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
push esi
mov edi [ esp + 0xc ]
push edi
call sub_45d53d
add esp 0x8
mov ebx eax
push edi
call sub_45b91a
add esp 0x4
push esi
call sub_45b91a
add esp 0x4
mov esi [ esp + 0x148 ]
mov eax [ esi + 0x4 ]
push [ eax + 0x14 ]
push ebx
call sub_45be66
add esp 0x8
mov ebp eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x30 ]
call sub_4a7f30
add esp 0x4
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x154 ]
mov edi esi
mov eax [ eax + 0xc ]
shr eax 0x3
lea eax [ ebx + eax * 2 + 0x8 ]
mov [ ecx ] eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov eax ebx
shr eax 0x18
mov [ esi ] al
mov eax ebx
shr eax 0x10
mov [ esi + 0x1 ] al
mov [ esi + 0x2 ] bh
mov [ esi + 0x3 ] bl
lea eax [ esi + 0x4 ]
mov ecx [ edi ]
push ebx
push [ ecx + 0x30 ]
push eax
call sub_49a1f0
add esp 0xc
mov ecx edi
lea ebx [ esi + ebx + 0x8 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x4 ] esi
shr eax 0x1a
mov [ ebx - 0x4 ] al
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc ]
shr eax 0x12
mov [ ebx - 0x3 ] al
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc ]
shr eax 0xa
mov [ ebx - 0x2 ] al
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc ]
shr eax 0x3
add al al
mov [ ebx - 0x1 ] al
mov eax [ ecx + 0x4 ]
mov edi [ eax + 0xc ]
xor eax eax
mov esi edi
shr esi 0x3
push eax
mov eax [ esp + 0x4 ]
push [ eax + 0x8 ]
call sub_45da64
add esp 0x8
cmp edi 0x10
mov [ esp + 0xc ] esi
jb r-xdata
push esi
mov ecx [ esp + 0x130 ]
call sub_497c4a
mov eax esi
add esp 0x134
pop esi
pop edi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
push eax
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] esi
sar ecx 0x1f
shr ecx 0x1d
lea ebx [ eax + ecx + 0x8 ]
sar ebx 0x3
push esi
call sub_45d970
add esp 0x4
mov esi [ esp + 0x148 ]
lea ecx [ eax + 0x8 ]
mov [ esp + 0x10 ] eax
sar ecx 0x1f
shr ecx 0x1d
lea edi [ eax + ecx + 0x8 ]
mov eax [ esi ]
sar edi 0x3
push [ eax + 0x30 ]
call sub_4a7f30
add esp 0x4
mov ecx [ esp + 0x154 ]
mov esi eax
lea eax [ ebx + edi ]
lea eax [ esi + eax + 0x10 ]
mov [ ecx ] eax
push 0x1
push eax
call sub_43f807
add esp 0x8
mov edx esi
mov ebp eax
mov ecx [ esp + 0x148 ]
mov eax edx
shr eax 0x18
mov [ ebp ] al
mov eax edx
shr eax 0x10
mov [ ebp + 0x1 ] al
mov [ ebp + 0x2 ] dh
mov [ ebp + 0x3 ] dl
lea eax [ ebp + 0x4 ]
mov ecx [ ecx ]
push edx
push [ ecx + 0x30 ]
push eax
call sub_49a1f0
mov edx esi
add esp 0xc
lea eax [ ebx + edi + 0x8 ]
mov [ esp + 0x14 ] edi
lea edi [ ebp + edx + 0xc ]
mov [ esp + 0xc ] ebp
mov ecx eax
shr ecx 0x18
mov [ edi - 0x8 ] cl
mov ecx eax
shr ecx 0x10
mov [ edi - 0x7 ] cl
mov [ edi - 0x6 ] ah
mov [ edi - 0x5 ] al
mov eax ebx
shr eax 0x18
mov [ edi - 0x4 ] al
mov eax ebx
shr eax 0x10
mov [ edi - 0x3 ] al
cmp [ esp + 0x8 ] 0xfffffff0
mov [ edi - 0x2 ] bh
mov [ edi - 0x1 ] bl
ja r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x4 ]
mov eax ecx
shr eax 0x18
mov [ edi ] al
mov eax ecx
shr eax 0x10
cmp edx 0xfffffff0
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] ch
mov [ edi + 0x3 ] cl
ja r-xdata
mov ebp [ esp ]
lea eax [ edx + ebx + 0xc ]
dec ebx
xor esi esi
dec esi
mov [ esp + 0x8 ] eax
push [ esp ]
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov esi [ esp + 0xc ]
jmp r-xdata
add edi 0x4
dec ecx
xor esi esi
dec esi
push ebx
push ebp
call sub_45da64
add esp 0x8
dec ebx
mov [ edi ] al
inc edi
cmp ebx esi
jne r-xdata
mov eax [ esp + 0x8 ]
add eax [ esp + 0xc ]
mov edi eax
push ecx
push ebx
mov ebp ecx
call sub_45da64
mov ecx ebp
add esp 0x8
dec ecx
mov [ edi ] al
inc edi
cmp ecx esi
jne r-xdata
sub_46497b
mov al [ rw-data ]
test al al
jne r-xdata
mov eax rw-data
retn
mov ecx rw-data
mov edx 0x100
push r--data
push r--data
push r--data
push r--data
push r--data
push r--data
call sub_466786
add esp 0x18
mov eax r--data
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_4649d0
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
lea ebx [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax esp
mov esi [ edi + 0x38 ]
push eax
push ebx
call sub_4661dd
add esp 0x8
cmp [ ebx ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
call [ esi ]
mov ebp eax
cmp [ ebp ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax edi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
mov esi eax
mov [ esi ] edi
lea ebx [ esi + 0x4 ]
xor edi edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x11 ] edi
mov [ esi + 0xd ] edi
push ebx
call sub_466230
add esp 0x4
test eax eax
je r-xdata
push 0x854
push r--data
push r--data
call sub_4a509d
add esp 0xc
push esi
call sub_4631d0
add esp 0x4
mov [ esi + 0x18 ] 0x0
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
cmp [ esi + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
push eax
call sub_45d3b9
add esp 0x8
test eax eax
jns r-xdata
push [ ebp + 0x10 ]
push [ esi + 0xc ]
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
call sub_466278
test eax eax
mov [ esi + 0x18 ] eax
je r-xdata
push esi
jmp r-xdata
push [ ebx ]
push eax
call sub_462edb
add esp 0x8
mov edi eax
test edi edi
je r-xdata
call sub_4631d0
push esi
jmp r-xdata
mov eax esi
add eax 0x8
push [ edi + 0x4 ]
push [ eax ]
call sub_45d3b9
add esp 0x8
test eax eax
jne r-xdata
push esi
call sub_4631d0
add esp 0x4
push edi
call sub_462b70
jmp r-xdata
push [ edi + 0x8 ]
push [ esi + 0xc ]
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
add esp 0x4
push edi
call sub_462b70
add esp 0x4
mov edi esi
jmp r-xdata
sub_464b3e
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebp [ esp + 0x20 ]
xor eax eax
mov ecx [ ebp + 0x4 ]
cmp [ ecx ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
push [ ecx + 0x10 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x7 ]
mov [ esp + 0x4 ] eax
sar ecx 0x1f
shr ecx 0x1d
lea esi [ eax + ecx + 0x7 ]
mov eax [ ebp + 0x4 ]
sar esi 0x3
push [ eax + 0x4 ]
call sub_4a7f30
add esp 0x4
mov ebx eax
lea edi [ ebx + esi * 2 + 0x9 ]
push [ ebp + 0x18 ]
call sub_45da2c
mov ecx ebp
add esp 0x4
add eax edi
cmp eax [ esp + 0x28 ]
jg r-xdata
mov ebp [ esp + 0x24 ]
lea eax [ esi + esi ]
lea edi [ ebx + 0x9 ]
mov [ esp ] eax
mov eax ebx
shr eax 0x18
mov [ ebp ] al
mov eax ebx
shr eax 0x10
mov [ ebp + 0x1 ] al
mov [ ebp + 0x2 ] bh
mov [ ebp + 0x3 ] bl
lea eax [ ebp + 0x4 ]
mov ecx [ ecx + 0x4 ]
push ebx
push [ ecx + 0x4 ]
push eax
call sub_49a1f0
add esp 0xc
mov eax esi
shr eax 0x17
mov [ ebp + ebx + 0x4 ] al
mov eax esi
shr eax 0xf
mov [ ebp + ebx + 0x5 ] al
mov eax esi
shr eax 0x7
mov [ ebp + ebx + 0x6 ] al
mov eax [ esp ]
or al 0x1
mov [ ebp + ebx + 0x7 ] al
mov [ ebp + ebx + 0x8 ] 0x4
mov eax [ esp + 0x4 ]
add eax 0xe
cmp eax 0xf
jb r-xdata
mov eax [ esp + 0x20 ]
push [ eax + 0x18 ]
call sub_45d970
add esp 0x4
mov ecx eax
lea eax [ ecx + 0x8 ]
sar eax 0x1f
shr eax 0x1d
lea ebx [ ecx + eax + 0x8 ]
sar ebx 0x3
mov eax ebx
shr eax 0x18
mov [ ebp + edi ] al
mov eax ebx
shr eax 0x10
cmp ecx 0xfffffff0
mov [ ebp + edi + 0x1 ] al
lea eax [ edi + 0x4 ]
mov [ ebp + edi + 0x2 ] bh
mov [ ebp + edi + 0x3 ] bl
ja r-xdata
add ebx esi
mov [ esp + 0x8 ] esi
add edi ebp
xor ecx ecx
mov [ esp + 0x4 ] eax
mov [ esp ] ebx
lea ebx [ esi - 0x1 ]
mov esi [ esp + 0x20 ]
dec ecx
mov esi [ esp + 0x20 ]
add edi ebx
dec ebx
add ebp eax
push ebx
push [ esi + 0x8 ]
mov ebp ecx
call sub_45da64
mov ecx ebp
add esp 0x8
dec ebx
mov [ edi ] al
inc edi
cmp ebx ecx
jne r-xdata
mov ecx [ esp ]
add ecx 0x9
cmp [ esp + 0x4 ] 0xf
jae r-xdata
push ebx
push [ esi + 0x18 ]
call sub_45da64
add esp 0x8
mov [ ebp ] al
dec ebx
inc ebp
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
add edi 0x4
mov eax edi
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
mov [ esp ] ecx
lea edi [ eax - 0x1 ]
lea ebx [ edx + ecx ]
mov edi ecx
jmp r-xdata
push edi
push [ esi + 0xc ]
call sub_45da64
mov ecx ebp
add esp 0x8
dec edi
mov [ ebx ] al
inc ebx
cmp edi ecx
jne r-xdata
mov edi [ esp ]
add edi [ esp + 0x8 ]
mov ebp [ esp + 0x24 ]
sub_464cf7
mov al [ rw-data ]
test al al
jne r-xdata
mov eax rw-data
retn
mov ecx rw-data
mov edx 0x180
push r--data
push r--data
push r--data
push r--data
push r--data
push r--data
call sub_466786
add esp 0x18
mov eax r--data
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_464d4c
mov al [ rw-data ]
test al al
jne r-xdata
mov eax rw-data
retn
mov ecx rw-data
mov edx 0x209
push r--data
push r--data
push r--data
push r--data
push r--data
push r--data
call sub_466786
add esp 0x18
mov eax r--data
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_464dae
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x30
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ esp + 0x28 ] ecx
mov eax [ eax + 0x10 ]
call [ eax ]
xor ebx ebx
mov edi eax
inc ebx
push 0x1c
push ebx
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] 0x0
mov [ esi + 0x4 ] edi
cmp [ edi ] ebx
jne r-xdata
push [ edi + 0x1c ]
push [ rw-data ]
call sub_45d86b
add esp 0x8
test eax eax
mov [ esi + 0x18 ] eax
je r-xdata
xorps xmm0 xmm0
xor edi edi
movaps [ esp + 0x10 ] xmm0
movaps [ esp ] xmm0
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
mov ecx [ esi + 0x4 ]
add ecx 0x20
call sub_469c4e
mov [ esp + edi ] al
inc edi
cmp edi 0x20
jne r-xdata
mov edi esp
mov ebx 0x20
and [ edi ] 0xf8
mov al [ edi + 0x1f ]
and al 0x3f
or al 0x40
mov [ edi + 0x1f ] al
push ebx
push edi
call sub_45d698
add esp 0x8
mov [ esi + 0x18 ] eax
push ebx
push edi
call sub_48f5d3
add esp 0x8
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push [ esi + 0x18 ]
call sub_45b91a
add esp 0x4
mov ecx [ eax + 0x4 ]
mov [ esi + 0x8 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] 0x0
push eax
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx 0x1c
jmp r-xdata
mov ecx [ esp + 0x28 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
push eax
push ecx
call sub_462bbb
add esp 0x8
test eax eax
je r-xdata
sub_464eb4
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x20 ]
mov eax [ esi + 0x4 ]
push [ eax + 0x10 ]
call sub_45d970
add esp 0x4
mov ebx eax
xor ecx ecx
mov edi 0x0
lea eax [ ebx + 0x7 ]
sar eax 0x1f
shr eax 0x1d
lea ebp [ ebx + eax + 0x7 ]
mov eax [ esi + 0x4 ]
sar ebp 0x3
cmp [ eax ] ecx
mov ecx [ esp + 0x24 ]
lea eax [ ebp + ebp + 0x1 ]
cmovne eax ebp
mov [ ecx ] eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov edx [ esi + 0x4 ]
mov ecx esi
cmp [ edx ] edi
je r-xdata
add ebx 0xe
mov [ eax ] 0x4
cmp ebx 0xf
mov edx ebx
mov ebx eax
jb r-xdata
test ebx ebx
mov edi ecx
mov ebx eax
jle r-xdata
mov eax ebx
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ ebp + 0x1 ]
mov [ esp + 0x4 ] ebx
lea esi [ ebp - 0x1 ]
inc ebx
mov [ esp + 0x8 ] edx
mov [ esp ] eax
xor eax eax
dec eax
xor esi esi
push esi
mov ecx [ esp + 0x24 ]
push [ ecx + 0x8 ]
mov edi eax
call sub_45da64
add esp 0x8
mov [ ebx ] al
mov eax edi
dec esi
inc ebx
cmp esi eax
jne r-xdata
cmp [ esp + 0x8 ] 0xf
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x4 ]
jb r-xdata
push esi
push [ edi + 0x8 ]
call sub_45da64
add esp 0x8
mov [ ebx + esi ] al
inc esi
cmp esi ebp
jl r-xdata
jmp r-xdata
mov esi ebx
dec ebp
add esi [ esp ]
push ebp
push [ eax + 0xc ]
call sub_45da64
add esp 0x8
mov [ esi ] al
mov eax edi
dec ebp
inc esi
cmp ebp eax
mov eax [ esp + 0x20 ]
jne r-xdata
sub_464fab
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov eax [ rw-data ]
mov ebp [ esp + 0x30 ]
mov ebx [ esp + 0x38 ]
mov edi [ esp + 0x34 ]
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
lea esi [ esp + 0x4 ]
mov ecx edi
mov edx ebx
mov [ esi ] eax
mov [ esi + 0x10 ] 0x0
push esi
call sub_465100
add esp 0x4
test eax eax
je r-xdata
push [ eax + 0x10 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x7 ]
xor esi esi
sar ecx 0x1f
shr ecx 0x1d
lea eax [ eax + ecx + 0x7 ]
sar eax 0x3
cmp eax ebx
jne r-xdata
xor esi esi
lea eax [ esp + 0x4 ]
push [ ebp + 0x18 ]
push eax
call sub_462bbb
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
call sub_497c4a
mov eax esi
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x4 ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x14 ] 0x0
push ebx
push edi
call sub_45d698
add esp 0x8
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
jmp r-xdata
xor esi esi
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov [ eax + 0x4 ] 0x0
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
push eax
call sub_462b70
add esp 0x4
jmp r-xdata
mov [ esp ] eax
mov ebp [ ecx + 0xc ]
add ebp 0x7
shr ebp 0x3
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov ebx eax
test ebp ebp
je r-xdata
push eax
call sub_45b91a
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_45b91a
add esp 0x4
push ebp
push ebx
call sub_45d5e4
add esp 0x8
mov esi eax
push ebp
push ebx
call sub_48f5d3
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
mov eax [ esp ]
xor edi edi
push edi
push esi
call sub_45da64
add esp 0x8
mov [ ebx + edi ] al
inc edi
cmp ebp edi
jne r-xdata
sub_465100
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebx edx
mov edi ecx
mov eax [ esi ]
cmp [ eax ] 0x2
jne r-xdata
xor ebp ebp
test ebx ebx
jle r-xdata
mov ecx edi
mov edx ebx
pop esi
pop edi
pop ebx
pop ebp
jmp sub_4662c0
mov eax ebp
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi ] 0x4
jne r-xdata
dec ebx
test bl 0x1
jne r-xdata
xor ebp ebp
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
jmp r-xdata
shr ebx 0x1
inc edi
push ebx
push edi
call sub_45d5e4
add esp 0x8
mov [ esi + 0x4 ] eax
add edi ebx
push ebx
push edi
call sub_45d5e4
add esp 0x8
mov ecx esi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x0
call sub_4665b7
test eax eax
je r-xdata
push [ esi + 0x4 ]
call sub_45b91a
add esp 0x4
xor ebp ebp
mov [ esi + 0x4 ] ebp
push [ esi + 0x8 ]
call sub_45b91a
add esp 0x4
mov [ esi + 0x8 ] ebp
xor ebp ebp
inc ebp
jmp r-xdata
sub_46519e
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebp edx
mov edi ecx
call sub_465443
mov [ esp ] eax
mov esi [ edi ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
xor edi edi
mov ebx eax
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] 0x1
mov [ esp + 0x8 ] ebp
push ebp
call sub_45d970
add esp 0x4
mov ebp eax
push [ esp ]
call sub_462b70
add esp 0x4
mov eax ebx
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
push [ esp + 0xc ]
call sub_45da92
add esp 0x8
test eax eax
je r-xdata
mov edi esi
mov esi ebp
inc edi
cmp edi ebp
je r-xdata
mov edx [ esp ]
mov ecx ebx
push [ esp + 0x20 ]
call sub_4654c4
add esp 0x4
mov ecx ebx
mov ebx eax
push ecx
call sub_462b70
add esp 0x4
cmp esi ebp
jge r-xdata
mov esi [ esp ]
mov edx [ esp + 0x20 ]
mov ecx esi
call sub_465b1b
mov [ esp + 0x4 ] eax
push esi
call sub_462b70
add esp 0x4
mov eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
mov esi edi
sub_465258
push ebx
push edi
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] 0x0
jne r-xdata
mov eax ebx
pop esi
pop edi
pop ebx
retn
push 0x3
push [ esi + 0x14 ]
call sub_45df4d
add esp 0x8
mov edi eax
push edi
push [ esi + 0x10 ]
call sub_45d3b9
add esp 0x8
xor ebx ebx
test eax eax
sete bl
push edi
call sub_45b91a
add esp 0x4
sub_465295
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi ecx
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebp ebp
inc ebp
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
cmp ecx 0x2
je r-xdata
mov edi ebp
cmp ecx 0x1
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ eax + 0x10 ]
push ecx
call sub_45cb53
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ esi + 0x4 ]
call sub_45cea6
add esp 0xc
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
push [ esi + 0xc ]
call sub_45b91a
add esp 0x4
mov [ esi + 0xc ] 0x0
push [ esi + 0x4 ]
call sub_45b91a
add esp 0x4
mov [ esi + 0x4 ] edi
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
push [ eax + 0x10 ]
push ecx
push ecx
call sub_45cea6
add esp 0xc
mov ecx [ esi ]
push [ ecx + 0x10 ]
mov [ esp + 0x8 ] eax
push eax
call sub_45cb53
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
push [ esp + 0x4 ]
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ esi + 0x4 ]
call sub_45cea6
add esp 0xc
mov [ esp ] eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esi + 0xc ]
mov ebx [ esp + 0xc ]
push ebx
call sub_45cea6
add esp 0xc
mov [ esp + 0x8 ] eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov ebx [ esp + 0xc ]
push ebx
call sub_45cb53
add esp 0x8
push ebx
mov ebx eax
call sub_45b91a
add esp 0x4
test ebx ebx
je r-xdata
call sub_45b91a
add esp 0x4
jmp r-xdata
push [ esp ]
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ esi + 0x8 ]
call sub_45cea6
add esp 0xc
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
push [ esi + 0x4 ]
call sub_45b91a
add esp 0x4
mov eax [ esp ]
mov [ esi + 0x4 ] eax
push [ esi + 0x8 ]
call sub_45b91a
add esp 0x4
mov [ esi + 0x8 ] edi
push [ esi + 0xc ]
call sub_45b91a
add esp 0x4
mov [ esi + 0xc ] 0x0
jmp r-xdata
sub_465443
push ebp
push ebx
push edi
push esi
push eax
mov esi ecx
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi + 0x10 ]
xor edi edi
mov ebx 0x0
mov [ esp + 0x3 ] al
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_45b8e2
add esp 0x4
mov ebx eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_45b8e2
add esp 0x4
mov edi eax
xor ebp ebp
push eax
call sub_45b8e2
add esp 0x4
mov ebp eax
jmp r-xdata
mov esi [ esi ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov [ eax ] esi
mov [ eax + 0x4 ] ebp
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] ebx
cmp [ esp + 0x3 ] 0x0
setne [ eax + 0x10 ]
sub_4654c4
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov esi ecx
mov edi edx
xor ebx ebx
mov eax [ esi ]
cmp eax [ edi ]
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax ebx
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov ecx edi
jmp r-xdata
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx esi
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
jmp sub_465443
mov ecx [ edi + 0xc ]
mov edx [ esp + 0x30 ]
test ecx ecx
mov [ esp + 0x8 ] edx
je r-xdata
cmp ecx 0x2
jne r-xdata
push [ esi + 0x4 ]
call sub_45b8e2
add esp 0x4
mov [ esp ] eax
push [ esi + 0x8 ]
call sub_45b8e2
add esp 0x4
mov [ esp + 0xc ] eax
push [ eax + 0x10 ]
push ecx
push ecx
call sub_45cea6
add esp 0xc
mov ebx eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ esi + 0x4 ]
call sub_45cea6
add esp 0xc
mov [ esp ] eax
mov eax [ esi ]
push [ eax + 0x10 ]
push [ edi + 0xc ]
push ebx
call sub_45cea6
add esp 0xc
mov ebp eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
push [ esi + 0x8 ]
call sub_45cea6
add esp 0xc
mov [ esp + 0xc ] eax
push ebp
call sub_45b91a
add esp 0x4
jmp r-xdata
push [ eax + 0x10 ]
push [ edi + 0x8 ]
push [ esi + 0x4 ]
call sub_45cea6
add esp 0xc
mov ebp eax
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esi + 0x8 ]
push [ edi + 0x4 ]
call sub_45cea6
add esp 0xc
mov ecx ebp
mov [ esp ] eax
mov [ esp + 0xc ] ebp
mov edx eax
push [ esi ]
call sub_46609a
add esp 0x4
mov [ esp + 0x8 ] eax
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esp + 0x4 ]
push ebp
call sub_45cea6
add esp 0xc
mov ebp eax
mov [ esp + 0x4 ] ebp
push [ esp + 0xc ]
call sub_45b91a
add esp 0x4
push [ esp ]
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
push [ eax + 0x18 ]
call sub_45cea6
add esp 0xc
mov ebp eax
push [ esp + 0x4 ]
call sub_45b91a
add esp 0x4
mov ecx [ rw-data ]
mov [ esp + 0x4 ] ebp
mov edx ebp
push [ esi ]
call sub_46609a
add esp 0x4
mov [ esp ] eax
mov ecx [ esi ]
push [ ecx + 0x10 ]
push eax
call sub_45cb53
add esp 0x8
mov ebp eax
push [ esp ]
call sub_45b91a
add esp 0x4
mov ecx ebp
test ebp ebp
je r-xdata
push [ edi + 0x4 ]
call sub_45b8e2
add esp 0x4
mov [ esp + 0x4 ] eax
push [ edi + 0x8 ]
call sub_45b8e2
add esp 0x4
mov ebp eax
mov ecx [ edi ]
push [ ecx + 0x10 ]
push eax
push eax
call sub_45cea6
add esp 0xc
mov ebp eax
mov eax [ edi ]
push [ eax + 0x10 ]
push ebp
push [ edi + 0x4 ]
call sub_45cea6
add esp 0xc
mov [ esp + 0x4 ] eax
mov eax [ edi ]
push [ eax + 0x10 ]
push [ esi + 0xc ]
push ebp
call sub_45cea6
add esp 0xc
mov ebx eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ edi ]
push [ eax + 0x10 ]
push ebx
push [ edi + 0x8 ]
call sub_45cea6
add esp 0xc
mov ebp eax
push ebx
call sub_45b91a
add esp 0x4
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
push [ esp + 0x4 ]
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x10 ]
mov [ esp + 0x14 ] ecx
push ecx
mov ebp [ esp + 0x10 ]
push ebp
call sub_45cea6
add esp 0xc
mov [ esp + 0xc ] eax
push ebp
call sub_45b91a
add esp 0x4
push [ esp + 0x10 ]
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov ebp [ esp + 0x8 ]
push ebp
push [ rw-data ]
call sub_45d2b8
add esp 0xc
mov [ esp ] eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esp + 0x4 ]
call sub_45cb53
add esp 0x8
mov ebp eax
push [ esp ]
call sub_45b91a
add esp 0x4
test ebp ebp
mov [ esp ] ebp
je r-xdata
push ebx
call sub_45b91a
add esp 0x4
push [ esp + 0x4 ]
call sub_45b91a
add esp 0x4
push ebp
mov ebx [ esp + 0x10 ]
push ebx
call sub_45d3b9
add esp 0x8
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
test edi edi
je r-xdata
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
mov [ esp + 0x1c ] ebp
mov ebp [ esp + 0xc ]
push ebp
call sub_45d2b8
add esp 0xc
mov [ esp ] ebx
mov ebx eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esp + 0x10 ]
mov ebp [ esp + 0x1c ]
push ebp
call sub_45d2b8
add esp 0xc
mov [ esp + 0x10 ] eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov [ esp + 0xc ] ebx
push ebx
push ebx
call sub_45cea6
add esp 0xc
mov ebp eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
mov ebx [ esp + 0x8 ]
push ebx
call sub_45cea6
add esp 0xc
mov [ esp + 0x4 ] eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esp + 0xc ]
push ebp
call sub_45cea6
add esp 0xc
mov [ esp ] eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov eax [ esp + 0x14 ]
push eax
push eax
call sub_45cea6
add esp 0xc
mov edx [ esi ]
mov ecx [ esp + 0x4 ]
mov ebp eax
call sub_4660fc
mov [ esp + 0x14 ] eax
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esp + 0x4 ]
push ebp
call sub_45d2b8
add esp 0xc
mov ebx eax
mov [ esp + 0x18 ] ebx
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov ebp [ esp + 0x18 ]
push ebp
push ebx
call sub_45d2b8
add esp 0xc
mov ebx eax
push [ esp + 0x18 ]
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov [ esp + 0x18 ] ebx
push ebx
mov ebx [ esp + 0xc ]
push ebx
call sub_45d2b8
add esp 0xc
mov ebp eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
mov ebx [ esp + 0x18 ]
push ebx
call sub_45cea6
add esp 0xc
mov [ esp + 0x4 ] eax
push ebp
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov ebx [ esp + 0x4 ]
push ebx
mov ebp [ esp + 0x14 ]
push ebp
call sub_45cea6
add esp 0xc
mov [ esp + 0x10 ] eax
push ebp
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov ebp [ esp + 0x14 ]
push ebp
mov ebx [ esp + 0xc ]
push ebx
call sub_45d2b8
add esp 0xc
mov [ esp ] eax
push ebx
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi + 0xc ]
mov ecx [ edi + 0xc ]
test eax eax
je r-xdata
mov ebx [ esp ]
push [ esp + 0x4 ]
push ebx
call sub_45d3b9
add esp 0x8
test eax eax
je r-xdata
call sub_45b91a
add esp 0x4
jmp r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
push [ eax + 0x10 ]
push [ edi + 0x8 ]
push [ esi + 0x8 ]
call sub_45cea6
add esp 0xc
mov ebx eax
mov eax [ esi ]
push [ eax + 0x10 ]
push [ edi + 0x4 ]
push [ esi + 0x4 ]
call sub_45cea6
add esp 0xc
mov edi eax
mov ecx ebx
mov edx edi
push [ esi ]
call sub_46609a
add esp 0x4
mov ebp eax
push ebx
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov ebx [ esp + 0x4 ]
push ebx
push ebp
call sub_45cea6
add esp 0xc
mov edi eax
push ebp
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov esi [ esi ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
mov [ ebx ] esi
mov eax [ esp + 0xc ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
jmp sub_465b1b
mov esi [ esi ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
xor eax eax
mov [ ebx ] esi
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov edx [ esi ]
test ecx ecx
mov edx [ edx + 0x10 ]
je r-xdata
mov [ ebx + 0x10 ] 0x0
jmp r-xdata
mov edi [ esp + 0x8 ]
mov eax [ esi ]
push [ eax + 0x10 ]
push ecx
mov ebx [ esp + 0x10 ]
push ebx
call sub_45cea6
add esp 0xc
mov edi eax
push ebx
jmp r-xdata
push edx
push eax
mov ebx [ esp + 0x10 ]
push ebx
call sub_45cea6
add esp 0xc
mov edi eax
push ebx
push edx
push ecx
push eax
call sub_45cea6
add esp 0xc
mov edi eax
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
mov ebp [ esp + 0x10 ]
push ebp
call sub_45cea6
add esp 0xc
mov ebx eax
push ebp
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
mov edi ebx
jmp r-xdata
call sub_45b91a
add esp 0x4
jmp r-xdata
mov esi [ esi ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
mov [ ebx ] esi
mov eax [ esp + 0x14 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edi
sub_465b1b
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov esi ecx
mov ebx edx
cmp [ esi + 0x10 ] 0x0
mov edi [ esi ]
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x14
push 0x1
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x1
push [ rw-data ]
push [ esi + 0x8 ]
call sub_45d3b9
add esp 0x8
mov ebp [ esi ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
xor esi esi
mov bl 0x1
xor edi edi
mov [ esp ] 0x0
jmp r-xdata
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
push eax
push eax
call sub_45cea6
add esp 0xc
mov edi eax
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
push [ esi + 0x4 ]
call sub_45cea6
add esp 0xc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
mov edx [ esi ]
mov ecx ebp
call sub_4660fc
mov edi eax
push ebp
call sub_45b91a
add esp 0x4
mov edx [ esi ]
mov ecx edi
call sub_4660fc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
mov eax [ esi + 0xc ]
test ebx ebx
mov [ esp ] ebp
je r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
test ebx ebx
cmove ebx [ rw-data ]
mov edx ebx
push edi
call sub_46609a
add esp 0x4
mov ebp eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
push ebp
call sub_45cea6
add esp 0xc
mov [ esp ] eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ esi + 0x4 ]
call sub_45d2b8
add esp 0xc
mov ebx eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push ebx
call sub_45cea6
add esp 0xc
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
mov ebx [ esp + 0x8 ]
push ebx
call sub_45cea6
add esp 0xc
mov [ esp + 0x4 ] eax
push 0x2
call sub_45d836
add esp 0x4
mov ebp eax
mov eax [ esi ]
mov edx ebp
mov ecx [ eax + 0x14 ]
push eax
call sub_46609a
add esp 0x4
mov [ esp + 0x8 ] eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov [ esp + 0x10 ] edi
push edi
push ebx
call sub_45d2b8
add esp 0xc
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov [ esp + 0x4 ] edi
push edi
mov ebx [ esp + 0x10 ]
push ebx
call sub_45cea6
add esp 0xc
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
mov eax 0x4
push eax
call sub_45d836
add esp 0x4
mov ebp eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
call sub_45cb53
add esp 0x8
mov ebx eax
push ebp
call sub_45b91a
add esp 0x4
test ebx ebx
je r-xdata
mov ecx esi
mov edx esi
push ebx
call sub_4654c4
add esp 0x14
jmp r-xdata
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov [ eax ] ebp
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov ecx [ esp ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] bl
jmp r-xdata
mov ecx [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push edi
call sub_45b91a
add esp 0x4
push [ esp ]
call sub_45b91a
add esp 0x4
push [ esp + 0x4 ]
call sub_45b91a
add esp 0x4
push [ esp + 0xc ]
call sub_45b91a
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push edi
call sub_45cea6
add esp 0xc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov ebx [ esp + 0xc ]
mov edx ebp
mov ecx ebx
push [ esi ]
call sub_46609a
add esp 0x4
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
mov ebp [ esp + 0x8 ]
push ebp
call sub_45cea6
add esp 0xc
mov ebx eax
push ebp
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
mov esi [ esi ]
push 0x14
push 0x1
call sub_43f807
add esp 0x8
mov [ eax ] esi
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
add esp 0x10
push [ ecx + 0x14 ]
call sub_45b8e2
add esp 0x4
mov ebp eax
push [ ecx + 0x10 ]
push eax
push eax
call sub_45cea6
add esp 0xc
mov edi eax
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
push edi
call sub_45cea6
add esp 0xc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
push [ eax + 0x14 ]
call sub_45cea6
add esp 0xc
push ebp
mov ebp eax
call sub_45b91a
add esp 0x4
jmp r-xdata
push [ rw-data ]
call sub_45b8e2
add esp 0x4
mov ecx [ esi ]
push [ ecx + 0x10 ]
push eax
push eax
call sub_45cea6
add esp 0xc
jmp r-xdata
push [ esi + 0x8 ]
call sub_45b8e2
add esp 0x4
mov ecx [ esi ]
push [ ecx + 0x10 ]
push eax
push [ esi + 0x8 ]
call sub_45cea6
add esp 0xc
jmp r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push [ eax + 0x10 ]
push ecx
push ecx
call sub_45cea6
add esp 0xc
mov edx [ esi ]
mov edi eax
mov ecx edi
call sub_466156
mov ebx eax
push edi
call sub_45b91a
add esp 0x4
mov ecx ebx
mov edx ebp
push [ esi ]
call sub_46609a
add esp 0x4
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov [ esp + 0x4 ] edi
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
push edi
call sub_45cea6
add esp 0xc
mov edx [ esi ]
mov ecx [ esp ]
mov edi eax
call sub_4660fc
mov ebx eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push edi
call sub_45d2b8
add esp 0xc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov [ esp + 0xc ] ebp
push ebp
mov ebx [ esp + 0x8 ]
push ebx
call sub_45d2b8
add esp 0xc
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
mov ebx [ esp + 0xc ]
push ebx
call sub_45cea6
add esp 0xc
mov [ esp ] eax
push edi
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
push [ eax + 0x10 ]
push ecx
push ecx
call sub_45cea6
add esp 0xc
mov edi eax
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
push edi
call sub_45cea6
add esp 0xc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
mov eax 0x8
push eax
call sub_45d836
add esp 0x4
mov edi eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
push edi
call sub_45cea6
add esp 0xc
mov ebx eax
push edi
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
mov ebp [ esp + 0x8 ]
push ebp
call sub_45d2b8
add esp 0xc
mov edi eax
push ebp
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi + 0xc ]
mov [ esp + 0x4 ] edi
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov ebx eax
mov edx ebx
push [ esi ]
call sub_46609a
add esp 0x4
mov edi eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ esi + 0x4 ]
call sub_45d2b8
add esp 0xc
mov ebp eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebp
push edi
call sub_45cea6
add esp 0xc
mov ebx eax
push edi
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov edx [ esi ]
mov ecx ebx
call sub_466156
mov edi eax
push ebx
jmp r-xdata
mov edx [ esi ]
mov ebp eax
mov ecx ebp
call sub_4660fc
mov [ esp ] eax
push ebp
call sub_45b91a
add esp 0x4
mov ebp [ esi ]
mov esi [ esp + 0x8 ]
mov edi [ esp + 0x4 ]
xor ebx ebx
sub_46609a
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x14 ]
mov esi edx
push [ ebp + 0x10 ]
push ecx
call sub_45be66
add esp 0x8
mov edi eax
push [ ebp + 0x10 ]
push esi
call sub_45be66
add esp 0x8
mov esi eax
push esi
push edi
call sub_45d53d
add esp 0x8
mov ebx eax
push edi
call sub_45b91a
add esp 0x4
push esi
call sub_45b91a
add esp 0x4
push [ ebp + 0x10 ]
push ebx
call sub_45be66
add esp 0x8
mov esi eax
push ebx
call sub_45b91a
add esp 0x4
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4660fc
push edi
push esi
mov edi edx
push 0x1
push ecx
call sub_45dc56
add esp 0x8
mov esi eax
push [ edi + 0x10 ]
push esi
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
mov eax esi
pop esi
pop edi
retn
push [ edi + 0x10 ]
push esi
call sub_45d490
add esp 0x8
mov edi eax
test edi edi
jne r-xdata
push esi
call sub_45b91a
add esp 0x4
mov esi edi
push 0x1ee
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_466156
push ebx
push edi
push esi
mov esi edx
mov edi ecx
push 0x1
push edi
call sub_45dc56
add esp 0x8
mov ebx eax
push edi
push ebx
call sub_45d53d
add esp 0x8
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
push [ esi + 0x10 ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
mov ebx edi
push [ esi + 0x10 ]
push edi
call sub_45d490
add esp 0x8
mov ebx eax
test ebx ebx
jne r-xdata
push edi
call sub_45b91a
add esp 0x4
push [ esi + 0x10 ]
push ebx
call sub_45d3b9
add esp 0x8
test eax eax
mov edi ebx
jns r-xdata
push 0x1e0
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
mov eax ebx
pop esi
pop edi
pop ebx
retn
sub_4661dd
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov esi edx
mov edi ecx
mov [ ebx ] 0x0
cmp [ esi ] 0x4
jl r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov ebp [ esp + 0x18 ]
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
mov [ ebp ] eax
js r-xdata
add [ esi ] 0xfffffffc
mov eax [ edi ]
add eax 0x4
mov [ edi ] eax
mov ecx [ esi ]
cmp ecx [ ebp ]
jl r-xdata
mov [ ebx ] eax
mov eax [ ebp ]
add [ edi ] eax
mov eax [ ebp ]
sub [ esi ] eax
sub_466230
push esi
sub esp 0xc
mov eax [ rw-data ]
lea esi [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax esp
push eax
push esi
call sub_4661dd
add esp 0x8
mov ecx [ esi ]
test ecx ecx
je r-xdata
xor esi esi
mov edx [ esp ]
push [ esp + 0x14 ]
call sub_465100
add esp 0x4
mov esi eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
retn
sub_466278
push esi
sub esp 0xc
mov eax [ rw-data ]
lea esi [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax esp
push eax
push esi
call sub_4661dd
add esp 0x8
mov eax [ esi ]
xor esi esi
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
retn
cmp [ eax ] 0x0
js r-xdata
push [ esp ]
push eax
call sub_45d5e4
add esp 0x8
mov esi eax
sub_4662c0
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x20 ]
push edx
push ecx
call sub_45d698
add esp 0x8
mov [ esi + 0x8 ] eax
push eax
call sub_45d970
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
cmp eax ecx
jbe r-xdata
dec ecx
push ecx
push [ esi + 0x8 ]
call sub_45da92
add esp 0x8
mov [ esp + 0x8 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
dec eax
push 0x0
push eax
push [ esi + 0x8 ]
call sub_45b9c6
add esp 0xc
push [ esi + 0x8 ]
call sub_45b8c8
add esp 0x4
mov ebx [ esi ]
mov eax [ esi + 0x8 ]
push [ ebx + 0x10 ]
push eax
push eax
call sub_45cea6
add esp 0xc
push [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
push eax
push [ ebx + 0x18 ]
call sub_45cea6
add esp 0xc
mov edx [ rw-data ]
mov edi eax
mov ecx edi
push ebx
call sub_46609a
add esp 0x4
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
mov [ esp + 0x4 ] ebx
push [ ebx + 0x10 ]
push ebp
call sub_45cb53
add esp 0x8
mov edi eax
push ebp
call sub_45b91a
add esp 0x4
test edi edi
je r-xdata
push [ esi + 0x8 ]
jmp r-xdata
push [ esp ]
call sub_45b91a
add esp 0x4
mov [ esi + 0x4 ] 0x0
jmp r-xdata
mov ebp [ esp + 0x4 ]
push [ ebp + 0x10 ]
push [ rw-data ]
mov ebx [ esp + 0x8 ]
push ebx
call sub_45d2b8
add esp 0xc
mov esi eax
push ebx
call sub_45b91a
add esp 0x4
push [ ebp + 0x10 ]
push edi
push esi
call sub_45cea6
add esp 0xc
mov ebx eax
mov [ esp ] ebx
push esi
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
mov edi 0x3
push edi
push [ ebp + 0x10 ]
call sub_45df4d
add esp 0x8
mov esi eax
push edi
push esi
call sub_45db74
add esp 0x8
mov edi eax
push esi
call sub_45b91a
add esp 0x4
push [ ebp + 0x10 ]
push edi
push ebx
call sub_45c5e9
add esp 0xc
mov ebx eax
push edi
call sub_45b91a
add esp 0x4
push [ ebp + 0x10 ]
push ebx
push ebx
call sub_45cea6
add esp 0xc
mov esi eax
push [ ebp + 0x10 ]
mov ebp [ esp + 0x4 ]
push ebp
push esi
call sub_45d2b8
add esp 0xc
mov edi eax
push esi
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
push [ rw-data ]
push edi
call sub_45d3b9
add esp 0x8
mov esi eax
push edi
call sub_45b91a
add esp 0x4
test esi esi
je r-xdata
call sub_45b91a
add esp 0x4
xor eax eax
mov [ esi + 0x8 ] 0x0
push [ esi + 0x8 ]
jmp r-xdata
mov edi [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x10 ]
push eax
push [ rw-data ]
push eax
call sub_45d2b8
add esp 0xc
mov edi 0x2
mov esi eax
push edi
push esi
call sub_45db74
add esp 0x8
mov ebp eax
mov [ esp ] ebp
push esi
call sub_45b91a
add esp 0x4
push edi
call sub_45d836
add esp 0x4
mov edi [ esp + 0x4 ]
mov esi eax
push [ edi + 0x10 ]
push ebp
push esi
call sub_45c5e9
add esp 0xc
mov ebp eax
push esi
call sub_45b91a
add esp 0x4
push [ esp ]
call sub_45b91a
add esp 0x4
push [ edi + 0x10 ]
push ebp
push ebx
call sub_45cea6
add esp 0xc
mov esi eax
push ebx
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
mov ebx esi
jmp r-xdata
mov esi [ esp + 0x20 ]
test ebx ebx
mov [ esi + 0x4 ] ebx
je r-xdata
mov eax [ edi + 0x10 ]
push eax
push ebx
push eax
call sub_45d2b8
add esp 0xc
mov esi eax
push ebx
call sub_45b91a
add esp 0x4
mov ebx esi
push 0x0
push ebx
call sub_45da92
add esp 0x8
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov ecx esi
call sub_4665b7
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x10 ]
push eax
push ebx
push eax
call sub_45d2b8
add esp 0xc
mov ecx [ esp + 0x20 ]
mov esi eax
push [ ecx + 0x4 ]
call sub_45b91a
add esp 0x4
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] esi
mov esi [ esp + 0x20 ]
push [ esi + 0x4 ]
call sub_45b91a
add esp 0x4
mov [ esi + 0x4 ] 0x0
push [ esi + 0x8 ]
xor eax eax
inc eax
jmp r-xdata
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4665b7
push ebp
push ebx
push edi
push esi
push eax
mov esi ecx
mov bl 0x1
cmp [ esi + 0x10 ] 0x0
jne r-xdata
movzx eax bl
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
push 0x3
call sub_45d836
add esp 0x4
mov ebx eax
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
push [ eax + 0x10 ]
push ecx
push ecx
call sub_45cea6
add esp 0xc
mov [ esp ] eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ esi + 0x4 ]
call sub_45c5e9
add esp 0xc
mov ebp eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_45cea6
add esp 0xc
mov ebx eax
push ebx
push ebp
call sub_45d53d
add esp 0x8
mov edi eax
push ebp
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
call sub_45be66
add esp 0x8
mov ebx eax
push edi
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x18 ]
push ebx
call sub_45d53d
add esp 0x8
mov edi eax
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
call sub_45be66
add esp 0x8
mov esi eax
push edi
call sub_45b91a
add esp 0x4
push esi
mov edi [ esp + 0x4 ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
sete bl
push edi
call sub_45b91a
add esp 0x4
push esi
cmp ecx 0x2
jne r-xdata
xor ebx ebx
mov ecx [ esi + 0x8 ]
push [ eax + 0x10 ]
push ecx
push ecx
call sub_45cea6
add esp 0xc
mov edi eax
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push [ eax + 0x10 ]
push ecx
push ecx
call sub_45cea6
add esp 0xc
mov ebx eax
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push [ eax + 0x18 ]
call sub_45cea6
add esp 0xc
mov ebp eax
mov eax [ esi ]
push [ eax + 0x10 ]
push edi
push ebp
call sub_45cea6
add esp 0xc
mov [ esp ] eax
push ebp
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
push ebx
push edi
call sub_45d2b8
add esp 0xc
mov ebp eax
push edi
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
mov eax [ esi ]
push [ eax + 0x10 ]
mov edi [ esp + 0x4 ]
push edi
push ebp
call sub_45d2b8
add esp 0xc
mov esi eax
push ebp
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
push [ rw-data ]
push esi
call sub_45d3b9
add esp 0x8
test eax eax
sete bl
push esi
jmp r-xdata
call sub_45b91a
add esp 0x4
jmp r-xdata
sub_466786
push ebp
push ebx
push edi
push esi
mov ebx edx
mov esi ecx
mov ebp [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
sar ebx 0x1f
mov [ esi ] 0x0
mov [ esi + 0xc ] edx
shr ebx 0x1d
add ebx edx
and edx 0x7
sar ebx 0x3
cmp edx 0x1
sbb ebx 0xffffffff
push ebx
push eax
call sub_45d5e4
add esp 0x8
mov [ esi + 0x10 ] eax
push ebx
push edi
call sub_45d5e4
add esp 0x8
mov [ esi + 0x14 ] eax
push ebx
push ebp
call sub_45d5e4
add esp 0x8
mov [ esi + 0x18 ] eax
push ebx
push [ esp + 0x24 ]
call sub_45d5e4
add esp 0x8
mov [ esi + 0x1c ] eax
push ebx
push [ esp + 0x28 ]
call sub_45d5e4
add esp 0x8
mov [ esi + 0x24 ] eax
push ebx
push [ esp + 0x2c ]
call sub_45d5e4
add esp 0x8
mov [ esi + 0x28 ] eax
mov [ esi + 0x20 ] esi
mov [ esi + 0x30 ] 0x0
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46681a
mov al [ rw-data ]
test al al
jne r-xdata
mov eax rw-data
retn
push esi
mov esi 0x20
mov [ rw-data ] 0x1
mov [ rw-data ] 0x100
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_45d5e4
add esp 0x8
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] eax
mov [ rw-data ] r--data
pop esi
sub_46692a
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ecx [ rw-data ]
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
mov [ esp + 0xc ] ecx
push 0x0
push eax
push r--data
call sub_43fa97
add esp 0xc
mov esi eax
mov ebp esp
mov [ ebp + 0x4 ] esi
push esi
call sub_4a7f30
add esp 0x4
mov [ ebp ] eax
lea eax [ esp + 0x8 ]
push ebx
push [ rw-data ]
push ebp
push eax
call [ edi + 0x3c ]
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0xc ]
xor ebx ebx
test edi edi
setne bl
shl ebx 0x2
call sub_497c4a
mov eax ebx
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4669a2
push ebx
sub esp 0x8
mov edx [ rw-data ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
mov edx esp
push ecx
push edx
call [ eax + 0x4c ]
mov ecx [ esp + 0x4 ]
xor ebx ebx
test eax eax
setne bl
shl ebx 0x2
call sub_497c4a
mov eax ebx
add esp 0x8
pop ebx
retn
sub_4669d9
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov edi [ rw-data ]
mov edx [ esp + 0x20 ]
xor ebx ebx
mov ebp [ esp + 0x30 ]
mov esi esp
mov [ esp + 0x4 ] edi
mov edi [ edx ]
xor edx edx
cmp [ esp + 0x28 ] edx
lea eax [ edi + 0x8 ]
lea ecx [ edi + 0x4 ]
setne bl
or ebx 0x22
push edx
push esi
push ebp
push edx
push [ esp + 0x3c ]
push edx
push edx
push ebx
push [ r--data ]
push [ esp + 0x48 ]
push eax
push edx
push ecx
mov eax [ esp + 0x50 ]
call [ eax + 0x40 ]
mov esi eax
xor eax eax
mov [ edi ] esi
cmp esi 0x1
mov ecx [ esp + 0x4 ]
setne al
test esi esi
lea eax [ eax + eax * 2 + 0x1 ]
cmovne esi eax
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_466a51
push ebx
sub esp 0x8
mov edx [ rw-data ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
mov edx esp
push ecx
push edx
call [ eax + 0x44 ]
mov ecx [ esp + 0x4 ]
xor ebx ebx
test eax eax
setne bl
shl ebx 0x2
call sub_497c4a
mov eax ebx
add esp 0x8
pop ebx
retn
sub_466a88
push esi
mov esi [ esp + 0xc ]
push 0xc
push 0x1
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ esi ] eax
xor eax eax
pop esi
retn
sub_466aa9
push ebx
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov eax [ esp + 0x1c ]
mov esi 0x4
mov [ esp + 0x4 ] ecx
mov ebx [ eax ]
test ebx ebx
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
push ebx
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x18 ]
lea ecx [ ebx + 0x8 ]
mov edx esp
push 0x0
push ecx
push edx
call [ eax + 0x30 ]
mov edi eax
push ebx
call sub_43f9d4
add esp 0x4
test edi edi
jne r-xdata
jmp r-xdata
xor esi esi
sub_466b0c
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x4
retn
mov ecx [ esp + 0x4 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x0
push [ eax + 0x8 ]
lea eax [ eax + 0x4 ]
push eax
call [ ecx + 0x38 ]
retn
sub_466b33
push ebx
sub esp 0x8
mov edx [ rw-data ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] edx
mov edx esp
push ecx
push edx
call [ eax + 0x44 ]
mov ecx [ esp + 0x4 ]
xor ebx ebx
test eax eax
setne bl
shl ebx 0x2
call sub_497c4a
mov eax ebx
add esp 0x8
pop ebx
retn
sub_466b6a
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff8
sub esp 0x20
mov eax [ rw-data ]
mov edx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea esi [ esp + 0x8 ]
mov ecx [ ebp + 0x8 ]
lea ebx [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esp + 0x4 ] eax
mov [ esi ] eax
mov [ esp ] eax
mov [ edx ] eax
mov [ edx + 0x4 ] eax
mov edx [ r--data ]
mov [ ebx ] eax
lea eax [ esp + 0x14 ]
push esi
push ebx
push edx
push 0x1
push [ edi ]
mov edi eax
push edi
call [ ecx + 0x34 ]
mov esi 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax esp
mov [ esp + 0x10 ] 0x0
push eax
push ebx
push [ r--data ]
push 0x2
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
mov ebx edi
push edi
mov edi [ ebp + 0x8 ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp ]
mov esi [ ebp + 0x10 ]
lea edx [ ecx + eax + 0x1 ]
lea eax [ ecx + eax + 0x2 ]
xor ecx ecx
inc ecx
mov [ esi ] edx
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x4 ] eax
push [ esp + 0x8 ]
push [ esp + 0x10 ]
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax + ecx ] 0x20
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x8 ]
lea eax [ eax + ecx + 0x1 ]
push [ esp ]
push [ esp + 0x8 ]
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ ecx + eax ] 0x0
lea eax [ esp + 0x8 ]
push eax
push ebx
call [ edi + 0x44 ]
mov eax esp
push eax
push ebx
call [ edi + 0x44 ]
xor esi esi
lea eax [ esp + 0x8 ]
push eax
push ebx
call [ edi + 0x44 ]
jmp r-xdata
sub_466c9e
push ebp
push ebx
push edi
push esi
sub esp 0x94
mov eax [ rw-data ]
mov edi [ esp + 0xa8 ]
mov esi [ esp + 0xb0 ]
mov ebx [ esp + 0xac ]
mov [ esp + 0x90 ] eax
mov eax [ edi + 0x58 ]
add eax esi
mov [ edi + 0x58 ] eax
adc [ edi + 0x54 ] 0x0
mov eax [ edi + 0x50 ]
lea ecx [ eax + esi ]
cmp ecx 0x40
jae r-xdata
mov edx 0x40
lea ecx [ edi + eax + 0x10 ]
sub edx eax
push edx
push ebx
push ecx
call sub_49a1f0
movdqa xmm6 [ r--data ]
movdqa xmm5 [ r--data ]
movdqa xmm4 [ r--data ]
add esp 0xc
mov ecx [ edi + 0x50 ]
mov eax 0x40
sub eax ecx
neg ecx
lea ebx [ ebx + ecx + 0x40 ]
xor ecx ecx
mov [ esp + 0x48 ] ebx
lea eax [ edi + eax + 0x10 ]
push esi
push ebx
push eax
call sub_49a1f0
add esp 0xc
add esi [ edi + 0x50 ]
jmp r-xdata
movdqu xmm0 [ edi + ecx * 4 + 0x10 ]
movdqa xmm1 xmm0
movdqa xmm3 xmm0
movdqa xmm2 xmm0
pand xmm0 xmm6
psrld xmm1 0x18
pand xmm3 xmm5
pand xmm2 xmm4
pslld xmm1 0x18
por xmm3 xmm1
por xmm0 xmm3
por xmm0 xmm2
movdqu [ esp + ecx * 4 + 0x50 ] xmm0
add ecx 0x4
cmp ecx 0x10
jne r-xdata
sub esi eax
mov [ esp + 0x4c ] esi
mov ebx [ edi ]
mov [ esp + 0x44 ] ebx
mov edx [ edi + 0x4 ]
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0xc ]
mov edi edx
mov esi ecx
not edi
and esi edx
and edi eax
or edi esi
mov esi [ esp + 0x50 ]
mov [ esp + 0x3c ] esi
lea esi [ ebx + esi ]
lea esi [ edi + esi - 0x28955b88 ]
rol esi 0x7
add esi edx
mov ebx esi
mov edi esi
not ebx
and edi edx
and ebx ecx
or ebx edi
mov edi [ esp + 0x54 ]
add eax edi
mov [ esp + 0x38 ] edi
lea eax [ ebx + eax - 0x173848aa ]
rol eax 0xc
add eax esi
mov ebx eax
mov edi eax
not ebx
and edi esi
and ebx edx
or ebx edi
mov edi [ esp + 0x58 ]
add ecx edi
mov [ esp + 0x4 ] edi
lea ecx [ ebx + ecx + 0x242070db ]
rol ecx 0x11
add ecx eax
mov ebx ecx
mov edi ecx
not ebx
and edi eax
and ebx esi
or ebx edi
mov edi [ esp + 0x5c ]
add edx edi
mov [ esp + 0x18 ] edi
lea edx [ ebx + edx - 0x3e423112 ]
rol edx 0x16
add edx ecx
mov ebx edx
mov edi edx
not ebx
and edi ecx
and ebx eax
or ebx edi
mov edi [ esp + 0x60 ]
add esi edi
mov [ esp + 0x10 ] edi
lea esi [ ebx + esi - 0xa83f051 ]
rol esi 0x7
add esi edx
mov ebx esi
mov edi esi
not ebx
and edi edx
and ebx ecx
or ebx edi
mov edi [ esp + 0x64 ]
add eax edi
mov [ esp + 0x28 ] edi
lea eax [ ebx + eax + 0x4787c62a ]
rol eax 0xc
add eax esi
mov ebx eax
mov edi eax
not ebx
and edi esi
and ebx edx
or ebx edi
mov edi [ esp + 0x68 ]
add ecx edi
mov [ esp + 0x30 ] edi
lea ecx [ ebx + ecx - 0x57cfb9ed ]
rol ecx 0x11
add ecx eax
mov ebx ecx
mov edi ecx
not ebx
and edi eax
and ebx esi
or ebx edi
mov edi [ esp + 0x6c ]
add edx edi
mov [ esp + 0x1c ] edi
lea edx [ ebx + edx - 0x2b96aff ]
rol edx 0x16
add edx ecx
mov ebx edx
mov edi edx
not ebx
and edi ecx
and ebx eax
or ebx edi
mov edi [ esp + 0x70 ]
add esi edi
mov [ esp + 0x8 ] edi
lea esi [ ebx + esi + 0x698098d8 ]
rol esi 0x7
add esi edx
mov ebx esi
mov edi esi
not ebx
and edi edx
and ebx ecx
or ebx edi
mov edi [ esp + 0x74 ]
add eax edi
mov [ esp + 0x34 ] edi
lea edi [ ebx + eax - 0x74bb0851 ]
rol edi 0xc
add edi esi
mov ebx edi
mov eax edi
not ebx
and eax esi
and ebx edx
or ebx eax
mov eax [ esp + 0x78 ]
add ecx eax
mov [ esp + 0x20 ] eax
lea ecx [ ebx + ecx - 0xa44f ]
rol ecx 0x11
add ecx edi
mov ebx ecx
mov eax ecx
not ebx
and eax edi
and ebx esi
or ebx eax
mov eax [ esp + 0x7c ]
add edx eax
mov [ esp + 0x2c ] eax
lea eax [ ebx + edx - 0x76a32842 ]
rol eax 0x16
add eax ecx
mov ebx eax
mov edx eax
mov ebp eax
not ebx
and edx ecx
and ebx edi
or ebx edx
mov edx [ esp + 0x80 ]
add esi edx
mov [ esp + 0x14 ] edx
lea ebx [ ebx + esi + 0x6b901122 ]
rol ebx 0x7
add ebx eax
mov esi ebx
mov edx ebx
not esi
and edx eax
and esi ecx
or esi edx
mov edx [ esp + 0x84 ]
add edi edx
mov [ esp + 0x24 ] edx
lea esi [ esi + edi - 0x2678e6d ]
rol esi 0xc
add esi ebx
mov edx esi
mov edi esi
not edx
and edi ebx
and ebp edx
or ebp edi
mov edi [ esp + 0x88 ]
add ecx edi
mov [ esp + 0xc ] edi
mov edi [ esp + 0x38 ]
lea ebp [ ebp + ecx - 0x5986bc72 ]
rol ebp 0x11
add ebp esi
mov ecx ebp
lea edi [ edi + ebx ]
and edx ebp
and ecx esi
mov [ esp + 0x40 ] edi
mov edi [ esp + 0x8c ]
mov [ esp ] ecx
mov ecx ebp
not ecx
and ebx ecx
or ebx [ esp ]
add eax edi
mov [ esp ] edi
lea eax [ ebx + eax + 0x49b40821 ]
rol eax 0x16
add eax ebp
mov edi eax
and ecx eax
and edi esi
add esi [ esp + 0x30 ]
or edx edi
mov edi [ esp + 0x40 ]
lea ebx [ edx + edi - 0x9e1da9e ]
rol ebx 0x5
add ebx eax
mov edx ebx
and edx ebp
add ebp [ esp + 0x2c ]
or ecx edx
lea ecx [ ecx + esi - 0x3fbf4cc0 ]
mov esi [ esp + 0x3c ]
rol ecx 0x9
add ecx ebx
mov edx ecx
and edx eax
lea edi [ esi + eax ]
not eax
and eax ebx
or eax edx
mov edx [ esp + 0x28 ]
lea esi [ eax + ebp + 0x265e5a51 ]
rol esi 0xe
add esi ecx
mov eax esi
lea edx [ edx + ebx ]
and eax ebx
not ebx
and ebx ecx
or ebx eax
lea ebx [ ebx + edi - 0x16493856 ]
mov edi [ esp + 0x20 ]
rol ebx 0x14
add ebx esi
mov eax ebx
and eax ecx
lea edi [ edi + ecx ]
not ecx
and ecx esi
or ecx eax
lea eax [ ecx + edx - 0x29d0efa3 ]
mov edx [ esp ]
rol eax 0x5
add eax ebx
mov ecx eax
and ecx esi
lea edx [ edx + esi ]
not esi
and esi ebx
or esi ecx
lea esi [ esi + edi + 0x2441453 ]
mov edi [ esp + 0x10 ]
rol esi 0x9
add esi eax
mov ecx esi
and ecx ebx
lea edi [ edi + ebx ]
not ebx
and ebx eax
or ebx ecx
lea ebx [ ebx + edx - 0x275e197f ]
mov edx [ esp + 0x34 ]
rol ebx 0xe
add ebx esi
mov ecx ebx
and ecx eax
lea edx [ edx + eax ]
not eax
and eax esi
or eax ecx
lea eax [ eax + edi - 0x182c0438 ]
mov edi [ esp + 0xc ]
rol eax 0x14
add eax ebx
mov ecx eax
and ecx esi
lea edi [ edi + esi ]
not esi
and esi ebx
or esi ecx
lea esi [ esi + edx + 0x21e1cde6 ]
mov edx [ esp + 0x18 ]
rol esi 0x5
add esi eax
mov ecx esi
and ecx ebx
lea edx [ edx + ebx ]
not ebx
and ebx eax
or ebx ecx
lea ebx [ ebx + edi - 0x3cc8f82a ]
mov edi [ esp + 0x8 ]
rol ebx 0x9
add ebx esi
mov ecx ebx
and ecx eax
lea edi [ edi + eax ]
not eax
and eax esi
or eax ecx
lea eax [ eax + edx - 0xb2af279 ]
mov edx [ esp + 0x24 ]
rol eax 0xe
add eax ebx
mov ecx eax
and ecx esi
lea ebp [ edx + esi ]
not esi
and esi ebx
or esi ecx
mov ecx [ esp + 0x4 ]
lea esi [ esi + edi + 0x455a14ed ]
rol esi 0x14
add esi eax
mov edx esi
lea edi [ ecx + ebx ]
and edx ebx
not ebx
and ebx eax
or ebx edx
mov edx [ esp + 0x1c ]
lea ebx [ ebx + ebp - 0x561c16fb ]
mov ebp [ esp + 0x3c ]
rol ebx 0x5
add ebx esi
mov ecx ebx
lea edx [ edx + eax ]
and ecx eax
not eax
and eax esi
or eax ecx
lea eax [ eax + edi - 0x3105c08 ]
mov edi [ esp + 0x14 ]
rol eax 0x9
add eax ebx
mov ecx eax
and ecx esi
lea edi [ edi + esi ]
not esi
and esi ebx
or esi ecx
lea ecx [ esi + edx + 0x676f02d9 ]
mov esi [ esp + 0x28 ]
rol ecx 0xe
add ecx eax
mov edx ecx
and edx ebx
lea esi [ esi + ebx ]
not ebx
and ebx eax
or ebx edx
lea edx [ ebx + edi - 0x72d5b376 ]
mov edi [ esp + 0x8 ]
rol edx 0x14
add edx ecx
lea edi [ edi + eax ]
xor eax edx
xor eax ecx
lea eax [ eax + esi - 0x5c6be ]
mov esi [ esp + 0x2c ]
rol eax 0x4
add eax edx
lea esi [ esi + ecx ]
xor ecx eax
xor ecx edx
lea ecx [ ecx + edi - 0x788e097f ]
mov edi [ esp + 0xc ]
rol ecx 0xb
add ecx eax
lea edi [ edi + edx ]
xor edx ecx
xor edx eax
lea edx [ edx + esi + 0x6d9d6122 ]
mov esi [ esp + 0x38 ]
rol edx 0x10
add edx ecx
lea esi [ esi + eax ]
xor eax edx
xor eax ecx
lea eax [ eax + edi - 0x21ac7f4 ]
mov edi [ esp + 0x10 ]
rol eax 0x17
add eax edx
lea edi [ edi + ecx ]
xor ecx eax
xor ecx edx
lea ecx [ ecx + esi - 0x5b4115bc ]
mov esi [ esp + 0x1c ]
rol ecx 0x4
add ecx eax
lea esi [ esi + edx ]
xor edx ecx
xor edx eax
lea edx [ edx + edi + 0x4bdecfa9 ]
mov edi [ esp + 0x20 ]
rol edx 0xb
add edx ecx
lea edi [ edi + eax ]
xor eax edx
xor eax ecx
lea eax [ eax + esi - 0x944b4a0 ]
mov esi [ esp + 0x24 ]
rol eax 0x10
add eax edx
lea esi [ esi + ecx ]
xor ecx eax
xor ecx edx
lea ecx [ ecx + edi - 0x41404390 ]
lea edi [ ebp + edx ]
rol ecx 0x17
add ecx eax
xor edx ecx
xor edx eax
lea edx [ edx + esi + 0x289b7ec6 ]
mov esi [ esp + 0x18 ]
rol edx 0x4
add edx ecx
lea ebx [ esi + eax ]
xor eax edx
mov esi [ esp + 0x34 ]
xor eax ecx
lea eax [ eax + edi - 0x155ed806 ]
mov edi [ esp + 0x30 ]
rol eax 0xb
add eax edx
lea esi [ esi + edx ]
lea edi [ edi + ecx ]
xor ecx eax
xor ecx edx
lea ecx [ ecx + ebx - 0x2b10cf7b ]
mov ebx [ esp + 0x1c ]
rol ecx 0x10
add ecx eax
xor edx ecx
xor edx eax
lea edx [ edx + edi + 0x4881d05 ]
mov edi [ esp + 0x14 ]
rol edx 0x17
add edx ecx
lea edi [ edi + eax ]
xor eax edx
xor eax ecx
lea eax [ eax + esi - 0x262b2fc7 ]
mov esi [ esp ]
rol eax 0x4
add eax edx
add ebp eax
lea esi [ esi + ecx ]
xor ecx eax
xor ecx edx
lea ecx [ ecx + edi - 0x1924661b ]
mov edi [ esp + 0x4 ]
rol ecx 0xb
add ecx eax
add ebx ecx
lea edi [ edi + edx ]
xor edx ecx
xor edx eax
lea edx [ edx + esi + 0x1fa27cf8 ]
rol edx 0x10
add edx ecx
xor eax edx
xor eax ecx
not ecx
lea eax [ eax + edi - 0x3b53a99b ]
mov edi [ esp + 0xa8 ]
rol eax 0x17
add eax edx
or ecx eax
xor ecx edx
lea ecx [ ecx + ebp - 0xbd6ddbc ]
mov ebp [ esp + 0xc ]
rol ecx 0x6
add ecx eax
add ebp edx
not edx
or edx ecx
xor edx eax
lea esi [ edx + ebx + 0x432aff97 ]
mov edx [ esp + 0x28 ]
mov ebx [ esp + 0x14 ]
rol esi 0xa
add esi ecx
add edx eax
not eax
add ebx ecx
or eax esi
xor eax ecx
not ecx
lea eax [ eax + ebp - 0x546bdc59 ]
rol eax 0xf
add eax esi
or ecx eax
xor ecx esi
lea ecx [ ecx + edx - 0x36c5fc7 ]
mov edx [ esp + 0x18 ]
rol ecx 0x15
add ecx eax
add edx esi
not esi
or esi ecx
mov ebp edx
xor esi eax
lea edx [ esi + ebx + 0x655b59c3 ]
mov ebx [ esp + 0x20 ]
mov esi [ esp + 0x38 ]
rol edx 0x6
add edx ecx
add ebx eax
not eax
add esi ecx
or eax edx
xor eax ecx
not ecx
lea eax [ eax + ebp - 0x70f3336e ]
mov ebp [ esp ]
rol eax 0xa
add eax edx
or ecx eax
xor ecx edx
add ebp eax
lea ecx [ ecx + ebx - 0x100b83 ]
mov ebx [ esp + 0x8 ]
rol ecx 0xf
add ecx eax
add ebx edx
not edx
or edx ecx
xor edx eax
not eax
lea edx [ edx + esi - 0x7a7ba22f ]
mov esi [ esp + 0x30 ]
rol edx 0x15
add edx ecx
or eax edx
xor eax ecx
add esi ecx
not ecx
lea eax [ eax + ebx + 0x6fa87e4f ]
mov ebx [ esp + 0x24 ]
rol eax 0x6
add eax edx
or ecx eax
xor ecx edx
add ebx edx
not edx
lea ecx [ ecx + ebp - 0x1d31920 ]
mov ebp [ esp + 0x10 ]
rol ecx 0xa
add ecx eax
or edx ecx
xor edx eax
add ebp eax
not eax
lea edx [ edx + esi - 0x5cfebcec ]
rol edx 0xf
add edx ecx
or eax edx
add [ esp + 0x4 ] edx
xor eax ecx
lea esi [ eax + ebx + 0x4e0811a1 ]
mov ebx [ esp + 0x2c ]
rol esi 0x15
add esi edx
add ebx ecx
not ecx
or ecx esi
xor ecx edx
not edx
lea eax [ ecx + ebp - 0x8ac817e ]
mov ebp [ esp + 0x34 ]
rol eax 0x6
add eax esi
or edx eax
xor edx esi
add ebp esi
not esi
lea ecx [ edx + ebx - 0x42c50dcb ]
mov edx [ esp + 0x4 ]
rol ecx 0xa
add ecx eax
or esi ecx
xor esi eax
lea edx [ esi + edx + 0x2ad7d2bb ]
mov esi eax
add eax [ esp + 0x44 ]
rol edx 0xf
not esi
add edx ecx
or esi edx
mov [ edi ] eax
xor esi ecx
mov eax [ edi + 0x4 ]
lea esi [ esi + ebp - 0x14792c6f ]
rol esi 0x15
add eax edx
add eax esi
mov esi [ esp + 0x4c ]
mov [ edi + 0x4 ] eax
add [ edi + 0x8 ] edx
add [ edi + 0xc ] ecx
mov [ edi + 0x50 ] 0x0
xor eax eax
mov ebx [ esp + 0x48 ]
cmp esi 0x3f
ja r-xdata
mov [ edi + 0x50 ] esi
mov ecx [ esp + 0x90 ]
call sub_497c4a
add esp 0x94
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ edi + 0x10 ]
push esi
push ebx
push eax
call sub_49a1f0
add esp 0xc
sub_4674df
push ebp
push ebx
push edi
push esi
sub esp 0x48
mov eax [ rw-data ]
mov esi [ esp + 0x60 ]
mov ecx 0x78
mov ebp 0x38
mov edi [ esp + 0x5c ]
mov [ esp + 0x44 ] eax
mov eax [ esi + 0x50 ]
mov ebx [ esi + 0x54 ]
cmp eax 0x37
cmovg ebp ecx
sub ebp eax
mov eax [ esi + 0x58 ]
mov [ esp ] eax
lea eax [ esp + 0x4 ]
push ebp
push 0x0
push eax
call sub_49acf0
add esp 0xc
lea eax [ esp + 0x4 ]
mov [ eax ] 0x80
push ebp
push eax
mov ebp eax
push esi
call sub_466c9e
add esp 0xc
mov eax ebx
mov ecx ebp
mov edx [ esp ]
shr eax 0x15
mov [ ecx + 0x7 ] al
mov eax ebx
shr eax 0xd
mov [ ecx + 0x6 ] al
mov eax ebx
shld ebx edx 0x3
shr eax 0x5
mov [ ecx + 0x5 ] al
mov eax edx
mov [ ecx + 0x4 ] bl
shr eax 0x15
mov [ ecx + 0x3 ] al
mov eax edx
shr eax 0xd
mov [ ecx + 0x2 ] al
mov eax edx
shl dl 0x3
shr eax 0x5
mov [ ecx + 0x1 ] al
mov [ ecx ] dl
push 0x8
push ecx
push esi
call sub_466c9e
add esp 0xc
xor eax eax
mov cl [ esi + eax * 4 + 0x3 ]
mov [ edi + eax * 4 + 0x3 ] cl
mov cl [ esi + eax * 4 + 0x2 ]
mov [ edi + eax * 4 + 0x2 ] cl
mov cl [ esi + eax * 4 + 0x1 ]
mov [ edi + eax * 4 + 0x1 ] cl
mov cl [ esi + eax * 4 ]
mov [ edi + eax * 4 ] cl
inc eax
cmp eax 0x4
jne r-xdata
mov ecx [ esp + 0x44 ]
call sub_497c4a
add esp 0x48
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4675bd
push edi
push esi
sub esp 0x60
mov edx [ rw-data ]
mov ecx [ esp + 0x70 ]
movaps xmm0 [ r--data ]
mov esi [ esp + 0x74 ]
mov eax [ esp + 0x6c ]
mov edi esp
mov [ esp + 0x5c ] edx
xor edx edx
movups [ edi ] xmm0
mov [ edi + 0x50 ] edx
mov [ edi + 0x58 ] edx
mov [ edi + 0x54 ] edx
push ecx
push eax
push edi
call sub_466c9e
add esp 0xc
push edi
push esi
call sub_4674df
add esp 0x8
push 0x5c
push edi
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x5c ]
call sub_497c4a
add esp 0x60
pop esi
pop edi
retn
sub_467641
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x50
mov edi [ ebp + 0x10 ]
mov eax [ rw-data ]
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
movaps xmm0 [ r--data ]
test edi edi
mov [ esp + 0x48 ] eax
movaps [ esp + 0x30 ] xmm0
movaps [ esp + 0x20 ] xmm0
movaps [ esp + 0x10 ] xmm0
movaps [ esp ] xmm0
jle r-xdata
movaps xmm0 [ r--data ]
mov esi esp
xor eax eax
movups [ edx ] xmm0
mov [ edx + 0x50 ] eax
mov [ edx + 0x58 ] eax
mov [ edx + 0x54 ] eax
push 0x40
push esi
push edx
call sub_466c9e
add esp 0xc
movaps xmm0 [ r--data ]
test edi edi
movaps [ esi + 0x30 ] xmm0
movaps [ esi + 0x20 ] xmm0
movaps [ esi + 0x10 ] xmm0
movaps [ esi ] xmm0
jle r-xdata
mov al [ ebx ]
xor al 0x36
cmp edi 0x1
mov [ esp ] al
je r-xdata
mov eax [ ebp + 0x8 ]
movaps xmm0 [ r--data ]
mov edi 0x40
xor ecx ecx
movups [ eax + 0x5c ] xmm0
mov [ eax + 0xac ] ecx
mov [ eax + 0xb4 ] ecx
mov [ eax + 0xb0 ] ecx
lea eax [ eax + 0x5c ]
push edi
push esi
push eax
call sub_466c9e
add esp 0xc
push edi
push esi
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x48 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov al [ ebx ]
xor al 0x5c
cmp edi 0x1
mov [ esp ] al
je r-xdata
xor eax eax
inc eax
xor eax eax
inc eax
cmp eax 0x3f
mov eax ecx
jl r-xdata
cmp eax 0x3f
mov eax ecx
jl r-xdata
mov cl [ ebx + eax ]
xor [ esp + eax ] cl
lea ecx [ eax + 0x1 ]
cmp ecx edi
jge r-xdata
mov cl [ ebx + eax ]
xor [ esp + eax ] cl
lea ecx [ eax + 0x1 ]
cmp ecx edi
jge r-xdata
sub_467750
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov ebp [ esp + 0x1c ]
mov ecx 0x17
mov edx [ esp + 0x18 ]
lea eax [ ebx + 0xb8 ]
mov esi ebx
mov edi eax
[ edi ] [ esi ]
push ebp
push edx
push eax
call sub_466c9e
add esp 0xc
push [ esp + 0x20 ]
push ebx
call sub_467843
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4677c1
push ebx
push edi
push esi
sub esp 0x14
mov edx [ rw-data ]
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov edi [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
mov ebx esp
mov [ esp + 0x10 ] edx
mov edx esi
push ebx
push eax
push edi
call sub_4678fa
add esp 0xc
add esi edi
push 0x10
push esi
push ebx
call sub_440320
add esp 0xc
mov ecx [ esp + 0x10 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
pop ebx
retn
sub_467843
push ebp
push ebx
push edi
push esi
sub esp 0x70
mov eax [ rw-data ]
mov ebx [ esp + 0x84 ]
lea ebp [ esp + 0x10 ]
mov ecx 0x17
mov edi ebp
mov [ esp + 0x6c ] eax
lea esi [ ebx + 0xb8 ]
mov eax esp
[ edi ] [ esi ]
push ebp
push eax
call sub_4674df
add esp 0x8
add ebx 0x5c
mov ecx 0x17
mov edi ebp
mov esi ebx
[ edi ] [ esi ]
push 0x10
lea eax [ esp + 0x4 ]
push eax
push ebp
call sub_466c9e
add esp 0xc
push ebp
push [ esp + 0x8c ]
call sub_4674df
add esp 0x8
mov ecx [ esp + 0x6c ]
call sub_497c4a
add esp 0x70
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4678b8
push edi
push esi
sub esp 0x14
mov ecx [ rw-data ]
mov esi [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov edi esp
mov [ esp + 0x10 ] ecx
push edi
push eax
call sub_467843
add esp 0x8
push 0x10
push esi
push edi
call sub_440320
add esp 0xc
mov ecx [ esp + 0x10 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
retn
sub_4678fa
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov [ esp ] edx
mov ebx ecx
mov eax [ esp + 0x30 ]
lea edx [ esp + 0x4 ]
mov ecx [ rw-data ]
lea ebp [ ebx + 0xb8 ]
mov esi ebx
mov edi ebp
mov [ esp + 0x14 ] ecx
mov ecx eax
shr ecx 0x18
mov [ edx ] cl
mov ecx eax
shr ecx 0x10
mov [ edx + 0x1 ] cl
mov [ edx + 0x2 ] ah
mov [ edx + 0x3 ] al
mov ecx 0x17
[ edi ] [ esi ]
push 0x4
push edx
push ebp
call sub_466c9e
mov eax [ esp + 0xc ]
add esp 0xc
test eax eax
je r-xdata
push [ esp + 0x34 ]
push ebx
call sub_467843
add esp 0x8
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esp + 0x2c ]
push eax
push ebp
call sub_466c9e
add esp 0xc
sub_467980
push ebx
push edi
push esi
sub esp 0x48
mov ecx [ rw-data ]
mov edi [ esp + 0x64 ]
mov eax [ esp + 0x58 ]
mov [ esp + 0x44 ] ecx
mov [ esp ] 0x0
push r--data
push [ eax ]
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov [ esp ] r--data
lea ebx [ esp + 0x4 ]
push esi
push 0x40
push ebx
call sub_4a6ae4
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x44 ]
call sub_497c4a
mov eax esi
add esp 0x48
pop esi
pop edi
pop ebx
retn
cmp esi 0x1
je r-xdata
mov [ esp ] r--data
push esi
call sub_4a666f
add esp 0x4
jmp r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp ]
mov [ edi ] eax
xor esi esi
mov edx [ esp + 0x5c ]
mov eax esp
xor ebx ebx
mov ecx esi
push eax
push [ esp + 0x64 ]
push ebx
push ebx
call sub_467a32
add esp 0x10
mov esi eax
jmp r-xdata
test edi edi
je r-xdata
sub_467a32
push ebp
push ebx
push edi
push esi
mov eax 0x4084
call sub_497c60
mov [ esp + 0x8 ] edx
mov esi [ esp + 0x40a4 ]
mov ebx ecx
lea ebp [ esp + 0x80 ]
mov eax [ rw-data ]
mov [ esp + 0x4080 ] eax
mov [ esi ] 0x0
push ebx
push 0x4000
push 0x1
push ebp
call sub_4a6ec0
add esp 0x10
mov edi eax
push ebx
call sub_4a666f
add esp 0x4
test edi edi
js r-xdata
mov [ esi ] r--data
cmp edi 0x4000
je r-xdata
cmp edi 0x2
mov [ esi ] r--data
jl r-xdata
xor ebx ebx
mov al [ esp + 0x80 ]
test al al
jne r-xdata
mov bl [ esp + 0x81 ]
cmp bl 0x3
je r-xdata
cmp edi 0x6
jl r-xdata
test bl bl
jne r-xdata
cmp [ esp + 0x82 ] 0x0
jne r-xdata
cmp [ esp + 0x83 ] 0x0
jne r-xdata
cmp [ esp + 0x84 ] 0x0
jne r-xdata
cmp [ esp + 0x85 ] 0x0
jne r-xdata
lea eax [ edi - 0x6 ]
lea ecx [ esp + 0x86 ]
push 0x1
push 0x0
push [ esp + 0x10 ]
push eax
push ecx
call sub_469cdc
add esp 0x14
test eax eax
js r-xdata
mov ecx [ esp + eax + 0x86 ]
bswap ecx
push ecx
mov [ esp + 0x8 ] eax
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
mov edx [ esp + 0x4 ]
mov ecx edi
add edx 0xa
sub ecx edx
cmp ecx eax
mov ecx edx
jl r-xdata
mov [ esp + 0x3 ] bl
xor ebx ebx
mov [ esp + 0x4 ] ecx
lea ecx [ eax + 0x1 ]
mov [ esp + 0xc ] eax
inc ebx
push ebx
push ecx
call sub_43f807
add esp 0x8
mov ecx eax
test ecx ecx
mov [ esp + 0x10 ] ecx
je r-xdata
mov eax [ esp + 0x409c ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
lea eax [ esp + eax + 0x80 ]
push [ esp + 0xc ]
push eax
push ecx
call sub_49a1f0
mov ecx [ esp + 0x1c ]
add esp 0xc
mov eax [ esp + 0xc ]
mov [ ecx + eax ] 0x0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4098 ]
test eax eax
je r-xdata
push ecx
call sub_43f79e
mov ecx [ esp + 0x14 ]
add esp 0x4
mov edx [ esp + 0x409c ]
mov [ edx ] eax
push ecx
call sub_43f9d4
mov edx [ esp + 0x409c ]
add esp 0x4
mov [ eax + 0x20 ] ecx
jmp r-xdata
push 0x4000
push ebp
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x4080 ]
call sub_497c4a
mov eax ebx
add esp 0x4084
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
test edx edx
jne r-xdata
xor ebx ebx
cmp [ esp + 0x3 ] 0x0
mov [ esi ] 0x0
setne bl
jmp r-xdata
mov eax [ esp + 0xc ]
add eax [ esp + 0x4 ]
cmp [ esp + 0x3 ] 0x0
mov [ esp + 0xc ] eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax edi
sub eax ecx
cmp eax 0x4
jl r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_466c84
add esp 0x4
push [ esp + 0x40a0 ]
call sub_4a7f30
add esp 0x4
push eax
push [ esp + 0x40a4 ]
lea eax [ esp + 0x1c ]
push eax
call sub_466c9e
add esp 0xc
lea ecx [ esp + 0x14 ]
lea eax [ esp + 0x70 ]
push ecx
push eax
call sub_4674df
add esp 0x8
mov ecx [ esp + 0xc ]
lea eax [ edi + 0x7 ]
sub eax ecx
lea ecx [ esp + ecx + 0x80 ]
and eax 0xfffffff8
push eax
push ecx
lea eax [ esp + 0x78 ]
push eax
call sub_45f734
add esp 0xc
push 0x10
lea eax [ esp + 0x74 ]
push eax
call sub_48f5d3
add esp 0x8
mov al [ esp + ecx + 0x80 ]
cmp al [ esp + ecx + 0x82 ]
jne r-xdata
xor ebx ebx
mov [ esi ] r--data
dec ebx
jmp r-xdata
mov al [ esp + ecx + 0x81 ]
cmp al [ esp + ecx + 0x83 ]
jne r-xdata
lea edx [ ecx + 0x4 ]
mov eax edi
lea ecx [ esp + ecx + 0x84 ]
mov [ esp + 0x4 ] edx
sub eax edx
push [ esp + 0x8 ]
push eax
push ecx
call sub_469dda
add esp 0xc
mov ecx eax
test eax eax
js r-xdata
mov edx ecx
mov eax [ esp + 0x8 ]
mov ecx edi
add edx [ esp + 0x4 ]
lea eax [ eax + 0x1c ]
sub ecx edx
mov [ esp + 0x4 ] edx
lea edx [ esp + edx + 0x80 ]
push eax
push ecx
push edx
call sub_45d990
add esp 0xc
mov ecx eax
test eax eax
js r-xdata
mov edx ecx
mov eax [ esp + 0x8 ]
mov ecx edi
add edx [ esp + 0x4 ]
lea eax [ eax + 0x18 ]
sub ecx edx
mov [ esp + 0x4 ] edx
lea edx [ esp + edx + 0x80 ]
push eax
push ecx
push edx
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
mov ecx [ esp + 0x8 ]
add eax [ esp + 0x4 ]
lea ecx [ ecx + 0x14 ]
sub edi eax
lea eax [ esp + eax + 0x80 ]
push ecx
push edi
push eax
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
push [ esp + 0x8 ]
call sub_46a547
add esp 0x4
test eax eax
jne r-xdata
mov [ esi ] r--data
push [ esp + 0x8 ]
call sub_46a736
add esp 0x4
jmp r-xdata
sub_467ded
push ebx
push edi
push esi
sub esp 0x48
mov ecx [ rw-data ]
mov eax [ esp + 0x58 ]
mov [ esp + 0x44 ] ecx
push r--data
push [ eax ]
call sub_4a6bb0
add esp 0x8
mov edi eax
xor esi esi
test edi edi
je r-xdata
mov ecx [ esp + 0x44 ]
call sub_497c4a
mov eax esi
add esp 0x48
pop esi
pop edi
pop ebx
retn
lea ebx [ esp + 0x4 ]
push edi
push 0x40
push ebx
call sub_4a6ae4
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_4a666f
add esp 0x4
jmp r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax esp
xor esi esi
xor edx edx
mov ecx edi
push eax
push esi
push [ esp + 0x64 ]
push esi
call sub_467a32
add esp 0x10
mov esi eax
sub_467e74
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x80
mov ecx [ rw-data ]
mov esi [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ esp + 0x78 ] ecx
xor ecx ecx
mov [ esp + 0xc ] ecx
mov [ edx ] ecx
mov [ esi ] ecx
push r--data
push [ eax ]
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov [ esp + 0xc ] r--data
lea edi [ esp + 0x38 ]
push esi
push 0x40
push edi
call sub_4a6ae4
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x78 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
push esi
call sub_4a7b25
add esp 0x4
push esi
call sub_43fcde
add esp 0x4
push eax
call sub_43fd77
add esp 0x4
mov edi eax
push r--data
push edi
call sub_4a8220
add esp 0x8
cmp [ edi + eax ] 0x20
jne r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov eax r--data
mov ebx edi
add ebx eax
lea eax [ ebx + 0x1 ]
mov [ ebx ] 0x0
push r--data
mov [ esp + 0x4 ] eax
push eax
call sub_4a8220
add esp 0x8
cmp [ ebx + eax + 0x1 ] 0x20
jne r-xdata
lea edi [ esp + 0x10 ]
xor eax eax
lea ebx [ esp + 0xc ]
xorps xmm0 xmm0
mov ecx esi
mov [ edi + 0x20 ] eax
movaps [ edi + 0x10 ] xmm0
movaps [ edi ] xmm0
mov edx edi
push ebx
push eax
push [ ebp + 0x14 ]
push 0x1
call sub_467a32
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
xor esi esi
test eax eax
je r-xdata
lea ebx [ ebx + eax + 0x1 ]
lea eax [ ebx + 0x1 ]
mov [ ebx ] 0x0
push r--data
mov [ esp + 0xc ] eax
push eax
call sub_4a8220
add esp 0x8
mov cl [ ebx + eax + 0x1 ]
test cl cl
je r-xdata
push [ ebp + 0x10 ]
push edi
call sub_46a69c
add esp 0x8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
push edi
call sub_46a736
jmp r-xdata
mov [ esp + 0x4 ] 0x0
cmp cl 0x20
jne r-xdata
add esp 0x4
xor esi esi
inc esi
jmp r-xdata
push [ esp + 0x1c ]
call sub_45b91a
add esp 0x4
push [ esp + 0x18 ]
call sub_45b91a
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
mov eax r--data
jmp r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
lea eax [ ebx + eax + 0x1 ]
mov [ eax ] 0x0
inc eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov [ esp + 0xc ] eax
push esi
call sub_4a666f
add esp 0x4
jmp r-xdata
lea ebx [ esp + 0x10 ]
push [ ebp + 0x10 ]
push ebx
call sub_46a69c
add esp 0x8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
push ebx
call sub_46a736
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
push esi
call sub_4a666f
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xorps xmm0 xmm0
movaps [ esp + 0x20 ] xmm0
movaps [ esp + 0x10 ] xmm0
mov [ esp + 0x30 ] 0x0
push [ esp ]
call sub_45d738
add esp 0x4
mov [ esp + 0x1c ] eax
push [ esp + 0x8 ]
call sub_45d738
add esp 0x4
mov ebx eax
mov [ esp + 0x18 ] ebx
push edi
call sub_4a65cf
add esp 0x4
mov [ esp ] eax
push ebx
call sub_45d970
add esp 0x4
cmp [ esp ] eax
jne r-xdata
xor eax eax
push eax
call sub_43f79e
add esp 0x4
jmp r-xdata
mov [ ebx ] eax
sub_4680df
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push r--data
push edi
push esi
call sub_440356
add esp 0xc
mov ecx eax
mov eax r--data
test ecx ecx
jne r-xdata
pop esi
pop edi
retn
push r--data
push edi
push esi
call sub_440356
add esp 0xc
mov ecx eax
mov eax r--data
test ecx ecx
jne r-xdata
push r--data
push edi
push esi
call sub_440356
add esp 0xc
mov ecx eax
mov eax r--data
test ecx ecx
jne r-xdata
push r--data
push edi
push esi
call sub_440356
add esp 0xc
mov ecx eax
mov eax r--data
test ecx ecx
jne r-xdata
push r--data
push edi
push esi
call sub_440356
add esp 0xc
mov ecx eax
mov eax r--data
test ecx ecx
jne r-xdata
push r--data
push edi
push esi
call sub_440356
add esp 0xc
mov ecx eax
mov eax r--data
test ecx ecx
cmove eax ecx
sub_46818d
push ebp
push ebx
push edi
push esi
sub esp 0x11c
mov eax [ rw-data ]
mov ecx [ esp + 0x134 ]
mov esi [ esp + 0x130 ]
xor ebx ebx
mov [ esp + 0x118 ] eax
test ecx ecx
mov eax 0x0
je r-xdata
mov ebp [ esp + 0x138 ]
mov [ esp + 0x2c ] eax
push r--data
push [ esi ]
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
push ecx
call sub_4a7f30
add esp 0x4
mov edi r--data
jmp r-xdata
lea ebx [ esp + 0xf0 ]
mov ecx esi
mov edx ebx
call sub_468a26
test eax eax
mov ecx 0x0
mov ebp 0x0
mov edx 0x0
mov edi 0x0
mov eax 0x0
mov [ esp + 0x1c ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov [ esp + 0x8 ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x4 ] eax
push esi
call sub_4a666f
add esp 0x4
mov esi ebp
xor ebx ebx
push r--data
push ebx
call sub_4a7d00
add esp 0x8
xor ebp ebp
test eax eax
mov eax 0x0
je r-xdata
mov ecx [ esp + 0x118 ]
call sub_497c4a
mov eax ebx
add esp 0x11c
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ ebp ] edi
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov ecx esi
mov [ esp + 0x14 ] eax
call sub_468a7e
mov ebx eax
mov edi r--data
test ebx ebx
je r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
xor ecx ecx
mov [ esp ] esi
push ebx
call sub_4a7f30
add esp 0x4
push ebx
push eax
call sub_4680df
add esp 0x8
mov esi eax
push ebx
call sub_43f9d4
add esp 0x4
test esi esi
mov [ esp + 0x24 ] esi
je r-xdata
call sub_48495f
xor eax eax
inc eax
push 0x14
push r--data
push ebx
call sub_4a7fc0
add esp 0xc
test eax eax
mov eax r--data
mov edi r--data
cmove edi eax
xor ecx ecx
xor ebp ebp
jmp r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
xor ecx ecx
xor edx edx
xor eax eax
mov esi [ esp ]
lea ebx [ esp + 0xf0 ]
mov edx ebx
mov ecx esi
call sub_468a26
test eax eax
mov edi r--data
je r-xdata
xor edx edx
xor eax eax
test esi esi
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push [ esp + 0x38 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
mov ecx esi
call sub_468a7e
test eax eax
je r-xdata
push r--data
push eax
mov ebx eax
call sub_4a7d00
add esp 0x8
test eax eax
mov [ esp + 0x4 ] ebx
je r-xdata
xor esi esi
mov edi 0x10
inc esi
jmp r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ esp ]
lea ebx [ esp + 0xf0 ]
mov edx ebx
call sub_468a26
test eax eax
je r-xdata
xor edi edi
xor esi esi
inc edi
mov eax [ esp + 0x4 ]
xor ebp ebp
xor edx edx
jmp r-xdata
mov eax [ esp + 0x4 ]
xor ecx ecx
xor edx edx
jmp r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov esi [ esp ]
mov ebx [ esp ]
mov ecx ebx
call sub_468a7e
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
xor ecx ecx
xor edx edx
mov edi r--data
mov esi ebx
jmp r-xdata
mov [ esp + 0x18 ] edi
lea edi [ esp + 0xf0 ]
mov ecx ebx
mov [ esp + 0x8 ] eax
mov edx edi
call sub_468a26
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
xor ecx ecx
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov edi [ esp ]
mov ecx edi
call sub_468a7e
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov esi edi
xor ecx ecx
jmp r-xdata
push ebx
call sub_4a65cf
add esp 0x4
mov [ esp + 0xc ] eax
push ebx
call sub_43f9d4
add esp 0x4
mov edx [ esp + 0xc ]
lea eax [ esp + 0x3c ]
mov ecx edi
push eax
call sub_468b08
add esp 0x4
test eax eax
mov [ esp + 0xc ] eax
je r-xdata
mov edi r--data
jmp r-xdata
lea ebx [ esp + 0xf0 ]
mov ecx edi
mov [ esp + 0x20 ] esi
mov edx ebx
call sub_468a26
test eax eax
mov esi edi
je r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
jmp r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ecx esi
call sub_468a7e
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
jmp r-xdata
push ebx
call sub_4a65cf
add esp 0x4
mov esi eax
push ebx
call sub_43f9d4
add esp 0x4
mov ecx [ esp ]
lea eax [ esp + 0x38 ]
mov edx esi
push eax
call sub_468b08
add esp 0x4
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov edx [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
lea ebx [ esp + 0xf0 ]
mov edx ebx
call sub_468a26
test eax eax
je r-xdata
mov ebp [ esp + 0x10 ]
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp ]
call sub_468a7e
test eax eax
je r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
cmp [ esp + 0x14 ] 0x0
je r-xdata
xor ecx ecx
inc ecx
mov [ esp + 0x28 ] ecx
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
cmp [ esp + 0x134 ] 0x0
je r-xdata
mov ecx [ esp ]
call sub_468a7e
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
push [ eax + 0x30 ]
call sub_4a7f30
add esp 0x4
mov ebx eax
push [ esp + 0x4 ]
call sub_4a7f30
add esp 0x4
mov ebp eax
push [ esp + 0x8 ]
call sub_4a7f30
add esp 0x4
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
lea edi [ ebx + ebp ]
mov [ esp + 0x34 ] eax
add edi eax
add edi edx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ecx
lea eax [ ecx + edi + 0x14 ]
push 0x1
mov [ esp + 0x4 ] eax
push eax
call sub_43f807
add esp 0x8
mov edi eax
mov eax ebx
lea esi [ edi + ebx ]
shr eax 0x18
mov [ esp + 0x30 ] esi
mov [ edi ] al
mov eax ebx
shr eax 0x10
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] bh
mov [ edi + 0x3 ] bl
lea eax [ edi + 0x4 ]
push ebx
mov ecx [ esp + 0x28 ]
push [ ecx + 0x30 ]
push eax
call sub_49a1f0
add esp 0xc
mov edx ebp
lea ecx [ edi + ebx + 0x8 ]
mov eax edx
lea ebp [ edx + esi + 0x4 ]
shr eax 0x18
mov [ ecx - 0x4 ] al
mov eax edx
shr eax 0x10
mov [ ecx - 0x3 ] al
mov [ ecx - 0x2 ] dh
mov [ ecx - 0x1 ] dl
push edx
mov esi edx
push [ esp + 0x8 ]
push ecx
call sub_49a1f0
add esp 0xc
mov edx [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov ebx ebp
mov eax edx
lea ecx [ esi + ecx + 0xc ]
lea ebp [ edx + ebx + 0x4 ]
shr eax 0x18
mov [ ecx - 0x4 ] al
mov eax edx
shr eax 0x10
mov [ ecx - 0x3 ] al
mov [ ecx - 0x2 ] dh
mov [ ecx - 0x1 ] dl
push edx
mov esi edx
push [ esp + 0xc ]
push ecx
call sub_49a1f0
add esp 0xc
mov edx [ esp + 0x14 ]
lea ecx [ esi + ebx + 0xc ]
mov eax edx
shr eax 0x18
mov [ ecx - 0x4 ] al
mov eax edx
shr eax 0x10
mov [ ecx - 0x3 ] al
mov [ ecx - 0x2 ] dh
mov [ ecx - 0x1 ] dl
push edx
mov esi edx
push [ esp + 0x10 ]
push ecx
call sub_49a1f0
add esp 0xc
mov edx [ esp + 0x18 ]
lea ecx [ esi + ebp + 0xc ]
mov eax edx
shr eax 0x18
mov [ ecx - 0x4 ] al
mov eax edx
shr eax 0x10
mov [ ecx - 0x3 ] al
mov eax edx
mov [ ecx - 0x2 ] ah
mov [ ecx - 0x1 ] al
push eax
push [ esp + 0x14 ]
push ecx
call sub_49a1f0
add esp 0xc
xor eax eax
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x38 ]
mov edi [ esp + 0x10 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] eax
mov [ esp ] eax
jmp r-xdata
mov ebp [ esp + 0x138 ]
mov eax [ esp + 0x8 ]
mov esi [ esp + 0x10 ]
mov edi r--data
xor ebx ebx
jmp r-xdata
mov edi [ esp + 0x38 ]
mov eax edi
cdq
idiv [ esp + 0x18 ]
test edx edx
je r-xdata
mov [ esp + 0x28 ] 0x0
jmp r-xdata
lea eax [ esp + 0x54 ]
push eax
push [ esp + 0x4 ]
push edi
call sub_46d857
add esp 0xc
lea ebp [ esp + 0xc8 ]
push 0x1f
push r--data
push ebp
call sub_49a1f0
add esp 0xc
lea esi [ esp + 0x68 ]
push esi
call sub_46d63e
add esp 0x4
push 0x1e
push ebp
push esi
call sub_46d65f
add esp 0xc
cmp [ esp + 0x134 ] 0x0
je r-xdata
cmp [ esp + 0x28 ] 0x0
je r-xdata
lea ebx [ esp + 0x68 ]
push ebx
call sub_46d63e
add esp 0x4
mov eax 0x4
push eax
push r--data
push ebx
call sub_46d65f
add esp 0xc
mov ebp [ esp + 0x2c ]
push ebp
mov esi [ esp + 0x138 ]
push esi
push ebx
call sub_46d65f
add esp 0xc
lea eax [ esp + 0xc8 ]
push eax
push ebx
call sub_46d779
add esp 0x8
push ebx
call sub_46d63e
add esp 0x4
mov eax 0x4
push eax
push r--data
push ebx
call sub_46d65f
add esp 0xc
push ebp
push esi
push ebx
call sub_46d65f
add esp 0xc
lea eax [ esp + 0xdc ]
push eax
push ebx
call sub_46d779
add esp 0x8
push edi
push [ esp + 0x14 ]
lea eax [ esp + 0xd0 ]
push eax
call sub_459edf
add esp 0xc
mov [ esp + 0x1c ] eax
push [ esp ]
call sub_4a666f
add esp 0x4
cmp [ esp + 0x20 ] 0x0
je r-xdata
xor esi esi
lea edi [ esp + 0x68 ]
push [ esp ]
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
lea ebp [ esp + 0x40 ]
push ebp
push esi
call sub_46d779
add esp 0x8
lea eax [ esp + 0x54 ]
mov ebx 0x14
push eax
push [ esp + 0x4 ]
push edi
push ebx
push ebp
call sub_46d941
add esp 0x14
push ebx
push ebp
call sub_48f5d3
add esp 0x8
push 0x60
push esi
call sub_48f5d3
add esp 0x8
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
movzx eax [ esp + esi + 0x54 ]
push eax
push r--data
push edi
call sub_432778
add esp 0xc
inc esi
add edi 0x2
cmp esi 0x14
jne r-xdata
lea eax [ esp + 0x68 ]
push eax
push [ esp + 0x20 ]
call sub_4a7d00
add esp 0x8
mov ecx [ esp + 0x20 ]
mov ebx rw-data
mov edx r--data
mov edi r--data
test ecx ecx
cmove ebx ecx
cmovne edi edx
test eax eax
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
push [ esp + 0x2c ]
push [ esp + 0x138 ]
push esi
call sub_46d65f
add esp 0xc
push [ esp + 0x1c ]
call sub_43f9d4
add esp 0x4
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x24 ]
mov ebx eax
mov [ ebx ] ecx
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push [ esp + 0x18 ]
push [ esp + 0x14 ]
push [ esp + 0x44 ]
push [ esp + 0x18 ]
push ecx
call [ ecx + 0x14 ]
add esp 0x14
test eax eax
mov [ ebx + 0x4 ] eax
je r-xdata
mov esi [ esp + 0x10 ]
jmp r-xdata
push ebx
call sub_43f9d4
add esp 0x4
xor ebx ebx
mov edi r--data
mov [ esp + 0x1c ] 0x0
jmp r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
cmp [ esp + 0x138 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov ebp [ esp + 0x138 ]
test eax eax
je r-xdata
mov eax [ esp + 0x138 ]
mov [ eax ] 0x0
jmp r-xdata
sub_468a26
push ebp
push ebx
push edi
push esi
mov edi edx
mov ebx ecx
mov esi 0x4801
xor ebp ebp
jmp r-xdata
push ebx
call sub_4a691d
add esp 0x4
lea ecx [ eax + 0x1 ]
cmp ecx 0xe
ja r-xdata
cmp eax 0x3a
je r-xdata
bt esi ecx
jb r-xdata
push ebx
call sub_4a691d
add esp 0x4
cmp eax 0x20
mov eax 0x0
jne r-xdata
cmp ebp 0x27
jne r-xdata
xor eax eax
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
mov [ edi + ebp ] 0x0
inc eax
jmp r-xdata
mov [ edi + ebp ] al
inc ebp
sub_468a7e
push ebp
push ebx
push edi
push esi
push eax
xor esi esi
mov ebp 0x80
mov [ esp ] ecx
inc esi
push 0x1
push 0x80
call sub_43f807
add esp 0x8
mov edi eax
jmp r-xdata
mov [ eax ] 0x0
push [ esp ]
call sub_4a691d
add esp 0x4
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0xd
je r-xdata
push [ esp ]
call sub_4a691d
add esp 0x4
cmp eax 0xa
je r-xdata
cmp ebx 0xa
jne r-xdata
cmp eax 0xd
je r-xdata
cmp esi ebp
jl r-xdata
push [ esp ]
push eax
call sub_4a87a3
add esp 0x8
lea eax [ edi + esi ]
mov [ edi + esi - 0x1 ] bl
inc esi
sub ebp 0xffffff80
push 0x1
push ebp
push edi
call sub_43f8db
add esp 0xc
mov edi eax
sub_468b08
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov esi edx
mov [ esp + 0xc ] ecx
mov eax esi
shl eax 0x4
lea eax [ eax + eax * 2 ]
push 0x1
push eax
call sub_43f807
add esp 0x8
test esi esi
mov [ esp ] eax
mov [ esp + 0x4 ] esi
jle r-xdata
xor edi edi
xor esi esi
xor edi edi
push [ esp ]
jmp r-xdata
push ebp
call sub_4a7f30
add esp 0x4
mov ebx eax
cmp ebx 0x40
jg r-xdata
call sub_43f9d4
add esp 0x4
xor eax eax
jmp r-xdata
push [ esp ]
call sub_43f9d4
add esp 0x4
push ebp
jmp r-xdata
mov eax ebx
and eax 0x3
jne r-xdata
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
test ebx ebx
mov [ esp + 0x8 ] esi
jle r-xdata
push ebp
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x8 ]
inc esi
cmp esi [ esp + 0x4 ]
jl r-xdata
xor esi esi
mov ecx [ esp + 0xc ]
call sub_468a7e
mov ebp eax
test ebp ebp
je r-xdata
jmp r-xdata
push ebp
call sub_43f9d4
add esp 0x4
push [ esp ]
add esi 0x4
add edi eax
cmp esi ebx
jl r-xdata
mov eax [ esp + 0x24 ]
mov [ eax ] edi
mov eax [ esp ]
mov eax [ esp ]
lea ecx [ ebp + esi ]
lea eax [ eax + edi ]
push eax
push ecx
call sub_43fe31
add esp 0x8
test eax eax
je r-xdata
sub_468be4
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov eax [ rw-data ]
mov ebp [ esp + 0x30 ]
mov [ esp + 0x18 ] eax
push ebp
call sub_43fcde
add esp 0x4
push eax
call sub_43fd77
add esp 0x4
mov esi eax
test esi esi
je r-xdata
mov [ esp ] r--data
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
xor esi esi
mov eax [ esp ]
mov [ esi ] eax
push esi
call sub_43f9d4
add esp 0x4
push ebp
call sub_43fcde
add esp 0x4
push eax
call sub_43fd77
add esp 0x4
mov esi eax
test esi esi
je r-xdata
mov [ esp ] r--data
xor edi edi
mov [ esp ] r--data
jmp r-xdata
xor edi edi
mov [ esp ] r--data
mov esi [ esp + 0x40 ]
push eax
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
test esi esi
je r-xdata
xor eax eax
xor edi edi
xor ebp ebp
mov [ esp ] 0x1000
push 0x1
push 0x1000
call sub_43f807
add esp 0x8
lea ebx [ esp + 0x11 ]
xor ecx ecx
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edi
mov [ ebx ] 0x0
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov esi ecx
cmp al 0x2d
je r-xdata
mov ebp esi
lea esi [ ebx + 0x2 ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov al [ esi ]
mov [ esp + 0xc ] esi
test al al
je r-xdata
mov [ esp ] r--data
mov ebx ecx
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
lea edi [ esi + 0x1 ]
mov ecx ebp
jmp r-xdata
push esi
call sub_4a7f30
add esp 0x4
cmp [ esi + eax - 0x1 ] 0x22
mov ecx ebp
jne r-xdata
push esi
call sub_43f9d4
add esp 0x4
push ebp
call sub_43fcde
add esp 0x4
push eax
call sub_43fd77
add esp 0x4
mov esi eax
test esi esi
jne r-xdata
push 0x2
push r--data
push esi
call sub_4a7fc0
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov eax ebx
cmp eax 0x4
jge r-xdata
mov ebx [ esp + 0x4 ]
mov [ esp ] r--data
jmp r-xdata
mov esi ecx
jmp r-xdata
push ebx
lea eax [ esp + 0x18 ]
push eax
mov ebx ecx
call sub_43fe31
mov ecx ebx
add esp 0x8
mov ebp eax
mov esi ebp
add esi ecx
cmp esi [ esp ]
jle r-xdata
test al al
je r-xdata
mov al [ esi ]
mov [ ebx + eax + 0x1 ] 0x0
add ebx 0x3
mov ecx ebp
mov esi ebx
jmp r-xdata
push r--data
push esi
call sub_49b0c0
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
mov [ esp ] r--data
jmp r-xdata
mov eax esi
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov eax [ esp + 0x4 ]
lea eax [ esi + esi * 4 ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1e
add ecx eax
sar ecx 0x2
add ecx 0x400
push 0x1
mov [ esp + 0x4 ] ecx
push ecx
push [ esp + 0xc ]
call sub_43f8db
mov ecx ebx
add esp 0xc
jmp r-xdata
mov [ ecx ] 0x0
push edi
call sub_43f9d4
add esp 0x4
mov esi ebp
push esi
call sub_43f79e
add esp 0x4
mov ebp [ esp + 0x30 ]
mov edi eax
cmp al 0x5c
jne r-xdata
xor ebx ebx
mov [ esp ] r--data
jmp r-xdata
mov [ esp ] r--data
jmp r-xdata
mov edx ebx
lea ecx [ edx - 0x4 ]
cmp eax ecx
jg r-xdata
mov ebx [ esp + 0x4 ]
xor eax eax
jmp r-xdata
mov [ esp + ebp + 0x14 ] al
inc ebp
cmp ebp 0x4
jne r-xdata
jmp r-xdata
lea ebx [ esp + 0x11 ]
add ecx eax
mov [ esp + 0x4 ] eax
push ebp
push ebx
push ecx
call sub_49a1f0
add esp 0xc
xor ebp ebp
mov ecx esi
mov [ ecx ] al
inc ecx
inc esi
jmp r-xdata
cmp [ esi + 0x1 ] 0x0
lea eax [ esi + 0x1 ]
cmovne esi eax
mov al [ esi ]
xor ebx ebx
mov esi [ esp + 0x34 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
push [ esp + 0x30 ]
call sub_43fcde
add esp 0x4
push eax
call sub_43fd77
add esp 0x4
mov edi [ esp + 0x8 ]
mov ecx esi
test eax eax
mov esi eax
jne r-xdata
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + 0x4 ]
push ecx
push eax
push r--data
call sub_43f758
mov edx ebx
add esp 0xc
mov [ esi ] eax
mov eax [ esp + 0x3c ]
test eax eax
je r-xdata
mov [ eax ] edx
push edi
call sub_43f9d4
add esp 0x4
mov [ eax ] edi
jmp r-xdata
mov ecx [ esp + 0x18 ]
call sub_497c4a
mov eax esi
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x4 ]
jmp r-xdata
sub_468f64
push ebp
push ebx
push edi
push esi
sub esp 0x10
push [ esp + 0x24 ]
call sub_43fcde
add esp 0x4
push eax
call sub_43fd77
add esp 0x4
mov ebx eax
push 0x20
push ebx
call sub_49ae50
add esp 0x8
mov ebp eax
test ebp ebp
je r-xdata
xor ebp ebp
xor esi esi
mov [ esp + 0x4 ] r--data
jmp r-xdata
mov [ esp + 0xc ] ebx
lea ebx [ ebp + 0x1 ]
mov [ ebp ] 0x0
push 0x20
push ebx
call sub_49ae50
add esp 0x8
xor edi edi
test eax eax
mov [ esp + 0x8 ] 0x0
je r-xdata
mov edi [ esp + 0x34 ]
push ebx
call sub_43f9d4
add esp 0x4
push ebp
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
test edi edi
je r-xdata
push ebx
call sub_4a7f30
add esp 0x4
shr eax 0x2
lea esi [ eax + eax * 2 ]
push 0x1
push esi
call sub_43f807
add esp 0x8
mov [ esp ] eax
push 0x4
push 0x0
push ebx
call sub_4989c0
add esp 0xc
test eax eax
jne r-xdata
mov ecx eax
mov [ eax ] 0x0
inc ecx
push ecx
call sub_43f79e
add esp 0x4
mov [ esp + 0x8 ] eax
xor eax eax
mov eax [ esp + 0x4 ]
mov [ edi ] eax
cmp [ ebx ] 0x0
je r-xdata
add ebp 0x5
xor edi edi
mov ebx [ esp + 0xc ]
push ebx
call sub_4a7f30
add esp 0x4
mov ebp [ esp + 0x8 ]
lea ecx [ eax + 0x4 ]
cmp edi ecx
jge r-xdata
mov ebp [ esp + 0x8 ]
mov esi [ esp ]
mov ebx [ esp + 0xc ]
mov [ esp + 0x4 ] r--data
jmp r-xdata
mov eax [ esp ]
lea eax [ eax + edi ]
push eax
push ebx
call sub_43fe31
add esp 0x8
add edi eax
mov eax 0x4
push eax
push 0x0
push ebp
call sub_4989c0
add esp 0xc
add ebp 0x4
test eax eax
je r-xdata
push 0x426
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esp ]
mov ecx [ esi ]
bswap ecx
cmp ecx eax
jne r-xdata
mov [ esp + 0x4 ] r--data
jmp r-xdata
lea eax [ edi + 0x3 ]
lea ebx [ ebp - 0x4 ]
cmp eax esi
jle r-xdata
add ebp 0xfffffffc
mov ebx ebp
mov [ esp + 0x4 ] r--data
mov [ esp + 0x4 ] r--data
add esi 0x4
push eax
push ebx
push esi
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov esi [ esp ]
jmp r-xdata
mov ebp ebx
mov ebx [ esp + 0x28 ]
mov esi [ esp + 0x2c ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x30 ]
test esi esi
je r-xdata
push ebp
call sub_43f79e
add esp 0x4
mov [ ebx ] eax
test eax eax
je r-xdata
mov [ esi ] edi
push [ esp + 0x8 ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
call sub_43f9d4
add esp 0x4
mov eax [ esp ]
jmp r-xdata
sub_469149
push ebp
push ebx
push edi
push esi
sub esp 0x38
mov ecx [ rw-data ]
mov ebx [ esp + 0x5c ]
mov eax [ esp + 0x4c ]
mov [ esp + 0x34 ] ecx
push r--data
push [ eax ]
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov edi r--data
xor ebp ebp
jmp r-xdata
mov edi [ esp + 0x50 ]
mov ecx esi
call sub_469406
xor ebp ebp
cmp eax 0x3
je r-xdata
test ebx ebx
je r-xdata
lea edi [ esp + 0xc ]
mov ecx esi
mov edx edi
call sub_468a26
test eax eax
je r-xdata
cmp eax 0xa
je r-xdata
mov esi [ esp + 0x58 ]
xor ebx ebx
test esi esi
je r-xdata
mov [ ebx ] edi
push 0x14
push r--data
push edi
call sub_4a7fc0
add esp 0xc
test eax eax
mov eax r--data
mov edi r--data
cmove edi eax
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push ebx
push [ esp + 0x5c ]
push [ esp + 0x5c ]
push edi
push esi
call sub_468f64
add esp 0x14
mov ebx eax
push esi
mov ecx edi
mov edi r--data
cmp eax 0x9
jne r-xdata
mov ecx [ esp + 0x34 ]
call sub_497c4a
mov eax ebx
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
test ebp ebp
je r-xdata
mov ecx esi
call sub_468a7e
mov ebx eax
mov edi r--data
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push esi
call sub_4a666f
add esp 0x4
mov ebx [ esp + 0x5c ]
push [ esp + 0x5c ]
push [ esp + 0x5c ]
push [ esp + 0x5c ]
push ecx
push esi
call sub_468be4
add esp 0x14
mov ebx eax
push esi
jmp r-xdata
push ebp
call sub_43f9d4
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
push ebx
call sub_4a7f30
add esp 0x4
push ebx
push eax
call sub_4680df
add esp 0x8
mov [ esp ] eax
push ebx
call sub_43f9d4
add esp 0x4
cmp [ esp ] 0x0
je r-xdata
call sub_4a666f
add esp 0x4
lea ebx [ esp + 0xc ]
mov ecx esi
mov edx ebx
call sub_468a26
test eax eax
je r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
mov ecx esi
call sub_468a7e
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
lea ebx [ esp + 0xc ]
mov ecx esi
mov edx ebx
call sub_468a26
test eax eax
je r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
mov ecx esi
call sub_468a7e
mov ecx eax
test ecx ecx
je r-xdata
mov eax [ esp + 0x58 ]
mov ebp ecx
test eax eax
je r-xdata
push ecx
call sub_43f9d4
add esp 0x4
mov [ eax ] ecx
jmp r-xdata
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
lea ebx [ esp + 0xc ]
mov ecx esi
mov edx ebx
call sub_468a26
test eax eax
je r-xdata
mov ecx esi
call sub_468a7e
mov ebx eax
test ebx ebx
je r-xdata
push ebx
call sub_4a65cf
add esp 0x4
mov [ esp + 0x4 ] eax
push ebx
call sub_43f9d4
add esp 0x4
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
call sub_468b08
add esp 0x4
mov ebx eax
test ebx ebx
je r-xdata
push esi
call sub_4a666f
add esp 0x4
cmp [ esp + 0x54 ] 0x0
je r-xdata
cmp [ esp + 0x50 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x54 ]
mov [ ecx ] eax
mov eax [ esp ]
push [ eax + 0x30 ]
call sub_43f79e
add esp 0x4
mov ecx [ esp + 0x50 ]
mov [ ecx ] eax
jmp r-xdata
sub_469406
push ebx
push edi
push esi
sub esp 0x404
mov eax [ rw-data ]
mov edi ecx
mov ebx esp
mov [ esp + 0x400 ] eax
push edi
push 0x3ff
push 0x1
push ebx
call sub_4a6ec0
add esp 0x10
mov esi eax
push edi
call sub_4a7b25
add esp 0x4
test esi esi
js r-xdata
xor esi esi
jmp r-xdata
xor edi edi
inc edi
cmp esi 0x20
jge r-xdata
mov ecx [ esp + 0x400 ]
call sub_497c4a
mov eax esi
add esp 0x404
pop esi
pop edi
pop ebx
retn
cmp esi 0x400
jb r-xdata
mov esi edi
jmp r-xdata
mov [ esp + esi ] 0x0
push 0x20
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
push 0x674
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi 0x2
jmp r-xdata
push 0x1a
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov esi 0x9
jmp r-xdata
push 0x14
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov esi 0x3
jmp r-xdata
push 0x1e
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov esi 0x6
jmp r-xdata
push 0xb
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov esi 0x5
jmp r-xdata
push 0x20
push r--data
push ebx
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
mov esi 0x7
push r--data
push ebx
call sub_4a8220
add esp 0x8
cmp [ esp + eax ] 0x20
jne r-xdata
push r--data
push ebx
call sub_4a7d90
add esp 0x8
mov esi eax
push ebx
push esi
call sub_4680df
add esp 0x8
test eax eax
je r-xdata
lea esi [ esp + eax ]
lea eax [ esi + 0x1 ]
push r--data
push eax
call sub_4a8220
add esp 0x8
cmp [ esi + eax + 0x1 ] 0x20
jne r-xdata
lea eax [ esp + esi + 0x1 ]
lea ebx [ esp + esi ]
push r--data
push eax
call sub_4a8220
add esp 0x8
mov al [ eax + ebx + 0x1 ]
mov esi 0xa
test al al
je r-xdata
lea esi [ esi + eax + 0x1 ]
lea eax [ esi + 0x1 ]
push r--data
push eax
call sub_4a8220
add esp 0x8
mov al [ esi + eax + 0x1 ]
mov esi 0x8
test al al
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0x20
jne r-xdata
cmp al 0x20
je r-xdata
jmp r-xdata
sub_4695f7
push ebp
push ebx
push edi
push esi
sub esp 0x2c
mov ebp [ esp + 0x44 ]
mov ecx [ rw-data ]
mov eax [ esp + 0x40 ]
test ebp ebp
mov [ esp + 0x28 ] ecx
je r-xdata
push r--data
push [ eax ]
call sub_4a6bb0
add esp 0x8
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov [ ebp ] 0x0
mov ecx [ esp + 0x28 ]
call sub_497c4a
mov eax ebx
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi esp
mov ecx esi
mov edx edi
call sub_468a26
test eax eax
je r-xdata
push esi
jmp r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
call sub_4a666f
mov ecx esi
call sub_468a7e
test eax eax
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push esi
push eax
call sub_43f9d4
add esp 0x4
mov edi esp
mov ecx esi
mov edx edi
call sub_468a26
test eax eax
je r-xdata
push esi
jmp r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ecx esi
call sub_468a7e
mov edi eax
test edi edi
je r-xdata
push esi
jmp r-xdata
mov ebx esp
mov ecx esi
mov edx ebx
call sub_468a26
test eax eax
je r-xdata
push esi
call sub_4a666f
add esp 0x4
push edi
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ecx esi
call sub_468a7e
test eax eax
je r-xdata
push esi
call sub_4a666f
add esp 0x4
push edi
jmp r-xdata
test ebp ebp
je r-xdata
call sub_43f9d4
add esp 0x4
xor ebx ebx
inc ebx
jmp r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ ebp ] eax
jmp r-xdata
add esp 0x4
push esi
call sub_4a666f
add esp 0x4
push r--data
push edi
call sub_4a7d00
add esp 0x8
xor ebx ebx
test eax eax
sete bl
push edi
call sub_43f9d4
jmp r-xdata
sub_469756
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov edi [ esp + 0x58 ]
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x30 ]
push eax
push [ esp + 0x60 ]
push edi
call sub_4675bd
add esp 0xc
mov esi 0xfffffff0
mov ebp esp
mov ebx r--data
movzx ecx [ esp + esi + 0x40 ]
cmp esi 0xffffffff
mov eax r--data
cmove eax ebx
push eax
push ecx
push r--data
push ebp
call sub_432778
add esp 0x10
add ebp 0x3
inc esi
jne r-xdata
mov eax [ edi ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
mov ebx [ esp + 0x5c ]
mov esi eax
test esi esi
jle r-xdata
mov eax esp
push eax
call sub_43f79e
add esp 0x4
jmp r-xdata
lea eax [ ebx - 0x4 ]
cmp esi eax
jge r-xdata
mov ecx [ esp + 0x40 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebp [ edi + 0x4 ]
push ebp
push esi
call sub_4680df
add esp 0x8
test eax eax
je r-xdata
mov eax esp
push eax
push ebp
push esi
push r--data
call sub_43f758
add esp 0x10
push ebx
push edi
push eax
call [ eax + 0x24 ]
add esp 0xc
mov ecx esp
push ecx
push eax
push ebp
push esi
push r--data
call sub_43f758
add esp 0x14
jmp r-xdata
sub_46982f
push edi
push esi
sub esp 0x8
mov edx [ rw-data ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edi esp
mov [ esp + 0x4 ] edx
push edi
push ecx
call [ eax + 0xc ]
add esp 0x8
mov esi eax
push [ edi ]
push esi
call sub_469756
add esp 0x8
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax edi
add esp 0x8
pop esi
pop edi
retn
sub_469879
push edi
push esi
mov eax [ esp + 0xc ]
push r--data
push [ eax ]
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
xor eax eax
mov ecx esi
call sub_469406
mov edi eax
push esi
call sub_4a666f
add esp 0x4
mov eax edi
jmp r-xdata
pop esi
pop edi
retn
sub_4698c8
cmp [ rw-data ] 0x0
je r-xdata
retn
push ebp
push ebx
push edi
push esi
mov eax [ rw-data ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov ecx 0x40
sub ecx eax
lea eax [ eax + rw-data ]
cmp ecx esi
jg r-xdata
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
add [ rw-data ] esi
pop esi
pop edi
pop ebx
pop ebp
push ecx
push edi
push eax
call sub_49a1f0
add esp 0xc
mov ebx 0x40
sub ebx [ rw-data ]
add edi ebx
push rw-data
push rw-data
call sub_46d4ac
add esp 0x8
mov ecx [ rw-data ]
mov eax 0xffffffec
inc eax
jne r-xdata
xor ecx ecx
mov [ rw-data ] 0x0
mov dl [ eax + rw-data ]
lea ebp [ ecx + 0x1 ]
mov [ rw-data ] ebp
xor [ ecx + rw-data ] dl
mov ecx [ rw-data ]
cmp ecx 0x4b0
jl r-xdata
sub esi ebx
cmp ecx 0x13
jg r-xdata
mov ecx 0x40
mov eax rw-data
cmp esi 0x3f
mov [ rw-data ] 0x0
jg r-xdata
call sub_4699a1
sub_4699a1
push ebp
push ebx
push edi
push esi
sub esp 0x5c
mov eax [ rw-data ]
mov [ esp + 0x58 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ esp + 0x58 ]
call sub_497c4a
add esp 0x5c
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ rw-data ] 0x1
push sub_4698c8
call sub_492210
add esp 0x4
push rw-data
push rw-data
call sub_46d4ac
add esp 0x8
mov [ rw-data ] 0x0
lea ecx [ esp + 0x4 ]
lea ebx [ esp + 0x18 ]
mov eax [ rw-data ]
movsd xmm0 [ rw-data ]
movsd xmm1 [ rw-data ]
mov [ ecx + 0x10 ] eax
xor eax eax
movsd [ ecx + 0x8 ] xmm0
movsd [ ecx ] xmm1
mov ecx [ esi + eax * 4 + rw-data ]
xor [ esp + eax * 4 + 0x4 ] ecx
inc eax
cmp eax 0x5
jne r-xdata
push ebx
lea eax [ esp + 0x8 ]
push eax
call sub_46d4ac
add esp 0x8
mov eax [ esp + 0x14 ]
movsd xmm0 [ esp + 0x4 ]
movsd xmm1 [ esp + 0xc ]
inc edi
add esi 0xffffffec
cmp edi 0x3c
mov [ ebp + 0x10 ] eax
movsd [ ebp + 0x8 ] xmm1
movsd [ ebp ] xmm0
jne r-xdata
imul eax edi 0xffffffec
lea ebp [ eax + rw-data ]
xor eax eax
mov eax [ esp ]
inc eax
cmp eax 0x2
jne r-xdata
mov [ esp ] eax
mov ecx 0x10
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
mov esi 0x49c
xor edi edi
push ebx
lea eax [ esp + 0x8 ]
push eax
call sub_46d4ac
add esp 0x8
mov eax [ esp + 0x14 ]
movsd xmm0 [ esp + 0x4 ]
movsd xmm1 [ esp + 0xc ]
mov [ rw-data ] eax
movsd [ rw-data ] xmm1
movsd [ rw-data ] xmm0
mov [ rw-data ] 0x14
mov [ rw-data ] 0x0
sub_469ae5
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc eax
mov [ rw-data ] eax
retn
push esi
sub esp 0xc
mov esi rw-data
mov [ esp ] esi
mov [ esp + 0x8 ] 0x510
mov [ esp + 0x4 ] 0x0
call sub_49acf0
add esp 0xc
push sub_469b49
call sub_49202c
add esp 0x4
call sub_4699a1
push esi
push sub_469bcf
push 0x493e0
call sub_47d9f4
add esp 0xc
mov [ rw-data ] eax
mov eax [ rw-data ]
pop esi
sub_469b49
push edi
push esi
mov eax [ rw-data ]
mov esi [ esp + 0x10 ]
mov edi [ esp + 0xc ]
mov ecx 0x4b0
sub ecx eax
cmp ecx esi
jg r-xdata
test esi esi
jle r-xdata
cmp eax 0x4af
jg r-xdata
xor esi esi
xor eax eax
call sub_4699a1
mov eax [ rw-data ]
mov [ rw-data ] 0x0
lea esi [ esi + eax - 0x4b0 ]
xor eax eax
cmp esi 0x4b0
jge r-xdata
xor ecx ecx
mov cl [ edi + eax ]
xor [ eax + rw-data ] cl
inc eax
cmp esi eax
jne r-xdata
jmp r-xdata
mov dl [ edi + ecx ]
xor [ eax + ecx + rw-data ] dl
mov edx 0x4b0
inc ecx
mov eax [ rw-data ]
sub edx eax
cmp ecx edx
jl r-xdata
add edi ecx
mov [ rw-data ] esi
pop esi
pop edi
retn
sub_469bcf
cmp [ rw-data ] 0x0
jle r-xdata
retn
mov eax [ esp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
call sub_49225f
push rw-data
push sub_469bcf
push 0x493e0
call sub_47d9f4
add esp 0xc
mov [ rw-data ] eax
sub_469c06
mov eax [ rw-data ]
test eax eax
jg r-xdata
cmp eax 0x1
jne r-xdata
push 0x13d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
retn
call sub_4921c4
push rw-data
call sub_47db90
add esp 0x4
mov eax [ rw-data ]
sub_469c4e
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x4b0
jl r-xdata
push 0x147
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea ecx [ eax + 0x1 ]
mov [ rw-data ] ecx
movzx eax [ eax + rw-data ]
retn
call sub_4699a1
mov eax [ rw-data ]
sub_469c95
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ebp 0x258
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov esi eax
call sub_4699a1
mov eax rw-data
add eax [ rw-data ]
push ebp
push eax
push esi
call sub_49a1f0
add esp 0xc
mov [ ebx ] ebp
mov [ edi ] esi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_4699a1
sub_469cdc
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebp [ esp + 0x20 ]
xor edi edi
dec edi
cmp ebp 0x4
jl r-xdata
mov eax edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x24 ]
mov ebx [ esp + 0x1c ]
test esi esi
je r-xdata
add ebp 0xfffffffc
cmp [ esp + 0x2c ] 0x0
lea ecx [ ebx + 0x4 ]
jne r-xdata
xor eax eax
xor ecx ecx
mov [ esi ] 0x0
lea edi [ esi + 0x8 ]
test esi esi
mov eax edi
cmove eax esi
push eax
push ebp
mov [ esp + 0x8 ] ecx
push ecx
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
lea eax [ esi + 0xc ]
test esi esi
cmove eax esi
push eax
push ebp
push ecx
mov [ esp + 0xc ] ecx
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
movzx edx [ ebx + ecx ]
shl eax 0x8
inc ecx
or eax edx
cmp ecx 0x4
mov [ esi ] eax
jne r-xdata
xor edi edi
dec edi
test esi esi
je r-xdata
mov ecx [ esp ]
sub ebp eax
add ecx eax
mov edi [ esp + 0x28 ]
mov edx [ esp ]
test edi edi
je r-xdata
mov [ esp + 0x4 ] eax
push [ edi ]
call sub_45d970
add esp 0x4
test eax eax
je r-xdata
add edx eax
cmp [ esp + 0x2c ] 0x1
mov edi 0xffffffff
jne r-xdata
lea ecx [ edx + 0x2 ]
mov [ edi ] ecx
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x2 ]
mov [ esi + 0x4 ] ecx
sub edx ebx
mov edi edx
jmp r-xdata
sub ebp eax
lea eax [ esi + 0xc ]
test esi esi
cmove eax esi
push eax
push ebp
push edx
mov esi edx
call sub_45d990
add esp 0xc
test eax eax
js r-xdata
add esi eax
mov edx esi
sub_469df3
push ebp
push ebx
push edi
push esi
push eax
mov ebp [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
xor eax eax
mov ecx [ ebp + 0x4 ]
lea edx [ esi + 0x4 ]
cmp ecx edx
jl r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x18 ]
add ecx ebx
sub ecx esi
push esi
push ebx
push ecx
call sub_49a770
add esp 0xc
mov [ ebx ] 0x200
mov ecx 0x4
mov eax [ ebp + 0x4 ]
sub eax esi
cmp eax ecx
jl r-xdata
dec eax
mov edi 0x2
push [ esp ]
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
xor eax eax
inc eax
dec ebp
xor esi esi
dec esi
call sub_469c4e
test al al
mov [ ebx + edi ] al
je r-xdata
mov eax [ ebp + 0x4 ]
inc edi
sub eax esi
dec eax
cmp edi eax
jl r-xdata
push ebp
push edi
call sub_45da64
add esp 0x8
dec ebp
mov [ ebx ] al
inc ebx
cmp ebp esi
jne r-xdata
jmp r-xdata
mov [ ebx + eax ] 0x0
push [ ebp + 0x4 ]
push ebx
call sub_45d5e4
add esp 0x8
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esp + 0x8 ] eax
push eax
call sub_45c5e9
add esp 0xc
mov ebp [ ebp + 0x4 ]
mov edi eax
test ebp ebp
je r-xdata
sub_469eb6
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x30 ]
push ebp
call sub_45b8e2
add esp 0x4
mov edi eax
push edi
call sub_45d5bd
add esp 0x4
push [ esp + 0x3c ]
call sub_45b8e2
add esp 0x4
mov esi eax
push esi
call sub_45d5bd
add esp 0x4
mov [ esp + 0x14 ] edi
push edi
push ebx
call sub_45be66
add esp 0x8
mov edi eax
mov [ esp + 0x10 ] esi
push esi
push ebx
call sub_45be66
add esp 0x8
mov esi eax
push ebp
mov [ esp + 0x10 ] edi
push edi
mov edi [ esp + 0x44 ]
mov ebp [ esp + 0x34 ]
push ebp
call sub_45c5e9
add esp 0xc
mov ebx eax
push edi
mov [ esp + 0xc ] esi
push esi
push ebp
call sub_45c5e9
add esp 0xc
mov ebp eax
push ebp
push ebx
call sub_45d3b9
add esp 0x8
test eax eax
jns r-xdata
push ebp
push ebx
call sub_45d490
add esp 0x8
mov esi eax
mov [ esp ] esi
push edi
push [ esp + 0x44 ]
call sub_45d823
add esp 0x8
mov edi eax
push ebp
push esi
push edi
call sub_45dd54
add esp 0xc
mov esi eax
push [ esp + 0x34 ]
push esi
call sub_45be66
add esp 0x8
mov [ esp + 0x4 ] eax
push [ esp + 0x14 ]
call sub_45b91a
add esp 0x4
push [ esp + 0x10 ]
call sub_45b91a
add esp 0x4
push [ esp + 0xc ]
call sub_45b91a
add esp 0x4
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
push ebp
call sub_45b91a
add esp 0x4
push [ esp ]
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
push esi
call sub_45b91a
add esp 0x4
mov eax [ esp + 0x4 ]
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esp + 0x38 ]
push ebx
call sub_45d53d
add esp 0x8
mov esi eax
push ebx
call sub_45b91a
add esp 0x4
mov ebx esi
sub_46a016
push ebp
push ebx
push edi
push esi
sub esp 0x12c
mov [ esp ] edx
mov [ esp + 0x4 ] ecx
mov esi 0x40
mov eax [ rw-data ]
mov [ esp + 0x128 ] eax
mov [ esp + 0x8 ] 0x0
jmp r-xdata
mov eax [ esp ]
push [ eax + 0x8 ]
call sub_45b8e2
add esp 0x4
mov edi eax
push edi
call sub_45d970
add esp 0x4
mov ebx eax
mov [ esp + 0xc ] edi
test ebx ebx
je r-xdata
mov edi [ esp + 0xc ]
push edi
call sub_45b8c8
add esp 0x4
push [ rw-data ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
jle r-xdata
dec ebx
xor edi edi
xor ebp ebp
push edi
jmp r-xdata
mov eax [ esp ]
push [ eax + 0x8 ]
push edi
call sub_45d3b9
add esp 0x8
test eax eax
js r-xdata
mov eax ebp
sar ebp 0x1
dec edi
and eax 0x1
push eax
push ebx
push [ esp + 0x14 ]
call sub_45b9c6
add esp 0xc
dec ebx
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
cmp esi 0x40
jb r-xdata
call sub_45b91a
add esp 0x4
mov eax [ esp ]
push [ eax + 0x8 ]
push edi
call sub_45cb53
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
test edi edi
jg r-xdata
movzx ebp [ esp + esi + 0x14 ]
inc esi
mov edi 0x8
mov ecx [ esp + 0x8 ]
lea esi [ esp + 0x54 ]
mov eax ecx
mov ebp ecx
shr eax 0x18
mov [ esp + 0x10 ] al
mov eax ecx
shr eax 0x10
mov [ esp + 0x11 ] al
mov [ esp + 0x12 ] ch
mov [ esp + 0x13 ] cl
push esi
call sub_46c2fc
add esp 0x4
push 0x1a
push r--data
push esi
call sub_46c333
add esp 0xc
push 0x4
lea eax [ esp + 0x14 ]
push eax
push esi
call sub_46c333
add esp 0xc
mov eax [ esp ]
mov ecx esi
mov edx [ eax + 0x10 ]
call sub_46b792
lea eax [ esp + 0x14 ]
mov edi eax
push edi
push esi
call sub_46d24e
add esp 0x8
inc ebp
mov [ esp + 0x8 ] ebp
push esi
call sub_46c2fc
add esp 0x4
push 0x40
push edi
push esi
call sub_46c333
add esp 0xc
mov edx [ esp + 0x4 ]
mov ecx esi
call sub_46b792
push edi
push esi
call sub_46d24e
add esp 0x8
xor esi esi
push edi
mov esi [ esp ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
push [ esi + 0x14 ]
push [ esi + 0x8 ]
push [ esi + 0xc ]
push edi
call sub_469eb6
add esp 0x18
mov [ esp + 0x8 ] eax
push [ esi + 0x8 ]
push eax
push [ esp + 0xc ]
call sub_45cea6
add esp 0xc
mov [ esp + 0x4 ] eax
push [ esi + 0x1c ]
push [ esi + 0x18 ]
push [ esi + 0x14 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
push eax
call sub_469eb6
add esp 0x18
mov ebp eax
push [ esi + 0x8 ]
push ebx
push ebp
call sub_45cea6
add esp 0xc
mov esi eax
push ebp
call sub_45b91a
add esp 0x4
push [ esp + 0x4 ]
call sub_45b91a
add esp 0x4
push ebx
call sub_45b91a
add esp 0x4
push [ esp + 0x8 ]
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x4
mov ecx [ esp + 0x128 ]
call sub_497c4a
mov eax esi
add esp 0x12c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46a24a
push edi
push esi
mov eax [ esp + 0xc ]
mov esi [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0xf ]
sar ecx 0x1f
shr ecx 0x1c
lea edi [ eax + ecx + 0xf ]
sar edi 0x4
push esi
call sub_45d970
add esp 0x4
lea ecx [ eax + 0xf ]
sar ecx 0x1f
shr ecx 0x1c
lea eax [ eax + ecx + 0xf ]
sar eax 0x4
add eax edi
lea eax [ eax * 4 + 0x14 ]
pop esi
pop edi
retn
sub_46a293
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
mov [ edi + 0x2 ] 0x0
mov [ edi ] 0x7830
push esi
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
mov [ esp + 0x4 ] ebx
sar ecx 0x1f
shr ecx 0x1e
lea eax [ eax + ecx + 0x3 ]
sar eax 0x2
xor ebp ebp
inc ebp
test eax eax
cmovle eax ebp
test eax eax
je r-xdata
mov esi 0x2
mov eax ebx
mov [ esp + 0x8 ] esi
lea esi [ eax - 0x1 ]
lea edi [ edi + 0x2 ]
mov [ esp ] eax
mov [ edi + ebx ] 0x0
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
add esi ebp
dec ebp
add ebx edi
mov [ esp ] esi
mov esi [ esp + 0x4 ]
mov eax esi
shr eax 0x1f
add eax esi
mov ebx eax
sar eax 0x1
and ebx 0x3e
push eax
push [ esp + 0xc ]
call sub_45da64
add esp 0x8
mov ecx esi
dec esi
sub ecx ebx
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ edi ] al
inc edi
xor eax eax
dec eax
cmp esi eax
jne r-xdata
mov esi [ esp ]
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x4 ]
add esi 0x2
jmp r-xdata
mov eax ebp
shr eax 0x1f
add eax ebp
mov edi eax
sar eax 0x1
and edi 0x3e
push eax
push esi
call sub_45da64
add esp 0x8
mov ecx ebp
dec ebp
sub ecx edi
shl cl 0x2
sar eax cl
and eax 0xf
mov al [ eax + r--data ]
mov [ ebx ] al
inc ebx
xor eax eax
dec eax
cmp ebp eax
jne r-xdata
mov ebx [ esp ]
mov edi [ esp + 0x20 ]
add ebx 0x3
lea ebx [ esi + 0x3 ]
mov [ edi + esi ] 0x78302c
push eax
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x3 ]
sar ecx 0x1f
shr ecx 0x1e
lea eax [ eax + ecx + 0x3 ]
sar eax 0x2
test eax eax
cmovg ebp eax
test ebp ebp
je r-xdata
sub_46a3b9
push ebp
push ebx
push edi
push esi
sub esp 0xc8
mov eax [ rw-data ]
mov esi [ esp + 0xe4 ]
lea ebp [ esp + 0x68 ]
mov [ esp + 0xc4 ] eax
push ebp
call sub_466c84
add esp 0x4
push [ esi + 0x8 ]
call sub_45d9f4
add esp 0x4
mov esi eax
cmp esi 0x2
je r-xdata
mov eax [ esp + 0xe4 ]
push [ eax + 0xc ]
call sub_45d9f4
add esp 0x4
mov esi eax
cmp esi 0x2
je r-xdata
add esi 0xfffffffd
xor edi edi
mov ebx esp
dec edi
lea eax [ esp + 0x58 ]
push ebp
push eax
call sub_4674df
add esp 0x8
mov eax [ esp + 0xe4 ]
push [ eax + 0x8 ]
call sub_45d970
add esp 0x4
mov ecx esp
push eax
push r--data
push ecx
call sub_432778
add esp 0xc
xor ebx ebx
mov esi r--data
add esi 0xfffffffd
xor edi edi
mov ebx esp
dec edi
push esi
mov eax [ esp + 0xe8 ]
push [ eax + 0x8 ]
call sub_45da64
add esp 0x8
mov [ esp ] al
push 0x1
push ebx
push ebp
call sub_466c9e
add esp 0xc
dec esi
cmp esi edi
jne r-xdata
movzx edi [ esp + ebx + 0x58 ]
mov eax esp
test ebx ebx
mov ebp r--data
cmovne ebp esi
push eax
call sub_4a7f30
add esp 0x4
lea eax [ esp + eax ]
push edi
push ebp
push r--data
push eax
call sub_432778
add esp 0x10
inc ebx
cmp ebx 0x10
jne r-xdata
mov edi [ esp + 0xe0 ]
push edi
lea eax [ esp + 0x4 ]
push eax
mov ebx [ esp + 0xe4 ]
push ebx
call sub_4a8040
add esp 0xc
mov [ ebx + edi - 0x1 ] 0x0
dec edi
push ebx
call sub_4a7f30
add esp 0x4
mov esi [ esp + 0xe4 ]
mov ecx edi
sub ecx eax
jle r-xdata
push esi
mov eax [ esp + 0xe8 ]
push [ eax + 0xc ]
call sub_45da64
add esp 0x8
mov [ esp ] al
push 0x1
push ebx
push ebp
call sub_466c9e
add esp 0xc
dec esi
cmp esi edi
jne r-xdata
mov ecx [ esp + 0xc4 ]
call sub_497c4a
add esp 0xc8
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ esi + 0x20 ]
test edx edx
je r-xdata
mov [ ebx + eax ] 0x20
lea eax [ ebx + eax + 0x1 ]
push ecx
push [ esi + 0x20 ]
push eax
call sub_4a8040
add esp 0xc
mov [ ebx + edi ] 0x0
sub_46a547
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_45d823
add esp 0x8
mov esi eax
push [ ebp + 0x8 ]
push esi
call sub_45d3b9
add esp 0x8
mov edi eax
push esi
call sub_45b91a
add esp 0x4
xor ebx ebx
test edi edi
jne r-xdata
mov eax ebx
pop esi
pop edi
pop ebx
pop ebp
retn
push [ ebp + 0x14 ]
call sub_45b8e2
add esp 0x4
mov esi eax
push esi
call sub_45d5bd
add esp 0x4
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_45cea6
add esp 0xc
mov edi eax
push esi
call sub_45b91a
add esp 0x4
push [ rw-data ]
push edi
call sub_45d3b9
add esp 0x8
mov esi eax
push edi
call sub_45b91a
add esp 0x4
test esi esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_45b8e2
add esp 0x4
mov esi eax
push esi
call sub_45d5bd
add esp 0x4
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_45cea6
add esp 0xc
mov edi eax
push esi
call sub_45b91a
add esp 0x4
push [ rw-data ]
push edi
call sub_45d3b9
add esp 0x8
mov esi eax
push edi
call sub_45b91a
add esp 0x4
test esi esi
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_45d3b9
add esp 0x8
test eax eax
jle r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp + 0x14 ] ecx
mov [ ebp + 0x18 ] eax
push [ ebp + 0x1c ]
call sub_45b91a
add esp 0x4
push [ ebp + 0x14 ]
push [ ebp + 0x18 ]
call sub_45cb53
add esp 0x8
test eax eax
mov [ ebp + 0x1c ] eax
je r-xdata
mov eax [ ebp + 0x1c ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x18 ]
push eax
call sub_45cea6
add esp 0xc
mov esi eax
push [ rw-data ]
push esi
call sub_45d3b9
add esp 0x8
mov edi eax
push esi
call sub_45b91a
add esp 0x4
xor ebx ebx
test edi edi
sete bl
sub_46a69c
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
push [ ebx + 0x8 ]
call sub_45d9f4
add esp 0x4
mov esi eax
push [ ebx + 0xc ]
call sub_45d9f4
add esp 0x4
lea ebp [ esi + eax + 0x4 ]
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov esi eax
push [ ebx + 0x8 ]
call sub_45d970
add esp 0x4
shr eax 0x18
mov [ esi ] al
push [ ebx + 0x8 ]
call sub_45d970
add esp 0x4
shr eax 0x10
mov [ esi + 0x1 ] al
push [ ebx + 0x8 ]
call sub_45d970
add esp 0x4
mov [ esi + 0x2 ] ah
push [ ebx + 0x8 ]
call sub_45d970
add esp 0x4
mov [ esi + 0x3 ] al
lea eax [ esi + 0x4 ]
push [ ebx + 0xc ]
push eax
call sub_45daba
add esp 0x8
lea eax [ esi + eax + 0x4 ]
push [ ebx + 0x8 ]
push eax
call sub_45daba
add esp 0x8
mov [ edi ] ebp
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46a736
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_45b91a
add esp 0x4
pop esi
retn
push eax
call sub_43f9d4
add esp 0x4
sub_46a7ad
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x24
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov eax esp
lea edi [ esp + 0x4 ]
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x24 ]
push eax
push edi
call sub_46b830
add esp 0x8
mov eax [ edi ]
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
xor edi edi
cmp [ esp ] 0x7
jne r-xdata
push 0x7
push r--data
push eax
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
lea edi [ esp + 0x20 ]
lea ebx [ esp + 0x24 ]
mov ecx edi
mov edx ebx
call sub_46b883
mov ecx edi
mov edx ebx
mov [ esi + 0xc ] eax
call sub_46b883
xor edi edi
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
cmp [ esi + 0xc ] edi
je r-xdata
push esi
call sub_46a736
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax edi
add esp 0xc
pop esi
pop edi
pop ebx
retn
mov edi esi
jmp r-xdata
sub_46a882
push edi
push esi
mov edi [ esp + 0xc ]
push edi
call sub_46a24a
add esp 0x4
push 0x1
push eax
call sub_43f807
add esp 0x8
mov esi eax
push edi
push esi
call sub_46a293
add esp 0x8
mov eax esi
pop esi
pop edi
retn
sub_46a8ad
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov ebp [ esp + 0x28 ]
push [ ebp + 0xc ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp ] eax
sar ecx 0x1f
shr ecx 0x1d
lea ebx [ eax + ecx + 0x8 ]
sar ebx 0x3
push [ ebp + 0x8 ]
call sub_45d970
add esp 0x4
mov esi eax
lea eax [ esi + 0x8 ]
sar eax 0x1f
shr eax 0x1d
lea eax [ esi + eax + 0x8 ]
sar eax 0x3
mov [ esp + 0xc ] eax
lea eax [ ebx + eax + 0x13 ]
push 0x1
mov [ esp + 0x14 ] eax
push eax
call sub_43f807
add esp 0x8
mov ecx ebx
mov [ eax ] 0x7000000
mov [ eax + 0xa ] 0x61
mov [ eax + 0x8 ] 0x7372
mov [ eax + 0x4 ] 0x2d687373
lea edi [ eax + 0xf ]
shr ecx 0x18
mov [ eax + 0xb ] cl
mov ecx ebx
shr ecx 0x10
mov [ eax + 0xc ] cl
mov [ eax + 0xd ] bh
mov [ eax + 0xe ] bl
mov [ esp + 0x4 ] eax
cmp [ esp ] 0xfffffff0
ja r-xdata
mov ecx [ esp + 0xc ]
lea ebx [ edi + 0x4 ]
mov eax ecx
shr eax 0x18
mov [ edi ] al
mov eax ecx
shr eax 0x10
cmp esi 0xfffffff0
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] ch
mov [ edi + 0x3 ] cl
ja r-xdata
lea eax [ ebx + 0xf ]
mov [ esp ] esi
dec ebx
xor esi esi
dec esi
mov [ esp + 0x8 ] eax
mov ebp [ esp + 0x4 ]
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x2c ]
mov eax ebp
add eax edi
cmp ebx eax
je r-xdata
lea eax [ ecx + 0x4 ]
dec ecx
mov [ esp ] eax
push ebx
push [ ebp + 0xc ]
call sub_45da64
add esp 0x8
dec ebx
mov [ edi ] al
inc edi
cmp ebx esi
jne r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esp ]
add edi [ esp + 0x4 ]
mov [ esi ] edi
mov eax ebp
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x284
push r--data
push r--data
call sub_4a509d
add esp 0xc
push ecx
push [ ebp + 0x8 ]
mov esi ebp
mov ebp ecx
call sub_45da64
mov ecx ebp
mov ebp esi
add esp 0x8
mov [ ebx ] al
inc ebx
dec ecx
xor eax eax
dec eax
cmp ecx eax
jne r-xdata
add edi [ esp ]
mov ebx edi
sub_46a9f4
push ebp
push ebx
push edi
push esi
sub esp 0x24
mov ebp [ esp + 0x38 ]
push [ ebp + 0x10 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0x8 ] eax
sar ecx 0x1f
shr ecx 0x1d
lea ebx [ eax + ecx + 0x8 ]
sar ebx 0x3
push [ ebp + 0x14 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0xc ] eax
sar ecx 0x1f
shr ecx 0x1d
lea edi [ eax + ecx + 0x8 ]
sar edi 0x3
push [ ebp + 0x18 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0x18 ] eax
sar ecx 0x1f
shr ecx 0x1d
lea esi [ eax + ecx + 0x8 ]
sar esi 0x3
push [ ebp + 0x1c ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x8 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x4 ] esi
sar ecx 0x1f
shr ecx 0x1d
lea ecx [ eax + ecx + 0x8 ]
lea eax [ ebx + edi ]
sar ecx 0x3
add eax esi
mov [ esp ] ecx
lea eax [ ecx + eax + 0x10 ]
push 0x1
mov [ esp + 0x24 ] eax
push eax
call sub_43f807
add esp 0x8
mov ecx ebx
lea esi [ eax + 0x4 ]
shr ecx 0x18
mov [ eax ] cl
mov ecx ebx
shr ecx 0x10
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bh
mov [ eax + 0x3 ] bl
mov [ esp + 0x10 ] eax
cmp [ esp + 0x8 ] 0xfffffff0
ja r-xdata
mov ebx [ esp + 0x14 ]
lea edi [ esi + 0x4 ]
mov eax ebx
shr eax 0x18
mov [ esi ] al
mov eax ebx
shr eax 0x10
mov [ esi + 0x1 ] al
mov [ esi + 0x2 ] bh
mov [ esi + 0x3 ] bl
cmp [ esp + 0xc ] 0xfffffff0
ja r-xdata
lea eax [ ebx + 0x4 ]
dec ebx
xor edi edi
dec edi
mov [ esp + 0x8 ] eax
mov ebx [ esp + 0x4 ]
mov ecx [ esp ]
lea esi [ edi + 0x4 ]
mov eax ebx
shr eax 0x18
mov [ edi ] al
mov eax ebx
shr eax 0x10
mov [ edi + 0x1 ] al
mov [ edi + 0x2 ] bh
mov [ edi + 0x3 ] bl
cmp [ esp + 0x18 ] 0xfffffff0
ja r-xdata
lea eax [ ebx + 0x4 ]
dec ebx
mov [ esp + 0xc ] eax
push ebx
push [ ebp + 0x10 ]
call sub_45da64
add esp 0x8
dec ebx
mov [ esi ] al
inc esi
cmp ebx edi
jne r-xdata
mov esi [ esp + 0x8 ]
add esi [ esp + 0x10 ]
mov eax ecx
lea edi [ esi + 0x4 ]
shr eax 0x18
mov [ esi ] al
mov eax ecx
shr eax 0x10
mov [ esi + 0x1 ] al
mov [ esi + 0x2 ] ch
mov [ esi + 0x3 ] cl
cmp [ esp + 0x1c ] 0xfffffff0
ja r-xdata
lea eax [ ebx + 0x4 ]
dec ebx
mov [ esp + 0x4 ] eax
push ebx
push [ ebp + 0x14 ]
call sub_45da64
add esp 0x8
mov [ edi ] al
inc edi
dec ebx
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
add esi [ esp + 0xc ]
mov edi esi
mov ebp [ esp + 0x10 ]
mov ebx [ esp + 0x20 ]
mov esi [ esp + 0x3c ]
mov eax ebp
add eax ebx
cmp edi eax
je r-xdata
lea eax [ ecx + 0x4 ]
dec ecx
mov [ esp ] eax
push ebx
push [ ebp + 0x18 ]
call sub_45da64
add esp 0x8
mov [ esi ] al
inc esi
dec ebx
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
add edi [ esp + 0x4 ]
mov ecx [ esp ]
mov esi edi
mov [ esi ] ebx
mov eax ebp
add esp 0x24
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x2ac
push r--data
push r--data
call sub_4a509d
add esp 0xc
push ecx
push [ ebp + 0x1c ]
mov ebx ebp
mov ebp ecx
call sub_45da64
mov ecx ebp
mov ebp ebx
add esp 0x8
mov [ edi ] al
inc edi
dec ecx
xor eax eax
dec eax
cmp ecx eax
jne r-xdata
add esi [ esp ]
mov edi esi
sub_46abff
push ebx
push edi
push esi
sub esp 0x8
mov edi [ rw-data ]
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ esp + 0x4 ] edi
mov edi esp
mov [ edi ] esi
push edx
push ecx
push eax
call sub_46a7ad
add esp 0xc
lea ebx [ esp + 0x28 ]
mov ecx edi
mov esi eax
mov edx ebx
call sub_46b883
mov ecx edi
mov edx ebx
mov [ esi + 0x10 ] eax
call sub_46b883
mov ecx edi
mov edx ebx
mov [ esi + 0x14 ] eax
call sub_46b883
mov ecx edi
mov edx ebx
mov [ esi + 0x18 ] eax
call sub_46b883
mov [ esi + 0x1c ] eax
push esi
call sub_46a547
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
retn
push esi
call sub_46a736
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
sub_46ac97
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
push 0x24
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor edi edi
mov ecx ebx
mov edx ebp
mov [ esi + 0x20 ] edi
call sub_46b883
mov ecx ebx
mov edx ebp
mov [ esi + 0x8 ] eax
call sub_46b883
mov ecx ebx
mov edx ebp
mov [ esi + 0xc ] eax
call sub_46b883
mov ecx ebx
mov edx ebp
mov [ esi + 0x10 ] eax
call sub_46b883
mov ecx ebx
mov edx ebp
mov [ esi + 0x1c ] eax
call sub_46b883
mov ecx ebx
mov edx ebp
mov [ esi + 0x14 ] eax
call sub_46b883
mov [ esi + 0x18 ] eax
cmp [ esi + 0x8 ] edi
je r-xdata
push esi
call sub_46a736
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push esi
call sub_46a547
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_46a736
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
xor edi edi
jmp r-xdata
mov edi esi
jmp r-xdata
mov eax edi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46ad60
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebx [ esp + 0x1c ]
push [ ebx + 0x8 ]
call sub_45da2c
add esp 0x4
mov esi eax
push [ ebx + 0xc ]
call sub_45da2c
add esp 0x4
mov edi eax
add edi esi
push [ ebx + 0x10 ]
call sub_45da2c
add esp 0x4
mov esi eax
add esi edi
push [ ebx + 0x1c ]
call sub_45da2c
add esp 0x4
mov edi eax
add edi esi
push [ ebx + 0x14 ]
call sub_45da2c
add esp 0x4
mov esi eax
add esi edi
push [ ebx + 0x18 ]
call sub_45da2c
add esp 0x4
mov edi eax
add edi esi
cmp edi [ esp + 0x24 ]
jg r-xdata
mov eax edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp [ esp + 0x20 ]
push [ ebx + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebp ] al
push [ ebx + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebp + 0x1 ] al
push [ ebx + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebp + 0x2 ] ah
push [ ebx + 0x8 ]
call sub_45da2c
add esp 0x4
add eax 0xfc
mov [ ebp + 0x3 ] al
push [ ebx + 0x8 ]
call sub_45da2c
add esp 0x4
cmp eax 0x4
mov esi 0x4
je r-xdata
push [ ebx + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebp + esi ] al
push [ ebx + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebp + esi + 0x1 ] al
push [ ebx + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebp + esi + 0x2 ] ah
push [ ebx + 0xc ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea edi [ esi + 0x4 ]
mov [ ebp + esi + 0x3 ] al
push [ ebx + 0xc ]
call sub_45da2c
add esp 0x4
mov ecx eax
mov edx 0x4
cmp ecx edx
je r-xdata
mov edi eax
mov [ esp ] eax
mov eax ebp
mov ebp ebx
add edi 0xfffffffb
xor esi esi
lea ebx [ eax + 0x4 ]
dec esi
push [ ebx + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebp + edi ] al
push [ ebx + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebp + edi + 0x1 ] al
push [ ebx + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebp + edi + 0x2 ] ah
push [ ebx + 0x10 ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea esi [ edi + 0x4 ]
mov [ ebp + edi + 0x3 ] al
push [ ebx + 0x10 ]
call sub_45da2c
add esp 0x4
mov ecx 0x4
cmp eax ecx
je r-xdata
add edi ebp
mov ebp ebx
xor ebx ebx
mov [ esp ] esi
lea esi [ ecx - 0x5 ]
mov [ esp + 0x4 ] ecx
dec ebx
push edi
push [ ebp + 0x8 ]
call sub_45da64
add esp 0x8
dec edi
mov [ ebx ] al
inc ebx
cmp edi esi
jne r-xdata
mov ebx ebp
mov esi [ esp ]
mov ebp [ esp + 0x20 ]
push [ ebx + 0x1c ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebp + esi ] al
push [ ebx + 0x1c ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebp + esi + 0x1 ] al
push [ ebx + 0x1c ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebp + esi + 0x2 ] ah
push [ ebx + 0x1c ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea edi [ esi + 0x4 ]
mov [ ebp + esi + 0x3 ] al
push [ ebx + 0x1c ]
call sub_45da2c
add esp 0x4
mov ecx eax
mov edx 0x4
cmp ecx edx
je r-xdata
mov ecx ebp
mov ebp ebx
lea ebx [ eax - 0x5 ]
mov [ esp ] eax
add esi ecx
push esi
push [ ebp + 0xc ]
call sub_45da64
add esp 0x8
dec esi
mov [ edi ] al
inc edi
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x4 ]
mov ebx ebp
mov ebp [ esp + 0x20 ]
add eax [ esp ]
mov edi eax
push [ ebx + 0x14 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebp + edi ] al
push [ ebx + 0x14 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebp + edi + 0x1 ] al
push [ ebx + 0x14 ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebp + edi + 0x2 ] ah
push [ ebx + 0x14 ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea esi [ edi + 0x4 ]
mov [ ebp + edi + 0x3 ] al
push [ ebx + 0x14 ]
call sub_45da2c
add esp 0x4
mov ecx 0x4
cmp eax ecx
je r-xdata
mov eax ebp
mov ebp ebx
lea ebx [ ecx - 0x5 ]
mov [ esp ] ecx
add edi eax
push ebx
push [ ebp + 0x10 ]
call sub_45da64
add esp 0x8
mov [ esi ] al
dec ebx
inc esi
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
mov esi [ esp ]
mov ebx ebp
mov ebp [ esp + 0x20 ]
add esi edi
push [ ebx + 0x18 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffffc
shr eax 0x18
mov [ ebp + esi ] al
push [ ebx + 0x18 ]
call sub_45da2c
add esp 0x4
add eax 0xfffffc
shr eax 0x10
mov [ ebp + esi + 0x1 ] al
push [ ebx + 0x18 ]
call sub_45da2c
add esp 0x4
add eax 0xfffc
mov [ ebp + esi + 0x2 ] ah
push [ ebx + 0x18 ]
call sub_45da2c
add esp 0x4
add eax 0xfc
lea edi [ esi + 0x4 ]
mov [ ebp + esi + 0x3 ] al
push [ ebx + 0x18 ]
call sub_45da2c
add esp 0x4
mov ecx eax
mov edx 0x4
cmp ecx edx
je r-xdata
mov ecx ebp
mov ebp ebx
lea ebx [ eax - 0x5 ]
mov [ esp ] eax
add esi ecx
push ebx
push [ ebp + 0x1c ]
call sub_45da64
add esp 0x8
mov [ edi ] al
dec ebx
inc edi
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
mov edi [ esp ]
mov ebx ebp
mov ebp [ esp + 0x20 ]
add edi esi
mov eax edi
mov edi ebx
lea ebx [ ecx - 0x5 ]
mov [ esp ] ecx
add ebp eax
push ebx
push [ ebp + 0x14 ]
call sub_45da64
add esp 0x8
mov [ esi ] al
dec ebx
inc esi
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
mov esi [ esp ]
mov ebx ebp
mov ebp [ esp + 0x20 ]
add esi edi
push ebx
push [ edi + 0x18 ]
call sub_45da64
add esp 0x8
mov [ ebp ] al
dec ebx
inc ebp
xor eax eax
dec eax
cmp ebx eax
jne r-xdata
mov edi [ esp ]
add edi esi
sub_46b173
push edi
push esi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_46a7ad
add esp 0xc
mov esi eax
test esi esi
je r-xdata
xor eax eax
dec eax
push [ esi + 0x8 ]
call sub_45d970
add esp 0x4
mov edi eax
push esi
call sub_46a736
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
jmp r-xdata
pop esi
pop edi
retn
sub_46b1b8
push ebp
push ebx
push edi
push esi
sub esp 0x24
mov eax [ rw-data ]
lea esi [ esp + 0x8 ]
lea ecx [ esp + 0x3c ]
lea edx [ esp + 0x40 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x4 ]
push eax
push esi
call sub_46b830
add esp 0x8
mov eax [ esi ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
call sub_497c4a
mov eax ebx
add esp 0x24
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esp + 0x4 ] 0x7
jne r-xdata
push 0x7
push r--data
push eax
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x3c ]
lea edx [ esp + 0x40 ]
call sub_46b883
mov edi eax
test edi edi
je r-xdata
mov ebx [ esp + 0x38 ]
push [ ebx + 0x8 ]
push [ ebx + 0xc ]
push edi
call sub_45c5e9
add esp 0xc
mov esi eax
push edi
call sub_45b91a
add esp 0x4
push [ ebx + 0x8 ]
call sub_45d970
add esp 0x4
mov edi eax
lea eax [ edi + 0x7 ]
sar eax 0x1f
shr eax 0x1d
lea ebp [ edi + eax + 0x7 ]
sar ebp 0x3
lea eax [ ebp - 0x1 ]
push eax
push esi
call sub_45da64
add esp 0x8
mov [ esp ] eax
lea eax [ ebp - 0x2 ]
push eax
push esi
call sub_45da64
add esp 0x8
xor eax 0x1
xor ebx ebx
or eax [ esp ]
sete bl
cmp edi 0x131
jl r-xdata
mov edi 0x23
mov ebp r--data
add ebp 0xfffffffd
xor edi edi
push edi
push esi
call sub_45da64
add esp 0x8
movzx ecx [ ebp ]
cmp eax ecx
mov ecx 0x0
cmovne ebx ecx
dec edi
inc ebp
cmp edi 0x13
jne r-xdata
lea edi [ esp + 0xc ]
push edi
push [ esp + 0x4c ]
push [ esp + 0x4c ]
call sub_46d857
add esp 0xc
mov ebp 0x13
push ebp
push esi
call sub_45da64
add esp 0x8
cmp eax 0xff
cmovne ebx edi
cmp ebp 0x24
lea ebp [ ebp - 0x1 ]
jg r-xdata
push ebp
push esi
call sub_45da64
add esp 0x8
movzx ecx [ edi ]
cmp eax ecx
mov ecx 0x0
cmovne ebx ecx
dec ebp
inc edi
xor ecx ecx
dec ecx
cmp ebp ecx
jne r-xdata
push esi
call sub_45b91a
add esp 0x4
sub_46b331
push ebp
push ebx
push edi
push esi
sub esp 0x20
mov edx [ rw-data ]
mov esi [ esp + 0x34 ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x3c ]
mov [ esp + 0x1c ] edx
lea edx [ esp + 0x8 ]
push edx
push ecx
push eax
call sub_46d857
add esp 0xc
push [ esi + 0x8 ]
call sub_45d970
add esp 0x4
mov ebx eax
lea eax [ ebx - 0x1 ]
sar eax 0x1f
shr eax 0x1d
lea ebp [ ebx + eax - 0x1 ]
sar ebp 0x3
cmp ebx 0x128
lea esi [ ebp - 0x24 ]
jle r-xdata
push 0x36e
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov edi eax
mov [ edi ] 0x1
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov edi eax
cmp ebx 0x131
mov [ edi ] 0x1
jl r-xdata
mov dl [ esp + ecx + 0x1c ]
lea esi [ ebp + ecx + 0x1 ]
mov [ eax + ecx ] dl
inc ecx
cmp esi ebp
jl r-xdata
push ebp
push edi
call sub_45d5e4
add esp 0x8
mov ebx eax
push edi
call sub_43f9d4
add esp 0x4
mov edx [ esp + 0x34 ]
mov ecx ebx
call sub_46a016
mov esi eax
push ebx
call sub_45b91a
add esp 0x4
mov [ esp ] esi
push esi
call sub_45d970
add esp 0x4
mov ebp eax
lea eax [ ebp + 0x7 ]
sar eax 0x1f
shr eax 0x1d
lea ebx [ ebp + eax + 0x7 ]
sar ebx 0x3
lea eax [ ebx + 0xf ]
push 0x1
mov [ esp + 0x8 ] eax
push eax
call sub_43f807
add esp 0x8
mov edi eax
mov eax ebx
shr eax 0x18
mov [ edi ] 0x7000000
mov [ edi + 0xa ] 0x61
mov [ edi + 0x8 ] 0x7372
mov [ edi + 0x4 ] 0x2d687373
mov [ edi + 0xb ] al
mov eax ebx
shr eax 0x10
test ebp ebp
mov [ edi + 0xc ] al
mov [ edi + 0xd ] bh
mov [ edi + 0xe ] bl
jle r-xdata
lea eax [ edi + ebp ]
mov ecx 0xffffffec
mov [ edi + esi + 0xc ] 0x14040005
mov [ edi + esi + 0x8 ] 0x1a02030e
mov [ edi + esi + 0x4 ] 0x2b050609
mov [ edi + esi ] 0x30213000
mov eax edi
mov edx 0x2
inc eax
xor ecx ecx
inc ecx
cmp esi ecx
cmovg edx esi
dec edx
push edx
push 0xff
push eax
call sub_49acf0
add esp 0xc
jmp r-xdata
push [ esp ]
call sub_45b91a
add esp 0x4
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov ecx [ esp + 0x1c ]
call sub_497c4a
mov eax edi
add esp 0x20
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebp [ ebx - 0x1 ]
xor esi esi
push ebp
push [ esp + 0x4 ]
call sub_45da64
add esp 0x8
mov [ edi + esi + 0xf ] al
inc esi
dec ebp
cmp esi ebx
jl r-xdata
sub_46b526
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x38 ]
mov ebp [ esp + 0x34 ]
mov edi [ ecx + 0x14 ]
push [ eax + 0x8 ]
call sub_45d970
add esp 0x4
lea ecx [ eax + 0x7 ]
sar ecx 0x1f
shr ecx 0x1d
lea ebx [ eax + ecx + 0x7 ]
sar ebx 0x3
cmp [ esp + 0x2c ] 0x0
jle r-xdata
push 0x3f3
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ edi + edi ]
mov ecx 0xfffffffe
sub ecx eax
add ecx ebx
cmp ecx [ esp + 0x2c ]
jge r-xdata
mov eax [ esp + 0x2c ]
neg eax
test edi edi
mov [ esp + 0x4 ] eax
mov [ esi ] 0x0
mov [ esp ] edi
jle r-xdata
push 0x3f6
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esp + 0x30 ]
cmp ebx ebp
je r-xdata
mov eax [ esp + 0x24 ]
mov ebx [ esp ]
mov ecx [ eax + 0xc ]
lea edi [ esi + ebx + 0x1 ]
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] ecx
call [ eax ]
push edi
push eax
call [ esp + 0x10 ]
add esp 0x8
lea ecx [ ebx + ebx + 0x1 ]
mov edx ebp
lea eax [ esi + ebx * 2 + 0x1 ]
sub edx ecx
xor ecx ecx
push edx
push ecx
push eax
call sub_49acf0
add esp 0xc
mov eax [ esp + 0x2c ]
mov cl 0x1
mov edx eax
not eax
add eax ebp
mov [ esi + eax ] cl
lea eax [ esi + ebp ]
add eax [ esp + 0x4 ]
push edx
push [ esp + 0x2c ]
push eax
call sub_49a1f0
add esp 0xc
mov edi ebp
mov eax ebx
mov ecx [ esp + 0x24 ]
lea edx [ esi + 0x1 ]
sub edi eax
mov [ esp + 0x4 ] edx
dec edi
push edi
mov ebx [ esp + 0x10 ]
push ebx
push eax
call sub_46b6b8
add esp 0xc
mov ecx [ esp + 0x24 ]
mov edx ebx
push [ esp ]
push [ esp + 0x8 ]
push edi
call sub_46b6b8
add esp 0xc
push ebp
push esi
call sub_45d5e4
add esp 0x8
mov ecx eax
mov eax [ esp + 0x38 ]
push [ eax + 0x8 ]
push [ eax + 0xc ]
mov [ esp + 0x8 ] ecx
push ecx
call sub_45c5e9
add esp 0xc
mov edi eax
test ebp ebp
je r-xdata
mov edi [ esp ]
lea ebx [ esi + 0x1 ]
push [ esp ]
call sub_45b91a
add esp 0x4
push edi
call sub_45b91a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
dec ebp
xor ebx ebx
dec ebx
call sub_469c4e
mov [ ebx ] al
inc ebx
dec edi
jne r-xdata
push ebp
push edi
call sub_45da64
add esp 0x8
dec ebp
mov [ esi ] al
inc esi
cmp ebp ebx
jne r-xdata
sub_46b6b8
push ebp
push ebx
push edi
push esi
sub esp 0x54
mov [ esp ] edx
mov ebp [ esp + 0x70 ]
mov ebx ecx
mov eax [ rw-data ]
test ebp ebp
mov [ esp + 0x50 ] eax
jle r-xdata
mov ecx [ esp + 0x50 ]
call sub_497c4a
add esp 0x54
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x6c ]
xor edx edx
mov eax edx
mov [ esp + 0x4 ] edx
shr eax 0x18
mov [ esp + 0xc ] al
mov eax edx
shr eax 0x10
mov [ esp + 0xd ] al
mov [ esp + 0xe ] dh
mov [ esp + 0xf ] dl
call [ ebx ]
mov edi ebx
mov ebx eax
push [ esp + 0x68 ]
push [ esp + 0x4 ]
push ebx
call [ edi + 0x8 ]
add esp 0xc
push 0x4
lea eax [ esp + 0x10 ]
push eax
push ebx
call [ edi + 0x8 ]
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
push ebx
mov ebx edi
call [ ebx + 0xc ]
add esp 0x8
test ebp ebp
jle r-xdata
push 0x3ba
push r--data
push r--data
mov edi edx
call sub_4a509d
mov edx edi
add esp 0xc
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
add esi ebp
inc edx
sub eax ebp
mov ebp eax
jg r-xdata
xor eax eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x8 ] ebp
cmp ebp eax
cmovg ebp eax
cmp eax 0x41
jl r-xdata
mov cl [ esp + eax + 0x10 ]
xor [ esi + eax ] cl
inc eax
cmp eax ebp
jl r-xdata
sub_46b792
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi edx
mov edi ecx
mov [ esp + 0x4 ] eax
push esi
call sub_45d970
add esp 0x4
mov ebp eax
mov ecx esp
lea eax [ ebp + 0x8 ]
sar eax 0x1f
shr eax 0x1d
lea ebx [ ebp + eax + 0x8 ]
sar ebx 0x3
mov eax ebx
shr eax 0x18
mov [ ecx ] al
mov eax ebx
shr eax 0x10
mov [ ecx + 0x1 ] al
mov [ ecx + 0x2 ] bh
mov [ ecx + 0x3 ] bl
push 0x4
push ecx
push edi
call sub_46c333
add esp 0xc
test ebp ebp
js r-xdata
push 0x4
lea eax [ esp + 0x4 ]
push eax
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
inc ebx
xor ebp ebp
inc ebp
lea eax [ ebx - 0x2 ]
push eax
push esi
call sub_45da64
add esp 0x8
mov [ esp ] al
push ebp
lea eax [ esp + 0x4 ]
push eax
push edi
call sub_46c333
add esp 0xc
dec ebx
cmp ebx ebp
jg r-xdata
sub_46b830
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov esi edx
mov edi ecx
mov [ ebx ] 0x0
cmp [ esi ] 0x4
jl r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov ebp [ esp + 0x18 ]
mov eax [ eax ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
mov [ ebp ] eax
js r-xdata
add [ esi ] 0xfffffffc
mov eax [ edi ]
add eax 0x4
mov [ edi ] eax
mov ecx [ esi ]
cmp ecx [ ebp ]
jl r-xdata
mov [ ebx ] eax
mov eax [ ebp ]
add [ edi ] eax
mov eax [ ebp ]
sub [ esi ] eax
sub_46b883
push esi
sub esp 0xc
mov eax [ rw-data ]
lea esi [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax esp
push eax
push esi
call sub_46b830
add esp 0x8
mov eax [ esi ]
test eax eax
je r-xdata
xor esi esi
push [ esp ]
push eax
call sub_45d5e4
add esp 0x8
mov esi eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
retn
sub_46b8c8
push ebp
push ebx
push edi
push esi
sub esp 0x164
mov eax [ rw-data ]
mov esi [ esp + 0x17c ]
mov ecx 0x10
mov edx 0x10
mov [ esp + 0x160 ] eax
lea eax [ esp + 0x20 ]
mov edi eax
[ edi ] [ esi ]
mov eax [ eax ]
mov esi [ esp + edx * 4 + 0x18 ]
mov ecx [ esp + edx * 4 - 0x1c ]
add eax [ esp + edx * 4 + 0x4 ]
mov edi esi
mov ebx esi
shr esi 0xa
mov ebp ecx
rol edi 0xf
rol ebx 0xd
shr ebp 0x3
xor esi edi
mov edi ecx
xor esi ebx
mov ebx ecx
rol edi 0x19
rol ebx 0xe
xor ebp edi
add eax esi
xor ebp ebx
add eax ebp
mov [ esp + edx * 4 + 0x20 ] eax
inc edx
mov eax ecx
cmp edx 0x40
jne r-xdata
mov eax [ esp + 0x178 ]
mov ecx [ eax + 0x4 ]
mov esi [ eax ]
mov [ esp + 0x8 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x10 ] ecx
mov edx [ eax + 0x18 ]
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x10 ]
mov edi [ eax + 0x14 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0x1c ]
mov eax 0xfffffff8
mov [ esp ] ecx
mov [ esp + 0x18 ] eax
mov eax ecx
mov [ esp + 0x1c ] edi
mov ebp esi
mov ecx [ esp ]
rol eax 0x15
mov [ esp + 0x4 ] ebp
rol ecx 0x7
xor ecx eax
mov eax [ esp ]
rol eax 0x1a
xor ecx eax
mov eax [ esp ]
add ecx edx
mov edx edi
mov edi [ esp + 0x8 ]
and edx [ esp ]
not eax
and eax [ esp + 0xc ]
mov [ esp + 0x8 ] edi
xor eax edx
mov edx ebp
add eax ecx
mov ecx esi
xor edx edi
rol esi 0xa
rol ecx 0x13
and edx [ esp + 0x10 ]
xor esi ecx
mov ecx ebp
rol ecx 0x1e
xor esi ecx
mov ecx ebp
and ecx edi
xor edx ecx
mov ecx [ esp + 0x18 ]
add edx esi
add eax [ ecx * 4 + r--data ]
mov ebp ecx
add eax [ esp + ecx * 4 + 0x40 ]
add ebx eax
add edx eax
mov eax ebx
mov ecx ebx
mov esi ebx
rol eax 0x15
rol ecx 0x7
not esi
xor ecx eax
mov eax ebx
and esi [ esp + 0x1c ]
rol eax 0x1a
xor ecx eax
mov eax ebx
and eax [ esp ]
xor esi eax
mov eax [ esp + 0xc ]
add eax [ ebp * 4 + r--data ]
add eax [ esp + ebp * 4 + 0x44 ]
add eax esi
mov esi edx
mov edx [ esp + 0x4 ]
add eax ecx
mov ecx esi
mov [ esp + 0x14 ] esi
mov ebp eax
mov eax esi
rol ecx 0xa
mov edi [ esp + 0x14 ]
rol eax 0x13
xor ecx eax
mov eax esi
rol eax 0x1e
xor ecx eax
mov eax esi
xor esi edx
and esi [ esp + 0x8 ]
and eax edx
mov edx [ esp + 0x1c ]
xor esi eax
mov eax [ esp + 0x10 ]
add esi ecx
add eax ebp
add ebp esi
mov esi eax
rol eax 0x15
mov [ esp + 0xc ] ebp
mov ecx esi
mov [ esp + 0x10 ] esi
rol ecx 0x7
xor ecx eax
mov eax esi
rol eax 0x1a
xor ecx eax
mov eax esi
not esi
and esi [ esp ]
and eax ebx
xor esi eax
mov eax [ esp + 0x18 ]
add edx [ eax * 4 + r--data ]
add edx [ esp + eax * 4 + 0x48 ]
mov eax ebp
rol eax 0x13
add edx esi
add edx ecx
mov ecx ebp
rol ecx 0xa
xor ecx eax
mov eax ebp
rol eax 0x1e
xor ecx eax
mov eax ebp
xor ebp edi
and ebp [ esp + 0x4 ]
and eax edi
mov edi [ esp + 0x18 ]
xor ebp eax
mov eax [ esp + 0x8 ]
add ebp ecx
add eax edx
add edx ebp
mov ebp [ esp + 0xc ]
mov esi eax
rol eax 0x15
mov ecx esi
mov [ esp + 0x8 ] esi
rol ecx 0x7
xor ecx eax
mov eax esi
rol eax 0x1a
xor ecx eax
mov eax esi
not esi
and eax [ esp + 0x10 ]
and esi ebx
xor esi eax
mov eax [ esp ]
add eax [ edi * 4 + r--data ]
mov [ esp ] eax
mov eax [ esp ]
add eax [ esp + edi * 4 + 0x4c ]
mov edi edx
mov [ esp + 0x1c ] edi
mov [ esp ] eax
add [ esp ] esi
mov eax edx
mov esi edx
add [ esp ] ecx
mov ecx edx
xor esi ebp
rol eax 0x13
rol ecx 0xa
xor ecx eax
mov eax edx
and esi [ esp + 0x14 ]
rol eax 0x1e
xor ecx eax
mov eax edx
and eax ebp
mov ebp [ esp + 0x8 ]
xor esi eax
mov eax [ esp + 0x4 ]
add esi ecx
add eax [ esp ]
add [ esp ] esi
mov esi eax
rol eax 0x15
mov ecx esi
mov [ esp + 0x4 ] esi
rol ecx 0x7
xor ecx eax
mov eax esi
rol eax 0x1a
xor ecx eax
mov eax esi
not esi
and esi [ esp + 0x10 ]
and eax ebp
xor esi eax
mov eax [ esp + 0x18 ]
add ebx [ eax * 4 + r--data ]
add ebx [ esp + eax * 4 + 0x50 ]
add ebx esi
mov esi [ esp ]
mov eax ebx
mov ebx [ esp ]
add eax ecx
mov ecx [ esp ]
rol esi 0xa
xor ebx edx
rol ecx 0x13
and ebx [ esp + 0xc ]
xor esi ecx
mov ecx [ esp ]
rol ecx 0x1e
xor esi ecx
mov ecx [ esp ]
and ecx edx
mov edx [ esp + 0x14 ]
xor ebx ecx
add ebx esi
add ebx eax
add edx eax
mov eax edx
mov ecx edx
mov esi edx
mov [ esp + 0x14 ] edx
rol eax 0x15
rol ecx 0x7
not esi
xor ecx eax
mov eax edx
and esi ebp
mov ebp ebx
rol eax 0x1a
xor ebp [ esp ]
xor ecx eax
mov eax edx
mov edx [ esp + 0x18 ]
and eax [ esp + 0x4 ]
and ebp edi
xor esi eax
mov eax [ esp + edx * 4 + 0x54 ]
add eax [ edx * 4 + r--data ]
mov edx [ esp + 0xc ]
add eax [ esp + 0x10 ]
add eax esi
mov esi ebx
add eax ecx
mov ecx ebx
rol esi 0xa
rol ecx 0x13
add edx eax
xor esi ecx
mov ecx ebx
mov [ esp + 0xc ] edx
rol ecx 0x1e
xor esi ecx
mov ecx ebx
and ecx [ esp ]
xor ebp ecx
mov ecx edx
add ebp esi
rol ecx 0x7
mov esi edx
add ebp eax
mov eax edx
not esi
rol eax 0x15
and esi [ esp + 0x4 ]
mov edi ebp
mov [ esp + 0x10 ] ebp
xor ecx eax
mov eax edx
and edi ebx
rol eax 0x1a
xor ecx eax
mov eax edx
mov edx [ esp + 0x18 ]
and eax [ esp + 0x14 ]
xor esi eax
mov eax [ esp + edx * 4 + 0x58 ]
add eax [ edx * 4 + r--data ]
add eax [ esp + 0x8 ]
add eax esi
mov esi ebp
add eax ecx
mov ecx ebp
rol esi 0x13
rol ecx 0xa
xor ecx esi
mov esi ebp
rol esi 0x1e
xor ecx esi
mov esi [ esp + edx * 4 + 0x5c ]
add esi [ edx * 4 + r--data ]
mov edx ebp
xor edx ebx
mov ebp edx
and ebp [ esp ]
add esi [ esp + 0x4 ]
mov [ esp + 0x4 ] edi
xor ebp edi
mov edi [ esp + 0x1c ]
add ebp ecx
add ebp eax
and edx ebp
mov [ esp + 0x8 ] ebp
add edi eax
xor edx [ esp + 0x4 ]
mov eax edi
mov ecx edi
mov [ esp + 0x1c ] edi
rol eax 0x15
rol ecx 0x7
xor ecx eax
mov eax edi
rol eax 0x1a
xor ecx eax
mov eax edi
mov edi [ esp + 0x1c ]
and eax [ esp + 0xc ]
not edi
and edi [ esp + 0x14 ]
xor edi eax
mov eax ebp
add esi edi
rol eax 0x13
mov edi [ esp + 0x1c ]
add esi ecx
mov ecx ebp
rol ecx 0xa
xor ecx eax
mov eax ebp
mov ebp [ esp + 0x18 ]
rol eax 0x1e
xor ecx eax
add edx ecx
mov ecx [ esp ]
mov eax edx
mov edx [ esp + 0x14 ]
add ebp 0x8
add eax esi
add ecx esi
mov esi eax
mov eax ebp
cmp ebp 0x38
jl r-xdata
movd xmm1 [ esp + 0x10 ]
movd xmm2 [ esp + 0x8 ]
mov eax [ esp + 0x178 ]
movd xmm5 [ esp + 0xc ]
movd xmm3 esi
movd xmm0 ebx
movd xmm4 edx
movd xmm6 edi
movd xmm7 ecx
punpckldq xmm7 xmm6
punpckldq xmm1 xmm0
punpckldq xmm3 xmm2
movdqu xmm0 [ eax ]
movdqu xmm2 [ eax + 0x10 ]
punpckldq xmm5 xmm4
punpcklqdq xmm7 xmm5
punpcklqdq xmm3 xmm1
paddd xmm0 xmm3
paddd xmm7 xmm2
movdqu [ eax ] xmm0
movdqu [ eax + 0x10 ] xmm7
mov ecx [ esp + 0x160 ]
call sub_497c4a
add esp 0x164
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46bd8f
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov edi [ esp + 0x58 ]
mov esi [ esp + 0x60 ]
mov ebx [ esp + 0x5c ]
mov [ esp + 0x40 ] eax
mov eax [ edi + 0x68 ]
add eax esi
mov [ edi + 0x68 ] eax
adc [ edi + 0x64 ] 0x0
mov eax [ edi + 0x60 ]
lea ecx [ eax + esi ]
test eax eax
je r-xdata
cmp ecx 0x40
jl r-xdata
cmp ecx 0x40
jge r-xdata
lea eax [ edi + 0x20 ]
push esi
push ebx
push eax
call sub_49a1f0
add esp 0xc
mov ebp esp
lea eax [ edi + eax + 0x20 ]
push esi
push ebx
push eax
call sub_49a1f0
add esp 0xc
add esi [ edi + 0x60 ]
jmp r-xdata
movdqu xmm0 [ edi + ecx * 4 + 0x20 ]
movdqa xmm3 xmm0
movdqa xmm1 xmm0
movdqa xmm2 xmm0
psrld xmm0 0x18
psrld xmm3 0x10
psrlw xmm2 0x8
pslld xmm1 0x18
pand xmm3 xmm4
pand xmm2 xmm4
pslld xmm3 0x8
pslld xmm2 0x10
por xmm3 xmm1
por xmm0 xmm3
por xmm0 xmm2
movdqu [ esp + ecx * 4 ] xmm0
add ecx 0x4
cmp ecx 0x10
jne r-xdata
sub esi eax
push ebp
push edi
call sub_46b8c8
add esp 0x8
xor eax eax
cmp esi 0x3f
mov [ edi + 0x60 ] 0x0
jg r-xdata
mov [ edi + 0x60 ] esi
mov ecx [ esp + 0x40 ]
call sub_497c4a
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx 0x40
lea ecx [ edi + eax + 0x20 ]
sub edx eax
push edx
push ebx
push ecx
call sub_49a1f0
add esp 0xc
mov ecx [ edi + 0x60 ]
movdqa xmm4 [ r--data ]
mov eax 0x40
sub eax ecx
neg ecx
lea ebx [ ebx + ecx + 0x40 ]
xor ecx ecx
sub_46bea9
push ebp
push ebx
push edi
push esi
sub esp 0x48
mov eax [ rw-data ]
mov edi [ esp + 0x5c ]
mov ecx 0x78
mov ebp 0x38
mov esi [ esp + 0x60 ]
mov [ esp + 0x44 ] eax
mov eax [ edi + 0x60 ]
mov ebx [ edi + 0x64 ]
cmp eax 0x37
cmovg ebp ecx
sub ebp eax
mov eax [ edi + 0x68 ]
mov [ esp ] eax
lea eax [ esp + 0x4 ]
push ebp
push 0x0
push eax
call sub_49acf0
add esp 0xc
lea eax [ esp + 0x4 ]
mov [ eax ] 0x80
push ebp
push eax
mov ebp eax
push edi
call sub_46bd8f
add esp 0xc
mov eax ebx
mov ecx ebp
mov edx [ esp ]
shr eax 0x15
mov [ ecx ] al
mov eax ebx
shr eax 0xd
mov [ ecx + 0x1 ] al
mov eax ebx
shld ebx edx 0x3
shr eax 0x5
mov [ ecx + 0x2 ] al
mov eax edx
mov [ ecx + 0x3 ] bl
shr eax 0x15
mov [ ecx + 0x4 ] al
mov eax edx
shr eax 0xd
mov [ ecx + 0x5 ] al
mov eax edx
shl dl 0x3
shr eax 0x5
mov [ ecx + 0x6 ] al
mov [ ecx + 0x7 ] dl
push 0x8
push ecx
push edi
call sub_46bd8f
add esp 0xc
xor eax eax
mov cl [ edi + eax * 4 + 0x3 ]
mov [ esi + eax * 4 ] cl
mov cl [ edi + eax * 4 + 0x2 ]
mov [ esi + eax * 4 + 0x1 ] cl
mov cl [ edi + eax * 4 + 0x1 ]
mov [ esi + eax * 4 + 0x2 ] cl
mov cl [ edi + eax * 4 ]
mov [ esi + eax * 4 + 0x3 ] cl
inc eax
cmp eax 0x8
jne r-xdata
mov ecx [ esp + 0x44 ]
call sub_497c4a
add esp 0x48
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46bf87
push 0x6c
push 0x1
call sub_43f807
add esp 0x8
movaps xmm0 [ r--data ]
movaps xmm1 [ r--data ]
xor ecx ecx
movups [ eax ] xmm0
movups [ eax + 0x10 ] xmm1
mov [ eax + 0x60 ] ecx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x64 ] ecx
retn
sub_46bfb4
push edi
push esi
mov esi [ esp + 0xc ]
push 0x6c
push 0x1
call sub_43f807
add esp 0x8
mov ecx 0x1b
mov edi eax
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_46c030
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov edi [ esp + 0x5c ]
mov esi [ esp + 0x58 ]
lea ebp [ esp + 0x1 ]
mov [ esp + 0x40 ] eax
push 0x3f
push 0x36
push ebp
call sub_49acf0
add esp 0xc
mov al [ edi ]
xor al 0x36
mov [ ebp - 0x1 ] al
xor eax eax
inc eax
mov cl [ edi + eax ]
xor [ esp + eax ] cl
inc eax
cmp eax 0x20
jne r-xdata
movaps xmm0 [ r--data ]
movaps xmm1 [ r--data ]
xor eax eax
mov ebx esp
movups [ esi ] xmm0
movups [ esi + 0x10 ] xmm1
mov [ esi + 0x60 ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x64 ] eax
push 0x40
push ebx
push esi
call sub_46bd8f
add esp 0xc
push 0x3f
push 0x5c
push ebp
call sub_49acf0
add esp 0xc
mov al [ edi ]
xor al 0x5c
mov [ ebx ] al
xor eax eax
inc eax
mov cl [ edi + eax ]
xor [ esp + eax ] cl
inc eax
cmp eax 0x20
jne r-xdata
movaps xmm0 [ r--data ]
movaps xmm1 [ r--data ]
xor eax eax
movups [ esi + 0x6c ] xmm0
movups [ esi + 0x7c ] xmm1
mov [ esi + 0xcc ] eax
mov [ esi + 0xd4 ] eax
mov [ esi + 0xd0 ] eax
lea eax [ esi + 0x6c ]
mov esi 0x40
push esi
push ebx
push eax
call sub_46bd8f
add esp 0xc
push esi
push ebx
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x40 ]
call sub_497c4a
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46c137
push ebx
push edi
push esi
sub esp 0x24
mov edx [ rw-data ]
mov esi [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
mov edi [ esp + 0x3c ]
mov eax [ esp + 0x40 ]
mov ebx esp
mov [ esp + 0x20 ] edx
mov edx esi
push ebx
push eax
push edi
call sub_46c27c
add esp 0xc
add esi edi
push 0x20
push esi
push ebx
call sub_440320
add esp 0xc
mov ecx [ esp + 0x20 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x24
pop esi
pop edi
pop ebx
retn
sub_46c1b9
push ebp
push ebx
push edi
push esi
sub esp 0x90
mov eax [ rw-data ]
mov ebx [ esp + 0xa4 ]
lea ebp [ esp + 0x20 ]
mov ecx 0x1b
mov edi ebp
mov [ esp + 0x8c ] eax
lea esi [ ebx + 0xd8 ]
mov eax esp
[ edi ] [ esi ]
push eax
push ebp
call sub_46bea9
add esp 0x8
add ebx 0x6c
mov ecx 0x1b
mov edi ebp
mov esi ebx
[ edi ] [ esi ]
push 0x20
lea eax [ esp + 0x4 ]
push eax
push ebp
call sub_46bd8f
add esp 0xc
push [ esp + 0xa8 ]
push ebp
call sub_46bea9
add esp 0x8
mov ecx [ esp + 0x8c ]
call sub_497c4a
add esp 0x90
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46c23a
push edi
push esi
sub esp 0x24
mov ecx [ rw-data ]
mov esi [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
mov edi esp
mov [ esp + 0x20 ] ecx
push edi
push eax
call sub_46c1b9
add esp 0x8
push 0x20
push esi
push edi
call sub_440320
add esp 0xc
mov ecx [ esp + 0x20 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x24
pop esi
pop edi
retn
sub_46c27c
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov [ esp ] edx
mov ebx ecx
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x4 ]
mov ecx [ rw-data ]
lea ebp [ ebx + 0xd8 ]
mov esi ebx
mov edi ebp
mov [ esp + 0x8 ] ecx
mov ecx eax
shr ecx 0x18
mov [ edx ] cl
mov ecx eax
shr ecx 0x10
mov [ edx + 0x1 ] cl
mov [ edx + 0x2 ] ah
mov [ edx + 0x3 ] al
mov ecx 0x1b
[ edi ] [ esi ]
push 0x4
push edx
push ebp
call sub_46bd8f
add esp 0xc
push [ esp + 0x20 ]
push [ esp + 0x4 ]
push ebp
call sub_46bd8f
add esp 0xc
push [ esp + 0x28 ]
push ebx
call sub_46c1b9
add esp 0x8
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46c2fc
push edi
push esi
mov eax [ esp + 0xc ]
mov ecx 0x10
mov esi r--data
mov edi eax
[ edi ] [ esi ]
xor ecx ecx
mov [ eax + 0xc4 ] ecx
mov [ eax + 0xc0 ] ecx
mov [ eax + 0xcc ] ecx
mov [ eax + 0xc8 ] ecx
mov [ eax + 0xd0 ] ecx
pop esi
pop edi
retn
sub_46c333
push ebp
push ebx
push edi
push esi
sub esp 0x3ec
mov eax [ rw-data ]
mov esi [ esp + 0x408 ]
mov edi [ esp + 0x404 ]
mov ebp [ esp + 0x400 ]
mov [ esp + 0x3e8 ] eax
xor eax eax
mov edx esi
xor ecx ecx
add edx [ ebp + eax * 4 + 0xc4 ]
setb cl
mov [ ebp + eax * 4 + 0xc4 ] edx
inc eax
cmp eax 0x4
mov edx ecx
jne r-xdata
mov eax [ ebp + 0xc0 ]
lea ecx [ eax + esi ]
test eax eax
je r-xdata
cmp ecx 0x80
jl r-xdata
cmp ecx 0x80
jge r-xdata
lea eax [ ebp + 0x40 ]
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
mov edx 0x80
mov [ esp + 0xe0 ] esi
lea ecx [ ebp + eax + 0x40 ]
sub edx eax
push edx
push edi
push ecx
call sub_49a1f0
add esp 0xc
mov eax [ ebp + 0xc0 ]
mov ecx 0x80
sub ecx eax
neg eax
lea edi [ edi + eax + 0x80 ]
xor eax eax
mov [ esp + 0xd8 ] ecx
mov [ esp + 0xdc ] edi
lea eax [ ebp + eax + 0x40 ]
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
add esi [ ebp + 0xc0 ]
jmp r-xdata
movdqu xmm3 [ ebp + eax * 8 + 0x40 ]
movdqu xmm7 [ ebp + eax * 8 + 0x50 ]
movdqa xmm1 [ r--data ]
movdqa xmm6 [ r--data ]
pxor xmm5 xmm5
movdqa xmm0 xmm7
movdqa xmm2 xmm3
movdqa xmm4 xmm3
movdqa xmm3 xmm6
pand xmm0 xmm1
pand xmm2 xmm1
movdqa xmm1 xmm7
movdqu [ esp + 0x30 ] xmm4
packuswb xmm2 xmm0
movdqa xmm0 xmm7
punpckhbw xmm1 xmm5
punpcklbw xmm0 xmm5
movdqu [ esp + 0xb0 ] xmm1
packuswb xmm2 xmm2
movdqu [ esp + 0x60 ] xmm0
punpcklwd xmm0 xmm1
movdqa xmm1 xmm4
packuswb xmm2 xmm2
movdqu [ esp + 0xc0 ] xmm0
packuswb xmm0 xmm0
punpckhbw xmm1 xmm5
pandn xmm3 xmm0
movdqa xmm0 xmm4
pxor xmm4 xmm4
movdqu [ esp + 0xa0 ] xmm1
punpcklbw xmm0 xmm5
movdqa xmm5 xmm0
movdqu [ esp + 0x50 ] xmm0
punpcklwd xmm5 xmm1
pxor xmm1 xmm1
pshufd xmm0 xmm5 0xe5
packuswb xmm0 xmm0
pand xmm0 xmm6
por xmm0 xmm3
movdqa xmm3 xmm6
punpcklbw xmm0 xmm4
movdqa xmm4 [ r--data ]
punpcklwd xmm1 xmm0
movdqu [ esp + 0x90 ] xmm1
pxor xmm1 xmm1
punpcklbw xmm2 xmm1
pand xmm7 xmm4
punpcklwd xmm2 xmm1
pshufd xmm0 xmm7 0xe8
pslld xmm2 0x18
movdqu [ esp + 0x80 ] xmm7
movdqa xmm7 xmm6
pshuflw xmm0 xmm0 0xd4
packuswb xmm0 xmm0
pandn xmm3 xmm0
movdqu xmm0 [ esp + 0x30 ]
pand xmm0 xmm4
movdqa xmm4 xmm6
movdqu [ esp + 0x30 ] xmm0
pshufd xmm0 xmm0 0xe8
pshuflw xmm0 xmm0 0xed
packuswb xmm0 xmm0
pand xmm0 xmm6
por xmm0 xmm3
punpcklbw xmm0 xmm1
punpcklwd xmm0 xmm1
movdqu xmm1 [ esp + 0xc0 ]
pslld xmm0 0x8
por xmm0 xmm2
pshufd xmm2 xmm5 0xe7
movdqu xmm5 [ esp + 0xa0 ]
packuswb xmm2 xmm0
pshufd xmm1 xmm1 0x4e
pand xmm2 xmm6
packuswb xmm1 xmm0
pandn xmm7 xmm1
pxor xmm1 xmm1
por xmm2 xmm7
punpcklbw xmm2 xmm1
punpcklwd xmm2 xmm1
por xmm2 xmm0
movdqu xmm0 [ esp + 0x90 ]
por xmm2 xmm0
movdqu xmm0 [ esp + 0x80 ]
pshufd xmm1 xmm0 0xe7
pshuflw xmm0 xmm1 0x24
pshuflw xmm1 xmm1 0x74
packuswb xmm0 xmm0
pandn xmm4 xmm0
movdqu xmm0 [ esp + 0x30 ]
pshufd xmm7 xmm0 0xe7
pshuflw xmm3 xmm7 0xe2
pshuflw xmm7 xmm7 0xe7
packuswb xmm3 xmm0
movdqu xmm0 [ esp + 0xb0 ]
pand xmm3 xmm6
por xmm3 xmm4
movdqu xmm4 [ esp + 0x60 ]
punpckhwd xmm4 xmm0
movdqa xmm0 xmm4
movdqu [ esp + 0x60 ] xmm4
movdqa xmm4 xmm6
packuswb xmm0 xmm0
pandn xmm4 xmm0
movdqu xmm0 [ esp + 0x50 ]
punpckhwd xmm0 xmm5
pshufd xmm5 xmm0 0xe5
movdqu [ esp + 0x50 ] xmm0
packuswb xmm5 xmm0
pxor xmm0 xmm0
pand xmm5 xmm6
por xmm5 xmm4
movdqa xmm4 xmm6
punpcklbw xmm5 [ r--data ]
punpcklwd xmm0 xmm5
pxor xmm5 xmm5
packuswb xmm7 xmm0
packuswb xmm1 xmm0
punpcklbw xmm3 xmm5
pandn xmm4 xmm1
pand xmm7 xmm6
punpcklwd xmm3 xmm5
por xmm7 xmm4
movdqu xmm4 [ esp + 0x60 ]
pslld xmm3 0x18
punpcklbw xmm7 xmm5
punpcklwd xmm7 xmm5
pxor xmm5 xmm5
pslld xmm7 0x8
pshufd xmm4 xmm4 0x4e
por xmm7 xmm3
movdqa xmm3 xmm6
packuswb xmm4 xmm0
pandn xmm3 xmm4
movdqu xmm4 [ esp + 0x50 ]
pshufd xmm4 xmm4 0xe7
packuswb xmm4 xmm0
pand xmm4 xmm6
por xmm4 xmm3
punpcklbw xmm4 xmm5
punpcklwd xmm4 xmm5
por xmm4 xmm7
por xmm4 xmm0
movdqa xmm0 xmm2
punpckhdq xmm2 xmm4
punpckldq xmm0 xmm4
movdqu [ esp + eax * 8 + 0xf8 ] xmm2
movdqu [ esp + eax * 8 + 0xe8 ] xmm0
add eax 0x4
cmp eax 0x10
jne r-xdata
mov ecx 0x20
lea edi [ esp + 0x168 ]
lea esi [ esp + 0xe8 ]
xor ebx ebx
[ edi ] [ esi ]
mov eax [ esp + 0x168 ]
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x16c ]
mov [ ebp + 0xc0 ] esi
mov ecx [ esp + 0x3e8 ]
call sub_497c4a
add esp 0x3ec
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + ebx * 8 + 0x1d8 ]
mov edi [ esp + ebx * 8 + 0x1dc ]
mov [ esp + 0x30 ] eax
mov edx esi
mov ecx edi
mov ebp esi
mov eax edi
shld edx edi 0xd
shld ebp edi 0x3
shld ecx esi 0x3
shrd edi esi 0x6
shld eax esi 0xd
shr esi 0x6
xor edi ecx
mov ecx [ esp + ebx * 8 + 0x170 ]
xor esi eax
xor edi edx
mov edx [ esp + ebx * 8 + 0x174 ]
xor esi ebp
add esi [ esp + 0x50 ]
mov eax ecx
mov ebp ecx
mov [ esp + 0x50 ] ecx
shld eax edx 0x18
shld ebp edx 0x19
mov [ esp + 0x60 ] edx
xor ebp eax
mov eax ecx
add esi [ esp + ebx * 8 + 0x1b0 ]
shld eax edx 0x1f
xor ebp eax
mov eax edx
mov edx ecx
shld eax ecx 0x1f
shr edx 0x7
xor edx eax
mov eax [ esp + 0x60 ]
shld eax ecx 0x18
xor edx eax
add ebp edi
mov eax [ esp + 0x60 ]
adc esi edx
xor edx edx
add ebp [ esp + ebx * 8 + 0x1b4 ]
setb dl
add ebp [ esp + 0x30 ]
adc edx esi
mov [ esp + ebx * 8 + 0x1ec ] ebp
mov [ esp + ebx * 8 + 0x1e8 ] edx
inc ebx
cmp ebx 0x40
jne r-xdata
mov eax [ esp + 0x400 ]
mov ecx [ eax ]
mov [ esp + 0x8 ] ecx
mov ecx [ eax + 0x4 ]
mov [ esp + 0xa0 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x90 ] ecx
mov ecx [ eax + 0xc ]
mov [ esp + 0xb0 ] ecx
mov ecx [ eax + 0x10 ]
mov [ esp + 0xc ] ecx
mov ecx [ eax + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ eax + 0x18 ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x1c ]
mov [ esp + 0xc0 ] ecx
mov ecx [ eax + 0x28 ]
mov edx [ eax + 0x20 ]
mov esi [ eax + 0x24 ]
mov [ esp + 0x80 ] ecx
mov ecx [ eax + 0x2c ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x30 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax + 0x34 ]
mov [ esp + 0x24 ] ecx
mov edi [ eax + 0x38 ]
mov eax [ eax + 0x3c ]
mov [ esp + 0x60 ] 0xfffffff8
mov [ esp + 0x28 ] eax
mov ebp esi
mov eax edx
mov esi edx
mov ebx edx
mov ecx ebp
shld eax ebp 0xe
shld esi ebp 0x17
mov [ esp + 0x50 ] ebp
mov [ esp + 0x14 ] ebx
shld ecx edx 0x17
xor ecx eax
mov eax edx
shld eax ebp 0x12
xor ecx eax
mov eax ebp
shld eax edx 0xe
xor esi eax
mov eax ebp
shld eax edx 0x12
mov edx [ esp + 0x1c ]
xor esi eax
mov eax ebp
not eax
add esi edi
mov edi [ esp + 0x8 ]
and eax [ esp + 0x24 ]
and edx ebp
mov ebp [ esp + 0x80 ]
xor edx eax
mov eax ebx
not eax
and ebp ebx
mov ebx [ esp + 0xa0 ]
and eax [ esp + 0x20 ]
xor ebp eax
mov eax [ esp + 0x60 ]
add ebp esi
add edx ecx
mov esi ebx
mov ecx [ esp + 0x90 ]
adc ebp [ eax * 8 + r--data ]
add edx [ eax * 8 + r--data ]
adc ebp [ esp + eax * 8 + 0x1a8 ]
add edx [ esp + eax * 8 + 0x1ac ]
mov eax 0x0
setb al
add edx [ esp + 0x28 ]
adc eax ebp
shld esi edi 0x19
mov ebp edi
and ecx edi
mov [ esp + 0x10 ] eax
mov eax ebx
shld ebp ebx 0x19
mov [ esp + 0x2c ] ecx
mov ecx edi
shld eax edi 0x1e
xor esi eax
mov eax edi
shld eax ebx 0x4
xor esi eax
mov eax edi
shld eax ebx 0x1e
xor ebp eax
mov eax ebx
shld eax edi 0x4
mov edi [ esp + 0x90 ]
xor ebp eax
mov eax [ esp + 0xb0 ]
xor edi ecx
and eax ebx
and edi [ esp + 0xc ]
mov [ esp + 0x4c ] eax
mov eax ebx
mov ebx [ esp + 0xb0 ]
mov [ esp + 0xa0 ] eax
xor edi [ esp + 0x2c ]
xor ebx eax
mov eax [ esp + 0x10 ]
and ebx [ esp + 0x18 ]
xor ebx [ esp + 0x4c ]
add ebx esi
mov esi [ esp + 0xc0 ]
adc edi ebp
mov ebp [ esp + 0x30 ]
add esi edx
adc ebp eax
add ebx edx
mov edx esi
adc edi eax
mov eax ebp
shld esi ebp 0x17
mov ecx ebp
mov [ esp + 0xc0 ] edx
mov [ esp + 0x30 ] ebp
shld eax edx 0xe
shld ecx edx 0x17
xor esi eax
mov eax ebp
shld eax edx 0x12
xor esi eax
mov eax edx
shld eax ebp 0xe
xor ecx eax
mov eax edx
shld eax ebp 0x12
xor ecx eax
mov eax edx
and edx [ esp + 0x50 ]
not eax
and eax [ esp + 0x1c ]
xor edx eax
mov eax ebp
mov ebp [ esp + 0x30 ]
not eax
and eax [ esp + 0x80 ]
and ebp [ esp + 0x14 ]
xor ebp eax
xor eax eax
add edx esi
mov esi [ esp + 0x60 ]
setb al
mov [ esp + 0x7c ] eax
mov eax [ esp + 0x20 ]
add eax [ esi * 8 + r--data ]
add eax [ esp + esi * 8 + 0x1b0 ]
add eax ebp
mov ebp edi
add eax ecx
add edx [ esi * 8 + r--data ]
adc eax [ esp + 0x7c ]
xor ecx ecx
add edx [ esp + esi * 8 + 0x1b4 ]
mov esi ebx
setb cl
add edx [ esp + 0x24 ]
adc ecx eax
mov eax ebx
shld esi edi 0x19
shld eax edi 0x1e
xor esi eax
mov eax edi
shld eax ebx 0x4
xor esi eax
mov eax edi
mov edi ebx
mov ebx ebp
shld eax edi 0x1e
shld ebp edi 0x19
mov [ esp + 0x10 ] ebx
mov [ esp + 0x28 ] edi
xor ebp eax
mov eax edi
shld eax ebx 0x4
mov ebx edi
and ebx [ esp + 0xa0 ]
xor ebp eax
mov eax edi
and eax [ esp + 0xb0 ]
xor ebx [ esp + 0x4c ]
xor ebx eax
mov eax [ esp + 0x10 ]
mov edi eax
and eax [ esp + 0x90 ]
and edi [ esp + 0x8 ]
xor edi [ esp + 0x2c ]
xor edi eax
add ebx esi
mov esi [ esp + 0x18 ]
adc edi ebp
mov ebp [ esp + 0xc ]
add esi edx
adc ebp ecx
add ebx edx
mov edx esi
mov eax ebp
adc edi ecx
shld esi ebp 0x17
mov ecx ebp
mov [ esp + 0x18 ] edx
mov [ esp + 0xc ] ebp
mov [ esp + 0x24 ] ebx
shld eax edx 0xe
shld ecx edx 0x17
mov [ esp + 0x20 ] edi
xor esi eax
mov eax ebp
shld eax edx 0x12
xor esi eax
mov eax edx
shld eax ebp 0xe
xor ecx eax
mov eax edx
shld eax ebp 0x12
xor ecx eax
mov eax edx
and edx [ esp + 0xc0 ]
not eax
and eax [ esp + 0x50 ]
xor edx eax
mov eax ebp
mov ebp [ esp + 0xc ]
not eax
and eax [ esp + 0x14 ]
and ebp [ esp + 0x30 ]
xor ebp eax
xor eax eax
add edx esi
mov esi [ esp + 0x60 ]
setb al
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x80 ]
add eax [ esi * 8 + r--data ]
add eax [ esp + esi * 8 + 0x1b8 ]
add eax ebp
add eax ecx
add edx [ esi * 8 + r--data ]
mov ecx ebx
adc eax [ esp + 0x2c ]
mov ebp eax
xor eax eax
add edx [ esp + esi * 8 + 0x1bc ]
mov esi ebx
setb al
add edx [ esp + 0x1c ]
adc eax ebp
shld esi edi 0x19
mov ebp edi
mov [ esp + 0x80 ] eax
mov eax ebx
shld ebp ebx 0x19
shld eax edi 0x1e
xor esi eax
mov eax edi
shld eax ebx 0x4
xor esi eax
mov eax edi
shld eax ebx 0x1e
xor ebp eax
mov eax ebx
shld eax edi 0x4
xor ebp eax
mov eax [ esp + 0x28 ]
xor ebx eax
and ecx eax
mov eax edi
and ebx [ esp + 0xa0 ]
xor ebx ecx
mov ecx [ esp + 0x10 ]
xor edi ecx
and eax ecx
mov ecx [ esp + 0xb0 ]
and edi [ esp + 0x8 ]
xor edi eax
add ebx esi
mov esi [ esp + 0x80 ]
adc edi ebp
add ecx edx
mov eax edi
mov edi [ esp + 0x90 ]
adc edi esi
add ebx edx
mov edx ecx
adc eax esi
mov esi edx
mov ecx edi
mov [ esp + 0xb0 ] edx
mov ebp edi
mov [ esp + 0x90 ] edi
mov [ esp + 0x1c ] ebx
mov [ esp + 0x80 ] eax
mov eax edi
shld esi edi 0x17
shld ecx edx 0x17
and ebp [ esp + 0xc ]
shld eax edx 0xe
xor esi eax
mov eax edi
shld eax edx 0x12
xor esi eax
mov eax edx
shld eax edi 0xe
xor ecx eax
mov eax edx
shld eax edi 0x12
xor ecx eax
mov eax edx
and edx [ esp + 0x18 ]
not eax
and eax [ esp + 0xc0 ]
xor edx eax
mov eax edi
mov edi [ esp + 0x14 ]
not eax
and eax [ esp + 0x30 ]
xor ebp eax
xor eax eax
add edx esi
mov esi [ esp + 0x60 ]
setb al
add edi [ esi * 8 + r--data ]
add edi [ esp + esi * 8 + 0x1c0 ]
add edi ebp
add edi ecx
add edx [ esi * 8 + r--data ]
adc edi eax
xor eax eax
add edx [ esp + esi * 8 + 0x1c4 ]
mov esi ebx
setb al
add edx [ esp + 0x50 ]
adc eax edi
mov edi [ esp + 0x80 ]
mov [ esp + 0x14 ] eax
mov eax ebx
shld eax edi 0x1e
shld esi edi 0x19
mov ebp edi
mov ecx edi
xor esi eax
mov eax edi
shld ebp ebx 0x19
shld eax ebx 0x4
xor esi eax
mov eax edi
shld eax ebx 0x1e
xor ebp eax
mov eax ebx
shld eax edi 0x4
mov edi [ esp + 0x24 ]
xor ebp eax
mov eax ebx
xor ebx edi
and eax edi
mov edi [ esp + 0xa0 ]
and ebx [ esp + 0x28 ]
xor ebx eax
mov eax ecx
mov [ esp + 0x50 ] ebx
mov ebx [ esp + 0x20 ]
xor eax ebx
and ecx ebx
and eax [ esp + 0x10 ]
xor eax ecx
mov ecx [ esp + 0x50 ]
add ecx esi
mov esi [ esp + 0x14 ]
adc eax ebp
add edi edx
mov ebx eax
mov eax [ esp + 0x8 ]
mov [ esp + 0xa0 ] edi
adc eax esi
add ecx edx
adc ebx esi
mov edx eax
mov esi edi
shld eax edi 0xe
mov [ esp + 0x50 ] ecx
shld esi edx 0x17
mov ecx edx
mov ebp edx
xor esi eax
mov eax edx
shld ecx edi 0x17
mov [ esp + 0x8 ] ebp
shld eax edi 0x12
xor esi eax
mov eax edi
shld eax edx 0xe
xor ecx eax
mov eax edi
shld eax edx 0x12
mov edx edi
xor ecx eax
mov eax edi
and edx [ esp + 0xb0 ]
mov edi [ esp + 0x30 ]
not eax
and eax [ esp + 0x18 ]
xor edx eax
mov eax ebp
and ebp [ esp + 0x90 ]
not eax
and eax [ esp + 0xc ]
xor ebp eax
xor eax eax
add edx esi
mov esi [ esp + 0x60 ]
setb al
add edi [ esi * 8 + r--data ]
add edi [ esp + esi * 8 + 0x1c8 ]
add edi ebp
add edi ecx
add edx [ esi * 8 + r--data ]
mov ecx ebx
mov ebx [ esp + 0x1c ]
mov ebp ecx
mov [ esp + 0x14 ] ecx
adc edi eax
xor eax eax
add edx [ esp + esi * 8 + 0x1cc ]
setb al
add edx [ esp + 0xc0 ]
adc eax edi
mov edi [ esp + 0x50 ]
mov [ esp + 0x30 ] eax
mov eax edi
mov esi edi
shld ebp edi 0x19
shld eax ecx 0x1e
shld esi ecx 0x19
xor esi eax
mov eax ecx
shld eax edi 0x4
xor esi eax
mov eax ecx
shld eax edi 0x1e
xor ebp eax
mov eax edi
shld eax ecx 0x4
xor ebp eax
mov eax edi
xor edi ebx
and edi [ esp + 0x24 ]
and eax ebx
xor edi eax
mov eax ecx
mov ebx edi
mov edi [ esp + 0x80 ]
xor ecx edi
and eax edi
mov edi [ esp + 0x28 ]
and ecx [ esp + 0x20 ]
xor ecx eax
add ebx esi
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x30 ]
adc ecx ebp
add edi edx
mov [ esp + 0x28 ] edi
adc eax esi
add ebx edx
adc ecx esi
mov edx eax
mov esi edi
shld eax edi 0xe
mov [ esp + 0xc0 ] ebx
shld esi edx 0x17
mov [ esp + 0x30 ] ecx
mov ecx edx
mov ebx edx
xor esi eax
mov eax edx
shld ecx edi 0x17
mov ebp ebx
mov [ esp + 0x10 ] ebx
shld eax edi 0x12
and ebp [ esp + 0x8 ]
xor esi eax
mov eax edi
shld eax edx 0xe
xor ecx eax
mov eax edi
shld eax edx 0x12
mov edx edi
xor ecx eax
mov eax edi
and edx [ esp + 0xa0 ]
mov edi [ esp + 0x60 ]
not eax
and eax [ esp + 0xb0 ]
xor edx eax
mov eax ebx
mov ebx [ esp + 0xc0 ]
not eax
and eax [ esp + 0x90 ]
xor ebp eax
xor eax eax
add edx esi
mov esi [ esp + 0xc ]
setb al
add esi [ edi * 8 + r--data ]
add esi [ esp + edi * 8 + 0x1d0 ]
add esi ebp
add esi ecx
add edx [ edi * 8 + r--data ]
mov ecx [ esp + 0x50 ]
adc esi eax
xor eax eax
add edx [ esp + edi * 8 + 0x1d4 ]
mov edi [ esp + 0x30 ]
setb al
add edx [ esp + 0x18 ]
mov ebp edi
adc eax esi
mov esi ebx
shld ebp ebx 0x19
mov [ esp + 0xc ] eax
mov eax ebx
shld esi edi 0x19
shld eax edi 0x1e
xor esi eax
mov eax edi
shld eax ebx 0x4
xor esi eax
mov eax edi
shld eax ebx 0x1e
xor ebp eax
mov eax ebx
shld eax edi 0x4
xor ebp eax
mov eax ebx
xor ebx ecx
and ebx [ esp + 0x1c ]
and eax ecx
xor ebx eax
mov eax [ esp + 0x14 ]
mov ecx ebx
mov ebx edi
xor edi eax
and ebx eax
mov eax [ esp + 0x20 ]
and edi [ esp + 0x80 ]
xor edi ebx
add ecx esi
mov esi [ esp + 0xc ]
adc edi ebp
mov ebp [ esp + 0x24 ]
add ebp edx
adc eax esi
add ecx edx
mov ebx ebp
adc edi esi
mov [ esp + 0x18 ] ecx
mov ecx eax
mov esi ebp
shld eax ebp 0xe
mov [ esp + 0x24 ] ebx
and ebx [ esp + 0x28 ]
shld esi ecx 0x17
mov edx ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0xc ] edi
xor esi eax
mov eax ecx
shld edx ebp 0x17
shld eax ebp 0x12
xor esi eax
mov eax ebp
shld eax ecx 0xe
xor edx eax
mov eax ebp
shld eax ecx 0x12
xor edx eax
mov eax ebp
mov ebp ecx
not eax
and ebp [ esp + 0x10 ]
and eax [ esp + 0xa0 ]
xor ebx eax
mov eax ecx
mov ecx [ esp + 0x60 ]
not eax
and eax [ esp + 0x8 ]
xor ebp eax
xor eax eax
add ebx esi
mov esi [ esp + ecx * 8 + 0x1d8 ]
setb al
add esi [ ecx * 8 + r--data ]
add esi [ esp + 0x90 ]
add esi ebp
mov ebp edi
add esi edx
add ebx [ ecx * 8 + r--data ]
mov edx [ esp + 0x18 ]
adc esi eax
add ebx [ esp + ecx * 8 + 0x1dc ]
mov eax 0x0
mov ecx edi
setb al
add ebx [ esp + 0xb0 ]
adc eax esi
mov esi edx
and ecx [ esp + 0x30 ]
shld ebp edx 0x19
mov [ esp + 0xe4 ] eax
mov eax edx
shld esi edi 0x19
shld eax edi 0x1e
xor esi eax
mov eax edi
shld eax edx 0x4
mov [ esp + 0x2c ] ecx
mov ecx edx
xor esi eax
mov eax edi
xor ecx [ esp + 0xc0 ]
shld eax edx 0x1e
xor ebp eax
mov eax edx
shld eax edi 0x4
xor edi [ esp + 0x30 ]
xor ebp eax
mov eax edx
mov [ esp + 0x7c ] ecx
and ecx [ esp + 0x50 ]
mov edx [ esp + 0x80 ]
and eax [ esp + 0xc0 ]
mov [ esp + 0x4c ] edi
and edi [ esp + 0x14 ]
xor ecx eax
mov [ esp + 0x90 ] eax
mov eax ecx
mov ecx [ esp + 0x1c ]
xor edi [ esp + 0x2c ]
add eax esi
mov esi [ esp + 0xe4 ]
adc edi ebp
add ecx ebx
adc edx esi
add eax ebx
mov [ esp + 0x1c ] ecx
mov [ esp + 0xb0 ] eax
adc edi esi
mov eax edx
mov esi ecx
mov ebx edx
mov ebp edx
mov [ esp + 0x80 ] edx
shld eax ecx 0xe
shld esi edx 0x17
shld ebx ecx 0x17
and ebp [ esp + 0x20 ]
xor esi eax
mov eax edx
shld eax ecx 0x12
xor esi eax
mov eax ecx
shld eax edx 0xe
xor ebx eax
mov eax ecx
shld eax edx 0x12
xor ebx eax
mov eax ecx
and ecx [ esp + 0x24 ]
not eax
and eax [ esp + 0x28 ]
xor ecx eax
mov eax edx
xor edx edx
not eax
and eax [ esp + 0x10 ]
xor ebp eax
add ecx esi
mov esi [ esp + 0x60 ]
setb dl
mov eax [ esp + esi * 8 + 0x1e0 ]
add eax [ esi * 8 + r--data ]
add eax [ esp + 0x8 ]
add eax ebp
mov ebp edi
add eax ebx
add ecx [ esi * 8 + r--data ]
mov ebx [ esp + 0x7c ]
adc eax edx
xor edx edx
add ecx [ esp + esi * 8 + 0x1e4 ]
setb dl
add ecx [ esp + 0xa0 ]
adc edx eax
mov [ esp + 0x8 ] edx
mov edx [ esp + 0xb0 ]
mov eax edx
mov esi edx
shld ebp edx 0x19
and ebx edx
shld eax edi 0x1e
shld esi edi 0x19
xor ebx [ esp + 0x90 ]
mov [ esp + 0x90 ] edi
xor esi eax
mov eax edi
shld eax edx 0x4
xor esi eax
mov eax edi
shld eax edx 0x1e
xor ebp eax
mov eax edx
mov edx [ esp + 0x14 ]
shld eax edi 0x4
xor ebp eax
mov eax [ esp + 0x4c ]
and eax edi
xor eax [ esp + 0x2c ]
add ebx esi
mov esi [ esp + 0x50 ]
mov edi ebx
mov ebx [ esp + 0x8 ]
adc eax ebp
add esi ecx
mov ebp eax
mov eax edi
adc edx ebx
add eax ecx
mov edi ebp
mov ecx [ esp + 0x60 ]
adc edi ebx
mov [ esp + 0xa0 ] eax
mov [ esp + 0x8 ] edi
mov edi [ esp + 0x10 ]
add ecx 0x8
cmp ecx 0x48
mov [ esp + 0x60 ] ecx
jl r-xdata
mov ecx [ esp + 0xe0 ]
mov ebp [ esp + 0x400 ]
mov eax [ esp + 0xa0 ]
sub ecx [ esp + 0xd8 ]
add eax [ ebp + 0x4 ]
mov [ ebp + 0x4 ] eax
mov eax [ esp + 0x8 ]
adc [ ebp ] eax
mov eax [ esp + 0xb0 ]
add eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ esp + 0x90 ]
adc [ ebp + 0x8 ] eax
mov eax [ esp + 0x18 ]
add eax [ ebp + 0x14 ]
mov [ ebp + 0x14 ] eax
mov eax [ esp + 0xc ]
adc [ ebp + 0x10 ] eax
mov eax [ esp + 0xc0 ]
add eax [ ebp + 0x1c ]
mov [ ebp + 0x1c ] eax
mov eax [ esp + 0x30 ]
adc [ ebp + 0x18 ] eax
add esi [ ebp + 0x24 ]
mov [ ebp + 0x24 ] esi
adc [ ebp + 0x20 ] edx
mov esi ecx
mov ecx [ esp + 0x1c ]
mov eax [ ebp + 0x28 ]
add ecx [ ebp + 0x2c ]
mov [ ebp + 0x2c ] ecx
adc eax [ esp + 0x80 ]
mov [ ebp + 0x28 ] eax
mov ecx [ esp + 0x24 ]
mov eax [ ebp + 0x30 ]
add ecx [ ebp + 0x34 ]
mov [ ebp + 0x34 ] ecx
adc eax [ esp + 0x20 ]
mov [ ebp + 0x30 ] eax
mov ecx [ esp + 0x28 ]
mov eax [ ebp + 0x38 ]
add ecx [ ebp + 0x3c ]
adc eax edi
mov [ ebp + 0x3c ] ecx
mov [ ebp + 0x38 ] eax
mov [ ebp + 0xc0 ] 0x0
xor eax eax
cmp esi 0x7f
mov edi [ esp + 0xdc ]
jg r-xdata
sub_46d24e
push ebp
push ebx
push edi
push esi
sub esp 0x98
mov eax [ rw-data ]
mov edi [ esp + 0xac ]
mov esi [ esp + 0xb0 ]
mov ecx 0xf0
mov ebp 0x70
mov [ esp + 0x94 ] eax
mov eax [ edi + 0xc0 ]
cmp eax 0x6f
mov [ esp ] eax
cmovg ebp ecx
mov ecx 0x34
shld edx ebx 0x3
mov [ esp + ecx * 4 - 0xc0 ] edx
dec ecx
cmp ecx 0x30
jne r-xdata
mov ebx [ edi + ecx * 4 - 0x4 ]
mov edx [ edi + ecx * 4 ]
lea eax [ ecx - 0x30 ]
xor ebx ebx
cmp eax 0x2
jl r-xdata
sub ebp [ esp ]
lea ebx [ esp + 0x14 ]
push ebp
push 0x0
push ebx
call sub_49acf0
add esp 0xc
mov [ ebx ] 0x80
push ebp
push ebx
push edi
call sub_46c333
add esp 0xc
xor ebp ebp
lea eax [ esp + 0x17 ]
mov ecx 0x3
dec ebp
mov edx [ esp + ecx * 4 + 0x4 ]
dec ecx
mov ebx edx
shr ebx 0x18
mov [ eax - 0x3 ] bl
mov ebx edx
shr ebx 0x10
mov [ eax - 0x2 ] bl
mov [ eax - 0x1 ] dh
mov [ eax ] dl
add eax 0x4
cmp ecx ebp
jne r-xdata
push 0x10
lea eax [ esp + 0x18 ]
push eax
push edi
call sub_46c333
add esp 0xc
xor eax eax
mov edx [ edi + eax * 8 ]
mov ecx [ edi + eax * 8 + 0x4 ]
mov ebx edx
shr ebx 0x18
mov [ esi + eax * 8 ] bl
mov ebx edx
shr ebx 0x10
mov [ esi + eax * 8 + 0x1 ] bl
mov [ esi + eax * 8 + 0x2 ] dh
mov [ esi + eax * 8 + 0x3 ] dl
mov edx ecx
shr edx 0x18
mov [ esi + eax * 8 + 0x4 ] dl
mov edx ecx
shr edx 0x10
mov [ esi + eax * 8 + 0x5 ] dl
mov [ esi + eax * 8 + 0x6 ] ch
mov [ esi + eax * 8 + 0x7 ] cl
inc eax
cmp eax 0x8
jne r-xdata
mov ecx [ esp + 0x94 ]
call sub_497c4a
add esp 0x98
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46d369
push edi
push esi
push 0xd4
push 0x1
call sub_43f807
add esp 0x8
mov ecx 0x10
mov esi r--data
mov edi eax
[ edi ] [ esi ]
xor ecx ecx
mov [ eax + 0xc4 ] ecx
mov [ eax + 0xc0 ] ecx
mov [ eax + 0xcc ] ecx
mov [ eax + 0xc8 ] ecx
mov [ eax + 0xd0 ] ecx
pop esi
pop edi
retn
sub_46d3ab
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
mov ebx 0xd4
push ebx
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push ebx
push edi
push esi
call sub_49a1f0
add esp 0xc
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_46d416
push edi
push esi
push 0xd4
push 0x1
call sub_43f807
add esp 0x8
mov ecx 0x10
mov esi r--data
mov edi eax
[ edi ] [ esi ]
xor ecx ecx
mov [ eax + 0xc4 ] ecx
mov [ eax + 0xc0 ] ecx
mov [ eax + 0xcc ] ecx
mov [ eax + 0xc8 ] ecx
mov [ eax + 0xd0 ] ecx
pop esi
pop edi
retn
sub_46d458
push ebx
push edi
push esi
sub esp 0x44
mov esi [ esp + 0x58 ]
mov edi [ esp + 0x54 ]
mov eax [ rw-data ]
mov ebx esp
mov [ esp + 0x40 ] eax
push ebx
push edi
call sub_46d24e
add esp 0x8
push 0x30
push ebx
push esi
call sub_49a1f0
add esp 0xc
push 0xd4
push edi
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x40 ]
call sub_497c4a
add esp 0x44
pop esi
pop edi
pop ebx
jmp sub_43f9d4
sub_46d4ac
push ebp
push ebx
push edi
push esi
sub esp 0x14c
mov eax [ rw-data ]
mov esi [ esp + 0x164 ]
mov edx [ esp + 0x160 ]
lea edi [ esp + 0x8 ]
mov ecx 0x10
mov [ esp + 0x148 ] eax
xor eax eax
[ edi ] [ esi ]
mov ecx [ esp + eax * 4 + 0x28 ]
xor ecx [ esp + eax * 4 + 0x3c ]
xor ecx [ esp + eax * 4 + 0x10 ]
xor ecx [ esp + eax * 4 + 0x8 ]
rol ecx 0x1
mov [ esp + eax * 4 + 0x48 ] ecx
inc eax
cmp eax 0x40
jne r-xdata
movdqu xmm0 [ edx ]
mov esi [ edx + 0x10 ]
xor eax eax
pshufd xmm1 xmm0 0xe5
pshufd xmm3 xmm0 0x4e
pshufd xmm2 xmm0 0xe7
movd ecx xmm0
mov edi esi
mov [ esp + 0x4 ] esi
movd ebp xmm1
movd ebx xmm3
movd edx xmm2
mov [ esp ] edi
mov edi edx
mov edx ebx
mov ebx ebp
mov esi ebx
and ebp edx
rol ebx 0x1e
not esi
and esi edi
or esi ebp
mov ebp ecx
rol ecx 0x5
add esi [ esp ]
add esi ecx
mov ecx [ esp + eax * 4 + 0x8 ]
inc eax
cmp eax 0x14
lea ecx [ ecx + esi + 0x5a827999 ]
jne r-xdata
xor eax eax
mov esi edi
mov edi edx
mov edx ebx
mov ebx ebp
mov ebp ecx
mov ecx edi
xor ecx ebx
rol ebx 0x1e
xor ecx edx
add ecx esi
mov esi ebp
rol esi 0x5
add ecx esi
mov esi [ esp + eax * 4 + 0x58 ]
inc eax
cmp eax 0x14
lea ecx [ esi + ecx + 0x6ed9eba1 ]
jne r-xdata
xor eax eax
mov esi edx
mov edx ebx
mov ebx ebp
mov [ esp ] edi
mov ebp edx
mov edi edx
or ebp esi
and edi esi
and ebp ebx
rol ebx 0x1e
or edi ebp
mov ebp ecx
rol ecx 0x5
add edi [ esp ]
add edi ecx
mov ecx [ esp + eax * 4 + 0xa8 ]
inc eax
cmp eax 0x14
lea ecx [ ecx + edi - 0x70e44324 ]
mov edi esi
jne r-xdata
xor eax eax
mov esi edi
mov edi edx
mov edx ebx
mov ebx ebp
mov ebp ecx
mov ecx edi
xor ecx ebx
rol ebx 0x1e
xor ecx edx
add ecx esi
mov esi ebp
rol esi 0x5
add ecx esi
mov esi [ esp + eax * 4 + 0xf8 ]
inc eax
cmp eax 0x14
lea ecx [ esi + ecx - 0x359d3e2a ]
jne r-xdata
movd xmm1 edx
movd xmm2 ebx
movd xmm4 ebp
movd xmm3 ecx
mov eax [ esp + 0x160 ]
punpckldq xmm2 xmm1
punpckldq xmm3 xmm4
punpcklqdq xmm3 xmm2
paddd xmm0 xmm3
movdqu [ eax ] xmm0
mov ecx [ esp + 0x4 ]
add ecx edi
mov [ eax + 0x10 ] ecx
mov ecx [ esp + 0x148 ]
call sub_497c4a
add esp 0x14c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46d65f
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov edi [ esp + 0x58 ]
mov esi [ esp + 0x60 ]
mov ebx [ esp + 0x5c ]
mov [ esp + 0x40 ] eax
mov eax [ edi + 0x5c ]
add eax esi
mov [ edi + 0x5c ] eax
adc [ edi + 0x58 ] 0x0
mov eax [ edi + 0x54 ]
lea ecx [ eax + esi ]
test eax eax
je r-xdata
cmp ecx 0x40
jl r-xdata
cmp ecx 0x40
jge r-xdata
lea eax [ edi + 0x14 ]
push esi
push ebx
push eax
call sub_49a1f0
add esp 0xc
mov ebp esp
lea eax [ edi + eax + 0x14 ]
push esi
push ebx
push eax
call sub_49a1f0
add esp 0xc
add esi [ edi + 0x54 ]
jmp r-xdata
movdqu xmm0 [ edi + ecx * 4 + 0x14 ]
movdqa xmm3 xmm0
movdqa xmm1 xmm0
movdqa xmm2 xmm0
psrld xmm0 0x18
psrld xmm3 0x10
psrlw xmm2 0x8
pslld xmm1 0x18
pand xmm3 xmm4
pand xmm2 xmm4
pslld xmm3 0x8
pslld xmm2 0x10
por xmm3 xmm1
por xmm0 xmm3
por xmm0 xmm2
movdqu [ esp + ecx * 4 ] xmm0
add ecx 0x4
cmp ecx 0x10
jne r-xdata
sub esi eax
push ebp
push edi
call sub_46d4ac
add esp 0x8
xor eax eax
cmp esi 0x3f
mov [ edi + 0x54 ] 0x0
jg r-xdata
mov [ edi + 0x54 ] esi
mov ecx [ esp + 0x40 ]
call sub_497c4a
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx 0x40
lea ecx [ edi + eax + 0x14 ]
sub edx eax
push edx
push ebx
push ecx
call sub_49a1f0
add esp 0xc
mov ecx [ edi + 0x54 ]
movdqa xmm4 [ r--data ]
mov eax 0x40
sub eax ecx
neg ecx
lea ebx [ ebx + ecx + 0x40 ]
xor ecx ecx
sub_46d779
push ebp
push ebx
push edi
push esi
sub esp 0x48
mov eax [ rw-data ]
mov edi [ esp + 0x5c ]
mov ecx 0x78
mov ebp 0x38
mov esi [ esp + 0x60 ]
mov [ esp + 0x44 ] eax
mov eax [ edi + 0x54 ]
mov ebx [ edi + 0x58 ]
cmp eax 0x37
cmovg ebp ecx
sub ebp eax
mov eax [ edi + 0x5c ]
mov [ esp ] eax
lea eax [ esp + 0x4 ]
push ebp
push 0x0
push eax
call sub_49acf0
add esp 0xc
lea eax [ esp + 0x4 ]
mov [ eax ] 0x80
push ebp
push eax
mov ebp eax
push edi
call sub_46d65f
add esp 0xc
mov eax ebx
mov ecx ebp
mov edx [ esp ]
shr eax 0x15
mov [ ecx ] al
mov eax ebx
shr eax 0xd
mov [ ecx + 0x1 ] al
mov eax ebx
shld ebx edx 0x3
shr eax 0x5
mov [ ecx + 0x2 ] al
mov eax edx
mov [ ecx + 0x3 ] bl
shr eax 0x15
mov [ ecx + 0x4 ] al
mov eax edx
shr eax 0xd
mov [ ecx + 0x5 ] al
mov eax edx
shl dl 0x3
shr eax 0x5
mov [ ecx + 0x6 ] al
mov [ ecx + 0x7 ] dl
push 0x8
push ecx
push edi
call sub_46d65f
add esp 0xc
xor eax eax
mov cl [ edi + eax * 4 + 0x3 ]
mov [ esi + eax * 4 ] cl
mov cl [ edi + eax * 4 + 0x2 ]
mov [ esi + eax * 4 + 0x1 ] cl
mov cl [ edi + eax * 4 + 0x1 ]
mov [ esi + eax * 4 + 0x2 ] cl
mov cl [ edi + eax * 4 ]
mov [ esi + eax * 4 + 0x3 ] cl
inc eax
cmp eax 0x5
jne r-xdata
mov ecx [ esp + 0x44 ]
call sub_497c4a
add esp 0x48
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46d857
push edi
push esi
sub esp 0x64
mov edx [ rw-data ]
mov ecx [ esp + 0x74 ]
movaps xmm0 [ r--data ]
mov esi [ esp + 0x78 ]
mov eax [ esp + 0x70 ]
mov edi esp
mov [ esp + 0x60 ] edx
xor edx edx
movups [ edi ] xmm0
mov [ edi + 0x10 ] 0xc3d2e1f0
mov [ edi + 0x54 ] edx
mov [ edi + 0x5c ] edx
mov [ edi + 0x58 ] edx
push ecx
push eax
push edi
call sub_46d65f
add esp 0xc
push esi
push edi
call sub_46d779
add esp 0x8
push 0x60
push edi
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x60 ]
call sub_497c4a
add esp 0x64
pop esi
pop edi
retn
sub_46d8e8
push edi
push esi
mov esi [ esp + 0xc ]
push 0x60
push 0x1
call sub_43f807
add esp 0x8
mov ecx 0x18
mov edi eax
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_46d941
push ebp
push ebx
push edi
push esi
sub esp 0xd8
mov ecx [ rw-data ]
mov eax [ esp + 0xf0 ]
mov edi [ esp + 0xfc ]
mov ebx [ esp + 0xf4 ]
mov ebp [ esp + 0xf8 ]
mov edx [ esp + 0xec ]
lea esi [ esp + 0x14 ]
mov [ esp + 0xd4 ] ecx
mov ecx esi
push eax
call sub_46d9d2
add esp 0x4
push ebp
push ebx
push esi
call sub_46d65f
add esp 0xc
mov ebx esp
push ebx
push esi
call sub_46d779
add esp 0x8
lea esi [ esp + 0x74 ]
push 0x14
push ebx
push esi
call sub_46d65f
add esp 0xc
push edi
push esi
call sub_46d779
add esp 0x8
mov ecx [ esp + 0xd4 ]
call sub_497c4a
add esp 0xd8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46d9d2
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x50
mov ebx [ ebp + 0x8 ]
mov eax [ rw-data ]
movaps xmm0 [ r--data ]
mov edi edx
mov esi ecx
test ebx ebx
mov [ esp + 0x48 ] eax
movaps [ esp + 0x30 ] xmm0
movaps [ esp + 0x20 ] xmm0
movaps [ esp + 0x10 ] xmm0
movaps [ esp ] xmm0
jle r-xdata
movaps xmm0 [ r--data ]
xor eax eax
movups [ esi ] xmm0
mov [ esi + 0x10 ] 0xc3d2e1f0
mov [ esi + 0x54 ] eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x58 ] eax
mov eax esp
push 0x40
push eax
push esi
call sub_46d65f
add esp 0xc
movaps xmm0 [ r--data ]
mov eax esp
test ebx ebx
mov edx eax
movaps [ eax + 0x30 ] xmm0
movaps [ eax + 0x20 ] xmm0
movaps [ eax + 0x10 ] xmm0
movaps [ eax ] xmm0
jle r-xdata
mov al [ edi ]
xor al 0x36
cmp ebx 0x1
mov [ esp ] al
je r-xdata
movaps xmm0 [ r--data ]
xor eax eax
movups [ esi + 0x60 ] xmm0
mov [ esi + 0x70 ] 0xc3d2e1f0
mov [ esi + 0xb4 ] eax
mov [ esi + 0xbc ] eax
mov [ esi + 0xb8 ] eax
lea eax [ esi + 0x60 ]
mov esi 0x40
push esi
mov edi edx
push edi
push eax
call sub_46d65f
add esp 0xc
push esi
push edi
call sub_48f5d3
add esp 0x8
mov ecx [ esp + 0x48 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov al [ edi ]
xor al 0x5c
cmp ebx 0x1
mov [ esp ] al
je r-xdata
xor eax eax
inc eax
xor eax eax
inc eax
cmp eax 0x3f
mov eax ecx
jl r-xdata
cmp eax 0x3f
mov eax ecx
jl r-xdata
mov cl [ edi + eax ]
xor [ esp + eax ] cl
lea ecx [ eax + 0x1 ]
cmp ecx ebx
jge r-xdata
mov cl [ edi + eax ]
xor [ esp + eax ] cl
lea ecx [ eax + 0x1 ]
cmp ecx ebx
jge r-xdata
sub_46db46
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov esi [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov ebx esp
mov [ esp + 0x14 ] edx
mov edx esi
push ebx
push eax
push edi
call sub_46ddb4
add esp 0xc
add esi edi
push 0x14
push esi
push ebx
call sub_440320
add esp 0xc
mov ecx [ esp + 0x14 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
retn
sub_46dbc8
push ebp
push ebx
push edi
push esi
sub esp 0x78
mov eax [ rw-data ]
mov ebx [ esp + 0x8c ]
lea ebp [ esp + 0x14 ]
mov ecx 0x18
mov edi ebp
mov [ esp + 0x74 ] eax
lea esi [ ebx + 0xc0 ]
mov eax esp
[ edi ] [ esi ]
push eax
push ebp
call sub_46d779
add esp 0x8
add ebx 0x60
mov ecx 0x18
mov edi ebp
mov esi ebx
[ edi ] [ esi ]
push 0x14
lea eax [ esp + 0x4 ]
push eax
push ebp
call sub_46d65f
add esp 0xc
push [ esp + 0x90 ]
push ebp
call sub_46d779
add esp 0x8
mov ecx [ esp + 0x74 ]
call sub_497c4a
add esp 0x78
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46dc3d
push edi
push esi
sub esp 0x18
mov ecx [ rw-data ]
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov edi esp
mov [ esp + 0x14 ] ecx
push edi
push eax
call sub_46dbc8
add esp 0x8
push 0x14
push esi
push edi
call sub_440320
add esp 0xc
mov ecx [ esp + 0x14 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
retn
sub_46dc7f
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov esi [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov ebx esp
mov [ esp + 0x14 ] edx
mov edx esi
push ebx
push eax
push edi
call sub_46ddb4
add esp 0xc
mov eax [ ebx + 0x8 ]
mov [ esi + edi + 0x8 ] eax
movsd xmm0 [ ebx ]
movsd [ esi + edi ] xmm0
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
pop edi
pop ebx
retn
sub_46dcce
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov esi [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov ebx esp
mov [ esp + 0x14 ] edx
mov edx esi
push ebx
push eax
push edi
call sub_46ddb4
add esp 0xc
add esi edi
push 0xc
push esi
push ebx
call sub_440320
add esp 0xc
mov ecx [ esp + 0x14 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
retn
sub_46dd1f
push edi
push esi
sub esp 0x18
mov ecx [ rw-data ]
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov edi esp
mov [ esp + 0x14 ] ecx
push edi
push eax
call sub_46dbc8
add esp 0x8
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
movsd xmm0 [ edi ]
movsd [ esi ] xmm0
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
pop edi
retn
sub_46dd5f
push edi
push esi
sub esp 0x18
mov ecx [ rw-data ]
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov edi esp
mov [ esp + 0x14 ] ecx
push edi
push eax
call sub_46dbc8
add esp 0x8
push 0xc
push esi
push edi
call sub_440320
add esp 0xc
mov ecx [ esp + 0x14 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
retn
sub_46ddb4
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov [ esp ] edx
mov ebx ecx
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x4 ]
mov ecx [ rw-data ]
lea ebp [ ebx + 0xc0 ]
mov esi ebx
mov edi ebp
mov [ esp + 0x8 ] ecx
mov ecx eax
shr ecx 0x18
mov [ edx ] cl
mov ecx eax
shr ecx 0x10
mov [ edx + 0x1 ] cl
mov [ edx + 0x2 ] ah
mov [ edx + 0x3 ] al
mov ecx 0x18
[ edi ] [ esi ]
push 0x4
push edx
push ebp
call sub_46d65f
add esp 0xc
push [ esp + 0x20 ]
push [ esp + 0x4 ]
push ebp
call sub_46d65f
add esp 0xc
push [ esp + 0x28 ]
push ebx
call sub_46dbc8
add esp 0x8
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46de34
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_484d61
add esp 0x4
push 0x0
push [ esi + 0xc ]
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
mov ecx eax
call sub_46dea1
push 0x0
push [ esi + 0xc ]
push [ esi + 0xc ]
call sub_47dc40
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push [ esi + 0x18 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
pop esi
jmp sub_43f9d4
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov [ esi + 0x8 ] 0x0
sub_46dea1
push esi
mov esi ecx
push 0x0
push [ esi + 0x4034 ]
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
push eax
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x4034 ]
push [ esi + 0x4034 ]
call sub_47dc40
add esp 0x4
push [ esi + 0x403c ]
call sub_47dc40
add esp 0x4
push 0x0
push [ esi + 0x4038 ]
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
push eax
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x4038 ]
push [ esi + 0x4038 ]
call sub_47dc40
add esp 0x4
push 0x0
push [ esi + 0x4040 ]
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
mov ecx eax
call sub_46f3b0
push 0x0
push [ esi + 0x4040 ]
push [ esi + 0x4040 ]
call sub_47dc40
add esp 0x4
push [ esi + 0x4044 ]
call sub_47dc40
add esp 0x4
push 0x0
push [ esi + 0x4048 ]
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
push eax
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x4048 ]
push [ esi + 0x4048 ]
call sub_47dc40
jmp r-xdata
add esp 0x4
mov eax [ esi + 0x404c ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi + 0x404c ] ecx
push eax
call sub_43f9d4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
sub_46dfc7
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x8 ] eax
mov ebp [ esi + 0x10 ]
test ebp ebp
je r-xdata
mov [ esi + 0x14 ] 0x0
xor ebx ebx
xor edi edi
inc edi
cmp eax 0x61
cmove ebx edi
mov edx [ ebp + 0xc ]
cmp edx 0x5
jl r-xdata
mov eax [ ebp ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x4 ]
cmp eax 0x62
jne r-xdata
xor eax eax
test ebx ebx
mov [ esi + 0x14 ] eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax esp
push eax
push 0x0
call sub_46f3d5
add esp 0x8
cmp eax 0x1
sbb eax eax
or eax [ esp ]
test eax eax
jle r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x20 ]
mov eax [ edi + 0xc ]
push [ esi ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx edi
mov edx esi
call sub_46e0cd
jmp r-xdata
push ebp
call sub_43f9d4
add esp 0x4
mov ebp [ esi + 0x10 ]
test ebp ebp
jne r-xdata
cmp eax [ ebp + 0xc ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx eax
shr ecx 0x18
mov [ esp + 0x4 ] cl
mov ecx eax
shr ecx 0x10
mov [ esp + 0x5 ] cl
mov [ esp + 0x6 ] ah
mov [ esp + 0x7 ] al
mov eax [ esp + 0x20 ]
mov ecx eax
mov eax [ ecx + 0xc ]
push r--data
mov edx 0x4
push edx
lea edx [ esp + 0xc ]
push edx
push 0x64
push [ ecx + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
jmp r-xdata
sub_46e0cd
push edi
push esi
mov esi edx
mov edi ecx
push esi
push [ edi + 0x4040 ]
call sub_47eb51
add esp 0x8
push esi
push [ edi + 0x4044 ]
call sub_47eb51
add esp 0x8
mov ecx esi
pop esi
pop edi
jmp sub_46f3b0
sub_46e0fa
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov ebp [ edi + 0x10 ]
test ebp ebp
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax esp
mov edx ecx
shr edx 0x18
mov [ eax ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x1 ] dl
mov edx [ esp + 0x2c ]
mov [ eax + 0x2 ] ch
mov [ eax + 0x3 ] cl
sub edx [ edi + 0xc ]
mov ecx edx
shr ecx 0x18
mov [ eax + 0x4 ] cl
mov ecx edx
shr ecx 0x10
mov [ eax + 0x5 ] cl
mov [ eax + 0x6 ] dh
mov [ eax + 0x7 ] dl
mov ecx [ esi + 0xc ]
push r--data
push 0x8
push eax
push 0x5d
push [ esi + 0x4 ]
push [ ecx + 0x14 ]
call sub_448bdd
add esp 0x18
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x28 ]
mov edx [ ebp + 0x4 ]
mov ecx esi
push ebx
push eax
push [ ebp + 0x8 ]
call sub_46e1d5
add esp 0xc
push ebp
call sub_43f9d4
add esp 0x4
mov ebp [ edi + 0x10 ]
test ebp ebp
jne r-xdata
mov al [ ebx + 0x3 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
mov al [ ebx + 0x2 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1 ] al
mov al [ ebx + 0x1 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2 ] al
mov al [ ebx ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3 ] al
mov eax [ ebp + 0xc ]
mov eax [ ebp ]
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp eax 0x3
jle r-xdata
sub_46e1d5
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x2c ]
mov edi [ esp + 0x28 ]
cmp edx 0x5e
jne r-xdata
inc ebx
lea ebp [ esp + 0x3 ]
mov ecx ebx
shr ecx 0x18
mov [ ebp ] cl
mov ecx ebx
shr ecx 0x10
mov [ ebp + 0x1 ] cl
mov [ ebp + 0x2 ] bh
mov [ ebp + 0x3 ] bl
mov [ ebp + 0x4 ] dl
mov ecx [ eax ]
push 0x5
push ebp
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push [ esp + 0x2c ]
push edi
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ edi + 0x4 ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
add ebx 0xfffffff8
add edi 0x8
mov ebp eax
cmp eax ebx
cmovg ebp ebx
test eax eax
cmovs ebp ebx
mov eax [ esp + 0x30 ]
mov edx eax
mov ebx [ edx + 0xc ]
cmp ebp ebx
cmovle ebx ebp
lea eax [ ebx + 0x9 ]
mov ecx eax
shr ecx 0x18
mov [ esp + 0x3 ] cl
mov ecx eax
shr ecx 0x10
mov [ esp + 0x4 ] cl
mov [ esp + 0x5 ] ah
mov [ esp + 0x6 ] al
mov [ esp + 0x7 ] 0x5e
mov eax [ edx ]
mov ecx eax
shr ecx 0x18
mov [ esp + 0x8 ] cl
mov ecx eax
shr ecx 0x10
mov [ esp + 0x9 ] cl
mov [ esp + 0xa ] ah
mov [ esp + 0xb ] al
mov eax ebx
shr eax 0x18
mov [ esp + 0xc ] al
mov eax ebx
shr eax 0x10
mov [ esp + 0xd ] al
mov [ esp + 0xe ] bh
mov [ esp + 0xf ] bl
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push 0xd
lea edx [ esp + 0x7 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push ebx
push edi
push eax
call [ ecx + 0x8 ]
add esp 0xc
add edi ebx
sub ebp ebx
jg r-xdata
jmp r-xdata
sub_46e302
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
mov edx esp
mov [ esp + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x18
mov [ edx ] cl
mov ecx eax
shr ecx 0x10
mov [ edx + 0x1 ] cl
mov [ edx + 0x2 ] ah
mov [ edx + 0x3 ] al
mov ecx 0x4
mov eax [ esi + 0xc ]
push r--data
push ecx
push edx
push 0x61
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
mov [ edi + 0x8 ] 0x0
push edi
push esi
call sub_46dfc7
add esp 0x8
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
retn
sub_46e371
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x28 ]
mov ebp [ esp + 0x2c ]
xor ebx ebx
inc ebx
mov [ esp + 0x8 ] eax
push 0x18
push ebx
call sub_43f807
add esp 0x8
mov edi eax
mov [ edi ] esi
mov [ edi + 0x4 ] ebp
mov [ edi + 0x8 ] ebx
mov ebx [ esp + 0x20 ]
xor esi esi
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] esi
push edi
push [ ebx + 0x4040 ]
call sub_47dcb3
add esp 0x8
cmp eax edi
je r-xdata
push edi
push [ ebx + 0x4044 ]
call sub_47dcb3
add esp 0x8
cmp eax edi
je r-xdata
push edi
jmp r-xdata
mov esi edi
jmp r-xdata
push edi
push [ ebx + 0x4040 ]
call sub_47eb51
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
lea eax [ esp + 0x4 ]
push eax
mov ebx eax
mov eax [ esp + 0x44 ]
push eax
mov eax [ esp + 0x44 ]
push eax
mov eax [ esp + 0x30 ]
push [ eax + 0x20 ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
push [ esp + 0x64 ]
push [ esp + 0x64 ]
push [ esp + 0x64 ]
call sub_497956
add esp 0x24
mov [ esp ] eax
mov eax [ ebx ]
mov edi [ esp + 0x54 ]
xor ecx ecx
inc ecx
lea ebp [ edi + eax + 0x8 ]
lea eax [ edi + eax + 0x18 ]
push ecx
push eax
call sub_43f807
add esp 0x8
mov ebx eax
lea ecx [ esi + 0x10 ]
lea eax [ ebx + 0x10 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] ebp
mov [ ebx + 0x4 ] 0x5e
mov eax [ esi + 0x14 ]
test eax eax
cmovne ecx eax
xor eax eax
mov [ ecx ] ebx
mov [ ebx ] eax
mov [ esi + 0x14 ] ebx
lea eax [ esp + 0x4 ]
mov ebp [ eax ]
mov edx [ ebx + 0x8 ]
lea eax [ ebp + edi ]
mov ecx eax
shr ecx 0x18
mov [ edx + 0x4 ] cl
mov ecx eax
mov edx [ ebx + 0x8 ]
shr ecx 0x10
mov [ edx + 0x5 ] cl
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x6 ] ah
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x7 ] al
mov eax [ ebx + 0x8 ]
add eax 0x8
push ebp
mov edi esi
mov esi [ esp + 0x4 ]
push esi
push eax
call sub_49a1f0
add esp 0xc
mov eax [ ebx + 0x8 ]
lea eax [ eax + ebp + 0x8 ]
push [ esp + 0x54 ]
push [ esp + 0x54 ]
push eax
call sub_49a1f0
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x4 ]
mov ebp [ esp + 0x3c ]
add eax [ ecx ]
mov [ edi + 0xc ] eax
push ebp
call sub_4a7f30
add esp 0x4
mov edi eax
add edi 0x1b
xor eax eax
inc eax
push eax
push edi
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x2c ]
mov ebx eax
mov [ ebx ] 0x3000000
mov [ ebx + 0x6 ] 0x31
mov [ ebx + 0x4 ] 0x3178
mov eax ecx
shr eax 0x18
mov [ ebx + 0x7 ] al
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] al
mov [ ebx + 0x9 ] ch
mov [ ebx + 0xa ] cl
mov ecx [ esp + 0x30 ]
mov eax ecx
shr eax 0x18
mov [ ebx + 0xb ] al
mov eax ecx
shr eax 0x10
mov [ ebx + 0xc ] al
mov [ ebx + 0xd ] ch
mov [ ebx + 0xe ] cl
mov ecx [ esp + 0x34 ]
mov eax ecx
shr eax 0x18
mov [ ebx + 0xf ] al
mov eax ecx
shr eax 0x10
mov [ ebx + 0x10 ] al
mov [ ebx + 0x11 ] ch
mov [ ebx + 0x12 ] cl
push ebp
call sub_4a7f30
add esp 0x4
shr eax 0x18
mov [ ebx + 0x13 ] al
push ebp
call sub_4a7f30
add esp 0x4
shr eax 0x10
mov [ ebx + 0x14 ] al
push ebp
call sub_4a7f30
add esp 0x4
mov [ ebx + 0x15 ] ah
push ebp
call sub_4a7f30
add esp 0x4
lea esi [ ebx + 0x17 ]
mov [ ebx + 0x16 ] al
push ebp
call sub_4a7f30
add esp 0x4
push eax
push ebp
push esi
call sub_49a1f0
add esp 0xc
mov eax [ esp + 0x40 ]
shr eax 0x18
mov esi eax
push ebp
call sub_4a7f30
add esp 0x4
mov ecx esi
mov [ ebx + eax + 0x17 ] cl
mov eax [ esp + 0x40 ]
shr eax 0x10
mov esi eax
push ebp
call sub_4a7f30
add esp 0x4
mov ecx esi
mov [ ebx + eax + 0x18 ] cl
push ebp
call sub_4a7f30
add esp 0x4
mov ecx [ esp + 0x40 ]
mov [ ebx + eax + 0x19 ] ch
push ebp
call sub_4a7f30
add esp 0x4
mov ecx [ esp + 0x40 ]
mov esi [ esp + 0x20 ]
mov edx 0x5a
mov [ ebx + eax + 0x1a ] cl
xor eax eax
mov ecx esi
push eax
push edi
xor edi edi
push ebx
call sub_46e1d5
add esp 0xc
push ebx
mov ebx [ esp + 0x28 ]
call sub_43f9d4
add esp 0x4
cmp [ ebx + 0x24 ] edi
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
push [ ebx + 0x14 ]
push [ eax + 0x14 ]
call sub_44877c
add esp 0x8
mov [ ebx + 0x14 ] edi
push [ ebx + 0x1c ]
call sub_43f9d4
add esp 0x4
mov [ ebx + 0x18 ] 0xffffffff
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x24 ] edi
sub_46e667
push ebp
push ebx
push edi
push esi
sub esp 0x38
mov ecx [ esp + 0x50 ]
mov edi [ esp + 0x58 ]
mov ebp [ esp + 0x54 ]
mov ebx [ esp + 0x4c ]
mov eax [ rw-data ]
lea edx [ ecx - 0x5b ]
mov [ esp + 0x34 ] eax
cmp edx 0xa
jae r-xdata
lea eax [ ecx - 0x51 ]
cmp eax 0x2
jae r-xdata
cmp edi 0x3
mov [ esp + 0x4 ] ecx
mov [ esp ] edi
jg r-xdata
cmp ecx 0x5a
jne r-xdata
mov esi [ ebx + 0x404c ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edi [ ebp ]
lea eax [ esp + 0xc ]
bswap edi
mov [ eax + 0x4 ] edi
push 0x0
push eax
push [ ebx + 0x4038 ]
call sub_47e50d
add esp 0xc
mov esi eax
mov [ esp + 0x8 ] ebp
test esi esi
je r-xdata
push 0x4dd
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x519
push r--data
push r--data
call sub_4a509d
lea eax [ esp + 0xc ]
mov ecx ebp
mov [ esp ] edi
mov edx edi
push eax
mov edi eax
push 0x0
call sub_46f3d5
add esp 0x8
cmp eax 0x1
sbb esi esi
or esi [ edi ]
jns r-xdata
mov eax [ esi + 0xc ]
cmp ecx 0x52
jne r-xdata
cmp ecx 0x51
jne r-xdata
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x10 ]
push eax
push [ ebx + 0x4040 ]
call sub_47e50d
add esp 0xc
mov esi eax
mov ebp ebx
test esi esi
je r-xdata
mov al [ esi + 0x3 ]
mov ecx ebx
mov [ ebp ] al
mov al [ esi + 0x2 ]
mov [ ebp + 0x1 ] al
mov al [ esi + 0x1 ]
mov [ ebp + 0x2 ] al
mov al [ esi ]
mov [ ebp + 0x3 ] al
mov edi [ esp + 0x4 ]
mov edx edi
push esi
push [ esp + 0x4 ]
push ebp
call sub_46e1d5
add esp 0xc
cmp edi 0x61
je r-xdata
mov ecx [ esp + 0x34 ]
call sub_497c4a
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ ebp + esi ]
bswap edi
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] edi
push esi
push [ ebx + 0x4034 ]
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
push 0x4c7
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ eax + 0x8 ] 0x1
push eax
push [ ebx + 0x4048 ]
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] ecx
mov edi eax
call sub_47eb51
add esp 0x8
push edi
call sub_43f9d4
mov ecx [ esp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp eax 0x1
jne r-xdata
mov ebx [ esp ]
lea eax [ ebx + 0x10 ]
push 0x1
push eax
call sub_43f807
add esp 0x8
lea ecx [ eax + 0x10 ]
mov edx esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ebx
add edx 0x10
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x14 ]
test ecx ecx
cmovne edx ecx
xor edi edi
mov [ edx ] eax
mov [ eax ] edi
mov [ esi + 0x14 ] eax
push ebx
push [ esp + 0xc ]
push [ eax + 0x8 ]
call sub_49a1f0
add esp 0xc
cmp [ esi + 0x8 ] edi
jne r-xdata
cmp [ esi + 0x10 ] 0x1
jne r-xdata
cmp edi 0x5c
je r-xdata
mov edx 0x5a
mov ecx ebx
push 0x0
push [ esp + 0x4 ]
push ebp
call sub_46e1d5
jmp r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
mov [ ebx + 0x404c ] eax
push esi
call sub_43f9d4
add esp 0x4
cmp [ ebx + 0x404c ] 0x0
jne r-xdata
mov edx ecx
mov ecx ebx
push 0x0
push edi
push ebp
call sub_46e1d5
add esp 0xc
mov eax [ esi + 0xc ]
mov [ esp + 0x4 ] eax
push eax
push [ ebx + 0x4048 ]
mov [ esp + 0x8 ] edi
mov edi ecx
call sub_47eb51
add esp 0x8
push [ esp + 0x4 ]
call sub_43f9d4
mov ecx edi
jmp r-xdata
push esi
push ebp
call sub_46dfc7
add esp 0x8
jmp r-xdata
mov [ esi + 0x10 ] 0x2
jmp r-xdata
mov eax [ ebx + 0xc ]
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx ebx
mov edx esi
call sub_46ed1f
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx ebx
mov edx esi
call sub_46ed1f
jmp r-xdata
cmp edi 0x5b
jne r-xdata
add esp 0xc
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x4050 ] 0x0
mov edi [ esp + 0x4 ]
add esp 0x4
jmp r-xdata
mov ecx ebx
call sub_46e9ef
jmp r-xdata
cmp [ esp ] 0x8
jl r-xdata
mov ecx [ esp + 0x34 ]
call sub_497c4a
mov ecx ebx
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
jmp sub_46e9ef
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esp + 0x8 ]
xor edi edi
mov eax [ eax + 0x4 ]
bswap eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] edi
push esi
push [ ebx + 0x403c ]
call sub_47dcb3
add esp 0x8
cmp [ ebx + 0x8 ] edi
jne r-xdata
jmp r-xdata
sub_46e9ef
push ebp
push ebx
push edi
push esi
sub esp 0x10c
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x108 ] eax
push 0x0
push [ esi + 0x4034 ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
je r-xdata
push 0x0
push [ esi + 0x4038 ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
je r-xdata
mov ebp 0x2000000
lea ebx [ esp + 0x8 ]
push 0x0
push [ esi + 0x4048 ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
je r-xdata
xor ebx ebx
mov ebp 0x2
jmp r-xdata
mov al [ edi + 0x3 ]
mov [ esp + 0x8 ] al
mov al [ edi + 0x2 ]
mov [ esp + 0x9 ] al
mov al [ edi + 0x1 ]
mov [ esp + 0xa ] al
mov al [ edi ]
mov [ esp + 0xb ] al
mov [ esp + 0xc ] ebp
mov [ esp + 0x10 ] 0x24000000
push 0x24
push r--data
lea eax [ esp + 0x1c ]
push eax
call sub_49a1f0
add esp 0xc
mov [ esp + 0x38 ] ebp
mov [ esp + 0x3c ] 0x6e65
mov eax [ esi + 0xc ]
push r--data
push 0x36
push ebx
push 0x5c
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
push edi
push [ esi + 0x4034 ]
call sub_47eb51
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x4034 ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
jne r-xdata
push [ esi + 0x4034 ]
call sub_47dc82
add esp 0x4
test eax eax
jne r-xdata
xor ebp ebp
mov [ esp ] esi
mov eax [ edi + 0x10 ]
or eax 0x2
cmp eax 0x3
jne r-xdata
mov ecx [ esp + 0x108 ]
call sub_497c4a
add esp 0x10c
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esi + 0x4038 ]
call sub_47dc82
add esp 0x4
test eax eax
jne r-xdata
inc ebp
push ebp
push [ esi + 0x4048 ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
jne r-xdata
push [ edi ]
call sub_4a7f30
add esp 0x4
add eax 0x100
push 0x1
push eax
call sub_43f807
add esp 0x8
mov ebx eax
mov [ ebx ] 0x14000000
lea eax [ ebx + 0x4 ]
push 0x14
push r--data
push eax
call sub_49a1f0
add esp 0xc
mov [ ebx + 0x18 ] 0x0
push [ edi ]
call sub_4a7f30
add esp 0x4
shr eax 0x18
mov [ ebx + 0x19 ] al
push [ edi ]
call sub_4a7f30
add esp 0x4
shr eax 0x10
mov [ ebx + 0x1a ] al
push [ edi ]
call sub_4a7f30
add esp 0x4
mov [ ebx + 0x1b ] ah
push [ edi ]
call sub_4a7f30
add esp 0x4
mov [ ebx + 0x1c ] al
lea eax [ ebx + 0x1d ]
mov [ esp + 0x4 ] eax
mov esi [ edi ]
push esi
call sub_4a7f30
add esp 0x4
push eax
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_49a1f0
add esp 0xc
push [ edi ]
call sub_4a7f30
add esp 0x4
mov cl [ edi + 0x7 ]
mov [ ebx + eax + 0x1d ] cl
mov cl [ edi + 0x6 ]
mov [ ebx + eax + 0x1e ] cl
mov cl [ edi + 0x5 ]
mov [ ebx + eax + 0x1f ] cl
mov cl [ edi + 0x4 ]
mov [ ebx + eax + 0x20 ] cl
add eax 0x21
mov ecx [ esi + 0xc ]
push r--data
push eax
push ebx
push 0x50
push [ esi + 0x4 ]
push [ ecx + 0x14 ]
call sub_448bdd
add esp 0x18
push ebx
call sub_43f9d4
add esp 0x4
push edi
push [ esi + 0x4048 ]
call sub_47eb51
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
dec ebp
mov eax [ edi + 0x8 ]
mov ecx eax
shr ecx 0x18
mov [ esp + 0x8 ] cl
mov ecx eax
shr ecx 0x10
mov [ esp + 0x9 ] cl
mov [ esp + 0xa ] ah
mov [ esp + 0xb ] al
mov eax [ esi + 0xc ]
push r--data
mov ecx 0x4
push ecx
lea ecx [ esp + 0x10 ]
push ecx
push 0x61
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
cmp [ edi + 0x10 ] ebp
jne r-xdata
inc ebx
push ebx
push [ esi + 0x4038 ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
jne r-xdata
push [ esi + 0x4048 ]
call sub_47dc82
add esp 0x4
test eax eax
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov [ edi + 0x10 ] 0x1
jmp r-xdata
mov eax [ esi + 0xc ]
push [ edi + 0x4 ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx esi
mov edx edi
call sub_46ed1f
dec ebx
jmp r-xdata
mov eax [ esi + 0xc ]
push esi
push [ eax + 0xc ]
call sub_47eb51
add esp 0x8
mov eax [ esi + 0xc ]
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448660
add esp 0x8
mov ecx esi
call sub_46dea1
sub_46ed1f
push edi
push esi
mov esi edx
mov edi ecx
push esi
push [ edi + 0x4038 ]
call sub_47eb51
add esp 0x8
push esi
push [ edi + 0x403c ]
call sub_47eb51
add esp 0x8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
retn
mov ecx [ edi + 0xc ]
push eax
push [ ecx + 0x14 ]
call sub_44877c
add esp 0x8
sub_46ed80
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov esi 0x2
push r--data
push ebx
call sub_4a7d90
add esp 0x8
lea ecx [ ebx + eax + 0x1 ]
lea ebx [ ebx + eax ]
cmp [ ecx - 0x1 ] 0x0
cmovne ebx ecx
dec esi
jne r-xdata
push ebx
call sub_43f79e
add esp 0x4
mov [ edi + 0x18 ] eax
push 0x0
push [ edi + 0xc ]
call sub_47e33c
add esp 0x8
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
retn
xor ebx ebx
inc ebx
mov ecx esi
call sub_46ee0c
push ebx
push [ edi + 0xc ]
call sub_47e33c
add esp 0x8
mov esi eax
inc ebx
test esi esi
jne r-xdata
push 0x789
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ esi + 0x14 ] 0x0
je r-xdata
sub_46ee0c
push ebp
push ebx
push edi
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push 0x0
push r--data
push [ eax + 0x18 ]
push r--data
call sub_43fa97
add esp 0x10
mov ebx [ esi + 0x8 ]
mov edi eax
mov eax [ ebx ]
mov ebp [ eax + 0x8 ]
push edi
call sub_4a7f30
add esp 0x4
push eax
push edi
push ebx
call ebp
add esp 0xc
push edi
call sub_43f9d4
add esp 0x4
mov [ esi + 0x14 ] 0x1
pop esi
pop edi
pop ebx
pop ebp
retn
sub_46ee5c
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
push [ esp + 0x18 ]
call sub_44422f
add esp 0x4
mov esi eax
cmp ebx 0x16
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push ebx
push edi
push r--data
push ebx
push edi
push esi
push r--data
call sub_43f758
add esp 0x10
jmp r-xdata
push edi
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
push edi
push esi
push r--data
jmp r-xdata
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
pop esi
pop edi
pop ebx
retn
call sub_43f758
add esp 0xc
sub_46eecd
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edx [ rw-data ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
mov [ esp + 0x14 ] edx
lea edx [ esp + 0x10 ]
mov [ edx ] r--data
push [ esp + 0x34 ]
push ecx
push eax
call sub_46ee5c
add esp 0xc
mov edi eax
xor eax eax
xor ecx ecx
mov ebx esp
lea edx [ esp + 0x4 ]
lea esi [ esp + 0x8 ]
lea ebp [ esp + 0xc ]
inc ecx
mov [ ebx ] eax
mov [ edx ] eax
mov [ esi ] eax
mov [ ebp ] eax
push ecx
push eax
push edx
push esi
push ebp
push ebx
push eax
lea eax [ esp + 0x2c ]
push eax
push [ esp + 0x54 ]
push edi
call sub_493c9c
add esp 0x28
mov ebx eax
push [ ebp ]
call sub_43f9d4
add esp 0x4
push [ esi ]
xor esi esi
inc esi
call sub_43f9d4
add esp 0x4
lea eax [ esp + 0x4 ]
push [ eax ]
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
cmp ebx esi
je r-xdata
mov eax [ esp ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
test ebx ebx
jne r-xdata
push 0x828
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor esi esi
cmp [ esp ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x825
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
sub_46efc9
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov eax [ rw-data ]
mov ebx [ esp + 0x38 ]
mov [ esp + 0x18 ] eax
push 0xaa
push ebx
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
call sub_497c4a
mov eax esi
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
push 0xab
push ebx
call sub_43194f
add esp 0x8
test eax eax
setne al
jmp r-xdata
xor eax eax
push 0xac
push ebx
call sub_43194f
add esp 0x8
test eax eax
setne al
jmp r-xdata
xor esi esi
cmp [ r--data ] 0x0
movzx edi al
je r-xdata
movzx eax al
mov [ esp ] eax
push ebx
push [ esp + 0x38 ]
push [ esp + 0x38 ]
call sub_46ee5c
add esp 0xc
mov ebp eax
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
xor esi esi
lea ecx [ esp + 0x8 ]
mov [ eax ] r--data
lea edx [ esp + 0xc ]
lea ebx [ esp + 0x14 ]
mov [ eax + 0x8 ] esi
mov [ ecx ] esi
lea ecx [ esp + 0x10 ]
mov [ edx ] esi
mov [ ebx ] esi
mov [ ecx ] esi
push [ esp ]
push edi
push edx
push ecx
push ebx
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x1c ] eax
push eax
mov edi [ esp + 0x58 ]
push edi
push [ esp + 0x58 ]
mov [ esp + 0x24 ] ebp
push ebp
call sub_493c9c
add esp 0x28
mov ebp eax
lea eax [ esp + 0xc ]
push [ eax ]
lea eax [ esp + 0x14 ]
push [ eax ]
push [ ebx ]
push ebp
push edi
call sub_447d84
add esp 0x14
push [ ebx ]
call sub_43f9d4
add esp 0x4
lea eax [ esp + 0x10 ]
push [ eax ]
call sub_43f9d4
add esp 0x4
lea eax [ esp + 0xc ]
push [ eax ]
call sub_43f9d4
add esp 0x4
cmp ebp 0x2
je r-xdata
test al al
jne r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x40 ]
mov edi [ esp + 0x4 ]
mov [ eax ] edi
mov eax [ esp + 0x8 ]
mov [ edi + 0x8 ] eax
push sub_46f394
call sub_47dc24
add esp 0x4
mov [ edi + 0xc ] eax
mov eax [ esp + 0x3c ]
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] 0x0
mov eax [ esp ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x10 ] 0x1
jmp r-xdata
cmp ebp 0x1
je r-xdata
mov eax [ esp + 0x40 ]
mov [ eax ] 0x0
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esp ]
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x8 ]
jmp r-xdata
test ebp ebp
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x40 ]
mov [ eax ] 0x0
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esp ]
call sub_43f9d4
add esp 0x4
jmp r-xdata
push 0x873
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_46f1c7
push esi
mov eax [ esp + 0xc ]
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov [ esi + 0x8 ] 0x0
pop esi
retn
push eax
push r--data
push 0x0
push [ esi + 0x14 ]
call sub_4486e6
add esp 0x10
sub_46f1fc
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
push 0x4054
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
mov ecx esi
mov [ edi ] r--data
mov [ edi + 0xc ] esi
mov edx [ esi + 0x10 ]
call sub_47034c
test eax eax
mov [ edi + 0x4 ] eax
jne r-xdata
lea ebx [ eax + 0x1 ]
add eax 0x2
lea ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
test ebx ebx
cmovne eax ebx
mov [ esi + 0x10 ] eax
mov eax [ ecx ]
mov [ esp ] eax
sub esp 0x8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edi
call edx
add esp 0x8
mov [ edi + 0x8 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
xor ebx ebx
mov ecx esi
inc ebx
mov edx ebx
call sub_47034c
test eax eax
mov [ edi + 0x4 ] eax
je r-xdata
mov eax [ edi + 0x8 ]
xor ebx ebx
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x18 ]
add esp 0x8
mov eax [ edi + 0xc ]
push edi
push [ eax + 0xc ]
call sub_47dcb3
add esp 0x8
mov [ edi + 0x14 ] ebx
cmp [ esi + 0x18 ] ebx
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
xor ebx ebx
inc ebx
jmp r-xdata
push edi
mov [ edi + 0x18 ] ebx
mov [ edi + 0x4030 ] ebx
mov [ edi + 0x10 ] ebx
push sub_47044d
call sub_47dc24
add esp 0x4
mov [ edi + 0x4034 ] eax
push sub_470467
call sub_47dc24
add esp 0x4
mov [ edi + 0x4038 ] eax
push sub_470483
call sub_47dc24
add esp 0x4
mov [ edi + 0x403c ] eax
push sub_47049f
call sub_47dc24
add esp 0x4
mov [ edi + 0x4040 ] eax
push sub_4704b9
call sub_47dc24
add esp 0x4
mov [ edi + 0x4044 ] eax
push sub_4704d5
call sub_47dc24
add esp 0x4
mov [ edi + 0x4048 ] eax
mov [ edi + 0x4050 ] ebx
mov [ edi + 0x404c ] ebx
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
add esp 0x4
mov ebp eax
push ebp
push [ edi + 0x4 ]
push [ esi + 0x14 ]
call sub_44862f
add esp 0xc
push ebp
jmp r-xdata
mov ecx edi
call sub_46ee0c
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax ebx
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
call sub_43f9d4
add esp 0x4
sub_46f3b0
push esi
mov esi ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
push eax
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
pop esi
retn
sub_46f3d5
push ebx
push edi
push esi
mov ebx edx
xor esi esi
mov edi ecx
cmp ebx 0x4
jl r-xdata
mov eax esi
pop esi
pop edi
pop ebx
retn
mov eax [ edi ]
bswap eax
push eax
call sub_43b2d8
add esp 0x4
test eax eax
js r-xdata
add ebx 0xfffffffc
cmp eax ebx
jg r-xdata
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
test ecx ecx
je r-xdata
xor esi esi
inc esi
test ebx ebx
je r-xdata
lea edx [ eax + 0x4 ]
mov [ ecx ] edx
add edi 0x4
push edi
push eax
push r--data
call sub_43f758
add esp 0xc
mov [ ebx ] eax
sub_46f42d
push esi
mov eax [ esp + 0xc ]
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov [ esi + 0x8 ] 0x0
mov ecx esi
pop esi
jmp sub_46e9ef
cmp [ esp + 0x10 ] 0x6d
jne r-xdata
mov ecx [ esi + 0xc ]
push eax
push r--data
push [ esi + 0x4 ]
push [ ecx + 0x14 ]
call sub_4486e6
add esp 0x10
cmp [ esi + 0x18 ] 0x0
je r-xdata
sub_46f479
push ebp
push ebx
push edi
push esi
sub esp 0x60
mov eax [ rw-data ]
mov esi [ esp + 0x74 ]
mov ebx [ esp + 0x80 ]
mov ebp [ esp + 0x7c ]
mov [ esp + 0x5c ] eax
mov eax [ esi + 0x10 ]
cmp eax 0x72d
jg r-xdata
cmp eax 0x72e
je r-xdata
test eax eax
je r-xdata
test ebx ebx
je r-xdata
cmp eax 0x73b
je r-xdata
mov [ esi + 0x4030 ] 0x0
jmp r-xdata
cmp eax 0x709
je r-xdata
mov eax 0x72e
jmp r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x4030 ]
jmp r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esp + 0x5c ]
call sub_497c4a
add esp 0x60
pop esi
pop edi
pop ebx
pop ebp
retn
cmp eax 0x3
jg r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x1c ]
mov eax 0x73b
jmp r-xdata
xor eax eax
mov al [ ebp ]
mov edi [ esi + 0x4030 ]
dec ebx
inc ebp
cmp al 0xa
je r-xdata
mov eax 0x709
jmp r-xdata
mov eax [ esi + 0x20 ]
bswap eax
add eax 0x4
push eax
call sub_43b2d8
add esp 0x4
cmp eax 0x5
mov [ esi + 0x1c ] eax
jl r-xdata
mov [ esp + 0x8 ] ecx
mov [ esp ] edx
lea edx [ edx - 0x5 ]
lea ecx [ esi + 0x25 ]
mov al [ esi + 0x24 ]
movzx edi al
cmp al 0x4f
mov [ esp + 0xc ] edi
jle r-xdata
cmp edi 0x2e
jb r-xdata
cmp edi 0x4010
jae r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov edi eax
mov ecx esi
mov edx edi
call sub_470505
push edi
jmp r-xdata
cmp eax 0x4011
jb r-xdata
cmp al 0x1
je r-xdata
add al 0xb0
cmp al 0x14
ja r-xdata
push r--data
call sub_43f758
add esp 0x4
mov edi eax
mov ecx esi
mov edx edi
call sub_470505
push edi
jmp r-xdata
lea eax [ esi + 0x20 ]
push 0x2e
push r--data
mov [ esp + 0x8 ] eax
push eax
call sub_498a6d
add esp 0xc
test eax eax
je r-xdata
push r--data
call sub_43f758
add esp 0x4
mov edi eax
mov ecx esi
mov edx edi
call sub_470505
push edi
jmp r-xdata
lea ecx [ edi + 0x1 ]
mov [ esi + 0x4030 ] ecx
mov [ esi + edi + 0x20 ] al
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ecx edi
mov edx [ ecx ]
cmp edx eax
jge r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_46e9ef
jmp r-xdata
cmp al 0x2
je r-xdata
push [ esp + 0xc ]
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
movzx eax al
jmp [ eax * 4 + jump_table_416fc0 ]
mov ecx [ esp ]
lea eax [ esi + 0x4030 ]
test edi edi
mov [ esp + 0x8 ] eax
jle r-xdata
mov edi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
push 0x0
push edx
push ecx
mov ecx [ esp + 0x18 ]
mov edi ecx
push ecx
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
cmp [ esp ] 0x9
jl r-xdata
cmp al 0x4
je r-xdata
mov edi eax
test edi edi
jne r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] edx
push 0x0
push eax
call sub_46f3d5
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push ecx
push edi
push r--data
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_4486e6
add esp 0x14
mov [ esi + 0x18 ] 0x1
jmp r-xdata
cmp [ ecx + edi - 0x1 ] 0xd
jne r-xdata
mov eax edi
cmp al 0x61
jne r-xdata
mov ecx esi
mov edx edi
call sub_470505
push edi
push 0x6e6
push r--data
push r--data
call sub_4a509d
add esp 0xc
push r--data
jmp r-xdata
mov edi [ esp + 0x34 ]
test edi edi
je r-xdata
mov eax [ esp + 0x8 ]
dec edi
mov [ eax ] edi
mov eax [ esi + 0x25 ]
lea ecx [ esp + 0x34 ]
bswap eax
mov [ ecx + 0x8 ] eax
push 0x0
push ecx
push [ esi + 0x403c ]
call sub_47e50d
add esp 0xc
mov edi eax
test edi edi
je r-xdata
call sub_43f758
add esp 0x4
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x2
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
push 0x0
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
mov [ esp + 0xc ] eax
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
xor eax eax
push eax
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
setns cl
cmp edi edx
setl al
and al cl
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ edi + 0x10 ] 0x1
jmp r-xdata
mov eax [ esi + 0xc ]
push [ edi + 0x4 ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx esi
mov edx edi
call sub_46ed1f
jmp r-xdata
push r--data
jmp r-xdata
cmp edi edx
jge r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
movzx eax [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] eax
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
mov al [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] al
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + edi ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
jmp r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
mov edi eax
test edi edi
cmovne edi [ esp + 0x34 ]
test edi edi
jne r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
test eax eax
cmovne eax [ esp + 0x34 ]
test eax eax
jne r-xdata
call sub_46e1d5
add esp 0xc
jmp r-xdata
mov eax [ esp ]
mov ecx [ esi + eax + 0x25 ]
mov eax [ esi + 0xc ]
bswap ecx
push esi
mov [ esp + 0x18 ] ecx
push ecx
push edi
push [ eax + 0x14 ]
call sub_448456
add esp 0x10
test eax eax
je r-xdata
push 0x55e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp ]
mov edi [ esi + ecx + 0x25 ]
mov [ esp ] eax
bswap edi
push eax
call sub_43f79e
add esp 0x4
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
push [ esi + 0x4048 ]
call sub_47e50d
add esp 0xc
mov edi eax
push [ esp + 0x34 ]
call sub_43f9d4
add esp 0x4
test edi edi
je r-xdata
push 0x5a7
push r--data
push r--data
mov edi eax
call sub_4a509d
mov eax edi
add esp 0xc
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
cmp [ esi + eax + 0x25 ] 0x0
mov [ esi + eax + 0x25 ] 0x1
mov eax r--data
cmovne eax ecx
mov ecx [ esi + 0xc ]
push eax
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ ecx + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax 0xc
push eax
push 0x1
call sub_43f807
add esp 0x8
mov ecx edi
mov edi eax
mov [ esp ] ecx
push ecx
call sub_43f79e
add esp 0x4
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push edi
push [ esi + 0x4048 ]
call sub_47dcb3
add esp 0x8
cmp eax edi
je r-xdata
cmp [ esp + 0x20 ] 0x0
mov edi [ esp + 0x8 ]
je r-xdata
mov ecx [ esp + 0xc ]
xor eax eax
cmp [ esi + ecx + 0x25 ] 0x0
mov [ esi + ecx + 0x25 ] 0x1
mov ecx r--data
cmovne ecx eax
mov eax [ esi + 0xc ]
push ecx
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
mov edi [ esp + 0x8 ]
jmp r-xdata
push edi
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
test edi edi
mov eax edi
mov edi [ esp ]
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
xor edi edi
push [ esp ]
call sub_43f9d4
add esp 0x4
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
call sub_43f9d4
add esp 0x4
jmp r-xdata
push 0x10
push 0x1
mov [ esp + 0x14 ] eax
call sub_43f807
add esp 0x8
xor ecx ecx
lea edi [ esi + 0x404c ]
mov [ eax ] ecx
mov edx [ esi + 0x4050 ]
test edx edx
cmovne edi edx
mov [ edi ] eax
mov edx [ esp + 0xc ]
mov edi [ esp ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x20 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
xor eax eax
mov [ edi ] 0x0
sub_46f826
lea eax [ esp + 0x34 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
cmp eax 0x1
lea eax [ esp + 0x34 ]
sbb edi edi
or edi [ eax ]
js r-xdata
push r--data
mov eax [ esp ]
add eax 0xffffffef
cmp edi eax
jg r-xdata
mov ecx esi
mov edx edi
call sub_470505
push edi
push 0x6e6
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + edi + 0x25 ]
bswap eax
mov [ esp + 0xc ] eax
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448af4
add esp 0x8
mov [ esp ] eax
mov edx [ esp + 0xc ]
mov ecx esi
mov eax [ esi + edi + 0x2d ]
bswap eax
push eax
push 0x3
mov eax 0x0
push eax
push [ esp + 0xc ]
call sub_470595
add esp 0x10
mov ecx [ esp ]
mov eax ecx
shr eax 0x18
mov [ esi + edi + 0x25 ] al
mov eax ecx
shr eax 0x10
mov [ esi + edi + 0x26 ] al
mov [ esi + edi + 0x27 ] ch
mov [ esi + edi + 0x28 ] cl
xor ecx ecx
mov eax [ esi + 0xc ]
push ecx
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x5a
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
jmp r-xdata
mov edi [ esp + 0x8 ]
mov eax [ esi + 0x20 ]
bswap eax
add eax 0x4
push eax
call sub_43b2d8
add esp 0x4
cmp eax 0x5
mov [ esi + 0x1c ] eax
jl r-xdata
test ebx ebx
je r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov edi eax
mov ecx esi
mov edx edi
call sub_470505
push edi
jmp r-xdata
cmp eax 0x4011
jb r-xdata
mov eax 0x72e
jmp r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x4030 ]
jmp r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ecx edi
mov edx [ ecx ]
cmp edx eax
jge r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esp + 0x5c ]
call sub_497c4a
add esp 0x60
pop esi
pop edi
pop ebx
pop ebp
retn
cmp eax 0x3
jg r-xdata
xor eax eax
mov [ esp + 0x8 ] ecx
mov [ esp ] edx
lea edx [ edx - 0x5 ]
lea ecx [ esi + 0x25 ]
mov al [ esi + 0x24 ]
movzx edi al
cmp al 0x4f
mov [ esp + 0xc ] edi
jle r-xdata
test ebx ebx
jne r-xdata
cmp al 0x1
je r-xdata
add al 0xb0
cmp al 0x14
ja r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x1c ]
mov eax 0x73b
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_46e9ef
jmp r-xdata
cmp al 0x2
je r-xdata
push [ esp + 0xc ]
push r--data
call sub_43f758
add esp 0x8
jmp r-xdata
movzx eax al
jmp [ eax * 4 + jump_table_416fc0 ]
mov eax [ esi + 0xc ]
push 0x0
push edx
push ecx
mov ecx [ esp + 0x18 ]
mov edi ecx
push ecx
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
cmp [ esp ] 0x9
jl r-xdata
cmp al 0x4
je r-xdata
mov edi eax
test edi edi
jne r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] edx
push 0x0
push eax
call sub_46f3d5
add esp 0x8
test eax eax
je r-xdata
mov eax edi
cmp al 0x61
jne r-xdata
push r--data
jmp r-xdata
mov edi [ esp + 0x34 ]
test edi edi
je r-xdata
mov eax [ esi + 0x25 ]
lea ecx [ esp + 0x34 ]
bswap eax
mov [ ecx + 0x8 ] eax
push 0x0
push ecx
push [ esi + 0x403c ]
call sub_47e50d
add esp 0xc
mov edi eax
test edi edi
je r-xdata
call sub_43f758
add esp 0x4
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x2
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
push 0x0
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
mov [ esp + 0xc ] eax
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
xor eax eax
push eax
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
setns cl
cmp edi edx
setl al
and al cl
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ edi + 0x10 ] 0x1
jmp r-xdata
mov eax [ esi + 0xc ]
push [ edi + 0x4 ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx esi
mov edx edi
call sub_46ed1f
jmp r-xdata
push r--data
jmp r-xdata
cmp edi edx
jge r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
movzx eax [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] eax
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
mov al [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] al
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + edi ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
jmp r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
mov edi eax
test edi edi
cmovne edi [ esp + 0x34 ]
test edi edi
jne r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
test eax eax
cmovne eax [ esp + 0x34 ]
test eax eax
jne r-xdata
call sub_46e1d5
add esp 0xc
jmp r-xdata
mov eax [ esp ]
mov ecx [ esi + eax + 0x25 ]
mov eax [ esi + 0xc ]
bswap ecx
push esi
mov [ esp + 0x18 ] ecx
push ecx
push edi
push [ eax + 0x14 ]
call sub_448456
add esp 0x10
test eax eax
je r-xdata
push 0x55e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp ]
mov edi [ esi + ecx + 0x25 ]
mov [ esp ] eax
bswap edi
push eax
call sub_43f79e
add esp 0x4
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
push [ esi + 0x4048 ]
call sub_47e50d
add esp 0xc
mov edi eax
push [ esp + 0x34 ]
call sub_43f9d4
add esp 0x4
test edi edi
je r-xdata
push 0x5a7
push r--data
push r--data
mov edi eax
call sub_4a509d
mov eax edi
add esp 0xc
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
cmp [ esi + eax + 0x25 ] 0x0
mov [ esi + eax + 0x25 ] 0x1
mov eax r--data
cmovne eax ecx
mov ecx [ esi + 0xc ]
push eax
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ ecx + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax 0xc
push eax
push 0x1
call sub_43f807
add esp 0x8
mov ecx edi
mov edi eax
mov [ esp ] ecx
push ecx
call sub_43f79e
add esp 0x4
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push edi
push [ esi + 0x4048 ]
call sub_47dcb3
add esp 0x8
cmp eax edi
je r-xdata
cmp [ esp + 0x20 ] 0x0
mov edi [ esp + 0x8 ]
je r-xdata
mov ecx [ esp + 0xc ]
xor eax eax
cmp [ esi + ecx + 0x25 ] 0x0
mov [ esi + ecx + 0x25 ] 0x1
mov ecx r--data
cmovne ecx eax
mov eax [ esi + 0xc ]
push ecx
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
mov edi [ esp + 0x8 ]
jmp r-xdata
push edi
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
test edi edi
mov eax edi
mov edi [ esp ]
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
xor edi edi
push [ esp ]
call sub_43f9d4
add esp 0x4
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
call sub_43f9d4
add esp 0x4
jmp r-xdata
push 0x10
push 0x1
mov [ esp + 0x14 ] eax
call sub_43f807
add esp 0x8
xor ecx ecx
lea edi [ esi + 0x404c ]
mov [ eax ] ecx
mov edx [ esi + 0x4050 ]
test edx edx
cmovne edi edx
mov [ edi ] eax
mov edx [ esp + 0xc ]
mov edi [ esp ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x20 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
xor eax eax
mov [ edi ] 0x0
sub_46f8d9
cmp [ esp ] 0x14
jg r-xdata
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] ecx
mov edi [ esi + 0x25 ]
mov eax [ esi + 0x29 ]
mov [ esp + 0xc ] eax
bswap edi
lea eax [ esp + 0x34 ]
mov [ eax ] edi
push 0x0
push eax
push [ esi + 0x4034 ]
call sub_47e50d
add esp 0xc
test eax eax
mov [ esp ] eax
je r-xdata
push r--data
jmp r-xdata
mov [ esp + 0x38 ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
push [ esi + 0x4044 ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x14 ] edi
mov eax [ esi + 0xc ]
mov [ esp + 0x18 ] 0x0
push esi
push [ eax + 0x14 ]
call sub_448af4
add esp 0x8
jmp r-xdata
call sub_43f758
add esp 0x4
push edi
push r--data
jmp r-xdata
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] eax
mov eax [ eax ]
mov ecx eax
mov edx [ esp + 0xc ]
shr ecx 0x18
mov [ esi + 0x29 ] cl
mov ecx eax
shr ecx 0x10
mov [ esi + 0x2a ] cl
mov [ esi + 0x2b ] ah
mov [ esi + 0x2c ] al
bswap edx
mov ecx esi
mov edi [ esi + 0x31 ]
bswap edi
push edi
mov edi 0x0
push edi
push [ esp + 0x1c ]
push eax
call sub_470595
add esp 0x10
mov edi [ esp ]
test edi edi
je r-xdata
mov ecx esi
mov edx edi
call sub_470505
push edi
push 0x6e6
push r--data
push r--data
call sub_4a509d
add esp 0xc
call sub_43f758
add esp 0x8
jmp r-xdata
mov edx [ esp + 0x18 ]
mov edi [ esp + 0x8 ]
test edx edx
je r-xdata
mov eax [ esi + 0xc ]
push 0x0
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x5b
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
push edi
push [ esi + 0x4034 ]
call sub_47eb51
add esp 0x8
push edi
jmp r-xdata
mov edi [ esp + 0x8 ]
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov [ edi ] 0x0
mov ecx [ esi + 0x2d ]
bswap ecx
cmp ecx 0xff
ja r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x20 ]
bswap eax
add eax 0x4
push eax
call sub_43b2d8
add esp 0x4
cmp eax 0x5
mov [ esi + 0x1c ] eax
jl r-xdata
test ebx ebx
je r-xdata
push ecx
push eax
push edx
push esi
mov [ esp + 0x28 ] edx
call sub_46e0fa
add esp 0x10
mov edx [ esp + 0x18 ]
mov ecx esi
call sub_46e0cd
jmp r-xdata
push ecx
push r--data
jmp r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov edi eax
mov ecx esi
mov edx edi
call sub_470505
push edi
jmp r-xdata
cmp eax 0x4011
jb r-xdata
mov eax 0x72e
jmp r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x4030 ]
jmp r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ecx edi
mov edx [ ecx ]
cmp edx eax
jge r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esp + 0x5c ]
call sub_497c4a
add esp 0x60
pop esi
pop edi
pop ebx
pop ebp
retn
cmp eax 0x3
jg r-xdata
xor eax eax
mov [ esp + 0x8 ] ecx
mov [ esp ] edx
lea edx [ edx - 0x5 ]
lea ecx [ esi + 0x25 ]
mov al [ esi + 0x24 ]
movzx edi al
cmp al 0x4f
mov [ esp + 0xc ] edi
jle r-xdata
test ebx ebx
jne r-xdata
cmp al 0x1
je r-xdata
add al 0xb0
cmp al 0x14
ja r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x1c ]
mov eax 0x73b
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_46e9ef
jmp r-xdata
cmp al 0x2
je r-xdata
push [ esp + 0xc ]
push r--data
movzx eax al
jmp [ eax * 4 + jump_table_416fc0 ]
mov eax [ esi + 0xc ]
push 0x0
push edx
push ecx
mov ecx [ esp + 0x18 ]
mov edi ecx
push ecx
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
cmp [ esp ] 0x9
jl r-xdata
cmp al 0x4
je r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] edx
push 0x0
push eax
call sub_46f3d5
add esp 0x8
test eax eax
je r-xdata
mov eax edi
cmp al 0x61
jne r-xdata
push r--data
jmp r-xdata
mov edi [ esp + 0x34 ]
test edi edi
je r-xdata
mov eax [ esi + 0x25 ]
lea ecx [ esp + 0x34 ]
bswap eax
mov [ ecx + 0x8 ] eax
push 0x0
push ecx
push [ esi + 0x403c ]
call sub_47e50d
add esp 0xc
mov edi eax
test edi edi
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x2
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
push 0x0
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
mov [ esp + 0xc ] eax
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
xor eax eax
push eax
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
setns cl
cmp edi edx
setl al
and al cl
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ edi + 0x10 ] 0x1
jmp r-xdata
mov eax [ esi + 0xc ]
push [ edi + 0x4 ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx esi
mov edx edi
call sub_46ed1f
jmp r-xdata
push r--data
jmp r-xdata
cmp edi edx
jge r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
movzx eax [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] eax
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
mov al [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] al
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + edi ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
jmp r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
mov edi eax
test edi edi
cmovne edi [ esp + 0x34 ]
test edi edi
jne r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
test eax eax
cmovne eax [ esp + 0x34 ]
test eax eax
jne r-xdata
call sub_46e1d5
add esp 0xc
jmp r-xdata
mov eax [ esp ]
mov ecx [ esi + eax + 0x25 ]
mov eax [ esi + 0xc ]
bswap ecx
push esi
mov [ esp + 0x18 ] ecx
push ecx
push edi
push [ eax + 0x14 ]
call sub_448456
add esp 0x10
test eax eax
je r-xdata
push 0x55e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp ]
mov edi [ esi + ecx + 0x25 ]
mov [ esp ] eax
bswap edi
push eax
call sub_43f79e
add esp 0x4
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
push [ esi + 0x4048 ]
call sub_47e50d
add esp 0xc
mov edi eax
push [ esp + 0x34 ]
call sub_43f9d4
add esp 0x4
test edi edi
je r-xdata
push 0x5a7
push r--data
push r--data
mov edi eax
call sub_4a509d
mov eax edi
add esp 0xc
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
cmp [ esi + eax + 0x25 ] 0x0
mov [ esi + eax + 0x25 ] 0x1
mov eax r--data
cmovne eax ecx
mov ecx [ esi + 0xc ]
push eax
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ ecx + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax 0xc
push eax
push 0x1
call sub_43f807
add esp 0x8
mov ecx edi
mov edi eax
mov [ esp ] ecx
push ecx
call sub_43f79e
add esp 0x4
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push edi
push [ esi + 0x4048 ]
call sub_47dcb3
add esp 0x8
cmp eax edi
je r-xdata
cmp [ esp + 0x20 ] 0x0
mov edi [ esp + 0x8 ]
je r-xdata
mov ecx [ esp + 0xc ]
xor eax eax
cmp [ esi + ecx + 0x25 ] 0x0
mov [ esi + ecx + 0x25 ] 0x1
mov ecx r--data
cmovne ecx eax
mov eax [ esi + 0xc ]
push ecx
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
mov edi [ esp + 0x8 ]
jmp r-xdata
push edi
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
test edi edi
mov eax edi
mov edi [ esp ]
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
xor edi edi
push [ esp ]
call sub_43f9d4
add esp 0x4
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
push 0x10
push 0x1
mov [ esp + 0x14 ] eax
call sub_43f807
add esp 0x8
xor ecx ecx
lea edi [ esi + 0x404c ]
mov [ eax ] ecx
mov edx [ esi + 0x4050 ]
test edx edx
cmovne edi edx
mov [ edi ] eax
mov edx [ esp + 0xc ]
mov edi [ esp ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x20 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_46f8ed
cmp [ esp ] 0x8
jg r-xdata
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] ecx
lea eax [ esp + 0x34 ]
mov edi [ esi + 0x25 ]
bswap edi
mov [ eax ] edi
push 0x0
push eax
push [ esi + 0x4034 ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
push r--data
jmp r-xdata
mov [ esp + 0x38 ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
push [ esi + 0x4044 ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
mov edi eax
mov eax [ esi + 0xc ]
push 0x0
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x5c
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
push edi
push [ esi + 0x4034 ]
call sub_47eb51
add esp 0x8
push edi
jmp r-xdata
call sub_43f758
add esp 0x4
push edi
push r--data
jmp r-xdata
push eax
push esi
call sub_46e302
add esp 0x8
jmp r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ecx esi
mov edx edi
call sub_470505
push edi
push 0x6e6
push r--data
push r--data
call sub_4a509d
add esp 0xc
call sub_43f758
add esp 0x8
jmp r-xdata
mov edi [ esp + 0x8 ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi + 0x20 ]
bswap eax
add eax 0x4
push eax
call sub_43b2d8
add esp 0x4
cmp eax 0x5
mov [ esi + 0x1c ] eax
jl r-xdata
test ebx ebx
je r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov edi eax
mov ecx esi
mov edx edi
call sub_470505
push edi
jmp r-xdata
cmp eax 0x4011
jb r-xdata
mov eax 0x72e
jmp r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x4030 ]
jmp r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ecx edi
mov edx [ ecx ]
cmp edx eax
jge r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esp + 0x5c ]
call sub_497c4a
add esp 0x60
pop esi
pop edi
pop ebx
pop ebp
retn
cmp eax 0x3
jg r-xdata
xor eax eax
mov [ esp + 0x8 ] ecx
mov [ esp ] edx
lea edx [ edx - 0x5 ]
lea ecx [ esi + 0x25 ]
mov al [ esi + 0x24 ]
movzx edi al
cmp al 0x4f
mov [ esp + 0xc ] edi
jle r-xdata
test ebx ebx
jne r-xdata
cmp al 0x1
je r-xdata
add al 0xb0
cmp al 0x14
ja r-xdata
mov ecx [ esi + 0x4030 ]
mov al [ ebp ]
dec ebx
inc ebp
lea edi [ esi + 0x4030 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4030 ] edx
mov [ esi + ecx + 0x20 ] al
mov eax [ esi + 0x1c ]
mov eax 0x73b
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov ecx esi
mov [ esi + 0x8 ] 0x0
call sub_46e9ef
jmp r-xdata
cmp al 0x2
je r-xdata
push [ esp + 0xc ]
push r--data
movzx eax al
jmp [ eax * 4 + jump_table_416fc0 ]
mov eax [ esi + 0xc ]
push 0x0
push edx
push ecx
mov ecx [ esp + 0x18 ]
mov edi ecx
push ecx
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
cmp [ esp ] 0x9
jl r-xdata
cmp al 0x4
je r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] edx
push 0x0
push eax
call sub_46f3d5
add esp 0x8
test eax eax
je r-xdata
mov eax edi
cmp al 0x61
jne r-xdata
push r--data
jmp r-xdata
mov edi [ esp + 0x34 ]
test edi edi
je r-xdata
mov eax [ esi + 0x25 ]
lea ecx [ esp + 0x34 ]
bswap eax
mov [ ecx + 0x8 ] eax
push 0x0
push ecx
push [ esi + 0x403c ]
call sub_47e50d
add esp 0xc
mov edi eax
test edi edi
je r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x2
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
push 0x0
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
js r-xdata
push r--data
push edi
call sub_4a7d00
add esp 0x8
mov [ esp + 0xc ] eax
push edi
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x34 ]
mov edx edi
push eax
xor eax eax
push eax
call sub_46f3d5
mov edx edi
add esp 0x8
cmp eax 0x1
sbb edi edi
or edi [ esp + 0x34 ]
setns cl
cmp edi edx
setl al
and al cl
cmp [ esp + 0xc ] 0x0
je r-xdata
mov [ edi + 0x10 ] 0x1
jmp r-xdata
mov eax [ esi + 0xc ]
push [ edi + 0x4 ]
push [ eax + 0x14 ]
call sub_448b27
add esp 0x8
mov ecx esi
mov edx edi
call sub_46ed1f
jmp r-xdata
push r--data
jmp r-xdata
cmp edi edx
jge r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
movzx eax [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] eax
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
lea ecx [ eax + edi + 0x1 ]
mov al [ ecx - 0x1 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] al
lea eax [ edi + 0x1 ]
sub edx eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x34 ]
mov [ esp + 0x18 ] edx
push eax
push 0x0
call sub_46f3d5
add esp 0x8
xor ecx ecx
inc ecx
cmp eax ecx
sbb ecx ecx
or ecx [ esp + 0x34 ]
add ecx [ esp + 0xc ]
js r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + edi ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
push r--data
jmp r-xdata
mov eax [ esp ]
add eax 0xfffffff7
cmp ecx eax
jg r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
jmp r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
mov edi eax
test edi edi
cmovne edi [ esp + 0x34 ]
test edi edi
jne r-xdata
mov [ esp ] ecx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0xc ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
call sub_46f3d5
add esp 0x8
test eax eax
cmovne eax [ esp + 0x34 ]
test eax eax
jne r-xdata
call sub_46e1d5
add esp 0xc
jmp r-xdata
mov eax [ esp ]
mov ecx [ esi + eax + 0x25 ]
mov eax [ esi + 0xc ]
bswap ecx
push esi
mov [ esp + 0x18 ] ecx
push ecx
push edi
push [ eax + 0x14 ]
call sub_448456
add esp 0x10
test eax eax
je r-xdata
push 0x55e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp ]
mov edi [ esi + ecx + 0x25 ]
mov [ esp ] eax
bswap edi
push eax
call sub_43f79e
add esp 0x4
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] edi
push 0x0
lea eax [ esp + 0x38 ]
push eax
push [ esi + 0x4048 ]
call sub_47e50d
add esp 0xc
mov edi eax
push [ esp + 0x34 ]
call sub_43f9d4
add esp 0x4
test edi edi
je r-xdata
push 0x5a7
push r--data
push r--data
mov edi eax
call sub_4a509d
mov eax edi
add esp 0xc
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
cmp [ esi + eax + 0x25 ] 0x0
mov [ esi + eax + 0x25 ] 0x1
mov eax r--data
cmovne eax ecx
mov ecx [ esi + 0xc ]
push eax
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ ecx + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax 0xc
push eax
push 0x1
call sub_43f807
add esp 0x8
mov ecx edi
mov edi eax
mov [ esp ] ecx
push ecx
call sub_43f79e
add esp 0x4
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x0
push edi
push [ esi + 0x4048 ]
call sub_47dcb3
add esp 0x8
cmp eax edi
je r-xdata
cmp [ esp + 0x20 ] 0x0
mov edi [ esp + 0x8 ]
je r-xdata
mov ecx [ esp + 0xc ]
xor eax eax
cmp [ esi + ecx + 0x25 ] 0x0
mov [ esi + ecx + 0x25 ] 0x1
mov ecx r--data
cmovne ecx eax
mov eax [ esi + 0xc ]
push ecx
push [ esp + 0x14 ]
push [ esp + 0xc ]
push 0x50
push [ esi + 0x4 ]
push [ eax + 0x14 ]
call sub_448bdd
add esp 0x18
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
mov edi [ esp + 0x8 ]
jmp r-xdata
push edi
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
mov eax [ esi + 0xc ]
push esi
push [ eax + 0x14 ]
call sub_448533
add esp 0x8
test edi edi
mov eax edi
mov edi [ esp ]
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
xor edi edi
push [ esp ]
call sub_43f9d4
add esp 0x4
jmp r-xdata
xor eax eax
mov edx 0x52
mov ecx esi
push eax
push eax
push r--data
call sub_46e1d5
add esp 0xc
push 0x10
push 0x1
mov [ esp + 0x14 ] eax
call sub_43f807
add esp 0x8
xor ecx ecx
lea edi [ esi + 0x404c ]
mov [ eax ] ecx
mov edx [ esi + 0x4050 ]
test edx edx
cmovne edi edx
mov [ edi ] eax
mov edx [ esp + 0xc ]
mov edi [ esp ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x20 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
xor eax eax
mov [ edi ] 0x0
sub_47034c
push ebp
push ebx
push edi
push esi
mov eax 0x4064
call sub_497c60
mov eax [ rw-data ]
mov esi edx
mov edi ecx
lea edx [ esp + 0xc ]
mov ecx 0x4
mov [ esp + 0x4060 ] eax
lea eax [ esp + 0x8 ]
mov [ edx + 0x4 ] esi
push eax
push ecx
push 0x0
push edx
push [ edi + 0xc ]
call sub_47e3cc
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x4060 ]
call sub_497c4a
mov eax esi
add esp 0x4064
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp [ esp + 0x8 ]
mov [ esp ] esi
mov esi edi
push [ edi + 0xc ]
call sub_47dc82
add esp 0x4
mov ebx eax
sub eax ebp
mov [ esp + 0x4 ] esi
cmp eax 0x2
jl r-xdata
mov ecx [ esp + 0x8 ]
mov edi [ esp ]
mov edi [ esp ]
push 0x172
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ ebp + ebx ]
mov esi eax
shr esi 0x1f
add esi eax
sar esi 0x1
push esi
mov eax [ esp + 0x8 ]
push [ eax + 0xc ]
call sub_47e33c
add esp 0x8
mov ecx [ esp + 0x8 ]
lea edx [ esi + edi ]
sub edx ecx
cmp [ eax + 0x4 ] edx
cmovne ebx esi
cmove ebp esi
mov eax ebx
sub eax ebp
cmp eax 0x1
jg r-xdata
jmp r-xdata
lea edi [ edi + ebp + 0x1 ]
sub edi ecx
mov [ esp + 0x10 ] edi
push 0x0
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0xc ]
push [ eax + 0xc ]
call sub_47e50d
add esp 0xc
test eax eax
mov esi edi
je r-xdata
sub_4704d5
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push [ edi ]
push [ esi ]
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
pop esi
pop edi
retn
mov eax [ edi + 0x4 ]
cmp [ esi + 0x4 ] eax
jge r-xdata
setg al
movzx eax al
xor eax eax
dec eax
jmp r-xdata
sub_470505
push ebp
push ebx
push edi
push esi
mov ebp edx
mov esi ecx
push ebp
call sub_4a7f30
add esp 0x4
mov ebx eax
lea eax [ ebx + 0x100 ]
push 0x1
push eax
call sub_43f807
add esp 0x8
mov edi eax
mov eax 0x2000000
mov [ edi ] eax
mov eax ebx
shr eax 0x18
mov [ edi + 0x4 ] al
mov eax ebx
shr eax 0x10
mov [ edi + 0x5 ] al
mov [ edi + 0x6 ] bh
mov [ edi + 0x7 ] bl
lea eax [ edi + 0x8 ]
push ebx
push ebp
push eax
call sub_49a1f0
add esp 0xc
mov eax 0x2000000
xor ebp ebp
mov ecx esi
mov [ edi + ebx + 0x8 ] eax
mov [ edi + ebx + 0xc ] 0x6e65
add ebx 0xe
xor edx edx
inc edx
push ebp
push ebx
push edi
call sub_46e1d5
add esp 0xc
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
mov [ esi + 0x8 ] ebp
mov ecx esi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_46e9ef
sub_470595
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x14 ]
mov edi ecx
mov ebx edx
push 0x28
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov eax [ esp + 0x18 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
push esi
push [ edi + 0x4038 ]
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
cmp [ esi + 0x10 ] 0x3
je r-xdata
push esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
push [ edi + 0x403c ]
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
push esi
push [ edi + 0x4038 ]
call sub_47eb51
add esp 0x8
push esi
jmp r-xdata
call sub_43f9d4
add esp 0x4
xor esi esi
sub_470630
push ebx
push edi
push esi
xor edi edi
inc edi
push 0x10
push edi
call sub_43f807
add esp 0x8
mov esi eax
push 0x38ffc
push edi
call sub_43f807
add esp 0x8
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x8 ] sub_4706bf
mov [ esi + 0xc ] sub_4706fc
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
movaps xmm0 [ r--data ]
movups [ eax + 0xc ] xmm0
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop edi
pop ebx
retn
mov [ esi ] edi
mov ebx 0xff
push 0x30000
push ebx
push edi
call sub_49acf0
add esp 0xc
mov eax edi
add eax 0x38004
push 0xfee
push ebx
push eax
call sub_49acf0
add esp 0xc
xor eax eax
mov [ edi + 0x38000 ] eax
mov [ edi + 0x38ff8 ] eax
sub_4706bf
mov ecx [ esp + 0x4 ]
mov al [ esp + 0x8 ]
mov ecx [ ecx + 0x4 ]
movzx edx al
cmp [ ecx + 0x18 ] 0x0
je r-xdata
cmp al 0x8f
ja r-xdata
push 0x8
jmp r-xdata
movzx eax [ edx + r--data ]
lea edx [ eax + eax + 0x1 ]
push 0x9
movzx edx [ edx + r--data ]
push 0x8
jmp r-xdata
call sub_470a61
add esp 0x4
retn
sub_4706fc
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x28 ]
mov eax [ eax + 0x4 ]
mov [ esp ] eax
cmp [ eax + 0x18 ] 0x0
je r-xdata
test esi esi
jg r-xdata
push 0x20c
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
mov ecx 0x102
cmp esi 0x104
jg r-xdata
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp + 0x4 ] esi
xor esi esi
mov edx 0x1d
mov [ esp + 0x8 ] ecx
dec esi
jmp r-xdata
lea ecx [ esi - 0x3 ]
cmp esi 0x103
cmovl ecx esi
mov eax edx
sub eax esi
cmp eax 0x1
jg r-xdata
lea eax [ esi + edx ]
mov edi ecx
mov ebp eax
shr ebp 0x1f
add ebp eax
sar ebp 0x1
lea ebx [ ebp + ebp * 2 ]
sub edi [ ebx * 4 + r--data ]
jl r-xdata
push 0x225
push r--data
push r--data
mov edi edx
call sub_4a509d
mov ecx [ esp + 0x14 ]
mov edx edi
add esp 0xc
mov edx ebp
cmp ecx [ ebx * 4 + r--data ]
mov esi ebp
jg r-xdata
movsx eax [ ebx * 4 + r--data ]
cmp ebp 0x16
ja r-xdata
movzx edx [ eax + r--data ]
mov ecx [ esp ]
push 0x8
movzx edx [ eax + eax + r--data ]
mov ecx [ esp ]
push 0x7
jmp r-xdata
sub esi eax
xor edi edi
mov ecx 0x1e
dec edi
mov [ esp + 0x4 ] esi
jmp r-xdata
movsx eax [ ebx * 4 + r--data ]
mov ecx [ esp ]
mov edx edi
push eax
call sub_470a61
mov eax [ esp + 0xc ]
add esp 0x4
call sub_470a61
mov eax [ esp + 0xc ]
add esp 0x4
mov esi [ esp + 0x4 ]
add ebp 0xfffffff8
cmp ebp 0x13
ja r-xdata
mov eax ecx
sub eax edi
cmp eax 0x1
jg r-xdata
lea eax [ edi + ecx ]
mov ebx eax
shr ebx 0x1f
add ebx eax
mov eax [ esp + 0x24 ]
sar ebx 0x1
lea esi [ ebx + ebx * 2 ]
mov ebp [ esi * 4 + r--data ]
cmp ebp eax
jg r-xdata
push 0x249
push r--data
push r--data
mov esi ecx
call sub_4a509d
mov ecx esi
add esp 0xc
mov ecx ebx
cmp [ esi * 4 + r--data ] eax
mov edi ebx
jl r-xdata
movsx eax [ esi * 4 + r--data ]
mov ecx [ esp ]
movzx edx [ eax * 8 + r--data ]
push 0x5
call sub_470a61
add esp 0x4
add ebx 0xfffffffc
cmp ebx 0x19
ja r-xdata
mov esi [ esp + 0x4 ]
mov edx [ esp + 0x24 ]
movsx eax [ esi * 4 + r--data ]
mov ecx [ esp ]
sub edx ebp
push eax
call sub_470a61
add esp 0x4
sub_4708de
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x4 ]
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] eax
mov [ esp ] ecx
cmp [ ecx + 0x14 ] eax
je r-xdata
mov al 0x1
mov esi [ esp ]
mov edx 0x9c78
mov ecx esi
push 0x10
call sub_470a61
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x0
jmp r-xdata
test al al
jne r-xdata
test al al
je r-xdata
mov ecx [ esp ]
mov ebp [ esp + 0x28 ]
mov edi [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx ebx
push 0x1
push edi
call sub_470aee
add esp 0x8
mov esi [ esp ]
xor edx edx
mov ecx esi
push 0x7
call sub_470a61
add esp 0x4
mov edx 0x2
mov ecx esi
push 0xa
call sub_470a61
add esp 0x4
mov edx 0x2
mov ecx esi
push 0x3
call sub_470a61
add esp 0x4
mov ecx [ esp ]
mov edx 0x2
push 0x3
call sub_470a61
add esp 0x4
test edi edi
jle r-xdata
mov ecx [ esp ]
xor edx edx
push 0x7
call sub_470a61
add esp 0x4
mov ecx [ esp ]
mov edx 0x2
push 0x3
call sub_470a61
add esp 0x4
mov ebp [ esp + 0x28 ]
jmp r-xdata
mov esi [ esp ]
cmp edi 0x10000
mov ebp 0xffff
cmovl ebp edi
xor edx edx
mov ecx esi
push 0x3
call sub_470a61
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x24 ]
mov [ edx + 0x18 ] 0x0
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp ] eax
xor eax eax
inc eax
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp ]
mov eax 0x10
mov edx ebp
mov ecx esi
push eax
call sub_470a61
add esp 0x4
mov edx ebp
mov eax 0x10
mov ecx esi
xor edx 0xffff
push eax
call sub_470a61
add esp 0x4
mov ecx [ esp + 0x18 ]
mov edx ebx
push 0x0
push ebp
call sub_470aee
add esp 0x8
add ebx ebp
sub edi ebp
jg r-xdata
mov ecx [ esp ]
mov esi 0x8
xor edx edx
sub esi eax
push esi
call sub_470a61
add esp 0x4
sub_470a61
push ebx
push edi
push esi
mov esi ecx
mov edi [ esp + 0x10 ]
mov ebx edx
mov ecx [ esi + 0x10 ]
lea eax [ ecx + edi ]
cmp eax 0x21
jl r-xdata
shl ebx cl
add edi ecx
or ebx [ esi + 0xc ]
cmp edi 0x8
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] edi
jl r-xdata
push 0x17a
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esi + 0x10 ]
pop esi
pop edi
pop ebx
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jge r-xdata
add ecx 0x40
mov [ esi + 0x8 ] ecx
push 0x1
push ecx
push [ esi ]
call sub_43f8db
add esp 0xc
mov [ esi ] eax
mov ecx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
mov eax [ esi ]
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4 ] edx
mov [ eax + ecx ] bl
mov ebx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
shr ebx 0x8
cmp eax 0xf
lea ecx [ eax - 0x8 ]
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ecx
jg r-xdata
sub_470aee
push ebp
push ebx
push edi
push esi
sub esp 0x134
mov [ esp ] edx
mov eax [ rw-data ]
mov [ esp + 0x130 ] eax
mov [ esp + 0x14 ] ecx
mov esi [ ecx ]
mov eax [ esi + 0x38ff8 ]
cmp eax 0x4
jl r-xdata
mov edx [ esp + 0x148 ]
test eax eax
mov [ esp + 0x4 ] esi
jle r-xdata
push 0xd0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x38ff8 ]
xor ebp ebp
jmp r-xdata
xor ebp ebp
sub eax ebp
test edx edx
mov [ esi + 0x38ff8 ] eax
jle r-xdata
mov edi edx
cmp ebp eax
jge r-xdata
mov edx [ esp ]
lea ecx [ esi + ebp ]
xor esi esi
sub edx eax
add edx ebp
mov ecx [ esp + 0x130 ]
call sub_497c4a
add esp 0x134
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x1c ] 0x0
jmp r-xdata
mov edx edi
lea ecx [ esi + ebp + 0x38ff2 ]
xor edx edx
lea edi [ ebp + esi ]
lea ebx [ edx + esi ]
cmp edi eax
lea edi [ ecx + esi + 0x38ff2 ]
cmovge edi ebx
mov bl [ edi ]
mov [ esp + esi + 0x30 ] bl
inc esi
cmp esi 0x3
jne r-xdata
movzx edi [ esp + 0x30 ]
movzx ecx [ esp + 0x31 ]
mov eax edi
imul ecx ecx 0x107
shl eax 0x8
or eax edi
add ecx eax
movzx eax [ esp + 0x32 ]
imul esi eax 0x10d
add esi ecx
mov ecx 0x121456f
mov eax esi
mul ecx
mov eax esi
mov ecx [ esp + 0x4 ]
sub eax edx
shr eax 0x1
add eax edx
mov edx edi
shr eax 0xa
imul eax eax 0x7f7
sub esi eax
push esi
mov esi ecx
call sub_471b95
add esp 0x4
mov eax [ esi + 0x38ff8 ]
mov edx [ esp + 0x148 ]
inc ebp
cmp ebp eax
jl r-xdata
cmp [ esp + 0x14c ] 0x0
mov [ esp + 0x8 ] edx
je r-xdata
mov al [ ecx + edx ]
mov [ esi + edx + 0x38ff2 ] al
mov eax [ esi + 0x38ff8 ]
lea esi [ ebp + edx + 0x1 ]
inc edx
cmp esi eax
mov esi [ esp + 0x4 ]
jl r-xdata
mov ecx edx
sub ecx ebp
add ecx eax
cmp ecx 0x3
jl r-xdata
jmp r-xdata
mov ebp [ esp + 0x1c ]
test ebp ebp
jle r-xdata
cmp edx 0x3
jl r-xdata
mov eax [ esp ]
movzx eax [ eax ]
push eax
mov eax [ esp + 0x18 ]
push eax
call [ eax + 0x8 ]
mov edx [ esp + 0x10 ]
add esp 0x8
mov edi ebp
xor ebp ebp
inc ebp
jmp r-xdata
push ebp
push [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
push eax
mov edx [ esp ]
movzx eax [ edx ]
mov ecx eax
shl ecx 0x8
or ecx eax
movzx eax [ edx + 0x1 ]
imul eax eax 0x107
add eax ecx
movzx ecx [ edx + 0x2 ]
mov edx 0x121456f
imul ecx ecx 0x10d
add ecx eax
mov eax ecx
mul edx
mov eax ecx
sub eax edx
shr eax 0x1
add eax edx
shr eax 0xa
imul eax eax 0x7f7
sub ecx eax
movzx ecx [ esi + ecx * 2 + 0x38004 ]
cmp ecx 0xffff
je r-xdata
inc ebp
xor edi edi
jmp r-xdata
dec ebp
jmp r-xdata
mov eax [ esi + 0x38000 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x28 ] eax
lea eax [ eax - 0x8000 ]
mov [ esp + 0x24 ] eax
mov eax [ esi + 0x38ff8 ]
cmp eax 0x3
jl r-xdata
mov edx [ esp ]
movzx esi [ edx ]
lea ecx [ edx + 0x1 ]
mov [ esp + 0xc ] ecx
movzx ecx [ edx + 0x1 ]
mov eax esi
shl eax 0x8
add eax esi
imul ecx ecx 0x107
add ecx eax
movzx eax [ edx + 0x2 ]
imul ebx eax 0x10d
add ebx ecx
mov ecx 0x121456f
mov eax ebx
mul ecx
mov eax ebx
mov ecx [ esp + 0x4 ]
sub eax edx
shr eax 0x1
add eax edx
mov edx esi
mov esi [ esp + 0x4 ]
shr eax 0xa
imul eax eax 0x7f7
sub ebx eax
push ebx
call sub_471b95
add esp 0x4
mov eax [ esp + 0xc ]
mov [ esp ] eax
jmp r-xdata
test edx edx
mov [ esp + 0x1c ] edi
jg r-xdata
mov esi [ esp + 0x4 ]
cmp esi 0x2
lea esi [ esi + 0x1 ]
jl r-xdata
mov ebx [ esp ]
lea edx [ eax + 0x1 ]
mov cl [ ebx ]
inc ebx
mov [ esi + 0x38ff8 ] edx
mov [ esi + eax + 0x38ff2 ] cl
mov [ esp ] ebx
push 0x157
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x38ff8 ]
mov edx [ esp + 0x8 ]
mov eax ebp
dec eax
mov ebp eax
dec edx
cmp eax 0x1
jg r-xdata
movsx ecx cx
mov edx [ esp + 0x24 ]
mov ebx [ esp ]
mov eax ecx
lea ecx [ ecx + 0x8000 ]
sub ecx [ esp + 0x28 ]
mov [ esp + 0xc ] eax
mov eax 0x8000
mov esi ecx
mov edi ecx
sar esi 0x1f
shr esi 0x11
add esi ecx
and esi 0xffff8000
sub edi esi
neg esi
sub eax edi
lea ecx [ ecx + esi - 0x8000 ]
lea edx [ edx + edi ]
lea ebp [ ebx + edi - 0x8000 ]
xor esi esi
mov [ esp + 0x2c ] eax
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x8 ]
test edi edi
jle r-xdata
mov eax [ esp + 0x4 ]
lea edi [ edx + esi ]
mov ebx ecx
and edi 0x7fff
add ebx esi
lea ebx [ ebp + esi ]
lea edi [ eax + edi + 0x30000 ]
mov eax [ esp ]
cmovns edi ebx
mov bl [ eax + esi ]
cmp bl [ edi ]
jne r-xdata
cmp esi 0x3
jne r-xdata
cmp edx 0x3
mov [ esp + 0x8 ] edx
jl r-xdata
mov ebp 0x3
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x4 ]
mov [ esp + eax * 8 + 0x30 ] ecx
cmp eax 0x1e
mov [ esp + eax * 8 + 0x34 ] 0x3
lea eax [ eax + 0x1 ]
mov [ esp + 0x20 ] eax
jle r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] ebp
test ecx ecx
jle r-xdata
test edi edi
jle r-xdata
mov eax [ esp + 0xc ]
lea ecx [ eax + eax * 2 ]
movzx ecx [ esi + ecx * 2 ]
cmp ecx 0xffff
jne r-xdata
jmp r-xdata
mov edi ebp
lea eax [ ecx + 0x1 ]
cmp ebp eax
jle r-xdata
mov eax [ esp ]
mov edx edi
lea esi [ esp + 0x30 ]
xor edi edi
lea eax [ eax + ebp ]
mov [ esp + 0xc ] eax
push ecx
push [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
push eax
mov ebp ecx
jmp r-xdata
movzx eax [ esp + 0x18 ]
mov edi ebp
push eax
mov eax [ esp + 0x18 ]
push eax
call [ eax + 0x8 ]
mov edx [ esp + 0x10 ]
add esp 0x8
jmp r-xdata
mov ecx ebp
mov bl [ ebx ]
sub ebp [ esi ]
js r-xdata
mov eax [ esp + 0x4 ]
mov ebx [ eax + 0x38000 ]
add ebx ebp
and ebx 0x7fff
lea ebx [ eax + ebx + 0x30000 ]
call [ eax + 0xc ]
mov edx [ esp + 0x14 ]
add esp 0xc
xor edi edi
cmp ebp 0x2
jl r-xdata
mov eax [ esp + 0x30 ]
xor ebp ebp
inc ebp
mov [ esp + 0x10 ] eax
mov eax [ esp ]
movzx eax [ eax ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x4 ]
add ebp [ eax + 0x38000 ]
and ebp 0x7fff
lea ebp [ eax + ebp + 0x30000 ]
add ebp [ esp ]
jmp r-xdata
add esi 0x8
mov ebp ecx
dec edx
jne r-xdata
movsd xmm0 [ esi ]
movsd [ esp + edi * 8 + 0x30 ] xmm0
inc edi
cmp bl [ ebp ]
jne r-xdata
mov ebx [ esp + 0xc ]
test ebp ebp
jns r-xdata
mov esi [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
xor ecx ecx
test edi edi
setne cl
add ebp ecx
test edi edi
jne r-xdata
cmp ebp edx
jge r-xdata
sub_470fd0
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x130
mov eax [ rw-data ]
mov [ esp + 0x128 ] eax
push 0x81ac
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov eax 0x90
mov edi esp
push eax
push 0x8
push edi
call sub_49acf0
add esp 0xc
lea ebx [ esp + 0x90 ]
push 0x70
push 0x9
push ebx
call sub_49acf0
add esp 0xc
mov eax 0x7070707
mov edx 0x120
mov ecx edi
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x7c ] eax
mov [ ebx + 0x78 ] eax
mov [ ebx + 0x74 ] eax
mov [ ebx + 0x70 ] eax
mov eax 0x8080808
mov [ ebx + 0x8c ] eax
mov [ ebx + 0x88 ] eax
call sub_4710b2
movaps xmm0 [ r--data ]
mov edx 0x20
mov ecx edi
mov [ esi ] eax
movaps [ ebx - 0x80 ] xmm0
movaps [ edi ] xmm0
call sub_4710b2
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x194 ] eax
mov [ esi + 0x198 ] eax
mov [ esi + 0x819c ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
mov ecx [ esp + 0x128 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4710b2
push ebp
push ebx
push edi
push esi
sub esp 0x50c
mov [ esp + 0x4 ] ecx
xor esi esi
test edx edx
mov ecx [ rw-data ]
mov [ esp + 0x508 ] ecx
mov ecx 0x0
mov [ esp + 0x4d0 ] esi
mov [ esp + 0x4cc ] esi
mov [ esp + 0x4d8 ] esi
mov [ esp + 0x4d4 ] esi
mov [ esp + 0x4e0 ] esi
mov [ esp + 0x4dc ] esi
mov [ esp + 0x4e8 ] esi
mov [ esp + 0x4e4 ] esi
mov [ esp + 0x4f0 ] esi
mov [ esp + 0x4ec ] esi
mov [ esp + 0x4f8 ] esi
mov [ esp + 0x4f4 ] esi
mov [ esp + 0x500 ] esi
mov [ esp + 0x4fc ] esi
mov [ esp + 0x504 ] esi
mov [ esp ] edx
jle r-xdata
xor edx edx
inc edx
mov edi [ esp ]
mov edx [ esp + 0x4 ]
xor ecx ecx
mov [ esp + edx * 4 + 0x488 ] esi
add esi [ esp + edx * 4 + 0x4c8 ]
inc edx
add esi esi
cmp edx 0x10
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
movzx ebx [ edx ]
inc [ esp + ebx * 4 + 0x4c8 ]
cmp ecx ebx
cmovl ecx ebx
inc edx
dec edi
jne r-xdata
mov edx [ esp + 0x4 ]
cmp ecx 0xa
mov eax 0x9
cmovl eax ecx
xor esi esi
lea ecx [ esp + 0x8 ]
push eax
push esi
push esi
push [ esp + 0xc ]
call sub_471c46
add esp 0x10
mov ecx [ esp + 0x508 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x50c
pop esi
pop edi
pop ebx
pop ebp
retn
xor edi edi
inc edi
cmp edi [ esp ]
jne r-xdata
xor edx edx
xor esi esi
mov eax [ esp + 0x4 ]
mov esi 0x0
movzx ebx [ eax + edi ]
mov [ esp + edi * 4 + 0x8 ] esi
mov eax [ esp + ebx * 4 + 0x488 ]
test ebx ebx
lea edx [ eax + 0x1 ]
mov [ esp + ebx * 4 + 0x488 ] edx
je r-xdata
mov ebp eax
inc esi
sar eax 0x1
and ebp 0x1
cmp esi ebx
lea edx [ ebp + edx * 2 ]
jl r-xdata
mov [ esp + edi * 4 + 0x8 ] edx
sub_471204
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp eax [ esi ]
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
lea ecx [ esi + 0x8 ]
call sub_471255
mov ecx esi
call sub_471255
add esi 0x4
mov ecx esi
call sub_471255
pop esi
jmp sub_43f9d4
lea ecx [ esi + 0x10 ]
call sub_471255
lea ecx [ esi + 0xc ]
call sub_471255
sub_471255
push ebp
push ebx
push edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esi ]
test edi edi
je r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
test eax eax
js r-xdata
push ecx
call sub_43f9d4
add esp 0x4
xor ebx ebx
mov [ edi + 0x4 ] ebx
push edi
call sub_43f9d4
add esp 0x4
mov [ esi ] ebx
xor ebx ebx
mov ebp 0x4
dec ebx
inc ebx
add ebp 0x8
cmp ebx eax
jl r-xdata
add ecx ebp
call sub_471255
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
cmp [ ecx + ebp ] 0x0
je r-xdata
sub_4712ae
push ebp
push ebx
push edi
push esi
sub esp 0x2c
mov edi [ esp + 0x48 ]
mov esi [ esp + 0x44 ]
mov ebp [ esp + 0x40 ]
mov ebx 0x100
push 0x1
push ebx
call sub_43f807
add esp 0x8
lea ecx [ ebp + 0x8 ]
mov [ ebp + 0x81a0 ] eax
mov [ ebp + 0x81a8 ] ebx
mov [ ebp + 0x81a4 ] 0x0
lea eax [ ebp + 0x194 ]
lea edx [ ebp + 0x53 ]
lea ebx [ ebp + 0x198 ]
mov [ esp + 0x14 ] ecx
lea ecx [ ebp + 0xc ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] ecx
lea ecx [ ebp + 0x40 ]
mov [ esp + 0x24 ] ecx
lea ecx [ ebp + 0x10 ]
mov ebp eax
xor eax eax
inc eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x4 ] ebp
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ ebx ]
test edi edi
jle r-xdata
test eax eax
jg r-xdata
jle r-xdata
mov ecx [ esp + 0x40 ]
mov ecx [ ecx + 0x14 ]
cmp ecx 0xc
ja r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x4c ]
mov edx eax
mov eax [ edx + 0x81a0 ]
mov [ ecx ] eax
mov eax [ edx + 0x81a4 ]
cmp eax 0x17
jg r-xdata
jmp [ ecx * 4 + jump_table_41754c ]
mov edx [ ebp ]
mov ecx eax
cmp eax 0x10
jl r-xdata
cmp ecx 0x10
mov ecx eax
jl r-xdata
mov edx [ ebp ]
add eax 0xfffffff0
mov ecx edx
mov [ esp + 0xc ] edx
shr ecx 0x8
mov [ esp + 0x8 ] ecx
movzx ecx cl
mov [ esp + 0x28 ] ecx
mov ecx edx
shl ecx 0x8
movzx edx cx
mov [ esp ] edx
mov edx [ esp + 0x28 ]
add [ esp ] edx
mov [ ebx ] eax
mov edx 0x8421085
mov eax [ esp + 0xc ]
shr eax 0x10
mov [ ebp ] eax
mov eax ecx
and eax 0xf000
mov [ esp + 0xc ] eax
mov eax [ esp ]
mul edx
cmp [ esp + 0xc ] 0x7000
ja r-xdata
mov eax edx
movzx edx [ esi ]
inc esi
shl edx cl
or edx eax
cmp edi 0x2
lea eax [ ecx + 0x8 ]
lea edi [ edi - 0x1 ]
mov [ ebp ] edx
mov [ ebx ] eax
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x40 ]
mov esi eax
push [ esi + 0x81a0 ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4c ]
xor eax eax
mov [ esi + 0x81a0 ] eax
mov [ ecx ] eax
mov [ esp + 0x1c ] 0x0
jmp r-xdata
and ecx 0xf00
cmp ecx 0x800
jne r-xdata
mov ecx [ esp + 0x50 ]
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx edx
mov edx [ esp ]
and [ esp + 0x8 ] 0x20
mov eax edx
sub eax ecx
shr eax 0x1
add eax ecx
shr eax 0x4
mov ecx eax
shl ecx 0x5
sub ecx eax
sub edx ecx
or edx [ esp + 0x8 ]
je r-xdata
mov eax [ esp + 0x40 ]
mov [ eax + 0x14 ] 0x1
jmp r-xdata
jmp r-xdata
sub_47152c
mov ecx [ esp + 0x40 ]
mov edx [ ecx + 0x1c ]
mov eax [ ecx + 0x20 ]
add eax edx
cmp [ ecx + 0x28 ] eax
jge r-xdata
mov ebp [ esp + 0x18 ]
mov ecx ebp
call sub_4710b2
mov ecx [ esp + 0x40 ]
mov [ ecx + 0x8 ] eax
mov eax ecx
mov ecx [ eax + 0x1c ]
mov edx [ eax + 0x20 ]
add ecx ebp
call sub_4710b2
mov ebp [ esp + 0x40 ]
mov [ ebp + 0xc ] eax
mov ecx [ esp + 0x20 ]
call sub_471255
mov [ ebp + 0x10 ] 0x0
mov [ ebp + 0x14 ] 0x6
mov ebp [ esp + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx ebp
mov edx ebx
push [ eax ]
call sub_471a92
add esp 0x4
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebx ]
test edi edi
jle r-xdata
mov eax [ esp + 0x40 ]
mov esi eax
push [ esi + 0x81a0 ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4c ]
xor eax eax
mov [ esi + 0x81a0 ] eax
mov [ ecx ] eax
mov [ esp + 0x1c ] 0x0
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jle r-xdata
mov ecx [ esp + 0x50 ]
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x4c ]
mov edx eax
mov eax [ edx + 0x81a0 ]
mov [ ecx ] eax
mov eax [ edx + 0x81a4 ]
cmp eax 0xf
jg r-xdata
mov ecx [ esp + 0x40 ]
mov ecx [ ecx + 0x14 ]
cmp ecx 0xc
ja r-xdata
cmp eax 0x17
jg r-xdata
xor ecx ecx
cmp eax 0x11
setne cl
xor edx edx
cmp eax 0x12
sete dl
cmp eax 0x10
lea eax [ ecx * 4 + 0x3 ]
mov ecx 0x2
cmove eax ecx
mov ecx [ esp + 0x40 ]
lea edx [ edx * 8 + 0x3 ]
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] edx
jne r-xdata
mov ecx [ esp + 0x40 ]
mov ebp ecx
mov ecx [ ebp + 0x28 ]
lea edx [ ecx + 0x1 ]
mov [ ebp + 0x28 ] edx
mov [ ebp + ecx + 0x53 ] al
mov ebp [ esp + 0x4 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41754c ]
mov edx [ ebp ]
mov ecx eax
xor edx edx
mov eax [ ecx + 0x28 ]
mov edx 0x0
test eax eax
jle r-xdata
cmp eax 0x10
jl r-xdata
cmp ecx 0x10
mov ecx eax
jl r-xdata
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x14 ] 0x5
mov edx [ esp + 0x18 ]
movzx edx [ edx + eax - 0x1 ]
jmp r-xdata
mov edx [ ebp ]
add eax 0xfffffff0
mov ecx edx
mov [ esp + 0xc ] edx
shr ecx 0x8
mov [ esp + 0x8 ] ecx
movzx ecx cl
mov [ esp + 0x28 ] ecx
mov ecx edx
shl ecx 0x8
movzx edx cx
mov [ esp ] edx
mov edx [ esp + 0x28 ]
add [ esp ] edx
mov [ ebx ] eax
mov edx 0x8421085
mov eax [ esp + 0xc ]
shr eax 0x10
mov [ ebp ] eax
mov eax ecx
and eax 0xf000
mov [ esp + 0xc ] eax
mov eax [ esp ]
mul edx
cmp [ esp + 0xc ] 0x7000
ja r-xdata
mov eax edx
movzx edx [ esi ]
inc esi
shl edx cl
or edx eax
cmp edi 0x2
lea eax [ ecx + 0x8 ]
lea edi [ edi - 0x1 ]
mov [ ebp ] edx
mov [ ebx ] eax
jl r-xdata
jmp r-xdata
and ecx 0xf00
cmp ecx 0x800
jne r-xdata
mov ecx edx
mov edx [ esp ]
and [ esp + 0x8 ] 0x20
mov eax edx
sub eax ecx
shr eax 0x1
add eax ecx
shr eax 0x4
mov ecx eax
shl ecx 0x5
sub ecx eax
sub edx ecx
or edx [ esp + 0x8 ]
je r-xdata
mov eax [ esp + 0x40 ]
mov [ eax + 0x14 ] 0x1
jmp r-xdata
jmp r-xdata
sub_471a92
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov [ esp ] ecx
mov esi [ esp + 0x1c ]
xor eax eax
mov ebx [ ecx ]
mov [ esp + 0x4 ] edx
dec eax
mov edi [ edx ]
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
shr ebx cl
movzx ecx [ ebp + esi * 8 + 0x2 ]
cmp ecx 0xffff
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebx
mov eax [ esp + 0x4 ]
mov [ eax ] edi
movsx eax [ ebp + esi * 8 + 0x2 ]
mov esi [ ebp + esi * 8 + 0x4 ]
test esi esi
jne r-xdata
mov ebp [ esi + 0x4 ]
mov esi [ esi ]
and esi ebx
movzx ecx [ ebp + esi * 8 ]
sub edi ecx
jl r-xdata
mov eax 0xfffffffe
jmp r-xdata
sub_471af1
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax [ esi + 0x819c ]
mov [ esi + eax + 0x19c ] bl
mov eax [ esi + 0x819c ]
mov ecx [ esi + 0x81a4 ]
inc eax
and eax 0x7fff
mov [ esi + 0x819c ] eax
cmp ecx [ esi + 0x81a8 ]
jge r-xdata
add ecx 0x200
mov [ esi + 0x81a8 ] ecx
push 0x1
push ecx
push [ esi + 0x81a0 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x81a0 ] eax
mov ecx [ esi + 0x81a4 ]
mov eax [ esi + 0x81a0 ]
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ esi + 0x81a4 ] edx
mov [ eax + ecx ] bl
pop esi
pop ebx
retn
sub_471b64
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax 0x7
mov [ ecx + 0x18 ] 0x1
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov eax [ ecx + 0x10 ]
lea ecx [ eax + 0xa ]
sar ecx 0x1f
shr ecx 0x1d
lea eax [ eax + ecx + 0xa ]
sar eax 0x3
add eax 0x4
retn
retn
sub_471b95
push ebx
push edi
push esi
mov esi [ ecx + 0x38000 ]
mov eax [ esp + 0x10 ]
lea edi [ esi + esi * 2 ]
movsx ebx [ ecx + edi * 2 + 0x2 ]
cmp ebx 0xffffffff
je r-xdata
movsx edi [ ecx + edi * 2 + 0x4 ]
cmp edi 0xffffffff
je r-xdata
lea esi [ ebx + ebx * 2 ]
lea esi [ ecx + esi * 2 ]
jmp r-xdata
lea esi [ esi + esi * 2 ]
mov [ ecx + esi * 2 + 0x4 ] ax
mov esi [ ecx + 0x38000 ]
lea esi [ esi + esi * 2 ]
mov [ ecx + esi * 2 + 0x2 ] 0xffff
mov edi [ ecx + 0x38000 ]
movsx esi [ ecx + eax * 2 + 0x38004 ]
lea edi [ edi + edi * 2 ]
cmp esi 0xffffffff
mov [ ecx + edi * 2 ] si
movzx edi [ ecx + 0x38000 ]
mov [ ecx + eax * 2 + 0x38004 ] di
je r-xdata
lea esi [ ecx + edi * 2 + 0x38004 ]
mov [ esi ] 0xffff
mov esi [ ecx + 0x38000 ]
mov eax [ ecx + 0x38000 ]
mov [ ecx + eax + 0x30000 ] dl
mov eax [ ecx + 0x38000 ]
inc eax
and eax 0x7fff
mov [ ecx + 0x38000 ] eax
pop esi
pop edi
pop ebx
retn
movzx eax [ ecx + 0x38000 ]
lea esi [ esi + esi * 2 ]
mov [ ecx + esi * 2 + 0x2 ] ax
sub_471c46
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ebx [ esp + 0x2c ]
xor esi esi
mov edi 0x8
mov [ esp + 0x4 ] edx
mov [ esp + 0xc ] ecx
inc esi
push edi
push esi
call sub_43f807
add esp 0x8
mov ebp eax
mov eax esi
mov ecx ebx
shl eax cl
mov ecx [ esp + 0x30 ]
mov [ esp + 0x8 ] eax
shl esi cl
push edi
push esi
call sub_43f807
add esp 0x8
lea edx [ esi - 0x1 ]
test esi esi
mov [ ebp + 0x4 ] eax
mov [ ebp ] edx
jle r-xdata
cmp [ esp + 0x24 ] 0x0
mov [ esp ] ebp
jle r-xdata
mov [ eax + 0x2 ] 0xffff
mov eax [ ebp + 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x4 ]
mov [ eax + 0x4 ] 0x0
mov edx [ ebp ]
test edx edx
jle r-xdata
mov ebp [ esp + 0x4 ]
mov esi [ esp ]
mov ebp [ esp + 0x4 ]
mov esi [ esp ]
dec [ esp + 0x8 ]
xor eax eax
xor eax eax
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
xor edi edi
lea ebx [ eax + ecx ]
inc eax
cmp eax [ esp + 0x24 ]
jne r-xdata
mov ecx [ esp + 0xc ]
mov edi [ ecx + eax * 4 ]
mov ecx edi
and ecx [ esp + 0x8 ]
cmp ecx [ esp + 0x28 ]
jne r-xdata
mov ecx [ ebp + 0x4 ]
mov [ ecx + eax * 8 + 0xa ] 0xffff
mov ecx [ ebp + 0x4 ]
mov [ ecx + eax * 8 + 0x8 ] 0x0
mov ecx [ ebp + 0x4 ]
mov [ ecx + eax * 8 + 0xc ] 0x0
inc eax
mov edx [ ebp ]
cmp eax edx
jl r-xdata
cmp edi edx
lea edi [ edi + 0x1 ]
jl r-xdata
mov [ eax + edi * 8 + 0x2 ] 0xffff
mov ecx [ esp + 0x30 ]
mov edx 0x7
mov eax [ esi + 0x4 ]
movzx esi [ eax + edi * 8 ]
mov [ eax + edi * 8 ] cl
mov eax edi
sub esi ecx
mov ecx [ esp + 0x2c ]
cmp esi 0x8
cmovge esi edx
mov edx ebp
shl eax cl
mov ecx [ esp + 0xc ]
or eax [ esp + 0x28 ]
push esi
mov esi [ esp + 0x4 ]
push ebx
push eax
push [ esp + 0x30 ]
call sub_471c46
add esp 0x10
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 8 + 0x4 ] eax
mov edx [ esi ]
movzx ecx [ ebp + eax ]
cmp ecx [ esp + 0x2c ]
jle r-xdata
jmp r-xdata
mov ebx [ esp + 0x2c ]
mov ecx ebx
sar edi cl
and edi edx
jmp r-xdata
mov eax [ esi + 0x4 ]
movzx ecx [ eax + edi * 8 ]
cmp ecx [ esp + 0x30 ]
jle r-xdata
test edx edx
js r-xdata
cmp edi edx
jle r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 8 + 0x2 ] ax
movzx ecx [ ebp + eax ]
mov edx ecx
sub edx ebx
mov ebx [ esi + 0x4 ]
movzx esi [ ebx + edi * 8 ]
cmp edx esi
jle r-xdata
mov ebx [ esp + 0x2c ]
movzx ecx cl
mov esi [ esp ]
sub ecx ebx
xor edx edx
inc edx
shl edx cl
add edi edx
mov edx [ esi ]
mov [ ebx + edi * 8 ] dl
mov cl [ ebp + eax ]
sub_471de4
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x24 ]
xor edi edi
inc edi
mov [ esp + 0x4 ] eax
push 0x78
push edi
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] r--data
push ebp
call sub_43191d
add esp 0x4
xor ebp ebp
mov [ esi + 0x70 ] eax
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] ebp
mov [ esi + 0x60 ] ebp
mov [ esi + 0x64 ] ebp
mov [ esi + 0xc ] ebx
push 0x73
push eax
call sub_43194f
add esp 0x8
mov [ esi + 0x14 ] eax
push 0x74
push [ esi + 0x70 ]
call sub_43194f
add esp 0x8
mov [ esi + 0x18 ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0x6c ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x74 ] ebp
mov [ esi + 0x68 ] edi
mov [ eax ] esi
push 0x3
push [ esi + 0x70 ]
call sub_43194f
add esp 0x8
push r--data
push [ esi + 0xc ]
push eax
push [ esi + 0x70 ]
push [ esp + 0x40 ]
push [ esp + 0x40 ]
push [ esp + 0x40 ]
call sub_441360
add esp 0x1c
mov ebx eax
push ebx
call sub_491f41
add esp 0x4
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx eax
mov eax 0x17
test ecx ecx
cmovns eax ecx
push [ esi + 0x70 ]
push esi
push [ esp + 0x40 ]
push [ esp + 0x40 ]
push 0x1
push ebp
push eax
mov eax [ esp + 0x4c ]
mov ebp eax
push [ ebp ]
push ebx
call sub_441484
add esp 0x24
mov [ esi + 0x4 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
mov edi eax
mov ebx ebp
test edi edi
je r-xdata
push ebx
call sub_490c67
add esp 0x4
jmp r-xdata
push esi
push rw-data
push [ esi + 0x70 ]
call sub_440508
add esp 0xc
mov [ esi + 0x74 ] eax
push 0x38
push [ esi + 0x70 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax r--data
mov edi r--data
mov ecx r--data
mov eax r--data
mov eax [ edi ]
add edi 0x4
test eax eax
jne r-xdata
mov ecx [ eax ]
mov ebx [ eax + 0x10 ]
mov [ esp + 0x1 ] 0xff
mov [ esp + 0x2 ] cl
mov [ esp + 0x3 ] bl
mov ebp ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push 0x3
lea edx [ esp + 0x5 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov edx r--data
mov ecx esi
push ebx
push ebp
call sub_472fbd
add esp 0x8
mov ecx [ ecx + 0x14 ]
mov [ esi + ecx * 4 + 0x1c ] 0x2
mov ecx [ eax ]
add eax 0x4
test ecx ecx
jne r-xdata
jmp r-xdata
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ esi + ecx * 4 + 0x1c ] eax
mov eax [ edi - 0x4 ]
mov ecx [ eax + 0x14 ]
cmp [ esi + ecx * 4 + 0x1c ] 0x0
jne r-xdata
mov ebx [ esp + 0x30 ]
mov [ esi + 0x4c ] 0x1
mov [ esi + 0x54 ] 0x0
push [ esi + 0xc ]
call sub_489bb6
add esp 0x4
push 0x9
push [ esi + 0x70 ]
call sub_431a8c
add esp 0x8
mov esi eax
xor edi edi
cmp [ esi ] 0x0
je r-xdata
push [ ebx ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f79e
add esp 0x4
mov [ ebx ] eax
push 0x3a
push eax
call sub_43f6bb
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
sub_47201b
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x60 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
push [ esi + 0x70 ]
call sub_431816
add esp 0x4
pop esi
jmp sub_43f9d4
push eax
call sub_4405e1
add esp 0x4
sub_47205c
push edi
push esi
mov esi [ esp + 0x10 ]
mov edi [ esp + 0xc ]
push esi
push [ edi + 0x70 ]
push [ edi + 0x74 ]
call sub_4405a1
add esp 0xc
push [ edi + 0x70 ]
call sub_431816
add esp 0x4
push esi
call sub_43191d
add esp 0x4
mov [ edi + 0x70 ] eax
pop esi
pop edi
retn
sub_47208f
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ esp + 0x1c ]
test edi edi
jle r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x50 ]
mov ecx [ esp + 0x18 ]
add edi ecx
mov ebp ecx
mov eax [ esi + 0x4 ]
mov ebx ebp
sub ebx ecx
mov edx [ eax ]
push ebx
push ecx
push eax
call [ edx + 0x8 ]
add esp 0xc
cmp ebp edi
mov [ esi + 0x50 ] eax
jae r-xdata
mov ebp ecx
cmp ebp edi
mov ecx ebp
jb r-xdata
mov ebx r--data
cmp al 0xd
jne r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp cl 0xff
mov edx r--data
cmove edx ebx
mov ecx [ eax ]
push 0x2
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
inc ebp
mov [ esi + 0x50 ] eax
cmp ebp edi
jb r-xdata
cmp cl 0xd
jne r-xdata
inc ebp
cmp ebp edi
jb r-xdata
cmp [ esi + 0x3c ] 0x1
jne r-xdata
mov cl [ ebp ]
cmp cl 0xff
je r-xdata
cmp [ esi + 0x3c ] 0x1
je r-xdata
mov al [ ebp ]
cmp al 0xff
je r-xdata
sub_472140
push ebx
push edi
push esi
sub esp 0x1c
mov eax [ rw-data ]
mov ecx [ esp + 0x34 ]
mov ebx [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ecx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
call sub_497c4a
add esp 0x1c
pop esi
pop edi
pop ebx
retn
cmp [ edi + 0x1c ] 0x1
jne r-xdata
mov edx 0x4
cmp bh 0xff
mov [ esp ] 0xfaff
mov [ esp + 0x2 ] 0x1f
mov [ esp + 0x3 ] bh
jne r-xdata
cmp bl 0xff
mov [ esp + edx ] bl
jne r-xdata
mov edx 0x5
mov [ esp + 0x4 ] 0xff
inc edx
mov [ esp + edx + 0x1 ] 0xff
or edx 0x2
jmp r-xdata
inc edx
mov [ esp + edx + 0x1 ] 0xff
add edx 0x2
jmp r-xdata
cmp ch 0xff
mov [ esp + edx ] ch
jne r-xdata
inc edx
mov [ esp + edx + 0x1 ] 0xff
add edx 0x2
jmp r-xdata
cmp cl 0xff
mov [ esp + edx ] cl
jne r-xdata
mov [ esp + edx ] 0xf0ff
add edx 0x2
mov esi esp
mov ecx [ eax ]
push edx
push esi
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ edi + 0x50 ] eax
push [ edi + 0x18 ]
push [ edi + 0x14 ]
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push esi
push [ edi + 0xc ]
call sub_4842ab
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
sub_472225
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
mov ecx [ esp + 0x20 ]
mov [ esp + 0x3 ] 0xff
cmp ecx 0x10
ja r-xdata
jmp [ ecx * 4 + jump_table_417aec ]
lea ecx [ esp + 0x3 ]
mov [ ecx + 0x1 ] 0xf6
mov edx [ eax ]
push 0x2
push ecx
push eax
jmp r-xdata
call [ edx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
sub_472282
lea edi [ esp + 0x4 ]
xor ebx ebx
lea edx [ esp + 0x3 ]
mov [ edi ] 0xf2
inc ebx
mov ecx [ eax ]
push ebx
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
push ebx
push edi
push eax
jmp r-xdata
call ecx
jmp r-xdata
add esp 0xc
mov [ esi + 0x50 ] eax
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
sub_47238e
mov ecx [ eax ]
cmp [ esi + 0x3c ] 0x1
mov ecx [ ecx + 0x8 ]
jne r-xdata
push 0x2
push r--data
push eax
push 0x1
push r--data
push eax
jmp r-xdata
add esp 0xc
mov [ esi + 0x50 ] eax
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
call ecx
jmp r-xdata
sub_4723ca
lea ecx [ esp + 0x3 ]
mov [ ecx + 0x1 ] 0xed
mov edx [ eax ]
push 0x2
push ecx
push eax
call [ edx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
sub_4724ee
push edi
push esi
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
xor eax eax
test edi edi
mov [ esi + 0x4 ] eax
je r-xdata
pop esi
pop edi
retn
push edi
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push edi
push r--data
push [ esi + 0xc ]
call sub_489e27
add esp 0xc
push [ esi + 0xc ]
call sub_48a878
add esp 0x4
mov [ esi + 0x8 ] 0x1
sub_472547
push ebp
push ebx
push edi
push esi
sub esp 0x28
mov eax [ rw-data ]
mov esi [ esp + 0x3c ]
cmp [ esp + 0x40 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
mov edi [ esp + 0x48 ]
mov ebx [ esp + 0x44 ]
xor edx edx
xor ebp ebp
mov [ esi + 0x68 ] 0x1
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov [ esi + 0x54 ] 0x1
test edi edi
jne r-xdata
mov ecx [ esi + 0x6c ]
dec edi
inc ebx
cmp ecx 0x9
ja r-xdata
mov edi [ esp + 0x14 ]
test edx edx
je r-xdata
jmp [ ecx * 4 + jump_table_417b30 ]
push edi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x24 ]
call sub_497c4a
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
push edx
push edi
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x1000
setg bl
mov edx [ ecx ]
push ebx
push ecx
call [ edx + 0x18 ]
add esp 0x8
mov al [ ebx - 0x1 ]
cmp al 0xff
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esp ] al
jne r-xdata
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
cmp ecx 0x9
je r-xdata
cmp edx ebp
jge r-xdata
mov al [ esp ]
cmp al 0xf2
jne r-xdata
lea ebp [ edx + 0x100 ]
push 0x1
push ebp
push [ esp + 0x1c ]
mov [ esp + 0x14 ] edx
call sub_43f8db
mov edx [ esp + 0x14 ]
add esp 0xc
mov eax [ esp + 0x14 ]
jmp r-xdata
cmp al 0xd
jne r-xdata
jmp r-xdata
xor eax eax
cmp [ esi + 0x40 ] 0x1
mov eax 0x9
je r-xdata
mov cl [ esp ]
mov [ esp + 0x14 ] eax
mov [ eax + edx ] cl
mov eax ecx
inc edx
mov [ esi + 0x54 ] 0x0
jmp r-xdata
jmp r-xdata
sub_4725fc
movzx eax [ ebx - 0x1 ]
mov [ esp + 0xc ] ebp
mov ebp edx
mov edx 0xfc
mov ecx esi
push eax
jmp r-xdata
call sub_472d73
mov edx ebp
mov ebp [ esp + 0x10 ]
add esp 0x4
test edi edi
jne r-xdata
mov ecx [ esi + 0x6c ]
dec edi
inc ebx
cmp ecx 0x9
ja r-xdata
mov edi [ esp + 0x14 ]
test edx edx
je r-xdata
jmp [ ecx * 4 + jump_table_417b30 ]
push edi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x24 ]
call sub_497c4a
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
push edx
push edi
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x1000
setg bl
mov edx [ ecx ]
push ebx
push ecx
call [ edx + 0x18 ]
add esp 0x8
mov al [ ebx - 0x1 ]
cmp al 0xff
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esp ] al
jne r-xdata
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
cmp ecx 0x9
je r-xdata
cmp edx ebp
jge r-xdata
mov al [ esp ]
cmp al 0xf2
jne r-xdata
lea ebp [ edx + 0x100 ]
push 0x1
push ebp
push [ esp + 0x1c ]
mov [ esp + 0x14 ] edx
call sub_43f8db
mov edx [ esp + 0x14 ]
add esp 0xc
mov eax [ esp + 0x14 ]
jmp r-xdata
cmp al 0xd
jne r-xdata
jmp r-xdata
xor eax eax
cmp [ esi + 0x40 ] 0x1
mov eax 0x9
je r-xdata
mov cl [ esp ]
mov [ esp + 0x14 ] eax
mov [ eax + edx ] cl
mov eax ecx
inc edx
mov [ esi + 0x54 ] 0x0
jmp r-xdata
jmp r-xdata
sub_472613
mov al [ ebx - 0x1 ]
cmp al 0xf0
jne r-xdata
mov [ esp ] al
mov ecx [ esi + 0x5c ]
mov eax [ esi + 0x64 ]
mov [ esp + 0x8 ] edx
cmp ecx eax
jge r-xdata
mov ecx [ esi + 0x58 ]
mov [ esp + 0xc ] ebp
cmp ecx 0x23
jg r-xdata
add eax 0x400
mov [ esi + 0x64 ] eax
push 0x1
push eax
push [ esi + 0x60 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x60 ] eax
mov ecx [ esi + 0x5c ]
mov eax [ esi + 0x60 ]
jmp r-xdata
cmp ecx 0x24
je r-xdata
cmp ecx 0x18
je r-xdata
mov [ esi + 0x6c ] eax
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ esi + 0x5c ] edx
mov dl [ esp ]
mov [ eax + ecx ] dl
mov eax 0x7
mov edx [ esp + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x5c ]
test eax eax
mov [ esp ] eax
jle r-xdata
cmp ecx 0x27
jne r-xdata
cmp [ esi + 0x5c ] 0x1
jne r-xdata
cmp ecx 0x20
jne r-xdata
test edi edi
jne r-xdata
mov ebp [ esp + 0xc ]
jmp r-xdata
mov ebp [ esi + 0x60 ]
cmp [ ebp ] 0x1
jne r-xdata
push r--data
push [ esi + 0xc ]
mov eax [ esi + 0x60 ]
cmp [ eax ] 0x1
jne r-xdata
cmp [ esi + 0x5c ] 0x1
jne r-xdata
mov ecx [ esi + 0x6c ]
dec edi
inc ebx
cmp ecx 0x9
ja r-xdata
mov edi [ esp + 0x14 ]
test edx edx
je r-xdata
xor eax eax
mov [ esp + 0x8 ] edx
call sub_473232
push eax
push r--data
call sub_43f758
add esp 0x8
mov [ esp + 0x4 ] eax
push eax
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
mov [ esp + 0x18 ] 0x0
mov eax 0x1
cmp [ esi + 0x58 ] 0x24
mov [ esp + 0x1c ] eax
jne r-xdata
mov [ esp + 0x8 ] edx
push 0x30
push [ esi + 0x70 ]
call sub_431a8c
add esp 0x8
mov [ esp + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
add eax 0x14
push 0x1
push eax
call sub_43f807
add esp 0x8
mov [ esp ] eax
mov [ eax ] 0x18faff
xor ebp ebp
mov ecx [ esp + 0x4 ]
mov dl [ ecx ]
mov eax ecx
jmp r-xdata
push r--data
push [ esi + 0xc ]
jmp r-xdata
mov eax [ esi + 0x60 ]
cmp [ eax ] 0x1
jne r-xdata
jmp [ ecx * 4 + jump_table_417b30 ]
push edi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x24 ]
call sub_497c4a
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
push edx
push edi
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x1000
setg bl
mov edx [ ecx ]
push ebx
push ecx
call [ edx + 0x18 ]
add esp 0x8
lea ebp [ esp + 0x20 ]
push ebp
push 0x0
push 0x33
push [ esi + 0x70 ]
call sub_431bea
add esp 0x10
test eax eax
je r-xdata
push 0x37
push [ esi + 0x70 ]
call sub_43194f
add esp 0x8
xor edx edx
xor ecx ecx
test eax eax
mov eax [ esp ]
sete dl
setne cl
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
cmp eax 0x2
jl r-xdata
test dl dl
jne r-xdata
mov ebp edx
call sub_4842ab
mov edx ebp
add esp 0x8
jmp r-xdata
push 0x31
push [ esi + 0x70 ]
mov [ esp + 0x10 ] edx
call sub_431a8c
add esp 0x8
push eax
mov ebp eax
mov [ esp + 0x14 ] ebp
call sub_4a7f30
add esp 0x4
add eax 0x14
push 0x1
push eax
call sub_43f807
add esp 0x8
mov [ esp ] eax
mov [ eax ] 0x20faff
lea ecx [ eax + 0x4 ]
push ebp
push ecx
call sub_4a7c00
add esp 0x8
push ebp
call sub_4a7f30
add esp 0x4
mov ecx [ esp ]
mov [ ecx + eax + 0x4 ] 0xf0ff
add eax 0x6
mov edx [ esi + 0x4 ]
mov ebp [ edx ]
mov [ esp + 0x4 ] ebp
push eax
push ecx
push edx
mov eax [ esp + 0x10 ]
call [ eax + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
push r--data
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push [ esp + 0x10 ]
push r--data
call sub_43f758
add esp 0x8
mov ebp eax
push ebp
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
push [ esp ]
call sub_43f9d4
mov edx [ esp + 0xc ]
add esp 0x4
jmp r-xdata
mov al [ ebx - 0x1 ]
cmp al 0xff
je r-xdata
mov [ esp ] 0x14
mov [ esp ] 0x14
add eax ebp
inc ebp
mov ecx eax
mov ecx edx
add cl 0x9f
cmp cl 0x1a
jae r-xdata
mov eax [ esp ]
mov [ eax + ebp + 0x4 ] 0xf0ff
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
lea edx [ ebp + 0x6 ]
push edx
push eax
push ecx
mov eax [ esp + 0x10 ]
call [ eax + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp ]
mov [ eax + ebp + 0x4 ] 0x0
push r--data
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
mov eax [ esp ]
add eax 0x4
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebp eax
push ebp
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
push [ esp ]
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esp ] al
jne r-xdata
mov eax [ esp ]
push eax
call sub_4a7f30
add esp 0x4
mov ecx [ esp ]
lea ecx [ ecx + eax + 0x6 ]
mov eax ecx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] ecx
push ecx
call sub_4a7f30
add esp 0x4
mov ebp eax
push [ esp + 0x10 ]
call sub_4a7f30
add esp 0x4
add ebp [ esp ]
lea eax [ eax + ebp + 0x2 ]
lea ebp [ esp + 0x20 ]
mov [ esp ] eax
push ebp
push [ esp + 0x8 ]
push 0x33
push [ esi + 0x70 ]
call sub_431bea
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
mov [ esp + 0x18 ] 0x0
inc eax
mov [ esp + 0x1c ] eax
jmp r-xdata
cmp al 0x1
je r-xdata
mov ecx [ esp ]
mov [ ecx + ebp + 0x4 ] dl
mov dl [ eax + ebp + 0x1 ]
inc ebp
add dl 0xe0
call sub_43f9d4
add esp 0x4
mov edx [ esp + 0x8 ]
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
cmp ecx 0x9
je r-xdata
test eax eax
jne r-xdata
push 0x1
push eax
call sub_43f807
add esp 0x8
mov [ eax ] 0xfaff
mov cl [ esi + 0x58 ]
mov [ eax + 0x2 ] cl
mov [ esp ] eax
mov [ eax + 0x3 ] 0x0
push ebp
push 0x0
push 0x33
push [ esi + 0x70 ]
call sub_431bea
add esp 0x10
mov ebp 0x4
jmp r-xdata
push [ esi + 0x70 ]
call sub_44422f
add esp 0x4
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
inc ebp
cmp ebp edx
jb r-xdata
xor eax eax
mov [ esp + 0x1c ] 0x0
inc eax
mov [ esp + 0x18 ] eax
inc ebp
cmp ebp edx
jb r-xdata
cmp edx ebp
jge r-xdata
mov al [ esp ]
cmp al 0xf2
jne r-xdata
mov ecx [ esp ]
mov edx [ esp + 0x18 ]
mov [ ecx + ebp ] dl
mov ecx [ esp + 0x20 ]
mov dl [ ecx ]
test dl dl
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp ]
test ecx ecx
je r-xdata
mov edx ecx
mov al [ ebp ]
test al al
je r-xdata
jmp r-xdata
lea ebp [ edx + 0x100 ]
push 0x1
push ebp
push [ esp + 0x1c ]
mov [ esp + 0x14 ] edx
call sub_43f8db
mov edx [ esp + 0x14 ]
add esp 0xc
mov eax [ esp + 0x14 ]
jmp r-xdata
cmp al 0xd
jne r-xdata
jmp r-xdata
lea ecx [ ebp + 0x1 ]
mov edx [ esp ]
add ebp 0x2
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x4 ]
mov [ edx + esi ] cl
mov cl [ eax ]
test cl cl
je r-xdata
mov esi [ esp ]
inc ecx
mov [ edx + ebp ] 0xf0ff
add ebp 0x2
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push ebp
push edx
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov ecx [ esi + 0x58 ]
call sub_473232
cmp ebp 0x6
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ edx + ebp ] al
mov [ edx + ebp + 0x1 ] 0x52455355
mov eax [ esp + 0x1c ]
mov [ edx + ebp + 0x5 ] al
add ebp 0x6
mov al [ ecx ]
test al al
je r-xdata
cmp [ esi + 0x40 ] 0x1
mov eax 0x9
je r-xdata
mov cl [ esp ]
mov [ esp + 0x14 ] eax
mov [ eax + edx ] cl
mov eax ecx
inc edx
mov [ esi + 0x54 ] 0x0
jmp r-xdata
mov esi [ esp + 0x3c ]
mov esi [ esp + 0x3c ]
inc eax
mov [ esi + ebp + 0x1 ] dl
inc ebp
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebp eax
push ebp
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
lea ebp [ esp + 0x20 ]
mov eax ebp
push eax
push 0x0
push 0x33
push [ esi + 0x70 ]
jmp r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebp eax
push ebp
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push ebp
call sub_43f9d4
add esp 0x4
mov ebp [ esp + 0x10 ]
jmp r-xdata
inc ecx
jmp r-xdata
mov [ edx + ebp ] cl
inc ebp
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
call sub_431bea
add esp 0x10
test eax eax
jne r-xdata
push [ esp ]
call sub_43f9d4
add esp 0x4
push ebp
mov [ edx + ebp ] al
inc ebp
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x24 ]
push 0x33
push [ esi + 0x70 ]
call sub_431bea
add esp 0x10
push eax
push [ esp + 0x24 ]
push r--data
call sub_43f758
add esp 0xc
mov ebp eax
push ebp
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push ebp
lea eax [ esp + 0x24 ]
mov ebp eax
call sub_43f9d4
add esp 0x4
push ebp
push [ esp + 0x24 ]
push 0x33
push [ esi + 0x70 ]
mov ebp [ esp + 0x10 ]
test ebp ebp
je r-xdata
push ebp
push r--data
call sub_43f758
add esp 0x8
mov [ esp + 0x4 ] eax
push eax
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
sub_47273d
movzx eax [ ebx - 0x1 ]
mov [ esp + 0xc ] ebp
mov ebp edx
mov edx 0xfe
mov ecx esi
push eax
call sub_472d73
mov edx ebp
mov ebp [ esp + 0x10 ]
add esp 0x4
test edi edi
jne r-xdata
mov ecx [ esi + 0x6c ]
dec edi
inc ebx
cmp ecx 0x9
ja r-xdata
mov edi [ esp + 0x14 ]
test edx edx
je r-xdata
jmp [ ecx * 4 + jump_table_417b30 ]
push edi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x24 ]
call sub_497c4a
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
push edx
push edi
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x1000
setg bl
mov edx [ ecx ]
push ebx
push ecx
call [ edx + 0x18 ]
add esp 0x8
mov al [ ebx - 0x1 ]
cmp al 0xff
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esp ] al
jne r-xdata
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
cmp ecx 0x9
je r-xdata
cmp edx ebp
jge r-xdata
mov al [ esp ]
cmp al 0xf2
jne r-xdata
lea ebp [ edx + 0x100 ]
push 0x1
push ebp
push [ esp + 0x1c ]
mov [ esp + 0x14 ] edx
call sub_43f8db
mov edx [ esp + 0x14 ]
add esp 0xc
mov eax [ esp + 0x14 ]
jmp r-xdata
cmp al 0xd
jne r-xdata
jmp r-xdata
xor eax eax
cmp [ esi + 0x40 ] 0x1
mov eax 0x9
je r-xdata
mov cl [ esp ]
mov [ esp + 0x14 ] eax
mov [ eax + edx ] cl
mov eax ecx
inc edx
mov [ esi + 0x54 ] 0x0
jmp r-xdata
jmp r-xdata
sub_4729a3
cmp edx ebp
jge r-xdata
lea ebp [ edx + 0x100 ]
push 0x1
push ebp
push [ esp + 0x1c ]
mov [ esp + 0x14 ] edx
call sub_43f8db
mov edx [ esp + 0x14 ]
add esp 0xc
mov eax [ esp + 0x14 ]
jmp r-xdata
xor eax eax
mov [ esp + 0x14 ] eax
mov [ eax + edx ] 0xff
inc edx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx [ esi + 0x6c ]
dec edi
inc ebx
cmp ecx 0x9
ja r-xdata
mov edi [ esp + 0x14 ]
test edx edx
je r-xdata
jmp [ ecx * 4 + jump_table_417b30 ]
push edi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x24 ]
call sub_497c4a
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
push edx
push edi
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x1000
setg bl
mov edx [ ecx ]
push ebx
push ecx
call [ edx + 0x18 ]
add esp 0x8
mov al [ ebx - 0x1 ]
cmp al 0xff
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test al al
mov [ esp ] al
jne r-xdata
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
cmp ecx 0x9
je r-xdata
cmp edx ebp
jge r-xdata
mov al [ esp ]
cmp al 0xf2
jne r-xdata
lea ebp [ edx + 0x100 ]
push 0x1
push ebp
push [ esp + 0x1c ]
mov [ esp + 0x14 ] edx
call sub_43f8db
mov edx [ esp + 0x14 ]
add esp 0xc
mov eax [ esp + 0x14 ]
jmp r-xdata
cmp al 0xd
jne r-xdata
jmp r-xdata
cmp [ esi + 0x40 ] 0x1
mov eax 0x9
je r-xdata
mov cl [ esp ]
mov [ esp + 0x14 ] eax
mov [ eax + edx ] cl
mov eax ecx
inc edx
mov [ esi + 0x54 ] 0x0
jmp r-xdata
jmp r-xdata
sub_472d73
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebx [ esp + 0x1c ]
mov eax [ rw-data ]
mov edi edx
mov esi ecx
mov edx r--data
mov [ esp + 0x4 ] eax
push ebx
push edi
call sub_472fbd
add esp 0x8
mov ebp r--data
mov eax r--data
mov eax [ ebp ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
cmp [ eax + 0x8 ] edi
je r-xdata
mov eax [ ebp + 0x4 ]
add ebp 0x4
test eax eax
jne r-xdata
cmp [ eax + 0xc ] edi
je r-xdata
mov ecx [ eax + 0x14 ]
mov edx [ esi + ecx * 4 + 0x1c ]
cmp edx 0x3
je r-xdata
cmp [ eax + 0x10 ] ebx
jne r-xdata
cmp edi 0xfd
je r-xdata
mov eax [ eax + 0x14 ]
mov ecx [ esi + eax * 4 + 0x1c ]
cmp ecx 0x1
je r-xdata
mov ecx [ eax + 0x4 ]
lea eax [ esp + 0x1 ]
mov [ eax ] 0xff
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bl
mov edi ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push 0x3
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov edx r--data
mov ecx esi
mov [ esi + 0x50 ] eax
push ebx
push edi
jmp r-xdata
cmp edx 0x2
je r-xdata
xor ecx ecx
cmp edi 0xfb
lea eax [ esp + 0x1 ]
sete cl
mov [ eax ] 0xff
or ecx 0x7e
add ecx ecx
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bl
mov edi ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push 0x3
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov edx r--data
mov ecx esi
mov [ esi + 0x50 ] eax
push ebx
push edi
cmp edi 0xfb
jne r-xdata
mov [ esi + eax * 4 + 0x1c ] 0x2
mov eax [ ebp ]
mov ecx [ eax + 0x4 ]
lea eax [ esp + 0x1 ]
mov [ eax ] 0xff
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bl
mov edi ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push 0x3
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov edx r--data
mov ecx esi
mov [ esi + 0x50 ] eax
push ebx
push edi
call sub_472fbd
add esp 0x8
mov edx [ ebp ]
mov ecx esi
push 0x0
test ecx ecx
jne r-xdata
call sub_472fbd
add esp 0x8
jmp r-xdata
mov [ esi + ecx * 4 + 0x1c ] 0x1
mov eax [ ebp ]
mov ecx [ eax ]
lea eax [ esp + 0x1 ]
mov [ eax ] 0xff
mov [ eax + 0x1 ] cl
mov [ eax + 0x2 ] bl
mov edi ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push 0x3
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov edx r--data
mov ecx esi
push ebx
push edi
call sub_472fbd
add esp 0x8
mov edx [ ebp ]
mov ecx esi
call sub_473023
test edx edx
jne r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esi + eax * 4 + 0x1c ] 0x2
mov edi [ ebp ]
cmp [ edi ] 0xfb
jne r-xdata
mov [ esi + ecx * 4 + 0x1c ] 0x1
mov edi [ ebp ]
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov ecx esi
mov edx edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
jmp sub_473023
mov ecx esi
mov edx edi
push 0x0
jmp r-xdata
cmp [ edi + 0x10 ] 0x27
jne r-xdata
call sub_4730ee
add esp 0x4
jmp r-xdata
cmp [ esi + 0x28 ] 0x2
jne r-xdata
lea eax [ esp + 0x1 ]
mov [ eax ] 0xfbff
mov [ eax + 0x2 ] 0x24
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push 0x3
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov edx r--data
mov ecx esi
push 0x24
push 0xfb
call sub_472fbd
add esp 0x8
mov [ esi + 0x28 ] 0x0
sub_472fbd
push ebx
push edi
push esi
mov esi ecx
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
mov edi edx
call sub_473232
lea ecx [ ebx - 0xfb ]
cmp ecx 0x3
jae r-xdata
cmp ebx 0xfe
mov edx r--data
mov ecx r--data
cmove ecx edx
mov ecx [ ebx * 4 + r--data ]
jmp r-xdata
push eax
push ecx
push edi
push r--data
call sub_43f758
add esp 0x10
mov edi eax
push edi
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
retn
sub_473023
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi edx
mov edi ecx
mov [ esp + 0x8 ] eax
cmp [ esi ] 0xfb
jne r-xdata
mov ecx edi
mov edx esi
push 0x1
call sub_4730ee
add esp 0x4
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x10 ]
cmp eax 0x1f
jne r-xdata
cmp eax 0x27
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x14 ]
push edi
call sub_472140
add esp 0xc
cmp [ esi ] 0xfb
jne r-xdata
cmp eax 0x27
mov ecx r--data
mov eax r--data
cmove eax ecx
mov ebx [ eax + 0x14 ]
cmp [ edi + ebx * 4 + 0x1c ] 0x1
ja r-xdata
cmp eax 0x24
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + ebx * 4 + 0x1c ] 0x3
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x10 ]
lea eax [ esp + 0x5 ]
mov [ eax ] 0xff
mov [ eax + 0x1 ] cl
mov [ esp ] ecx
mov [ eax + 0x2 ] dl
mov ebp edx
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
push 0x3
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov [ edi + 0x50 ] eax
mov edx r--data
mov ecx edi
push ebp
push [ esp + 0x4 ]
call sub_472fbd
add esp 0x8
sub_4730ee
push edi
push esi
sub esp 0x8
mov esi ecx
mov ecx [ rw-data ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] ecx
mov ecx [ edx + 0x10 ]
cmp ecx 0x3
je r-xdata
cmp [ edx ] 0xfd
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
test eax eax
sete cl
mov [ esi + 0x48 ] ecx
cmp [ edx ] 0xfd
jne r-xdata
cmp [ esi + 0x4c ] 0x0
jne r-xdata
push eax
call sub_43c0cc
add esp 0x4
xor ecx ecx
test eax eax
sete cl
mov [ esi + 0x44 ] ecx
jmp r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
retn
cmp [ esi + 0x30 ] 0x2
jne r-xdata
cmp [ esi + 0x34 ] 0x2
jne r-xdata
lea eax [ esp + 0x1 ]
mov [ esi + 0x30 ] 0x0
mov [ eax ] 0xfdff
mov [ eax + 0x2 ] 0x1
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push 0x3
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov edx r--data
mov ecx esi
push 0x1
push 0xfd
call sub_472fbd
add esp 0x8
cmp [ esi + 0x38 ] 0x2
jne r-xdata
lea eax [ esp + 0x1 ]
mov [ esi + 0x34 ] 0x0
mov edi 0x3
mov [ eax ] 0xfbff
mov [ eax + 0x2 ] 0x3
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push edi
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov edx r--data
mov ecx esi
push edi
push 0xfb
call sub_472fbd
add esp 0x8
mov [ esi + 0x4c ] 0x1
lea eax [ esp + 0x1 ]
mov [ esi + 0x38 ] 0x0
mov edi 0x3
mov [ eax ] 0xfdff
mov [ eax + 0x2 ] 0x3
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push edi
push eax
push ecx
call [ edx + 0x8 ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov edx r--data
mov ecx esi
push edi
push 0xfd
call sub_472fbd
add esp 0x8
sub_473232
cmp ecx 0x89
jg r-xdata
cmp ecx 0x8b
jg r-xdata
cmp ecx 0x31
ja r-xdata
cmp ecx 0x8c
je r-xdata
cmp ecx 0x8a
je r-xdata
mov eax r--data
mov eax r--data
jmp [ ecx * 4 + jump_table_417b90 ]
mov eax r--data
retn
cmp ecx 0xff
jne r-xdata
mov eax r--data
retn
cmp ecx 0x8b
jne r-xdata
retn
mov eax r--data
retn
mov eax r--data
retn
sub_4733cc
push edi
push esi
mov esi [ esp + 0xc ]
mov [ esi + 0x109c ] 0x0
push [ esi + 0x1088 ]
call sub_48bf51
add esp 0x4
mov edi eax
test edi edi
je r-xdata
pop esi
pop edi
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov ecx esi
mov edx edi
call sub_473468
mov eax [ esi + 0x6c ]
sub eax [ esi + 0x10 ]
push eax
push [ esi + 0x70 ]
push [ esi + 0x1088 ]
call sub_48a946
add esp 0xc
push edi
call sub_48bf83
add esp 0x4
cmp [ esi + 0x1168 ] 0x0
je r-xdata
mov ecx esi
call sub_473441
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x154 ] eax
sub_473441
push esi
mov esi ecx
call sub_475eb3
mov ecx [ esi + 0x128 ]
lea edx [ ecx + eax ]
add eax [ esi + 0x10 ]
push ecx
push eax
push edx
push [ esi + 0x1088 ]
call sub_48be9e
add esp 0x10
pop esi
retn
sub_473468
push ebp
push ebx
push edi
push esi
sub esp 0x70
mov edi ecx
mov [ esp + 0x40 ] edx
push 0x2
push 0x400
call sub_43f807
add esp 0x8
mov [ esp + 0x20 ] eax
push 0xc
push [ edi + 0x12c ]
call sub_43f807
add esp 0x8
mov [ esp + 0x2c ] eax
xor eax eax
cmp [ edi + 0xa8 ] eax
sete [ esp + 0x38 ]
cmp [ edi + 0x138 ] eax
mov [ esp + 0x58 ] 0x0
sete [ esp ]
cmp [ edi + 0xb0 ] eax
je r-xdata
mov edx [ edi + 0x6c ]
mov ecx edi
mov ebp edx
sub ebp [ edi + 0x10 ]
push 0x0
push 0x136e
call sub_474f94
add esp 0x8
mov esi [ edi + 0x70 ]
mov ebx eax
mov ecx edi
mov edx ebx
push ebp
call sub_476f0a
add esp 0x4
test eax eax
mov [ esp + 0x4 ] edi
mov [ esp + 0x24 ] ebp
je r-xdata
cmp [ edi + 0x134 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ edi + 0x10cc ]
mov edx ebp
shl edx 0x4
mov ecx [ ecx + edx + 0x8 ]
mov esi [ ecx + esi * 4 ]
jmp r-xdata
mov eax 0x20000000
cmp [ edi + 0xbc ] 0x0
mov eax 0x40000000
jne r-xdata
mov [ esp + 0x44 ] esi
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea ecx [ esi + esi * 2 ]
xor edx edx
cmp [ eax + ecx * 4 ] 0xdfff
sete dl
sub esi edx
test esi esi
jle r-xdata
mov ecx eax
or ecx 0x10000000
cmp [ edi + 0x8c ] 0x0
cmove ecx eax
mov [ esp + 0x58 ] ecx
xor eax eax
cmp [ edi + 0x1100 ] 0x0
sete al
shl eax 0x1e
jmp r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x20 ]
test ecx ecx
js r-xdata
push [ ebx + 0x14 ]
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
lea ecx [ edx + 0x1c ]
jmp r-xdata
mov eax [ edx + 0x1c ]
cmp ecx [ esp + 0x24 ]
lea ebp [ edx + 0x1c ]
jne r-xdata
xor eax eax
dec eax
mov [ edx + 0x20 ] eax
mov [ ecx ] eax
mov eax ecx
cmp [ edx + 0x128 ] 0x0
jle r-xdata
mov edx [ esp + 0x4 ]
test eax eax
mov edx [ edx + 0x18 ]
mov ecx [ edx + ecx * 4 ]
lea edx [ eax + eax * 2 ]
mov ecx [ ecx + 0x14 ]
lea esi [ ecx + edx * 4 ]
jle r-xdata
mov edx [ esp + 0x4 ]
mov esi [ esp + 0x58 ]
cmp [ edx + 0x24 ] esi
jne r-xdata
push [ esp + 0x2c ]
call sub_43f9d4
add esp 0x4
push [ esp + 0x20 ]
call sub_43f9d4
add esp 0x74
pop esi
pop edi
pop ebx
pop ebp
retn
mov cl [ esp + 0x38 ]
mov esi [ esp + 0x4 ]
mov ebp 0x0
mov [ esp + 0x38 ] 0x400
mov [ esp + 0x68 ] eax
xor cl [ esp ]
movzx ecx cl
shl ecx 0x14
xor edi edi
inc edi
mov [ esp + 0x48 ] ecx
mov edi [ esp + 0x4 ]
mov edi [ edi + 0x12c ]
dec edi
cmp eax edi
jge r-xdata
cmp [ esi ] 0xdfff
jne r-xdata
cmp eax [ esp + 0x44 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x3c ] eax
mov eax [ esi + 0x10cc ]
mov ecx ebp
shl ecx 0x4
mov eax [ eax + ecx + 0xc ]
mov [ esp + 0x14 ] eax
jmp r-xdata
or [ ecx + edx * 4 + 0x4 ] 0x3ffff
mov edx [ esp + 0x4 ]
mov [ edx + 0x24 ] 0x0
cmp [ esi + 0xc ] 0xdfff
jne r-xdata
or [ esi - 0x8 ] 0x3ffff
mov eax [ ebp ]
mov edx [ esp + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x18 ]
movzx ecx [ eax ]
mov eax [ ebx + 0x18 ]
mov edx [ eax + ebp * 4 ]
xor eax eax
cmp cx [ edx ]
setne [ esp ]
mov [ edx ] cx
cmp [ ebx + 0x12c ] 0x0
jle r-xdata
xor esi esi
mov eax [ esi + 0x12c ]
mov ebx esi
mov [ esp + 0x8 ] ebp
test eax eax
jle r-xdata
or [ esi + 0x10 ] 0x3ffff
mov ecx ebp
mov esi [ esp + 0x18 ]
cmp [ esi + 0xc ] 0x0
je r-xdata
mov cl [ esp ]
xor edi edi
xor ebp ebp
xor edx edx
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x30 ] 0x0
mov al cl
mov [ esp + 0x1c ] eax
mov [ esp + 0x54 ] eax
mov ecx [ esp + 0x3c ]
mov edx esi
xor ebp ebp
mov esi [ ecx + edi * 4 - 0x4 ]
mov [ esp ] esi
mov esi [ ecx + edi * 4 ]
mov ecx esi
and ecx 0xfffc0000
or ecx 0x20500
cmp [ ebx + 0x10d4 ] ebp
cmovne ecx esi
cmp [ ebx + 0x1170 ] ebp
jne r-xdata
mov ecx [ ecx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov esi [ esp + 0x4 ]
inc ebp
cmp ebp [ esi + 0x128 ]
jl r-xdata
push [ esi + 0x14 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov edx eax
jmp r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
mov cl bl
test eax eax
jle r-xdata
mov esi [ esp ]
and esi 0xffffff00
cmp esi 0xda00
je r-xdata
mov esi ecx
mov ebx ecx
mov ebp 0xf0
and esi 0x1ff
and ebx 0xfffffe00
add esi 0xfffffff0
or ebx 0x100
cmp esi ebp
cmovae ebx ecx
mov esi ebx
mov ecx ebx
shr esi 0x9
and ecx 0xfffc01ff
and esi 0x1ff
or ecx 0x20400
add esi 0xfffffff0
cmp esi ebp
cmovae ecx ebx
mov ebx [ esp + 0x4 ]
mov edx [ esi + 0x10 ]
mov ecx esi
add edx ebp
mov [ esp + 0x10 ] edx
push 0x0
push 0x13ae
call sub_474f94
add esp 0x8
mov ebx eax
mov ecx esi
mov edx ebx
push ebp
call sub_476f0a
add esp 0x4
test eax eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov ecx [ esp ]
mov [ esp + 0x14 ] esi
mov esi [ esp + 0x64 ]
mov ebx ecx
mov edi ecx
and ecx 0xffffff00
and ebx 0xfffffe00
and edi 0xfffffc00
cmp ebx 0xf000
mov ebx 0x0
cmove ebx ecx
cmp edi 0xd800
mov edi [ esp + 0x3c ]
cmove ebx ecx
mov ecx [ esp + 0xc ]
cmp ebx [ esp + 0x28 ]
mov [ esp + 0x4c ] ebx
mov ebx [ esp + 0x4 ]
lea esi [ edi + esi ]
lea ecx [ ecx + ecx * 2 ]
mov [ esp + 0x34 ] esi
mov [ esp + 0x50 ] ecx
cmovne edx eax
cmp [ edi + ecx * 4 + 0x8 ] 0x0
mov esi edx
mov ecx eax
je r-xdata
xor eax eax
mov edx ecx
inc eax
lea edi [ eax + eax * 2 ]
mov eax [ esp + 0x2c ]
mov edx ecx
mov edi [ eax + edi * 4 - 0xc ]
mov eax 0xffffdc46
add edi eax
mov eax 0x3
cmp edi eax
mov eax 0x1
ja r-xdata
mov esi [ ebx + 0x1090 ]
movzx ebx [ esp ]
lea esi [ esi + ebx * 2 + 0x10 ]
cmp esi 0xd900
je r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov esi ecx
mov eax [ ebx + 0xe48 ]
and eax 0xfffffffe
cmp eax 0x2
jne r-xdata
mov esi [ esp + 0x3c ]
mov eax ecx
or eax __dos_header
cmp [ esi + edi * 4 + 0x8 ] 0xdfff
mov esi edx
cmove ecx eax
mov esi [ ebx + 0x1090 ]
movzx ebx [ esp ]
lea esi [ esi + ebx * 2 + 0x610 ]
jmp r-xdata
cmp esi 0xd800
jne r-xdata
mov ecx [ ebx + 0x1090 ]
mov edx [ esp ]
mov ecx [ ecx + 0x4 ]
or ecx [ esp + 0x54 ]
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x60 ]
cmp [ ecx + eax * 4 ] edx
mov edx ecx
jne r-xdata
mov edx [ esp + 0x60 ]
mov ebp ecx
mov edx [ esp + 0x24 ]
xor eax eax
xor ebp [ esp + 0x48 ]
cmp [ ebx + 0xe4c ] 0x0
mov eax [ ebx + 0xe54 ]
je r-xdata
movzx esi [ esi ]
mov ebx [ esp + 0x4 ]
mov [ esp ] esi
mov esi edx
dec eax
cmp esi eax
jge r-xdata
mov esi [ ebx + 0x1090 ]
movzx ebx [ esp ]
lea esi [ esi + ebx * 2 + 0x210 ]
jmp r-xdata
jmp r-xdata
mov ecx ebp
xor ecx 0x1
or ecx [ esp + 0x1c ]
jne r-xdata
mov eax [ esp + 0x6c ]
and eax 0xfffffff
cmp eax [ esp + 0x14 ]
je r-xdata
mov ecx [ esp + 0x30 ]
test ebp ebp
jle r-xdata
mov eax [ esp + 0x28 ]
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x14 ]
mov [ esp + 0x4c ] eax
jmp r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp ]
mov eax [ eax + 0x14 ]
cmp ecx [ eax + edi * 4 - 0x4 ]
jne r-xdata
mov eax [ ebx + 0xc4 ]
test eax eax
je r-xdata
cmp eax [ esp + 0x10 ]
jl r-xdata
cmp eax [ esp + 0x10 ]
jg r-xdata
test esi esi
jne r-xdata
mov eax [ ebx + 0x1090 ]
mov ecx [ esp + 0x8 ]
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x54 ]
cmp [ eax + 0x4 ] 0x0
mov eax [ esp + 0x5c ]
cmovne eax [ esp + 0x1c ]
xor ebp ebp
mov [ esp + 0x5c ] eax
mov eax [ ebx + 0x18 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + 0x14 ]
mov [ esp + 0x30 ] edi
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x5c ]
or eax [ esp + 0x1c ]
je r-xdata
mov eax [ esp + 0x50 ]
lea ecx [ edx + eax * 4 ]
mov edx [ esp + 0x34 ]
push edi
push [ esp + 0x4 ]
call sub_47c90f
add esp 0x8
test eax eax
mov edx 0x1
lea ecx [ ebp + 0x2 ]
mov [ esp + 0x28 ] eax
cmove esi edx
cmp ecx [ esp + 0x38 ]
mov [ esp + 0x1c ] esi
jle r-xdata
test ebp __dos_header
jne r-xdata
mov eax [ eax + edi * 4 ]
mov ecx eax
and ecx 0xf7fffff
cmp ebp ecx
jne r-xdata
cmp [ ebx + 0x134 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ ebx + 0xe5c ]
jge r-xdata
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ ebx + 0xe58 ] eax
jg r-xdata
mov edx [ esp + 0x20 ]
lea eax [ ebp + 0x100 ]
push 0x2
mov [ esp + 0x3c ] eax
push eax
push [ esp + 0x28 ]
call sub_43f8db
add esp 0xc
mov edx eax
jmp r-xdata
mov eax [ esp + 0x18 ]
movzx eax [ eax ]
push eax
push ecx
push ebp
push [ esp + 0x2c ]
push [ esp + 0x18 ]
push [ esp + 0x24 ]
push [ esp + 0x58 ]
call sub_48b88d
mov ecx [ esp + 0x4c ]
add esp 0x1c
test ecx 0x60000000
je r-xdata
cmp [ esp + 0x8 ] edx
jne r-xdata
push [ esp ]
push [ esp + 0x44 ]
call sub_48bc68
mov edx [ esp + 0x2c ]
add esp 0x8
mov ecx ebp
or ecx 0x800000
cmp eax 0x2
cmove ebp ecx
and eax 0x800000
or ebp eax
jmp r-xdata
and ebp 0xffdfffff
cmp [ ebx + 0xc0 ] 0x0
je r-xdata
jne r-xdata
mov ebp ecx
mov edx [ esp + 0x24 ]
xor ebp [ esp + 0x48 ]
jmp r-xdata
mov eax [ esp + 0xc ]
cmp [ ebx + 0xe58 ] eax
jg r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ ebx + 0xe5c ]
jle r-xdata
mov ecx esi
lea ecx [ esi - 0x10000 ]
mov esi edx
mov edx ecx
and ecx 0x3ff
shr edx 0xa
or ecx 0xdc00
add edx 0xd800
mov [ esi + ebp * 2 ] dx
mov edx esi
inc ebp
jmp r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x50 ]
mov esi [ esp ]
mov edi [ esp + 0xc ]
lea eax [ eax + ecx * 4 + 0x8 ]
lea ecx [ esi - 0x10001 ]
cmp ecx 0xffffe
ja r-xdata
mov eax [ esp + 0x18 ]
movzx eax [ eax ]
push eax
push ecx
push ebp
push [ esp + 0x2c ]
push [ esp + 0x18 ]
push [ esp + 0x24 ]
push [ esp + 0x58 ]
call sub_48ba3c
add esp 0x1c
mov eax [ esp + 0x2c ]
inc esi
mov [ eax + edi * 4 ] ebp
mov ecx [ esp ]
mov [ eax + edi * 4 - 0x4 ] ecx
mov [ eax + edi * 4 + 0x4 ] 0x0
add edi 0x3
mov eax [ ebx + 0x12c ]
cmp esi eax
jl r-xdata
mov ecx [ esp + 0x44 ]
cmp ecx esi
jne r-xdata
mov eax [ ebx + 0x1090 ]
movzx eax [ eax + 0x250 ]
mov [ esp ] eax
mov edx [ esp + 0xc ]
mov ebp ecx
xor eax eax
xor ebp [ esp + 0x48 ]
cmp edx [ ebx + 0xe60 ]
mov edx [ esp + 0x24 ]
jge r-xdata
mov eax 0x100000
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x28 ]
mov [ esp + 0x20 ] edx
test eax eax
jne r-xdata
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x14 ]
mov [ edx + ebp * 2 ] cx
inc ebp
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0xc ] esi
test ecx ecx
je r-xdata
mov ebp [ esp + 0x8 ]
test eax eax
mov edi 0x1
jle r-xdata
mov eax [ esp + 0x58 ]
mov [ ebx + 0x24 ] eax
or ebp eax
mov eax [ esp + 0x68 ]
mov [ eax ] ecx
mov [ ebx + 0x20 ] edx
xor ebp eax
test ecx 0x200000
je r-xdata
mov edx [ esp + 0x10 ]
test esi __dos_header
je r-xdata
mov eax [ ebx + 0x18 ]
mov esi [ esp + 0x8 ]
mov edx edi
mov ecx [ eax + esi * 4 ]
push [ esp + 0x34 ]
call sub_47bc7e
add esp 0x4
mov eax [ ebx + 0x18 ]
mov ecx [ esp + 0x64 ]
mov edx [ esp ]
mov eax [ eax + esi * 4 ]
mov eax [ eax + 0x14 ]
mov [ eax + ecx ] edx
mov eax [ ebx + 0x18 ]
mov eax [ eax + esi * 4 ]
mov esi [ esp + 0x14 ]
mov eax [ eax + 0x14 ]
mov [ eax + ecx + 0x4 ] esi
cmp [ esp + 0x10 ] edi
jne r-xdata
mov eax [ esp + 0x4 ]
movzx ecx bl
mov eax [ eax + 0x1090 ]
lea eax [ eax + ecx * 2 + 0x10 ]
cmp eax 0xd900
je r-xdata
xor ecx ecx
mov [ esp ] 0x0
mov [ esp + 0xc ] 0x0
inc edi
cmp edi [ ebx + 0x12c ]
jl r-xdata
inc edi
cmp edi [ ebx + 0x12c ]
jge r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x50 ]
mov eax [ eax + 0x14 ]
or [ eax + ecx * 4 + 0x4 ] 0x80000000
lea eax [ ebx - 0x10001 ]
cmp eax 0xffffe
ja r-xdata
lea eax [ ebp + 0x100 ]
push 0x2
mov [ esp + 0x3c ] eax
push eax
push edx
call sub_43f8db
add esp 0xc
mov edx eax
mov eax [ esp + 0x4 ]
movzx ecx bl
mov eax [ eax + 0x1090 ]
lea eax [ eax + ecx * 2 + 0x610 ]
jmp r-xdata
cmp eax 0xd800
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
mov [ esp + 0x10 ] edx
mov [ esp + 0xc ] edi
lea eax [ edi * 4 ]
mov edx ebx
mov ecx [ esp + 0x8 ]
mov edi [ esp + 0x2c ]
lea ebx [ eax + eax * 2 ]
mov eax [ edx + 0x18 ]
mov esi [ edi + ebx + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax + 0x14 ]
mov [ esp + 0x60 ] eax
mov ecx [ eax + ebx + 0x4 ]
mov eax 0x1
mov [ esp + 0x6c ] ecx
xor ecx esi
test ecx __dos_header
mov ecx [ esp + 0x54 ]
cmovne ecx eax
mov [ esp + 0x54 ] ecx
mov ecx esi
xor ecx [ esp + 0x30 ]
test [ edx + 0x106c ] ecx
mov [ esp + 0x64 ] ebx
mov edx [ esp + 0x4c ]
mov ecx [ edi + ebx ]
mov edi 0x4
setne bl
mov [ esp + 0x28 ] edx
mov [ esp ] ecx
lea ecx [ ecx - 0x23ba ]
cmp ecx edi
jb r-xdata
cmp [ esp + 0x1c ] 0x0
mov ecx [ esp + 0x20 ]
je r-xdata
mov eax [ esp + 0x8 ]
add [ esp + 0x34 ] 0xc
cmp eax [ esp + 0x24 ]
jne r-xdata
mov [ edx + ebp * 2 ] bx
lea edi [ edi + esi * 4 ]
inc ebp
mov eax [ edi + 0x8 ]
test eax eax
jne r-xdata
add ebx 0xffff0000
mov eax ebx
and ebx 0x3ff
shr eax 0xa
or ebx 0xdc00
add eax 0xd800
mov [ edx + ebp * 2 ] ax
inc ebp
movzx ebx [ eax ]
lea eax [ ebp + 0x2 ]
cmp eax [ esp + 0x38 ]
jle r-xdata
mov eax [ esp + 0x4 ]
movzx ecx bl
mov eax [ eax + 0x1090 ]
lea eax [ eax + ecx * 2 + 0x210 ]
jmp r-xdata
mov edx [ esp + 0xc ]
cmp edx ecx
jge r-xdata
mov ebp [ esp + 0x8 ]
xor edi edi
inc edi
jmp r-xdata
mov ebp [ esp + 0x8 ]
test edx edx
mov edi 0x1
jne r-xdata
mov edi [ esp + 0x2c ]
mov [ esp ] edx
mov edx ebx
lea ebp [ ecx + ecx * 2 ]
and edx 0xfffffff
cmp edx [ edi + ebp * 4 + 0x4 ]
mov edx [ esp ]
jne r-xdata
mov ebp [ esp + 0x8 ]
xor edi edi
test ebp ebp
jle r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ esp + 0x8 ]
mov esi [ esp + 0x34 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ edi + edi * 2 ]
mov edx esi
shl ecx 0x2
mov [ esp ] eax
add ecx [ eax + 0x14 ]
push [ esi + 0x4 ]
push [ esi ]
call sub_47c90f
add esp 0x8
mov edx [ esp + 0x1c ]
test eax eax
mov ecx 0x1
cmove edx ecx
mov ecx [ esp ]
mov [ esp + 0x1c ] edx
mov edx edi
push esi
call sub_47bc7e
add esp 0x4
mov edx [ esp + 0x10 ]
cmp edi [ esp + 0x44 ]
jne r-xdata
lea esi [ eax + eax * 2 ]
mov ebx [ edi + esi * 4 ]
mov eax ebx
and eax 0xffffff00
cmp eax 0xda00
je r-xdata
mov ebx [ esp + 0x4 ]
mov edi [ esp + 0xc ]
mov esi [ esp + 0x14 ]
or [ esp + 0x30 ] 0x80000000
mov ebp [ esp + 0x8 ]
xor edi edi
mov ebx [ esp + 0x4 ]
mov ebp [ esp + 0x8 ]
lea eax [ edx + edx * 2 ]
mov edi edx
lea eax [ eax * 4 + 0x4 ]
lea eax [ ecx + ecx * 2 ]
or ebx 0x3ffff
mov [ esp ] edx
mov [ esi + eax * 4 + 0x4 ] ebx
mov ebx [ esp + 0x4 ]
mov eax [ ebx + 0x12c ]
mov ebx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ esp ] 0x0
jmp r-xdata
mov eax [ esp + 0x18 ]
movzx eax [ eax ]
push eax
mov edi [ esp + 0x34 ]
push edi
push ebp
push ecx
mov ebx [ esp + 0x18 ]
push ebx
push edx
mov esi [ esp + 0x58 ]
push esi
mov [ esp + 0x2c ] edx
call sub_48b88d
add esp 0x1c
test edi 0x60000000
je r-xdata
push 0x14c5
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esp + 0x10 ] eax
mov edi [ esp + 0xc ]
mov esi [ ebx + 0x18 ]
lea ebx [ ecx * 4 ]
mov esi [ esi + ebp * 4 ]
lea ebp [ ebx + ebx * 2 ]
mov esi [ esi + 0x14 ]
mov edx [ esi + ebp ]
mov [ esp + 0x14 ] edx
mov edx [ esp ]
mov ebx [ esi + ebp + 0x4 ]
mov eax [ esp + 0x14 ]
test ebx ebx
cmovs edi ecx
mov [ esp + 0xc ] edi
mov edi 0x0
cmovs edx edi
mov edi [ esp + 0x2c ]
cmp eax [ edi + ebp ]
jne r-xdata
or [ esi + eax ] 0x3ffff
inc edi
add eax 0xc
mov edx [ ebx + 0x18 ]
cmp ecx edi
mov edx [ edx + ebp * 4 ]
mov esi [ edx + 0x14 ]
jne r-xdata
lea eax [ ecx + ecx * 2 ]
xor edi edi
mov ebx [ esi + eax * 4 + 0x4 ]
jmp r-xdata
inc ecx
cmp ecx eax
jl r-xdata
xor edi edi
mov ebp ebx
jmp r-xdata
mov eax [ esp + 0x18 ]
movzx eax [ eax ]
push eax
push edi
push ebp
push [ esp + 0x2c ]
push ebx
push [ esp + 0x24 ]
push esi
call sub_48ba3c
add esp 0x1c
inc edi
mov edx edi
inc edi
sub_47401d
push esi
mov esi [ esp + 0x8 ]
mov [ esi + 0x34 ] 0x0
jmp r-xdata
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi + 0x28 ] ecx
push eax
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
cmp [ esi + 0x116c ] eax
je r-xdata
pop esi
retn
mov [ esi + 0x10 ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
sub_474087
push esi
mov esi [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov ecx esi
call sub_4740d3
mov eax [ esi + 0x1084 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xe48 ] eax
mov [ esi + 0xe58 ] eax
mov [ esi + 0xe54 ] eax
mov [ esi + 0xe60 ] eax
mov [ esi + 0xe5c ] eax
pop esi
jmp sub_4733cc
push eax
call sub_43c0cc
add esp 0x4
sub_4740d3
push ebp
push ebx
push edi
push esi
mov esi ecx
xor ebx ebx
mov edi edx
mov [ esi + 0x17c ] ebx
mov [ esi + 0x178 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x108 ] ebx
mov [ esi + 0x10c ] ebx
mov [ esi + 0x7c ] ebx
mov [ esi + 0x19c ] ebx
mov eax [ esi + 0x128 ]
cmp eax 0xffffffff
lea eax [ eax - 0x1 ]
cmove eax ebx
mov [ esi + 0x80 ] eax
mov [ esi + 0x1a0 ] eax
cmp [ esi + 0x12c ] ebx
jle r-xdata
push 0x61
push [ esi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esi + 0x84 ] eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x90 ] ebx
mov [ esi + 0x18c ] ebx
mov [ esi + 0x120 ] ebx
mov [ esi + 0xa4 ] ebx
mov [ esi + 0x8c ] ebx
mov [ esi + 0x188 ] ebx
push 0x62
push [ esi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esi + 0x88 ] eax
mov [ esi + 0x184 ] eax
mov eax 0xd800
mov [ esi + 0x114 ] ebx
mov [ esi + 0x98 ] ebx
mov [ esi + 0x94 ] ebx
mov [ esi + 0x190 ] ebx
mov [ esi + 0x11c ] ebx
mov [ esi + 0xa0 ] ebx
mov [ esi + 0xdc ] ebx
mov [ esi + 0x198 ] ebx
mov [ esi + 0xe0 ] ebx
mov [ esi + 0x124 ] ebx
mov [ esi + 0xd4 ] ebx
mov [ esi + 0xd0 ] ebx
mov [ esi + 0x194 ] ebx
mov [ esi + 0x118 ] eax
mov [ esi + 0x9c ] eax
mov [ esi + 0x174 ] eax
mov [ esi + 0x170 ] eax
mov eax 0x20500
mov [ esi + 0xa8 ] ebx
mov [ esi + 0x138 ] ebx
mov [ esi + 0xb0 ] 0x1
mov [ esi + 0x158 ] ebx
mov [ esi + 0x40 ] eax
mov [ esi + 0x110 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0xc8 ] ebx
mov [ esi + 0xcc ] ebx
push 0x4c
push [ esi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esi + 0x140 ] eax
push 0x4d
push [ esi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esi + 0x144 ] eax
push 0x70
push [ esi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esi + 0xb8 ] eax
push 0x71
push [ esi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esi + 0xc4 ] eax
mov ecx esi
mov eax [ esi + 0x50 ]
mov [ esi + 0x5c ] eax
movsd xmm0 [ esi + 0x48 ]
movsd [ esi + 0x54 ] xmm0
mov [ esi + 0x1a4 ] ebx
call sub_474d89
mov [ esi + 0x15c ] ebx
mov [ esi + 0x160 ] ebx
mov [ esi + 0x164 ] ebx
push ebx
push [ esi + 0x1088 ]
call sub_489dfa
add esp 0x8
mov [ esi + 0x16c ] ebx
xor eax eax
push ebx
push 0x8f
push [ esi + 0x1094 ]
call sub_4319e9
add esp 0xc
mov [ esi + ebx * 2 + 0xe6c ] ax
inc ebx
cmp ebx 0x100
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ecx [ esi + 0xe40 ]
test al 0x7
sete [ ecx + eax ]
inc eax
cmp eax [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x6c ] 0x0
xor ebp ebp
xor ebx ebx
mov ecx esi
inc ebx
mov edx ebx
push ebp
push ebp
call sub_474b0b
add esp 0x8
xor edx edx
mov ecx esi
push ebx
push ebx
call sub_47b6c6
add esp 0x8
xor edx edx
mov ecx esi
push ebp
push ebp
call sub_474b0b
add esp 0x8
test edi edi
je r-xdata
mov edx [ esi + 0x8 ]
mov ecx esi
call sub_475f77
lea ecx [ eax + 0x1 ]
mov [ esi + 0x6c ] ecx
cmp ecx [ esi + 0x128 ]
jne r-xdata
xor edx edx
mov ecx esi
push ebx
push ebx
call sub_47b6c6
add esp 0x8
mov ecx esi
mov [ esi + 0x70 ] 0x0
call sub_474e5f
mov ecx esi
pop esi
pop edi
pop ebx
pop ebp
jmp sub_474eb4
mov [ esi + 0x6c ] eax
xor edx edx
mov ecx esi
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
sub_474395
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
push 0x84
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10d4 ] eax
push 0x82
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10e0 ] eax
push 0x66
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10e4 ] eax
push 0x68
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10e8 ] eax
push 0x69
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10ec ] eax
push 0x6b
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10f0 ] eax
push 0x6a
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10f4 ] eax
push 0x83
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10f8 ] eax
push 0x3f
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x10fc ] eax
push 0x65
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1100 ] eax
push 0x71
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1104 ] eax
push 0x92
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1108 ] eax
push 0x74
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x110c ] eax
push 0x73
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1110 ] eax
push 0xb6
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1114 ] eax
push 0x5a
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1118 ] eax
push 0x41
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x111c ] eax
push 0x63
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1120 ] eax
push 0x7a
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1124 ] eax
push 0x78
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1128 ] eax
push 0x8e
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x112c ] eax
push 0x4e
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1130 ] eax
push 0x46
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1134 ] eax
push 0x42
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1138 ] eax
push 0x43
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x113c ] eax
push 0x49
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1140 ] eax
push 0x44
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1144 ] eax
push 0x4a
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1148 ] eax
push 0x45
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x114c ] eax
push 0x47
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1150 ] eax
push 0x48
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1154 ] eax
push 0x8c
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1158 ] eax
push 0x8b
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x115c ] eax
push 0x4b
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1160 ] eax
push 0x40
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1164 ] eax
push 0x59
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1168 ] eax
push 0x58
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x116c ] eax
push 0x85
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x1170 ] eax
push 0x80
push [ edi + 0x1094 ]
call sub_431a8c
add esp 0x8
mov esi eax
push esi
call sub_4a7f30
add esp 0x4
push 0x1
push eax
call sub_43f807
add esp 0x8
mov [ edi + 0x10d8 ] eax
mov [ edi + 0x10dc ] 0x0
cmp [ esi ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx esp
mov edx [ edi + 0x10dc ]
mov al [ esi ]
mov ecx [ edi + 0x10d8 ]
inc esi
lea ebp [ edx + 0x1 ]
mov [ edi + 0x10dc ] ebp
mov [ ecx + edx ] al
mov edx [ edi + 0x10dc ]
mov ecx [ edi + 0x10d8 ]
lea esi [ edx + 0x1 ]
mov [ edi + 0x10dc ] esi
mov [ ecx + edx ] al
mov esi [ esp ]
jmp r-xdata
push ebx
push esi
call sub_43f584
add esp 0x8
cmp [ esp ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
sub_4747a6
push ebp
push ebx
push edi
push esi
sub esp 0x28
mov ebx [ esp + 0x40 ]
mov edi [ esp + 0x3c ]
mov esi 0x62
push esi
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esp + 0x20 ] eax
push esi
push ebx
call sub_43194f
add esp 0x8
mov esi 0x61
mov [ esp + 0x10 ] eax
push esi
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esp + 0x1c ] eax
push esi
push ebx
call sub_43194f
add esp 0x8
mov esi 0x70
mov [ esp + 0xc ] eax
push esi
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esp + 0x14 ] eax
push esi
push ebx
call sub_43194f
add esp 0x8
mov esi 0x71
mov [ esp + 0x8 ] eax
push esi
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ esp + 0x24 ] eax
push esi
mov [ esp + 0x4 ] ebx
push ebx
call sub_43194f
add esp 0x8
mov [ esp + 0x18 ] eax
mov [ esp + 0x4 ] edi
xor ebx ebx
mov esi 0x8f
xor ebp ebp
mov eax [ edi + 0x1094 ]
push ebx
push esi
push eax
call sub_4319e9
add esp 0xc
mov edi eax
push ebx
push esi
push [ esp + 0x8 ]
call sub_4319e9
add esp 0xc
cmp edi eax
mov eax 0x1
cmovne ebp eax
mov eax [ esp + 0x4 ]
inc ebx
cmp ebx 0x100
mov eax [ eax + 0x1094 ]
jne r-xdata
mov esi 0x82
push esi
push eax
call sub_43194f
add esp 0x8
mov edi eax
push esi
push [ esp + 0x4 ]
call sub_43194f
add esp 0x8
cmp edi eax
mov eax [ esp + 0x4 ]
mov edi eax
jne r-xdata
cmp [ eax + 0x10d0 ] 0x0
jle r-xdata
mov esi 0x83
push esi
push [ eax + 0x1094 ]
call sub_43194f
add esp 0x8
mov ebx eax
push esi
push [ esp + 0x4 ]
call sub_43194f
add esp 0x8
cmp ebx eax
mov eax edi
je r-xdata
push [ eax + 0x1094 ]
mov edi eax
call sub_431816
add esp 0x4
push [ esp ]
call sub_43191d
add esp 0x4
mov ecx [ esp + 0x10 ]
cmp [ esp + 0x20 ] ecx
mov [ edi + 0x1094 ] eax
je r-xdata
xor ebx ebx
xor esi esi
mov eax [ esp + 0xc ]
cmp [ esp + 0x1c ] eax
je r-xdata
push 0x62
push eax
call sub_43194f
add esp 0x8
mov [ edi + 0x88 ] eax
mov [ edi + 0x184 ] eax
mov eax [ edi + 0x10c8 ]
push [ eax + ebx + 0x4 ]
call sub_43f9d4
add esp 0x4
mov eax [ edi + 0x10cc ]
push [ eax + ebx + 0x4 ]
call sub_43f9d4
add esp 0x4
mov eax [ edi + 0x10c8 ]
xor ecx ecx
inc esi
dec ecx
mov edx ecx
xor ecx ecx
mov [ eax + ebx ] edx
mov eax [ edi + 0x10c8 ]
mov [ eax + ebx + 0x4 ] ecx
mov eax [ edi + 0x10cc ]
mov [ eax + ebx ] edx
mov eax [ edi + 0x10cc ]
mov [ eax + ebx + 0x4 ] ecx
mov eax edi
add ebx 0x10
cmp esi [ eax + 0x10d0 ]
jl r-xdata
mov eax [ esp + 0x8 ]
cmp [ esp + 0x14 ] eax
je r-xdata
push 0x61
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0x84 ] eax
mov [ edi + 0x180 ] eax
mov eax [ esp + 0x18 ]
cmp [ esp + 0x24 ] eax
je r-xdata
push 0x70
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0xb8 ] eax
test eax eax
mov ecx [ edi + 0x50 ]
mov [ edi + 0x5c ] ecx
movsd xmm0 [ edi + 0x48 ]
movsd [ edi + 0x54 ] xmm0
je r-xdata
test ebp ebp
je r-xdata
push 0x71
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
mov [ edi + 0xc4 ] eax
mov eax 0x3ffff
and eax [ edi + 0x40 ]
mov [ edi + 0x58 ] eax
push 0x46
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
xor esi esi
push 0x44
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
xor eax eax
xor edx edx
mov ecx edi
push eax
push eax
call sub_474b0b
add esp 0x8
push esi
push 0x8f
push [ edi + 0x1094 ]
call sub_4319e9
add esp 0xc
mov [ edi + esi * 2 + 0xe6c ] ax
inc esi
cmp esi 0x100
jne r-xdata
push 0x4a
push [ edi + 0x1094 ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x15c ] eax
push eax
push [ edi + 0x1088 ]
call sub_489dfa
add esp 0x8
push 0x81
push [ edi + 0x1094 ]
call sub_431a8c
add esp 0x8
test eax eax
jne r-xdata
mov eax 0xd800
mov [ edi + 0x174 ] eax
mov [ edi + 0x170 ] eax
xor eax eax
mov [ edi + 0x194 ] eax
mov [ edi + 0xd0 ] eax
mov [ edi + 0xdc ] eax
mov ecx edi
call sub_474e5f
mov ecx edi
call sub_474eb4
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
jmp sub_474395
mov ecx edi
call sub_474d89
sub_474b0b
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov edi [ esp + 0x1c ]
test edx edx
mov esi ecx
cmove edi edx
cmp [ esi + 0x1a4 ] edx
je r-xdata
test edi edi
je r-xdata
mov [ esi + 0x1a4 ] edx
mov ebx [ esp + 0x20 ]
mov ecx esi
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
call sub_475f77
inc eax
or ebx edi
mov [ esi + 0x1a8 ] eax
mov ecx [ esi + 0x70 ]
mov [ esp + 0x4 ] ebx
je r-xdata
add esp 0x8
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov edx [ esi + 0x178 ]
mov eax [ esi + 0x6c ]
mov [ esi + 0x70 ] edx
mov [ esi + 0x178 ] ecx
mov ecx [ esi + 0x17c ]
mov [ esi + 0x6c ] ecx
mov [ esi + 0x178 ] ecx
mov eax [ esi + 0x6c ]
jmp r-xdata
xor eax eax
xor edx edx
mov ecx esi
inc eax
push eax
push eax
call sub_47b6c6
add esp 0x10
jmp r-xdata
mov ecx [ esi + 0x19c ]
mov [ esi + 0x7c ] ecx
mov [ esi + 0x19c ] eax
mov eax [ esi + 0x1a0 ]
mov ecx [ esi + 0x80 ]
mov edx [ esi + 0x84 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x1a0 ] ecx
movups xmm0 [ esi + 0x180 ]
mov [ esi + 0x180 ] edx
mov eax [ esi + 0x88 ]
mov [ esi + 0x184 ] eax
mov eax [ esi + 0x8c ]
mov [ esp ] eax
mov ecx [ esi + 0x90 ]
movups [ esi + 0x84 ] xmm0
mov ebx [ esi + 0x190 ]
mov edx [ esi + 0x94 ]
mov [ esi + 0x94 ] ebx
mov ebx [ esi + 0x198 ]
mov ebp [ esi + 0xdc ]
mov [ esi + 0xdc ] ebx
mov eax [ esi + 0x194 ]
mov ebx [ esi + 0xd0 ]
mov [ esi + 0xd0 ] eax
mov eax [ esp ]
mov [ esi + 0x19c ] eax
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x84 ]
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x180 ] ecx
mov eax [ esi + 0x88 ]
mov [ esi + 0x184 ] eax
mov eax [ esi + 0x8c ]
mov ecx [ esi + 0x90 ]
mov edx [ esi + 0x94 ]
mov ebp [ esi + 0xdc ]
mov ebx [ esi + 0xd0 ]
jmp r-xdata
mov [ esi + 0x17c ] eax
test edi edi
mov eax [ esi + 0x7c ]
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ esi + 0x108 ]
mov ebx [ esi + 0x10c ]
mov [ esi + 0x78 ] ebx
mov [ esi + 0x74 ] edx
mov [ esi + 0x10c ] ecx
mov [ esi + 0x108 ] eax
mov eax [ esi + 0x98 ]
mov edx [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x9c ]
mov [ esp ] eax
mov eax [ esi + 0x110 ]
mov [ esi + 0x44 ] eax
movups xmm0 [ esi + 0x114 ]
mov ebx [ esi + 0xa0 ]
mov ebp [ esi + 0xa4 ]
movups [ esi + 0x98 ] xmm0
mov ecx [ esi + 0x124 ]
mov eax [ esi + 0xd4 ]
mov [ esi + 0xd4 ] ecx
mov ecx edx
mov [ esi + 0x108 ] eax
mov [ esi + 0x10c ] ecx
mov eax [ esi + 0x98 ]
mov ecx [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x9c ]
mov [ esp ] eax
mov ebx [ esi + 0xa0 ]
mov ebp [ esi + 0xa4 ]
mov eax [ esi + 0xd4 ]
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
mov [ esi + 0x188 ] eax
mov [ esi + 0x18c ] ecx
mov [ esi + 0x190 ] edx
mov [ esi + 0x198 ] ebp
mov [ esi + 0x194 ] ebx
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x78 ]
je r-xdata
mov edx [ esp + 0x4 ]
mov [ esi + 0x114 ] edx
mov edx [ esp ]
mov [ esi + 0x118 ] edx
mov [ esi + 0x110 ] ecx
mov [ esi + 0x11c ] ebx
mov [ esi + 0x120 ] ebp
mov [ esi + 0x124 ] eax
sub_474d89
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0xc ] eax
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov ecx esi
call sub_47c887
lea ebx [ esi + 0xf8 ]
push ebx
call sub_43ff78
add esp 0x4
mov edi eax
test edi edi
jle r-xdata
cmp [ esi + 0xf0 ] 0x0
je r-xdata
push [ esi + 0x104 ]
call sub_492e07
add esp 0x4
xor eax eax
mov [ esi + 0x104 ] eax
mov [ esi + 0xf0 ] eax
mov [ esi + 0xec ] eax
xor ebp ebp
inc ebp
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
push edi
push ebx
call sub_44000a
add esp 0x8
push ebp
lea eax [ esp + 0x7 ]
push eax
push [ esi + 0x104 ]
call sub_492dd2
add esp 0xc
push ebp
push ebx
call sub_44000a
add esp 0x8
push ebx
call sub_43ff78
add esp 0x4
mov edi eax
test edi edi
jg r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
push ebx
call sub_44008c
add esp 0xc
mov eax [ esp + 0x8 ]
mov al [ eax ]
mov [ esp + 0x3 ] al
or al 0x80
cmp al 0x9b
je r-xdata
jmp r-xdata
sub_474e5f
push ebx
push edi
push esi
mov esi ecx
cmp [ esi + 0xc4 ] 0x0
je r-xdata
mov [ esi + 0xc0 ] 0x1
add esi 0x10a4
xor ebx ebx
mov edi esi
xor ebx ebx
lea edi [ esi + 0x10a4 ]
inc ebx
cmp [ esi + 0x10a4 ] 0x0
jne r-xdata
mov [ edi ] ebx
pop esi
pop edi
pop ebx
retn
push esi
push sub_47bf8d
push 0x1c2
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10ac ] eax
jmp r-xdata
sub_474eb4
push ebx
push edi
push esi
mov esi ecx
cmp [ esi + 0x1100 ] 0x0
je r-xdata
mov [ esi + 0xbc ] 0x1
add esi 0x10a8
xor ebx ebx
mov edi esi
cmp [ esi + 0x134 ] 0x0
je r-xdata
xor ebx ebx
lea edi [ esi + 0x10a8 ]
inc ebx
cmp [ esi + 0x10a8 ] 0x0
jne r-xdata
mov [ edi ] ebx
pop esi
pop edi
pop ebx
retn
call [ GetCaretBlinkTime@IAT ]
push esi
push sub_47bf8d
push eax
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10b0 ] eax
jmp r-xdata
sub_474f14
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
xor eax eax
mov [ esi + 0x10 ] eax
push eax
push [ esi + 0x4 ]
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
push eax
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x4 ]
cmp [ esi + 0x128 ] 0x0
jle r-xdata
xor eax eax
mov ecx esi
mov [ esi + 0x14 ] eax
mov [ esi + 0x1a8 ] eax
pop esi
pop edi
pop ebx
jmp sub_473441
xor edi edi
inc edi
cmp edi [ esi + 0x128 ]
jl r-xdata
mov ecx esi
mov edx eax
push ebx
call sub_47be4d
add esp 0x4
mov ecx esi
mov edx edi
push 0x1
push 0x615
call sub_474f94
add esp 0x8
mov ebx [ esi + 0x12c ]
cmp ebx [ eax + 0x4 ]
je r-xdata
sub_474f94
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov edi edx
mov esi ecx
test edi edi
mov [ esp + 0x18 ] edi
js r-xdata
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x8 ]
mov ebp edi
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x1118 ] 0x0
je r-xdata
push 0x3fa
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edi [ esi + 0x4 ]
push ebp
push ebx
call sub_47e33c
add esp 0x8
mov ecx ebx
mov ebx eax
cmp ecx edi
mov [ esp + 0x14 ] ecx
jne r-xdata
mov eax ebx
neg eax
cmp eax edi
jle r-xdata
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov ecx ebx
call sub_4758d7
mov ebx eax
mov ebp [ esi + 0x1a8 ]
mov ebx [ esi + 0xc ]
add ebp edi
mov eax [ esi + 0x4 ]
add ebx edi
push eax
mov edi eax
call sub_47dc82
add esp 0x4
mov ebp eax
add ebp ebx
mov ebx edi
jmp r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x1a8 ]
mov [ esp + 0xc ] eax
push [ esi + 0xc ]
call sub_47dc82
add esp 0x4
mov [ esp + 0x4 ] eax
mov eax [ esi + 0xc ]
mov [ esp + 0x8 ] eax
push [ esi + 0x8 ]
call sub_47dc82
add esp 0x4
mov [ esp ] eax
mov edi [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_47dc82
add esp 0x4
lea ecx [ esi + 0x12c ]
mov [ esp + 0x10 ] ecx
push ebp
push [ esp + 0x18 ]
push [ esp + 0x14 ]
push [ esp + 0x10 ]
push [ esp + 0x18 ]
push [ esp + 0x14 ]
push edi
push eax
push [ esi + 0x4 ]
push [ esi + 0x128 ]
push [ esi + 0x12c ]
push [ esp + 0x44 ]
push [ esp + 0x60 ]
push r--data
call sub_48cc18
add esp 0x38
push 0x420
push r--data
push r--data
call sub_4a509d
mov eax [ esp + 0x1c ]
add esp 0xc
lea eax [ esi + 0x12c ]
jmp r-xdata
mov ebx [ esi + 0x1a8 ]
mov eax ebx
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx esi
mov edx ebx
push eax
call sub_47be4d
add esp 0x4
mov eax [ eax ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_475103
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
xor eax eax
inc eax
push 0x1174
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi + 0x1088 ] edi
mov [ esi + 0x1090 ] ebp
push ebx
call sub_43191d
add esp 0x4
mov [ esi + 0x1094 ] eax
xor ebx ebx
lea eax [ esi + 0x60 ]
mov [ esi + 0x108c ] ebx
mov [ esi ] 0xffff
mov [ esi + 0xa44 ] 0x63
mov [ esi + 0xa40 ] 0x363f5b1b
mov [ esi + 0x10a4 ] ebx
mov [ esi + 0x10a8 ] ebx
mov [ esi + 0x1070 ] ebx
mov [ esi + 0x1074 ] ebx
push eax
call sub_43ff45
add esp 0x4
lea eax [ esi + 0xf8 ]
push eax
call sub_43ff45
add esp 0x4
mov eax 0x1
mov [ esi + 0xf0 ] ebx
mov [ esi + 0xec ] ebx
mov [ esi + 0x104 ] ebx
mov [ esi + 0x148 ] ebx
mov [ esi + 0x150 ] ebx
mov [ esi + 0x154 ] ebx
mov [ esi + 0x168 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xbc ] ebx
mov [ esi + 0x134 ] eax
mov [ esi + 0x14c ] ebx
mov [ esi + 0xe44 ] ebx
mov [ esi + 0xe48 ] ebx
mov [ esi + 0x24 ] ebx
push esi
call sub_474395
add esp 0x4
xor edi edi
mov ecx esi
mov [ esi + 0x1a8 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x14 ] ebx
dec edi
xor edx edx
inc edx
mov [ esi + 0x20 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0xe40 ] ebx
mov [ esi + 0xe48 ] ebx
mov [ esi + 0xe58 ] ebx
mov [ esi + 0xe54 ] ebx
mov [ esi + 0xe60 ] ebx
mov [ esi + 0xe5c ] ebx
mov [ esi + 0x12c ] edi
mov [ esi + 0x128 ] edi
call sub_4740d3
mov [ esi + 0x2c ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x106c ] edi
mov [ esi + 0x107c ] ebx
mov [ esi + 0x1080 ] ebx
mov [ esi + 0x1098 ] ebx
mov [ esi + 0x109c ] ebx
mov [ esi + 0x10b8 ] ebx
mov [ esi + 0x10b4 ] ebx
mov [ esi + 0x10c0 ] ebx
mov [ esi + 0x10bc ] ebx
mov [ esi + 0x10c8 ] ebx
mov [ esi + 0x10c4 ] ebx
mov [ esi + 0x10d0 ] ebx
mov [ esi + 0x10cc ] ebx
mov [ esi + 0x48 ] 0xd820
mov [ esi + 0x4c ] 0x20500
mov [ esi + 0x50 ] ebx
mov [ esi + 0x5c ] ebx
mov eax esi
movsd xmm0 [ esi + 0x48 ]
movsd [ esi + 0x54 ] xmm0
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4752f4
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov edi [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x3c ]
mov ebp [ esp + 0x38 ]
mov esi [ edi + 0x128 ]
mov ecx [ edi + 0x1a4 ]
cmp esi edx
mov [ esp + 0x8 ] esi
jne r-xdata
xor ebx ebx
mov [ esp + 0x18 ] ecx
mov ecx edi
inc ebx
test edx edx
cmovle edx ebx
test ebp ebp
cmovg ebx ebp
xor esi esi
mov ebp edx
xor edx edx
mov [ esp ] ebx
mov [ edi + 0xe48 ] esi
mov [ edi + 0xe58 ] esi
mov [ edi + 0xe54 ] esi
mov [ edi + 0xe60 ] esi
mov [ edi + 0xe5c ] esi
push esi
push esi
call sub_474b0b
add esp 0x8
lea eax [ ebp - 0x1 ]
mov [ edi + 0x7c ] esi
mov [ edi + 0x19c ] esi
mov [ esp + 0x4 ] ebp
mov [ edi + 0x80 ] eax
mov [ esp + 0x14 ] eax
mov [ edi + 0x1a0 ] eax
xor eax eax
dec eax
cmp [ edi + 0x128 ] eax
je r-xdata
cmp [ edi + 0x12c ] ebp
jne r-xdata
push esi
call sub_47dc24
add esp 0x4
lea ecx [ edi + 0x4 ]
mov [ esp + 0x10 ] ecx
mov [ edi + 0x4 ] eax
push esi
call sub_47dc24
add esp 0x4
lea ecx [ edi + 0x8 ]
mov [ esp + 0xc ] ecx
mov [ edi + 0x8 ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x128 ] esi
lea eax [ edi + 0x4 ]
lea ecx [ edi + 0x8 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] ecx
jmp r-xdata
cmp [ edi + 0x130 ] eax
je r-xdata
mov eax [ edi + 0x128 ]
jmp r-xdata
push 0x6e0
push r--data
push r--data
call sub_4a509d
add esp 0xc
push [ edi + 0x4 ]
call sub_47dc82
add esp 0x4
mov esi [ edi + 0x128 ]
mov ebp eax
push [ edi + 0x8 ]
call sub_47dc82
add esp 0x4
cmp esi eax
je r-xdata
add esp 0x1c
mov esi [ esp + 0x4 ]
cmp eax esi
jl r-xdata
mov eax [ edi + 0x14 ]
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ esp ]
mov ecx edi
push 0x0
call sub_4759d9
add esp 0x4
mov esi eax
push [ edi + 0x8 ]
call sub_47dc82
add esp 0x4
push eax
push esi
push [ edi + 0x8 ]
call sub_47e319
add esp 0xc
cmp ebp eax
jge r-xdata
cmp eax esi
jg r-xdata
dec ebp
push ebp
push [ edi + 0x4 ]
call sub_47e541
add esp 0x8
mov edi eax
mov ecx edi
call sub_4758d7
mov esi eax
push edi
mov edi [ esp + 0x34 ]
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ esi + 0xc ] eax
dec [ edi + 0x14 ]
push eax
push esi
push [ edi + 0x8 ]
call sub_47e319
add esp 0xc
inc [ edi + 0x6c ]
inc [ edi + 0x74 ]
inc [ edi + 0x17c ]
inc [ edi + 0x108 ]
jmp r-xdata
push 0x6e5
push r--data
push r--data
call sub_4a509d
add esp 0xc
dec eax
mov ecx [ edi + 0x8 ]
cmp [ edi + 0x6c ] eax
jge r-xdata
cmp eax esi
je r-xdata
mov eax [ edi + 0x128 ]
inc eax
mov [ edi + 0x128 ] eax
push 0x0
push ecx
call sub_47e541
add esp 0x8
mov esi eax
mov ecx esi
call sub_475a63
push ebp
inc ebp
push eax
push [ edi + 0x4 ]
call sub_47e319
add esp 0xc
mov ecx esi
mov esi [ esp + 0x4 ]
call sub_4752d7
inc [ edi + 0x14 ]
dec [ edi + 0x6c ]
dec [ edi + 0x74 ]
dec [ edi + 0x17c ]
dec [ edi + 0x108 ]
push eax
push ecx
call sub_47e541
add esp 0x8
mov ecx eax
call sub_4752d7
jmp r-xdata
mov eax [ esp + 0xc ]
push [ eax ]
call sub_47dc82
add esp 0x4
cmp eax esi
je r-xdata
push 0x70a
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi + 0x128 ]
dec eax
mov [ edi + 0x128 ] eax
cmp ebp [ esp + 0x3c ]
mov esi [ esp + 0x10 ]
jle r-xdata
push 0x70b
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp ebp [ edi + 0x14 ]
jge r-xdata
push 0x0
push [ esi ]
call sub_47e541
add esp 0x8
push eax
call sub_43f9d4
mov eax [ esp + 0x40 ]
add esp 0x4
dec ebp
cmp ebp eax
jg r-xdata
push [ esi ]
call sub_47dc82
add esp 0x4
cmp eax [ esp + 0x3c ]
jle r-xdata
mov [ edi + 0x14 ] ebp
mov ebp eax
push [ edi + 0x4 ]
call sub_47dc82
add esp 0x4
cmp eax [ edi + 0x14 ]
jge r-xdata
push 0x715
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor esi esi
mov [ edi + 0x10 ] esi
push 0x4
mov edi [ esp + 0x8 ]
push edi
call sub_43f807
add esp 0x8
mov ebp eax
test edi edi
jle r-xdata
push 0x716
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edi [ esp + 0x30 ]
mov ebx [ esp + 0x8 ]
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
xor edi edi
mov ecx [ esp + 0x30 ]
test ebx ebx
jle r-xdata
inc edi
cmp edi [ esp + 0x4 ]
jl r-xdata
mov eax [ eax + 0x14 ]
cmp [ esp + 0x38 ] 0x2
mov [ eax + 0x4 ] 0x3ffff
jl r-xdata
mov eax [ ecx + 0xc ]
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x8 ]
mov esi ecx
test eax eax
je r-xdata
mov edx [ esp ]
mov edi ecx
push ebx
call sub_4759d9
add esp 0x4
push esi
push eax
push [ esp + 0x10 ]
call sub_47e319
mov edx [ esp + 0x10 ]
mov ecx edi
add esp 0xc
inc esi
cmp esi edx
jl r-xdata
mov ecx [ eax ]
call sub_4752d7
mov eax [ esp + 0x30 ]
cmp ebx 0x1
mov ecx eax
je r-xdata
mov ebx [ esp ]
mov ecx [ esp + 0x30 ]
mov edx ebx
push esi
call sub_4759d9
add esp 0x4
test ebx ebx
mov [ ebp + edi * 4 ] eax
jle r-xdata
xor ecx ecx
mov eax 0x10
inc ecx
mov [ esi + 0xc ] ebp
mov ebp esi
xor esi esi
mov [ ebp + 0x1a8 ] esi
push 0x1
mov ebx [ esp + 0x4 ]
push ebx
push [ ebp + 0xe40 ]
call sub_43f8db
add esp 0xc
mov [ ebp + 0xe40 ] eax
mov ecx [ ebp + 0x12c ]
test ecx ecx
cmovs ecx esi
cmp ecx ebx
jl r-xdata
push 0x0
push eax
jmp r-xdata
mov eax [ ecx + 0x18 ]
jmp r-xdata
xor esi esi
inc esi
mov edx [ ebp + edi * 4 ]
inc ecx
mov edx [ edx + 0x14 ]
mov [ edx + eax ] 0x3ffff
add eax 0xc
cmp ecx [ esp ]
jl r-xdata
test cl 0x7
sete [ eax + ecx ]
inc ecx
cmp ecx [ esp ]
jl r-xdata
jmp r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
xor esi esi
dec esi
mov edi ecx
push eax
call sub_43f9d4
add esp 0x4
mov [ edi + 0x18 ] ebp
mov [ edi + 0x20 ] esi
mov [ edi + 0x1c ] esi
xor esi esi
push esi
call sub_47dc24
add esp 0x4
mov edx [ esp + 0x4 ]
mov ecx edi
mov ebx 0x1
mov [ esp + 0x8 ] eax
test edx edx
jle r-xdata
mov eax [ ecx + 0x18 ]
mov edi ecx
mov ecx [ eax + esi * 4 ]
call sub_4752d7
inc esi
mov ecx edi
cmp ebx esi
jne r-xdata
mov eax [ ebp + 0xe40 ]
mov eax [ ebp + 0x74 ]
mov edx [ esp + 0x18 ]
test eax eax
cmovns esi eax
js r-xdata
mov ecx eax
call sub_4752d7
push 0x0
push [ esi + 0xc ]
push [ esi + 0xc ]
call sub_47dc40
add esp 0x4
cmp esi [ esp + 0x4 ]
cmovge esi edi
mov [ ebp + 0x74 ] esi
cmp esi [ esp + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x108 ]
mov esi [ esp + 0x4 ]
xor eax eax
test ecx ecx
cmovns eax ecx
js r-xdata
mov eax [ esp ]
dec eax
mov [ ebp + 0x78 ] eax
mov eax [ esp ]
cmp [ ebp + 0x78 ] eax
jl r-xdata
cmp eax esi
cmovge eax edi
mov [ ebp + 0x108 ] eax
cmp eax esi
jl r-xdata
mov ecx [ ebp + 0x6c ]
xor eax eax
test ecx ecx
cmovns eax ecx
js r-xdata
mov eax [ esp ]
dec eax
mov [ ebp + 0x10c ] eax
mov eax [ esp ]
cmp [ ebp + 0x10c ] eax
jl r-xdata
cmp eax esi
cmovge eax edi
mov [ ebp + 0x6c ] eax
cmp eax esi
jl r-xdata
mov ecx [ ebp + 0x17c ]
xor eax eax
test ecx ecx
cmovns eax ecx
js r-xdata
mov eax [ esp ]
dec eax
mov [ ebp + 0x70 ] eax
mov eax [ esp ]
cmp [ ebp + 0x70 ] eax
jl r-xdata
cmp eax esi
cmovl edi eax
mov [ ebp + 0x17c ] edi
cmp eax esi
jl r-xdata
xor eax eax
mov [ ebp + 0x17c ] eax
mov [ ebp + 0x178 ] eax
mov [ ebp + 0x188 ] eax
mov [ ebp + 0x8c ] eax
mov [ ebp + 0x128 ] esi
mov ecx [ esp ]
mov [ ebp + 0x12c ] ecx
mov ecx [ esp + 0x3c ]
mov [ ebp + 0x130 ] ecx
mov ecx ebp
push eax
push eax
call sub_474b0b
add esp 0x8
mov ecx ebp
call sub_473441
push ebp
call sub_4733cc
add esp 0x4
mov eax [ ebp + 0x107c ]
test eax eax
je r-xdata
mov eax [ esp ]
dec eax
mov [ ebp + 0x178 ] eax
mov eax [ esp ]
cmp [ ebp + 0x178 ] eax
jl r-xdata
push [ ebp + 0x128 ]
push [ ebp + 0x12c ]
push [ ebp + 0x1080 ]
call eax
add esp 0x28
jmp r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4758d7
push ebx
push edi
push esi
sub esp 0x10
mov eax ecx
mov ecx [ rw-data ]
xor edx edx
xor edi edi
mov [ esp + 0xc ] ecx
xor ecx ecx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
movzx ebx [ eax + edx ]
inc edx
mov esi ebx
and esi 0x7f
shl esi cl
add ecx 0x7
or edi esi
test bl bl
js r-xdata
xor ebx ebx
mov [ esp + 0x4 ] edx
inc ebx
push 0x18
push ebx
call sub_43f807
add esp 0x8
mov esi eax
push 0xc
push edi
call sub_43f807
add esp 0x8
xor ecx ecx
test edi edi
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ecx
jle r-xdata
mov [ esi ] 0x0
mov [ eax + 0x8 ] 0x0
cmp [ esi + 0x4 ] 0x2
jl r-xdata
mov edx [ esp + 0x4 ]
mov eax [ esp ]
lea edi [ edx + 0x1 ]
mov [ esp + 0x4 ] edi
movzx eax [ eax + edx ]
mov edx eax
and edx 0x7f
shl edx cl
add ecx 0x7
or edx [ esi ]
test al al
mov [ esi ] dx
js r-xdata
mov edi esp
mov edx esi
mov ecx edi
push sub_47c176
call sub_47c03d
add esp 0x4
mov ecx edi
mov edx esi
push sub_47c239
call sub_47c03d
add esp 0x4
mov ecx edi
mov edx esi
push sub_47c2d5
call sub_47c03d
add esp 0x4
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
retn
mov eax 0x14
mov edx [ esi + 0x14 ]
inc ebx
mov [ edx + eax ] 0x0
add eax 0xc
cmp ebx [ esi + 0x4 ]
jl r-xdata
sub_4759d9
push ebp
push ebx
push edi
push esi
push eax
mov edi ecx
mov esi edx
push 0x18
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
push 0xc
push esi
call sub_43f807
add esp 0x8
test esi esi
mov [ ebx + 0x14 ] eax
mov [ esp ] esi
jle r-xdata
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x4 ] eax
xor eax eax
mov [ ebx ] 0x0
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov eax ebx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp ]
lea edx [ edi + 0x48 ]
add edi 0x54
xor esi esi
lea ebp [ ecx - 0x1 ]
jmp r-xdata
add eax esi
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
movsd xmm0 [ edx ]
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
movsd xmm0 [ edi ]
jmp r-xdata
mov eax [ ebx + 0x14 ]
add esi 0xc
dec ebp
test ebp ebp
movsd [ eax ] xmm0
jne r-xdata
sub_475a63
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff8
sub esp 0x20
mov eax [ rw-data ]
xor edi edi
mov [ esp + 0x18 ] eax
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp edx 0x80
mov bl dl
jl r-xdata
lea eax [ edi + edi * 2 ]
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
add ecx 0x200
mov [ esp + 0x10 ] ecx
push 0x1
push ecx
push [ esp + 0x10 ]
call sub_43f8db
add esp 0xc
mov [ esp + 0x8 ] eax
mov edi [ esp + 0xc ]
xor eax eax
xor edi edi
mov esi [ esp + 0xc ]
cmp esi [ esp + 0x10 ]
jge r-xdata
mov edx eax
lea eax [ edi + edi * 2 ]
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
add ecx 0x200
mov [ esp + 0x10 ] ecx
push 0x1
push ecx
push [ esp + 0x10 ]
mov esi edx
call sub_43f8db
mov edx esi
add esp 0xc
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
jmp r-xdata
lea eax [ esi + esi * 2 ]
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
add ecx 0x200
mov [ esp + 0x10 ] ecx
push 0x1
push ecx
push [ esp + 0x10 ]
call sub_43f8db
add esp 0xc
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
jmp r-xdata
lea eax [ esi + esi * 2 ]
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
add ecx 0x200
mov [ esp + 0x10 ] ecx
push 0x1
push ecx
push [ esp + 0x10 ]
mov edi edx
call sub_43f8db
mov edx edi
add esp 0xc
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
jmp r-xdata
or bl 0x80
cmp edi eax
jge r-xdata
cmp edi eax
jge r-xdata
lea ecx [ edi + 0x1 ]
mov [ esp + 0xc ] ecx
mov [ eax + edi ] bl
mov ebx edx
mov edi [ esp + 0xc ]
mov eax [ esp + 0x10 ]
shr ebx 0x7
cmp edx 0x3fff
mov edx ebx
ja r-xdata
lea ecx [ esi + 0x1 ]
lea edi [ esp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov [ eax + esi ] bl
mov ecx edi
mov esi [ esp + 0x4 ]
mov edx esi
push sub_47c6cd
call sub_47c3a9
add esp 0x4
mov ecx edi
mov edx esi
push sub_47c76f
call sub_47c3a9
add esp 0x4
mov ecx edi
mov edx esi
push sub_47c7fa
call sub_47c3a9
add esp 0x4
xor eax eax
inc eax
push eax
push [ edi + 0x4 ]
push [ edi ]
call sub_43f8db
add esp 0xc
mov ecx [ esp + 0x18 ]
mov esi eax
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0xc ]
or bl 0x80
cmp esi [ esp + 0x10 ]
jge r-xdata
lea ecx [ esi + 0x1 ]
mov [ esp + 0xc ] ecx
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x7
cmp edx 0x3fff
mov edx ebx
ja r-xdata
mov eax [ esp + 0x8 ]
jmp r-xdata
mov edx [ esp + 0x4 ]
lea ecx [ edi + 0x1 ]
mov [ esp + 0xc ] ecx
mov [ eax + edi ] bl
movzx eax [ edx ]
cmp eax 0x80
mov bl al
jb r-xdata
sub_475c45
push esi
mov eax [ esp + 0xc ]
mov esi [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
test eax eax
mov [ esi + 0x107c ] eax
mov [ esi + 0x1080 ] ecx
je r-xdata
pop esi
retn
mov edx [ esi + 0x12c ]
test edx edx
jle r-xdata
mov esi [ esi + 0x128 ]
test esi esi
jle r-xdata
push esi
push edx
push ecx
call eax
add esp 0xc
sub_475c80
push edi
push esi
mov esi [ esp + 0xc ]
mov edx [ esi + 0x128 ]
test edx edx
jle r-xdata
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov ecx [ esi + 0x12c ]
xor eax eax
pop esi
pop edi
retn
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
inc eax
cmp eax edx
jl r-xdata
xor edx edx
mov edi 0x4
test ecx ecx
jle r-xdata
mov ecx [ esi + 0x18 ]
inc edx
mov ecx [ ecx + eax * 4 ]
mov ecx [ ecx + 0x14 ]
or [ ecx + edi ] 0x3ffff
add edi 0xc
mov ecx [ esi + 0x12c ]
cmp edx ecx
jl r-xdata
mov edx [ esi + 0x128 ]
sub_475cf8
push ebp
push ebx
push edi
push esi
sub esp 0x28
mov edx [ esp + 0x44 ]
mov esi [ esp + 0x3c ]
mov eax [ esp + 0x48 ]
xor ecx ecx
mov edi [ esp + 0x50 ]
mov ebx [ esp + 0x4c ]
test edx edx
cmovs edx ecx
test eax eax
mov [ esp ] edx
cmovns ecx eax
mov edx [ esi + 0x12c ]
mov eax [ esi + 0x128 ]
cmp edx ebx
lea edx [ edx - 0x1 ]
cmovg edx ebx
lea ebx [ eax - 0x1 ]
cmp eax edi
cmovg ebx edi
mov edi [ esp + 0x54 ]
cmp ecx ebx
mov [ esp + 0x18 ] edi
mov [ esp + 0x24 ] ebx
mov edi [ esp + 0x40 ]
mov [ esp + 0x14 ] edi
jg r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp ecx eax
jge r-xdata
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov edx [ esp + 0x14 ]
mov ecx esi
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
jmp sub_473468
mov ebx [ esp ]
mov edi edx
shr edi 0x1f
add edi edx
sar edi 0x1
mov eax ebx
lea ebp [ edi + 0x1 ]
shr eax 0x1
mov [ esp + 0x1c ] ebp
lea ebp [ eax - 0x1 ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x20 ] eax
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + 0x4 ]
mov [ esp + 0xc ] eax
lea eax [ ebx - 0x1 ]
mov [ esp + 0x8 ] eax
lea eax [ ebx + ebx * 2 ]
lea eax [ eax * 4 + 0x4 ]
mov [ esp + 0x4 ] eax
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
cmp [ esp ] edx
jg r-xdata
mov eax [ esp + 0x1c ]
cmp [ esp + 0x20 ] eax
jg r-xdata
cmp ecx [ esp + 0x24 ]
jge r-xdata
mov ebp [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ebp [ esp + 0xc ]
mov eax [ esp + 0x10 ]
inc ecx
cmp ecx [ esi + 0x128 ]
jl r-xdata
mov ebx [ esi + 0x18 ]
mov ebx [ ebx + ecx * 4 ]
mov ebx [ ebx + 0x14 ]
or [ ebx + ebp ] 0x3ffff
add ebp 0xc
cmp eax edx
jl r-xdata
mov ebx [ esi + 0x18 ]
mov ebx [ ebx + ecx * 4 ]
mov ebx [ ebx + 0x14 ]
or [ ebx + ebp ] 0x3ffff
add ebp 0xc
cmp eax edi
jle r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + ecx * 4 ]
test [ eax ] 0x3
je r-xdata
inc eax
cmp eax [ esi + 0x12c ]
jge r-xdata
inc eax
cmp eax [ esi + 0x12c ]
jge r-xdata
jmp r-xdata
sub_475e6c
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
mov ecx esi
call sub_475eb3
neg eax
test ebx ebx
js r-xdata
xor ecx ecx
mov ecx eax
jne r-xdata
add ecx edi
cmp ecx eax
cmovl ecx eax
mov eax ecx
sar eax 0x1f
and eax ecx
mov ecx esi
mov [ esi + 0x10 ] eax
call sub_473441
pop esi
pop edi
pop ebx
jmp sub_4733cc
mov ecx [ esi + 0x10 ]
jmp r-xdata
sub_475eb3
push esi
mov esi ecx
push [ esi + 0x4 ]
call sub_47dc82
add esp 0x4
cmp [ esi + 0x1118 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
add eax [ esi + 0x1a8 ]
sub_475ee1
push edi
push esi
mov esi [ esp + 0xc ]
mov ecx esi
call sub_475eb3
cmp [ esi + 0xe48 ] 0x3
jne r-xdata
pop esi
pop edi
retn
mov ecx [ esp + 0x10 ]
neg eax
lea edx [ esi + 0xe5c ]
lea edi [ esi + 0xe54 ]
test ecx ecx
cmove edx edi
mov ecx [ edx ]
mov edx [ esi + 0x128 ]
mov edi edx
shr edi 0x1f
add edi edx
sar edi 0x1
sub ecx edi
mov edx ecx
sar edx 0x1f
and edx ecx
cmp ecx eax
cmovl edx eax
push edx
push 0xffffffff
push esi
call sub_475e6c
add esp 0xc
sub_475f3c
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
mov ecx esi
call sub_475eb3
mov ebx eax
mov ecx esi
mov edx edi
neg ebx
call sub_475f77
xor edi edi
mov ecx esi
mov edx ebx
push 0x1
push edi
push [ esi + 0x12c ]
push eax
push edi
call sub_475ffb
add esp 0x14
pop esi
pop edi
pop ebx
retn
sub_475f77
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov esi ecx
mov [ esp + 0x8 ] edx
push edx
call sub_47dc82
add esp 0x4
lea ecx [ esi + 0x54 ]
mov [ esp + 0x4 ] esi
mov [ esp + 0x10 ] ecx
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp + 0xc ] eax
push eax
push [ esp + 0xc ]
call sub_47e33c
add esp 0x8
mov ecx [ eax + 0x4 ]
test ecx ecx
mov [ esp ] ecx
jle r-xdata
xor ebx ebx
mov ecx [ esp + 0x4 ]
mov esi [ eax + 0x14 ]
xor ebx ebx
mov ebp [ ecx + 0x54 ]
mov edi [ ecx + 0x58 ]
test eax eax
lea eax [ eax - 0x1 ]
jle r-xdata
cmp ebx [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
inc ebx
add esi 0xc
cmp ebx [ esp ]
jl r-xdata
mov edx [ esp + 0x10 ]
mov ecx esi
push edi
push ebp
call sub_47c90f
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
sub_475ffb
push ebp
push ebx
push edi
push esi
sub esp 0x70
mov eax [ rw-data ]
mov esi 0x1400
lea ebp [ esp + 0x28 ]
mov ebx edx
mov edi ecx
mov [ esp + 0x6c ] eax
xor eax eax
mov [ ebp ] esi
mov [ ebp + 0x4 ] eax
mov eax 0x2
push eax
push esi
call sub_43f807
add esp 0x8
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
mov eax 0x4
push eax
push esi
mov esi ebx
mov ebx [ esp + 0x8c ]
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x90 ]
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
mov eax ebx
mov [ esp + 0xc ] edi
test ecx ecx
cmove eax ecx
mov [ esp + 0x18 ] eax
jmp r-xdata
cmp esi [ esp + 0x88 ]
jl r-xdata
mov ecx edi
mov edx esi
xor eax eax
push eax
push 0x1564
call sub_474f94
add esp 0x8
mov [ esp + 0x24 ] esi
mov edx [ edi + 0x12c ]
mov [ esp ] eax
mov [ esp + 0x20 ] edx
movzx ecx [ eax ]
mov [ esp + 0x4 ] esi
test cl 0x10
jne r-xdata
je r-xdata
xor eax eax
test cl 0x20
je r-xdata
test edx edx
je r-xdata
cmp ebx [ esp + 0x8c ]
jge r-xdata
mov ebp edi
lea edi [ esp + 0x28 ]
xor edx edx
mov ecx edi
push 0x0
call sub_47c955
add esp 0x4
mov esi [ edi + 0x10 ]
mov ebx [ edi + 0x8 ]
push [ esp + 0x94 ]
push [ edi + 0x4 ]
push esi
push ebx
push [ ebp + 0x1088 ]
call sub_48c208
add esp 0x14
push ebx
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x6c ]
call sub_497c4a
add esp 0x70
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esp + 0x90 ] 0x0
je r-xdata
test edx edx
lea ecx [ esp + 0x20 ]
jne r-xdata
xor edx edx
mov ecx esi
jmp r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x24 ]
lea edi [ edx + edx * 2 ]
mov esi [ eax + 0x14 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x20 ]
mov [ esp + 0x8 ] ebx
lea esi [ esi + edi * 4 - 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x88 ]
mov edx eax
cmp esi edx
sete al
jmp r-xdata
mov eax [ esp + 0x8c ]
cmp [ esp + 0x20 ] eax
jle r-xdata
dec edx
mov [ ecx ] edx
jmp r-xdata
mov edx esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x20 ] 0x0
cmp ecx [ esp + 0x88 ]
jl r-xdata
cmp [ esi ] 0x0
jne r-xdata
and edi 0xfffffcff
cmp edi 0xd820
jne r-xdata
cmp ebx [ esp + 0x8c ]
setl cl
cmp esi edx
jl r-xdata
xor eax eax
cmp esi [ esp + 0x88 ]
setl al
mov eax [ esp + 0x8c ]
mov [ esp + 0x20 ] eax
xor eax eax
inc eax
xor eax eax
cmp ecx [ esp + 0x88 ]
jne r-xdata
mov edi [ esp + 0xc ]
mov esi [ esp + 0x4 ]
jmp r-xdata
mov edi [ esp + 0x4 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
cmp edi eax
sete cl
cmp ebx edx
setl bh
cmp edi eax
jl r-xdata
cmp esi [ esp + 0x24 ]
jl r-xdata
and al cl
je r-xdata
cmp edx [ esp + 0x8c ]
jge r-xdata
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x24 ]
mov ebx [ esp + 0x8 ]
add esi 0xfffffff4
dec edx
mov ecx edx
jne r-xdata
and bh cl
je r-xdata
mov eax [ esp ]
lea ecx [ ebx + ebx * 2 ]
mov edx ebx
mov eax [ eax + 0x14 ]
mov ebx [ eax + ecx * 4 ]
cmp ebx 0xdfff
jne r-xdata
jne r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov edi [ esi - 0x8 ]
cmp edi 0x20
je r-xdata
mov ecx edx
xor edx edx
mov edi [ esp + 0xc ]
mov esi [ esp + 0x4 ]
mov ebx [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov ebx edx
jmp r-xdata
cmp ebx [ esp + 0x20 ]
jl r-xdata
mov esi [ esp ]
cmp [ esi + 0xc ] 0x0
je r-xdata
mov esi 0xfffffffc
lea ecx [ edx + edx * 2 ]
mov [ esp + 0x14 ] ecx
mov esi [ eax + ecx * 4 + 0x4 ]
mov eax ebx
and eax 0xffffff00
cmp eax 0xd800
je r-xdata
mov eax [ esp + 0x88 ]
mov edx eax
cmp esi edx
sete al
inc ebx
mov esi [ esp + 0x4 ]
mov ebx [ esp + 0x18 ]
inc esi
push [ esi + 0x14 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
movzx edx [ esi + r--data ]
mov ecx ebp
push 0x0
call sub_47c955
add esp 0x4
add esi 0x2
jne r-xdata
mov eax [ edi + 0x1090 ]
movzx ecx bl
lea eax [ eax + ecx * 2 + 0x210 ]
jmp r-xdata
cmp eax 0xda00
je r-xdata
movzx ebx [ eax ]
mov eax [ edi + 0x1090 ]
movzx ecx bl
lea eax [ eax + ecx * 2 + 0x10 ]
jmp r-xdata
cmp eax 0xd900
jne r-xdata
mov eax [ edi + 0x1090 ]
movzx ecx bl
lea eax [ eax + ecx * 2 + 0x810 ]
cmp eax 0xf100
jne r-xdata
mov eax ebx
mov [ esp + 0x10 ] edx
and eax 0xffffff00
cmp eax 0xf000
je r-xdata
cmp [ edi + 0x1158 ] 0x0
je r-xdata
mov [ esp + ecx * 2 + 0x4c ] ax
mov ecx ebx
mov [ esp + edx * 2 + 0x4c ] 0x0
and ecx 0xfffffe00
cmp ecx 0xf000
jne r-xdata
lea eax [ ebx - 0x10000 ]
mov edx 0x2
mov ecx eax
and eax 0x3ff
shr ecx 0xa
or eax 0xdc00
or ecx 0xd800
mov [ esp + 0x4c ] cx
xor ecx ecx
inc ecx
lea eax [ ebx - 0x10001 ]
xor ecx ecx
mov edx 0x1
cmp eax 0xffffe
mov eax ebx
ja r-xdata
mov eax [ edi + 0x1090 ]
movzx ecx bl
lea eax [ eax + ecx * 2 + 0x410 ]
jmp r-xdata
mov eax [ edi + 0x1090 ]
movzx ecx bl
lea eax [ eax + ecx * 2 + 0x610 ]
movzx eax [ esp + 0x4c ]
mov ebx [ esp ]
test ax ax
je r-xdata
movzx eax bl
cmp eax 0x20
jb r-xdata
movzx ebx [ eax ]
mov eax [ ebx + 0x14 ]
mov ecx [ esp + 0x14 ]
mov ecx [ eax + ecx * 4 + 0x8 ]
test ecx ecx
jne r-xdata
lea edi [ esp + 0x4e ]
cmp eax 0x7f
je r-xdata
mov edx [ esp + 0x10 ]
mov edi [ esp + 0xc ]
add edx ecx
lea ecx [ edx + edx * 2 ]
mov ebx [ eax + ecx * 4 ]
mov edi [ esp + 0xc ]
mov esi [ esp + 0x4 ]
mov ebx [ esp + 0x8 ]
movzx edx ax
mov ecx ebp
push esi
call sub_47c955
add esp 0x4
movzx eax [ edi ]
add edi 0x2
test ax ax
jne r-xdata
mov eax [ edi + 0x1090 ]
mov eax [ eax + 0x8 ]
sub esp 0x8
movsx ecx bl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
call sub_496239
add esp 0x8
test eax eax
mov [ esp + 0x40 ] bl
je r-xdata
xor eax eax
inc eax
mov eax [ esp ]
mov ecx [ esp + 0x8 ]
mov eax [ eax + 0x14 ]
inc ecx
mov [ esp + 0x8 ] ecx
lea ecx [ ecx + ecx * 2 ]
mov al [ eax + ecx * 4 ]
mov [ esp + 0x41 ] al
mov eax 0x2
jmp r-xdata
mov eax edi
add eax eax
push eax
push ebx
lea eax [ esp + 0x54 ]
push eax
call sub_49a1f0
add esp 0xc
mov [ esp + edi * 2 + 0x4c ] 0x0
mov ecx [ edi + 0x1090 ]
push 0x4
lea ebx [ esp + 0x48 ]
push ebx
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
push [ ecx + 0x8 ]
call sub_496101
add esp 0x18
mov edi eax
test edi edi
jle r-xdata
sub_4764ce
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov esi [ esp + 0x28 ]
lea edi [ esp + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x8 ]
push eax
push edi
push [ esi + 0x1088 ]
call sub_48cbfc
add esp 0xc
cmp [ edi ] 0x0
mov edi esi
je r-xdata
xor eax eax
push eax
push eax
push [ edi + 0x1088 ]
call sub_48cbfc
add esp 0xc
push edi
push sub_476703
call sub_43023c
add esp 0x8
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
test eax eax
jle r-xdata
push edi
call sub_47401d
add esp 0x4
mov eax [ edi + 0x1070 ]
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
xor edi edi
mov esi eax
mov [ esi + 0x1074 ] edi
mov [ esi + 0x1078 ] edi
mov eax [ esp + 0x8 ]
add eax 0xc
push 0x2
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x1070 ] eax
cmp [ esi + 0x16c ] edi
mov edi esi
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x8 ]
test ecx ecx
jle r-xdata
mov ecx [ r--data ]
movsd xmm0 [ r--data ]
mov [ eax + 0x8 ] ecx
movsd [ eax ] xmm0
add [ edi + 0x1074 ] 0x6
cmp [ edi + 0x16c ] 0x0
je r-xdata
mov edx [ esp + 0xc ]
mov esi edx
mov eax esi
mov eax [ edi + 0x1074 ]
mov eax [ edi + 0x1070 ]
mov ecx [ edi + 0x1074 ]
mov edx [ r--data ]
movsd xmm0 [ r--data ]
mov [ eax + ecx * 2 + 0x8 ] edx
movsd [ eax + ecx * 2 ] xmm0
mov eax [ edi + 0x1074 ]
add eax 0x6
mov [ edi + 0x1074 ] eax
jmp r-xdata
mov ebx eax
sub ebx esi
test ebx ebx
mov [ esp ] ebx
jle r-xdata
lea ebp [ ebx - 0x4 ]
mov eax esi
mov ecx [ edi + 0x1084 ]
test ecx ecx
je r-xdata
cmp eax 0xff
jg r-xdata
lea esi [ edx + ecx * 2 - 0x4 ]
cmp eax esi
ja r-xdata
sar [ esp ] 0x1
xor ecx ecx
mov [ esp + 0x4 ] eax
add eax 0x2
cmp eax ebx
jb r-xdata
cmp [ eax ] 0xa000d
je r-xdata
mov eax [ edi + 0x1070 ]
test eax eax
je r-xdata
push 0x0
push eax
push [ edi + 0x1070 ]
push ecx
call sub_43ca71
add esp 0x10
lea esi [ edx + ecx * 2 ]
cmp eax esi
mov esi eax
jb r-xdata
cmp [ eax ] 0xa000d
jne r-xdata
movzx edx [ esi + ecx * 2 ]
mov eax esi
mov esi [ edi + 0x1074 ]
mov ebp [ edi + 0x1070 ]
mov ebx [ esp + 0x28 ]
inc ecx
lea edi [ esi + 0x1 ]
mov [ ebx + 0x1074 ] edi
mov [ ebp + esi * 2 ] dx
mov edi [ esp + 0x28 ]
mov esi eax
cmp ecx [ esp ]
jl r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
cmp eax ebp
ja r-xdata
xor eax eax
mov [ edi + 0x1070 ] eax
mov [ edi + 0x1074 ] eax
mov [ edi + 0x1078 ] eax
push eax
call sub_43f9d4
add esp 0x4
lea ebx [ edx + ecx * 2 ]
cmp esi ebx
jae r-xdata
mov edx [ edi + 0x1074 ]
mov ecx [ edi + 0x1070 ]
add eax 0x4
lea esi [ edx + 0x1 ]
mov [ edi + 0x1074 ] esi
mov [ ecx + edx * 2 ] 0xd
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
sub_476703
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x1074 ]
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
retn
mov ecx [ esi + 0x1078 ]
push [ esi + 0x1070 ]
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ esi + 0x1070 ] eax
mov [ esi + 0x1074 ] eax
lea edx [ ecx + ecx ]
xor edi edi
mov edx [ esi + 0x1084 ]
test edx edx
je r-xdata
mov ebx [ esi + 0x1070 ]
add ebx edx
movzx ebx [ ebx + edi * 2 ]
inc edi
cmp ebx 0xd
jne r-xdata
add ecx edi
cmp ecx eax
mov [ esi + 0x1078 ] ecx
jge r-xdata
mov eax [ esi + 0x1070 ]
lea eax [ eax + ecx * 2 ]
push 0x0
push edi
push eax
push edx
call sub_43ca71
add esp 0x10
mov eax [ esi + 0x1074 ]
mov ecx [ esi + 0x1078 ]
lea ebx [ ecx + edi ]
cmp ebx eax
jge r-xdata
cmp ecx eax
jge r-xdata
push esi
push sub_476703
call sub_43023c
add esp 0x8
jmp r-xdata
sub_4767a8
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff8
sub esp 0x48
mov eax [ rw-data ]
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ esp + 0x40 ] eax
cmp [ esi + 0x15c ] 0x0
je r-xdata
xor ebx ebx
xor ebx ebx
cmp [ esi + 0x1144 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] ebx
mov edi [ ebp + 0x18 ]
mov ebx [ esi + 0x128 ]
cmp edx ebx
jl r-xdata
cmp ecx 0x4
setne al
xor edx edx
or al bl
jne r-xdata
mov ecx [ ebp + 0x14 ]
test edx edx
jns r-xdata
cmp [ esi + 0x112c ] ebx
sete al
cmp [ ebp + 0x20 ] 0x0
sete bl
or bl al
jmp r-xdata
test edi edi
jns r-xdata
dec ebx
cmp ecx 0x4
setne al
or al [ esp + 0x10 ]
jne r-xdata
push 0xffffffff
push 0x0
push esi
call sub_475e6c
mov ecx [ ebp + 0x14 ]
xor edx edx
add esp 0xc
mov [ esp + 0x8 ] edx
test edx edx
jle r-xdata
mov edx ebx
push 0x1
push 0x0
push esi
call sub_475e6c
add esp 0xc
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
shl esi 0x4
mov edx eax
mov eax [ edx + 0x10cc ]
mov ebx edx
mov eax [ eax + esi + 0xc ]
mov edi [ eax + edi * 4 ]
jmp r-xdata
mov [ esp + 0x8 ] edx
xor edi edi
jmp r-xdata
mov edi [ esi + 0x12c ]
dec edx
dec edi
mov eax [ ebx + 0xe48 ]
lea edi [ eax - 0x1 ]
cmp edi 0x2
jb r-xdata
push [ esi + 0x14 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x14 ]
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x12c ]
mov ebx [ esp + 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp edi eax
lea esi [ eax - 0x1 ]
mov eax [ ebp + 0x8 ]
cmovl esi edi
mov edx [ eax + 0x10 ]
add edx ebx
mov [ esp + 0x18 ] edx
mov [ esp + 0xc ] edx
push 0x0
push 0x1763
call sub_474f94
add esp 0x8
movzx ecx [ eax ]
mov edi esi
mov [ esp + 0x14 ] eax
mov edx eax
shr edi 0x1f
add edi esi
sar edi 0x1
test cl 0x3
cmove edi esi
mov esi [ ebp + 0x8 ]
mov ecx esi
mov esi ebx
push ebx
call sub_476f0a
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp + 0x28 ]
mov edx ebx
mov ecx [ ebp + 0x10 ]
test esi esi
sete bl
xor esi esi
cmp [ edx + 0x115c ] esi
sete bh
xor bh bl
test eax eax
movzx esi bh
jne r-xdata
mov edx [ esp + 0x10 ]
xor dl 0x1
jne r-xdata
mov edx [ ebp + 0x14 ]
cmp ecx 0x4
mov ebx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0xe4c ] esi
cmp [ ebx + 0x1084 ] 0x0
mov esi ebx
je r-xdata
cmp ebx 0x4
jne r-xdata
cmp edx 0x1
jne r-xdata
mov ecx [ esp + 0x40 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
lea ebx [ ecx - 0x1 ]
cmp ebx 0x7
ja r-xdata
cmp ebx 0x4
jne r-xdata
mov esi edx
or esi 0x1
cmp esi 0x3
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ecx + 0xe58 ] eax
mov [ ecx + 0xe54 ] eax
mov [ ecx + 0xe60 ] eax
mov [ ecx + 0xe5c ] eax
mov [ ecx + 0xe48 ] 0x1
mov [ ecx + 0xe4c ] esi
mov esi ecx
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov [ esi + 0xe68 ] edx
mov [ esi + 0xe64 ] ecx
mov [ esi + 0xe50 ] eax
jmp r-xdata
mov edx 0x40
xor eax eax
jmp [ ebx * 4 + jump_table_418488 ]
cmp ebx 0x5
jne r-xdata
cmp edx 0x4
je r-xdata
mov eax 0x2
mov esi [ ebp + 0x8 ]
xor ecx ecx
cmp edx eax
mov edx 0x2
sete cl
sub edx ecx
mov [ esi + 0xe50 ] edx
mov [ esi + 0xe48 ] eax
movq xmm0 [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
pshufd xmm0 xmm0 0x44
mov [ esi + 0xe68 ] eax
mov [ esi + 0xe64 ] ecx
movdqu [ esi + 0xe54 ] xmm0
cmp [ esi + 0x12c ] eax
jne r-xdata
cmp [ esi + 0xe48 ] 0x2
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x1
je r-xdata
mov ecx ebx
or ecx 0x1
cmp ecx 0x5
jne r-xdata
cmp edx 0x5
je r-xdata
cmp edx 0x4
jne r-xdata
lea edx [ esi + 0xe60 ]
lea edx [ esi + 0xe5c ]
mov eax ecx
mov [ esi + 0xe60 ] 0x0
jmp r-xdata
push esi
call sub_4733cc
add esp 0x4
mov ecx esi
call sub_4775a6
cmp [ esi + 0x168 ] ecx
jne r-xdata
cmp edx 0x5
je r-xdata
mov esi [ ebp + 0x8 ]
cmp ebx 0x6
jne r-xdata
cmp edx 0x5
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ebx [ esp + 0xc ]
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ebx [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx esi
call sub_477504
inc eax
mov [ edx ] eax
jmp r-xdata
mov [ esi + 0x168 ] ecx
jmp r-xdata
xor ecx ecx
mov edx 0x3
cmp [ esi + 0x160 ] ecx
cmove eax edx
cmp edx 0x4
jne r-xdata
dec edx
cmp edx 0x2
ja r-xdata
mov esi [ ebp + 0x8 ]
xor ecx ecx
cmp eax 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x5
jne r-xdata
cmp [ esi + 0xe64 ] ebx
jne r-xdata
cmp eax 0x1
je r-xdata
cmp [ esi + 0x164 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x5
mov esi 0x6d
mov edi 0x4d
cmove edi esi
lea esi [ esp + 0x20 ]
push edi
push edx
push ecx
push eax
push r--data
push esi
mov esi [ ebp + 0x8 ]
call sub_432778
add esp 0x18
jmp r-xdata
cmp [ esi + 0x15c ] 0x1
je r-xdata
push [ esi + 0x1088 ]
call sub_48cb7b
add esp 0x4
jmp r-xdata
mov [ esi + 0xe48 ] ecx
jmp r-xdata
xor eax eax
cmp [ esi + 0xe4c ] 0x1
mov edx [ esi + 0xe54 ]
mov ecx esi
sete al
push 0x0
push eax
push [ esi + 0xe60 ]
push [ esi + 0xe5c ]
push [ esi + 0xe58 ]
call sub_475ffb
add esp 0x14
mov ecx 0x3
cmp edi 0x2
mov edi [ esp + 0x4 ]
jb r-xdata
cmp edx 0x4
je r-xdata
mov ecx [ esp + 0x4 ]
cmp [ esi + 0xe68 ] ecx
je r-xdata
cmp eax 0x3
jne r-xdata
cmp [ esp + 0x8 ] 0xde
jg r-xdata
lea esi [ esp + 0x20 ]
add eax 0x20
push edx
push ecx
push eax
push r--data
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
test eax eax
jle r-xdata
or eax 0x20
jmp r-xdata
mov [ esi + 0xe48 ] 0x2
lea eax [ esi + 0xe64 ]
cmp [ esi + 0xe4c ] 0x0
je r-xdata
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov [ esi + 0xe68 ] eax
mov [ esi + 0xe64 ] ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
jmp r-xdata
cmp [ esp + 0x4 ] 0xde
jg r-xdata
call sub_432778
add esp 0x14
lea ecx [ esp + 0x20 ]
push 0x0
push eax
push ecx
push [ esi + 0x1084 ]
call sub_43c15b
add esp 0x10
jmp r-xdata
mov ecx [ ebp + 0x24 ]
cmp [ ebp + 0x20 ] 0x0
lea edx [ eax + 0x4 ]
mov ebx [ ebp + 0x8 ]
cmove edx eax
test ecx ecx
mov ecx [ esp + 0x8 ]
lea eax [ edx + 0x10 ]
cmove eax edx
xor esi esi
cmp [ ebx + 0x160 ] esi
mov esi [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov ecx [ esp + 0x4 ]
lea ecx [ ecx + 0x1 ]
je r-xdata
cmp ebx [ eax ]
jl r-xdata
cmp [ esi + 0xe68 ] edi
lea edx [ esp + 0x18 ]
mov ecx [ esi + 0xe64 ]
mov edi [ ebp + 0x8 ]
mov esi edx
cmovl esi eax
mov esi [ esi + 0x4 ]
mov [ edi + 0xe58 ] esi
mov esi edx
mov edi [ ebp + 0x8 ]
cmovg esi eax
mov esi [ esi + 0x4 ]
inc esi
cmp ecx ebx
mov ecx edx
mov [ edi + 0xe60 ] esi
cmovl ecx eax
mov esi [ ebp + 0x8 ]
cmovg edx eax
mov ecx [ ecx ]
mov [ esi + 0xe54 ] ecx
mov eax [ edx ]
mov [ esi + 0xe5c ] eax
jmp r-xdata
cmp [ esi + 0xe4c ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
mov edi [ esp + 0x4 ]
add eax 0x20
lea ecx [ esp + 0x20 ]
add edx 0x21
add edi 0x21
push edx
push edi
push eax
push r--data
push ecx
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ esi + 0xe58 ] ecx
mov [ esi + 0xe54 ] eax
mov eax [ esi + 0xe64 ]
mov ecx [ esi + 0xe68 ]
jmp r-xdata
jne r-xdata
mov edi [ esi + 0x12c ]
mov ecx [ esi + 0xe54 ]
mov eax esi
mov edx ebx
mov [ esp + 0x10 ] edi
lea esi [ edi + 0x1 ]
sub edx ecx
mov edi [ esp + 0x4 ]
mov ebx [ eax + 0xe5c ]
imul edx esi
add edx edi
sub ebx ecx
mov ecx [ eax + 0xe58 ]
imul ebx esi
mov esi [ eax + 0xe60 ]
sub edx ecx
sub esi ecx
add esi ebx
mov ecx esi
shr ecx 0x1f
add ecx esi
sar ecx 0x1
cmp edx ecx
jge r-xdata
mov edi [ esp + 0x4 ]
mov ecx [ esi + 0xe58 ]
mov edx [ esi + 0xe60 ]
lea esi [ edx + ecx ]
lea eax [ edi + edi ]
dec edx
cmp eax esi
mov eax [ ebp + 0x8 ]
cmovge edx ecx
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0xe54 ]
mov [ ecx + 0xe68 ] edx
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + ebx ]
mov edx [ edx + 0xe5c ]
lea esi [ edx + eax ]
cmp ecx esi
mov esi [ ebp + 0x8 ]
cmovge edx eax
mov [ esi + 0xe64 ] edx
jmp r-xdata
mov [ esi + 0xe60 ] ecx
mov [ esi + 0xe5c ] eax
lea eax [ esi + 0xe60 ]
cmp [ esi + 0x12c ] ecx
jne r-xdata
mov eax [ esi + 0xe64 ]
mov ecx [ esi + 0xe68 ]
mov [ esi + 0xe58 ] ecx
mov [ esi + 0xe54 ] eax
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
cmp edi [ esi + 0xe68 ]
jge r-xdata
mov edx [ eax + 0xe54 ]
mov ecx [ eax + 0xe58 ]
mov esi eax
mov [ eax + 0xe68 ] ecx
mov [ eax + 0xe64 ] edx
mov ebx [ esp + 0xc ]
mov ecx [ eax + 0xe60 ]
mov esi [ eax + 0xe5c ]
lea edx [ eax + 0xe68 ]
test ecx ecx
mov [ eax + 0xe68 ] ecx
mov [ eax + 0xe64 ] esi
jne r-xdata
mov [ esi + 0xe48 ] 0x2
inc [ eax ]
mov [ eax ] 0x0
lea eax [ esi + 0xe5c ]
mov ebx [ esp + 0xc ]
mov esi [ ebp + 0x8 ]
dec ecx
mov [ edx ] ecx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov [ edx ] ecx
lea edx [ eax + 0xe64 ]
mov ecx esi
sub_476f0a
cmp [ ecx + 0x10f8 ] 0x0
je r-xdata
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov [ esp ] edx
mov ebx [ ecx + 0x12c ]
mov [ esp + 0x8 ] ecx
mov eax [ ecx + 0x10c8 ]
test eax eax
je r-xdata
xor eax eax
cmp [ ecx + 0x10e0 ] 0x0
je r-xdata
mov esi [ esp + 0x8 ]
cmp [ esi + 0x10c4 ] ebx
jge r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x8 ]
cmp [ edx + 0x10d0 ] ecx
jle r-xdata
retn
mov ebp [ esp ]
test ebx ebx
jle r-xdata
mov edi 0xc
mov [ esi + 0x10c4 ] ebx
push edi
push ebx
push [ esi + 0x10bc ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x10bc ] eax
push edi
push [ esi + 0x10c4 ]
push [ esi + 0x10c0 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x10c0 ] eax
mov ebx [ esi + 0x12c ]
mov ecx [ esp + 0x30 ]
shl ecx 0x4
mov [ esp + 0x4 ] ecx
mov esi [ eax + ecx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x10f8 ] 0x0
jne r-xdata
xor eax eax
xor ecx ecx
mov ecx [ esp + 0x4 ]
cmp [ eax + ecx ] ebx
jne r-xdata
cmp [ esi + 0x10e0 ] 0x0
jne r-xdata
push ebx
push [ esi + 0x10bc ]
call sub_43db27
add esp 0x8
cmp [ esi + 0x10f8 ] 0x0
je r-xdata
mov edi [ esi + 0x1090 ]
movzx edx dl
lea edx [ edi + edx * 2 + 0x210 ]
jmp r-xdata
cmp edi 0xda00
je r-xdata
test ebx ebx
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ esi + 0x10b8 ] ecx
jge r-xdata
push [ esi + 0x12c ]
push [ esi + 0x10c0 ]
push [ esi + 0x10bc ]
call sub_43d8b3
add esp 0xc
cmp [ esi + 0x10e0 ] 0x0
je r-xdata
movzx edx [ edx ]
mov edi [ esi + 0x1090 ]
movzx edx dl
lea edx [ edi + edx * 2 + 0x10 ]
jmp r-xdata
cmp edi 0xd900
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov eax [ eax + 0x10cc ]
lea eax [ eax + ecx + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
xor edi edi
mov ebp [ eax + 0x14 ]
lea eax [ esi + 0x10b4 ]
mov [ esp + 0xc ] eax
mov eax [ esi + 0x10b4 ]
lea eax [ esi + 0x10b4 ]
mov [ esi + 0x10b8 ] ecx
mov [ esp + 0xc ] eax
push 0xc
push ecx
push [ esi + 0x10b4 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x10b4 ] eax
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi + 0x12c ] 0x0
jle r-xdata
mov edi [ esi + 0x1090 ]
movzx edx dl
lea edx [ edi + edx * 2 + 0x810 ]
cmp edi 0xf100
jne r-xdata
mov edi edx
and edi 0xffffff00
cmp edi 0xf000
je r-xdata
cmp [ esi + 0x1158 ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax ]
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
inc edi
add ebp 0xc
add esi 0xc
cmp edi ebx
jl r-xdata
mov eax [ esp ]
mov edx [ eax + 0x8 ]
mov [ esp + 0x10 ] edx
mov esi [ eax + 0x14 ]
mov eax [ ecx + 0x10c8 ]
mov edx [ ecx + 0x10b4 ]
mov edi [ ecx + 0x10c0 ]
mov ebx [ ecx + 0x10d0 ]
test eax eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] esi
je r-xdata
xor eax eax
xor edx edx
mov [ esp + 0x4 ] 0x0
shl ecx 0x2
lea ecx [ ecx + ecx * 2 ]
push ecx
push [ ebp + 0x14 ]
push eax
call sub_49a1f0
add esp 0xc
mov ecx esi
mov ebp [ ecx + 0x12c ]
test ebp ebp
jle r-xdata
xor eax eax
xor ecx ecx
mov edx [ ebp + 0x14 ]
mov edx [ edx + eax ]
mov edi edx
and edi 0xffffff00
cmp edi 0xd800
je r-xdata
mov edi [ esi + 0x10bc ]
mov [ edi + eax + 0x4 ] edx
mov edi [ esi + 0x10bc ]
mov [ edi + eax ] edx
mov edx [ esi + 0x10bc ]
mov [ edx + eax + 0x8 ] cx
inc ecx
add eax 0xc
mov ebx [ esi + 0x12c ]
cmp ecx ebx
jl r-xdata
mov edi [ esi + 0x1090 ]
movzx edx dl
lea edx [ edi + edx * 2 + 0x410 ]
jmp r-xdata
mov edi [ esi + 0x1090 ]
movzx edx dl
lea edx [ edi + edx * 2 + 0x610 ]
mov ecx esi
mov edx ebp
push [ ebp + 0x4 ]
push [ ebp ]
call sub_47c90f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
mov esi [ esp + 0x8 ]
mov edx 0x10
inc ecx
mov [ esi + 0x10d0 ] ecx
push edx
push ecx
push eax
call sub_43f8db
add esp 0xc
mov [ esi + 0x10c8 ] eax
lea eax [ esi + 0x10cc ]
mov [ esp + 0x4 ] eax
mov eax 0x10
push eax
push [ esi + 0x10d0 ]
push [ esi + 0x10cc ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x10cc ] eax
cmp ebx [ esi + 0x10d0 ]
jge r-xdata
cmp ebx [ esp + 0x30 ]
jle r-xdata
mov esi [ ecx + 0x10c0 ]
mov edi [ esi + eax + 0x4 ]
cmp [ esi + eax ] edi
je r-xdata
mov esi [ ecx + 0x10c0 ]
movzx esi [ esi + eax + 0x8 ]
add ebx esi
add ebx [ esp + 0x4 ]
mov [ edi + eax + 0x8 ] ebx
mov edx [ esi + 0x10bc ]
mov edi [ esi + 0x10c0 ]
inc ecx
mov ebx [ edx + eax + 0x8 ]
mov [ edi + eax + 0x8 ] ebx
movsd xmm0 [ edx + eax ]
movsd [ edi + eax ] xmm0
add eax 0xc
cmp ecx [ esi + 0x12c ]
jl r-xdata
jmp r-xdata
movzx edx [ edx ]
mov eax [ esp + 0x8 ]
mov esi [ esp + 0x4 ]
mov esi [ esp + 0x8 ]
lea ecx [ ebx + 0x1 ]
shl ebx 0x4
xor edx edx
mov [ esp ] ecx
jmp r-xdata
mov eax [ esp + 0x8 ]
lea esi [ eax + 0x10cc ]
jmp r-xdata
mov ebp [ ecx + 0x12c ]
dec [ esp + 0x4 ]
inc edx
add eax 0xc
cmp edx ebp
jl r-xdata
mov esi [ esp + 0xc ]
mov esi [ esi ]
mov [ esi + eax ] edi
mov edx [ esp + 0x4 ]
add edi 0x8
mov [ eax + ebx + 0x4 ] edx
mov ecx 0xffffffff
mov eax [ esi + 0x10c8 ]
mov [ eax + ebx + 0x4 ] edx
mov eax [ esi + 0x10cc ]
mov [ eax + ebx ] ecx
mov eax [ esi + 0x10c8 ]
mov [ eax + ebx ] ecx
mov eax [ esi + 0x10cc ]
mov [ eax + ebx + 0x8 ] edx
mov eax [ esi + 0x10c8 ]
mov [ eax + ebx + 0x8 ] edx
mov eax [ esi + 0x10cc ]
mov [ eax + ebx + 0xc ] edx
mov eax [ esi + 0x10c8 ]
mov [ eax + ebx + 0xc ] edx
mov ecx [ esp ]
cmp ecx [ esi + 0x10d0 ]
jl r-xdata
mov ebx [ esp + 0x30 ]
mov eax [ eax + 0x10c8 ]
shl ebx 0x4
push [ eax + ebx + 0x4 ]
call sub_43f9d4
add esp 0x4
mov [ esp + 0x4 ] esi
mov eax [ esi ]
push [ eax + ebx + 0x4 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
push [ eax + ebx + 0x8 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
push [ eax + ebx + 0xc ]
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x10c8 ]
mov [ eax + ebx ] ebp
mov eax 0xc
push eax
push [ esp + 0x14 ]
call sub_43f807
add esp 0x8
mov ecx [ esi + 0x10c8 ]
mov [ ecx + ebx + 0x4 ] eax
mov esi [ esp + 0x4 ]
mov eax [ esi ]
mov [ eax + ebx ] ebp
mov eax 0xc
push eax
push [ esp + 0x14 ]
call sub_43f807
add esp 0x8
mov ecx [ esi ]
mov [ ecx + ebx + 0x4 ] eax
mov eax 0x4
push eax
push ebp
call sub_43f807
add esp 0x8
mov ecx [ esi ]
mov [ ecx + ebx + 0x8 ] eax
mov eax 0x4
push eax
push ebp
call sub_43f807
add esp 0x8
mov ecx [ esi ]
mov [ ecx + ebx + 0xc ] eax
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x10c8 ]
shl ecx 0x2
lea ecx [ ecx + ecx * 2 ]
mov [ esp ] ecx
push ecx
push [ esp + 0x18 ]
push [ eax + ebx + 0x4 ]
call sub_49a1f0
add esp 0xc
mov eax [ esi ]
push [ esp ]
push [ esp + 0x1c ]
push [ eax + ebx + 0x4 ]
call sub_49a1f0
add esp 0xc
mov eax [ esi ]
lea ecx [ ebp * 4 ]
xor esi esi
mov [ esp ] ecx
push ecx
push esi
push [ eax + ebx + 0x8 ]
call sub_49acf0
add esp 0xc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
push [ esp ]
push esi
mov [ esp + 0x8 ] ebx
push [ eax + ebx + 0xc ]
call sub_49acf0
add esp 0xc
test ebp ebp
jle r-xdata
mov ebp [ ecx + 0x10c0 ]
mov esi [ esp ]
mov ebx [ ecx + 0x10b4 ]
movzx ebp [ ebp + eax + 0x8 ]
mov edi [ esi + 0x14 ]
lea ebp [ ebp + ebp * 2 ]
mov esi [ edi + ebp * 4 + 0x8 ]
mov [ ebx + eax + 0x8 ] esi
movsd xmm0 [ edi + ebp * 4 ]
movsd [ ebx + eax ] xmm0
mov edi [ ecx + 0x10b4 ]
mov ebx [ edi + eax + 0x8 ]
test ebx ebx
je r-xdata
mov eax [ edx ]
mov ecx [ esp ]
add edi 0xc
mov eax [ eax + ecx + 0xc ]
mov [ eax + esi * 4 ] ebx
mov eax [ edx ]
mov eax [ eax + ecx + 0x8 ]
mov [ eax + ebx * 4 ] esi
inc esi
cmp ebp esi
jne r-xdata
push 0x12cb
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x10 ]
add esp 0xc
mov eax [ esp + 0x4 ]
inc ecx
add ebx 0x10
mov eax [ eax ]
mov [ esp ] ecx
movzx ebx [ edi ]
cmp ebp ebx
jg r-xdata
sub_477504
push ebx
push edi
push esi
mov esi ecx
cmp [ esi + 0xe4c ] 0x0
jne r-xdata
pop esi
pop edi
pop ebx
retn
mov edx [ esi + 0xe54 ]
mov ecx esi
push 0xffffffff
push [ esi + 0xe58 ]
call sub_47c9c3
add esp 0x8
mov [ esi + 0xe58 ] edx
mov [ esi + 0xe54 ] eax
lea edi [ esi + 0xe60 ]
lea ebx [ esi + 0xe5c ]
mov eax [ esi + 0xe60 ]
mov ecx edi
test eax eax
jne r-xdata
dec eax
mov [ ecx ] eax
mov ecx esi
mov edx [ esi + 0xe5c ]
push 0x1
push [ esi + 0xe60 ]
call sub_47c9c3
add esp 0x8
mov [ esi + 0xe60 ] edx
mov [ esi + 0xe5c ] eax
cmp [ esi + 0x12c ] edx
jne r-xdata
mov eax [ esi + 0x12c ]
mov ecx ebx
mov [ esi + 0xe60 ] eax
mov eax [ esi + 0xe5c ]
inc edx
mov [ edi ] edx
mov [ edi ] 0x0
mov edx eax
mov edi ebx
sub_4775a6
push ebp
push ebx
push edi
push esi
sub esp 0x1f4
mov eax [ rw-data ]
mov esi ecx
lea ecx [ esp + 0x58 ]
xor edi edi
lea edx [ esi + 0x60 ]
dec edi
mov [ esp + 0x1f0 ] eax
mov [ ecx ] 0x0
lea ecx [ esi + 0x54 ]
mov [ esp + 0x20 ] edx
lea edx [ esi + 0x28 ]
mov [ esp + 0x30 ] 0x0
mov [ esp + 0xc ] esi
mov [ esp + 0x10 ] ecx
lea ecx [ esi + 0xe54 ]
mov [ esp + 0x48 ] edx
lea edx [ esi + 0x1ac ]
mov [ esp + 0x4 ] ecx
lea ecx [ esi + 0xa40 ]
mov [ esp ] edx
lea edx [ esi + 0x48 ]
mov [ esp + 0x1c ] ecx
lea ecx [ esi + 0x1b0 ]
mov [ esp + 0x14 ] edx
lea edx [ esi + 0xf8 ]
mov [ esp + 0x28 ] ecx
lea ecx [ esi + 0x1b4 ]
mov [ esp + 0x2c ] edx
lea edx [ esi + 0x110c ]
mov [ esp + 0x44 ] ecx
lea ecx [ esi + 0x1110 ]
mov [ esp + 0x40 ] edx
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_4778dd
lea ecx [ eax - 0x30 ]
mov [ esi + 0xe44 ] 0x0
cmp ecx 0x9
ja r-xdata
cmp eax 0x3b
mov ecx 0x1
jne r-xdata
mov ecx [ esi + 0x22c ]
cmp ecx 0x20
jg r-xdata
mov ebx [ esi + 0x230 ]
cmp eax 0x3f
ja r-xdata
mov eax [ esi + 0x22c ]
cmp eax 0x1f
jg r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x2
jmp r-xdata
cmp [ esi + ecx * 4 + 0x1a8 ] 0x0
jne r-xdata
mov ecx ebx
shl ecx 0x8
add ecx eax
cmp ecx 0x168
jg r-xdata
cmove eax ecx
cmp ebx ecx
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
lea ecx [ eax + 0x1 ]
mov [ esi + 0x22c ] ecx
mov [ esi + eax * 4 + 0x1ac ] 0x0
jmp r-xdata
dec edi
mov edi [ esi + ecx * 4 + 0x1a8 ]
mov edx 0xffffffff
cmp edi 0x19999999
ja r-xdata
mov [ esi + ecx * 4 + 0x1a8 ] 0x0
mov ecx [ esi + 0x22c ]
cmp ecx 0x3d42
jle r-xdata
lea eax [ ecx - 0x40 ]
cmp eax 0x38
ja r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov [ esi + ecx * 4 + 0x1a8 ] edx
jmp r-xdata
add edi edi
mov edx 0xffffffcf
lea edi [ edi + edi * 4 ]
sub edx eax
cmp edi edx
mov edx 0xffffffff
ja r-xdata
cmp ecx 0x226f
jle r-xdata
lea eax [ ecx - 0x3d43 ]
cmp eax 0x9
ja r-xdata
cmp ecx 0x168
mov edi 0xffffffff
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41863c ]
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
lea edx [ edi + eax - 0x30 ]
cmp ecx 0x169
je r-xdata
cmp ecx 0x2270
je r-xdata
cmp ecx 0x3d63
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418720 ]
cmp [ esi + 0xe48 ] 0x0
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x8
je r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x16c
mov edi 0xffffffff
jne r-xdata
mov eax [ esp ]
mov eax [ eax ]
cmp eax 0x29
jle r-xdata
cmp ecx 0x247c
je r-xdata
test [ esi + 0x1 ] 0x10
je r-xdata
cmp ecx 0x3e63
mov edi 0xffffffff
jne r-xdata
test [ esi + 0x1 ] 0x10
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp [ esi + 0x22c ] 0x0
mov edi 0xffffffff
jle r-xdata
mov eax [ esi + 0x12c ]
mov ecx [ esi + 0x1ac ]
cmp ecx eax
cmova ecx eax
xor edx edx
inc edx
test ecx ecx
mov [ esi + 0x1ac ] ecx
cmovne edx ecx
mov ecx esi
call sub_47cf1b
mov [ esi + 0x154 ] 0x1
xor eax eax
mov edi 0xffffffff
cmp [ esi + 0x109c ] eax
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
cmp [ esi + 0x22c ] 0x1
mov edi 0xffffffff
jne r-xdata
test [ esi ] 0x2
je r-xdata
test eax eax
je r-xdata
cmp eax 0x3c
jg r-xdata
test [ esi + 0x1 ] 0x1
mov eax 0xffffffff
je r-xdata
cmp ecx 0x2a7c
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esp ]
mov ecx 0x1
mov eax [ eax ]
test eax eax
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp [ esi + 0x22c ] 0x2
mov edi 0xffffffff
jl r-xdata
mov edx [ esi + 0x1ac ]
mov ecx esi
push 0x1
push ebx
call sub_47d460
add esp 0x8
cmp [ esi + 0x22c ] 0x2
mov edi 0xffffffff
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
mov eax [ esp ]
mov eax [ eax ]
cmp eax 0x5
jne r-xdata
cmp [ esi + 0x22c ] 0x0
mov edi 0xffffffff
jle r-xdata
mov [ esi ] 0xffff
jmp r-xdata
cmp eax 0x28
je r-xdata
cmp eax 0x3e
je r-xdata
cmp eax 0x2a
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x22c ] 0x1
mov edi eax
jg r-xdata
test [ esi ] 0x40
je r-xdata
xor edi edi
xor eax eax
cmp eax 0x2
je r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov eax [ esi + 0x1ac ]
xor ecx ecx
cmp eax [ esi + 0x1b0 ]
setbe cl
mov [ esi + 0xb0 ] ecx
jmp r-xdata
xor ebx ebx
mov edi 0x6c
inc ebx
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
cmp eax 0x4
mov edi 0xffffffff
jne r-xdata
push 0x81
push [ esi + 0x1094 ]
call sub_431a8c
add esp 0x8
mov edi eax
cmp [ edi ] 0x0
je r-xdata
mov edx [ esi + 0x1ac ]
mov ecx esi
push 0x0
push ebx
call sub_47d460
add esp 0x8
cmp [ esi + 0x22c ] 0x2
mov edi 0xffffffff
jl r-xdata
and [ esi ] 0x1ff
jmp r-xdata
cmp eax 0x29
jne r-xdata
mov eax [ esi ]
mov ecx 0xfffffe00
and eax ecx
or eax 0x1f
cmp eax 0x3d
jne r-xdata
mov [ esi ] 0x1001
jmp r-xdata
cmp eax 0x32
je r-xdata
cmp [ esi + 0x114c ] 0x0
jne r-xdata
cmp [ esi + 0x22c ] 0x1
mov edi 0xffffffff
jne r-xdata
xor eax eax
mov [ esi + 0x158 ] ecx
inc eax
jmp r-xdata
cmp eax 0x1
mov edi 0xffffffff
jne r-xdata
push 0x0
push 0xb
push r--data
push eax
jmp r-xdata
mov edx [ esi + edi * 4 ]
mov ecx esi
push ebx
push [ esi + 0x230 ]
call sub_47d460
add esp 0x8
lea eax [ edi + 0x1 ]
add edi 0xffffff96
cmp edi [ esi + 0x22c ]
mov edi eax
jl r-xdata
jmp r-xdata
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
cmp [ esi + 0xec ] 0x0
mov edi 0xffffffff
je r-xdata
mov eax [ esp ]
mov eax [ eax ]
mov [ esi + 0xec ] 0x1
xor ecx ecx
xor eax eax
cmp [ esi + 0x230 ] ecx
sete al
mov [ esi + 0xf0 ] eax
mov [ esi + 0xf4 ] ecx
push [ esp + 0x2c ]
call sub_43ff54
add esp 0x4
push edi
call sub_492c6c
add esp 0x4
xor edi edi
mov [ esi + 0x104 ] eax
jmp r-xdata
mov edi 0x6c
lea ecx [ eax - 0x3d ]
cmp ecx 0x8
ja r-xdata
mov eax [ esi ]
mov ecx 0xfffffe00
and eax ecx
or eax 0xf
jmp r-xdata
mov [ esi + 0xa40 ] 0x3f5b1b
cmp [ esi + 0x22c ] 0x2
mov ebx [ esp + 0x1c ]
jl r-xdata
jmp r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp [ esi + 0x1ac ] 0x0
mov eax [ esp ]
cmove eax [ esp + 0x24 ]
push [ esi + 0x128 ]
push [ eax ]
push [ esi + 0x1088 ]
mov eax [ esp ]
mov edi 0xffffffff
mov eax [ eax ]
test eax eax
je r-xdata
mov [ esi + 0xb0 ] eax
jmp r-xdata
xor ecx ecx
call sub_43c15b
add esp 0x10
jmp r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov ecx esi
call sub_474d89
jmp r-xdata
mov edx [ esi + edi * 4 ]
mov ecx esi
push 0x0
push [ esi + 0x230 ]
call sub_47d460
add esp 0x8
lea eax [ edi + 0x1 ]
add edi 0xffffff96
cmp edi [ esi + 0x22c ]
mov edi eax
jl r-xdata
jmp r-xdata
cmp eax 0x32
mov edi 0xffffffff
jne r-xdata
or [ esi ] 0x1ff
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
push ebx
call sub_4a7f30
add esp 0x4
mov [ esi + eax + 0xa40 ] 0x63
jmp r-xdata
xor edi edi
cmp [ esi + 0x114c ] 0x0
jne r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
push [ esi + edi * 4 + 0x1b0 ]
push r--data
lea eax [ esp + 0x68 ]
mov ebp eax
push ebp
call sub_432778
add esp 0xc
push ebp
push ebx
call sub_4a7c10
add esp 0x8
lea eax [ edi + 0x1 ]
add edi 0x2
cmp edi [ esi + 0x22c ]
mov edi eax
jl r-xdata
push ebx
call sub_4a7f30
add esp 0x4
mov [ esi + eax + 0xa40 ] 0x3b
push eax
push [ esi + 0x12c ]
push [ esi + 0x1088 ]
jmp r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
test edi edi
je r-xdata
call sub_489f9b
add esp 0xc
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_477b45
cmp eax 0x4b
mov [ esi + 0xa3c ] 0x0
jg r-xdata
cmp eax 0x51
jg r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
cmp eax 0x52
je r-xdata
cmp eax 0x4c
je r-xdata
mov [ esi + 0xe44 ] 0x7
mov ecx [ esp ]
mov edi 0xffffffff
mov edx [ ecx ]
mov ecx edi
cmp edx 0x19999999
ja r-xdata
push [ esi + 0x1088 ]
call sub_48c094
add esp 0x4
push esi
jmp r-xdata
cmp eax 0x57
jne r-xdata
mov eax [ esp ]
cmp [ eax ] 0x2
jne r-xdata
cmp eax 0x50
jne r-xdata
xor edi edi
mov eax [ esp ]
mov [ eax ] ecx
jmp r-xdata
add edx edx
mov ecx 0xffffffcf
lea edx [ edx + edx * 4 ]
sub ecx eax
cmp edx ecx
mov ecx edi
ja r-xdata
call sub_475c80
add esp 0x4
mov [ esi + 0xe44 ] 0x4
mov [ esi + 0xa3c ] 0x1
jmp r-xdata
mov eax [ esp ]
mov [ eax ] 0x1
jmp r-xdata
mov [ esi + 0xe44 ] 0x6
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
lea ecx [ edx + eax - 0x30 ]
mov [ esi + 0x234 ] 0x0
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_477bd9
mov ecx [ esi + 0x234 ]
mov edx 0xf
mov edi 0x15
lea ebx [ eax - 0x30 ]
test ecx ecx
cmove edx edi
cmp ebx 0xa
jb r-xdata
lea eax [ ecx + 0x1 ]
mov edi 0xffffffff
mov [ esi + 0x234 ] eax
mov [ esi + ecx + 0x238 ] bl
cmp [ esi + 0x234 ] 0x7
jl r-xdata
cmp eax 0x41
jl r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
movsx eax [ esi + 0x23d ]
movsx ecx [ esi + 0x23e ]
movsx edx [ esi + 0x23c ]
movsx edi [ esi + 0x23a ]
shl eax 0x4
add ecx eax
movsx eax [ esi + 0x23b ]
shl eax 0x4
add edx eax
movsx eax [ esi + 0x239 ]
shl eax 0x4
add edi eax
movsx eax [ esi + 0x238 ]
push ecx
push edx
push edi
push eax
push [ esi + 0x1088 ]
call sub_48bfa9
add esp 0x14
push esi
call sub_475c80
add esp 0x4
cmp eax 0x61
jl r-xdata
lea edi [ edx + 0x37 ]
cmp eax edi
jg r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
add edx 0x57
cmp eax edx
jg r-xdata
add eax 0xffffffc9
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
add eax 0xffffffa9
mov ebx eax
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_477c16
cmp eax 0xc
jle r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x9c
je r-xdata
mov ecx esi
call sub_47d2b0
jmp r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0x1b
je r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov ecx [ esi + 0x234 ]
mov edi 0xffffffff
cmp ecx 0x7ff
jg r-xdata
mov [ esi + 0xe44 ] 0x8
jmp r-xdata
cmp eax 0xd
je r-xdata
xor edi edi
cmp [ esi + 0xe48 ] 0x0
je r-xdata
lea edx [ ecx + 0x1 ]
mov [ esi + 0x234 ] edx
mov [ esi + ecx + 0x238 ] al
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_477ced
xor ecx ecx
mov [ esi + 0xe44 ] ecx
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] ecx
jne r-xdata
add eax 0xffffffc4
mov edi 0xffffffff
cmp eax 0x3b
ja r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esp + 0x5c ]
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41854c ]
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov [ esi + 0x148 ] 0x0
mov eax [ esi + 0x1104 ]
mov ecx esi
mov [ esi + 0xc4 ] eax
call sub_474e5f
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_4781f0
call [ GetTickCount@IAT ]
cmp [ esi + 0x34 ] 0x0
mov edi [ esp + 0x48 ]
mov ebx eax
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x8
push 0x1
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
cmp [ edi ] ecx
mov ecx edi
je r-xdata
cmp [ esi + 0x10e8 ] 0x0
je r-xdata
mov ecx ebx
sub ecx [ esi + 0x10f4 ]
cmp [ eax + 0x4 ] ecx
jae r-xdata
mov [ ecx ] eax
mov [ esi + 0x2c ] eax
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x2c ]
mov [ esi + 0x38 ] ebx
push [ esi + 0x10e4 ]
push [ esi + 0x1088 ]
call sub_48cd29
add esp 0x8
cmp [ esi + 0x10e4 ] 0x2
jne r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov ecx [ eax ]
mov [ edi ] ecx
push eax
call sub_43f9d4
add esp 0x4
cmp [ edi ] 0x0
mov eax 0xffffffff
jne r-xdata
add [ esi + 0x30 ] eax
mov [ esi + 0x154 ] 0x1
mov edi 0xffffffff
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x138 ] 0x1
push esi
push sub_47bf8d
push 0x64
call sub_47d9f4
add esp 0xc
mov [ esi + 0x13c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x10ec ]
jge r-xdata
mov eax ebx
sub eax [ esi + 0x38 ]
cmp eax [ esi + 0x10f0 ]
jb r-xdata
xor eax eax
mov [ esi + 0x2c ] 0x0
dec eax
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
mov [ esi + 0x34 ] 0x1
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] 0x0
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47822f
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x6c ]
test ecx ecx
je r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esi + 0x154 ] 0x1
mov edi 0xffffffff
cmp [ esi + 0x109c ] 0x0
jne r-xdata
cmp [ esi + 0x88 ] 0x0
je r-xdata
dec eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x0
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
test ecx ecx
jle r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x12c ]
dec ecx
dec eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] ecx
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_478256
mov edx [ esi + 0x6c ]
mov eax [ esi + 0x70 ]
mov ecx esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x8 ] edx
push 0x1
push 0xc2a
call sub_474f94
add esp 0x8
mov ecx [ esi + 0x70 ]
mov ebp [ esi + 0x12c ]
lea edx [ ebp - 0x1 ]
inc ecx
test [ eax ] 0x3
je r-xdata
mov ebx [ esi + 0xe40 ]
lea ecx [ edi + 0x1 ]
cmp [ ebx + edi ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
cmp edi ebp
jl r-xdata
mov eax ebp
mov ecx [ esp + 0x8 ]
shr eax 0x1f
add eax ebp
sar eax 0x1
cmp edi eax
jl r-xdata
mov edi ecx
cmp edi edx
mov [ esi + 0x70 ] edi
jge r-xdata
mov eax [ esi + 0x6c ]
cmp [ esi + 0xe5c ] ecx
jle r-xdata
mov edi edx
mov [ esi + 0x70 ] edx
dec eax
mov [ esi + 0x70 ] eax
mov edi eax
jmp r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov [ esi + 0x154 ] 0x1
mov edi 0xffffffff
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
cmp [ esi + 0xe60 ] ecx
jg r-xdata
jne r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
jmp r-xdata
cmp [ esi + 0xe58 ] edi
jl r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_4782c3
test [ esi + 0x1 ] 0x10
jne r-xdata
mov ecx [ esi + 0x12c ]
mov eax [ esi + 0x128 ]
mov edi 0x0
test ecx ecx
lea ecx [ ecx - 0x1 ]
cmovg ecx edi
test eax eax
lea eax [ eax - 0x1 ]
cmovg eax edi
mov [ esi + 0x70 ] ecx
xor edx edx
mov ecx esi
mov [ esi + 0x6c ] eax
mov [ esi + 0x8c ] edi
push 0x1
push edi
call sub_47b6c6
add esp 0x8
cmp [ esi + 0x1168 ] edi
je r-xdata
test [ esi ] 0x2
je r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
xor edi edi
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
cmp [ esi + 0x1120 ] 0x0
je r-xdata
inc eax
mov [ esi + 0x6c ] eax
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
mov [ esi + 0x70 ] 0x0
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
mov eax [ esi + 0x108c ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
movzx ecx [ esp + 0x5c ]
push 0x1
push ecx
push eax
jmp r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
call sub_43d10f
add esp 0xc
jmp r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_4782fd
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
cmp [ esi + 0x1114 ] 0x0
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x108c ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
movzx ecx [ esp + 0x5c ]
push 0x1
push ecx
push eax
call sub_43d10f
add esp 0xc
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
xor edi edi
inc eax
mov [ esi + 0x6c ] eax
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47839e
cmp [ esi + 0x148 ] 0x0
je r-xdata
test [ esi ] 0x1
mov eax 0xffffffff
je r-xdata
mov [ esi + 0xe44 ] 0x9
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
jmp r-xdata
xor edi edi
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov edi eax
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_479221
mov eax [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov ecx esi
dec eax
push 0x1
push eax
jmp r-xdata
call sub_47ce9e
jmp r-xdata
add esp 0x8
jmp r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47924e
mov edx [ esi + 0x70 ]
mov ecx esi
dec edx
push 0x1
push [ esi + 0x6c ]
call sub_47ce9e
jmp r-xdata
add esp 0x8
jmp r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_479263
mov ecx [ esi + 0x12c ]
mov eax [ esi + 0x128 ]
xor edi edi
test ecx ecx
lea ecx [ ecx - 0x1 ]
cmovg ecx edi
test eax eax
lea eax [ eax - 0x1 ]
cmovg eax edi
mov [ esi + 0x70 ] ecx
xor edx edx
mov ecx esi
mov [ esi + 0x6c ] eax
mov [ esi + 0x8c ] edi
push 0x1
push edi
jmp r-xdata
call sub_47b6c6
add esp 0x8
cmp [ esi + 0x1168 ] edi
mov edi 0xffffffff
je r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x10 ] 0x0
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
xor edi edi
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_4792fa
mov eax [ esi + 0x6c ]
test eax eax
je r-xdata
mov eax [ esi + 0x128 ]
mov ecx esi
dec eax
xor edi edi
xor edx edx
dec edi
push 0x1
push edi
push eax
call sub_47b914
add esp 0xc
jle r-xdata
xor edi edi
mov [ esi + 0x8c ] 0x0
jmp r-xdata
dec eax
mov [ esi + 0x6c ] eax
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_479322
xor edx edx
mov ecx esi
inc edx
push 0x1
push 0x0
jmp r-xdata
call sub_47b6c6
add esp 0x8
jmp r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47944c
xor edi edi
xor edx edx
mov ecx esi
push edi
push 0x1
call sub_47b6c6
add esp 0x8
cmp [ esi + 0x1168 ] edi
mov edi 0xffffffff
je r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x10 ] 0x0
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
xor edi edi
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_4794b7
xor edx edx
mov ecx esi
inc edx
push 0x0
push 0x1
call sub_47b6c6
add esp 0x8
jmp r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_479863
cmp [ esi + 0x22c ] 0x1
jg r-xdata
mov eax [ esi + 0x1ac ]
mov ecx [ esi + 0x128 ]
mov edx [ esi + 0x12c ]
cmp eax ecx
cmova eax ecx
mov ecx [ esi + 0x1b0 ]
cmp ecx edx
cmova ecx edx
mov edx [ esi + 0x84 ]
xor ebx ebx
mov [ esi + 0x1ac ] eax
mov [ esi + 0x1b0 ] ecx
cmp edx 0x0
setne bl
xor edi edi
add ebx ebx
cmp edx 0x0
mov edx 0x0
je r-xdata
mov eax [ esp + 0x28 ]
mov [ eax ] 0x0
xor ebp ebp
inc ebp
test eax eax
cmovne ebp eax
test ecx ecx
lea eax [ edx + ebp - 0x1 ]
lea edx [ ecx - 0x1 ]
cmove edx ecx
mov ecx esi
push ebx
push eax
call sub_47ce9e
add esp 0x8
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] edi
mov edi 0xffffffff
jne r-xdata
mov edx [ esi + 0x7c ]
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_479dfb
mov eax [ esp ]
mov eax [ eax ]
cmp eax 0x3
jne r-xdata
inc eax
xor ecx ecx
cmp eax 0x3
cmova eax ecx
xor edx edx
mov ecx esi
mov edi eax
shr eax 0x1
and edi 0x1
and eax 0x1
push edi
push eax
call sub_47b6c6
add esp 0x8
xor eax eax
dec eax
cmp [ esi + 0x1154 ] 0x0
mov eax 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
mov edi eax
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x1168 ] 0x0
je r-xdata
push esi
call sub_474f14
xor eax eax
dec eax
add esp 0x4
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47a43e
mov eax [ esi + 0x22c ]
mov ebx [ esp + 0x10 ]
mov ebp [ esp + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xffffffff
mov [ ebx + 0x8 ] eax
movsd xmm0 [ ebp ]
movsd [ ebx ] xmm0
cmp [ esi + 0xb8 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax 0x3ffff
and eax [ esi + 0x40 ]
xor edi edi
dec edi
mov [ esi + 0x58 ] eax
jmp r-xdata
mov ecx [ esi + edi * 4 + 0x1ac ]
cmp ecx 0x6b
ja r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
inc edi
cmp edi eax
jl r-xdata
jmp [ ecx * 4 + jump_table_41879c ]
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x3c ]
jmp r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
mov [ esi + 0x40 ] ecx
jmp r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47a5d5
mov eax [ esi + 0x22c ]
cmp eax 0x1
jg r-xdata
mov ecx [ esp ]
mov edi 0xffffffff
mov ecx [ ecx ]
dec ecx
cmp ecx 0x16
ja r-xdata
mov ecx [ esp ]
mov ecx [ ecx ]
lea edx [ ecx - 0x1 ]
cmp edx 0x17
jb r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test eax eax
mov edi 0xffffffff
jle r-xdata
test [ esi + 0x1 ] 0x1
je r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp ecx 0x14
mov edi 0xffffffff
ja r-xdata
cmp [ esi + 0x114c ] 0x0
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
dec edi
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418748 ]
xor eax eax
xor edi edi
mov [ esi + 0xe48 ] eax
dec edi
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
mov [ ecx ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] eax
jmp r-xdata
test ecx ecx
mov eax 0x18
cmovne eax ecx
push eax
push [ esi + 0x12c ]
push [ esi + 0x1088 ]
call sub_489f9b
add esp 0xc
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
push 0x0
push [ esi + 0x1088 ]
jmp r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
call sub_48cfb8
jmp r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
add esp 0x8
jmp r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
xor edi edi
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47a761
test [ esi ] 0x4
je r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
or [ esi + 0x42 ] 0x4
jmp r-xdata
inc edi
cmp edi eax
jl r-xdata
mov ecx [ esi + edi * 4 + 0x1ac ]
cmp ecx 0x6b
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xffffffff
mov [ ebx + 0x8 ] eax
movsd xmm0 [ ebp ]
movsd [ ebx ] xmm0
cmp [ esi + 0xb8 ] 0x0
je r-xdata
jmp [ ecx * 4 + jump_table_41879c ]
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax 0x3ffff
and eax [ esi + 0x40 ]
xor edi edi
dec edi
mov [ esi + 0x58 ] eax
jmp r-xdata
mov ecx [ esi + 0x3c ]
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov [ esi + 0x40 ] ecx
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47a913
mov ecx 0xfffc01ff
and ecx [ esi + 0x40 ]
or ecx 0x20400
inc edi
cmp edi eax
jl r-xdata
mov ecx [ esi + edi * 4 + 0x1ac ]
cmp ecx 0x6b
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xffffffff
mov [ ebx + 0x8 ] eax
movsd xmm0 [ ebp ]
movsd [ ebx ] xmm0
cmp [ esi + 0xb8 ] 0x0
je r-xdata
jmp [ ecx * 4 + jump_table_41879c ]
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax 0x3ffff
and eax [ esi + 0x40 ]
xor edi edi
dec edi
mov [ esi + 0x58 ] eax
jmp r-xdata
mov ecx [ esi + 0x3c ]
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov [ esi + 0x40 ] ecx
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47a939
mov ecx 0xfffffe00
and ecx [ esi + 0x40 ]
mov [ esi + 0x40 ] ecx
mov edx [ esi + edi * 4 + 0x1ac ]
add edx 0xffffffe2
jmp r-xdata
or edx ecx
mov [ esi + 0x40 ] edx
mov ecx [ esi + edi * 4 + 0x1ac ]
cmp ecx 0x6b
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xffffffff
mov [ ebx + 0x8 ] eax
movsd xmm0 [ ebp ]
movsd [ ebx ] xmm0
cmp [ esi + 0xb8 ] 0x0
je r-xdata
inc edi
cmp edi eax
jl r-xdata
jmp [ ecx * 4 + jump_table_41879c ]
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax 0x3ffff
and eax [ esi + 0x40 ]
xor edi edi
dec edi
mov [ esi + 0x58 ] eax
jmp r-xdata
mov ecx [ esi + 0x3c ]
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov [ esi + 0x40 ] ecx
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47a984
mov ecx 0xfffc01ff
and ecx [ esi + 0x40 ]
mov [ esi + 0x40 ] ecx
mov edx [ esi + edi * 4 + 0x1ac ]
shl edx 0x9
add edx 0xffff4800
or edx ecx
mov [ esi + 0x40 ] edx
mov ecx [ esi + edi * 4 + 0x1ac ]
cmp ecx 0x6b
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xffffffff
mov [ ebx + 0x8 ] eax
movsd xmm0 [ ebp ]
movsd [ ebx ] xmm0
cmp [ esi + 0xb8 ] 0x0
je r-xdata
inc edi
cmp edi eax
jl r-xdata
jmp [ ecx * 4 + jump_table_41879c ]
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax 0x3ffff
and eax [ esi + 0x40 ]
xor edi edi
dec edi
mov [ esi + 0x58 ] eax
jmp r-xdata
mov ecx [ esi + 0x3c ]
jmp r-xdata
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov [ esi + 0x40 ] ecx
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
xor edi edi
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47ac0d
push 0x1
push [ esi + 0x1088 ]
call sub_48cfb8
jmp r-xdata
add esp 0x8
jmp r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47ac5b
push 0x1
push [ esi + 0x1088 ]
jmp r-xdata
call sub_48d032
jmp r-xdata
add esp 0x8
jmp r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47ac65
push 0x0
push [ esi + 0x1088 ]
call sub_48d032
jmp r-xdata
add esp 0x8
jmp r-xdata
xor edi edi
mov eax [ esp + 0x58 ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x6c ]
mov ebx 0x0
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebx
lea ebx [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebx
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
cmp edi 0xffffffff
je r-xdata
test eax eax
jg r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x30 ]
test eax eax
jne r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
push [ esp + 0x20 ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
cmp [ esi + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ esi + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
movzx ecx [ edx ]
dec eax
inc edx
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] ecx
cmp [ esi + 0x1128 ] 0x2
mov [ esp + 0x30 ] edx
jne r-xdata
lea eax [ esp + 0x58 ]
push eax
lea eax [ esp + 0x64 ]
push eax
push [ esp + 0x28 ]
call sub_44008c
add esp 0xc
mov edi [ esp + 0x58 ]
cmp edi 0x101
jb r-xdata
cmp [ esi + 0xec ] 0x0
je r-xdata
mov ecx esi
call sub_47c887
cmp [ esi + 0x1124 ] 0x0
je r-xdata
cmp [ esi + 0xe58 ] eax
jge r-xdata
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
push edi
push [ esp + 0x64 ]
lea eax [ esp + 0xf8 ]
mov ebx eax
push ebx
call sub_49a1f0
add esp 0xc
push edi
push [ esp + 0x24 ]
call sub_44000a
add esp 0x8
mov eax [ esp + 0x58 ]
mov edx ebx
mov edi 0x100
mov [ esp + 0x58 ] 0x100
mov ecx [ esi + 0xe44 ]
test ecx ecx
je r-xdata
push 0x1
lea eax [ esp + 0x60 ]
push eax
push [ esp + 0x34 ]
call sub_43ff80
add esp 0xc
cmp [ esi + 0xf0 ] 0x0
je r-xdata
mov ecx [ esp + 0x1f0 ]
call sub_497c4a
add esp 0x1f4
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x108c ]
test eax eax
je r-xdata
sub esp 0xc
movzx ecx cl
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0x8 ] 0x2
call sub_43d10f
add esp 0xc
cmp [ esi + 0xdc ] 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x5c ]
cmp ecx 0x5a
jle r-xdata
push eax
call sub_43cc3c
add esp 0x4
mov ebx [ esi + 0xe0 ]
lea eax [ ebx - 0x1 ]
cmp eax 0x5
jae r-xdata
mov eax [ esi + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
jne r-xdata
cmp eax 0x7f
jne r-xdata
cmp ecx 0x4
jg r-xdata
cmp ecx 0x1b
mov eax 0x1
je r-xdata
cmp ecx 0x5b
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x5c ]
mov eax edi
and eax 0xc0
cmp eax 0x80
jne r-xdata
mov edi [ esi + 0xd0 ]
mov edx [ esp + 0x5c ]
test edi edi
je r-xdata
cmp eax 0x1f
ja r-xdata
mov eax 0x7f
cmp ecx 0x4
jg r-xdata
cmp [ esi + 0x148 ] 0x0
jne r-xdata
xor edi edi
mov [ esi + 0xf4 ] eax
dec edi
jmp r-xdata
cmp ecx 0x34
jne r-xdata
cmp [ esi + 0xf4 ] 0x1
mov eax 0x2
je r-xdata
cmp ecx 0x69
je r-xdata
mov edx [ esp + 0x5c ]
cmp edx 0x7f
ja r-xdata
mov [ esp + 0x5c ] 0xd961
mov [ esi + 0xe0 ] 0x0
mov edx [ esi + 0xe4 ]
and edi 0x3f
mov eax edi
mov edi 0xffffffff
shl edx 0x6
or eax edx
dec ebx
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe0 ] ebx
jne r-xdata
mov edi [ esi + 0x94 ]
mov ebx 0xffff2800
mov edi [ esi + edi * 4 + 0x170 ]
add edi ebx
rol edi 0x18
cmp edi 0x3
ja r-xdata
cmp edx 0x1b
ja r-xdata
cmp ecx 0xd
mov edi 0xffffffff
ja r-xdata
cmp ecx 0x4
jg r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test [ esi ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xf4 ] 0x2
mov eax 0x3
jne r-xdata
xor eax eax
cmp [ esi + 0xf4 ] 0x3
jne r-xdata
cmp ecx 0x9b
jne r-xdata
mov eax edx
and eax 0xe0
cmp eax 0xc0
jne r-xdata
mov eax [ esi + 0x1090 ]
jmp r-xdata
cmp [ esi + 0x1108 ] 0x0
je r-xdata
mov bl cl
jmp r-xdata
cmp eax 0x80
mov [ esp + 0x5c ] eax
jb r-xdata
jmp [ edi * 4 + jump_table_4184a8 ]
cmp edi 0x2
jne r-xdata
mov ebx 0x8002500
bt ebx edx
jae r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_418514 ]
add eax 0xfffffffb
mov edi 0xffffffff
cmp eax 0x16
ja r-xdata
mov edx [ esi + 0x70 ]
test edx edx
je r-xdata
cmp eax 0x9a
jne r-xdata
jmp r-xdata
mov ecx esi
mov [ esi + 0xf4 ] 0x4
call sub_474d89
xor edi edi
dec edi
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax edx
and eax 0xf0
cmp eax 0xe0
jne r-xdata
xor eax eax
and edx 0x1f
inc eax
jmp r-xdata
movzx eax [ eax + edx + 0xa10 ]
cmp eax 0xff
jne r-xdata
push eax
call sub_47eb9c
push eax
call sub_47ec45
jmp r-xdata
cmp [ esi + 0x8c ] 0x0
je r-xdata
mov [ esp + 0x5c ] 0xd961
cmp eax 0x7ff
ja r-xdata
or edx 0xda00
mov [ esp + 0x5c ] edx
mov eax edx
jmp r-xdata
or edx 0x80
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xc44
call sub_474f94
add esp 0x8
mov ebp eax
mov eax [ esp + 0x5c ]
xor ebx ebx
mov ecx eax
and ecx 0xfffffc00
cmp ecx 0xd800
sete cl
jne r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_4184b8 ]
xor edx edx
xor edi edi
dec edi
cmp [ esi + 0x8c ] 0x0
mov edi 0xffffffff
jne r-xdata
and eax 0x1f
mov [ esi + 0xe44 ] 0x1
mov [ esi + 0x230 ] 0x0
or eax 0x40
mov [ esp + 0x5c ] eax
jmp r-xdata
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov eax edx
and eax 0xf8
cmp eax 0xf0
jne r-xdata
mov eax 0x2
and edx 0xf
jmp r-xdata
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe8 ] eax
xor edi edi
mov [ esi + 0xe4 ] edx
dec edi
jmp r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
movzx eax dl
or eax 0xd800
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
add esp 0x4
mov ebx eax
cmp eax 0xfeff
mov edi 0xffffffff
je r-xdata
cmp eax 0xffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x1
jle r-xdata
mov edx eax
and edx 0xffffffe0
cmp edx 0x80
jne r-xdata
test [ esi ] 0x1
je r-xdata
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x6c ]
mov edi [ esi + 0x70 ]
xor eax eax
mov ecx esi
inc eax
push eax
push 0xb8e
call sub_474f94
add esp 0x8
mov ecx eax
mov edx edi
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x8c ] eax
cmp [ esi + 0x1140 ] eax
jne r-xdata
dec edx
mov [ esi + 0x70 ] edx
jmp r-xdata
mov ecx eax
and ecx 0xfffffff0
cmp ecx 0x20
jne r-xdata
mov eax edx
and eax 0xfc
cmp eax 0xf8
jne r-xdata
mov eax 0x3
and edx 0x7
jmp r-xdata
cmp [ esi + 0xe48 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov edx eax
mov edi 0xffffffff
and edx 0xffffff80
cmp edx 0xe0000
je r-xdata
cmp eax 0x1fffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x2
jle r-xdata
mov edi eax
or edi 0x1
cmp edi 0x2029
jne r-xdata
jmp r-xdata
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
mov eax [ esi + 0x1084 ]
mov edi 0xffffffff
test eax eax
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov ecx [ esi + 0x230 ]
shl ecx 0x8
add ecx eax
cmp ecx 0x2337
jg r-xdata
cmp [ esi + 0x230 ] 0x1
sbb ecx ecx
not ecx
or ecx eax
mov [ esi + 0x230 ] ecx
jmp r-xdata
mov eax edx
and eax 0xfe
cmp eax 0xfc
jne r-xdata
mov eax 0x4
and edx 0x3
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx eax
and ecx 0xffffff00
cmp ecx 0xd800
je r-xdata
mov [ esp + 0x8 ] ebp
mov ebp 0x0
mov eax [ esi + 0x6c ]
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0x70 ]
cmp ecx [ esi + 0x12c ]
mov edx ecx
cmove edx ebp
lea ebp [ esp + 0x60 ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x54 ]
cmove edx ebp
mov ebp esi
inc [ edx ]
cmp [ esi + 0xe5c ] eax
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x54 ]
jle r-xdata
mov ecx esi
mov edx ebx
call sub_47cf1b
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
or eax 0x1
cmp eax 0xffff
jne r-xdata
cmp eax 0x3ffffff
ja r-xdata
cmp [ esi + 0xe8 ] 0x3
jg r-xdata
jmp r-xdata
cmp eax 0x9f
ja r-xdata
mov [ esp + 0x5c ] 0x85
jmp r-xdata
xor ecx ecx
push ecx
push [ esi + 0x10dc ]
push [ esi + 0x10d8 ]
push ecx
push eax
call sub_43ca08
add esp 0x14
jmp r-xdata
cmp ecx 0x2841
mov eax 0xffffffff
jg r-xdata
cmp ecx 0x59
jg r-xdata
mov [ esp + 0x5c ] 0xd961
xor edi edi
dec edi
jmp r-xdata
mov eax 0x5
and edx 0x1
mov ecx [ esi + 0x108c ]
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] edx
jl r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebp ebp
mov ecx esi
inc ebp
push ebp
push ebp
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp [ esi + 0xe8 ] 0x5
jl r-xdata
jmp r-xdata
and edx 0xfffff800
cmp edx 0xd800
je r-xdata
mov [ esp + 0x5c ] 0xfffd
mov eax 0xfffd
cmp ecx 0x2940
jg r-xdata
cmp ecx 0x2546
jg r-xdata
lea eax [ ecx - 0x5a ]
cmp eax 0x9
jbe r-xdata
lea eax [ ecx - 0x37 ]
cmp eax 0x7
jbe r-xdata
test ebx ebx
je r-xdata
movzx eax al
push 0x1
push eax
push ecx
call sub_43d10f
add esp 0xc
mov eax [ esp + 0x8 ]
mov esi ebp
mov ebp eax
cmp [ ebp + 0xe60 ] ecx
jg r-xdata
xor ecx ecx
mov [ ebp + 0xe48 ] ecx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
jne r-xdata
xor ecx ecx
mov edx eax
mov [ esi + 0x70 ] ecx
mov [ esi + 0x8c ] ecx
mov ecx esi
push 0x1
push 0xc55
call sub_474f94
add esp 0x8
mov ebp eax
inc eax
mov [ esi + 0x6c ] eax
mov eax 0xd961
mov [ esp + 0x5c ] 0xd961
jmp r-xdata
cmp eax 0x110000
jae r-xdata
cmp ecx 0x2941
je r-xdata
cmp ecx 0x2842
je r-xdata
cmp ecx 0x2547
je r-xdata
cmp ecx 0x2338
je r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_418994 ]
lea eax [ ecx - 0x2333 ]
mov edi 0xffffffff
cmp eax 0x4
jae r-xdata
xor edi edi
dec edi
jmp [ eax * 4 + jump_table_41894c ]
add ecx 0xffffffbc
mov edi 0xffffffff
cmp ecx 0x9
ja r-xdata
mov ebx [ esi + 0x70 ]
test ebx ebx
jle r-xdata
cmp ebx 0x1
je r-xdata
cmp [ ebp + 0xe58 ] eax
jge r-xdata
jmp r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2942
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2855
je r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2830
je r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2538
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
dec edi
jmp [ ecx * 4 + jump_table_41896c ]
cmp [ esi + 0x8c ] 0x1
mov eax [ ebp + 0x14 ]
sbb ebx 0x0
lea ecx [ ebx + ebx * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
inc edx
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx ebp
call sub_47bcd7
mov eax [ esp + 0x5c ]
lea ebx [ ebp + 0x14 ]
jmp r-xdata
cmp ebx 0x2
jne r-xdata
mov [ esi + 0xe44 ] 0x0
mov edi eax
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
jne r-xdata
cmp ecx 0x2955
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp ecx 0x2930
mov edi eax
jne r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp ecx 0x2841
mov edi eax
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
jle r-xdata
cmp ecx 0x2540
mov edi eax
jne r-xdata
mov ebx [ esi + 0x1084 ]
mov edi 0xffffffff
test ebx ebx
je r-xdata
xor edi edi
mov [ esi + 0xe44 ] 0x0
jmp r-xdata
cmp eax 0x2
mov eax 0x1
mov ebx eax
ja r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esi + 0x78 ] edx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x94 ]
mov [ esi + 0x98 ] eax
mov ecx [ esi + 0xdc ]
mov [ esi + 0xa0 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esi + 0xa4 ] ecx
mov eax [ esi + eax * 4 + 0x170 ]
mov [ esi + 0x9c ] eax
mov eax [ esi + 0xd0 ]
mov [ esi + 0xd4 ] eax
jmp r-xdata
test [ esi ] 0x2
je r-xdata
mov ecx ebp
mov edx ebx
push [ esp + 0x5c ]
call sub_47bd42
add esp 0x4
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ ebx ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebx ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov eax [ esi + 0x70 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x70 ] ecx
cmp ecx [ esi + 0x12c ]
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov eax [ esi + 0x12c ]
mov edx [ esi + 0x70 ]
dec eax
cmp edx eax
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xdb00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
xor edi edi
mov [ esi + 0xdc ] 0x1
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi eax
jne r-xdata
test [ esi ] 0x2
je r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
xor edi edi
test [ esi + 0x1 ] 0x40
je r-xdata
mov edi [ esp + 0x1c ]
push edi
call sub_4a7f30
add esp 0x4
push 0x0
push eax
push edi
push ebx
jmp r-xdata
dec edi
mov edx [ esi + 0x6c ]
mov ecx esi
push 0x1
push 0xd67
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
movzx ebx [ ecx + ecx + r--data ]
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
dec ebx
push 0xcb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] 0x1
cmp [ esi + 0x88 ] 0x0
je r-xdata
mov ecx ebp
call sub_47bcd7
mov edx [ esi + 0x70 ]
mov eax [ esp + 0x5c ]
mov ecx [ ebp + 0x14 ]
lea ebx [ ebp + 0x14 ]
lea edx [ edx + edx * 2 ]
mov [ ecx + edx * 4 ] eax
mov edx [ esi + 0x70 ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x40 ]
lea edx [ edx + edx * 2 ]
mov [ eax + edx * 4 + 0x4 ] ecx
mov ecx ebp
mov edx [ esi + 0x70 ]
inc edx
mov [ esi + 0x70 ] edx
call sub_47bcd7
mov eax 0xdfff
mov ecx ebp
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
or [ ebp ] 0x30
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd800
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xda00
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xd900
jmp r-xdata
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0xc ]
test eax eax
jle r-xdata
mov edx [ esp + 0x8 ]
mov ecx esi
push eax
call sub_47be4d
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esi + 0x1148 ] 0x0
mov edi 0xffffffff
jne r-xdata
call sub_43c15b
add esp 0x10
jmp r-xdata
mov [ edi ] bx
jmp r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor edi edi
mov ecx esi
inc edi
push edi
push edi
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
cmp [ esi + 0x148 ] 0x0
je r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
mov eax [ esi + 0x6c ]
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xda00
jmp r-xdata
xor edi edi
mov [ esi + 0x174 ] 0xd900
jmp r-xdata
xor edi edi
mov [ esi + 0x170 ] 0xdb00
jmp r-xdata
mov ecx [ esi + 0xe5c ]
test ecx ecx
jle r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov eax [ esi + 0x128 ]
mov [ ecx ] 0x0
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x128 ]
inc edi
cmp edi eax
jl r-xdata
xor ebx ebx
xor edi edi
xor edi edi
mov [ esi + 0xdc ] 0x0
jmp r-xdata
xor eax eax
mov edi 0xffffffff
mov [ esi + 0x8c ] eax
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] eax
jne r-xdata
inc eax
mov [ esi + 0x6c ] eax
or [ ebp ] 0x10
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x80 ]
jne r-xdata
mov edx eax
mov [ esi + 0x70 ] 0x0
mov ecx esi
push 0x1
push 0xc85
call sub_474f94
add esp 0x8
mov edx [ esi + 0x70 ]
mov ebp eax
mov ecx esi
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
mov ecx esi
add edx 0x2
push [ esi + 0x6c ]
call sub_47bbd8
add esp 0x4
mov edx [ esi + 0x70 ]
inc eax
mov [ esi + 0x6c ] eax
mov edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx ] eax
jge r-xdata
mov ecx esi
mov edx edi
push 0x1
push 0xd3d
call sub_474f94
add esp 0x8
mov ecx eax
mov eax [ esi + 0x12c ]
cmp eax [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
mov [ esp + 0x18 ] edi
je r-xdata
mov edx edi
push ebp
call sub_47bc7e
mov ecx [ esp + 0xc ]
add esp 0x4
mov eax [ ecx + 0x14 ]
inc edi
mov [ eax + ebx ] 0x45
add ebx 0xc
cmp edi [ esi + 0x12c ]
jl r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov ecx [ esi + 0x128 ]
dec ecx
cmp eax ecx
jge r-xdata
mov edx [ esi + 0x7c ]
xor ebx ebx
mov ecx esi
inc ebx
push ebx
push ebx
push eax
call sub_47b914
add esp 0xc
jmp r-xdata
cmp [ esi + 0xe60 ] 0x0
mov edi 0xffffffff
jg r-xdata
mov edi 0xffffffff
jne r-xdata
xor ecx ecx
xor edi edi
mov [ esi + 0xe48 ] ecx
dec edi
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
xor eax eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x8c ] eax
inc eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp [ esi + 0xe58 ] 0x0
mov edi 0xffffffff
jns r-xdata
jmp r-xdata
sub_47b126
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x10 ]
mov edx r--data
cmp [ esi + 0x148 ] 0x0
jne r-xdata
push ecx
push edx
push edi
call sub_432778
add esp 0xc
pop esi
pop edi
pop ebx
retn
mov edx [ esp + 0x1c ]
cmp [ esi + 0x140 ] 0x0
je r-xdata
xor ebx ebx
cmp [ esi + 0x1138 ] 0x0
sete bl
jmp r-xdata
test edx edx
mov esi r--data
mov edx r--data
setne al
xor al bl
cmovne edx esi
sub_47b1ad
push esi
mov esi [ esp + 0x8 ]
xor eax eax
mov [ esi + 0xe48 ] eax
mov [ esi + 0xe58 ] eax
mov [ esi + 0xe54 ] eax
mov [ esi + 0xe60 ] eax
mov [ esi + 0xe5c ] eax
push esi
call sub_4733cc
add esp 0x4
cmp [ esi + 0xe48 ] 0x2
jne r-xdata
mov ecx esi
pop esi
jmp sub_4775a6
pop esi
retn
sub_47b212
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x60 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
call sub_43ff80
add esp 0xc
cmp [ esi + 0x1098 ] 0x0
jne r-xdata
xor eax eax
pop esi
retn
xor eax eax
inc eax
mov [ esi + 0x1098 ] eax
mov [ esi + 0x154 ] eax
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov ecx esi
mov [ esi + 0xbc ] 0x1
mov [ esi + 0x10a8 ] 0x0
call sub_474eb4
cmp [ esi + 0xe48 ] 0x2
je r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov [ esi + 0x1098 ] 0x0
mov ecx esi
call sub_4775a6
sub_47b2a5
push ebx
push edi
push esi
sub esp 0x10
mov esi [ esp + 0x28 ]
test esi esi
jle r-xdata
xor eax eax
add esp 0x10
pop esi
pop edi
pop ebx
retn
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
test al 0x60
je r-xdata
mov [ esp ] ebx
mov [ esp + 0xc ] 0x2
mov [ esp + 0x8 ] r--data
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov [ esp + 0x8 ] edi
mov [ esp ] ebx
mov [ esp + 0xc ] 0x1
call sub_47b212
mov al [ edi ]
cmp al 0xa
jne r-xdata
sub_47b31d
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0xc ]
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
cmp [ esi + 0x10fc ] 0x0
mov eax r--data
mov ecx r--data
push r--data
push edi
call sub_4a7d00
add esp 0x8
xor ecx ecx
test eax eax
jne r-xdata
push ecx
call sub_43f79e
add esp 0x4
pop esi
pop edi
retn
push [ esi + 0x1088 ]
call sub_484d62
add esp 0x4
test eax eax
mov eax r--data
mov ecx r--data
jmp r-xdata
cmovne ecx eax
sub_47b389
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0xc ] eax
mov esi [ ebp + 0x20 ]
test esi esi
je r-xdata
push 0xc
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
mov [ ebp + 0x20 ] esi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
cmp [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp + 0x14 ]
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ebx [ ebp + 0x4 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
cmp ecx eax
jae r-xdata
lea eax [ ebp + 0x14 ]
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push ebx
call sub_4a7f30
add esp 0x4
mov edi eax
push edi
push ebx
push [ esp + 0x2c ]
call sub_47b2a5
add esp 0xc
mov eax [ ebp + 0xc ]
cmp [ eax + edi - 0x1 ] 0xa
je r-xdata
push ebx
call sub_4a7f30
add esp 0x4
mov edi eax
push edi
push ebx
push [ esp + 0x2c ]
call sub_47b2a5
add esp 0xc
mov eax [ ebp + 0x4 ]
cmp [ eax + edi - 0x1 ] 0xa
je r-xdata
cmp ecx eax
jae r-xdata
mov edi [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
xor edi edi
push 0x1
push r--data
push [ esp + 0x2c ]
call sub_47b2a5
add esp 0xc
push 0x1
push r--data
push [ esp + 0x2c ]
call sub_47b2a5
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
mov [ ebp + 0x20 ] 0x0
inc esi
xor esi esi
dec esi
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
push eax
push [ esp + 0x8 ]
push [ esp + 0x2c ]
call sub_47b2a5
add esp 0xc
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x0
mov eax [ ebp + 0x18 ]
push r--data
push [ eax + edi * 4 ]
call sub_43f9e1
add esp 0x8
mov eax [ ebp + 0x14 ]
inc edi
cmp edi eax
jl r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp ]
mov ecx [ esi ]
mov ebp [ esp + 0x28 ]
mov eax [ eax ]
test edi edi
je r-xdata
mov al [ ebx ]
inc ebx
dec edi
movsx ecx al
mov [ esp + 0xb ] al
cmp ecx 0x1a
jg r-xdata
cmp ecx 0x7f
je r-xdata
lea edx [ ecx - 0x3 ]
cmp edx 0xa
ja r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp ecx 0x1b
jne r-xdata
cmp ecx 0x15
je r-xdata
jmp [ edx * 4 + jump_table_4189bc ]
test edi edi
jne r-xdata
cmp [ ebp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
sub esp 0x10
mov eax [ esp + 0x34 ]
mov [ esp ] eax
mov [ esp + 0xc ] 0x2
mov [ esp + 0x8 ] r--data
call sub_47b212
add esp 0x10
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x28 ]
xor esi esi
mov [ eax + 0x20 ] 0x0
jmp r-xdata
jmp r-xdata
dec eax
mov [ esi + 0x8 ] eax
jmp r-xdata
sub esp 0x10
mov eax [ esp + 0x34 ]
mov [ esp ] eax
mov [ esp + 0xc ] 0x3
mov [ esp + 0x8 ] r--data
call sub_47b212
add esp 0x10
mov eax [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
inc eax
push eax
push ebp
call sub_43f96a
add esp 0x8
mov al [ esp + 0xb ]
mov [ esp + 0x4 ] al
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
lea eax [ edx + 0x1 ]
mov [ esi + 0x8 ] eax
mov al [ esp + 0x4 ]
mov [ ecx + edx ] al
cmp [ ebp + 0x4 ] 0x0
je r-xdata
cmp al 0x1f
setg cl
cmp al 0x7f
setne dl
cmp al 0x9f
ja r-xdata
cmp [ ebp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov ecx [ esi ]
mov ebp [ esp + 0x28 ]
mov eax [ eax ]
cmp ecx eax
jb r-xdata
sub esp 0x10
lea eax [ esp + 0x1b ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x34 ]
mov [ esp ] eax
mov [ esp + 0xc ] 0x1
call sub_47b212
add esp 0x10
and cl dl
je r-xdata
dec eax
mov [ esi + 0x8 ] eax
jne r-xdata
sub esp 0x10
mov eax [ esp + 0x34 ]
mov [ esp ] eax
mov [ esp + 0xc ] 0x3
mov [ esp + 0x8 ] r--data
call sub_47b212
add esp 0x10
mov eax [ esi + 0x8 ]
mov eax [ ebp + 0x18 ]
cmp [ esi + 0x4 ] 0x0
mov ebp [ eax + ecx * 4 ]
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_47b6c6
push ebp
push ebx
push edi
push esi
sub esp 0x20
mov edi [ rw-data ]
mov eax [ esp + 0x34 ]
mov esi ecx
test edx edx
mov [ esp + 0x1c ] edi
je r-xdata
mov edi [ esi + 0x128 ]
xor ebx ebx
xor ecx ecx
inc ecx
mov [ esp + 0x4 ] ecx
mov ebx [ esi + 0x6c ]
mov [ esp + 0x4 ] 0x0
lea edi [ ebx + 0x1 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov ebx [ esi + 0x6c ]
mov ebp [ esi + 0x70 ]
mov ecx [ esp + 0x38 ]
xor ebp ebp
test eax eax
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] ebp
jne r-xdata
mov eax [ esi + 0x6c ]
lea ecx [ esp + 0x18 ]
xor edi edi
mov [ ecx ] eax
lea ecx [ esp + 0x14 ]
mov edx [ esi + 0x70 ]
cmp edx [ esi + 0x12c ]
cmovne edi edx
mov [ ecx ] edi
mov edi ecx
lea ecx [ esp + 0x18 ]
cmove edi ecx
lea ecx [ esp + 0x18 ]
inc [ edi ]
mov edi [ ecx ]
lea ecx [ esp + 0x14 ]
mov ecx [ ecx ]
mov [ esp ] ecx
test eax eax
mov [ esp ] 0x0
jne r-xdata
jne r-xdata
cmp [ esi + 0xe54 ] edi
jge r-xdata
cmp [ esi + 0xe5c ] ebx
jle r-xdata
mov eax [ esi + 0x6c ]
mov edx [ esi + 0x70 ]
mov [ esp ] 0x0
jmp r-xdata
mov eax ebp
or eax ebx
je r-xdata
cmp [ esi + 0xe60 ] ebp
jg r-xdata
jne r-xdata
xor ecx ecx
lea eax [ esi + 0xe54 ]
mov [ esi + 0xe48 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx esi
push eax
call sub_47bbd8
add esp 0x4
cmp edi [ esi + 0x128 ]
jne r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ esp ]
cmp [ esi + 0xe58 ] eax
jl r-xdata
cmp [ esp ] 0x0
sete al
cmp [ esp + 0x4 ] 0x0
setne cl
and cl al
xor eax eax
cmp [ esi + 0x1118 ] eax
je r-xdata
push esi
call sub_475c80
add esp 0x4
mov edx [ esp + 0x10 ]
cmp ebx edx
sete cl
cmp ebp [ esp ]
setl al
and al cl
cmp ebx edx
jl r-xdata
mov [ esp + 0x8 ] ecx
mov [ esp + 0x10 ] edi
mov ecx esi
mov edx ebx
push 0x1
push 0x975
call sub_474f94
add esp 0x8
mov edi eax
lea ecx [ esi + 0x54 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
test cl cl
je r-xdata
mov eax [ esi + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
test al al
jne r-xdata
cmp edi [ esi + 0x128 ]
jne r-xdata
cmp ebp eax
jne r-xdata
mov ecx esi
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov eax [ esi + 0x12c ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test edi edi
jle r-xdata
mov edx [ esi + 0x8 ]
mov ecx esi
call sub_475f77
mov edi eax
inc edi
mov ecx edi
mov edx ebp
push [ esp + 0xc ]
call sub_47bc7e
add esp 0x4
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x1a4 ] 0x0
jne r-xdata
jmp r-xdata
xor edx edx
mov ecx esi
push 0x1
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_47b914
add esp 0xc
cmp ebp [ esi + 0x12c ]
lea ebp [ ebp + 0x1 ]
jne r-xdata
movzx eax [ edi ]
and eax 0xffcf
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
call sub_497c4a
add esp 0x20
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esi + 0x14 ] 0x0
inc ebx
xor ebp ebp
cmp ebx [ esi + 0x128 ]
jge r-xdata
mov [ edi ] ax
mov ecx esi
mov edx ebx
push 0x1
push 0x981
call sub_474f94
add esp 0x8
mov edi eax
xor ebp ebp
sub_47b914
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov edi ecx
mov ecx [ esp + 0x24 ]
test edx edx
jne r-xdata
xor ebp ebp
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
neg ecx
cmp eax ecx
cmovle ecx eax
test ecx ecx
jle r-xdata
cmp eax ecx
cmovle ecx eax
test ecx ecx
jle r-xdata
mov ebp [ esp + 0x28 ]
jmp r-xdata
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x20 ]
lea esi [ edi + 0x54 ]
inc eax
mov [ esp ] eax
lea esi [ edi + 0x54 ]
mov [ esp ] ebp
mov eax [ esp + 0x20 ]
mov [ esp + 0x8 ] edx
sub eax edx
inc eax
test ecx ecx
js r-xdata
mov [ ebx ] 0x0
mov ebp [ esp + 0x8 ]
push ebp
push ebx
push [ edi + 0x8 ]
call sub_47e319
add esp 0xc
mov eax [ edi + 0xe54 ]
cmp eax ebp
jl r-xdata
xor ebp ebp
mov ecx edi
mov edx ebx
push [ edi + 0x12c ]
call sub_47be4d
add esp 0x4
cmp [ edi + 0x12c ] 0x0
jle r-xdata
cmp [ edi + 0x130 ] 0x0
jle r-xdata
mov eax [ edi + 0xe5c ]
cmp eax ebp
jl r-xdata
cmp eax [ esp + 0x20 ]
jg r-xdata
mov ecx ebx
mov edx ebp
push esi
call sub_47bc7e
add esp 0x4
inc ebp
cmp ebp [ edi + 0x12c ]
jl r-xdata
mov [ ebx ] 0x0
push [ esp + 0x20 ]
push ebx
push [ edi + 0x8 ]
call sub_47e319
add esp 0xc
mov ebp [ esp ]
mov edx [ esp + 0x8 ]
test ebp ebp
mov eax edx
je r-xdata
xor ebp ebp
push [ edi + 0x4 ]
call sub_47dc82
add esp 0x4
mov ebp eax
cmp ebp [ edi + 0x130 ]
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp ecx 0x1
lea ecx [ ecx - 0x1 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
lea ecx [ eax + 0x1 ]
mov [ edi + 0xe54 ] ecx
jl r-xdata
cmp [ edi + 0xe48 ] 0x0
je r-xdata
xor eax eax
sub eax [ edi + 0x130 ]
mov ecx ebx
mov edx ebp
push esi
call sub_47bc7e
add esp 0x4
inc ebp
cmp ebp [ edi + 0x12c ]
jl r-xdata
inc [ edi + 0x14 ]
dec ebp
push 0x0
push [ edi + 0x4 ]
call sub_47e541
add esp 0x8
push eax
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov [ esp + 0x4 ] ecx
push [ esp + 0x20 ]
push [ edi + 0x8 ]
call sub_47e541
add esp 0x8
mov ebx eax
mov ecx edi
mov edx ebx
push [ edi + 0x12c ]
call sub_47be4d
add esp 0x4
cmp [ edi + 0x12c ] 0x0
jle r-xdata
cmp eax [ esp + 0x20 ]
lea ecx [ eax + 0x1 ]
mov [ edi + 0xe5c ] ecx
jl r-xdata
mov eax [ esp ]
mov [ edi + 0xe54 ] eax
mov [ edi + 0xe58 ] 0x0
mov ecx [ esp + 0x4 ]
cmp ecx 0x1
lea ecx [ ecx - 0x1 ]
jg r-xdata
mov ecx [ edi + 0xe54 ]
cmp ecx eax
jl r-xdata
xor ecx ecx
sub ecx [ edi + 0x130 ]
cmp eax ecx
jle r-xdata
mov ecx ebx
call sub_475a63
push ebp
push eax
push [ edi + 0x4 ]
call sub_47e319
add esp 0xc
mov eax [ edi + 0x10 ]
test eax eax
jns r-xdata
mov eax [ esp ]
mov [ edi + 0xe5c ] eax
mov [ edi + 0xe60 ] 0x0
mov [ esp + 0x4 ] ecx
push edx
push [ edi + 0x8 ]
call sub_47e541
add esp 0x8
mov ebx eax
test ebp ebp
je r-xdata
jmp r-xdata
mov ecx [ edi + 0xe5c ]
cmp ecx eax
jl r-xdata
cmp ecx [ esp + 0x20 ]
jg r-xdata
dec eax
mov [ edi + 0x10 ] eax
mov ecx [ edi + 0xe64 ]
cmp ecx eax
jl r-xdata
cmp ecx [ esp + 0x20 ]
jg r-xdata
lea ebx [ ecx - 0x1 ]
cmp ecx eax
mov [ edi + 0xe54 ] ebx
jg r-xdata
cmp ecx [ esp + 0x20 ]
jg r-xdata
lea ebx [ ecx - 0x1 ]
cmp ecx eax
mov [ edi + 0xe5c ] ebx
jg r-xdata
mov [ edi + 0xe54 ] eax
mov [ edi + 0xe58 ] 0x0
lea ebx [ ecx - 0x1 ]
cmp ecx eax
mov [ edi + 0xe64 ] ebx
jg r-xdata
mov [ edi + 0xe5c ] eax
mov [ edi + 0xe60 ] 0x0
mov [ edi + 0xe64 ] eax
mov [ edi + 0xe68 ] 0x0
sub_47bbd8
push ebx
push edi
push esi
mov esi edx
mov ebx ecx
test esi esi
jle r-xdata
pop esi
pop edi
pop ebx
retn
cmp [ ebx + 0x12c ] esi
jl r-xdata
mov edx [ esp + 0x10 ]
mov ecx ebx
push 0x1
push 0x92f
call sub_474f94
add esp 0x8
mov edi eax
mov eax [ ebx + 0x12c ]
cmp eax [ edi + 0x4 ]
je r-xdata
cmp eax esi
jne r-xdata
mov ecx ebx
mov edx edi
push eax
call sub_47be4d
add esp 0x4
mov eax [ ebx + 0x12c ]
mov eax [ edi + 0x14 ]
lea ecx [ esi + esi * 2 ]
cmp [ eax + ecx * 4 ] 0xdfff
jne r-xdata
and [ edi ] 0xdf
jmp r-xdata
lea edx [ esi - 0x1 ]
mov ecx edi
call sub_47bcd7
mov ecx edi
mov edx esi
call sub_47bcd7
mov eax [ edi + 0x14 ]
shl esi 0x2
lea ecx [ esi + esi * 2 ]
mov [ eax + ecx - 0xc ] 0xd820
mov eax [ edi + 0x14 ]
mov edx [ eax + ecx - 0x4 ]
mov [ eax + ecx + 0x8 ] edx
movsd xmm0 [ eax + ecx - 0xc ]
movsd [ eax + ecx ] xmm0
sub_47bc7e
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov esi edx
mov edi ecx
call sub_47bcd7
mov eax [ edi + 0x14 ]
mov edx [ ebx + 0x8 ]
lea ecx [ esi * 4 ]
lea ecx [ ecx + ecx * 2 ]
mov [ eax + ecx + 0x8 ] edx
movsd xmm0 [ ebx ]
movsd [ eax + ecx ] xmm0
mov eax [ edi + 0x14 ]
mov [ eax + ecx + 0x8 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
lea eax [ eax + eax * 2 ]
mov ecx edi
mov edx esi
lea ebx [ ebx + eax * 4 ]
push [ ebx ]
call sub_47bd42
add esp 0x4
pop esi
pop edi
pop ebx
retn
sub_47bcd7
push ebp
push ebx
push edi
push esi
mov edi edx
mov esi ecx
test edi edi
js r-xdata
push 0x100
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ esi + 0x4 ] edi
jg r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ esi + 0x10 ]
add ebx edi
mov [ esi + 0x10 ] ebx
mov ecx [ esi + 0x14 ]
lea eax [ edi + edi * 2 ]
mov ebx [ ecx + eax * 4 + 0x8 ]
test ebx ebx
je r-xdata
mov ebx edi
lea ebp [ ebx + ebx * 2 ]
mov edi [ ecx + ebp * 4 + 0x8 ]
test edi edi
lea edi [ edi + ebx ]
jne r-xdata
mov edi edx
lea ecx [ ecx + ebp * 4 + 0x8 ]
sub edi ebx
test edx edx
cmove edi edx
xor edx edx
mov [ ecx ] edi
mov ecx [ esi + 0x14 ]
mov [ ecx + eax * 4 + 0x8 ] edx
sub_47bd42
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov edi edx
mov esi ecx
test edi edi
js r-xdata
push 0xce
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ esi + 0x4 ] edi
jg r-xdata
mov ebp [ esi + 0x8 ]
mov eax [ esi + 0x14 ]
lea ebx [ esi + 0x14 ]
mov ecx ebp
sub ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x1f
add edx ecx
sar edx 0x1
lea ecx [ ebp + edx + 0x10 ]
mov [ esi + 0x8 ] ecx
push 0xc
push ecx
push eax
call sub_43f8db
add esp 0xc
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] ebp
mov edx [ esi + 0x8 ]
cmp ebp edx
jge r-xdata
lea ebx [ esi + 0x14 ]
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov [ esp ] ebx
mov edx [ ebx ]
lea ecx [ ebp + 0x1 ]
lea ebp [ ebp + ebp * 2 ]
cmp ecx edx
mov edx 0x0
setl dl
mov [ eax + ebp * 4 + 0x8 ] edx
mov edx [ esi + 0x8 ]
cmp ecx edx
jge r-xdata
mov ebp edi
lea ecx [ ebp + ebp * 2 ]
mov edi [ edx + ecx * 4 + 0x8 ]
test edi edi
lea edi [ edi + ebp ]
jne r-xdata
mov edi [ esi + 0x10 ]
lea ebx [ edi * 4 ]
lea ebx [ ebx + ebx * 2 ]
mov eax [ edx + ebx + 0x8 ]
mov [ esp + 0x4 ] esi
test eax eax
lea esi [ eax + edi ]
cmovne eax esi
mov esi [ esp + 0x4 ]
sub edi ebp
mov [ esi + 0x10 ] eax
xor eax eax
mov esi [ esp + 0x1c ]
mov [ edx + ebx + 0x8 ] eax
mov edx [ esp ]
mov eax [ edx ]
mov [ eax + ebx ] esi
mov eax [ edx ]
mov [ eax + ecx * 4 + 0x8 ] edi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ ebp * 4 + 0x14 ]
mov [ esp ] ebx
mov ebp [ esi + 0x14 ]
inc ecx
xor ebx ebx
cmp ecx edx
setl bl
mov [ ebp + eax ] ebx
add eax 0xc
mov edx [ esi + 0x8 ]
cmp ecx edx
jl r-xdata
mov ebx [ esp ]
sub_47be4d
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov esi edx
mov edi [ esp + 0x24 ]
mov ebp [ esi + 0x4 ]
cmp ebp edi
je r-xdata
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp + 0xc ] ecx
mov [ esp + 0x4 ] esi
jle r-xdata
lea eax [ esi + 0x8 ]
lea ebx [ esi + 0x14 ]
mov [ esp ] eax
mov ebx edi
test ebp ebp
jle r-xdata
mov ecx [ esp + 0x24 ]
lea edx [ ebp + ebp * 2 ]
mov esi ecx
lea ecx [ esi + esi * 2 ]
lea ecx [ eax + ecx * 4 ]
lea eax [ eax + edx * 4 ]
mov edx [ esp ]
mov edx [ edx ]
sub edx esi
shl edx 0x2
lea edx [ edx + edx * 2 ]
push edx
push eax
push ecx
call sub_49a770
add esp 0xc
mov ecx esi
mov edx ebx
call sub_47bcd7
inc ebx
cmp ebp ebx
jne r-xdata
cmp ebp edi
jle r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
cmp [ esp + 0x24 ] 0x0
jle r-xdata
mov ecx [ esi + 0x14 ]
lea edx [ edi + edi * 2 ]
lea ebx [ esi + 0x14 ]
mov eax [ esi + 0x8 ]
lea esi [ ebp + ebp * 2 ]
lea edx [ ecx + edx * 4 ]
lea ecx [ ecx + esi * 4 ]
mov esi [ esp + 0x4 ]
mov [ esp + 0x8 ] edx
lea edx [ esi + 0x8 ]
mov [ esp ] edx
sub eax [ esi + 0x4 ]
shl eax 0x2
lea eax [ eax + eax * 2 ]
push eax
push ecx
push [ esp + 0x10 ]
call sub_49a770
add esp 0xc
jmp r-xdata
cmp ebp [ esp + 0x24 ]
mov esi [ esp + 0xc ]
jge r-xdata
add eax edi
mov [ ecx + 0x10 ] eax
xor eax eax
mov ecx 0x8
inc eax
mov eax [ esi + 0x8 ]
sub edi ebp
add eax edi
mov [ esi + 0x8 ] eax
push 0xc
push eax
push [ ebx ]
call sub_43f8db
add esp 0xc
mov ecx [ esp + 0x24 ]
mov [ ebx ] eax
cmp ebp ecx
mov [ esi + 0x4 ] ecx
jge r-xdata
shl ebp 0x2
add esi 0x48
lea eax [ ebp + ebp * 2 ]
cmp eax ebp
jge r-xdata
add esi edi
mov [ edx + ecx ] esi
mov ecx [ ebx ]
mov edx [ esi + 0x8 ]
mov [ ecx + eax + 0x8 ] edx
movsd xmm0 [ esi ]
movsd [ ecx + eax ] xmm0
add eax 0xc
dec edi
jne r-xdata
add ecx 0xc
cmp eax [ esp + 0x24 ]
lea eax [ eax + 0x1 ]
jl r-xdata
mov edx [ ebx ]
mov esi [ edx + ecx ]
test esi esi
je r-xdata
sub_47bf8d
push edi
push esi
mov esi [ esp + 0xc ]
xor eax eax
mov edi [ esp + 0x10 ]
cmp [ esi + 0x10a4 ] 0x0
je r-xdata
cmp [ esi + 0x10a8 ] 0x0
je r-xdata
cmp [ esi + 0x10ac ] edi
jne r-xdata
cmp [ esi + 0x138 ] 0x0
je r-xdata
cmp [ esi + 0x10b0 ] edi
jne r-xdata
xor eax eax
xor ecx ecx
cmp [ esi + 0xc0 ] eax
sete cl
mov [ esi + 0xc0 ] ecx
mov ecx esi
mov [ esi + 0x10a4 ] eax
call sub_474e5f
xor eax eax
inc eax
test eax eax
je r-xdata
cmp [ esi + 0x13c ] edi
jne r-xdata
xor eax eax
xor ecx ecx
cmp [ esi + 0xbc ] eax
sete cl
mov [ esi + 0xbc ] ecx
mov ecx esi
mov [ esi + 0x10a8 ] eax
call sub_474eb4
xor eax eax
inc eax
cmp [ esi + 0x109c ] 0x0
je r-xdata
pop esi
pop edi
jmp sub_4733cc
mov [ esi + 0x138 ] 0x0
jmp r-xdata
pop esi
pop edi
retn
cmp [ esi + 0x10a0 ] edi
je r-xdata
sub_47c03d
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov [ esp + 0x4 ] ecx
mov esi edx
mov eax [ rw-data ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
xor ecx ecx
xor ebx ebx
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x2fa
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebp 0x7e
lea ecx [ ebx - 0x7e ]
mov [ esp + 0xc ] edi
sub ebp eax
lea eax [ ebx * 4 ]
mov [ esp ] ecx
lea edi [ eax + eax * 2 ]
mov ebp eax
lea eax [ ebx * 4 ]
lea ecx [ ebx + 0x1 ]
not ebp
lea edi [ eax + eax * 2 ]
mov [ esp ] ecx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ esi + 0x14 ]
add eax edi
push edx
push esi
push eax
push ecx
call [ esp + 0x3c ]
add esp 0x10
inc ebx
add edi 0xc
inc ebp
jne r-xdata
push 0x2e9
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x14 ]
lea ecx [ esp + 0x10 ]
add eax edi
push ecx
push esi
push eax
push [ esp + 0x10 ]
call [ esp + 0x3c ]
add esp 0x10
inc ebx
add edi 0xc
inc ebp
jne r-xdata
push 0x2f3
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp ebx [ esi + 0x4 ]
jl r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp ]
add ecx eax
mov eax [ esi + 0x4 ]
mov ebx ecx
cmp ecx eax
jl r-xdata
cmp ebx [ esi + 0x4 ]
jl r-xdata
jmp r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x4 ]
mov eax [ edx ]
lea edi [ ecx + 0x1 ]
mov [ edx + 0x4 ] edi
movzx eax [ eax + ecx ]
test al al
mov [ esp + 0x8 ] eax
js r-xdata
jmp r-xdata
cmp ecx eax
je r-xdata
sub_47c176
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
lea edx [ eax + 0x1 ]
mov [ ebx + 0x4 ] edx
movzx eax [ ecx + eax ]
test al al
js r-xdata
cmp al 0xbf
ja r-xdata
or eax [ esi ]
jmp r-xdata
cmp al 0xdf
ja r-xdata
and eax 0x3f
shl eax 0x8
mov [ edi ] eax
jmp r-xdata
mov [ edi ] eax
and eax 0xffffff00
mov [ esi ] eax
pop esi
pop edi
pop ebx
retn
cmp al 0xef
ja r-xdata
and eax 0x1f
shl eax 0x10
mov [ edi ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
lea edx [ ecx + 0x1 ]
mov [ ebx + 0x4 ] edx
movzx eax [ eax + ecx ]
or eax [ edi ]
cmp al 0xf0
je r-xdata
and eax 0xf
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
lea edx [ ecx + 0x1 ]
mov [ ebx + 0x4 ] edx
movzx eax [ eax + ecx ]
shl eax 0x8
or [ edi ] eax
lea eax [ edx + 0x1 ]
mov [ ebx + 0x4 ] eax
movzx eax [ ecx + edx ]
push 0x319
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
shl eax 0x18
mov [ edi ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
lea edx [ ecx + 0x1 ]
mov [ ebx + 0x4 ] edx
movzx eax [ eax + ecx ]
shl eax 0x10
or [ edi ] eax
sub_47c239
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov edi [ esi + 0x4 ]
mov edx [ esi ]
lea ecx [ edi + 0x1 ]
mov [ esi + 0x4 ] ecx
lea ecx [ edi + 0x2 ]
movzx ebx [ edx + edi ]
mov [ esi + 0x4 ] ecx
movzx ecx [ edx + edi + 0x1 ]
shl ebx 0x8
or ecx ebx
cmp ecx 0x8000
jb r-xdata
mov edx ecx
mov ebx ecx
mov edi ecx
shr ecx 0x13
shr ebx 0xe
and edx 0x7ffff0
and edi 0xf
and ecx 0xf0
mov esi edx
and ebx 0x1e000
shl edx 0x8
shl esi 0x4
or ebx edi
and edx 0x7ffe0000
and esi 0x1f00
or ecx ebx
or ecx esi
or ecx edx
mov [ eax + 0x4 ] ecx
pop esi
pop edi
pop ebx
retn
lea ebx [ edi + 0x3 ]
shl ecx 0x10
mov [ esi + 0x4 ] ebx
and ecx 0x7fff0000
movzx ebx [ edx + edi + 0x2 ]
shl ebx 0x8
or ebx ecx
lea ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
movzx ecx [ edx + edi + 0x3 ]
or ecx ebx
sub_47c2d5
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov esi [ esp + 0x34 ]
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x4 ]
lea ebx [ esp + 0x8 ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x14 ]
mov [ esp ] eax
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edx ] eax
push edx
push esi
push ebx
mov ebp ecx
push ecx
call sub_47c176
add esp 0x10
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
sub edi [ esp ]
sar edi 0x2
imul edi edi 0xaaaaaaab
mov ecx esi
mov edx edi
push eax
call sub_47bd42
add esp 0x4
lea eax [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x0
push eax
push esi
push ebx
push ebp
call sub_47c176
add esp 0x10
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
sub_47c364
push ebx
push esi
mov esi ecx
mov ebx edx
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jge r-xdata
lea eax [ ecx + ecx * 2 ]
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
add ecx 0x200
mov [ esi + 0x8 ] ecx
push 0x1
push ecx
push [ esi ]
call sub_43f8db
add esp 0xc
mov [ esi ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ esi + 0x4 ] edx
mov [ eax + ecx ] bl
pop esi
pop ebx
retn
sub_47c3a9
push ebp
push ebx
push edi
push esi
sub esp 0x2c
mov eax [ rw-data ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x24 ]
mov esi [ edx + 0x14 ]
mov [ eax ] 0x0
mov eax [ edx + 0x4 ]
xor edx edx
mov [ esp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov esi [ esp + 0x4 ]
mov eax ebx
neg eax
test eax eax
jle r-xdata
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x4 ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] edi
lea ecx [ esp + 0x24 ]
mov edi [ ebx + 0x4 ]
push ecx
mov [ esp + 0xc ] eax
push eax
push ebx
mov [ esp + 0x1c ] ebp
call [ esp + 0x4c ]
mov edx [ esp + 0x1c ]
add esp 0xc
mov ebp [ ebx + 0x4 ]
xor esi esi
sub ebp edi
cmp ebp edx
jne r-xdata
mov eax [ esp ]
mov [ esi + 0x4 ] eax
cmp eax 0x81
jl r-xdata
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x8 ]
mov [ esp + 0x1c ] esi
dec ebx
add eax 0xc
cmp ebx 0xffffff80
jne r-xdata
mov eax [ ebx ]
lea ecx [ eax + edi ]
add eax [ esp + 0x14 ]
push edx
push ecx
push eax
mov ebx edx
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edx [ esp ]
mov eax 0xff
sub eax ebx
mov [ ecx + edx ] al
jmp r-xdata
push 0x1f5
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0xc ]
lea ecx [ ecx + ebx ]
test ecx ecx
jle r-xdata
mov ecx [ esp + 0x4 ]
mov esi [ esp ]
mov edi eax
mov eax 0xff
sub eax ebx
mov edx [ ecx ]
mov [ edx + esi ] al
xor edx edx
mov eax [ ecx + 0x4 ]
mov [ esp ] eax
call sub_47c364
add [ esp + 0xc ] ebx
mov eax edi
jmp r-xdata
cmp [ esp + 0x1c ] 0x0
jne r-xdata
mov ecx [ esp + 0x28 ]
call sub_497c4a
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebx ebx
xor edi edi
xor ebp ebp
mov [ esp + 0x1c ] 0x0
cmp [ esp + 0x1c ] 0x0
je r-xdata
cmp ebx 0x2
mov esi 0x1
jge r-xdata
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
mov ecx esi
not ecx
mov esi [ esp + 0x18 ]
mov eax esi
neg eax
cmp eax 0x1
jg r-xdata
mov eax [ esp ]
mov ebx [ esp + 0x14 ]
inc eax
cmp ebx eax
je r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ edi ]
mov ebp ecx
lea ecx [ eax + ebx + 0x1 ]
add eax ebx
push edx
push eax
push ecx
call sub_49a770
mov edx ebx
mov ebx ebp
add esp 0xc
mov eax [ esp + 0x10 ]
lea ecx [ ebx - 0x1 ]
cmp ecx 0x80
lea eax [ eax + edx + 0x1 ]
mov [ edi + 0x4 ] eax
jb r-xdata
mov edx [ esp + 0x10 ]
mov edi [ esp + 0x4 ]
mov ecx 0xfffffffe
sub ecx esi
sub [ esp + 0x14 ] edx
jmp r-xdata
push 0x1a1
push r--data
push r--data
call sub_4a509d
add esp 0xc
add ebx edx
mov [ edi + 0x4 ] ebx
push 0x1a7
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x1c ]
add esp 0xc
mov eax [ edi ]
mov ecx [ esp ]
add ebx 0xff
mov [ eax + ecx ] bl
mov [ esp ] edx
jmp r-xdata
push 0x1b2
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x20 ]
add esp 0xc
test ecx ecx
je r-xdata
lea ecx [ ebx - 0x2 ]
mov esi eax
cmp ecx 0x80
jb r-xdata
mov [ esp + 0x8 ] ebx
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x8 ]
xor ebx ebx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x20 ]
add eax 0xc
cmp [ esp + 0x1c ] 0x0
lea ecx [ ecx + esi - 0x1 ]
mov [ esp + 0xc ] ecx
setne bl
or ebx 0x2
cmp edx 0x2
jl r-xdata
mov edi [ esp + 0x4 ]
mov ecx [ esp ]
add ebx 0x7e
xor edx edx
mov eax [ edi ]
mov [ eax + ecx ] bl
mov ecx edi
mov eax [ edi + 0x4 ]
mov [ esp ] eax
jmp r-xdata
push 0x1c7
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebx [ esp + 0x8 ]
mov eax ebp
mov [ esp + 0x24 ] edi
mov eax [ ebx ]
mov ecx [ esp ]
lea ecx [ eax + ecx + 0x1 ]
add eax esi
push edx
push eax
push ecx
call sub_498a6d
add esp 0xc
test eax eax
jne r-xdata
call sub_47c364
mov eax esi
mov esi [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov eax ebp
add eax 0xc
cmp ecx 0x2
lea ebx [ esi + 0x1 ]
lea ecx [ ecx - 0x1 ]
mov [ esp + 0xc ] ecx
jl r-xdata
cmp esi 0x80
mov [ esp + 0x8 ] ebx
jl r-xdata
mov edi [ esp + 0x24 ]
lea ecx [ esp + 0x24 ]
push ecx
mov ebp eax
push eax
mov ebx [ esp + 0xc ]
push ebx
call [ esp + 0x4c ]
mov edx [ esp + 0x1c ]
add esp 0xc
mov eax [ ebx + 0x4 ]
mov esi [ esp + 0x18 ]
sub eax esi
mov [ ebx + 0x4 ] esi
cmp eax edx
jne r-xdata
jmp r-xdata
sub_47c6cd
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x10 ]
mov edx [ ebx ]
mov eax edx
and eax 0xffffff80
cmp eax [ edi ]
jne r-xdata
cmp edx 0x3fff
ja r-xdata
and edx 0x7f
jmp r-xdata
cmp edx 0x1fffff
ja r-xdata
and dh 0x3f
or dh 0x80
movzx edx dh
jmp r-xdata
mov ecx esi
call sub_47c364
mov eax 0xffffff00
and eax [ ebx ]
mov [ edi ] eax
pop esi
pop edi
pop ebx
retn
cmp edx 0xfffffff
ja r-xdata
shr edx 0x10
and dl 0x1f
or dl 0xc0
movzx edx dl
jmp r-xdata
mov ecx esi
call sub_47c364
movzx edx [ ebx ]
mov edx 0xf0
mov ecx esi
call sub_47c364
movzx edx [ ebx + 0x3 ]
shr edx 0x18
and dl 0xf
or dl 0xe0
movzx edx dl
jmp r-xdata
mov ecx esi
call sub_47c364
movzx edx [ ebx + 0x1 ]
mov ecx esi
call sub_47c364
movzx edx [ ebx + 0x2 ]
sub_47c76f
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
mov edx [ eax + 0x4 ]
mov ecx edx
mov eax edx
mov edi edx
and edx 0xf
shr ecx 0x4
shr eax 0x9
and edi 0x1f00
mov ebx ecx
and ecx 0xfffe000
and eax 0xf0
and ebx 0xf
or edi ecx
or ebx eax
mov ebp edi
shr edi 0x4
or edx edi
shl ebx 0x17
or ebx edx
mov edi edx
cmp ebx 0x7fff
jbe r-xdata
mov eax ebp
mov ecx esi
shr eax 0xc
movzx edx al
call sub_47c364
mov eax edi
mov ecx esi
movzx edx al
pop esi
pop edi
pop ebx
pop ebp
jmp sub_47c364
mov eax ebx
mov ecx esi
shr eax 0x18
or al 0x80
movzx edx al
call sub_47c364
shr ebx 0x10
mov ecx esi
movzx edx bl
call sub_47c364
sub_47c7fa
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov edi [ esp + 0x2c ]
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea edx [ esp + 0xc ]
xor eax eax
mov ecx esp
mov [ ecx ] eax
mov [ edx ] eax
push edx
push ecx
push [ esp + 0x30 ]
call sub_47c6cd
add esp 0xc
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebx [ esp + 0xc ]
mov [ esp + 0xc ] 0x0
push ebx
push ebp
push [ esp + 0x30 ]
call sub_47c6cd
add esp 0xc
mov eax [ edi + esi * 4 + 0x8 ]
mov edi ebp
test eax eax
jne r-xdata
push 0x272
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea esi [ eax + eax * 2 ]
lea ebp [ edi + esi * 4 ]
cmp [ ebp ] 0x0
jne r-xdata
sub_47c887
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi ecx
lea ebx [ esi + 0xf8 ]
mov [ esp + 0x8 ] eax
push ebx
call sub_43ff78
add esp 0x4
mov edi eax
cmp edi 0x6
jl r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebp [ esp + 0x4 ]
push eax
push [ esp + 0x8 ]
push [ esi + 0x104 ]
call sub_492dd2
add esp 0xc
push [ esp ]
push ebx
call sub_44000a
add esp 0x8
push ebx
call sub_43ff78
add esp 0x4
mov edi eax
cmp edi 0x5
jg r-xdata
mov eax edi
mov [ esp ] edi
mov eax esp
push eax
push ebp
push ebx
call sub_44008c
add esp 0xc
mov eax [ esp ]
add edi 0xfffffffb
cmp eax edi
jle r-xdata
sub_47c90f
push esi
mov eax [ ecx ]
cmp eax [ esp + 0x8 ]
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ esp + 0xc ]
xor eax [ ecx + 0x4 ]
test eax 0xfffffff
je r-xdata
mov eax [ ecx + 0x8 ]
mov esi [ edx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
test esi esi
sete al
pop esi
retn
test esi esi
je r-xdata
lea eax [ eax + eax * 2 ]
lea ecx [ ecx + eax * 4 ]
lea eax [ esi + esi * 2 ]
mov esi [ ecx ]
lea edx [ edx + eax * 4 ]
cmp esi [ edx ]
je r-xdata
jmp r-xdata
sub_47c955
push ebx
push edi
push esi
mov esi ecx
mov ebx [ esp + 0x10 ]
mov edi edx
mov eax [ esi ]
cmp [ esi + 0x4 ] eax
jl r-xdata
mov eax [ esi + 0xc ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0xc ] ecx
mov [ eax ] di
mov eax [ esi + 0x14 ]
lea ecx [ eax + 0x4 ]
mov [ esi + 0x14 ] ecx
mov [ eax ] ebx
inc [ esi + 0x4 ]
pop esi
pop edi
pop ebx
retn
add eax eax
mov [ esi ] eax
push 0x2
push eax
push [ esi + 0x8 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x8 ] eax
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
lea eax [ eax + edx * 2 ]
mov [ esi + 0xc ] eax
mov eax 0x4
push eax
push ecx
push [ esi + 0x10 ]
call sub_43f8db
add esp 0xc
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov [ esi + 0x14 ] eax
sub_47c9c3
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov edi [ esp + 0x34 ]
mov ebp edx
mov ebx ecx
call sub_475eb3
mov [ esp + 0x10 ] eax
xor eax eax
mov ecx ebx
mov edx ebp
push eax
push 0x167e
call sub_474f94
add esp 0x8
mov ecx [ ebx + 0xe50 ]
cmp ecx 0x2
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov [ esp + 0xc ] ebx
mov ebx [ esp + 0x30 ]
cmp ecx 0x1
je r-xdata
xor esi esi
jmp r-xdata
mov esi [ ebx + 0x12c ]
dec esi
jmp r-xdata
mov [ esp ] eax
test ebx ebx
mov ecx ebx
mov eax [ eax + 0x14 ]
jle r-xdata
test ecx ecx
jne r-xdata
test eax eax
je r-xdata
lea ecx [ ecx + ecx * 2 ]
mov edx [ eax + ecx * 4 ]
mov ecx [ esp + 0xc ]
call sub_47cd6c
cmp edi 0x1
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
xor edx edx
cmp [ eax + ecx * 4 ] 0xdfff
mov ecx ebx
sete dl
sub ecx edx
mov esi ebx
jmp r-xdata
test [ eax ] 0x10
jne r-xdata
mov eax ebp
mov edx esi
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
neg [ esp + 0x10 ]
mov ecx [ esp ]
cwde
mov [ esp + 0x14 ] eax
jmp r-xdata
cwde
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ esp + 0x4 ] ebp
mov [ esp ] eax
mov eax [ eax + 0x14 ]
mov edx [ ecx + 0x12c ]
lea ecx [ edx + edx * 2 ]
mov esi edx
test edx edx
lea ecx [ eax + ecx * 4 ]
mov edx ecx
jle r-xdata
push [ eax + 0x14 ]
mov edi esi
mov esi eax
call sub_43f9d4
add esp 0x4
push esi
mov esi edi
call sub_43f9d4
add esp 0x4
mov eax ecx
lea ecx [ ebx + ebx * 2 ]
mov [ esp + 0x4 ] ebp
lea edi [ ebx - 0x1 ]
lea ebp [ ecx * 4 - 0xc ]
mov [ esp + 0x4 ] ebp
mov ebp [ esp ]
mov eax [ esp + 0xc ]
movzx ecx [ ebp ]
mov eax [ eax + 0x12c ]
mov [ esp + 0x8 ] ebp
mov [ esp ] ecx
shl ecx 0x1a
sar ecx 0x1f
lea eax [ eax + ecx - 0x1 ]
mov [ esp + 0x14 ] eax
lea eax [ ebx + ebx * 2 ]
lea edi [ eax * 4 + 0xc ]
lea ebp [ edx - 0xc ]
cmp edx ecx
cmovne ebp edx
sub ebp eax
sar ebp 0x2
imul eax ebp 0xaaaaaaab
cmp eax ebx
jle r-xdata
mov edx ecx
mov ebp [ esp + 0x4 ]
mov edi [ esp + 0xc ]
mov [ esp ] eax
cmp ebp [ esp + 0x10 ]
jg r-xdata
mov [ esp + 0x8 ] esi
mov esi eax
test edi edi
mov eax [ eax + 0x14 ]
je r-xdata
test [ esp ] 0x10
je r-xdata
mov eax [ ebp + 0x14 ]
lea ebx [ esi + 0x1 ]
test esi esi
js r-xdata
dec esi
cmp edi 0xffffffff
cmove esi eax
mov esi ebx
jmp r-xdata
cmp [ edx - 0x4 ] 0x0
jne r-xdata
and ebp 0xfffffcff
cmp ebp 0xd820
jne r-xdata
lea edx [ ebp - 0x1 ]
xor eax eax
mov ecx edi
mov [ esp + 0x18 ] edx
push eax
push 0x16bf
call sub_474f94
add esp 0x8
movzx edx [ eax ]
test dl 0x10
je r-xdata
jmp r-xdata
mov ecx ebx
cmp [ eax + ebp ] 0xdfff
mov ecx edi
je r-xdata
mov eax ebp
mov eax [ esp + 0x4 ]
mov ebx [ esp + 0xc ]
lea edx [ eax + 0x1 ]
cmp edx [ ebx + 0x128 ]
jge r-xdata
mov ecx ebx
cmp [ eax + edi ] 0xdfff
mov ecx esi
je r-xdata
mov ebp [ esp + 0x4 ]
add edx 0xfffffff4
cmp edx eax
ja r-xdata
mov eax [ esp ]
shl edx 0x1a
sar edx 0x1f
add edx [ edi + 0x12c ]
mov [ esp + 0x8 ] eax
mov edi [ eax + 0x14 ]
lea ebx [ edx - 0x1 ]
cmp edx 0x1
jle r-xdata
lea esi [ edi + 0x1 ]
test esi esi
jle r-xdata
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
dec ebx
mov edx [ eax + ecx * 4 - 0xc ]
mov ecx [ esp + 0xc ]
call sub_47cd6c
dec edi
add ebp 0xfffffff4
cmp eax [ esp + 0x14 ]
mov eax esi
je r-xdata
mov ebp edx
mov ecx ebx
push 0x0
push 0x16a4
call sub_474f94
add esp 0x8
mov [ esp ] eax
mov ecx ebx
mov edi [ eax + 0x14 ]
mov edx [ edi ]
call sub_47cd6c
cmp eax [ esp + 0x10 ]
je r-xdata
mov esi ebx
cmp esi [ esp + 0x14 ]
jge r-xdata
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
mov edx [ eax + ecx * 4 ]
mov ecx [ esp + 0xc ]
call sub_47cd6c
add edi 0xc
cmp eax [ esp + 0x10 ]
mov ebp [ esp + 0x8 ]
je r-xdata
mov ebp [ edx - 0xc ]
cmp ebp 0x20
je r-xdata
mov ecx edx
lea ecx [ ebx + ebx * 2 ]
cmp [ edi + ecx * 4 ] 0xdfff
mov ecx ebx
je r-xdata
mov ebp [ esp + 0x4 ]
mov esi [ esp + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
xor ebx ebx
mov edi ebp
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x8 ]
cmp [ eax + 0xc ] 0x0
mov ebp edi
je r-xdata
lea eax [ ecx + ecx * 2 ]
mov ecx [ esp + 0xc ]
mov edx [ edi + eax * 4 - 0xc ]
call sub_47cd6c
cmp eax [ esp + 0x14 ]
jne r-xdata
push [ eax + 0x14 ]
mov esi eax
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov ebp edi
mov eax [ esp + 0x8 ]
jmp r-xdata
push edi
mov edi esi
mov esi eax
call sub_43f9d4
add esp 0x4
push esi
mov esi edi
call sub_43f9d4
add esp 0x4
push edi
mov edi eax
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
push [ eax + 0x14 ]
mov esi eax
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
mov ecx [ esp + 0xc ]
add esp 0x4
mov ebp edi
mov ebp [ esp + 0x4 ]
jmp r-xdata
sub_47cd6c
mov eax edx
and eax 0xffffff00
cmp eax 0xd800
je r-xdata
mov eax [ ecx + 0x1090 ]
movzx edx dl
lea eax [ eax + edx * 2 + 0x210 ]
jmp r-xdata
cmp eax 0xda00
je r-xdata
movzx edx [ eax ]
mov eax [ ecx + 0x1090 ]
movzx edx dl
lea eax [ eax + edx * 2 + 0x10 ]
cmp eax 0xd900
jne r-xdata
mov eax [ ecx + 0x1090 ]
movzx edx dl
lea edx [ eax + edx * 2 + 0x810 ]
cmp eax 0xf100
jne r-xdata
mov eax edx
and eax 0xffffff00
cmp eax 0xf000
je r-xdata
mov eax [ ecx + 0x1090 ]
movzx edx dl
lea eax [ eax + edx * 2 + 0x610 ]
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ecx + 0x1090 ]
mov eax [ ecx + 0x1090 ]
movzx edx dl
lea edx [ eax + edx * 2 + 0x410 ]
jmp r-xdata
cmp edx 0x80
jge r-xdata
push esi
mov esi [ eax + 0x8 ]
cmp esi [ eax + 0xc ]
pop esi
jne r-xdata
movzx edx [ edx ]
jmp r-xdata
mov ecx 0x80
mov eax r--data
movsx eax [ ecx + edx * 2 + 0xe6c ]
retn
xor eax eax
cmp edx 0x20
setne al
retn
mov ecx [ eax ]
add eax 0xc
test ecx ecx
jne r-xdata
cmp edx [ eax - 0x8 ]
jle r-xdata
cmp edx ecx
jl r-xdata
mov eax 0x2
retn
mov eax [ eax - 0x4 ]
retn
sub_47ce4e
push edi
push esi
mov esi ecx
test edx edx
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
call [ GetTickCount@IAT ]
sub eax edi
cmp eax 0x63
jle r-xdata
mov ecx 0x64
mov [ esi + 0x138 ] 0x1
sub ecx eax
push esi
push sub_47bf8d
push ecx
call sub_47d9f4
add esp 0xc
mov [ esi + 0x13c ] eax
mov [ esi + 0x138 ] 0x0
jmp r-xdata
pop esi
pop edi
retn
sub_47ce9e
push ebp
push ebx
push edi
push esi
mov esi [ ecx + 0x12c ]
mov ebx [ esp + 0x18 ]
xor edi edi
test edx edx
mov eax [ esp + 0x14 ]
cmovs edx edi
cmp edx esi
lea esi [ esi - 0x1 ]
cmovl esi edx
test ebx ebx
je r-xdata
mov edx [ ecx + 0x128 ]
test eax eax
mov [ ecx + 0x70 ] esi
cmovs eax edi
cmp eax edx
lea edx [ edx - 0x1 ]
cmovl edx eax
mov [ ecx + 0x6c ] edx
mov [ ecx + 0x8c ] edi
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ ecx + 0x6c ]
mov ebp [ ecx + 0x7c ]
mov edi eax
cmp edx ebp
cmovge edi ebp
cmp ebx 0x2
cmove edi ebp
cmp ebp eax
cmovle edi eax
mov eax [ ecx + 0x80 ]
mov ebp edi
cmp edi eax
cmovg ebp eax
cmp edx eax
cmovle edi ebp
cmp ebx 0x2
cmove edi ebp
mov eax edi
xor edi edi
sub_47cf1b
push ebp
push ebx
push edi
push esi
sub esp 0x20
mov ebx ecx
mov [ esp + 0x10 ] edx
mov ebp edx
mov ecx [ ebx + 0x12c ]
mov eax [ ebx + 0x70 ]
neg ebp
cmovl ebp edx
mov edi ecx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
sub edi eax
mov eax ebp
cmp ebp edi
cmovg eax edi
mov [ esp + 0xc ] eax
mov ecx [ ebx + 0x6c ]
mov edx [ ebx + 0xe5c ]
mov [ esp ] ebx
mov [ esp + 0x18 ] ebp
cmp ecx edx
jge r-xdata
jne r-xdata
mov esi [ ebx + 0xe54 ]
cmp esi ecx
jge r-xdata
mov esi [ esp + 0xc ]
mov eax edi
mov ecx ebx
sub eax esi
mov [ esp + 0x1c ] eax
mov edx [ ebx + 0x70 ]
push [ ebx + 0x6c ]
call sub_47bbd8
add esp 0x4
cmp [ esp + 0x10 ] 0x0
mov eax [ ebx + 0x6c ]
js r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0xe60 ]
jl r-xdata
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
mov edi [ esp + 0xc ]
xor ebx ebx
sar eax 0x1f
mov ebp edi
or eax 0x1
test eax eax
cmovg ebp ebx
cmovg ebx edi
add ebp [ esp + 0x8 ]
cmp ecx esi
jge r-xdata
mov [ esp + 0x14 ] edi
mov ecx ebx
mov edx [ ebx + 0x70 ]
add edx esi
push eax
call sub_47bbd8
add esp 0x4
mov edx [ ebx + 0x6c ]
mov ecx ebx
push 0x1
push 0x9c5
call sub_474f94
add esp 0x8
mov ecx [ esp + 0x1c ]
mov edi eax
mov esi ebx
test ecx ecx
mov edx ecx
jle r-xdata
mov edx eax
mov ecx ebx
push 0x1
push 0x9c5
call sub_474f94
add esp 0x8
cmp [ esp + 0x1c ] 0x0
mov edi eax
mov edx ebx
je r-xdata
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp [ ebx + 0xe58 ] eax
jl r-xdata
jne r-xdata
mov esi [ esp + 0x4 ]
sub esi ebx
cmp edx ecx
jge r-xdata
cmp [ esp + 0xc ] 0x0
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x18 ]
dec eax
not ecx
sub eax [ esp + 0x4 ]
cmp eax ecx
cmovge ecx eax
xor ebx ebx
xor ebp ebp
shl ecx 0x2
lea eax [ ecx + ecx * 2 ]
mov ecx 0xfffffff4
sub ecx eax
mov [ esp + 0x10 ] ecx
cmp [ esp + 0xc ] 0x0
mov eax [ esp + 0x18 ]
je r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
lea eax [ edx + edx * 2 ]
lea esi [ ecx - 0x1 ]
lea ebp [ eax * 4 - 0xc ]
lea eax [ ecx * 4 ]
sub esi edx
mov edx [ esp ]
lea eax [ eax + eax * 2 ]
sub ebp eax
mov eax [ esp + 0x18 ]
not eax
cmp esi eax
cmovge eax esi
lea ecx [ eax * 4 ]
sub esi eax
lea ebx [ ecx + ecx * 2 ]
jmp r-xdata
mov ebx [ esp ]
xor ecx ecx
lea eax [ ebx + 0xe54 ]
mov [ ebx + 0xe48 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov edi [ esp + 0x14 ]
mov esi [ esp ]
cmp ebp [ esi + 0xe58 ]
jle r-xdata
jne r-xdata
mov ebx [ esp ]
mov ecx [ ebx + 0xe60 ]
add esp 0x20
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp + 0x8 ]
not ebp
lea eax [ esi + 0x54 ]
mov [ esp + 0x10 ] eax
dec ecx
sub ecx [ esp + 0x4 ]
cmp ecx ebp
cmovge ebp ecx
inc ebp
mov ecx [ esi + 0x70 ]
mov eax [ edi + 0x14 ]
mov esi edx
lea ecx [ ecx + ecx * 2 ]
lea eax [ eax + ecx * 4 ]
mov ecx edi
lea edx [ eax + ebx ]
add eax [ esp + 0x10 ]
add eax ebx
push eax
call sub_47d9a8
mov edx esi
mov esi [ esp + 0x4 ]
add esp 0x4
inc ebp
add ebx 0xc
cmp ebp edx
jl r-xdata
mov ecx [ esp + 0x8 ]
not eax
mov ebx 0xfffffffe
lea esi [ edx + 0x54 ]
dec ecx
sub ecx [ esp + 0x4 ]
cmp ecx eax
cmovge eax ecx
sub ebx eax
xor ebp ebp
dec ebp
mov ecx [ edx + 0x70 ]
mov eax [ edi + 0x14 ]
lea ecx [ ecx + ecx * 2 ]
lea edx [ eax + ecx * 4 ]
mov ecx edi
lea eax [ edx + ebx ]
add edx ebp
lea eax [ ebp + eax + 0xc ]
push eax
call sub_47d9a8
mov edx [ esp + 0x4 ]
add esp 0x4
add ebp 0xfffffff4
inc esi
jne r-xdata
jmp r-xdata
mov ecx [ esp ]
mov ecx [ ecx + 0xe60 ]
cmp ecx esi
jle r-xdata
cmp eax ecx
jl r-xdata
push 0x9b7
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ ebx + 0xe58 ]
mov ecx [ ebx + 0x12c ]
lea edx [ ebx + ebp ]
mov ecx edi
add edx [ esi + 0x70 ]
push [ esp + 0x10 ]
call sub_47bc7e
add esp 0x4
inc ebp
jne r-xdata
mov eax [ esp ]
mov ecx edi
mov edx [ eax + 0x70 ]
add edx ebx
push esi
call sub_47bc7e
add esp 0x4
dec ebx
cmp ebx ebp
jne r-xdata
jmp r-xdata
mov ebx [ esp ]
jmp r-xdata
mov eax [ ebx + 0xe60 ]
cmp eax [ ebx + 0x70 ]
jg r-xdata
push 0x9b8
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea ebp [ ebx + 0xe60 ]
mov edx [ esp + 0xc ]
mov edi [ esp + 0x14 ]
imul eax edx
add ecx eax
add eax [ ebx + 0xe58 ]
mov [ ebx + 0xe58 ] eax
mov [ ebx + 0xe60 ] ecx
cmp eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
jge r-xdata
cmp eax [ ebx + 0x12c ]
jle r-xdata
push 0x9b9
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ ebp ]
push 0x9ba
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
sub_47d2b0
push edi
push esi
mov esi ecx
cmp [ esi + 0xa3c ] 0x0
je r-xdata
mov eax [ esi + 0x234 ]
lea edi [ esi + 0x238 ]
mov [ esi + eax + 0x238 ] 0x0
mov eax [ esi + 0x1ac ]
cmp eax 0x2
jb r-xdata
mov eax [ esi + 0x234 ]
lea ecx [ eax - 0x1 ]
test eax eax
mov [ esi + 0x234 ] ecx
je r-xdata
cmp [ esi + 0x1150 ] 0x0
jne r-xdata
je r-xdata
pop esi
pop edi
retn
movzx ecx [ esi + 0x1ac ]
add eax 0xfffffffe
cmp eax 0x1
je r-xdata
push edi
push [ esi + 0x1088 ]
call sub_48be32
add esp 0x8
mov eax [ esi + 0x1ac ]
cmp [ esi + 0x1150 ] 0x0
jne r-xdata
cmp eax 0x15
je r-xdata
movzx edx [ esi + eax + 0x239 ]
mov [ esi + edx * 2 + 0xe6c ] cx
mov [ esi + 0x234 ] eax
dec eax
cmp eax 0xfffffffe
jne r-xdata
jmp r-xdata
push edi
push [ esi + 0x1088 ]
call sub_48bdc6
add esp 0x8
jmp r-xdata
sub_47d362
push ebx
push edi
push esi
test edx edx
je r-xdata
mov esi [ ecx + 0x74 ]
mov eax [ ecx + 0x78 ]
mov [ ecx + 0x70 ] eax
mov [ ecx + 0x6c ] esi
mov edx [ ecx + 0x12c ]
cmp edx eax
jg r-xdata
mov eax [ ecx + 0x40 ]
mov edx [ ecx + 0x6c ]
mov esi [ ecx + 0x70 ]
mov [ ecx + 0x78 ] esi
mov [ ecx + 0x74 ] edx
mov [ ecx + 0x44 ] eax
mov eax [ ecx + 0x94 ]
mov [ ecx + 0x98 ] eax
mov edx [ ecx + 0xdc ]
mov [ ecx + 0xa0 ] edx
mov edx [ ecx + 0x8c ]
mov [ ecx + 0xa4 ] edx
mov eax [ ecx + eax * 4 + 0x170 ]
mov [ ecx + 0x9c ] eax
mov eax [ ecx + 0xd0 ]
mov [ ecx + 0xd4 ] eax
jmp r-xdata
mov edi [ ecx + 0x128 ]
cmp edi esi
jg r-xdata
lea eax [ edx - 0x1 ]
mov [ ecx + 0x70 ] eax
pop esi
pop edi
pop ebx
retn
mov esi [ ecx + 0x44 ]
mov edi [ ecx + 0x98 ]
dec edx
xor ebx ebx
cmp eax edx
mov [ ecx + 0x40 ] esi
mov [ ecx + 0x94 ] edi
mov esi [ ecx + 0xa0 ]
mov [ ecx + 0xdc ] esi
mov esi [ ecx + 0xa4 ]
mov eax esi
cmovl eax ebx
test esi esi
cmove eax esi
mov [ ecx + 0x8c ] eax
mov eax [ ecx + 0x9c ]
mov [ ecx + edi * 4 + 0x170 ] eax
mov eax [ ecx + 0xd4 ]
mov [ ecx + 0xd0 ] eax
mov eax [ ecx + 0x50 ]
mov [ ecx + 0x5c ] eax
movsd xmm0 [ ecx + 0x48 ]
movsd [ ecx + 0x54 ] xmm0
cmp [ ecx + 0xb8 ] ebx
je r-xdata
dec edi
mov [ ecx + 0x6c ] edi
mov eax 0x3ffff
and eax [ ecx + 0x40 ]
mov [ ecx + 0x58 ] eax
sub_47d460
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
cmp [ esp + 0x10 ] 0x0
mov esi ecx
je r-xdata
cmp edx 0x13
jg r-xdata
cmp edx 0x2e
jg r-xdata
cmp edx 0x14
je r-xdata
cmp edx 0x4
je r-xdata
cmp edx 0x3f6
jle r-xdata
lea eax [ edx - 0x1 ]
cmp eax 0x9
ja r-xdata
mov [ esi + 0x150 ] edi
jmp r-xdata
cmp edx 0x22
jne r-xdata
test [ esi ] 0x8
je r-xdata
cmp edx 0xc
jne r-xdata
cmp edx 0x3e9
jg r-xdata
cmp edx 0x417
jle r-xdata
cmp edx 0x19
jne r-xdata
jmp [ eax * 4 + jump_table_4189e8 ]
pop esi
pop edi
pop ebx
retn
movzx eax [ esi ]
test ax 0x4010
je r-xdata
mov [ esi + 0xe44 ] 0x0
mov [ esi + 0x90 ] edi
jmp r-xdata
xor eax eax
test edi edi
sete al
mov [ esi + 0xc8 ] eax
mov eax [ esi + 0x1084 ]
test eax eax
je r-xdata
cmp edx 0x3ea
je r-xdata
cmp edx 0x2f
je r-xdata
cmp edx 0x3f7
je r-xdata
cmp edx 0x418
je r-xdata
movzx eax [ esi ]
test ax 0x4010
je r-xdata
mov [ esi + 0x140 ] edi
jmp r-xdata
xor eax eax
test edi edi
sete al
mov [ esi + 0x158 ] eax
jmp r-xdata
push eax
jmp r-xdata
xor eax eax
test edi edi
setne al
add eax eax
mov [ esi + 0x15c ] eax
push edi
push [ esi + 0x1088 ]
cmp edx 0x3ee
jne r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
cmp edx 0x3e8
jne r-xdata
xor eax eax
test edi edi
setne al
mov [ esi + 0x164 ] eax
jmp r-xdata
cmp edx 0x417
jne r-xdata
cmp [ esi + 0x1134 ] 0x0
jne r-xdata
cmp edx 0x419
je r-xdata
mov [ esi + 0xb0 ] edi
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
call sub_43c0cc
add esp 0x4
jmp r-xdata
xor eax eax
test edi edi
setne al
mov [ esi + 0x160 ] eax
jmp r-xdata
xor ebx ebx
mov ecx esi
mov [ esi + 0xe48 ] ebx
mov [ esi + 0xe58 ] ebx
mov [ esi + 0xe54 ] ebx
mov [ esi + 0xe60 ] ebx
mov [ esi + 0xe5c ] ebx
cmp [ esi + 0x1134 ] ebx
cmovne edi ebx
mov edx edi
push ebx
push ebx
xor eax eax
test edi edi
setne al
mov [ esi + 0x15c ] eax
push edi
push [ esi + 0x1088 ]
jmp r-xdata
test [ esi + 0x1 ] 0x40
je r-xdata
test edi edi
jne r-xdata
mov ecx esi
mov edx edi
call sub_47d362
test edi edi
je r-xdata
cmp edx 0x7d4
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
mov [ esi + 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
call sub_489dfa
add esp 0x8
jmp r-xdata
xor ebx ebx
mov ecx esi
mov [ esi + 0xe48 ] ebx
mov [ esi + 0xe58 ] ebx
mov [ esi + 0xe54 ] ebx
mov [ esi + 0xe60 ] ebx
mov [ esi + 0xe5c ] ebx
cmp [ esi + 0x1134 ] ebx
cmovne edi ebx
xor eax eax
inc eax
mov edx edi
push eax
push eax
jmp r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
cmp [ esi + 0x1134 ] 0x0
jne r-xdata
xor eax eax
test edi edi
setne al
mov [ esi + 0x16c ] eax
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
call sub_474b0b
add esp 0x8
cmp [ esi + 0x1168 ] ebx
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
jmp r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
mov ecx esi
mov edx edi
call sub_47d362
jmp r-xdata
xor eax eax
mov edx edi
mov ecx esi
mov [ esi + 0xe48 ] eax
mov [ esi + 0xe58 ] eax
mov [ esi + 0xe54 ] eax
mov [ esi + 0xe60 ] eax
mov [ esi + 0xe5c ] eax
cmp [ esi + 0x1134 ] eax
cmovne edx eax
push eax
push 0x1
call sub_474b0b
add esp 0x8
test edi edi
jne r-xdata
cmp [ esi + 0x1168 ] 0x0
je r-xdata
cmp [ esi + 0x1134 ] 0x0
jne r-xdata
xor edx edx
mov ecx esi
call sub_47d362
sub_47d668
xor eax eax
test edi edi
sete al
mov [ esi + 0x148 ] eax
je r-xdata
mov [ esi + 0xd8 ] 0x0
xor eax eax
mov eax [ esi + 0x1104 ]
jmp r-xdata
mov [ esi + 0xc4 ] eax
mov ecx esi
pop esi
pop edi
pop ebx
jmp sub_474e5f
sub_47d686
xor ebx ebx
mov [ esi + 0xe48 ] ebx
mov [ esi + 0xe58 ] ebx
mov [ esi + 0xe54 ] ebx
mov [ esi + 0xe60 ] ebx
mov [ esi + 0xe5c ] ebx
cmp [ esi + 0x114c ] ebx
jne r-xdata
mov [ esi + 0xb4 ] edi
mov [ esi + 0x7c ] ebx
mov [ esi + 0x19c ] ebx
mov ecx [ esi + 0x12c ]
mov eax [ esi + 0x128 ]
test ecx ecx
lea ecx [ ecx - 0x1 ]
lea edx [ eax - 0x1 ]
cmovg ecx ebx
test eax eax
mov [ esi + 0x80 ] edx
mov [ esi + 0x1a0 ] edx
cmovg edx ebx
xor eax eax
mov [ esi + 0x70 ] ecx
mov ecx esi
inc eax
mov [ esi + 0x6c ] edx
mov [ esi + 0x8c ] ebx
xor edx edx
push eax
push eax
call sub_47b6c6
jmp r-xdata
test edi edi
mov eax 0x84
mov ecx 0x50
cmovne ecx eax
push [ esi + 0x128 ]
push ecx
push [ esi + 0x1088 ]
call sub_489f9b
add esp 0xc
add esp 0x8
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_47d728
mov eax [ esi + 0xa8 ]
test edi edi
jne r-xdata
test edi edi
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0xa8 ] edi
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x109c ] 0x0
jne r-xdata
test eax eax
jne r-xdata
xor edx edx
mov ecx esi
inc edx
push [ esi + 0xac ]
call sub_47ce4e
add esp 0x4
jmp r-xdata
pop esi
pop edi
pop ebx
retn
mov [ esi + 0x109c ] 0x1
push esi
push sub_47bf8d
push 0x14
call sub_47d9f4
add esp 0xc
mov [ esi + 0x10a0 ] eax
jmp r-xdata
call [ GetTickCount@IAT ]
mov [ esi + 0xac ] eax
sub_47d9a8
push edi
push esi
mov esi edx
mov edi [ esp + 0xc ]
mov eax esi
sub eax [ ecx + 0x14 ]
sar eax 0x2
imul edx eax 0xaaaaaaab
call sub_47bcd7
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
movsd xmm0 [ edi ]
movsd [ esi ] xmm0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x0
pop esi
pop edi
retn
mov ecx esi
sub ecx edi
sar ecx 0x2
imul ecx ecx 0xaaaaaaab
sub eax ecx
mov [ esi + 0x8 ] eax
sub_47d9f4
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
call sub_47da91
call [ GetTickCount@IAT ]
xor esi esi
mov [ rw-data ] eax
inc esi
test edi edi
cmovne esi edi
add esi eax
push 0x10
push 0x1
call sub_43f807
add esp 0x8
mov edi eax
mov [ edi ] ebp
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] esi
mov eax [ rw-data ]
mov [ edi + 0xc ] eax
push edi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
cmp edi eax
je r-xdata
push [ edi + 0x4 ]
push [ rw-data ]
call sub_47dcb3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push [ edi + 0x8 ]
call sub_48a8fd
add esp 0x4
push 0x0
push [ rw-data ]
call sub_47e33c
add esp 0x8
cmp eax edi
jne r-xdata
sub_47da91
cmp [ rw-data ] 0x0
je r-xdata
push sub_47dbab
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
push sub_47dc0f
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
retn
retn
sub_47dad1
push ebp
push ebx
push edi
push esi
call sub_47da91
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
push 0x0
push [ rw-data ]
call sub_47e33c
add esp 0x8
mov edi eax
xor esi esi
test edi edi
je r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x18 ]
push 0x0
push [ rw-data ]
call sub_47e541
add esp 0x8
push edi
mov edx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
mov ecx [ rw-data ]
add edx 0xfffffff6
mov ebp eax
sub ecx edx
sub ebp edx
cmp ecx ebp
jbe r-xdata
push 0x0
push [ edi + 0x4 ]
push [ rw-data ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
xor esi esi
mov [ ebx ] eax
inc esi
push 0x0
push [ rw-data ]
call sub_47e541
add esp 0x8
push [ edi + 0x8 ]
push [ edi + 0x4 ]
call [ edi ]
add esp 0x8
push edi
jmp r-xdata
call sub_43f9d4
add esp 0x4
push 0x0
push [ rw-data ]
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
jne r-xdata
sub_47dbab
push ebp
push ebx
push edi
push esi
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov esi [ rw-data ]
mov eax [ ecx + 0x8 ]
mov edi [ edx + 0x8 ]
sub eax esi
sub edi esi
xor esi esi
dec esi
cmp eax edi
jge r-xdata
cmp eax edi
jle r-xdata
mov eax esi
jmp r-xdata
mov edi [ ecx ]
mov ebx [ edx ]
bswap edi
bswap ebx
cmp edi ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
xor ebp ebp
inc ebp
xor eax eax
dec eax
cmp edi ebx
cmovae eax ebp
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ ecx + 0x4 ] eax
mov eax esi
jb r-xdata
test eax eax
jne r-xdata
seta al
movzx eax al
sub_47dc50
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
call sub_47dc50
mov ecx [ esi + 0x8 ]
call sub_47dc50
mov ecx [ esi + 0xc ]
call sub_47dc50
mov ecx [ esi + 0x10 ]
call sub_47dc50
push esi
call sub_43f9d4
add esp 0x4
sub_47dc82
push esi
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor eax eax
xor edx edx
xor eax eax
add eax [ ecx + edx * 4 + 0x14 ]
inc edx
cmp edx 0x4
jne r-xdata
xor edx edx
xor esi esi
inc esi
cmp [ ecx + edx * 4 + 0x24 ] esi
sbb eax 0xffffffff
inc edx
cmp edx 0x3
jne r-xdata
jmp r-xdata
pop esi
retn
sub_47dccf
push ebp
push ebx
push edi
push esi
sub esp 0x24
mov esi ecx
mov ebp edx
mov eax [ esi ]
test eax eax
je r-xdata
push 0x30
push 0x1
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ esi ] eax
mov [ eax + 0x2c ] ecx
mov eax [ esi ]
mov [ eax + 0x28 ] ecx
mov eax [ esi ]
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
mov eax [ esi ]
mov [ eax + 0x10 ] ecx
mov eax [ esi ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
mov [ eax + 0x18 ] ecx
mov eax [ esi ]
mov [ eax + 0x14 ] ecx
mov eax [ esi ]
mov [ eax + 0x20 ] ecx
mov eax [ esi ]
mov [ eax + 0x1c ] ecx
mov eax [ esi ]
mov [ eax ] ecx
mov eax [ esi ]
mov [ eax + 0x24 ] ebp
jmp r-xdata
mov edi [ esp + 0x38 ]
xor ebx ebx
mov [ esp + 0x1c ] esi
mov [ esp + 0x4 ] ebp
inc ebx
mov eax ebp
add esp 0x24
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esi + 0x24 ]
mov ebp [ esp + 0x8 ]
push ebp
mov eax [ esp + 0x24 ]
call [ eax + 0x4 ]
add esp 0x8
test eax eax
js r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor ebp ebp
je r-xdata
mov ebp edi
jmp r-xdata
mov eax [ esi + 0x14 ]
xor ebp ebp
cmp edi eax
jle r-xdata
mov esi eax
test edi edi
js r-xdata
lea eax [ esi + ebp * 4 + 0x4 ]
lea ecx [ esi + 0x24 ]
mov [ esp + 0x18 ] eax
lea eax [ esi + 0x28 ]
mov [ esp + 0xc ] eax
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ebp [ esi + 0x24 ]
jmp r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + ebp * 4 + 0x4 ]
test eax eax
jne r-xdata
dec edi
sub edi eax
mov eax [ esi + 0x18 ]
cmp edi eax
jle r-xdata
mov eax [ esp + 0x4 ]
xor ebp ebp
xor edi edi
xor edx edx
xor ebx ebx
mov [ esp ] eax
mov edx ecx
mov ecx [ esp + 0x4 ]
xor edi edi
xor ebp ebp
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x14 ] 0x0
mov [ esp ] ecx
mov ecx edx
mov ebp ebx
jmp r-xdata
push eax
push ebp
mov eax [ esp + 0x24 ]
call [ eax + 0x4 ]
add esp 0x8
test eax eax
js r-xdata
dec edi
mov ebp 0x2
sub edi eax
mov eax [ esi + 0x1c ]
cmp edi eax
jle r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0xc ] eax
mov eax [ esp + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ecx ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] ebp
mov eax [ esp ]
mov ecx [ esp + 0x10 ]
mov [ ecx ] eax
xor eax eax
mov ebp [ esp + 0x4 ]
mov ecx [ esp + 0x18 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x1c ] ebp
mov eax [ esp ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
xor eax eax
lea ecx [ esi + 0x8 ]
mov ebp [ esp + 0x4 ]
inc eax
jmp r-xdata
mov ebx [ esp + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp ebx ecx
je r-xdata
push 0x30
push 0x1
call sub_43f807
mov edx esi
add esp 0x8
mov ebx eax
mov eax [ edx ]
mov [ ebx ] eax
lea eax [ edx + 0x4 ]
mov esi [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
cmp esi eax
je r-xdata
je r-xdata
dec edi
mov ebp 0x3
sub edi eax
cmp edi [ esi + 0x20 ]
jle r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ eax ] esi
mov [ ecx ] ebx
mov [ esi + eax * 4 + 0x14 ] edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ esi + 0x10 ] edx
mov edx [ esi + 0x1c ]
mov [ esi + 0x20 ] edx
mov [ esi + 0x2c ] eax
mov [ esi + 0xc ] ecx
mov eax [ esi + 0x18 ]
mov [ esi + 0x1c ] eax
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x18 ] ebp
mov eax [ esp ]
mov [ edx ] eax
xor eax eax
lea ecx [ esi + 0x8 ]
cmp ebx ecx
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x14 ] edi
mov eax [ esp ]
mov [ ebx + 0x24 ] eax
mov eax [ esp + 0x14 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x18 ] ebp
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
mov [ ebx + 0x28 ] ecx
mov ecx [ edx + 0x8 ]
mov [ ebx + 0xc ] ecx
mov ecx [ edx + 0x18 ]
mov [ ebx + 0x1c ] ecx
mov ebp [ esp + 0xc ]
mov eax [ ebp ]
mov [ esp ] eax
mov eax edx
mov ecx [ edx + 0xc ]
mov edx [ eax + 0x1c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] edx
mov ecx [ eax + 0x2c ]
mov [ esi ] ecx
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0x20 ]
mov [ eax + 0x8 ] ecx
mov ecx ebx
jmp r-xdata
lea ecx [ edx + 0x8 ]
cmp esi ecx
je r-xdata
mov ebp [ esi + 0x28 ]
jmp r-xdata
mov eax [ esi + 0x2c ]
mov ebp 0x2
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0xc ]
jmp r-xdata
mov [ eax ] esi
mov ecx [ esp + 0x8 ]
mov [ ebx ] ecx
mov [ esi + eax * 4 + 0x14 ] edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x1c ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x20 ] edx
mov [ esi + 0x2c ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] ebp
mov eax [ esp ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
xor eax eax
mov ebp [ esp + 0x4 ]
inc eax
mov eax [ esp + 0x14 ]
lea ebx [ esi + 0xc ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x20 ] ebp
mov eax [ esp ]
mov [ esi + 0x2c ] eax
mov eax 0x2
jmp r-xdata
add ecx 0x4
xor esi esi
mov [ eax + 0x18 ] edx
lea edx [ eax + 0xc ]
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ edx + 0x14 ]
mov [ ebx + 0x14 ] ecx
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov [ ebx + 0x24 ] ecx
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x18 ] edi
mov eax [ esp ]
mov [ ebx + 0x28 ] eax
mov eax [ esp + 0x14 ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x1c ] ebp
mov ebp [ esp + 0xc ]
mov eax [ ebp ]
mov [ esp ] eax
mov eax edx
mov ecx [ edx + 0xc ]
mov edx [ eax + 0x1c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] edx
mov ecx [ eax + 0x2c ]
mov edx [ esp + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax + 0x10 ]
mov [ esi ] ecx
mov ecx ebx
mov edx [ eax + 0x20 ]
mov eax edx
mov ecx ebx
lea edx [ eax + 0xc ]
add ecx 0x4
cmp esi edx
mov esi [ eax + 0x4 ]
mov [ ebx + 0x4 ] esi
mov esi [ eax + 0x14 ]
mov [ ebx + 0x14 ] esi
mov esi [ esp + 0x10 ]
mov esi [ esi ]
mov [ ebx + 0x24 ] esi
mov esi [ eax + 0x8 ]
mov [ ebx + 0x8 ] esi
mov esi [ eax + 0x18 ]
mov [ ebx + 0x18 ] esi
mov esi [ esp + 0xc ]
mov esi [ esi ]
mov [ ebx + 0x28 ] esi
je r-xdata
push eax
push [ esp + 0x8 ]
mov eax [ esp + 0x24 ]
call [ eax + 0x4 ]
add esp 0x8
test eax eax
js r-xdata
xor ebp ebp
jmp r-xdata
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ eax ] esi
mov ebp [ esp + 0x4 ]
jmp r-xdata
inc esi
xor edi edi
mov [ edx ] edi
mov [ eax + 0x10 ] edi
mov [ ebx + 0x10 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
mov [ ebx + 0x20 ] edi
mov [ ebp ] edi
mov [ eax + 0x2c ] edi
mov [ ebx + 0x2c ] edi
mov edx eax
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov esi [ esp + 0x8 ]
mov [ ebx + 0xc ] esi
mov [ ebx + 0x1c ] edi
mov esi [ esp + 0x14 ]
mov [ eax + 0x4 ] esi
mov [ eax + 0x14 ] ebp
mov esi [ eax + 0x2c ]
mov edi [ esp + 0x10 ]
mov [ edi ] esi
mov esi [ eax + 0x10 ]
mov edi [ eax + 0x20 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0x18 ] edi
mov esi [ eax + 0xc ]
mov [ ebx + 0xc ] esi
mov esi [ eax + 0x1c ]
mov [ ebx + 0x1c ] esi
mov esi [ esp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ eax + 0x14 ] edi
mov esi [ esp ]
mov edi [ esp + 0x10 ]
mov [ edi ] esi
mov esi [ esp + 0x14 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0x18 ] ebp
mov esi [ eax + 0x2c ]
mov [ esp ] esi
jmp r-xdata
mov ebp 0x3
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ eax ] esi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ eax ] esi
mov ecx [ ebx + 0x8 ]
mov eax [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov [ ecx ] ebx
mov ebp [ esp + 0xc ]
xor esi esi
jmp r-xdata
xor ecx ecx
inc ecx
mov eax [ esi + 0x10 ]
mov [ eax ] esi
mov ecx [ ebx + 0xc ]
test ecx ecx
je r-xdata
mov [ ecx ] ebx
mov ebp [ esi + 0x2c ]
jmp r-xdata
cmp [ eax + 0x4 ] esi
je r-xdata
xor ebx ebx
xor edx edx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ecx ] ebx
mov [ eax + edi * 4 + 0x14 ] edx
mov esi [ esi ]
mov eax [ esi ]
test eax eax
jne r-xdata
cmp [ eax + 0x8 ] esi
mov edi ecx
je r-xdata
add edx [ esi + ebx * 4 + 0x14 ]
inc ebx
cmp ebx 0x4
jne r-xdata
xor ebx ebx
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
mov [ eax ] edx
xor edi edi
test esi esi
mov edx 0x0
je r-xdata
xor ebx ebx
cmp [ eax + 0xc ] esi
mov edi 0x3
sete bl
sub edi ebx
cmp [ esi + ebx * 4 + 0x24 ] ecx
sbb edx 0xffffffff
inc ebx
cmp ebx 0x3
jne r-xdata
xor edi edi
mov eax 0x5
mov [ eax ] edx
add edi [ ebx + eax * 4 ]
inc eax
cmp eax 0x9
jne r-xdata
mov eax 0x9
cmp [ ebx + eax * 4 ] esi
sbb edi 0xffffffff
inc eax
cmp eax 0xc
jne r-xdata
test edx edx
je r-xdata
xor ebp ebp
xor eax eax
xor ebp ebp
push 0x30
push 0x1
mov esi edx
call sub_43f807
add esp 0x8
mov edx [ esp + 0x1c ]
mov [ edx ] eax
mov [ eax + 0x4 ] ebx
mov eax [ edx ]
mov [ eax + 0x14 ] edi
mov eax [ edx ]
mov ecx [ esp ]
mov [ eax + 0x24 ] ecx
xor ecx ecx
mov eax [ edx ]
mov [ eax + 0x8 ] esi
mov eax [ edx ]
mov [ eax + 0x18 ] ebp
mov eax [ edx ]
mov [ eax + 0x28 ] ecx
mov eax [ edx ]
mov [ eax + 0xc ] ecx
mov eax [ edx ]
mov [ eax + 0x1c ] ecx
mov eax [ edx ]
mov [ eax + 0x2c ] ecx
mov eax [ edx ]
mov [ eax + 0x10 ] ecx
mov eax [ edx ]
mov [ eax + 0x20 ] ecx
mov eax [ edx ]
mov [ eax ] ecx
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x4 ] edx
je r-xdata
add ebp [ edx + eax * 4 + 0x14 ]
inc eax
cmp eax 0x4
jne r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
mov ebp [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov [ ecx ] eax
mov eax [ edx ]
lea eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x8 ] edx
je r-xdata
cmp [ edx + eax * 4 + 0x24 ] esi
sbb ebp 0xffffffff
inc eax
cmp eax 0x3
jne r-xdata
jmp r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ esp + 0x18 ] eax
lea eax [ esi + 0x28 ]
lea ecx [ esi + 0x24 ]
mov [ esp + 0xc ] eax
mov eax [ esi + 0x28 ]
mov [ esp + 0x8 ] ebx
mov [ esp + 0x14 ] edx
test eax eax
jne r-xdata
lea eax [ esi + 0x8 ]
xor eax eax
cmp [ esi + 0xc ] edx
setne al
lea eax [ esi + eax * 4 + 0xc ]
jmp r-xdata
mov esi [ edx ]
test esi esi
je r-xdata
cmp [ esi + 0x2c ] 0x0
mov [ esp + 0x10 ] ecx
je r-xdata
jmp r-xdata
lea eax [ esi + 0x4 ]
cmp [ esp + 0x18 ] eax
je r-xdata
sub_47e319
mov eax [ esp + 0xc ]
test eax eax
js r-xdata
xor eax eax
retn
mov ecx [ esp + 0x4 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
push eax
call sub_47dccf
add esp 0x4
retn
sub_47e33c
push edi
push esi
mov ecx [ esp + 0x10 ]
xor eax eax
test ecx ecx
js r-xdata
pop esi
pop edi
retn
mov edx [ esp + 0xc ]
mov edx [ edx ]
test edx edx
je r-xdata
xor esi esi
mov eax 0x5
add esi [ edx + eax * 4 ]
inc eax
cmp eax 0x9
jne r-xdata
xor edi edi
mov eax 0x9
inc edi
cmp [ edx + eax * 4 ] edi
sbb esi 0xffffffff
inc eax
cmp eax 0xc
jne r-xdata
xor eax eax
cmp esi ecx
jg r-xdata
mov esi [ edx + 0x14 ]
cmp ecx esi
jge r-xdata
jmp r-xdata
dec ecx
sub ecx esi
js r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + 0x24 ]
jmp r-xdata
mov esi [ edx + 0x18 ]
cmp ecx esi
jge r-xdata
dec ecx
sub ecx esi
js r-xdata
add edx 0x8
jmp r-xdata
mov eax [ edx + 0x28 ]
jmp r-xdata
mov esi [ edx + 0x1c ]
cmp ecx esi
jge r-xdata
mov edx [ edx ]
jmp r-xdata
dec ecx
sub ecx esi
js r-xdata
add edx 0xc
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edx + 0x2c ]
jmp r-xdata
add edx 0x10
sub_47e3cc
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ esp + 0x24 ]
mov ebx [ eax ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
test ecx ecx
mov [ esp + 0x4 ] ecx
jne r-xdata
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x30 ]
xor edi edi
test edx edx
mov [ esp + 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
xor eax eax
dec eax
mov [ esp ] eax
mov eax esi
or eax 0x2
cmp eax 0x3
je r-xdata
cmp [ esp ] 0x0
jns r-xdata
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
xor ecx ecx
dec ecx
cmp esi 0x3
cmovne ecx eax
cmp esi 0x1
cmove ecx esi
mov [ esp + 0x8 ] ecx
push 0x21b
push r--data
push r--data
mov ebp edx
call sub_4a509d
mov edx ebp
add esp 0xc
mov ecx [ esp + 0x30 ]
mov eax ecx
or eax 0x2
cmp eax 0x3
jne r-xdata
mov ebx [ ebx + ebp * 4 + 0x4 ]
test ebx ebx
jne r-xdata
test eax eax
js r-xdata
push ecx
push edx
mov ebx edx
call [ esp + 0xc ]
mov edx ebx
mov ebx [ esp + 0x14 ]
add esp 0x8
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
xor esi esi
dec esi
xor eax eax
inc eax
cmp ecx eax
cmovne esi eax
xor ebp ebp
xor esi esi
mov [ esp + 0xc ] ebx
dec esi
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
cmp [ ebx + esi * 4 + 0x8 ] 0x0
je r-xdata
mov eax [ esp ]
mov eax [ ebx + eax * 4 + 0x24 ]
mov [ eax ] edi
test eax eax
je r-xdata
dec eax
cmp eax 0x2
sbb esi esi
jmp r-xdata
test eax eax
je r-xdata
add edi [ ebx + esi * 4 + 0x18 ]
mov [ ebx ] esi
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ebx [ esp + 0x34 ]
add esi edi
push esi
push eax
call sub_47e33c
add esp 0x8
test ebx ebx
je r-xdata
inc esi
mov ebp esi
mov [ esp ] esi
inc edi
inc ebp
inc esi
xor eax eax
inc eax
cmp esi eax
jle r-xdata
mov ecx [ ebx + esi * 4 + 0x28 ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_47e541
push ebx
push edi
push esi
mov edx [ esp + 0x14 ]
test edx edx
js r-xdata
xor eax eax
pop esi
pop edi
pop ebx
retn
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
test eax eax
je r-xdata
xor esi esi
xor edi edi
xor esi esi
pop esi
pop edi
pop ebx
jmp sub_47e58c
add esi [ eax + edi * 4 + 0x14 ]
inc edi
cmp edi 0x4
jne r-xdata
xor edi edi
xor ebx ebx
inc ebx
cmp [ eax + edi * 4 + 0x24 ] ebx
sbb esi 0xffffffff
inc edi
cmp edi 0x3
jne r-xdata
jmp r-xdata
cmp esi edx
jle r-xdata
sub_47e58c
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov [ esp + 0x10 ] ecx
xor eax eax
mov ebx [ ecx ]
dec eax
xor ebp ebp
mov ecx edx
mov [ esp ] eax
inc ebp
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
xor esi esi
mov ebx [ esp ]
jmp r-xdata
mov [ esp + 0x8 ] eax
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
xor esi esi
cmp ecx eax
jl r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + ebx * 4 + 0x24 ]
mov edi [ ebx + esi * 4 + 0x4 ]
cmp [ edi + 0x28 ] 0x0
je r-xdata
dec ecx
sub ecx eax
js r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
mov [ esp + 0xc ] ebx
je r-xdata
test edi edi
mov ebx edi
jne r-xdata
mov esi ebx
xor ebx ebx
jmp r-xdata
mov eax [ ebx + 0x18 ]
cmp ecx eax
jge r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ ebx + esi * 4 + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + esi * 4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
dec ecx
sub ecx eax
js r-xdata
mov esi ebp
jmp r-xdata
mov edx [ esi + ebx * 4 + 0x4 ]
cmp [ edx + 0x28 ] 0x0
mov edi edx
mov [ esp ] ebx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
test esi esi
je r-xdata
cmp [ eax + 0x28 ] 0x0
je r-xdata
cmp esi 0x3
je r-xdata
mov [ esp + 0x4 ] ecx
mov edx 0x2
mov ebp [ edi + 0x8 ]
cmp [ eax + 0x2c ] 0x1
mov ecx [ edi + 0x4 ]
mov [ edi + 0xc ] ebp
sbb edx 0x0
mov ebp [ edi + 0x18 ]
mov [ edi + 0x1c ] ebp
mov ebp [ edi + 0x24 ]
mov [ edi + 0x28 ] ebp
mov [ edi + 0x8 ] ecx
mov ecx [ edi + 0x14 ]
mov [ edi + 0x18 ] ecx
mov ecx [ ebx + esi * 4 + 0x20 ]
mov [ edi + 0x24 ] ecx
mov ecx [ eax + edx * 4 + 0x8 ]
mov [ edi + 0x4 ] ecx
test ecx ecx
mov ebp [ eax + edx * 4 + 0x18 ]
mov [ edi + 0x14 ] ebp
je r-xdata
mov eax ebp
mov esi ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov esi 0x2
cmp ecx eax
jl r-xdata
mov [ esp + 0x8 ] eax
mov eax [ esi + ebx * 4 + 0x8 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov ecx edx
mov edx eax
cmp [ ecx + 0x4 ] 0x0
mov eax ecx
je r-xdata
mov edi eax
cmp ebx 0x1
jg r-xdata
push esi
mov esi eax
call sub_43f9d4
mov eax esi
add esp 0x4
mov ecx [ esp + 0x10 ]
mov [ ecx ] 0x0
mov [ esp + 0x4 ] ecx
xor esi esi
dec esi
mov eax [ ebx + esi * 4 + 0x14 ]
lea ecx [ ecx + eax + 0x1 ]
mov [ esp + 0x4 ] ecx
jmp r-xdata
mov [ esp + 0x4 ] ecx
mov ecx [ ebx + esi * 4 + 0x24 ]
mov [ edi + 0x28 ] ecx
mov ecx [ eax + 0x4 ]
mov [ edi + 0xc ] ecx
test ecx ecx
mov edx [ eax + 0x14 ]
mov [ edi + 0x1c ] edx
je r-xdata
mov ecx [ eax + edx * 4 + 0x24 ]
mov ebx [ esp + 0xc ]
mov [ ebx + esi * 4 + 0x20 ] ecx
xor ecx ecx
xor ebp ebp
mov [ eax + edx * 4 + 0x8 ] ecx
mov [ eax + edx * 4 + 0x18 ] ecx
mov [ eax + edx * 4 + 0x24 ] ecx
mov edx 0x5
inc ebp
mov [ ecx ] edi
dec ecx
mov esi 0x3
sub ecx eax
js r-xdata
mov ecx [ esi + ebx * 4 + 0x24 ]
mov [ edx + 0x28 ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0xc ] ecx
test ecx ecx
mov edx [ eax + 0x14 ]
mov [ edi + 0x1c ] edx
mov edx edi
je r-xdata
mov edx eax
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov ecx edi
mov [ esi + ebx * 4 + 0x24 ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
dec ebx
mov ecx [ eax + 0x24 ]
mov [ edi + 0x24 ] ecx
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
test ecx ecx
mov edx [ eax + 0x14 ]
mov [ edi + 0x14 ] edx
je r-xdata
mov [ ecx ] edi
mov edi [ ebx + esi * 4 + 0x8 ]
mov eax [ ebx + esi * 4 + 0x4 ]
mov edx [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ edi + 0x10 ] edx
mov edx [ edi + 0x18 ]
mov [ edi + 0x20 ] edx
mov edx [ edi + 0x24 ]
mov [ edi + 0x2c ] edx
mov [ edi + 0xc ] ecx
mov ecx [ edi + 0x14 ]
mov [ edi + 0x1c ] ecx
mov ecx [ ebx + esi * 4 + 0x24 ]
mov [ edi + 0x28 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edi + 0x8 ] ecx
test ecx ecx
mov edx [ eax + 0x18 ]
mov [ edi + 0x18 ] edx
je r-xdata
mov ecx [ eax + 0x24 ]
mov edx [ esp + 0xc ]
mov [ edx + esi * 4 + 0x24 ] ecx
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x18 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] edx
xor edx edx
dec edx
mov [ ecx ] edi
add ecx [ edi + edx * 4 ]
inc edx
cmp edx 0x9
jne r-xdata
mov ebx [ esp ]
mov edx 0x9
mov esi ebx
mov ebx 0x2
mov ecx [ eax + 0x24 ]
mov [ edx + 0x2c ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x10 ] ecx
test ecx ecx
mov edx [ eax + 0x18 ]
mov [ edi + 0x20 ] edx
mov edx edi
je r-xdata
mov [ ecx ] edx
mov ecx edx
mov edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ ecx + 0x24 ]
mov [ esi + ebx * 4 + 0x24 ] ecx
mov ebx eax
xor ecx ecx
mov eax [ esp + 0x8 ]
jmp r-xdata
xor ecx ecx
cmp [ eax + 0x28 ] 0x0
setne cl
lea eax [ eax + ecx * 4 + 0x24 ]
add eax 0x2c
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
mov ecx eax
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
xor ecx ecx
inc ecx
inc ebx
mov [ esi + ebx * 4 + 0x28 ] eax
inc ebx
test ebx ebx
jle r-xdata
xor ecx ecx
mov edx 0x5
mov [ ecx ] edi
inc edx
xor ecx ecx
test edi edi
mov [ eax + edx * 4 + 0x8 ] ecx
mov [ eax + edx * 4 + 0x18 ] ecx
mov [ eax + edx * 4 + 0x24 ] ecx
mov edx 0x0
je r-xdata
mov ebp [ eax + edx * 4 + 0x10 ]
mov ebx [ eax + edx * 4 + 0x20 ]
mov [ eax + edx * 4 + 0xc ] ebp
mov [ eax + edx * 4 + 0x1c ] ebx
mov [ eax + edx * 4 + 0x28 ] ecx
inc edx
jle r-xdata
cmp [ edi + edx * 4 ] ebp
sbb ecx 0xffffffff
inc edx
cmp edx 0xc
jne r-xdata
mov edx [ esp + 0xc ]
mov [ edx + esi * 4 + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
add ecx [ edx + esi * 4 + 0x10 ]
test eax eax
mov [ esp ] ebx
mov [ esp + 0x4 ] ecx
je r-xdata
push eax
call sub_43f9d4
mov ebx edi
add esp 0x4
xor eax eax
mov ecx 0x5
mov [ ecx ] edx
mov eax [ eax ]
mov [ esi + ebx * 4 + 0x24 ] eax
mov eax edx
mov ecx [ esi + ebx * 4 + 0x14 ]
mov ebx edi
dec ecx
jmp r-xdata
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
xor eax eax
cmp [ ecx + 0x8 ] 0x0
setne al
mov eax [ ecx + eax * 4 + 0x4 ]
xor edx edx
cmp [ eax + 0x8 ] esi
mov edx ecx
je r-xdata
mov eax [ esi + ebx * 4 + 0x2c ]
test eax eax
je r-xdata
add ecx [ edi + edx * 4 ]
inc edx
cmp edx 0x9
jne r-xdata
mov edx 0x9
mov ebx [ esp + 0xc ]
mov [ ebx + esi * 4 + 0x14 ] edx
xor edx edx
xor ebp ebp
xor edx edx
mov ecx [ eax + edx * 4 + 0x2c ]
test ecx ecx
je r-xdata
xor ecx ecx
xor edx edx
xor ecx ecx
add eax [ ebx + ecx * 4 ]
inc ecx
cmp ecx 0x9
jne r-xdata
mov ecx 0x9
cmp [ eax + 0x4 ] esi
je r-xdata
dec [ eax + edx * 4 + 0x14 ]
mov esi [ esi ]
mov eax [ esi ]
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + 0xc ] esi
mov edx 0x3
sete bl
sub edx ebx
jmp r-xdata
cmp [ edi + edx * 4 ] ebp
sbb ecx 0xffffffff
inc edx
cmp edx 0xc
jne r-xdata
mov ebx [ esp + 0xc ]
mov [ ebx + esi * 4 + 0x18 ] ecx
push eax
call sub_43f9d4
add esp 0x4
cmp esi 0x2
jg r-xdata
add edx [ eax + ecx * 4 + 0x14 ]
inc ecx
cmp ecx 0x4
jne r-xdata
xor ecx ecx
xor ebp ebp
inc ebp
add edx [ edi + ebp * 4 + 0x14 ]
inc ebp
cmp ebp 0x4
jne r-xdata
xor ebp ebp
xor ebx ebx
inc ebx
add ecx [ eax + edx * 4 + 0x14 ]
inc edx
cmp edx 0x4
jne r-xdata
xor edx edx
cmp [ ebx + ecx * 4 ] ebp
sbb eax 0xffffffff
inc ecx
cmp ecx 0xc
jne r-xdata
mov ecx [ esp ]
mov [ esi + ecx * 4 + 0x14 ] eax
cmp ecx 0x1
mov eax ecx
jg r-xdata
mov edx ebx
mov ebx [ esp ]
jmp r-xdata
mov eax [ ebx + esi * 4 + 0x8 ]
mov edx ebx
test eax eax
je r-xdata
cmp [ eax + ecx * 4 + 0x24 ] ebp
sbb edx 0xffffffff
inc ecx
cmp ecx 0x3
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax + esi * 4 + 0x18 ] edx
mov ecx [ esp + 0x4 ]
jmp r-xdata
cmp [ edi + ebp * 4 + 0x24 ] ebx
sbb edx 0xffffffff
inc ebp
cmp ebp 0x3
jne r-xdata
cmp [ eax + edx * 4 + 0x24 ] ebp
sbb ecx 0xffffffff
inc edx
cmp edx 0x3
jne r-xdata
jmp r-xdata
xor ecx ecx
mov [ esi + eax * 4 + 0x24 ] ecx
mov [ esi + eax * 4 + 0x8 ] ecx
mov [ esi + eax * 4 + 0x18 ] ecx
cmp [ esi + 0x24 ] ecx
jne r-xdata
mov eax [ esp ]
dec eax
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ edx + esi * 4 + 0x4 ] eax
mov [ edx + esi * 4 + 0x14 ] eax
mov ebx [ esp ]
mov ebx [ esp ]
mov eax [ esp + 0xc ]
mov [ eax + esi * 4 + 0x10 ] ecx
mov eax [ esp + 0x4 ]
sub eax ecx
mov ecx eax
jmp r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebx + 0x18 ]
lea ecx [ eax + ecx + 0x1 ]
mov eax [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
mov [ eax ] ebx
mov [ ebx ] 0x0
push esi
call sub_43f9d4
mov ebx edi
add esp 0x4
inc eax
mov [ esi + eax * 4 + 0x28 ] ecx
mov ebx edi
mov ecx [ esi + eax * 4 + 0x10 ]
mov edx [ esi + eax * 4 + 0x20 ]
mov [ esi + eax * 4 + 0xc ] ecx
mov [ esi + eax * 4 + 0x1c ] edx
inc eax
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
mov [ edi ] 0x0
push edx
call sub_43f9d4
mov ecx [ esp + 0x8 ]
add esp 0x4
mov ebx edi
cmp [ edx + 0x24 ] 0x0
mov [ esp ] ebx
jne r-xdata
mov [ edx + esi * 4 + 0x24 ] 0x0
inc esi
mov eax [ edx + esi * 4 + 0xc ]
mov ecx [ edx + esi * 4 + 0x28 ]
mov [ edx + esi * 4 + 0x24 ] ecx
inc esi
test eax eax
jne r-xdata
mov ecx [ esi + eax * 4 + 0x2c ]
test ecx ecx
je r-xdata
mov [ edx + esi * 4 + 0x4 ] eax
cmp esi 0x1
mov eax [ edx + esi * 4 + 0x18 ]
mov [ edx + esi * 4 + 0x14 ] eax
jg r-xdata
jmp r-xdata
xor eax eax
mov [ edx + esi * 4 + 0x4 ] eax
mov [ edx + esi * 4 + 0x14 ] eax
mov [ edx + esi * 4 + 0x24 ] eax
mov ecx [ esp + 0x4 ]
jmp r-xdata
sub_47eb51
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
xor esi esi
mov [ esp + 0x4 ] ecx
mov ecx esp
push ecx
push esi
push esi
push eax
push edi
call sub_47e3cc
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
retn
mov edx [ esp ]
mov ecx edi
call sub_47e58c
mov esi eax
sub_47eb9c
push esi
mov esi [ esp + 0x8 ]
xor eax eax
test esi esi
je r-xdata
pop esi
retn
xor eax eax
dec eax
cmp esi 0x20
jb r-xdata
lea ecx [ esi - 0x7f ]
cmp ecx 0x21
jb r-xdata
mov edx r--data
mov ecx esi
push 0x8d
call sub_47ebf2
add esp 0x4
test eax eax
mov eax 0x0
jne r-xdata
mov edx r--data
mov ecx esi
push 0x69
call sub_47ebf2
add esp 0x4
cmp eax 0x1
mov eax 0x2
sbb eax 0x0
sub_47ebf2
push ebp
push ebx
push edi
push esi
xor eax eax
cmp [ edx ] ecx
ja r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x14 ]
cmp [ edx + esi * 8 + 0x4 ] ecx
jb r-xdata
test esi esi
js r-xdata
xor ebx ebx
xor edi edi
inc edi
cmp [ edx + ebp * 8 ] ecx
jbe r-xdata
cmp esi ebp
lea ebx [ ebp + 0x1 ]
jg r-xdata
mov eax edi
jmp r-xdata
xor eax eax
cmp ebp ebx
lea esi [ ebp - 0x1 ]
jg r-xdata
lea eax [ ebx + esi ]
mov ebp eax
shr ebp 0x1f
add ebp eax
sar ebp 0x1
cmp [ edx + ebp * 8 + 0x4 ] ecx
jae r-xdata
jmp r-xdata
jmp r-xdata
xor eax eax
sub_47ec6c
push ebp
push ebx
push edi
push esi
push eax
mov ebp [ esp + 0x18 ]
mov eax [ rw-data ]
mov [ esp ] eax
mov al 0x2a
cmp [ ebp ] 0x2a
je r-xdata
cmp al 0x2a
je r-xdata
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
call sub_47ed9b
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp ]
cmp al 0x2a
je r-xdata
test al al
je r-xdata
mov ecx [ esp ]
call sub_497c4a
mov eax ebx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebp [ esp + 0x18 ]
mov al [ ebp ]
inc ebp
test al al
je r-xdata
mov eax [ esp + 0x1c ]
xor ebx ebx
cmp [ eax ] 0x0
sete bl
jmp r-xdata
push 0xe1
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
xor ebx ebx
mov [ esp + 0x18 ] ebp
inc ebx
jmp r-xdata
mov esi [ esp + 0x1c ]
mov [ esp + 0x18 ] ebp
cmp [ esi ] 0x0
je r-xdata
xor ebx ebx
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
call sub_47ed9b
mov ebx eax
test ebx ebx
js r-xdata
mov edi ebp
lea ebp [ esp + 0x18 ]
mov ebp [ esp + 0x18 ]
mov al [ ebp ]
test al al
jne r-xdata
mov eax [ esp + 0x1c ]
lea esi [ eax + 0x1 ]
mov [ esp + 0x1c ] esi
cmp [ eax + 0x1 ] 0x0
je r-xdata
mov ebx [ esp + 0x1c ]
xor eax eax
cmp [ ebx ] 0x0
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
lea edx [ esp + 0x1c ]
call sub_47ed9b
mov ebx eax
test ebx ebx
jns r-xdata
push esi
call sub_4a7f30
add esp 0x4
add eax esi
sub esi ebx
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
add esi eax
mov [ ecx ] edi
mov [ edx ] esi
call sub_47ed9b
mov ebx eax
jmp r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
sub_47ed9b
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov [ esp ] ecx
mov edi [ ecx ]
mov [ esp + 0x4 ] edx
mov esi [ edx ]
jmp r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
mov eax [ esp ]
mov [ eax ] edi
mov eax [ esp + 0x4 ]
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
cmp dl 0x2a
je r-xdata
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov bl [ esi ]
test bl bl
jne r-xdata
cmp dl 0x3f
je r-xdata
cmp dl 0x2a
je r-xdata
inc edi
cmp dl 0x5b
je r-xdata
xor eax eax
test dl dl
jne r-xdata
xor ecx ecx
cmp [ edi + 0x1 ] 0x5e
lea ebp [ edi + 0x1 ]
lea eax [ edi + 0x2 ]
sete cl
cmove ebp eax
xor edi edi
mov [ esp + 0x8 ] ecx
jmp r-xdata
cmp dl 0x5c
jne r-xdata
mov bh [ ebp ]
cmp bh 0x5c
je r-xdata
cmp dl bl
jne r-xdata
mov al [ edi + 0x1 ]
test al al
je r-xdata
mov bh [ ebp + 0x1 ]
inc ebp
cmp bh 0x5d
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
dec eax
cmp al bl
jne r-xdata
cmp [ ebp + 0x1 ] 0x2d
jne r-xdata
mov eax 0xfffffffe
test bh bh
je r-xdata
cmp edi [ esp + 0x8 ]
je r-xdata
add edi 0x2
jmp r-xdata
inc ebp
xor eax eax
cmp bl bh
sete al
or edi eax
jmp r-xdata
mov cl [ ebp + 0x2 ]
cmp cl 0x5c
je r-xdata
inc ebp
mov edi ebp
jmp r-xdata
inc esi
mov cl [ ebp + 0x3 ]
mov edx 0x3
mov edx 0x2
cmp cl 0x5d
jne r-xdata
cmp bh cl
mov al bh
jb r-xdata
test cl cl
je r-xdata
jmp r-xdata
ja r-xdata
mov eax ecx
mov eax 0xfffffffd
jmp r-xdata
cmp bh bl
mov ecx 0x1
lea ebp [ ebp + edx + 0x1 ]
cmovb ecx edi
cmp al bl
cmovbe edi ecx
mov bh cl
sub_47eec8
cmp [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
retn
xor eax eax
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
xor eax eax
test ecx ecx
mov [ rw-data ] ecx
setne al
jmp r-xdata
mov [ rw-data ] eax
retn
sub_47ef1c
push ebp
push ebx
push edi
push esi
sub esp 0xf0
mov eax [ rw-data ]
mov ebp [ esp + 0x104 ]
cmp [ esp + 0x110 ] 0x0
mov [ esp + 0xec ] eax
jne r-xdata
push r--data
push r--data
push r--data
push ebp
call sub_43b5be
add esp 0x10
mov esi eax
push 0x6e
call sub_43b2d8
add esp 0x4
mov [ esp + 0xd8 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0xd4 ] eax
sub esp 0x18
mov eax [ esp + 0xf0 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xec ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_432878
mov [ esp + 0x8 ] 0x69
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
mov eax [ esi + 0x10 ]
test eax eax
jle r-xdata
mov edi [ esp + 0x108 ]
mov ebx [ esp + 0x10c ]
sub esp 0x10
mov eax r--data
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] eax
mov [ esp ] ebp
call sub_43b5be
add esp 0x10
mov esi eax
push edi
call sub_43b2d8
add esp 0x4
xor ebp ebp
mov [ esp + 0xe8 ] eax
push ebp
call sub_43b2d8
add esp 0x4
mov [ esp + 0xe4 ] eax
sub esp 0x18
mov eax [ esp + 0x100 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xfc ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_47fff1
mov [ esp + 0x8 ] 0x61
mov [ esp + 0x4 ] r--data
call sub_43bafd
add esp 0x18
mov [ eax + 0xc ] ebp
mov ebp [ esp + 0x104 ]
test ebx ebx
je r-xdata
push r--data
push r--data
push r--data
mov edi [ esp + 0x110 ]
push edi
call sub_43b5be
add esp 0x10
mov esi eax
push 0x5b
call sub_43b2d8
add esp 0x4
mov [ esp + 0xd0 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0xcc ] eax
sub esp 0x18
mov eax [ esp + 0xe8 ]
mov ebx sub_432878
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xe4 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push 0x5c
call sub_43b2d8
add esp 0x4
mov [ esp + 0xc8 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0xc4 ] eax
sub esp 0x18
mov eax [ esp + 0xe0 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xdc ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ebx
mov [ esp ] esi
mov [ esp + 0x8 ] 0x64
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push r--data
push r--data
push r--data
push edi
call sub_43b5be
add esp 0x10
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x18 ]
lea edx [ eax * 4 - 0x8 ]
xor edi edi
mov ecx ebx
push edi
call sub_43b2d8
add esp 0x4
mov [ esp + 0xe0 ] eax
push 0x0
call sub_43b2d8
add esp 0x4
mov [ esp + 0xdc ] eax
sub esp 0x18
mov eax [ esp + 0xf8 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xf4 ]
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x10 ] sub_48000a
mov [ esp + 0x8 ] 0x68
mov [ esp + 0x4 ] r--data
call sub_43bafd
add esp 0x18
mov [ eax + 0xc ] 0x1
push 0x6c
call sub_43b2d8
add esp 0x4
mov [ esp + 0xc0 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0xbc ] eax
sub esp 0x24
mov eax [ esp + 0xe4 ]
xor ebx ebx
mov [ esp + 0x20 ] eax
mov eax [ esp + 0xe0 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp ] esi
mov [ esp + 0x1c ] sub_432a2f
mov [ esp + 0x14 ] r--data
mov [ esp + 0xc ] r--data
mov [ esp + 0x4 ] r--data
call sub_43bd38
add esp 0x24
mov eax 0x2
push eax
call sub_43b2d8
add esp 0x4
mov [ esp + 0xb8 ] eax
xor eax eax
inc eax
push eax
call sub_43b2d8
add esp 0x4
mov [ esp + 0xb4 ] eax
push ebx
call sub_43b2d8
add esp 0x4
mov [ esp + 0xb0 ] eax
push 0x67
call sub_43b2d8
add esp 0x4
mov [ esp + 0xac ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0xa8 ] eax
sub esp 0x38
mov eax [ esp + 0xf0 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0xec ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0xe8 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0xe4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xe0 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x34 ] ebx
mov [ esp + 0x14 ] eax
mov eax 0x3
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x8 ] 0x69
mov [ esp + 0x4 ] r--data
call sub_43b9aa
add esp 0x28
mov ebp [ esp + 0x114 ]
mov edi r--data
mov [ esp + 0x4 ] edi
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
add esp 0x10
mov esi eax
push 0x7e
call sub_43b2d8
add esp 0x4
mov [ esp + 0xa4 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0xa0 ] eax
sub esp 0x18
mov eax [ esp + 0xbc ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xb8 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x73
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push r--data
push r--data
push edi
push ebp
call sub_43b5be
add esp 0x10
mov esi eax
push ebx
call sub_43b2d8
add esp 0x4
mov [ esp + 0x9c ] eax
sub esp 0x4
mov edi r--data
mov [ esp ] edi
call sub_43b2d8
add esp 0x4
mov [ esp + 0x98 ] eax
sub esp 0x18
mov eax [ esp + 0xb4 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0xb0 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] ebx
mov [ esp ] esi
mov [ esp + 0x10 ] sub_480023
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push ebx
call sub_43b2d8
add esp 0x4
mov [ esp + 0x94 ] eax
mov eax 0x3
push eax
call sub_43b2d8
add esp 0x4
mov ebp 0x2
mov [ esp + 0x90 ] eax
push ebp
call sub_43b2d8
add esp 0x4
mov [ esp + 0x8c ] eax
xor eax eax
inc eax
push eax
call sub_43b2d8
add esp 0x4
mov [ esp + 0x88 ] eax
push 0x76
call sub_43b2d8
add esp 0x4
mov [ esp + 0x84 ] eax
push edi
call sub_43b2d8
add esp 0x4
mov [ esp + 0x80 ] eax
sub esp 0x40
mov eax [ esp + 0xd4 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0xd0 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0xcc ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0xc8 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0xc4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xc0 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x3c ] ebx
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] ebp
mov [ esp ] esi
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x8 ] 0x71
mov [ esp + 0x4 ] r--data
call sub_43b9aa
add esp 0x40
mov ebp r--data
push ebx
push r--data
push ebp
mov edi [ esp + 0x110 ]
push edi
call sub_43b5be
add esp 0x10
mov esi eax
push 0x94
call sub_43b2d8
add esp 0x4
mov [ esp + 0x7c ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x78 ] eax
sub esp 0x18
mov eax [ esp + 0x94 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x90 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x73
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push r--data
push r--data
push ebp
push edi
mov ebx edi
call sub_43b5be
add esp 0x10
mov esi eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x74 ] eax
sub esp 0xc
mov eax [ esp + 0x80 ]
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43be97
add esp 0xc
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov edi eax
push edi
push r--data
push ebp
push ebx
call sub_43b5be
add esp 0x10
mov esi eax
push edi
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
jle r-xdata
mov ecx [ esi + 0x18 ]
xor edx edx
inc edi
add edx 0xfffffffc
add ecx 0x4
cmp eax edi
jg r-xdata
cmp [ ebp + 0x14 ] 0x6d
je r-xdata
sub esp 0x10
mov ebp [ esp + 0x114 ]
mov ebx r--data
mov [ esp + 0x4 ] ebx
mov [ esp ] ebp
mov [ esp + 0xc ] r--data
mov [ esp + 0x8 ] r--data
call sub_43b5be
add esp 0x10
mov esi eax
push 0x8d
call sub_43b2d8
add esp 0x4
mov [ esp + 0x70 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x6c ] eax
sub esp 0x18
mov eax [ esp + 0x88 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x84 ]
mov [ esp + 0xc ] eax
mov eax sub_432878
mov [ esp + 0x10 ] eax
mov eax 0x66
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push r--data
push r--data
push ebx
push ebp
call sub_43b5be
add esp 0x10
mov esi eax
xor eax eax
inc eax
push eax
mov edi eax
call sub_43b2d8
add esp 0x4
xor ebp ebp
mov [ esp + 0x68 ] eax
push ebp
call sub_43b2d8
add esp 0x4
mov [ esp + 0x64 ] eax
mov eax 0x2
push eax
call sub_43b2d8
add esp 0x4
mov [ esp + 0x60 ] eax
push 0x8a
call sub_43b2d8
add esp 0x4
mov [ esp + 0x5c ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x58 ] eax
sub esp 0x38
mov eax [ esp + 0xa0 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x9c ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x98 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x94 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x34 ] ebp
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x8 ] 0x6d
mov [ esp + 0x4 ] r--data
call sub_43b9aa
add esp 0x38
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x18 ]
mov ebx [ ecx + eax * 4 - 0x4 ]
lea eax [ eax * 4 - 0x4 ]
push eax
push ecx
lea eax [ ecx + 0x4 ]
push eax
call sub_49a770
add esp 0xc
mov eax [ esi + 0x18 ]
mov [ eax ] ebx
push r--data
push r--data
push r--data
mov ebx [ esp + 0x110 ]
push ebx
call sub_43b5be
add esp 0x10
mov esi eax
push 0x87
call sub_43b2d8
add esp 0x4
mov [ esp + 0x54 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x50 ] eax
sub esp 0x18
mov eax [ esp + 0x6c ]
mov edi sub_432878
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x68 ]
mov [ esp + 0xc ] eax
mov eax 0x6c
mov [ esp + 0x10 ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push 0x86
call sub_43b2d8
add esp 0x4
mov [ esp + 0x4c ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x48 ] eax
sub esp 0x18
mov eax [ esp + 0x64 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x60 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push r--data
push r--data
push r--data
push ebx
call sub_43b5be
add esp 0x10
xor edi edi
mov esi eax
inc edi
push edi
call sub_43b2d8
add esp 0x4
mov [ esp + 0x44 ] eax
push 0x3
call sub_43b2d8
add esp 0x4
mov [ esp + 0x40 ] eax
mov eax 0x2
push eax
call sub_43b2d8
add esp 0x4
mov [ esp + 0x3c ] eax
push ebp
call sub_43b2d8
add esp 0x4
mov [ esp + 0x38 ] eax
push 0x6f
call sub_43b2d8
add esp 0x4
mov [ esp + 0x34 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x30 ] eax
sub esp 0x40
mov eax [ esp + 0x84 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x80 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x7c ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x78 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x70 ]
mov [ esp + 0x10 ] eax
mov eax sub_4327d1
mov [ esp + 0x3c ] ebp
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] edi
mov [ esp ] esi
mov [ esp + 0x34 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x8 ] 0x7a
mov [ esp + 0x4 ] r--data
call sub_43b9aa
add esp 0x40
push ebp
mov ebp ebx
push r--data
push r--data
push ebp
call sub_43b5be
add esp 0x10
mov esi eax
push 0x51
call sub_43b2d8
add esp 0x4
mov [ esp + 0x2c ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x28 ] eax
sub esp 0x18
mov eax [ esp + 0x44 ]
mov edi sub_432878
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x40 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x34
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push 0x52
call sub_43b2d8
add esp 0x4
mov [ esp + 0x24 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x20 ] eax
sub esp 0x18
mov eax [ esp + 0x3c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x38 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x79
mov edi sub_432878
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push 0x53
call sub_43b2d8
add esp 0x4
mov [ esp + 0x1c ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x18 ] eax
sub esp 0x18
mov eax [ esp + 0x34 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x30 ]
mov [ esp + 0xc ] eax
mov eax 0x6c
mov [ esp + 0x10 ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push 0x56
call sub_43b2d8
add esp 0x4
mov [ esp + 0x14 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x10 ] eax
sub esp 0x18
mov eax [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edi
mov [ esp ] esi
mov [ esp + 0x8 ] 0x65
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
push 0x57
call sub_43b2d8
add esp 0x4
mov [ esp + 0xc ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp + 0x8 ] eax
sub esp 0x18
mov eax [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0xc ] eax
mov eax 0x66
mov [ esp + 0x10 ] edi
mov [ esp + 0x8 ] eax
mov [ esp ] esi
mov [ esp + 0x4 ] r--data
call sub_43bef3
add esp 0x18
mov edi [ esp + 0x110 ]
test edi edi
je r-xdata
mov ecx [ esi + 0x18 ]
xor edx edx
inc edx
cmp edx eax
jl r-xdata
cmp [ ebp + 0x14 ] 0x66
je r-xdata
mov ebp [ ecx ]
cmp [ ebp ] 0x3
jne r-xdata
jmp r-xdata
lea ebp [ eax - 0x2 ]
cmp edi ebp
jge r-xdata
push 0x0
push r--data
push r--data
push ebp
call sub_43b5be
add esp 0x10
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
jle r-xdata
test edi edi
je r-xdata
inc edx
cmp edx eax
jl r-xdata
cmp [ edi + 0x14 ] 0x90
je r-xdata
mov ebp [ ecx + edx * 4 ]
cmp [ ebp ] 0x2
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x10 ] sub_4327d1
je r-xdata
mov ebx [ ebx + eax * 4 - 0x4 ]
lea eax [ ecx + 0x8 ]
add ecx 0x4
push edx
push ecx
push eax
call sub_49a770
add esp 0xc
mov eax [ esi + 0x18 ]
mov [ eax + edi * 4 + 0x4 ] ebx
push 0xf
push 0x1f
push edi
push ebp
call sub_443bf8
add esp 0x10
mov ecx [ esi + 0x18 ]
xor edx edx
cmp [ esp + 0x114 ] 0x4
jne r-xdata
mov edi [ ecx + edx * 4 ]
cmp [ edi ] 0x2
jne r-xdata
jmp r-xdata
cmp [ edi + 0x10 ] sub_4327d1
je r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x28 ]
mov edx 0x4
add eax 0x2
mov [ ebp + 0x24 ] eax
push edx
mov edi 0x4
push eax
push ecx
call sub_43f8db
add esp 0xc
mov [ ebp + 0x28 ] eax
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x28 ]
mov [ edx + ecx * 4 - 0x4 ] eax
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x28 ]
mov [ edx + ecx * 4 - 0x8 ] eax
push edi
push [ ebp + 0x24 ]
push [ ebp + 0x30 ]
call sub_43f8db
add esp 0xc
mov edi eax
mov [ ebp + 0x30 ] edi
mov ebx [ ebp + 0x24 ]
push 0x3
call sub_43b2d8
add esp 0x4
mov [ edi + ebx * 4 - 0x4 ] eax
mov eax 0x4
mov edi [ ebp + 0x24 ]
mov ebx [ ebp + 0x30 ]
push eax
call sub_43b2d8
add esp 0x4
mov [ ebx + edi * 4 - 0x8 ] eax
mov eax [ ebp + 0x2c ]
test eax eax
je r-xdata
push 0x89
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0xec ]
call sub_497c4a
add esp 0xf0
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x3
call sub_44420b
add esp 0x4
test eax eax
je r-xdata
inc edx
cmp edx eax
jl r-xdata
cmp [ ebx + 0x14 ] 0xd
je r-xdata
test edi edi
jne r-xdata
jmp r-xdata
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x28 ]
mov esi 0x4
add eax 0x3
mov [ edi + 0x24 ] eax
push esi
push eax
push ecx
call sub_43f8db
add esp 0xc
mov [ edi + 0x28 ] eax
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ edi + 0x24 ]
mov edx [ edi + 0x28 ]
mov [ edx + ecx * 4 - 0xc ] eax
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ edi + 0x24 ]
mov edx [ edi + 0x28 ]
mov [ edx + ecx * 4 - 0x8 ] eax
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ edi + 0x24 ]
mov edx [ edi + 0x28 ]
mov [ edx + ecx * 4 - 0x4 ] eax
push esi
push [ edi + 0x24 ]
push [ edi + 0x30 ]
call sub_43f8db
add esp 0xc
mov esi eax
mov [ edi + 0x30 ] esi
mov ebx [ edi + 0x24 ]
push 0x0
call sub_43b2d8
add esp 0x4
mov [ esi + ebx * 4 - 0xc ] eax
mov esi [ edi + 0x24 ]
mov ebx [ edi + 0x30 ]
push 0x1
call sub_43b2d8
add esp 0x4
mov [ ebx + esi * 4 - 0x8 ] eax
mov esi [ edi + 0x24 ]
mov ebx [ edi + 0x30 ]
push 0x2
call sub_43b2d8
add esp 0x4
mov [ ebx + esi * 4 - 0x4 ] eax
mov ecx [ edi + 0x2c ]
mov eax [ edi + 0x24 ]
test ecx ecx
je r-xdata
push 0xec
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x1
push [ ebp + 0x24 ]
push eax
call sub_43f8db
add esp 0xc
mov [ ebp + 0x2c ] eax
xor edx edx
mov ecx [ ebp + 0x24 ]
mov [ eax + ecx - 0x1 ] dl
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x2c ]
mov [ ecx + eax - 0x2 ] dl
push r--data
push r--data
push r--data
push ebp
call sub_43b5be
add esp 0x10
mov esi eax
push 0x98
call sub_43b2d8
add esp 0x4
mov [ esp + 0x4 ] eax
push r--data
call sub_43b2d8
add esp 0x4
mov [ esp ] eax
sub esp 0x24
mov eax [ esp + 0x28 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] eax
mov [ esp ] esi
mov [ esp + 0x1c ] sub_432a2f
mov [ esp + 0x14 ] r--data
mov [ esp + 0x8 ] 0x74
mov [ esp + 0x4 ] r--data
call sub_43bd38
add esp 0x24
mov ebx [ ecx + edx * 4 ]
cmp [ ebx ] 0x2
jne r-xdata
jmp r-xdata
cmp [ ebx + 0x10 ] sub_4327d1
je r-xdata
push 0x1
push eax
call sub_43f807
add esp 0x8
mov [ edi + 0x2c ] eax
mov ecx [ edi + 0x24 ]
test ecx ecx
jle r-xdata
push 0x1
push eax
push ecx
call sub_43f8db
add esp 0xc
mov [ edi + 0x2c ] eax
mov ecx [ edi + 0x24 ]
jmp r-xdata
test eax eax
jle r-xdata
mov eax [ ebx + 0x24 ]
mov ecx [ ebx + 0x28 ]
mov edi 0x4
inc eax
mov [ ebx + 0x24 ] eax
push edi
push eax
push ecx
call sub_43f8db
add esp 0xc
mov [ ebx + 0x28 ] eax
push r--data
call sub_43f79e
add esp 0x4
mov ecx [ ebx + 0x24 ]
mov edx [ ebx + 0x28 ]
mov [ edx + ecx * 4 - 0x4 ] eax
push edi
push [ ebx + 0x24 ]
push [ ebx + 0x30 ]
call sub_43f8db
add esp 0xc
mov edi eax
mov [ ebx + 0x30 ] edi
mov ebx [ ebx + 0x24 ]
push 0x5
call sub_43b2d8
add esp 0x4
mov [ edi + ebx * 4 - 0x4 ] eax
mov edi [ esp + 0x110 ]
mov eax [ esi + 0x10 ]
push 0x168
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ eax + ecx - 0x3 ] 0x78
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x2c ]
mov [ ecx + eax - 0x2 ] 0x62
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x2c ]
mov [ ecx + eax - 0x1 ] 0x65
mov [ eax ] 0x0
mov ecx [ edi + 0x24 ]
cmp ecx 0x2
jl r-xdata
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax [ edi + 0x2c ]
xor eax eax
inc eax
inc edx
cmp edx eax
jl r-xdata
cmp [ esi + 0x14 ] 0x12
je r-xdata
mov ecx [ edi + 0x2c ]
mov [ ecx + eax ] 0x0
inc eax
mov ecx [ edi + 0x24 ]
cmp eax ecx
jl r-xdata
mov esi [ ecx + edx * 4 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
cmp [ esi + 0x10 ] sub_4328ea
je r-xdata
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
push r--data
call sub_43f79e
add esp 0x4
mov [ esi + 0x4 ] eax
jmp r-xdata
push 0x179
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_480023
push edi
push esi
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x10 ]
mov edi [ esp + 0xc ]
cmp eax 0x2
je r-xdata
push esi
push edi
call sub_482c8a
add esp 0x8
xor ecx ecx
test eax eax
sete cl
push ecx
push esi
call sub_483541
add esp 0x8
test eax eax
jne r-xdata
pop esi
pop edi
retn
push esi
call sub_483536
add esp 0x4
xor ecx ecx
test eax eax
sete cl
push ecx
push esi
push edi
call sub_482c39
add esp 0xc
jmp r-xdata
sub_480078
push edi
push esi
push r--data
call sub_48f6f9
add esp 0x4
mov esi eax
test esi esi
je r-xdata
xor ecx ecx
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov edi [ GetProcAddress@IAT ]
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov ecx [ rw-data ]
jmp r-xdata
mov [ rw-data ] eax
pop esi
pop edi
jmp ecx
sub_4800e9
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x30
mov eax [ rw-data ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ esp + 0x28 ] eax
xor eax eax
mov [ edi ] ebx
push eax
push eax
push 0x31
push ebx
call [ SendMessageA@IAT ]
mov [ edi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ edi + 0xc ] eax
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ GetClientRect@IAT ]
movaps xmm0 [ r--data ]
mov ebx esp
movaps [ ebx ] xmm0
push ebx
push [ ebp + 0xc ]
call [ MapDialogRect@IAT ]
mov ecx [ ebx + 0x8 ]
lea eax [ esp + 0x18 ]
mov [ edi + 0x8 ] ecx
mov eax [ eax + 0x8 ]
shl eax 0x2
cdq
idiv ecx
mov [ edi + 0x14 ] esi
add esi [ ebp + 0x14 ]
add eax 0xfffffffa
sub eax esi
mov [ edi + 0x10 ] eax
mov ecx [ esp + 0x28 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
sub_480173
push ebx
push edi
push esi
sub esp 0x14
mov esi [ rw-data ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
mov edi [ esp + 0x24 ]
mov ebx esp
mov [ esp + 0x10 ] esi
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x14 ]
add eax [ esp + 0x28 ]
mov [ ebx ] eax
push ebx
push [ edi ]
call [ MapDialogRect@IAT ]
mov eax [ edi ]
test eax eax
je r-xdata
xor esi esi
mov ebx [ esp + 0x38 ]
push 0x0
push [ rw-data ]
push [ esp + 0x50 ]
push eax
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x5c ]
push [ esp + 0x68 ]
push ebx
push [ esp + 0x6c ]
call [ CreateWindowExA@IAT ]
mov esi eax
push 0x1
push [ edi + 0x4 ]
push 0x30
push esi
call [ SendMessageA@IAT ]
push r--data
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
pop ebx
retn
xor eax eax
push 0x116
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
push eax
push eax
push esi
call [ SetWindowPos@IAT ]
jmp r-xdata
sub_48023b
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov ebx r--data
add [ esi + 0x14 ] 0xfffffff9
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
add ecx 0xe
inc eax
mov [ esi + 0x10 ] ecx
mov [ esi + 0xc ] eax
mov edx [ esi + 0x18 ]
mov edi [ esi + 0x20 ]
sub eax edx
test edi edi
cmovne ebx edi
xor edi edi
push [ esi + 0x1c ]
push ebx
push edi
push 0x50000007
push r--data
push eax
push ecx
push edx
push 0x3
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0x4
pop esi
pop edi
pop ebx
retn
sub_48028f
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x18 ]
mov eax [ esi + 0xc ]
mov edi [ esi + 0x10 ]
test ecx ecx
je r-xdata
test ebp ebp
mov ecx 0x500100a0
mov edx 0x50010080
cmovne edx ecx
push ebx
push r--data
push 0x200
push edx
push r--data
push 0xc
push edi
push eax
push 0x3
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0xf
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esp + 0x20 ]
push ecx
push 0x0
push 0x50000000
push r--data
push 0x8
push edi
push eax
push 0x3
push esi
call sub_480173
add esp 0x28
mov eax [ esi + 0xc ]
add eax 0x9
mov [ esi + 0xc ] eax
sub_48030e
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
mov eax [ esi + 0xc ]
mov edi [ esi + 0x10 ]
test ecx ecx
je r-xdata
push ebx
push r--data
push 0x200
push 0x50210202
push r--data
push 0x78
push edi
push eax
push 0x3
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0xf
pop esi
pop edi
pop ebx
retn
push [ esp + 0x18 ]
push ecx
push 0x0
push 0x50000000
push r--data
push 0x8
push edi
push eax
push 0x3
push esi
call sub_480173
add esp 0x28
mov eax [ esi + 0xc ]
add eax 0x9
mov [ esi + 0xc ] eax
sub_48037c
push ebp
push ebx
push edi
push esi
sub esp 0x1c
mov ebp [ esp + 0x3c ]
mov ebx ecx
test edx edx
je r-xdata
test ebp ebp
jle r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ esp + 0x30 ]
mov esi [ ebx + 0x10 ]
lea edi [ ecx + 0x9 ]
mov [ ebx + 0xc ] edi
push eax
push edx
push 0x0
push 0x50000000
push r--data
push 0x8
push esi
push ecx
push 0x3
push ebx
call sub_480173
add esp 0x28
add ebx 0xc
xor eax eax
cmp [ esp + 0x34 ] 0x1
mov [ esp + 0xc ] ebx
setg al
xor esi esi
lea eax [ eax + eax + 0x9 ]
mov [ esp + 0x4 ] eax
lea eax [ ebx + 0xc ]
mov [ esp ] eax
lea eax [ ebp - 0x1 ]
xor ebp ebp
mov [ esp + 0x8 ] eax
mov eax 0x50034009
mov edi [ ebx + 0x10 ]
lea ebx [ edi + 0x3 ]
mov eax ebx
imul eax ebp
inc ebp
cdq
idiv [ esp + 0x34 ]
mov ecx eax
add ecx 0x3
cmp esi [ esp + 0x8 ]
jge r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x4 ]
xor ebp ebp
add [ eax ] ecx
sub edi ecx
push [ esp + 0x10 ]
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x24 ]
push r--data
push 0x8
push edi
mov ebx [ esp + 0x28 ]
push [ ebx + 0xc ]
push ecx
push ebx
call sub_480173
add esp 0x28
inc esi
mov eax 0x50014009
cmp [ esp + 0x3c ] esi
jne r-xdata
imul ebx ebp
mov eax ebx
cdq
idiv [ esp + 0x34 ]
mov edi eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x38 ]
cmp ebp [ esp + 0x34 ]
mov ecx [ eax + esi * 8 ]
mov [ esp + 0x14 ] ecx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ esp + 0x10 ] eax
jne r-xdata
mov ebx [ esp ]
jmp r-xdata
add [ ebx ] 0xb
add esp 0x1c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48048a
push ebp
push ebx
push edi
push esi
sub esp 0x38
mov eax [ rw-data ]
mov esi [ esp + 0x54 ]
mov [ esp + 0x34 ] eax
push [ esp + 0x50 ]
call [ GetDC@IAT ]
mov ebp eax
push esi
call sub_4a7f30
add esp 0x4
inc eax
xor edi edi
inc edi
push edi
push eax
call sub_43f807
add esp 0x8
mov [ esp + 0x8 ] eax
push esi
call sub_4a7f30
add esp 0x4
inc eax
push 0x4
push eax
call sub_43f807
add esp 0x8
mov [ esp + 0xc ] eax
mov [ esp ] edi
push edi
push ebp
call [ SetMapMode@IAT ]
mov eax [ esp + 0x4c ]
xor edi edi
lea ebx [ esp + 0x18 ]
mov [ ebx + 0xc ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx ] edi
mov eax [ eax + 0x10 ]
mov [ ebx + 0x8 ] eax
push ebx
push [ esp + 0x54 ]
call [ MapDialogRect@IAT ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x14 ] eax
push edi
push edi
mov edi ebp
push 0x31
push [ esp + 0x5c ]
call [ SendMessageA@IAT ]
push eax
push edi
call [ SelectObject@IAT ]
cmp [ esi ] 0x0
mov ebx eax
je r-xdata
push ebx
push edi
call [ SelectObject@IAT ]
push edi
mov eax [ esp + 0x50 ]
push [ eax ]
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push esi
call sub_4a7f30
add esp 0x4
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x30 ]
push ecx
push [ esp + 0x10 ]
push edx
mov ebp [ esp + 0x20 ]
push ebp
push eax
push esi
push edi
call [ GetTextExtentExPointA@IAT ]
test eax eax
mov [ esp + 0x10 ] ebx
je r-xdata
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x34 ]
call sub_497c4a
mov eax [ esp + 0x8 ]
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp ]
mov [ eax ] ecx
mov ecx [ esp + 0x8 ]
xor eax eax
inc eax
mov [ esp ] eax
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x8 ]
xor eax eax
inc eax
mov [ esp ] eax
mov [ esp + 0x4 ] ecx
push esi
push [ esp + 0x8 ]
call sub_4a7c00
add esp 0x8
mov ebp edi
test ebx ebx
mov edi ebx
jle r-xdata
mov edi ebx
jmp r-xdata
movzx eax [ esi + edi ]
push eax
call sub_4a7635
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ esp ]
push edi
push esi
mov edi [ esp + 0xc ]
push edi
call sub_4a8040
add esp 0xc
mov eax [ esp + 0x30 ]
mov [ edi + eax ] 0xa
mov edi ebp
mov ecx [ esp + 0x30 ]
mov ebp [ esp + 0x14 ]
mov al [ esi + ecx ]
test al al
je r-xdata
mov [ esp + 0x30 ] edi
cmp edi 0x1
lea edi [ edi - 0x1 ]
jg r-xdata
inc ebx
mov [ esp ] ebx
jmp r-xdata
mov edx [ esp + 0x4 ]
add esi ecx
lea edx [ edx + ecx + 0x1 ]
mov [ esp + 0x4 ] edx
mov ebx [ esp + 0x10 ]
inc ebx
mov [ esp ] ebx
push esi
call sub_4a7f30
add esp 0x4
lea ecx [ esp + 0x28 ]
push ecx
push [ esp + 0x10 ]
lea ecx [ esp + 0x38 ]
push ecx
push ebp
push eax
push esi
push edi
call [ GetTextExtentExPointA@IAT ]
test eax eax
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov ebx [ esp + 0x30 ]
push esi
call sub_4a7f30
add esp 0x4
cmp ebx eax
jae r-xdata
jmp r-xdata
movzx eax al
push eax
call sub_4a7635
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
sub_48069d
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
xor ebx ebx
mov edi [ esi + 0x10 ]
mov eax [ esi + 0xc ]
add edi 0x3
add eax 0x3
lea ecx [ edi + edi * 2 ]
mov edx ecx
sar edx 0x1f
shr edx 0x1e
add edx ecx
mov ecx 0x3
sar edx 0x2
lea ebp [ edx + 0x3 ]
add edx 0xfffffffd
sub edi ebp
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push ebx
push 0x50000000
push r--data
push 0x8
push edx
push eax
push ecx
push esi
call sub_480173
add esp 0x28
push [ esp + 0x24 ]
push [ esp + 0x24 ]
push ebx
push 0x50014000
push r--data
push 0xe
push edi
push [ esi + 0xc ]
push ebp
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0x11
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48071d
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov edi [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test ebp ebp
je r-xdata
xor eax eax
test ebp ebp
setne al
xor ecx ecx
or eax 0x50014000
push [ esp + 0x1c ]
push edx
push ecx
push eax
push r--data
push 0xe
push ebx
push edi
push 0x3
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0x11
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push [ esp + 0x20 ]
push 0x401
push eax
call [ SendMessageA@IAT ]
mov edx [ esp + 0x18 ]
sub_4807a4
push ebp
push ebx
push edi
push esi
mov esi ecx
mov eax 0x64
mov ecx 0x51eb851f
mov edi edx
mov ebx [ esi + 0x10 ]
sub eax [ esp + 0x1c ]
add ebx 0x3
imul eax ebx
imul ecx
mov ecx [ esi + 0xc ]
mov eax edx
sar edx 0x5
shr eax 0x1f
lea ebp [ edx + eax + 0x3 ]
lea eax [ edx + eax - 0x3 ]
mov edx 0x3
sub ebx ebp
add ecx 0x2
push [ esp + 0x14 ]
push edi
push 0x0
push 0x50000000
push r--data
push 0x8
push eax
push ecx
push edx
push esi
call sub_480173
add esp 0x28
mov eax 0x50010080
mov ecx 0xc
or eax [ esp + 0x20 ]
push [ esp + 0x18 ]
push r--data
push 0x200
push eax
push r--data
push ecx
push ebx
push [ esi + 0xc ]
push ebp
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0xf
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48085a
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov eax 0x64
mov edx 0x51eb851f
mov ebx [ esp + 0x20 ]
sub eax [ esp + 0x24 ]
mov edi [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add edi 0x3
add ecx 0x2
imul eax edi
imul edx
mov eax edx
sar edx 0x5
shr eax 0x1f
lea ebp [ edx + eax + 0x3 ]
lea eax [ edx + eax - 0x3 ]
mov edx 0x3
sub edi ebp
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push 0x0
push 0x50000000
push r--data
push 0x8
push eax
push ecx
push edx
push esi
call sub_480173
add esp 0x28
push ebx
push r--data
push 0x200
push 0x50210203
push r--data
push 0x30
push edi
push [ esi + 0xc ]
push ebp
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0xf
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4808ec
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov eax 0x64
mov edx 0x51eb851f
mov ebx [ esp + 0x20 ]
sub eax [ esp + 0x24 ]
mov edi [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add edi 0x3
add ecx 0x2
imul eax edi
imul edx
mov eax edx
sar edx 0x5
shr eax 0x1f
lea ebp [ edx + eax + 0x3 ]
lea eax [ edx + eax - 0x3 ]
mov edx 0x3
sub edi ebp
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push 0x0
push 0x50000000
push r--data
push 0x8
push eax
push ecx
push edx
push esi
call sub_480173
add esp 0x28
push ebx
push r--data
push 0x200
push 0x50210202
push r--data
push 0x78
push edi
push [ esi + 0xc ]
push ebp
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0xf
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48097e
push edi
push esi
mov esi [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x18 ]
mov eax [ esi + 0xc ]
test ecx ecx
je r-xdata
push edi
push r--data
push 0x200
push 0x50210203
push r--data
push 0x30
push [ esi + 0x10 ]
push eax
push 0x3
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0xf
pop esi
pop edi
retn
push [ esp + 0x14 ]
push ecx
push 0x0
push 0x50000000
push r--data
push 0x8
push [ esi + 0x10 ]
push eax
push 0x3
push esi
call sub_480173
add esp 0x28
mov eax [ esi + 0xc ]
add eax 0x8
mov [ esi + 0xc ] eax
sub_4809eb
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x18 ]
mov ebp [ esp + 0x24 ]
mov esi [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
xor ebx ebx
cmp [ esp + 0x28 ] 0x0
mov ecx [ esi + 0x10 ]
lea edx [ ebp * 8 + 0x3 ]
lea edi [ eax + ebp * 8 + 0x6 ]
setne bl
mov [ esi + 0xc ] edi
lea edi [ ebx * 8 + 0x502100c1 ]
mov ebx 0x3
push [ esp + 0x20 ]
push r--data
push 0x200
push edi
push r--data
push edx
push ecx
push eax
push ebx
push esi
call sub_480173
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ esi + 0xc ]
mov ecx [ esp + 0x1c ]
mov edi [ esi + 0x10 ]
lea ebx [ edx + 0x9 ]
mov [ esi + 0xc ] ebx
push ecx
push eax
push 0x0
push 0x50000000
push r--data
push 0x8
push edi
push edx
push 0x3
push esi
call sub_480173
add esp 0x28
sub_480a7c
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
xor ebp ebp
mov edi 0x3
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea edx [ eax + 0x9 ]
mov [ esi + 0xc ] edx
mov edx [ esp + 0x18 ]
push ebx
push edx
push ebp
push 0x50000000
push r--data
push 0x8
push ecx
push eax
push edi
push esi
call sub_480173
add esp 0x28
mov ebx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
add ebx 0x3
inc eax
lea ecx [ ebx + ebx * 2 ]
mov edx ecx
sar edx 0x1f
shr edx 0x1e
add edx ecx
mov ecx 0xc
sar edx 0x2
lea ebp [ edx + 0x3 ]
add edx 0xfffffffd
sub ebx ebp
push [ esp + 0x20 ]
push r--data
push 0x200
push 0x50010080
push r--data
push ecx
push edx
push eax
push edi
push esi
call sub_480173
add esp 0x28
push [ esp + 0x28 ]
push [ esp + 0x28 ]
mov eax 0x0
push eax
push 0x50014000
push r--data
push 0xe
push ebx
push [ esi + 0xc ]
push ebp
push esi
call sub_480173
add esp 0x28
add [ esi + 0xc ] 0x11
pop esi
pop edi
pop ebx
pop ebp
retn
sub_480b37
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
mov edi [ esp + 0x40 ]
mov ebx [ esp + 0x3c ]
mov ebp [ esp + 0x38 ]
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
lea edx [ edx * 8 + 0x3 ]
test eax eax
mov [ esp ] edx
mov [ ecx ] ebp
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] edi
je r-xdata
xor ebp ebp
cmp [ esp ] 0x20
mov eax 0x22
mov edx 0x0
jl r-xdata
mov edx [ esi + 0xc ]
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x34 ]
mov ebx [ esp + 0x28 ]
mov esi [ esi + 0x10 ]
lea edi [ edx + 0x9 ]
mov [ ebx + 0xc ] edi
push ecx
push eax
push 0x0
push 0x50000000
push r--data
push 0x8
push esi
mov esi [ esp + 0x44 ]
push edx
push 0x3
push esi
call sub_480173
add esp 0x28
lea ecx [ edx + 0x11 ]
xor edi edi
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] ecx
jmp r-xdata
mov ecx [ esp ]
lea eax [ ecx - 0x1f ]
shr eax 0x1f
lea edx [ ecx + eax - 0x1f ]
lea eax [ ecx + 0x3 ]
sar edx 0x1
mov ecx [ esi + 0x10 ]
mov ebx 0x51eb851f
add ecx 0x3
mov eax ecx
imul eax ebp
add ebp [ edi * 4 + r--data ]
imul ebx
mov eax edx
sar edx 0x5
shr eax 0x1f
imul ecx ebp
lea edx [ edx + eax + 0x3 ]
mov eax ecx
mov ecx edx
imul ebx
mov ebx esi
mov esi edx
mov eax esi
sar esi 0x5
shr eax 0x1f
add esi eax
sub esi ecx
cmp edi 0x1
je r-xdata
push [ esp + 0x38 ]
push r--data
push 0x200
push 0x502100c0
push r--data
push [ esp + 0x14 ]
push esi
push [ ebx + 0xc ]
push ecx
push ebx
call sub_480173
add esp 0x28
push eax
call [ rw-data ]
mov edi 0x2
mov esi ebx
cmp edi 0x2
jne r-xdata
mov esi [ esp + 0x28 ]
inc edi
cmp edi 0x3
jne r-xdata
mov ebx [ esp + 0x28 ]
mov eax [ esp + 0x4 ]
xor edx edx
mov edi 0x50014000
mov ebp r--data
add eax [ ebx + 0xc ]
push [ esp + 0x3c ]
push r--data
push edx
push edi
push ebp
mov edx 0xe
push edx
mov ebp 0xe
push esi
push eax
push ecx
push ebx
mov edi ecx
call sub_480173
add esp 0x28
mov eax [ esp + 0x8 ]
add eax [ ebx + 0xc ]
push [ esp + 0x40 ]
push r--data
mov ecx 0x0
push ecx
mov ecx 0x50014000
push ecx
mov ecx r--data
push ecx
push ebp
push esi
mov esi ebx
push eax
push edi
push esi
call sub_480173
add esp 0x28
jmp r-xdata
mov eax [ esp + 0xc ]
add [ esi + 0xc ] eax
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_480cef
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
push [ esp + 0x2c ]
push esi
push edi
push ebx
call [ rw-data ]
cmp eax 0xffffffff
je r-xdata
xor edx edx
dec edx
push 0x0
push esi
push edi
push ebx
call [ rw-data ]
xor edi edi
mov edx eax
dec esi
xor ebp ebp
xor ebx ebx
inc edi
mov [ esp ] edx
mov eax [ esp + 0x28 ]
lea eax [ eax + edi ]
mov [ esp + 0x8 ] eax
xor eax eax
push eax
push esi
mov eax [ esp + 0x2c ]
push eax
mov eax [ esp + 0x2c ]
push eax
call [ rw-data ]
mov [ esp + 0x4 ] eax
xor eax eax
push eax
push [ esp + 0xc ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
call [ rw-data ]
mov edx [ esp ]
mov ecx edi
cmp [ esp + 0x4 ] edx
cmove ecx ebp
test ebp ebp
cmove ebp ecx
cmp eax edx
mov ecx edi
cmove ecx ebx
test ebx ebx
cmove ebx ecx
dec esi
cmp edi 0xfff
lea edi [ edi + 0x1 ]
jl r-xdata
test ebp ebp
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
cmp ebx ebp
setl al
add edx eax
jmp r-xdata
mov eax edx
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_480db1
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x2c ]
mov edi [ esp + 0x28 ]
mov edx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
cmp [ esp + 0x24 ] 0x0
je r-xdata
movzx esi ax
cmp esi [ ebx + 0x4 ]
je r-xdata
xor ebp ebp
cmp [ ebx ] eax
jne r-xdata
shr eax 0x10
cmp eax 0x5
je r-xdata
xor ebp ebp
cmp esi [ ebx + 0x8 ]
jne r-xdata
test edx edx
mov [ esp ] ebp
je r-xdata
mov esi [ esp + 0x30 ]
mov ecx 0xfffffb7b
add ecx [ esi ]
cmp ecx 0x3
ja r-xdata
xor ebp ebp
push ebp
push ebp
push 0x188
push [ ebx ]
push edi
call [ SendDlgItemMessageA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor ebp ebp
test ax ax
jne r-xdata
mov eax [ esp ]
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x20 ]
test esi esi
jle r-xdata
jmp [ ecx * 4 + jump_table_41aa38 ]
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
push ebp
push ebp
push 0x18b
push [ ebx ]
push edi
mov ebp eax
call [ SendDlgItemMessageA@IAT ]
mov ecx ebp
test ecx ecx
jle r-xdata
xor ebp ebp
xor ecx ecx
push r--data
push ecx
push 0x180
push eax
push edi
call [ SendDlgItemMessageA@IAT ]
mov [ ebx + 0x10 ] eax
xor ebp ebp
mov eax [ rw-data ]
inc ebp
push ebp
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call eax
mov [ ebx + 0xc ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
push ebp
push eax
push edi
call [ SetWindowLongA@IAT ]
jmp r-xdata
mov edx [ esp + 0x1c ]
dec eax
mov ebp 0x2
cmp ecx eax
jge r-xdata
cmp esi [ ebx + 0x4 ]
jne r-xdata
push 0x0
push ebp
push 0x199
push [ ebx ]
push edi
mov ebx edx
call [ SendDlgItemMessageA@IAT ]
mov edx ebx
mov ebx [ esp + 0x18 ]
mov [ edx + ebp * 4 ] eax
inc ebp
cmp esi ebp
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebx ]
mov eax ecx
mov esi ecx
mov ecx edi
dec eax
push eax
push esi
call sub_48104c
add esp 0x8
mov ebp 0x2
jmp r-xdata
mov edx [ ebx ]
mov eax ecx
mov esi ecx
mov ecx edi
inc eax
push eax
push esi
call sub_48104c
add esp 0x8
sub_480ec0
xor ebp ebp
inc ebp
mov [ ebx + 0x14 ] ebp
push ebp
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_480cef
add esp 0x10
mov ecx [ ebx + 0x10 ]
cmp eax ecx
cmovg eax ecx
push eax
mov ecx edi
mov edi eax
push [ esi + 0x4 ]
mov esi ecx
push esi
call [ rw-data ]
test edi edi
js r-xdata
push 0x1
push 0x0
push esi
push 0x3
push 0x0
push esi
jmp r-xdata
test edx edx
mov [ esp ] ebp
je r-xdata
call [ SetWindowLongA@IAT ]
mov edx [ esp + 0x1c ]
mov edi esi
jmp r-xdata
mov eax [ esp ]
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x20 ]
test esi esi
jle r-xdata
xor ebp ebp
push 0x0
push ebp
push 0x199
push [ ebx ]
push edi
mov ebx edx
call [ SendDlgItemMessageA@IAT ]
mov edx ebx
mov ebx [ esp + 0x18 ]
mov [ edx + ebp * 4 ] eax
inc ebp
cmp esi ebp
jne r-xdata
sub_480f03
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ebp ebx
xor ebx ebx
mov ebp ebx
push 0x1
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_480cef
add esp 0x10
mov ecx [ ebp + 0x10 ]
mov ebx eax
cmp ebx ecx
cmovg ebx ecx
push 0xffffffff
push [ esi + 0x4 ]
push edi
call [ rw-data ]
mov eax [ ebp ]
jmp r-xdata
mov edx [ esp + 0x1c ]
xor eax eax
mov ebx ebp
inc eax
mov ebp eax
jmp r-xdata
test ebx ebx
mov [ ebp + 0x14 ] esi
js r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
push 0x182
push eax
push edi
call [ SendDlgItemMessageA@IAT ]
cmp [ ebp + 0x14 ] esi
je r-xdata
test edx edx
mov [ esp ] ebp
je r-xdata
mov edx [ esp + 0x1c ]
mov ebx ebp
mov ebp 0x3
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov edx [ ebp ]
cmp ebx eax
setg cl
sub ebx ecx
mov ecx edi
push ebx
push eax
call sub_48104c
add esp 0x8
mov eax [ esp ]
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x20 ]
test esi esi
jle r-xdata
xor ebp ebp
push 0x0
push ebp
push 0x199
push [ ebx ]
push edi
mov ebx edx
call [ SendDlgItemMessageA@IAT ]
mov edx ebx
mov ebx [ esp + 0x18 ]
mov [ edx + ebp * 4 ] eax
inc ebp
cmp esi ebp
jne r-xdata
sub_48104c
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebp [ SendDlgItemMessageA@IAT ]
xor eax eax
mov edi edx
mov esi ecx
push eax
push [ esp + 0x20 ]
push 0x18a
push edi
push esi
call ebp
inc eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ esp ] eax
push eax
mov ebx [ esp + 0x20 ]
push ebx
push 0x189
push edi
push esi
call ebp
xor eax eax
push eax
push ebx
push 0x199
push edi
push esi
call ebp
mov [ esp + 0x4 ] eax
push ebx
xor eax eax
push eax
push 0x185
push edi
push esi
call ebp
xor eax eax
push eax
push ebx
push 0x182
push edi
push esi
call ebp
mov ebx ebp
push [ esp ]
mov ebp [ esp + 0x24 ]
push ebp
push 0x181
push edi
push esi
call ebx
push [ esp + 0x4 ]
push ebp
push 0x19a
push edi
push esi
call ebx
xor eax eax
push eax
push ebp
push 0x186
push edi
push esi
call ebx
push [ esp ]
call sub_43f9d4
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4810f6
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
push eax
call sub_4a8654
add esp 0x4
movzx ebp al
cmp [ ebx + ebp + 0x3c ] 0x0
je r-xdata
movzx eax [ edi + esi + 0xc ]
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ ebx + ebp + 0x3c ] 0x1
push 0x4bd
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_481147
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
push eax
call sub_4a8654
add esp 0x4
movzx ebp al
cmp [ ebx + ebp + 0x3c ] 0x0
jne r-xdata
movzx eax [ edi + esi + 0xc ]
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ ebx + ebp + 0x3c ] 0x0
push 0x4c8
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_4811f4
push edi
push esi
mov edi [ esp + 0xc ]
push 0x0
push [ edi + 0x4 ]
jmp r-xdata
call sub_47e33c
add esp 0x8
mov esi eax
test esi esi
jne r-xdata
push esi
push edi
call sub_481251
add esp 0x8
push [ esi + 0x1c ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
push 0x0
push [ edi + 0x4 ]
push [ edi ]
call sub_47dc40
add esp 0x4
push [ edi + 0x4 ]
call sub_47dc40
add esp 0x4
xor eax eax
mov [ edi + 0x4 ] eax
mov [ edi ] eax
pop esi
pop edi
retn
sub_481251
push edi
push esi
mov esi [ esp + 0x10 ]
mov edi [ esp + 0xc ]
push esi
push [ edi ]
call sub_47eb51
add esp 0x8
push esi
push [ edi + 0x4 ]
call sub_47eb51
add esp 0x8
cmp eax esi
je r-xdata
pop esi
pop edi
retn
push 0x51e
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_481290
push edi
push esi
mov esi [ esp + 0x10 ]
mov edi [ esp + 0xc ]
cmp [ esi ] 0x0
je r-xdata
push esi
push [ edi + 0x4 ]
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
push esi
push [ edi ]
call sub_47dcb3
add esp 0x8
cmp eax esi
je r-xdata
pop esi
pop edi
retn
push 0x516
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x513
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_48131d
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ecx [ ecx ]
mov edx [ eax + 0x4 ]
cmp ecx edx
jge r-xdata
add edx [ eax + 0x8 ]
xor eax eax
cmp ecx edx
setge al
retn
xor eax eax
dec eax
retn
sub_481351
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x540
mov eax [ rw-data ]
mov edi [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x10 ]
mov [ esp + 0x538 ] eax
mov eax [ edi + 0x4 ]
mov esi [ ecx ]
test eax eax
je r-xdata
lea eax [ edi + 0x8 ]
mov [ esp + 0x10 ] esi
cmp [ eax ] 0x0
je r-xdata
cmp [ eax ] 0x0
mov [ esp + 0x10 ] esi
je r-xdata
lea edi [ esp + 0x2f8 ]
mov ecx 0x9
mov esi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0x14 ]
cmp [ esi + 0x10 ] 0x0
jle r-xdata
xor ecx ecx
inc ecx
push 0x20
push ecx
mov [ esp + 0x14 ] eax
call sub_43f807
add esp 0x8
mov esi eax
xor ebx ebx
xor eax eax
mov [ esi ] ebx
inc eax
mov edi [ esp + 0x10 ]
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] eax
mov eax [ esp + 0xc ]
push [ eax ]
call sub_43f79e
add esp 0x4
mov [ esi + 0x1c ] eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x14 ] ebx
push esi
push [ ebp + 0xc ]
call sub_481290
add esp 0x8
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
mov ecx [ ecx + 0x10 ]
lea edx [ eax + 0xf ]
mov [ esi + 0xc ] edx
mov edx 0xc
push edi
push ebx
push ebx
mov ebx [ ebp + 0x10 ]
push 0x5000000d
push r--data
push edx
push ecx
push eax
push 0x3
push ebx
call sub_480173
add esp 0x28
inc edi
mov [ esp + 0x10 ] edi
xor eax eax
inc eax
push 0x20
push eax
call sub_43f807
add esp 0x8
xor ecx ecx
xor edx edx
inc edx
mov [ eax ] ecx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ecx
push eax
push [ ebp + 0xc ]
call sub_481290
add esp 0x8
mov eax [ edi + 0x8 ]
mov ecx [ ebx + 0xc ]
test eax eax
lea edx [ ecx - 0x4 ]
cmovne edx ecx
mov [ ebx + 0x18 ] edx
je r-xdata
xor eax eax
inc eax
mov [ esp + 0x1c ] eax
xor edi edi
xor ebx ebx
inc edi
mov [ esp + 0x1c ] edi
xor edi edi
add ecx 0x4
mov [ ebx + 0xc ] ecx
add [ ebx + 0x10 ] 0xfffffff2
add [ ebx + 0x14 ] 0x7
mov esi [ esp + 0x10 ]
mov [ ebx + 0x1c ] esi
mov [ ebx + 0x20 ] eax
inc esi
cmp [ edi + 0x4 ] 0x0
je r-xdata
add ecx 0x8
mov [ ebx + 0xc ] ecx
add eax 0x24
dec [ esp + 0x1c ]
jne r-xdata
mov ecx edx
mov [ ebx + 0xc ] edx
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp eax 0x6
jne r-xdata
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edx [ eax ]
cmp ecx edx
jge r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov [ eax ] ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ edx + 0x1c ]
test ebx ebx
mov [ esp + 0x20 ] ebx
jle r-xdata
push 0x59f
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
add esp 0xc
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
lea edi [ esp + 0x3c ]
mov eax [ edx + 0xc ]
movzx ebx ax
shr eax 0x10
lea ecx [ ebx * 4 ]
lea edx [ ecx + ecx * 8 ]
lea ecx [ esp + edx + 0x2f8 ]
mov [ esp + 0x14 ] ecx
mov ecx 0x9
mov esi [ esp + 0x14 ]
[ edi ] [ esi ]
lea ecx [ ebx + eax ]
lea ecx [ ecx + ecx * 8 ]
mov esi [ esp + ecx * 4 + 0x30c ]
add esi [ esp + ecx * 4 + 0x308 ]
lea ecx [ eax + ebx + 0x1 ]
inc eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x14 ]
sub esi [ eax + 0x14 ]
mov [ esp + 0x4c ] esi
lea esi [ esp + 0x304 ]
mov eax [ esp + 0x48 ]
add edx esi
mov esi ebx
xor eax eax
mov esi [ esp + 0x1c ]
inc eax
mov ecx eax
cmp [ edx + 0x1c ] ecx
sete al
cmp esi ecx
sete cl
xor cl al
jne r-xdata
mov ecx [ esp + 0x538 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
xor esi esi
xor esi esi
inc esi
add edx 0x24
cmp esi ecx
jl r-xdata
mov eax edi
mov [ esp + 0x48 ] edi
cmp esi 0x1
jne r-xdata
push 0x575
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
mov esi [ esp + 0x28 ]
add esp 0xc
push ebx
call sub_48023b
add esp 0x4
push 0x67d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esp + 0x10 ]
xor ecx ecx
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jmp [ eax * 4 + jump_table_41aa48 ]
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + 0x3c ]
lea esi [ esp + eax * 4 + 0xb8 ]
xor eax eax
[ edi ] [ esi ]
dec eax
mov [ esp + 0x2c ] eax
mov ebx eax
inc esi
cmp esi ebx
jl r-xdata
mov edi [ edx ]
cmp eax edi
jge r-xdata
mov edx [ esp + 0xc ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x304 ]
cmp esi 0x2
lea edi [ esp + 0x2f8 ]
jl r-xdata
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
mov esi [ edx + 0x1c ]
cmp esi 0x11
jb r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push [ edx + 0x4 ]
mov eax [ ebp + 0x10 ]
push [ eax ]
lea eax [ esp + 0x48 ]
push eax
call sub_48048a
add esp 0x10
xor edx edx
mov ecx eax
mov [ esp + 0x14 ] eax
call sub_481ed1
mov edi eax
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x4c ]
lea esi [ ecx + eax * 8 + 0x3 ]
shl eax 0x3
mov [ esp + 0x48 ] esi
mov esi [ esp + 0x10 ]
push esi
push edi
push 0x0
push 0x5000000c
push r--data
push eax
push edx
push ecx
mov eax 0x3
push eax
lea eax [ esp + 0x60 ]
push eax
call sub_480173
add esp 0x28
push edi
call sub_43f9d4
add esp 0x4
push [ esp + 0x14 ]
call sub_43f9d4
xor ecx ecx
add esp 0x4
jmp r-xdata
cmp [ esp + esi * 4 + 0x78 ] edx
je r-xdata
jmp r-xdata
xorps xmm0 xmm0
movaps [ esp + 0x60 ] xmm0
mov eax [ edx ]
mov [ esp + 0xc ] edx
cmp eax 0x8
ja r-xdata
mov esi [ esp + 0x20 ]
cmp esi 0x10
jb r-xdata
mov esi [ ebp + 0x10 ]
mov ecx 0x9
[ edi ] [ esi ]
mov esi [ ebp + 0x14 ]
mov [ esp + 0x304 ] eax
xor edi edi
inc edi
mov [ esp + 0x1c ] edi
dec esi
lea ecx [ esp + 0x328 ]
cmp esi 0x2
lea ebx [ esp + 0x2f8 ]
mov [ esp + 0x1c ] esi
jl r-xdata
push 0x57e
push r--data
push r--data
call sub_4a509d
add esp 0xc
push ecx
call sub_43f9d4
add esp 0x4
push 0x20
push 0x1
mov [ esp + 0x1c ] ecx
call sub_43f807
add esp 0x8
mov edi eax
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ esp + 0xc ] esi
mov esi [ esp + 0x18 ]
mov [ edi + 0x8 ] esi
mov eax [ esp + 0x14 ]
mov [ edi + 0x1c ] eax
movsd xmm0 [ esp + 0x60 ]
movsd xmm1 [ esp + 0x68 ]
movsd [ edi + 0x14 ] xmm1
movsd [ edi + 0xc ] xmm0
push edi
push [ ebp + 0xc ]
call sub_481290
add esp 0x8
push edi
push [ ebp + 0x8 ]
call sub_4810f6
add esp 0x8
mov eax [ esp + 0x10 ]
mov ecx 0x0
cmp [ esp + 0xc ] eax
cmovne esi ecx
add eax esi
mov [ esp + 0x10 ] eax
jmp r-xdata
xor eax eax
inc eax
mov [ esp + 0x18 ] eax
jmp r-xdata
push 0x5a5
push r--data
push r--data
mov edi edx
call sub_4a509d
mov edx edi
add esp 0xc
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + eax * 4 + 0xb8 ]
mov eax esi
lea esi [ esp + 0x3c ]
[ edi ] [ esi ]
mov [ esp + eax * 4 + 0x78 ] edx
inc eax
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x20 ] eax
jmp r-xdata
push 0x5c4
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x18 ]
add esp 0xc
inc edi
cmp edi [ esi + 0x10 ]
jl r-xdata
mov edx [ ecx ]
cmp eax edx
cmovl eax edx
add ecx 0x24
dec esi
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0x1c ]
lea edx [ eax - 0x1 ]
lea eax [ esp + 0x31c ]
mov ebx [ esp + 0x20 ]
test eax eax
jle r-xdata
mov esi [ ebp + 0x14 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
test ebx ebx
js r-xdata
mov eax [ esi + 0x18 ]
mov edx [ eax + edi * 4 ]
mov eax [ edx ]
mov [ esp + 0x30 ] edi
cmp eax 0x9
je r-xdata
cmp [ esp + 0x1c ] 0x0
mov ebx [ ebp + 0x10 ]
jg r-xdata
mov esi [ ebp + 0x14 ]
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov eax [ esp + 0xc ]
xor ebx ebx
lea edi [ esp + 0x30c ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x14 ] eax
xor eax eax
mov edi eax
mov ecx 0x9
mov esi ebx
add eax 0x24
dec edx
[ edi ] [ esi ]
jne r-xdata
add eax ebx
lea ecx [ ebx + ebx * 8 ]
lea edx [ esp + 0x304 ]
mov [ esp + 0x2c ] eax
lea ecx [ edx + ecx * 4 ]
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x2c ]
mov ecx [ ebx + 0xc ]
lea eax [ esp + 0x304 ]
jmp r-xdata
mov edi [ esp + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx 0x51eb851f
mov ecx [ ecx + ebx * 4 ]
inc ebx
add ecx eax
mov [ esp + 0xc ] ecx
mov ecx [ edi - 0x4 ]
add ecx 0x3
imul eax ecx
imul ecx [ esp + 0xc ]
imul edx
mov esi edx
mov edx 0x51eb851f
mov eax esi
sar esi 0x5
shr eax 0x1f
add esi eax
mov eax ecx
imul edx
mov eax edx
sar edx 0x5
shr eax 0x1f
add edx eax
mov eax [ edi ]
add esi eax
lea eax [ eax + edx - 0x3 ]
sub eax esi
mov [ edi ] esi
mov [ edi - 0x4 ] eax
add edi 0x24
cmp [ esp + 0x1c ] ebx
mov eax [ esp + 0xc ]
jne r-xdata
inc ebx
mov [ ecx ] eax
add ecx 0x24
cmp ebx edx
jl r-xdata
sub_481853
mov eax [ esp + 0xc ]
mov ecx [ edx + 0x4 ]
movsx edx [ eax + 0x1c ]
call sub_481ed1
mov edx [ esp + 0xc ]
mov esi eax
mov al [ edx + 0x1c ]
mov [ esp + 0x60 ] al
mov eax [ edx + 0x20 ]
mov ecx [ edx + 0x28 ]
cmp eax 0x64
jne r-xdata
test ecx ecx
je r-xdata
mov edi [ esp + 0x10 ]
test ecx ecx
lea eax [ edi + 0x1 ]
je r-xdata
cmp [ edx + 0x24 ] 0x0
mov edi [ esp + 0x10 ]
mov ecx sub_480785
mov edx sub_48083b
cmovne ecx edx
lea edx [ edi + 0x1 ]
push eax
push edx
push edi
push esi
lea eax [ esp + 0x4c ]
push eax
call ecx
mov edi [ esp + 0x10 ]
lea ecx [ edi + 0x1 ]
push eax
push ecx
push edi
push esi
lea eax [ esp + 0x4c ]
push eax
call sub_4808ec
jmp r-xdata
push eax
push edi
push esi
push [ edx + 0x24 ]
lea eax [ esp + 0x4c ]
push eax
call sub_48028f
jmp r-xdata
push eax
push edi
push esi
lea eax [ esp + 0x48 ]
push eax
call sub_48030e
add esp 0x10
jmp r-xdata
mov esi edi
add esp 0x14
push esi
call sub_43f9d4
add esp 0x4
mov [ esp + 0x18 ] 0x2
xor ecx ecx
jmp r-xdata
push ecx
call sub_43f9d4
add esp 0x4
push 0x20
push 0x1
mov [ esp + 0x1c ] ecx
call sub_43f807
add esp 0x8
mov edi eax
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ esp + 0xc ] esi
mov esi [ esp + 0x18 ]
mov [ edi + 0x8 ] esi
mov eax [ esp + 0x14 ]
mov [ edi + 0x1c ] eax
movsd xmm0 [ esp + 0x60 ]
movsd xmm1 [ esp + 0x68 ]
movsd [ edi + 0x14 ] xmm1
movsd [ edi + 0xc ] xmm0
push edi
push [ ebp + 0xc ]
call sub_481290
add esp 0x8
push edi
push [ ebp + 0x8 ]
call sub_4810f6
add esp 0x8
mov eax [ esp + 0x10 ]
mov ecx 0x0
cmp [ esp + 0xc ] eax
cmovne esi ecx
add eax esi
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ebx [ esp + 0x20 ]
test eax eax
jle r-xdata
mov esi [ ebp + 0x14 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
test ebx ebx
js r-xdata
mov eax [ esi + 0x18 ]
mov edx [ eax + edi * 4 ]
mov eax [ edx ]
mov [ esp + 0x30 ] edi
cmp eax 0x9
je r-xdata
cmp [ esp + 0x1c ] 0x0
mov ebx [ ebp + 0x10 ]
jg r-xdata
add eax ebx
lea ecx [ ebx + ebx * 8 ]
lea edx [ esp + 0x304 ]
mov [ esp + 0x2c ] eax
lea ecx [ edx + ecx * 4 ]
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x2c ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp eax 0x6
jne r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ esp + 0x304 ]
jmp r-xdata
inc ebx
mov [ ecx ] eax
add ecx 0x24
cmp ebx edx
jl r-xdata
mov edx [ edx + 0x1c ]
test ebx ebx
mov [ esp + 0x20 ] ebx
jle r-xdata
push 0x59f
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
add esp 0xc
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
lea edi [ esp + 0x3c ]
mov eax [ edx + 0xc ]
movzx ebx ax
shr eax 0x10
lea ecx [ ebx * 4 ]
lea edx [ ecx + ecx * 8 ]
lea ecx [ esp + edx + 0x2f8 ]
mov [ esp + 0x14 ] ecx
mov ecx 0x9
mov esi [ esp + 0x14 ]
[ edi ] [ esi ]
lea ecx [ ebx + eax ]
lea ecx [ ecx + ecx * 8 ]
mov esi [ esp + ecx * 4 + 0x30c ]
add esi [ esp + ecx * 4 + 0x308 ]
lea ecx [ eax + ebx + 0x1 ]
inc eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x14 ]
sub esi [ eax + 0x14 ]
mov [ esp + 0x4c ] esi
lea esi [ esp + 0x304 ]
mov eax [ esp + 0x48 ]
add edx esi
mov esi ebx
xor eax eax
mov esi [ esp + 0x1c ]
inc eax
mov ecx eax
cmp [ edx + 0x1c ] ecx
sete al
cmp esi ecx
sete cl
xor cl al
jne r-xdata
add eax 0x24
dec [ esp + 0x1c ]
jne r-xdata
mov ecx edx
mov [ ebx + 0xc ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov [ eax ] ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor esi esi
xor esi esi
inc esi
add edx 0x24
cmp esi ecx
jl r-xdata
mov eax edi
mov [ esp + 0x48 ] edi
cmp esi 0x1
jne r-xdata
push 0x575
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
mov esi [ esp + 0x28 ]
add esp 0xc
mov edx [ eax ]
cmp ecx edx
jge r-xdata
mov ecx [ esp + 0x538 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
push 0x67d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esp + 0x10 ]
xor ecx ecx
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jmp [ eax * 4 + jump_table_41aa48 ]
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + 0x3c ]
lea esi [ esp + eax * 4 + 0xb8 ]
xor eax eax
[ edi ] [ esi ]
dec eax
mov [ esp + 0x2c ] eax
mov ebx eax
inc esi
cmp esi ebx
jl r-xdata
mov edi [ edx ]
cmp eax edi
jge r-xdata
mov edx [ esp + 0xc ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x304 ]
cmp esi 0x2
lea edi [ esp + 0x2f8 ]
jl r-xdata
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
mov esi [ edx + 0x1c ]
cmp esi 0x11
jb r-xdata
push ebx
call sub_48023b
add esp 0x4
cmp [ esp + 0x3c ] 0x0
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push [ edx + 0x4 ]
mov eax [ ebp + 0x10 ]
push [ eax ]
lea eax [ esp + 0x48 ]
push eax
call sub_48048a
add esp 0x10
xor edx edx
mov ecx eax
mov [ esp + 0x14 ] eax
call sub_481ed1
mov edi eax
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x4c ]
lea esi [ ecx + eax * 8 + 0x3 ]
shl eax 0x3
mov [ esp + 0x48 ] esi
mov esi [ esp + 0x10 ]
push esi
push edi
push 0x0
push 0x5000000c
push r--data
push eax
push edx
push ecx
mov eax 0x3
push eax
lea eax [ esp + 0x60 ]
push eax
call sub_480173
add esp 0x28
push edi
call sub_43f9d4
add esp 0x4
push [ esp + 0x14 ]
call sub_43f9d4
xor ecx ecx
add esp 0x4
jmp r-xdata
cmp [ esp + esi * 4 + 0x78 ] edx
je r-xdata
jmp r-xdata
xorps xmm0 xmm0
movaps [ esp + 0x60 ] xmm0
mov eax [ edx ]
mov [ esp + 0xc ] edx
cmp eax 0x8
ja r-xdata
mov esi [ esp + 0x20 ]
cmp esi 0x10
jb r-xdata
mov esi [ ebp + 0x10 ]
mov ecx 0x9
[ edi ] [ esi ]
mov esi [ ebp + 0x14 ]
mov [ esp + 0x304 ] eax
xor edi edi
inc edi
mov [ esp + 0x1c ] edi
dec esi
lea ecx [ esp + 0x328 ]
cmp esi 0x2
lea ebx [ esp + 0x2f8 ]
mov [ esp + 0x1c ] esi
jl r-xdata
push 0x57e
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor eax eax
inc eax
mov [ esp + 0x18 ] eax
jmp r-xdata
push 0x5a5
push r--data
push r--data
mov edi edx
call sub_4a509d
mov edx edi
add esp 0xc
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + eax * 4 + 0xb8 ]
mov eax esi
lea esi [ esp + 0x3c ]
[ edi ] [ esi ]
mov [ esp + eax * 4 + 0x78 ] edx
inc eax
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x20 ] eax
jmp r-xdata
push 0x5c4
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x18 ]
add esp 0xc
inc edi
cmp edi [ esi + 0x10 ]
jl r-xdata
mov edx [ ecx ]
cmp eax edx
cmovl eax edx
add ecx 0x24
dec esi
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0x1c ]
lea edx [ eax - 0x1 ]
lea eax [ esp + 0x31c ]
mov esi [ ebp + 0x14 ]
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov eax [ esp + 0xc ]
xor ebx ebx
lea edi [ esp + 0x30c ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x14 ] eax
xor eax eax
mov edi eax
mov ecx 0x9
mov esi ebx
add eax 0x24
dec edx
[ edi ] [ esi ]
jne r-xdata
mov edi [ esp + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx 0x51eb851f
mov ecx [ ecx + ebx * 4 ]
inc ebx
add ecx eax
mov [ esp + 0xc ] ecx
mov ecx [ edi - 0x4 ]
add ecx 0x3
imul eax ecx
imul ecx [ esp + 0xc ]
imul edx
mov esi edx
mov edx 0x51eb851f
mov eax esi
sar esi 0x5
shr eax 0x1f
add esi eax
mov eax ecx
imul edx
mov eax edx
sar edx 0x5
shr eax 0x1f
add edx eax
mov eax [ edi ]
add esi eax
lea eax [ eax + edx - 0x3 ]
sub eax esi
mov [ edi ] esi
mov [ edi - 0x4 ] eax
add edi 0x24
cmp [ esp + 0x1c ] ebx
mov eax [ esp + 0xc ]
jne r-xdata
sub_4818a3
mov eax [ edx + 0x24 ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xc ]
movsx edx [ eax + 0x1c ]
call sub_481ed1
mov [ esp + 0x34 ] eax
mov eax [ esp + 0xc ]
mov al [ eax + 0x1c ]
mov [ esp + 0x60 ] al
push 0x8
mov eax [ esp + 0x10 ]
push [ eax + 0x24 ]
call sub_43f807
mov edx [ esp + 0x14 ]
add esp 0x8
mov [ esp + 0x28 ] eax
mov edi [ edx + 0x24 ]
test edi edi
jle r-xdata
mov esi edx
mov edx [ esp + 0x34 ]
mov [ esp + 0x24 ] ebx
lea ecx [ esp + 0x3c ]
push edi
mov ebx [ esp + 0x2c ]
push ebx
push [ esi + 0x20 ]
push [ esp + 0x1c ]
call sub_48037c
mov eax esi
add esp 0x10
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esp + 0x10 ]
xor esi esi
xor ecx ecx
inc ecx
inc eax
mov [ esp + 0x24 ] eax
mov eax [ edx + 0x2c ]
mov [ esp + 0x14 ] ecx
inc [ esp + 0x18 ]
push ebx
call sub_43f9d4
add esp 0x4
push [ esp + 0x34 ]
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x24 ]
xor ecx ecx
jmp r-xdata
xor esi esi
xor eax eax
mov al [ eax + esi ]
jmp r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
push [ ebx + esi * 8 ]
mov edi eax
call sub_43f9d4
mov eax edi
add esp 0x4
inc esi
cmp esi [ eax + 0x24 ]
jl r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
cmp edi 0x10
jl r-xdata
mov ecx [ edx + 0x28 ]
mov edi [ esp + 0x28 ]
movsx edx al
mov ecx [ ecx + esi * 4 ]
call sub_481ed1
mov edx [ esp + 0xc ]
mov [ edi + esi * 8 ] eax
mov eax [ esp + 0x24 ]
lea eax [ eax + esi ]
mov [ edi + esi * 8 + 0x4 ] eax
mov eax [ edx + 0x2c ]
test eax eax
je r-xdata
push ecx
call sub_43f9d4
add esp 0x4
push 0x20
push 0x1
mov [ esp + 0x1c ] ecx
call sub_43f807
add esp 0x8
mov edi eax
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ esp + 0xc ] esi
mov esi [ esp + 0x18 ]
mov [ edi + 0x8 ] esi
mov eax [ esp + 0x14 ]
mov [ edi + 0x1c ] eax
movsd xmm0 [ esp + 0x60 ]
movsd xmm1 [ esp + 0x68 ]
movsd [ edi + 0x14 ] xmm1
movsd [ edi + 0xc ] xmm0
push edi
push [ ebp + 0xc ]
call sub_481290
add esp 0x8
push edi
push [ ebp + 0x8 ]
call sub_4810f6
add esp 0x8
mov eax [ esp + 0x10 ]
mov ecx 0x0
cmp [ esp + 0xc ] eax
cmovne esi ecx
add eax esi
mov [ esp + 0x10 ] eax
jmp r-xdata
test eax eax
je r-xdata
mov cl [ eax + esi ]
mov [ esp + edi + 0x60 ] cl
inc edi
mov [ esp + 0x14 ] edi
jmp r-xdata
push 0x614
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x18 ]
add esp 0xc
mov eax [ edx + 0x2c ]
mov ebx [ esp + 0x20 ]
test eax eax
jle r-xdata
mov esi [ ebp + 0x14 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
test ebx ebx
js r-xdata
mov edi [ edx + 0x24 ]
inc esi
cmp esi edi
jl r-xdata
mov eax [ esi + 0x18 ]
mov edx [ eax + edi * 4 ]
mov eax [ edx ]
mov [ esp + 0x30 ] edi
cmp eax 0x9
je r-xdata
cmp [ esp + 0x1c ] 0x0
mov ebx [ ebp + 0x10 ]
jg r-xdata
add eax ebx
lea ecx [ ebx + ebx * 8 ]
lea edx [ esp + 0x304 ]
mov [ esp + 0x2c ] eax
lea ecx [ edx + ecx * 4 ]
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x2c ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp eax 0x6
jne r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ esp + 0x304 ]
jmp r-xdata
inc ebx
mov [ ecx ] eax
add ecx 0x24
cmp ebx edx
jl r-xdata
mov edx [ edx + 0x1c ]
test ebx ebx
mov [ esp + 0x20 ] ebx
jle r-xdata
push 0x59f
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
add esp 0xc
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
lea edi [ esp + 0x3c ]
mov eax [ edx + 0xc ]
movzx ebx ax
shr eax 0x10
lea ecx [ ebx * 4 ]
lea edx [ ecx + ecx * 8 ]
lea ecx [ esp + edx + 0x2f8 ]
mov [ esp + 0x14 ] ecx
mov ecx 0x9
mov esi [ esp + 0x14 ]
[ edi ] [ esi ]
lea ecx [ ebx + eax ]
lea ecx [ ecx + ecx * 8 ]
mov esi [ esp + ecx * 4 + 0x30c ]
add esi [ esp + ecx * 4 + 0x308 ]
lea ecx [ eax + ebx + 0x1 ]
inc eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x14 ]
sub esi [ eax + 0x14 ]
mov [ esp + 0x4c ] esi
lea esi [ esp + 0x304 ]
mov eax [ esp + 0x48 ]
add edx esi
mov esi ebx
xor eax eax
mov esi [ esp + 0x1c ]
inc eax
mov ecx eax
cmp [ edx + 0x1c ] ecx
sete al
cmp esi ecx
sete cl
xor cl al
jne r-xdata
add eax 0x24
dec [ esp + 0x1c ]
jne r-xdata
mov ecx edx
mov [ ebx + 0xc ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov [ eax ] ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor esi esi
xor esi esi
inc esi
add edx 0x24
cmp esi ecx
jl r-xdata
mov eax edi
mov [ esp + 0x48 ] edi
cmp esi 0x1
jne r-xdata
push 0x575
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
mov esi [ esp + 0x28 ]
add esp 0xc
mov edx [ eax ]
cmp ecx edx
jge r-xdata
mov ecx [ esp + 0x538 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
push 0x67d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esp + 0x10 ]
xor ecx ecx
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jmp [ eax * 4 + jump_table_41aa48 ]
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + 0x3c ]
lea esi [ esp + eax * 4 + 0xb8 ]
xor eax eax
[ edi ] [ esi ]
dec eax
mov [ esp + 0x2c ] eax
mov ebx eax
inc esi
cmp esi ebx
jl r-xdata
mov edi [ edx ]
cmp eax edi
jge r-xdata
mov edx [ esp + 0xc ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x304 ]
cmp esi 0x2
lea edi [ esp + 0x2f8 ]
jl r-xdata
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
mov esi [ edx + 0x1c ]
cmp esi 0x11
jb r-xdata
push ebx
call sub_48023b
add esp 0x4
lea eax [ esp + 0x38 ]
push eax
push [ edx + 0x4 ]
mov eax [ ebp + 0x10 ]
push [ eax ]
lea eax [ esp + 0x48 ]
push eax
call sub_48048a
add esp 0x10
xor edx edx
mov ecx eax
mov [ esp + 0x14 ] eax
call sub_481ed1
mov edi eax
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x4c ]
lea esi [ ecx + eax * 8 + 0x3 ]
shl eax 0x3
mov [ esp + 0x48 ] esi
mov esi [ esp + 0x10 ]
push esi
push edi
push 0x0
push 0x5000000c
push r--data
push eax
push edx
push ecx
mov eax 0x3
push eax
lea eax [ esp + 0x60 ]
push eax
call sub_480173
add esp 0x28
push edi
call sub_43f9d4
add esp 0x4
push [ esp + 0x14 ]
call sub_43f9d4
xor ecx ecx
add esp 0x4
jmp r-xdata
cmp [ esp + esi * 4 + 0x78 ] edx
je r-xdata
jmp r-xdata
xorps xmm0 xmm0
movaps [ esp + 0x60 ] xmm0
mov eax [ edx ]
mov [ esp + 0xc ] edx
cmp eax 0x8
ja r-xdata
mov esi [ esp + 0x20 ]
cmp esi 0x10
jb r-xdata
mov esi [ ebp + 0x10 ]
mov ecx 0x9
[ edi ] [ esi ]
mov esi [ ebp + 0x14 ]
mov [ esp + 0x304 ] eax
xor edi edi
inc edi
mov [ esp + 0x1c ] edi
dec esi
lea ecx [ esp + 0x328 ]
cmp esi 0x2
lea ebx [ esp + 0x2f8 ]
mov [ esp + 0x1c ] esi
jl r-xdata
push 0x57e
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor eax eax
inc eax
mov [ esp + 0x18 ] eax
jmp r-xdata
push 0x5a5
push r--data
push r--data
mov edi edx
call sub_4a509d
mov edx edi
add esp 0xc
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + eax * 4 + 0xb8 ]
mov eax esi
lea esi [ esp + 0x3c ]
[ edi ] [ esi ]
mov [ esp + eax * 4 + 0x78 ] edx
inc eax
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x20 ] eax
jmp r-xdata
push 0x5c4
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x18 ]
add esp 0xc
inc edi
cmp edi [ esi + 0x10 ]
jl r-xdata
mov edx [ ecx ]
cmp eax edx
cmovl eax edx
add ecx 0x24
dec esi
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0x1c ]
lea edx [ eax - 0x1 ]
lea eax [ esp + 0x31c ]
mov esi [ ebp + 0x14 ]
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov eax [ esp + 0xc ]
xor ebx ebx
lea edi [ esp + 0x30c ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x14 ] eax
xor eax eax
mov edi eax
mov ecx 0x9
mov esi ebx
add eax 0x24
dec edx
[ edi ] [ esi ]
jne r-xdata
mov edi [ esp + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx 0x51eb851f
mov ecx [ ecx + ebx * 4 ]
inc ebx
add ecx eax
mov [ esp + 0xc ] ecx
mov ecx [ edi - 0x4 ]
add ecx 0x3
imul eax ecx
imul ecx [ esp + 0xc ]
imul edx
mov esi edx
mov edx 0x51eb851f
mov eax esi
sar esi 0x5
shr eax 0x1f
add esi eax
mov eax ecx
imul edx
mov eax edx
sar edx 0x5
shr eax 0x1f
add edx eax
mov eax [ edi ]
add esi eax
lea eax [ eax + edx - 0x3 ]
sub eax esi
mov [ edi ] esi
mov [ edi - 0x4 ] eax
add edi 0x24
cmp [ esp + 0x1c ] ebx
mov eax [ esp + 0xc ]
jne r-xdata
sub_481a8b
mov eax [ esp + 0xc ]
mov ecx [ edx + 0x4 ]
movsx edx [ eax + 0x1c ]
call sub_481ed1
mov edx [ esp + 0xc ]
mov esi eax
mov al [ edx + 0x1c ]
mov [ esp + 0x60 ] al
cmp [ edx + 0x24 ] 0x0
mov [ esp + 0x34 ] esi
je r-xdata
mov eax [ edx + 0x20 ]
mov edi [ esp + 0x10 ]
test eax eax
je r-xdata
push 0x18
xor eax eax
inc eax
push eax
call sub_43f807
add esp 0x8
mov edi [ esp + 0x10 ]
mov ecx eax
lea eax [ edi + 0x3 ]
lea edx [ edi + 0x2 ]
mov [ esp + 0x14 ] edx
lea edx [ edi + 0x1 ]
push eax
push [ esp + 0x18 ]
push edx
push edi
push esi
mov esi [ esp + 0x20 ]
push [ esi + 0x20 ]
lea eax [ esp + 0x54 ]
push eax
mov [ esp + 0x30 ] ecx
push ecx
call sub_480b37
add esp 0x20
mov [ esp + 0x61 ] 0x6475
mov [ esp + 0x18 ] 0x4
jmp r-xdata
mov ecx [ edx + 0x2c ]
lea eax [ edi + 0x1 ]
cmp ecx 0x64
jne r-xdata
lea ecx [ edi + 0x1 ]
push [ edx + 0x28 ]
push eax
push ecx
push edi
push esi
lea eax [ esp + 0x50 ]
push eax
mov esi edx
call sub_4809eb
add esp 0x18
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push ecx
push eax
push edi
push esi
lea eax [ esp + 0x4c ]
push eax
call sub_48085a
add esp 0x14
push eax
push edi
push esi
lea eax [ esp + 0x48 ]
push eax
call sub_48097e
add esp 0x10
jmp r-xdata
mov [ esp + 0x18 ] 0x2
mov [ esp + 0x14 ] 0x0
push [ esp + 0x34 ]
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x14 ]
mov esi edi
mov edi [ esp + 0xc ]
mov [ esp + 0x24 ] ebx
mov ecx [ ebp + 0x10 ]
dec eax
mov esi [ edi + 0x2c ]
imul esi [ ecx + 0x10 ]
push 0x4
push eax
call sub_43f807
mov edx edi
add esp 0x8
mov ebx [ edx + 0x30 ]
cmp ebx 0x2
jl r-xdata
mov esi [ esp + 0xc ]
push ecx
call sub_43f9d4
add esp 0x4
push 0x20
push 0x1
mov [ esp + 0x1c ] ecx
call sub_43f807
add esp 0x8
mov edi eax
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ esp + 0xc ] esi
mov esi [ esp + 0x18 ]
mov [ edi + 0x8 ] esi
mov eax [ esp + 0x14 ]
mov [ edi + 0x1c ] eax
movsd xmm0 [ esp + 0x60 ]
movsd xmm1 [ esp + 0x68 ]
movsd [ edi + 0x14 ] xmm1
movsd [ edi + 0xc ] xmm0
push edi
push [ ebp + 0xc ]
call sub_481290
add esp 0x8
push edi
push [ ebp + 0x8 ]
call sub_4810f6
add esp 0x8
mov eax [ esp + 0x10 ]
mov ecx 0x0
cmp [ esp + 0xc ] eax
cmovne esi ecx
add eax esi
mov [ esp + 0x10 ] eax
jmp r-xdata
dec ebx
mov esi eax
mov [ esp + 0x28 ] esi
mov esi eax
xor ecx ecx
xor edi edi
mov ebx [ esp + 0x20 ]
test eax eax
jle r-xdata
mov esi [ ebp + 0x14 ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
test ebx ebx
js r-xdata
mov eax [ edx + 0x34 ]
mov edx 0x68db8bad
add ecx [ eax + edi * 4 ]
mov eax [ esp + 0x28 ]
imul eax ecx
imul edx
mov eax edx
sar edx 0xc
shr eax 0x1f
add edx eax
mov [ esi + edi * 4 ] edx
inc edi
mov edx [ esp + 0xc ]
mov ebx [ edx + 0x30 ]
dec ebx
cmp edi ebx
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x18 ]
mov edx [ eax + edi * 4 ]
mov eax [ edx ]
mov [ esp + 0x30 ] edi
cmp eax 0x9
je r-xdata
cmp [ esp + 0x1c ] 0x0
mov ebx [ ebp + 0x10 ]
jg r-xdata
add eax ebx
lea ecx [ ebx + ebx * 8 ]
lea edx [ esp + 0x304 ]
mov [ esp + 0x2c ] eax
lea ecx [ edx + ecx * 4 ]
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x2c ]
mov edi [ esp + 0x10 ]
lea ecx [ edi + 0x1 ]
push esi
push ebx
push 0x192
push ecx
mov eax [ ebp + 0x10 ]
push [ eax ]
call [ SendDlgItemMessageA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
mov ebx [ esp + 0x24 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp eax 0x6
jne r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ esp + 0x304 ]
jmp r-xdata
inc ebx
mov [ ecx ] eax
add ecx 0x24
cmp ebx edx
jl r-xdata
mov edx [ edx + 0x1c ]
test ebx ebx
mov [ esp + 0x20 ] ebx
jle r-xdata
push 0x59f
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
add esp 0xc
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
lea edi [ esp + 0x3c ]
mov eax [ edx + 0xc ]
movzx ebx ax
shr eax 0x10
lea ecx [ ebx * 4 ]
lea edx [ ecx + ecx * 8 ]
lea ecx [ esp + edx + 0x2f8 ]
mov [ esp + 0x14 ] ecx
mov ecx 0x9
mov esi [ esp + 0x14 ]
[ edi ] [ esi ]
lea ecx [ ebx + eax ]
lea ecx [ ecx + ecx * 8 ]
mov esi [ esp + ecx * 4 + 0x30c ]
add esi [ esp + ecx * 4 + 0x308 ]
lea ecx [ eax + ebx + 0x1 ]
inc eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x14 ]
sub esi [ eax + 0x14 ]
mov [ esp + 0x4c ] esi
lea esi [ esp + 0x304 ]
mov eax [ esp + 0x48 ]
add edx esi
mov esi ebx
xor eax eax
mov esi [ esp + 0x1c ]
inc eax
mov ecx eax
cmp [ edx + 0x1c ] ecx
sete al
cmp esi ecx
sete cl
xor cl al
jne r-xdata
add eax 0x24
dec [ esp + 0x1c ]
jne r-xdata
mov ecx edx
mov [ ebx + 0xc ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov [ eax ] ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor esi esi
xor esi esi
inc esi
add edx 0x24
cmp esi ecx
jl r-xdata
mov eax edi
mov [ esp + 0x48 ] edi
cmp esi 0x1
jne r-xdata
push 0x575
push r--data
push r--data
mov esi edx
call sub_4a509d
mov edx esi
mov esi [ esp + 0x28 ]
add esp 0xc
mov edx [ eax ]
cmp ecx edx
jge r-xdata
mov ecx [ esp + 0x538 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
push 0x67d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi [ esp + 0x10 ]
xor ecx ecx
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jmp [ eax * 4 + jump_table_41aa48 ]
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + 0x3c ]
lea esi [ esp + eax * 4 + 0xb8 ]
xor eax eax
[ edi ] [ esi ]
dec eax
mov [ esp + 0x2c ] eax
mov ebx eax
inc esi
cmp esi ebx
jl r-xdata
mov edi [ edx ]
cmp eax edi
jge r-xdata
mov edx [ esp + 0xc ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x304 ]
cmp esi 0x2
lea edi [ esp + 0x2f8 ]
jl r-xdata
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] edx
mov esi [ edx + 0x1c ]
cmp esi 0x11
jb r-xdata
push ebx
call sub_48023b
add esp 0x4
cmp [ esp + 0x3c ] 0x0
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push [ edx + 0x4 ]
mov eax [ ebp + 0x10 ]
push [ eax ]
lea eax [ esp + 0x48 ]
push eax
call sub_48048a
add esp 0x10
xor edx edx
mov ecx eax
mov [ esp + 0x14 ] eax
call sub_481ed1
mov edi eax
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x4c ]
lea esi [ ecx + eax * 8 + 0x3 ]
shl eax 0x3
mov [ esp + 0x48 ] esi
mov esi [ esp + 0x10 ]
push esi
push edi
push 0x0
push 0x5000000c
push r--data
push eax
push edx
push ecx
mov eax 0x3
push eax
lea eax [ esp + 0x60 ]
push eax
call sub_480173
add esp 0x28
push edi
call sub_43f9d4
add esp 0x4
push [ esp + 0x14 ]
call sub_43f9d4
xor ecx ecx
add esp 0x4
jmp r-xdata
cmp [ esp + esi * 4 + 0x78 ] edx
je r-xdata
jmp r-xdata
xorps xmm0 xmm0
movaps [ esp + 0x60 ] xmm0
mov eax [ edx ]
mov [ esp + 0xc ] edx
cmp eax 0x8
ja r-xdata
mov esi [ esp + 0x20 ]
cmp esi 0x10
jb r-xdata
mov esi [ ebp + 0x10 ]
mov ecx 0x9
[ edi ] [ esi ]
mov esi [ ebp + 0x14 ]
mov [ esp + 0x304 ] eax
xor edi edi
inc edi
mov [ esp + 0x1c ] edi
dec esi
lea ecx [ esp + 0x328 ]
cmp esi 0x2
lea ebx [ esp + 0x2f8 ]
mov [ esp + 0x1c ] esi
jl r-xdata
push 0x57e
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor eax eax
inc eax
mov [ esp + 0x18 ] eax
jmp r-xdata
push 0x5a5
push r--data
push r--data
mov edi edx
call sub_4a509d
mov edx edi
add esp 0xc
lea eax [ esi + esi * 8 ]
mov ecx 0x9
lea edi [ esp + eax * 4 + 0xb8 ]
mov eax esi
lea esi [ esp + 0x3c ]
[ edi ] [ esi ]
mov [ esp + eax * 4 + 0x78 ] edx
inc eax
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x20 ] eax
jmp r-xdata
push 0x5c4
push r--data
push r--data
call sub_4a509d
mov edx [ esp + 0x18 ]
add esp 0xc
inc edi
cmp edi [ esi + 0x10 ]
jl r-xdata
mov edx [ ecx ]
cmp eax edx
cmovl eax edx
add ecx 0x24
dec esi
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0x1c ]
lea edx [ eax - 0x1 ]
lea eax [ esp + 0x31c ]
mov esi [ ebp + 0x14 ]
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov eax [ esp + 0xc ]
xor ebx ebx
lea edi [ esp + 0x30c ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x14 ] eax
xor eax eax
mov edi eax
mov ecx 0x9
mov esi ebx
add eax 0x24
dec edx
[ edi ] [ esi ]
jne r-xdata
mov edi [ esp + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx 0x51eb851f
mov ecx [ ecx + ebx * 4 ]
inc ebx
add ecx eax
mov [ esp + 0xc ] ecx
mov ecx [ edi - 0x4 ]
add ecx 0x3
imul eax ecx
imul ecx [ esp + 0xc ]
imul edx
mov esi edx
mov edx 0x51eb851f
mov eax esi
sar esi 0x5
shr eax 0x1f
add esi eax
mov eax ecx
imul edx
mov eax edx
sar edx 0x5
shr eax 0x1f
add edx eax
mov eax [ edi ]
add esi eax
lea eax [ eax + edx - 0x3 ]
sub eax esi
mov [ edi ] esi
mov [ edi - 0x4 ] eax
add edi 0x24
cmp [ esp + 0x1c ] ebx
mov eax [ esp + 0xc ]
jne r-xdata
sub_481ed1
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov esi ecx
test esi esi
je r-xdata
xor eax eax
mov edi edx
push esi
call sub_4a7f30
add esp 0x4
xor ecx ecx
lea eax [ eax + eax + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov bl [ esi ]
mov ebp eax
mov [ esp ] eax
test bl bl
je r-xdata
mov [ ebp ] 0x0
mov eax [ esp ]
jmp r-xdata
mov eax edi
movzx eax al
push eax
call sub_4a8654
add esp 0x4
mov ebp [ esp ]
inc esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
cmp bl 0x26
jne r-xdata
movsx ecx al
mov edi eax
movzx eax bl
mov [ esp + 0x4 ] ecx
push eax
call sub_4a8654
add esp 0x4
cmp eax [ esp + 0x4 ]
mov eax edi
jne r-xdata
mov [ ebp ] bl
inc ebp
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
mov [ ebp ] 0x26
inc ebp
mov bl [ esi - 0x1 ]
xor eax eax
jmp r-xdata
test al al
je r-xdata
sub_481f7e
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x180
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ esp + 0x178 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax esi
je r-xdata
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x24 ] 0x0
jle r-xdata
cmp esi 0x111
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x10 ]
xor ebx ebx
lea edx [ esp + 0x18 ]
movzx edi ax
xor ebx ebx
cmp esi 0x2b
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx 0x2b
jne r-xdata
inc ebx
lea edx [ esp + 0x18 ]
cmp ebx [ esi + 0x24 ]
jl r-xdata
mov ecx [ esp + 0x178 ]
call sub_497c4a
mov eax ebx
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x14 ]
movsd xmm0 [ ecx + 0x1c ]
movsd xmm1 [ ecx + 0x24 ]
mov edi [ ecx + 0x18 ]
movsd [ esp + 0x20 ] xmm1
movsd [ esp + 0x18 ] xmm0
push 0x1
push edi
mov esi eax
call [ SetMapMode@IAT ]
mov ebx [ esi + 0x1c ]
push ebx
call sub_4a7f30
add esp 0x4
lea ecx [ esp + 0x120 ]
push ecx
push eax
push ebx
push edi
call [ GetTextExtentPoint32A@IAT ]
push 0x200f
push 0x6
lea eax [ esp + 0x20 ]
push eax
push edi
call [ DrawEdge@IAT ]
mov esi [ esi + 0x1c ]
push esi
call sub_4a7f30
add esp 0x4
mov edx [ esp + 0x1c ]
mov ebx [ esp + 0x24 ]
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x120 ]
mov ecx [ esp + 0x18 ]
sub ebx edx
sub ebx [ eax + 0x4 ]
mov eax ebx
shr eax 0x1f
add eax ebx
lea ebx [ esp + 0x120 ]
sar eax 0x1
add eax edx
mov edx [ esp + 0x20 ]
sub edx ecx
sub edx [ ebx ]
mov ebx edx
shr ebx 0x1f
add ebx edx
sar ebx 0x1
add ebx ecx
push [ esp + 0x8 ]
push esi
push eax
push ebx
push edi
call [ TextOutA@IAT ]
xor ebx ebx
inc ebx
jmp r-xdata
mov eax [ esi + ebx * 4 + 0x4 ]
mov [ esp + 0x18 ] edi
push sub_48131d
push edx
push [ eax + 0x4 ]
call sub_47e50d
add esp 0xc
test eax eax
jne r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx edi
mov [ esp + 0x10 ] eax
mov edx [ ebp + 0x8 ]
sub ecx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov [ edx + 0xbc ] 0x0
mov ecx [ esi ]
dec ecx
cmp ecx 0x7
ja r-xdata
mov eax ebx
xor ebx ebx
jmp [ ecx * 4 + jump_table_41aa6c ]
cmp eax 0x111
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov edi ebx
shr edi 0x10
cmp [ esi + 0x28 ] 0x0
je r-xdata
xor eax eax
cmp edi 0x200
je r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x1
ja r-xdata
mov ecx [ edx + 0x34 ]
cmp edi 0x100
jne r-xdata
movzx ecx di
cmp ecx 0x100
jne r-xdata
cmp edi 0x5
mov [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ edx + 0x34 ]
cmp edi 0x3
jne r-xdata
xor edx edx
cmp ecx esi
je r-xdata
mov [ esp + 0xc ] esi
mov edx esi
mov esi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
and ebx 0xffff0000
cmp ebx 0x3000000
jne r-xdata
push 0x2
movzx eax di
cmp eax 0x4
je r-xdata
cmp eax esi
jne r-xdata
test eax eax
mov ecx esi
jne r-xdata
mov [ esp + 0xc ] esi
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov [ esi + 0x38 ] ecx
jmp r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
cmp [ edx + 0xbc ] 0x0
je r-xdata
push 0x0
jmp r-xdata
cmp eax 0x1
jne r-xdata
xor ecx ecx
mov [ edx + 0x38 ] eax
jmp r-xdata
mov [ esi + 0x34 ] edx
mov edx esi
mov ecx [ esp + 0xc ]
cmp [ ecx + 0x28 ] 0x0
mov esi ecx
jne r-xdata
mov [ esp + 0x8 ] 0x0
push 0x2
push [ edx + 0x30 ]
push edx
push esi
call [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
add esp 0x10
mov eax [ esi + 0x28 ]
mov ebx [ esp + 0x8 ]
jmp r-xdata
mov [ rw-data ] 0x24
mov edi esi
mov eax [ edx ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
movzx ecx [ edx + 0xc1 ]
movzx eax [ edx + 0xc0 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx + 0xc2 ]
shl eax 0x10
or eax ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
push rw-data
mov esi edx
call [ ChooseColorA@IAT ]
test eax eax
je r-xdata
push [ edx + 0x30 ]
push edx
mov edi [ esp + 0x10 ]
xor ebx ebx
mov eax [ edi + 0x4 ]
inc eax
push ebx
push ebx
push 0x147
push eax
push [ edx ]
call [ SendDlgItemMessageA@IAT ]
mov [ esp + 0x14 ] eax
mov ecx [ edi + 0x4 ]
mov [ esp + 0x8 ] 0x0
inc ecx
push ebx
push eax
push 0x149
push ecx
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SendDlgItemMessageA@IAT ]
inc eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov ecx [ edi + 0x4 ]
mov ebx eax
inc ecx
push ebx
push [ esp + 0x18 ]
push 0x148
push ecx
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SendDlgItemMessageA@IAT ]
mov eax [ edi + 0x4 ]
inc eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetDlgItemTextA@IAT ]
push ebx
call sub_43f9d4
add esp 0x4
push 0x2
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
push [ ebp + 0x8 ]
jmp r-xdata
mov [ edx + 0x34 ] ecx
mov eax [ esi + 0x28 ]
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
mov [ esi + 0xc0 ] al
mov [ esi + 0xc1 ] ah
shr eax 0x10
mov [ esi + 0xc2 ] al
mov al 0x1
jmp r-xdata
push esi
call [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
add esp 0x10
jmp r-xdata
mov [ esi + 0xc3 ] al
push 0x4
push [ esi + 0x30 ]
push esi
push edi
call [ edi + 0x10 ]
add esp 0x10
sub_48221f
mov ebx [ ebp + 0x10 ]
cmp eax 0x111
jne r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov ecx ebx
shr ecx 0x10
cmp [ esi + 0x20 ] 0x0
je r-xdata
and ebx 0xffff0000
cmp [ ebp + 0xc ] 0x111
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x111
setne al
xor ecx ecx
push [ ebp + 0x14 ]
push ebx
push [ edx ]
push eax
push ecx
push ecx
mov eax [ esp + 0x28 ]
push [ eax + 0x1c ]
call sub_480db1
add esp 0x1c
test al 0x2
je r-xdata
lea edx [ ecx - 0x3 ]
cmp edx 0x1
jbe r-xdata
mov edx ecx
and edx 0xfffe
cmp edx 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x111
jne r-xdata
cmp ebx 0x20000
jne r-xdata
mov edx [ ebp + 0x8 ]
and eax 0x1
mov [ esp + 0x8 ] eax
jmp r-xdata
push 0x2
mov edi eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
push eax
push esi
call [ esi + 0x10 ]
mov eax edi
add esp 0x10
mov edx [ ebp + 0x8 ]
cmp ecx 0x3
mov edx [ edx + 0x34 ]
jne r-xdata
jmp r-xdata
cmp [ esp + 0x14 ] 0x2
mov edx [ ebp + 0x8 ]
jl r-xdata
mov edx [ ebp + 0x8 ]
cmp ecx 0x4
mov edx [ edx + 0x34 ]
jne r-xdata
mov [ esp + 0x8 ] 0x0
cmp ebx 0x10000
mov [ esp + 0x8 ] 0x0
jne r-xdata
push [ edx ]
call [ SetCapture@IAT ]
push 0x1
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
push [ ebp + 0x8 ]
push esi
call [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
add esp 0x10
jmp r-xdata
cmp [ edx + 0xbc ] 0x0
je r-xdata
cmp edx esi
jne r-xdata
mov [ esp + 0xc ] esi
mov edi esi
mov esi [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov eax ecx
and eax 0xfffe
cmp eax 0x6
jne r-xdata
cmp edx esi
jne r-xdata
mov [ esp + 0xc ] esi
mov edi esi
mov esi [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ebx [ esp + 0x8 ]
jmp r-xdata
mov [ rw-data ] 0x24
mov edi esi
mov eax [ edx ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
movzx ecx [ edx + 0xc1 ]
movzx eax [ edx + 0xc0 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx + 0xc2 ]
shl eax 0x10
or eax ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
push rw-data
mov esi edx
call [ ChooseColorA@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
mov [ esp + 0xc ] esi
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0x38 ] edx
jmp r-xdata
mov eax [ edx + 0x34 ]
cmp ecx 0x6
jne r-xdata
mov [ esp + 0xc ] esi
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0x38 ] edx
jmp r-xdata
mov ecx [ esp + 0x178 ]
call sub_497c4a
mov eax ebx
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
mov eax [ rw-data ]
mov [ esi + 0xc0 ] al
mov [ esi + 0xc1 ] ah
shr eax 0x10
mov [ esi + 0xc2 ] al
mov al 0x1
jmp r-xdata
push [ edx + 0x30 ]
push edx
push esi
call [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
add esp 0x10
jmp r-xdata
mov [ esi + 0x34 ] edi
mov esi [ esp + 0xc ]
cmp eax esi
jne r-xdata
test eax eax
mov ecx esi
jne r-xdata
lea edx [ ecx - 0x3 ]
cmp edx 0x2
jae r-xdata
mov [ esi + 0x34 ] edi
mov esi [ esp + 0xc ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov [ esi + 0xc3 ] al
push 0x4
push [ esi + 0x30 ]
push esi
push edi
call [ edi + 0x10 ]
add esp 0x10
xor ecx ecx
mov [ edx + 0x38 ] eax
jmp r-xdata
mov [ edx + 0x34 ] ecx
sub_482272
mov ecx [ esp + 0x14 ]
cmp eax 0x111
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp eax 0x111
mov [ esp + 0x8 ] 0x0
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp [ edx + 0xbc ] 0x0
je r-xdata
cmp ecx 0x2
jne r-xdata
mov edi [ ebp + 0x10 ]
mov eax edi
shr eax 0x10
cmp eax 0x200
je r-xdata
mov ebx [ esp + 0x8 ]
jmp r-xdata
mov [ rw-data ] 0x24
mov edi esi
mov eax [ edx ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
movzx ecx [ edx + 0xc1 ]
movzx eax [ edx + 0xc0 ]
shl ecx 0x8
or ecx eax
movzx eax [ edx + 0xc2 ]
shl eax 0x10
or eax ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
push rw-data
mov esi edx
call [ ChooseColorA@IAT ]
test eax eax
je r-xdata
shr edi 0x10
mov eax edi
and eax 0xfffe
cmp eax 0x6
jne r-xdata
cmp eax 0x100
mov eax [ edx + 0x34 ]
jne r-xdata
movzx ecx ax
cmp ecx 0x100
jne r-xdata
mov ecx [ esp + 0x178 ]
call sub_497c4a
mov eax ebx
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
mov eax [ rw-data ]
mov [ esi + 0xc0 ] al
mov [ esi + 0xc1 ] ah
shr eax 0x10
mov [ esi + 0xc2 ] al
mov al 0x1
jmp r-xdata
cmp edi 0x5
je r-xdata
mov eax [ edx + 0x34 ]
cmp edi 0x6
jne r-xdata
cmp eax esi
jne r-xdata
test eax eax
mov ecx esi
jne r-xdata
and edi 0xffff0000
mov [ esp + 0x8 ] 0x0
cmp edi 0x3000000
je r-xdata
mov [ esi + 0xc3 ] al
push 0x4
push [ esi + 0x30 ]
push esi
push edi
call [ edi + 0x10 ]
add esp 0x10
xor ebx ebx
lea edi [ esp + 0x120 ]
xorps xmm0 xmm0
mov [ edi + 0x54 ] ebx
mov [ edi + 0x50 ] ebx
movaps [ edi + 0x40 ] xmm0
movaps [ edi + 0x30 ] xmm0
movaps [ edi + 0x20 ] xmm0
movaps [ edi + 0x10 ] xmm0
movaps [ edi ] xmm0
mov eax [ edx ]
mov edx r--data
mov [ edi + 0x4 ] eax
mov ecx [ esi + 0x20 ]
test ecx ecx
cmovne edx ecx
mov ecx [ esp + 0x10 ]
mov [ edi + 0xc ] edx
mov [ edi + 0x10 ] ebx
lea ebx [ esp + 0x18 ]
mov [ edi + 0x18 ] 0x1
mov edx 0x104
mov [ edi + 0x1c ] ebx
mov ecx [ ecx + 0x4 ]
inc ecx
push edx
push ebx
push ecx
push eax
call [ GetDlgItemTextA@IAT ]
mov eax 0x104
xor ecx ecx
mov [ esp + 0x11b ] 0x0
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] ecx
mov eax [ esi + 0x28 ]
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] ecx
push [ esi + 0x24 ]
push ecx
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x14 ] 0x0
push eax
call sub_496254
add esp 0x10
test eax eax
je r-xdata
test di di
jne r-xdata
cmp eax esi
jne r-xdata
test eax eax
mov ecx esi
jne r-xdata
xor ecx ecx
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0x2
push [ edx + 0x30 ]
push edx
push esi
call [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
add esp 0x10
jmp r-xdata
jmp r-xdata
mov edx edi
jmp r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
inc eax
push ebx
push eax
push [ edi ]
call [ SetDlgItemTextA@IAT ]
push 0x2
push [ edi + 0x30 ]
push edi
push esi
call [ esi + 0x10 ]
add esp 0x10
xor ecx ecx
mov [ edx + 0x38 ] eax
jmp r-xdata
mov [ edx + 0x34 ] ecx
mov [ edx + 0x34 ] ecx
sub_4829f1
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x919
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x8
je r-xdata
push eax
push [ ebx ]
push r--data
call sub_43f758
add esp 0xc
mov edx ecx
mov ebp r--data
neg edx
cmovl edx ecx
test ecx ecx
mov ecx r--data
cmovs ebp ecx
push ebp
push edx
push eax
push [ ebx ]
push r--data
call sub_43f758
add esp 0x14
jmp r-xdata
push [ edi + 0x1c ]
call sub_48f52d
add esp 0x4
push ebx
call sub_48f956
add esp 0x4
mov [ edi + 0x1c ] eax
mov ecx r--data
mov eax r--data
cmp [ ebx + 0x4 ] 0x0
cmovne eax ecx
mov ecx [ ebx + 0x8 ]
test ecx ecx
je r-xdata
mov ebx eax
mov eax [ edi + 0x4 ]
inc eax
push ebx
push eax
push [ esi ]
call [ SetDlgItemTextA@IAT ]
push ebx
call sub_43f9d4
add esp 0x4
push esi
call sub_483216
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_482abc
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
cmp [ esi + 0x24 ] 0x0
jle r-xdata
xor esi esi
mov ebx [ esp + 0x24 ]
xor ebp ebp
mov edi esp
mov eax [ eax ]
xor esi esi
test eax eax
je r-xdata
inc ebp
cmp ebp [ esi + 0x24 ]
jl r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + ebp * 4 + 0x4 ]
mov [ esp ] ebx
push sub_48131d
push edi
push [ eax + 0x4 ]
call sub_47e50d
add esp 0xc
test eax eax
jne r-xdata
push eax
push [ esp + 0x24 ]
call sub_48e83d
add esp 0x8
xor esi esi
inc esi
jmp r-xdata
sub_482b36
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x81a
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
mov eax [ edi ]
cmp [ eax ] 0x2
je r-xdata
mov ecx [ edi + 0x4 ]
lea edx [ ecx + ebx + 0x1 ]
lea edi [ ecx + 0x1 ]
add ecx [ eax + 0x24 ]
push edx
push ecx
push edi
push [ esi ]
call [ CheckRadioButton@IAT ]
pop esi
pop edi
pop ebx
retn
sub_482b8e
push ebx
push edi
push esi
mov edi ecx
mov esi edx
cmp [ edi + 0x24 ] 0x0
jle r-xdata
xor eax eax
xor ebx ebx
pop esi
pop edi
pop ebx
retn
inc ebx
cmp ebx [ edi + 0x24 ]
jl r-xdata
push esi
push [ edi + ebx * 4 + 0x4 ]
call sub_4812ef
add esp 0x8
test eax eax
jne r-xdata
sub_482bba
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x826
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
mov eax [ edi ]
cmp [ eax ] 0x2
je r-xdata
push 0x82a
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor ebx ebx
mov ebp [ IsDlgButtonChecked@IAT ]
xor ebx ebx
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax ebx
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ edi ]
inc ebx
cmp ebx [ eax + 0x24 ]
jl r-xdata
mov eax [ edi + 0x4 ]
lea eax [ ebx + eax + 0x1 ]
push eax
push [ esi ]
call ebp
test eax eax
jne r-xdata
sub_482c39
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x832
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x3
je r-xdata
xor eax eax
test ebx ebx
setne al
push eax
push [ edi + 0x4 ]
push [ esi ]
call [ CheckDlgButton@IAT ]
pop esi
pop edi
pop ebx
retn
sub_482c8a
push edi
push esi
mov esi [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x83a
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x3
je r-xdata
push [ edi + 0x4 ]
push [ esi ]
call [ IsDlgButtonChecked@IAT ]
xor ecx ecx
test eax eax
setne cl
mov eax ecx
pop esi
pop edi
retn
sub_482cd6
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x842
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
inc eax
push ebx
push eax
push [ esi ]
call [ SetDlgItemTextA@IAT ]
pop esi
pop edi
pop ebx
retn
sub_482d22
push edi
push esi
mov esi [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x84a
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
inc eax
push eax
push [ esi ]
call sub_496410
add esp 0x8
pop esi
pop edi
retn
sub_482d69
push edi
push esi
mov esi [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x857
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ edi ]
mov eax 0x14b
cmp [ ecx ] 0x5
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
cmp eax 0x5
je r-xdata
mov ecx [ edi + 0x4 ]
xor edx edx
inc ecx
push edx
push edx
push eax
push ecx
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
pop esi
pop edi
retn
cmp [ ecx + 0x20 ] 0x0
mov ecx 0x184
mov eax 0x14b
cmovne eax ecx
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x28 ] 0x0
mov eax 0x14b
jne r-xdata
sub_482de2
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x873
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ edi ]
mov eax 0x143
cmp [ ecx ] 0x5
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
cmp eax 0x5
je r-xdata
mov ecx [ edi + 0x4 ]
inc ecx
push ebx
push 0x0
push eax
push ecx
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
pop esi
pop edi
pop ebx
retn
cmp [ ecx + 0x20 ] 0x0
mov ecx 0x180
mov eax 0x143
cmovne eax ecx
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x28 ] 0x0
mov eax 0x143
jne r-xdata
sub_482e60
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x889
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ edi ]
mov eax 0x143
cmp [ ecx ] 0x5
jne r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
cmp eax 0x5
je r-xdata
mov edx [ edi ]
mov ecx [ esp + 0x1c ]
mov ebp 0x151
cmp [ edx ] 0x5
jne r-xdata
cmp [ ecx + 0x20 ] 0x0
mov ecx 0x180
mov eax 0x143
cmovne eax ecx
cmp eax 0x1
jne r-xdata
mov edx [ edi + 0x4 ]
mov ebx [ SendDlgItemMessageA@IAT ]
inc edx
push ecx
push 0x0
push eax
push edx
push [ esi ]
call ebx
mov ecx [ edi + 0x4 ]
inc ecx
push [ esp + 0x20 ]
push eax
push ebp
push ecx
push [ esi ]
call ebx
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edx + 0x20 ] 0x0
mov edx 0x19a
mov ebp 0x151
cmovne ebp edx
cmp [ ecx + 0x28 ] 0x0
mov eax 0x143
jne r-xdata
sub_482f0e
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x897
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
mov eax [ edi ]
cmp [ eax ] 0x5
je r-xdata
xor ecx ecx
mov edx 0x150
cmp [ eax + 0x20 ] ecx
mov eax 0x199
cmovne edx eax
mov eax [ edi + 0x4 ]
inc eax
push ecx
push ebx
push edx
push eax
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
pop esi
pop edi
pop ebx
retn
sub_482f70
push edi
push esi
mov esi [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x8a3
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
mov eax [ edi ]
cmp [ eax ] 0x5
je r-xdata
mov ecx [ edi ]
mov eax edi
xor edx edx
mov edi 0x147
add eax 0x4
mov eax [ eax ]
cmp [ ecx + 0x20 ] edx
mov ecx 0x188
cmovne edi ecx
inc eax
push edx
push edx
push edi
push eax
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
cmp [ eax + 0x20 ] 0x0
jne r-xdata
cmp [ eax + 0x28 ] 0x0
je r-xdata
pop esi
pop edi
retn
mov eax [ edi + 0x4 ]
xor ecx ecx
inc eax
push ecx
push ecx
push 0x190
push eax
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x8a5
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor eax eax
dec eax
cmp eax 0x1
jg r-xdata
sub_48301a
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x8b8
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x5
jne r-xdata
cmp [ eax + 0x28 ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
inc eax
push 0x0
push ebx
push 0x187
push eax
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
pop esi
pop edi
pop ebx
retn
sub_483079
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x8c3
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
mov eax [ edi ]
cmp [ eax ] 0x5
jne r-xdata
cmp [ eax + 0x28 ] 0x0
je r-xdata
xor ecx ecx
mov edx 0x14e
cmp [ eax + 0x20 ] ecx
mov eax 0x186
cmovne edx eax
mov eax [ edi + 0x4 ]
inc eax
push ecx
push ebx
push edx
push eax
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
pop esi
pop edi
pop ebx
retn
sub_4830e1
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
mov ecx esi
mov edx ebx
call sub_482b8e
mov edi eax
test edi edi
jne r-xdata
mov eax [ edi ]
mov ecx [ eax ]
dec ecx
cmp ecx 0x7
ja r-xdata
push 0x8d7
push r--data
push r--data
call sub_4a509d
add esp 0xc
push 0x8f6
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp [ ecx * 4 + jump_table_41aa8c ]
mov ecx [ esp + 0x18 ]
movsx edx [ eax + 0x1c ]
call sub_481ed1
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop edi
pop ebx
retn
push ebx
push [ edi + 0x4 ]
push [ esi ]
call [ SetDlgItemTextA@IAT ]
push ebx
call sub_43f9d4
add esp 0x4
jmp r-xdata
sub_48316a
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x903
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x7
je r-xdata
mov eax [ edi + 0x4 ]
inc eax
push [ ebx ]
push eax
push [ esi ]
call [ SetDlgItemTextA@IAT ]
pop esi
pop edi
pop ebx
retn
sub_4831b7
push edi
push esi
mov esi [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx esi
call sub_482b8e
mov edi eax
test edi edi
je r-xdata
push 0x90d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi ]
cmp [ eax ] 0x7
je r-xdata
mov eax [ edi + 0x4 ]
inc eax
push eax
push [ esi ]
call sub_496410
add esp 0x8
mov esi eax
push esi
call sub_48f4af
add esp 0x4
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
pop esi
pop edi
retn
sub_483216
push ebp
push ebx
push edi
push esi
sub esp 0x3c
mov eax [ rw-data ]
mov ebx [ esp + 0x50 ]
mov [ esp + 0x38 ] eax
mov edi [ ebx + 0x30 ]
push 0x76
push edi
call sub_43194f
add esp 0x8
mov esi eax
push 0x75
push edi
call sub_431e49
add esp 0x8
mov eax [ eax ]
xor ebp ebp
test esi esi
mov ecx 0x0
je r-xdata
xor edx edx
inc edx
push eax
push edx
push ecx
push ebp
push ebp
push edx
push ebp
push ebp
push ebp
push ebp
push ebp
push ebp
push ebp
push ebp
call [ CreateFontA@IAT ]
mov esi eax
push ebp
call [ GetDC@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp esi 0x1
jne r-xdata
test esi esi
je r-xdata
push esi
push edi
call [ SelectObject@IAT ]
xor ebp ebp
test eax eax
je r-xdata
xor ecx ecx
cmp esi 0x2
setne cl
lea ecx [ ecx + ecx + 0x3 ]
mov ecx 0x4
jmp r-xdata
test ebp ebp
je r-xdata
push esi
call [ DeleteObject@IAT ]
push edi
push 0x0
call [ ReleaseDC@IAT ]
mov eax esp
push eax
push edi
call [ GetTextMetricsA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x38 ]
call sub_497c4a
add esp 0x3c
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ ebx + 0xd0 ] 0x0
movzx ebp [ esp + 0x33 ]
and ebp 0x1
sub_4832e7
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
call sub_482b8e
mov esi eax
test esi esi
je r-xdata
push 0x92f
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi ]
cmp [ eax ] 0x8
je r-xdata
push [ esi + 0x1c ]
call sub_48f956
add esp 0x4
pop esi
retn
sub_483326
push esi
mov esi [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov ecx esi
call sub_482b8e
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
cmp [ ecx ] 0x5
jne r-xdata
mov eax [ eax + 0x4 ]
xor ecx ecx
inc eax
push ecx
push ecx
push 0xb
push eax
push [ esi ]
call [ SendDlgItemMessageA@IAT ]
sub_483356
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ecx esi
call sub_482b8e
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
retn
mov ecx [ eax ]
cmp [ ecx ] 0x5
jne r-xdata
mov eax [ eax + 0x4 ]
inc eax
push eax
push [ esi ]
call [ GetDlgItem@IAT ]
xor edi edi
xor ebx ebx
mov esi eax
inc ebx
push edi
push ebx
push 0xb
push esi
call [ SendMessageA@IAT ]
push ebx
push edi
push esi
call [ InvalidateRect@IAT ]
sub_48339f
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov ecx esi
mov edx edi
call sub_482b8e
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
retn
mov ecx [ edi ]
dec ecx
cmp ecx 0x7
ja r-xdata
mov edi [ eax + 0x4 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41aaac ]
push edi
push [ esi ]
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov edi [ eax + 0x4 ]
inc edi
jmp r-xdata
sub_483447
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
test eax eax
je r-xdata
cmp [ esi + 0x24 ] 0x0
jle r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor edi edi
xor ebx ebx
inc ebx
push 0x0
push [ esi + 0x30 ]
push esi
push eax
call ecx
add esp 0x10
jmp r-xdata
inc edi
cmp edi [ esi + 0x24 ]
jl r-xdata
mov ebp ebx
mov eax [ esi + edi * 4 + 0x4 ]
push 0x0
push [ eax + 0x4 ]
call sub_47e33c
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + edi * 4 + 0x4 ]
push ebp
push [ eax + 0x4 ]
call sub_47e33c
add esp 0x8
inc ebp
test eax eax
jne r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push 0x0
push [ esi + 0x30 ]
push esi
push eax
call ecx
add esp 0x10
sub_4834f6
push edi
push esi
mov eax [ esp + 0x10 ]
cmp [ eax + 0xc3 ] 0x0
je r-xdata
xor eax eax
mov esi [ esp + 0x14 ]
movzx edi [ eax + 0xc0 ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ esi ] edi
movzx esi [ eax + 0xc1 ]
mov [ edx ] esi
movzx eax [ eax + 0xc2 ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_483550
push esi
mov esi [ esp + 0x8 ]
xor ecx ecx
mov [ esi + 0xc8 ] ecx
lea eax [ esi + 0x24 ]
mov [ esi ] ecx
push 0x98
push ecx
push eax
call sub_49acf0
add esp 0xc
mov [ esi + 0xd0 ] 0x1
pop esi
retn
sub_48357d
push edi
push esi
mov edi [ esp + 0xc ]
mov esi [ esp + 0x10 ]
mov eax [ edi + 0x24 ]
cmp eax 0x8
jb r-xdata
lea ecx [ eax + 0x1 ]
mov [ edi + 0x24 ] ecx
mov [ edi + eax * 4 + 0x4 ] esi
pop esi
pop edi
retn
push 0xa02
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi + 0x24 ]
sub_4835d4
push r--data
push [ esp + 0x8 ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
xor eax eax
push eax
push 0xa
push eax
push r--data
xor eax eax
push eax
push eax
push eax
push r--data
jmp r-xdata
call sub_48f919
add esp 0x10
retn
sub_483660
push edi
push esi
sub esp 0x30
mov eax [ rw-data ]
mov [ esp + 0x2c ] eax
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ esp + 0x2c ]
call sub_497c4a
add esp 0x30
pop esi
pop edi
retn
mov esi [ esp + 0x3c ]
mov edi esp
mov [ rw-data ] 0x1
mov [ edi ] 0x2c
push edi
push esi
call [ GetWindowPlacement@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
cmp [ esp + 0x8 ] 0x3
jne r-xdata
mov [ esp + 0x8 ] 0x1
push edi
push esi
call [ SetWindowPlacement@IAT ]
sub_4836c3
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
mov ebx [ EnableWindow@IAT ]
xor edi edi
push edi
push esi
call ebx
push edi
push sub_4836fb
push esi
push 0x6f
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
push 0x1
push esi
call ebx
push esi
call [ SetActiveWindow@IAT ]
pop esi
pop edi
pop ebx
retn
sub_4836fb
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
xor esi esi
cmp eax 0x10
je r-xdata
push 0x1
push ebx
jmp r-xdata
cmp eax 0x111
je r-xdata
call [ EndDialog@IAT ]
mov eax [ esp + 0x18 ]
lea ecx [ eax - 0x1 ]
movzx ecx cx
cmp ecx 0x2
jb r-xdata
cmp eax 0x110
jne r-xdata
push 0x1
push ebx
movzx eax ax
cmp eax 0x3eb
je r-xdata
mov eax esi
pop esi
pop edi
pop ebx
retn 0x10
mov edi [ r--data ]
push edi
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push esi
push ebx
call [ SetWindowTextA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push r--data
call sub_44038b
add esp 0x4
mov esi eax
push r--data
push esi
push r--data
push edi
push r--data
call sub_43f758
add esp 0x14
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
push edi
push 0x3ea
push ebx
call [ SetDlgItemTextA@IAT ]
push edi
call sub_43f9d4
add esp 0x4
xor esi esi
inc esi
jmp r-xdata
mov edi [ EnableWindow@IAT ]
xor esi esi
push esi
push ebx
call edi
push esi
push sub_4849ad
push ebx
push 0x71
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
push 0x1
push ebx
call edi
push ebx
call [ SetActiveWindow@IAT ]
jmp r-xdata
cmp eax 0x3ec
jne r-xdata
xor esi esi
push 0xa
push esi
push esi
push r--data
push r--data
push ebx
call [ ShellExecuteA@IAT ]
jmp r-xdata
sub_483829
push edi
push esi
xor edi edi
push edi
push sub_48385d
push edi
push 0x6f
push [ rw-data ]
call [ CreateDialogParamA@IAT ]
mov esi eax
push edi
push esi
call [ ShowWindow@IAT ]
push esi
call [ SetActiveWindow@IAT ]
push esi
call [ DestroyWindow@IAT ]
pop esi
pop edi
retn
sub_483862
push ebp
push ebx
push edi
push esi
call sub_43b333
xor esi esi
mov [ rw-data ] eax
push esi
push esi
push esi
push eax
call sub_432c4b
add esp 0x10
call sub_48e82b
mov edi rw-data
push esi
push esi
push eax
push edi
push [ rw-data ]
call sub_47ef1c
add esp 0x14
push edi
call sub_483550
mov ebx rw-data
mov [ esp ] ebx
call sub_481198
mov ebp rw-data
mov [ esp ] ebp
call sub_481198
add esp 0x4
push ebx
push edi
call sub_48357d
add esp 0x8
push ebp
push edi
call sub_48357d
add esp 0x8
mov esi [ r--data ]
push esi
push r--data
call sub_43f758
add esp 0x8
mov [ rw-data ] eax
push esi
push r--data
call sub_43f758
add esp 0x8
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
push edi
call sub_483216
add esp 0x4
mov ecx [ rw-data ]
mov [ rw-data ] 0x1
call sub_483956
mov esi eax
push [ rw-data ]
call sub_43b356
add esp 0x4
push ebp
call sub_4811f4
add esp 0x4
push ebx
call sub_4811f4
add esp 0x4
push edi
call sub_4835b6
add esp 0x4
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_483956
push ebp
push ebx
push edi
push esi
sub esp 0x48
mov eax [ rw-data ]
mov esi ecx
lea ebx [ esp + 0x1c ]
xor edi edi
mov [ esp + 0x44 ] eax
mov eax [ DefDlgProcA@IAT ]
mov [ ebx ] 0x2808
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] 0x26
mov [ ebx + 0x10 ] esi
mov [ ebx + 0x14 ] edi
push 0x7f00
push edi
call [ LoadCursorA@IAT ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] 0x2
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x24 ] r--data
push ebx
call [ RegisterClassA@IAT ]
push edi
push sub_483a4a
push edi
push 0x66
push esi
call [ CreateDialogParamA@IAT ]
mov ebx [ SetWindowLongA@IAT ]
mov esi eax
push edi
push 0x1e
push esi
call ebx
push edi
push 0x22
push esi
call ebx
mov ebx esp
push edi
push edi
push edi
push ebx
call [ GetMessageA@IAT ]
test eax eax
jle r-xdata
test eax eax
jne r-xdata
mov ebp [ GetMessageA@IAT ]
push 0x22
push esi
call [ GetWindowLongA@IAT ]
mov edi eax
push esi
call [ DestroyWindow@IAT ]
mov ecx [ esp + 0x44 ]
call sub_497c4a
mov eax edi
add esp 0x48
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esp + 0x8 ]
call [ PostQuitMessage@IAT ]
push ebx
push esi
call [ IsDialogMessageA@IAT ]
test eax eax
jne r-xdata
push edi
push edi
push edi
push ebx
call ebp
test eax eax
jg r-xdata
push ebx
call [ DispatchMessageA@IAT ]
push 0x1e
push esi
call [ GetWindowLongA@IAT ]
test al 0x1
jne r-xdata
sub_483a4a
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x90
mov edi [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp edi 0x52
mov [ esp + 0x88 ] eax
jg r-xdata
cmp edi 0x53
je r-xdata
cmp edi 0x5
je r-xdata
push [ ecx + 0x8 ]
push ebx
push rw-data
call sub_482abc
add esp 0xc
test eax eax
mov [ esp + 0x8 ] 0x0
jne r-xdata
cmp edi 0x202
je r-xdata
cmp esi 0x2
mov [ esp + 0x8 ] 0x0
jne r-xdata
cmp edi 0x10
je r-xdata
mov ecx [ esp + 0x88 ]
call sub_497c4a
mov eax [ esp + 0x8 ]
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
call [ ReleaseCapture@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
cmp edi 0x110
jne r-xdata
push ebx
call sub_483660
add esp 0x4
jmp r-xdata
push ebx
call sub_48e925
add esp 0x4
mov esi [ SetWindowLongA@IAT ]
push 0x0
push 0x22
push ebx
call esi
push 0x1
push 0x1e
push ebx
call esi
jmp r-xdata
cmp edi 0x4e
jne r-xdata
mov [ esp + 0x8 ] 0x0
jmp r-xdata
mov [ esp + 0x8 ] 0x0
jmp r-xdata
push 0xffffffeb
push ebx
call [ GetWindowLongA@IAT ]
cmp eax 0x1
mov [ esp + 0x8 ] 0x0
jne r-xdata
mov edx r--data
mov ecx ebx
mov [ rw-data ] ebx
call sub_484a2a
push [ rw-data ]
push ebx
call [ SetWindowTextA@IAT ]
push 0x0
push 0xffffffeb
push ebx
call [ SetWindowLongA@IAT ]
call sub_48e82b
test eax eax
je r-xdata
movzx eax si
cmp eax 0x3f0
jne r-xdata
xor eax eax
cmp [ rw-data ] 0x0
mov esi [ SetWindowLongA@IAT ]
setne al
push eax
push 0x22
push ebx
call esi
push 0x1
push 0x1e
push ebx
call esi
jmp r-xdata
push [ ebp + 0x14 ]
push esi
push edi
push rw-data
call sub_481f7e
add esp 0x10
cmp [ rw-data ] 0x0
mov [ esp + 0x8 ] eax
je r-xdata
push 0x3ed
push ebx
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
mov esi 0xffffffec
push esi
push ebx
call [ GetWindowLongA@IAT ]
or eax 0x400
push eax
push esi
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
cmp [ ecx + 0x8 ] 0xfffffe6e
jne r-xdata
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
push 0xc9
push [ rw-data ]
call [ LoadIconA@IAT ]
push eax
push 0x1
push 0x80
push ebx
call [ SendMessageA@IAT ]
call [ GetDesktopWindow@IAT ]
lea ecx [ esp + 0x40 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
test eax eax
je r-xdata
push eax
call [ DestroyWindow@IAT ]
mov [ esp + 0x8 ] 0x0
push 0xffffffeb
push ebx
call [ GetWindowLongA@IAT ]
cmp eax 0x1
jne r-xdata
mov eax 0x3
mov [ esp + 0x40 ] eax
mov [ esp + 0x48 ] 0x62
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x40 ]
mov [ esp + 0x4c ] 0xd
push eax
push ebx
call [ MapDialogRect@IAT ]
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x40 ]
mov esi [ esp + 0x48 ]
xor edi edi
sub eax edx
sub esi ecx
push edi
push [ rw-data ]
push 0x3ef
push ebx
push eax
push esi
push edx
push ecx
push 0x50000000
push r--data
push r--data
push edi
call [ CreateWindowExA@IAT ]
mov esi [ SendMessageA@IAT ]
mov [ esp + 0x8 ] eax
mov eax 0x31
push edi
push edi
push eax
push ebx
call esi
xor edx edx
mov ecx 0x30
inc edx
push edx
push eax
push ecx
push [ esp + 0x14 ]
call esi
movaps xmm0 [ r--data ]
lea eax [ esp + 0x40 ]
movaps [ esp + 0x40 ] xmm0
push eax
push ebx
call [ MapDialogRect@IAT ]
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x40 ]
mov esi [ esp + 0x48 ]
sub eax edx
sub esi ecx
push edi
push [ rw-data ]
push 0x3f0
push ebx
push eax
push esi
push edx
push ecx
push 0x50010037
push r--data
push r--data
push 0x200
call [ CreateWindowExA@IAT ]
mov esi eax
push edi
push edi
mov eax 0x31
push eax
push ebx
xor ebx ebx
inc ebx
call [ SendMessageA@IAT ]
push ebx
push eax
mov eax 0x30
push eax
push esi
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x20 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] edi
cmp [ eax ] edi
jle r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
test eax eax
je r-xdata
mov esi [ SendMessageA@IAT ]
xor edi edi
push edi
push 0x9
push 0x110a
mov eax [ ebp + 0x14 ]
push [ eax ]
call esi
mov ecx ebx
mov ebx eax
push edi
push edi
push 0xb
push ecx
call esi
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x40 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x40
mov [ eax ] 0x5
push eax
push edi
push 0x110c
mov eax [ ebp + 0x14 ]
push [ eax ]
call esi
push edi
push rw-data
call sub_48133d
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
push 0x9
push 0x110b
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x14 ] esi
xor ebx ebx
xor esi esi
mov [ esp + 0xc ] 0x0
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
mov esi eax
mov ebx edi
sub esi edx
sub edx eax
sub ebx ecx
sub ecx edi
add edx [ esp + 0x4c ]
add ecx [ esp + 0x48 ]
add edx [ esp + 0x44 ]
add ecx [ esp + 0x40 ]
mov eax edx
shr eax 0x1f
add eax edx
mov edx ecx
shr edx 0x1f
sar eax 0x1
add edx ecx
sar edx 0x1
push 0x1
push esi
push ebx
mov ebx [ ebp + 0x8 ]
push eax
push edx
push ebx
call [ MoveWindow@IAT ]
mov edi [ ebp + 0x8 ]
mov edx [ esp + 0x3c ]
mov ecx edi
call sub_484a2a
push rw-data
xor ebx ebx
push ebx
call sub_483447
add esp 0x8
xor esi esi
inc esi
push ebx
push esi
push 0xb
push edi
call [ SendMessageA@IAT ]
push esi
push ebx
push edi
call [ InvalidateRect@IAT ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ SetFocus@IAT ]
jmp r-xdata
mov esi [ GetDlgItem@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
inc ebx
cmp ebx [ eax ]
jl r-xdata
test esi esi
je r-xdata
push ebx
push rw-data
call sub_481147
add esp 0x8
push ebx
mov edi rw-data
push edi
call sub_481251
add esp 0x8
push [ ebx + 0x1c ]
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
push 0x0
push edi
call sub_48133d
add esp 0x8
mov ebx eax
test ebx ebx
jne r-xdata
xor edi edi
mov eax [ eax ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax + ebx * 4 ]
mov [ esp + 0x8 ] eax
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
push [ esp + 0xc ]
push 0x9
push 0x110b
push [ esp + 0x20 ]
call [ SendMessageA@IAT ]
mov edx [ esp + 0x10 ]
mov ebx 0x1
test edx edx
jne r-xdata
xor edi edi
push esi
push eax
call sub_43b2f4
add esp 0x8
mov edi eax
cmp edi 0x7fffffff
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
inc edi
cmp edi [ ebx + 0x8 ]
jl r-xdata
push eax
call [ DestroyWindow@IAT ]
push rw-data
push eax
call sub_48339f
add esp 0x8
push ebx
push rw-data
call sub_48133d
add esp 0x8
inc ebx
xor esi esi
inc esi
push esi
push edi
call [ ShowWindow@IAT ]
push esi
push 0xffffffeb
push edi
call [ SetWindowLongA@IAT ]
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_484a2a
xor esi esi
push rw-data
push esi
call sub_483447
add esp 0x8
mov [ esp + 0x8 ] 0x0
push esi
push rw-data
call sub_48133d
add esp 0x8
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x8 ]
mov esi [ eax ]
push 0x2f
push esi
call sub_49af80
add esp 0x8
test eax eax
lea eax [ eax + 0x1 ]
cmove eax esi
test edi edi
jle r-xdata
push 0x1eb
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esp + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
push eax
push [ ebp + 0x8 ]
call esi
test eax eax
je r-xdata
push 0x206
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor edx edx
mov ecx 0xffff0000
mov ecx [ esp + edi * 4 + 0x18 ]
jmp r-xdata
push eax
call sub_43b2dd
add esp 0x4
dec eax
cmp edi eax
je r-xdata
mov [ esp + edi * 4 + 0x1c ] edx
xor eax eax
cmp edi 0x1
mov ecx 0x2
setne al
sub ecx eax
push [ esp + edi * 4 + 0x18 ]
push ecx
push 0x1102
push esi
mov esi edx
call [ SendMessageA@IAT ]
mov eax 0x2
mov edx esi
cmp edi eax
mov [ esp + edi * 4 + 0x1c ] edx
jle r-xdata
mov edx [ esp + edi * 4 + 0x1c ]
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] 0x5
mov [ esp + 0x58 ] eax
push eax
call sub_4a7f30
add esp 0x4
inc eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x6c ] esi
mov esi [ esp + 0x18 ]
lea eax [ esp + 0x40 ]
push eax
xor eax eax
push eax
push 0x1100
push esi
mov eax [ SendMessageA@IAT ]
call eax
mov edx eax
test edi edi
jle r-xdata
mov ecx 0x3
lea eax [ esp + edi * 4 + 0x20 ]
sub ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov esi edx
call sub_49acf0
mov edx esi
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov edi [ esp + 0x10 ]
mov esi [ eax ]
test ecx ecx
cmove ecx edx
mov [ esp + 0xc ] ecx
cmove edi esi
mov [ esp + 0x10 ] edi
sub_484166
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x1c ]
push [ rw-data ]
call sub_43191d
add esp 0x4
mov [ esp ] eax
call sub_43b333
mov [ rw-data ] eax
push 0x2
push [ rw-data ]
call sub_43194f
add esp 0x8
xor ebp ebp
mov edi eax
inc ebp
push esi
push edi
push ebp
push [ rw-data ]
call sub_432c4b
add esp 0x10
call sub_48e82b
mov ebx rw-data
push edi
push ebp
push eax
push ebx
push [ rw-data ]
call sub_47ef1c
add esp 0x14
push ebx
call sub_483550
mov ebp rw-data
mov [ esp ] ebp
call sub_481198
mov esi rw-data
mov [ esp ] esi
call sub_481198
add esp 0x4
push ebp
push ebx
call sub_48357d
add esp 0x8
push esi
push ebx
call sub_48357d
add esp 0x8
mov edi [ r--data ]
push edi
push r--data
call sub_43f758
add esp 0x8
mov [ rw-data ] eax
push edi
push r--data
call sub_43f758
add esp 0x8
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
push ebx
call sub_483216
add esp 0x4
mov ecx [ rw-data ]
mov [ rw-data ] 0x1
call sub_483956
mov edi eax
push [ rw-data ]
call sub_43b356
add esp 0x4
push ebp
call sub_4811f4
add esp 0x4
push esi
mov esi [ esp + 0x4 ]
call sub_4811f4
add esp 0x4
push ebx
call sub_4835b6
add esp 0x4
test edi edi
jne r-xdata
push esi
call sub_431816
add esp 0x4
mov eax edi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
push [ rw-data ]
call sub_431854
add esp 0x8
sub_4842ab
push ebx
push edi
push esi
sub esp 0x74
mov eax [ rw-data ]
mov ebx [ esp + 0x88 ]
mov [ esp + 0x70 ] eax
push ebx
push [ rw-data ]
call sub_43d1d6
add esp 0x8
mov eax [ rw-data ]
cmp [ rw-data ] eax
jl r-xdata
mov esi esp
push esi
call sub_4953e4
add esp 0x4
lea eax [ esp + 0x24 ]
mov ecx 0x9
mov edi eax
[ edi ] [ esi ]
lea edi [ esp + 0x48 ]
push eax
push r--data
push 0x28
push edi
call sub_4a7f05
add esp 0x10
push edi
call sub_4a7f30
add esp 0x4
mov esi eax
push ebx
call sub_4a7f30
add esp 0x4
xor ecx ecx
lea eax [ esi + eax + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ ecx + edx * 4 ] eax
push edi
push eax
call sub_4a7c00
add esp 0x8
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push [ eax + ecx * 4 ]
call sub_4a7c10
add esp 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
add eax 0x40
mov [ rw-data ] eax
push 0x4
push eax
push [ rw-data ]
call sub_43f8db
add esp 0xc
mov [ rw-data ] eax
inc [ rw-data ]
mov ecx [ esp + 0x70 ]
call sub_497c4a
add esp 0x74
pop esi
pop edi
pop ebx
retn
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ SendDlgItemMessageA@IAT ]
xor ebx ebx
mov edi 0x3e9
push [ ecx + edx * 4 ]
push ebx
push 0x180
push edi
push eax
call esi
push ebx
push ebx
push 0x18b
push edi
push [ rw-data ]
call esi
dec eax
push ebx
push eax
push 0x197
push edi
push [ rw-data ]
call esi
sub_4843e3
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
call [ SetActiveWindow@IAT ]
retn
push 0x0
push sub_484420
push [ esp + 0xc ]
push 0x6e
push [ rw-data ]
call [ CreateDialogParamA@IAT ]
mov [ rw-data ] eax
push 0x1
push eax
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
sub_484420
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
xor esi esi
cmp eax 0x10
je r-xdata
mov [ rw-data ] 0x0
push edi
call [ GetParent@IAT ]
push eax
call [ SetActiveWindow@IAT ]
push edi
jmp r-xdata
cmp eax 0x111
je r-xdata
call [ DestroyWindow@IAT ]
mov eax [ esp + 0x34 ]
lea ecx [ eax - 0x1 ]
movzx ecx cx
cmp ecx 0x2
jae r-xdata
cmp eax 0x110
jne r-xdata
movzx ecx ax
cmp ecx 0x3ea
jne r-xdata
mov [ rw-data ] 0x0
push edi
call [ GetParent@IAT ]
push eax
call [ SetActiveWindow@IAT ]
push edi
mov eax esi
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push esi
push edi
call [ SetWindowTextA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push rw-data
push 0x2
push 0x192
push 0x3e9
push edi
call [ SendDlgItemMessageA@IAT ]
xor esi esi
inc esi
cmp [ rw-data ] 0x0
jle r-xdata
shr eax 0x10
cmp eax 0x5
je r-xdata
mov ebp [ SendDlgItemMessageA@IAT ]
xor ebx ebx
xor esi esi
push esi
push esi
push 0x190
push 0x3e9
push edi
call [ SendDlgItemMessageA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
test ax ax
jne r-xdata
mov eax [ rw-data ]
push [ eax + ebx * 4 ]
push 0x0
push 0x180
push 0x3e9
push edi
call ebp
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
jmp r-xdata
push 0x0
jmp r-xdata
push 0x4
push ebx
call sub_43f807
add esp 0x8
mov ebp eax
test ebp ebp
je r-xdata
call [ MessageBeep@IAT ]
jmp r-xdata
push ebp
push ebx
push 0x191
push 0x3e9
push edi
call [ SendDlgItemMessageA@IAT ]
test eax eax
je r-xdata
push 0x0
test eax eax
mov [ esp + 0xc ] ebp
mov [ esp + 0x4 ] eax
jle r-xdata
xor esi esi
mov edx [ rw-data ]
xor esi esi
mov ebx eax
mov [ esp ] edx
push [ esp + 0xc ]
call sub_43f9d4
add esp 0x4
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ esp + 0x4 ]
test eax eax
jle r-xdata
mov eax [ ebp ]
mov edx [ esp ]
push [ edx + eax * 4 ]
call sub_4a7f30
add esp 0x4
add ebp 0x4
lea esi [ esi + eax + 0x2 ]
dec ebx
jne r-xdata
jmp r-xdata
xor esi esi
jmp r-xdata
mov ebx [ SendDlgItemMessageA@IAT ]
xor esi esi
xor ebp ebp
push 0x1
push [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
push esi
push 0x0
call sub_48c158
add esp 0x10
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ rw-data ]
mov ebx [ esp + 0xc ]
mov esi [ esp + 0x8 ]
mov [ esp + 0x14 ] ecx
push 0x1
mov [ esp + 0x14 ] esi
push esi
call sub_43f807
add esp 0x8
test eax eax
mov [ esp + 0x8 ] eax
je r-xdata
push ebp
push 0x0
push 0x185
push 0x3e9
push edi
call ebx
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
jmp r-xdata
mov [ esp + 0x4 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ ebx ]
mov eax [ ecx + eax * 4 ]
mov [ esp ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ebp eax
push ebp
push [ esp + 0x4 ]
push esi
call sub_49a1f0
mov eax [ esp + 0x10 ]
add esp 0xc
lea esi [ esi + ebp + 0x2 ]
add ebx 0x4
dec eax
mov [ esi - 0x2 ] 0xa0d
jne r-xdata
sub_4846a7
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x20 ]
xor esi esi
inc esi
push [ esp + 0x24 ]
push edi
push [ esp + 0x24 ]
push [ esp + 0x24 ]
call sub_494837
add esp 0x10
test eax eax
je r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ esp + 0x28 ]
cmp eax 0x1
je r-xdata
mov ebx [ r--data ]
push ebx
push ecx
push edi
push r--data
call sub_43f758
add esp 0x10
mov edi eax
push ebx
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push 0x1
push 0x233
push ebx
push edi
call sub_496318
add esp 0x10
mov ebp eax
cmp ebp 0x7
ja r-xdata
cmp eax 0x2
jne r-xdata
push 0x35b
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax 0xc4
bt eax ebp
jb r-xdata
xor esi esi
mov ebx [ r--data ]
push ebx
push ecx
push edi
push ebx
push r--data
call sub_43f758
add esp 0x14
mov edi eax
push ebx
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push 0x2
push 0x233
push ebx
push edi
call sub_496318
add esp 0x10
mov ebp eax
cmp ebp 0x7
ja r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
cmp ebp 0x6
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
cmp ebp 0x7
je r-xdata
push 0x34c
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax 0xc4
bt eax ebp
jb r-xdata
push edi
push edx
push ecx
push eax
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
cmp ebp 0x6
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
cmp ebp 0x7
je r-xdata
push edi
push edx
push ecx
push eax
jmp r-xdata
call sub_494b46
add esp 0x10
jmp r-xdata
sub_484828
push ebx
push edi
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov edi eax
push 0x134
push edi
push esi
push 0x0
call [ MessageBoxA@IAT ]
mov ebx eax
call sub_491f49
push esi
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
xor eax eax
cmp ebx 0x6
sete al
pop esi
pop edi
pop ebx
retn
sub_48488b
push ebx
push edi
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov edi eax
push 0x134
push edi
push esi
push 0x0
call [ MessageBoxA@IAT ]
mov ebx eax
call sub_491f49
push esi
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
xor eax eax
cmp ebx 0x6
sete al
pop esi
pop edi
pop ebx
retn
sub_4848ee
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
push [ eax ]
push 0x104
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov edi eax
push 0x223
push edi
push esi
push 0x0
call [ MessageBoxA@IAT ]
mov ebx eax
call sub_491f49
push esi
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
xor ecx ecx
cmp ebx 0x7
mov eax 0x2
sete cl
cmp ebx 0x6
cmovne eax ecx
pop esi
pop edi
pop ebx
retn
sub_48495f
push edi
push esi
mov edi [ r--data ]
push edi
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push edi
push r--data
call sub_43f758
add esp 0x8
mov edi eax
xor eax eax
push eax
push edi
push esi
push eax
call [ MessageBoxA@IAT ]
call sub_491f49
push esi
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
retn
sub_4849ad
push edi
push esi
mov eax [ esp + 0x10 ]
mov edi [ esp + 0xc ]
xor esi esi
cmp eax 0x10
je r-xdata
push 0x1
push edi
jmp r-xdata
cmp eax 0x111
je r-xdata
call [ EndDialog@IAT ]
mov eax [ esp + 0x14 ]
movzx eax ax
dec eax
cmp eax 0x1
ja r-xdata
cmp eax 0x110
jne r-xdata
mov eax esi
pop esi
pop edi
retn 0x10
push 0x1
push edi
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push esi
push edi
call [ SetWindowTextA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push r--data
push 0x3ea
push edi
call [ SetDlgItemTextA@IAT ]
xor esi esi
inc esi
jmp r-xdata
sub_484a2a
push ebp
push ebx
push edi
push esi
sub esp 0x2c
mov eax [ rw-data ]
mov esi edx
mov [ esp + 0x28 ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax 0x3
lea edx [ esp + 0x4 ]
push 0xeb
push eax
push eax
push ecx
push edx
call sub_4800e9
add esp 0x14
mov ebx rw-data
mov eax 0x3f1
lea eax [ esp + 0x4 ]
push 0xd
push 0x3
push 0x64
push ecx
push eax
call sub_4800e9
add esp 0x14
mov ebx rw-data
mov eax 0x411
jmp r-xdata
mov ecx [ esp + 0x28 ]
call sub_497c4a
add esp 0x2c
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebp [ esp + 0x4 ]
mov [ esp ] eax
push 0xffffffff
push esi
push [ rw-data ]
call sub_43b496
add esp 0xc
mov edi eax
test edi edi
js r-xdata
mov eax [ rw-data ]
mov ecx esp
mov eax [ eax + 0x8 ]
push ecx
push [ eax + edi * 4 ]
push ebp
push ebx
push rw-data
call sub_481351
add esp 0x14
push edi
push esi
push [ rw-data ]
call sub_43b496
add esp 0xc
mov edi eax
test edi edi
jns r-xdata
sub_484ae8
push ebx
push esi
sub esp 0x98
mov eax [ rw-data ]
mov [ esp + 0x94 ] eax
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ esp + 0x4 ]
push 0x90
push 0x0
push esi
call sub_49acf0
add esp 0xc
mov [ esi - 0x4 ] 0x94
mov esi esp
push esi
call [ GetVersionExA@IAT ]
xor eax eax
cmp [ esi + 0x10 ] 0x2
sete al
mov [ rw-data ] eax
push r--data
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
je r-xdata
xor ebx ebx
cmp [ rw-data ] 0x0
setne bl
jmp r-xdata
xor ebx ebx
mov [ rw-data ] 0x1
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ esp + 0x94 ]
call sub_497c4a
mov eax ebx
add esp 0x98
pop esi
pop ebx
retn
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor ebx ebx
mov [ rw-data ] 0x1
inc ebx
jmp r-xdata
sub_484c50
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
call sub_484ae8
test eax eax
je r-xdata
mov esi 0x12340042
test bl 0x3
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
jmp [ rw-data ]
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn 0xc
test ebp ebp
js r-xdata
xor esi esi
xor eax eax
push eax
call [ GetSystemMetrics@IAT ]
test edi edi
js r-xdata
cmp eax ebp
jle r-xdata
push 0x1
call [ GetSystemMetrics@IAT ]
cmp eax edi
jg r-xdata
sub_484ca9
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov edi [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
call sub_484ae8
test eax eax
je r-xdata
xor esi esi
cmp ebx 0x12340042
jne r-xdata
push edi
push ebx
call [ rw-data ]
mov esi eax
mov ecx [ esp + 0x10 ]
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
pop ebx
retn 0x8
test edi edi
je r-xdata
cmp [ edi ] 0x28
jb r-xdata
xor esi esi
mov eax esp
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
mov ebx [ GetSystemMetrics@IAT ]
xor eax eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
push eax
call ebx
xor esi esi
mov [ edi + 0xc ] eax
inc esi
push esi
call ebx
mov [ edi + 0x10 ] eax
movsd xmm0 [ esp ]
movsd xmm1 [ esp + 0x8 ]
movsd [ edi + 0x1c ] xmm1
movsd [ edi + 0x14 ] xmm0
mov [ edi + 0x24 ] esi
cmp [ edi ] 0x48
jb r-xdata
add edi 0x28
push 0x1f
push r--data
push 0x20
push edi
call sub_4a8215
add esp 0x10
jmp r-xdata
sub_484d85
push ebp
push ebx
push edi
push esi
sub esp 0x44
mov eax [ rw-data ]
mov ebp [ esp + 0x58 ]
mov [ esp + 0x40 ] eax
call sub_48f76e
mov [ rw-data ] ebp
mov [ rw-data ] 0x0
mov [ rw-data ] 0x5
call sub_48fa98
call sub_480078
call sub_48f1b0
call sub_483829
call sub_48f7b9
test eax eax
je r-xdata
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push 0x30
push esi
push r--data
push 0x0
call [ MessageBoxA@IAT ]
push esi
jmp r-xdata
cmp [ rw-data ] 0x4
jb r-xdata
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x40 ]
xor esi esi
inc esi
call sub_497c4a
mov eax esi
add esp 0x44
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
jne r-xdata
xor eax eax
mov [ rw-data ] 0x0
mov ebx [ GetProcAddress@IAT ]
push r--data
push edi
call ebx
mov [ rw-data ] eax
push r--data
push edi
call ebx
jmp r-xdata
call sub_48e680
push r--data
call sub_48f6f9
add esp 0x4
mov edi eax
push r--data
call sub_48f6f9
add esp 0x4
mov esi eax
test edi edi
je r-xdata
cmp [ rw-data ] 0x2
je r-xdata
xor eax eax
push r--data
push esi
call [ GetProcAddress@IAT ]
jmp r-xdata
test esi esi
mov [ rw-data ] eax
je r-xdata
mov eax [ r--data ]
mov esi [ esp + 0x60 ]
mov [ rw-data ] eax
push eax
call sub_44420b
add esp 0x4
test eax eax
mov [ rw-data ] 0x0
je r-xdata
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push 0x30
push esi
push r--data
push 0x0
call [ MessageBoxA@IAT ]
push esi
mov [ rw-data ] eax
call sub_43179c
mov [ rw-data ] eax
push 0x0
call [ CoInitialize@IAT ]
cmp eax 0x2
jb r-xdata
xor edi edi
push edi
push 0x78
push [ rw-data ]
call sub_431ee3
add esp 0xc
push [ rw-data ]
mov [ esp + 0x4 ] 0x0
push edi
call j_sub_445b82
add esp 0x8
mov bl [ esi ]
test bl bl
je r-xdata
mov eax [ eax + 0x4c ]
mov [ rw-data ] eax
xor ebx ebx
lea edi [ esi + 0x2 ]
call sub_483862
test eax eax
je r-xdata
push [ rw-data ]
call sub_440120
add esp 0x4
test eax eax
jne r-xdata
lea eax [ edi - 0x2 ]
cmp bl 0x26
jne r-xdata
mov bl [ edi - 0x1 ]
inc edi
test bl bl
jne r-xdata
push 0x0
call sub_485b0d
push 0x0
push [ rw-data ]
call sub_431a8c
add esp 0x8
push eax
call sub_43f79e
add esp 0x4
mov esi eax
push r--data
push esi
call sub_4a8220
add esp 0x8
cmp [ esi + eax ] 0x0
lea ebx [ esi + eax ]
je r-xdata
mov edi eax
cmp [ edi - 0x1 ] 0x52
jne r-xdata
movsx eax bl
push eax
call sub_4a7635
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
push 0x0
call sub_4a3719
call sub_4951f7
push 0x3a
push ebx
call sub_43f67d
add esp 0x8
mov edi eax
test edi edi
je r-xdata
push 0x40
push ebx
call sub_49af80
add esp 0x8
mov edi eax
test edi edi
je r-xdata
cmp bl 0x26
je r-xdata
lea ecx [ esp + 0x8 ]
inc eax
lea edx [ esp + 0x18 ]
push ecx
push edx
push r--data
push eax
call sub_442b34
add esp 0x10
cmp eax 0x2
jne r-xdata
mov cl [ edi ]
test cl cl
je r-xdata
mov edi [ esp + 0x5c ]
mov eax esi
jmp r-xdata
lea eax [ edi + 0x1 ]
push 0x3a
push eax
call sub_43f67d
add esp 0x8
test eax eax
jne r-xdata
mov [ edi ] 0x0
push ebx
push 0x34
push [ rw-data ]
call sub_43203b
add esp 0xc
inc edi
mov ebx edi
mov eax edi
cmp bl 0x40
jne r-xdata
call sub_483862
test eax eax
je r-xdata
xor eax eax
push [ esp + 0x8 ]
push eax
push eax
push 0x4
push [ esp + 0x28 ]
call [ MapViewOfFile@IAT ]
mov esi eax
test esi esi
je r-xdata
call sub_493604
mov [ rw-data ] 0x1
mov bl [ edi ]
jmp r-xdata
cmp cl 0x26
je r-xdata
mov cl [ ebx ]
cmp cl 0x9
je r-xdata
mov [ edi ] 0x0
lea eax [ esp + 0x8 ]
lea edi [ esp + 0x18 ]
push 0x0
push eax
push edi
push esi
call sub_49646e
add esp 0x10
mov eax [ edi ]
xor ebx ebx
mov [ esp ] 0x0
test eax eax
jle r-xdata
push edi
call sub_4a7f30
add esp 0x4
mov esi eax
push 0x0
call sub_485b0d
xor ebx ebx
inc ebx
jmp r-xdata
push [ esp + 0x8 ]
push esi
push [ rw-data ]
call sub_43253e
add esp 0xc
push esi
call [ UnmapViewOfFile@IAT ]
push [ esp + 0x18 ]
call [ CloseHandle@IAT ]
jmp r-xdata
test bl bl
je r-xdata
cmp cl 0x40
jne r-xdata
inc ebx
cmp cl 0x20
je r-xdata
mov ebp [ esp + 0x58 ]
jmp r-xdata
xor edi edi
mov [ esp ] 0x0
mov [ edi + ebx ] 0x0
inc edi
push [ rw-data ]
push edi
call j_sub_445b82
add esp 0x8
push [ rw-data ]
call sub_440120
add esp 0x4
xor ebx ebx
inc ebx
test eax eax
jne r-xdata
movsx eax [ edi + ebx - 0x1 ]
lea esi [ ebx - 0x1 ]
push eax
call sub_4a7635
add esp 0x4
test eax eax
jne r-xdata
or ebx [ esp ]
push [ rw-data ]
call sub_431725
add esp 0x4
or ebx [ rw-data ]
je r-xdata
test cl cl
jne r-xdata
mov [ esp + 0x4 ] edi
push ecx
xor edi edi
inc edi
push edi
push eax
push ebp
call sub_43035f
add esp 0x10
cmp eax edi
je r-xdata
mov eax [ edx + edi * 4 + 0x4 ]
call sub_483862
test eax eax
jne r-xdata
mov ebx esi
cmp ebx 0x2
jl r-xdata
mov [ eax ] cl
inc eax
xor ebx ebx
mov [ eax ] 0x0
push esi
push ebx
push [ rw-data ]
call sub_43203b
add esp 0xc
push esi
call sub_43f9d4
add esp 0x4
test edi edi
jne r-xdata
mov edi [ esp + 0x4 ]
cmp eax 0x2
je r-xdata
push 0x0
call sub_485b0d
push 0xb10
push 0x0
push rw-data
call sub_49acf0
add esp 0xc
push 0x64
push [ rw-data ]
call sub_43194f
add esp 0x8
mov [ rw-data ] eax
push 0x90
push [ rw-data ]
call sub_43194f
add esp 0x8
mov [ rw-data ] eax
call sub_489118
mov [ rw-data ] 0xa
mov [ rw-data ] 0x14
mov [ rw-data ] 0x19
mov [ rw-data ] 0x1c
push 0x73
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi [ rw-data ]
mov ebx [ rw-data ]
lea eax [ eax + eax * 4 ]
lea ebp [ eax + eax + 0x19 ]
push 0x74
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
imul esi ebx
add esi edi
mov edi [ rw-data ]
call sub_484ae8
test eax eax
je r-xdata
lea esi [ esp + 0x18 ]
mov [ esi ] ebx
mov [ esi + 0x4 ] r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebp
push 0xc8
push ebp
call [ LoadIconA@IAT ]
mov [ esi + 0x14 ] eax
push 0x7f01
push ebx
call [ LoadCursorA@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
push [ r--data ]
push ebx
push ebx
call sub_4404de
add esp 0xc
mov [ esi + 0x24 ] eax
push esi
call [ RegisterClassW@IAT ]
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
lea esi [ edi + 0x1 ]
cmp esi eax
mov eax 0x0
mov ebp [ edx + edi * 4 ]
jge r-xdata
mov edi esi
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
mov eax 0x12340042
push 0x2
push edi
call [ rw-data ]
jmp r-xdata
mov eax [ esp + 0x18 ]
inc edi
cmp edi eax
jl r-xdata
push ebp
push r--data
call sub_485b8e
push r--data
push ebp
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push esi
push 0x150
push 0x0
push ebx
call [ AppendMenuA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp ]
add eax 0x4
jne r-xdata
push r--data
push 0x140
push 0x0
push ebx
call [ AppendMenuA@IAT ]
lea ebx [ esp + 0x18 ]
mov [ ebx ] 0x28
push ebx
push eax
call sub_484ca9
mov eax [ ebx + 0xc ]
mov edi [ ebx + 0x10 ]
sub eax [ ebx + 0x4 ]
sub edi [ ebx + 0x8 ]
cmp ebp eax
cmovle eax ebp
cmp esi edi
mov [ esp ] eax
mov eax [ r--data ]
cmovle edi esi
xor ecx ecx
push eax
push ecx
push ecx
call sub_4404de
add esp 0xc
mov esi eax
push 0x6d
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov eax 0xcf0000
mov ebx 0xef0000
cmove ebx eax
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebp ebx
and ebp 0xea0000
xor ecx ecx
inc ecx
cmp eax ecx
cmovne ebp ebx
push 0x56
push [ rw-data ]
call sub_43194f
add esp 0x8
xor ebx ebx
test eax eax
setne bl
push 0x7e
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
lea eax [ ebx * 8 + 0x200 ]
lea ecx [ ebx * 8 ]
cmovne ecx eax
mov eax 0x80000000
xor edx edx
push edx
push [ esp + 0x5c ]
push edx
mov edx 0x0
push edx
push edi
push [ esp + 0x14 ]
push eax
push eax
push ebp
mov ebp 0x0
push esi
push esi
push ecx
call [ CreateWindowExW@IAT ]
mov [ rw-data ] eax
push esi
call sub_43f9d4
add esp 0x4
xor ecx ecx
xor edx edx
call sub_489272
push ebp
push rw-data
push [ rw-data ]
call sub_475103
add esp 0xc
mov [ rw-data ] eax
push [ rw-data ]
push ebp
call sub_43d665
add esp 0x8
mov [ rw-data ] eax
push eax
push [ rw-data ]
call sub_47b2fb
add esp 0x8
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
push 0x73
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi eax
push 0x74
push [ rw-data ]
call sub_43194f
add esp 0x8
push esi
push edi
push eax
push [ rw-data ]
call sub_4752f4
add esp 0x10
lea esi [ esp + 0x8 ]
push esi
push [ rw-data ]
call [ GetWindowRect@IAT ]
lea edi [ esp + 0x18 ]
push edi
push [ rw-data ]
call [ GetClientRect@IAT ]
push 0x7f
push [ rw-data ]
call sub_43194f
add esp 0x8
lea ecx [ eax + eax ]
mov edx edi
mov [ rw-data ] eax
mov [ rw-data ] eax
add ecx [ esi + 0x8 ]
sub ecx [ esi ]
sub ecx [ edx + 0x8 ]
add ecx [ edx ]
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
mov [ rw-data ] ecx
sub edx [ edi + 0xc ]
add edx [ edi + 0x4 ]
lea eax [ edx + eax * 2 ]
mov edx [ rw-data ]
mov [ rw-data ] eax
mov esi [ edx + 0x128 ]
mov edx [ edx + 0x12c ]
imul edx [ rw-data ]
imul esi [ rw-data ]
add edx ecx
add esi eax
push 0xe
push esi
push edx
push ebp
push ebp
push ebp
push [ rw-data ]
call [ SetWindowPos@IAT ]
mov eax [ rw-data ]
lea ecx [ eax + 0xf ]
sar ecx 0x1f
shr ecx 0x1c
lea edi [ eax + ecx + 0xf ]
sar edi 0x4
imul edi [ rw-data ]
add edi edi
xor ebx ebx
inc ebx
push ebx
push edi
call sub_43f807
add esp 0x8
mov esi eax
push edi
push ebp
push esi
call sub_49acf0
add esp 0xc
push esi
push ebx
push ebx
push [ rw-data ]
push [ rw-data ]
call [ CreateBitmap@IAT ]
mov [ rw-data ] eax
push esi
call sub_43f9d4
add esp 0x4
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call [ CreateCaret@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x18 ]
mov [ edx ] 0x1c
mov [ edx + 0x4 ] 0x1f
mov [ edx + 0x8 ] ebp
mov eax [ eax + 0x128 ]
lea ecx [ eax - 0x1 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
mov [ edx + 0x14 ] ebp
push ebp
push edx
push ebx
push [ rw-data ]
call [ SetScrollInfo@IAT ]
mov [ rw-data ] ebp
mov [ rw-data ] ebp
call [ GetDoubleClickTime@IAT ]
mov [ rw-data ] eax
push ebp
push [ rw-data ]
call [ GetSystemMenu@IAT ]
mov [ rw-data ] eax
call [ CreatePopupMenu@IAT ]
mov [ rw-data ] eax
push r--data
push 0x190
push ebp
push eax
call [ AppendMenuA@IAT ]
call [ CreateMenu@IAT ]
mov [ rw-data ] eax
push ebx
push rw-data
call sub_447761
add esp 0x8
call sub_489776
mov edi [ AppendMenuA@IAT ]
mov eax 0xfffffff8
mov edi [ r--data ]
push edi
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push edi
push r--data
call sub_43f758
add esp 0x8
mov edi eax
push 0x4
push 0x134
push edi
push esi
call sub_496318
add esp 0x10
cmp eax 0x6
jne r-xdata
push r--data
push ebp
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ebx [ eax + rw-data ]
xor esi esi
mov [ esp ] eax
push esi
push esi
mov eax 0x800
push eax
mov ebp 0x800
push ebx
call edi
push r--data
mov eax 0x10
push eax
push esi
push ebx
call edi
push esi
push esi
push ebp
mov ebp 0x800
push ebx
call edi
push r--data
push 0x20
push esi
push ebx
call edi
push r--data
push 0x30
push esi
push ebx
call edi
push r--data
push [ rw-data ]
mov eax 0x10
push eax
push ebx
call edi
push r--data
push 0x50
push esi
push ebx
call edi
push esi
push esi
push ebp
push ebx
call edi
push r--data
push 0x170
push esi
push ebx
call edi
push r--data
push 0x60
push esi
push ebx
call edi
push r--data
push 0x70
push esi
push ebx
call edi
push esi
push esi
push ebp
push ebx
call edi
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
xor ecx ecx
cmp eax 0x1
sete cl
push r--data
push 0x180
push ecx
push ebx
call edi
push esi
push esi
push ebp
push ebx
call edi
call sub_48e82b
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4963f9
push 0x1
call sub_4a3719
mov bl [ ebp ]
cmp bl 0x2d
je r-xdata
call sub_4897f7
xor ebx ebx
push ebx
call [ GetKeyboardLayout@IAT ]
movzx eax ax
push 0x14
lea esi [ esp + 0x1c ]
push esi
push 0x1004
push eax
call [ GetLocaleInfoA@IAT ]
push esi
call sub_4a65cf
add esp 0x4
mov [ rw-data ] eax
push [ esp + 0x64 ]
push [ rw-data ]
call [ ShowWindow@IAT ]
push [ rw-data ]
call [ SetForegroundWindow@IAT ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_489a1e
call [ GetForegroundWindow@IAT ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
push ecx
push [ rw-data ]
call sub_47b30a
add esp 0x8
push [ rw-data ]
call [ UpdateWindow@IAT ]
mov edi [ PeekMessageW@IAT ]
push r--data
push 0x0
call sub_4842ab
add esp 0x8
push ebp
push r--data
call sub_485b8e
cmp [ esp ] 0x0
je r-xdata
lea eax [ esp + 0x8 ]
push eax
call sub_48e358
add esp 0x4
mov esi eax
push 0x1cff
push ebp
push 0x0
push esi
push [ esp + 0x18 ]
call [ MsgWaitForMultipleObjects@IAT ]
cmp eax [ esp + 0x8 ]
jae r-xdata
xor ebp ebp
push ebp
push ebp
push ebp
push ebp
push esi
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push 0x7
push r--data
push ebp
call sub_4a7fc0
add esp 0xc
test eax eax
je r-xdata
push [ rw-data ]
push 0x1
push ebp
push r--data
call sub_43035f
add esp 0x10
cmp eax 0x2
je r-xdata
push esi
push [ esi + eax * 4 ]
call sub_48e493
add esp 0x4
push esi
jmp r-xdata
call [ GetForegroundWindow@IAT ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
push ecx
push [ rw-data ]
call sub_47b30a
add esp 0x8
xor ebp ebp
dec ebp
cmp [ ebp + 0x7 ] 0x2f
lea ebx [ ebp + 0x7 ]
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
push 0x22a
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
call sub_430298
jmp r-xdata
cmp [ esp + 0x1c ] 0x12
je r-xdata
call sub_43f9d4
add esp 0x4
mov ebp [ IsWindow@IAT ]
lea esi [ esp + 0x18 ]
mov edi [ esp + 0x4 ]
push 0x1
push 0x2
push [ rw-data ]
call sub_431ee3
add esp 0xc
push r--data
push ebx
call sub_43f60a
add esp 0x8
mov cl [ ebx + eax ]
test cl cl
je r-xdata
cmp [ ebp + 0x8 ] 0x2f
lea eax [ ebp + 0x9 ]
cmove ebx eax
push ebp
push 0x0
push [ rw-data ]
call sub_43203b
add esp 0xc
xor eax eax
inc eax
mov [ esp ] eax
lea esi [ ebp + 0x1 ]
call sub_4302d1
test eax eax
mov ebp 0x0
jne r-xdata
push [ esp + 0x20 ]
call sub_485b0d
push [ rw-data ]
call ebp
test eax eax
je r-xdata
push 0xffffffff
push 0x1
push [ rw-data ]
add eax ebx
cmp cl 0x3a
mov [ eax ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
push esi
call [ DispatchMessageW@IAT ]
push esi
push [ rw-data ]
call [ IsDialogMessageA@IAT ]
test eax eax
jne r-xdata
inc eax
push eax
call sub_4a65cf
add esp 0x4
push eax
xor eax eax
inc eax
push eax
push [ rw-data ]
jmp r-xdata
mov [ esi - 0x1 ] 0x0
movsx eax bl
push eax
call sub_4a7635
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
push 0x1
push ebx
push ebx
push ebx
push esi
call edi
test eax eax
je r-xdata
cmp [ esp + 0x1c ] 0x8005
je r-xdata
call sub_431ee3
add esp 0xc
push ebx
push 0x0
push [ rw-data ]
call sub_43203b
add esp 0xc
xor eax eax
xor ebx ebx
inc eax
mov [ esp ] eax
jmp r-xdata
sub_485b0d
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebp [ DeleteObject@IAT ]
mov edi 0xffffff00
xor ebx ebx
mov [ edi + rw-data ] ebx
mov [ edi + rw-data ] ebx
add edi 0x4
jne r-xdata
push eax
call ebp
mov eax [ edi + rw-data ]
test eax eax
je r-xdata
push [ rw-data ]
call sub_43f9d4
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4901a0
push 0x2
push [ rw-data ]
call sub_43194f
add esp 0x8
cmp eax 0x3
jne r-xdata
push eax
call [ DeleteObject@IAT ]
call sub_484d61
call [ CoUninitialize@IAT ]
push esi
call sub_4a3719
call sub_4921c4
sub_485b8e
push edi
push esi
sub esp 0x68
mov eax [ esp + 0x74 ]
lea ecx [ esp + 0x78 ]
mov [ esp ] ecx
push ecx
push eax
call sub_43fb4c
add esp 0x8
mov esi eax
lea edi [ esp + 0x4 ]
push [ r--data ]
push r--data
push edi
call sub_432778
add esp 0xc
push 0x10
push edi
push esi
push [ rw-data ]
call [ MessageBoxA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push 0x1
call sub_4a3719
push ebp
push ebx
push edi
push esi
sub esp 0x8ac
mov ebp [ esp + 0x8c4 ]
mov eax [ rw-data ]
mov ebx [ esp + 0x8cc ]
mov edx [ esp + 0x8c8 ]
mov edi [ esp + 0x8c0 ]
cmp ebp 0x1ff
mov [ esp + 0x8a8 ] eax
jg r-xdata
cmp ebp 0x231
jle r-xdata
cmp ebp 0xff
jle r-xdata
lea eax [ ebp - 0x200 ]
cmp eax 0x8
ja r-xdata
cmp ebp 0x30e
jg r-xdata
lea eax [ ebp - 0x1 ]
cmp eax 0x14
ja r-xdata
lea eax [ ebp - 0x100 ]
cmp eax 0x17
ja r-xdata
cmp ebp 0x214
je r-xdata
jmp [ eax * 4 + jump_table_41c3d0 ]
lea eax [ ebp - 0x8002 ]
cmp eax 0x4
ja r-xdata
cmp ebp 0x232
je r-xdata
cmp ebp 0x51
je r-xdata
jmp [ eax * 4 + jump_table_41c31c ]
cmp ebp 0x20a
je r-xdata
jmp [ eax * 4 + jump_table_41c370 ]
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
cmp eax 0x3
je r-xdata
cmp ebp 0x231
jne r-xdata
cmp [ rw-data ] edx
mov esi edx
jne r-xdata
cmp ebp 0x30f
je r-xdata
jmp [ eax * 4 + jump_table_41c3f4 ]
push 0x0
call sub_447d56
mov edx [ esp + 0x8cc ]
add esp 0x4
cmp [ rw-data ] 0x1
mov [ rw-data ] 0x0
jne r-xdata
cmp ebp 0x286
je r-xdata
movzx eax bx
lea esi [ esp + 0xa8 ]
push 0x14
push esi
push 0x1004
push eax
call [ GetLocaleInfoA@IAT ]
push esi
call sub_4a65cf
add esp 0x4
mov [ rw-data ] eax
call sub_48a997
cmp ebp 0xa0
jne r-xdata
push ebx
push edx
push ebp
push edi
cmp ebp 0x20a
jne r-xdata
cmp [ rw-data ] ebp
jne r-xdata
push ebx
call sub_49235c
mov edx [ esp + 0x8cc ]
add esp 0x4
mov eax edx
or eax 0x2
cmp eax 0xe7
jne r-xdata
call sub_48d341
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0x1
mov esi edx
call sub_447d56
mov edx esi
add esp 0x4
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
jmp r-xdata
xor ecx ecx
inc ecx
call sub_48d2b0
mov eax esi
mov [ rw-data ] ebx
mov [ rw-data ] 0x200
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
xor ebx ebx
cmp [ rw-data ] 0x0
je r-xdata
cmp ebp 0x311
jne r-xdata
mov [ rw-data ] edx
jmp r-xdata
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
push 0x73
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebx edi
mov edi eax
push 0x74
push [ rw-data ]
call sub_43194f
add esp 0x8
push esi
push edi
mov edi ebx
mov ebx [ esp + 0x8d4 ]
push eax
push [ rw-data ]
call sub_4752f4
add esp 0x10
push 0x1
push 0x0
push edi
call [ InvalidateRect@IAT ]
jmp r-xdata
test dh 0xff
je r-xdata
cmp ebp 0x307
jne r-xdata
cmp [ rw-data ] edx
mov esi edx
jne r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
add [ rw-data ] edx
lea eax [ esp + 0xa8 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
movd xmm0 edx
sar edx 0x10
mov ecx ebx
pshufd xmm0 xmm0 0x44
add edx [ rw-data ]
pand xmm0 [ r--data ]
mov [ rw-data ] edx
movdqu [ esp + 0x20 ] xmm0
jmp r-xdata
push 0x41
push [ rw-data ]
call sub_43194f
add esp 0x8
mov [ esp + 0x1c ] eax
push 0x43
push [ rw-data ]
call sub_43194f
add esp 0x8
mov [ esp + 0x38 ] eax
push 0x5c
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
push 0x4e
push [ rw-data ]
call sub_43194f
add esp 0x8
mov [ esp + 0x3c ] eax
push 0x0
call [ GetKeyboardLayout@IAT ]
lea edi [ esp + 0xa8 ]
mov [ esp + 0x34 ] eax
push edi
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp ebp 0x100
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push 0x7f
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx eax
mov eax ebx
mov edx [ rw-data ]
mov ebx ecx
mov ebp [ eax + 0x8 ]
mov edi eax
sub ecx [ rw-data ]
sub ebx [ rw-data ]
mov esi [ edx + 0x12c ]
mov [ esp + 0x20 ] ebp
add ecx ecx
add ebx ebx
add ecx [ rw-data ]
add ebx [ rw-data ]
mov eax esi
mov [ esp + 0x1c ] esi
shr eax 0x1f
add eax esi
mov esi [ edi ]
mov [ esp + 0x40 ] edx
sub ebp ebx
sar eax 0x1
mov edi ebp
mov [ esp + 0x38 ] ebp
mov ebp [ esp + 0x8cc ]
sub edi esi
mov [ esp + 0x34 ] esi
add edi eax
mov esi [ edx + 0x128 ]
mov eax [ ebp + 0xc ]
mov edx esi
mov [ esp + 0xc ] eax
shr edx 0x1f
sub eax ecx
mov ebp [ ebp + 0x4 ]
add edx esi
mov [ esp + 0x3c ] eax
sar edx 0x1
sub eax ebp
mov [ esp + 0x10 ] ebp
add eax edx
cdq
idiv esi
mov ebp eax
mov eax edi
cdq
idiv [ esp + 0x1c ]
add ebx [ esp + 0x34 ]
sub edi edx
mov edx [ esp + 0x8c8 ]
add ebx edi
cmp edx 0x7
ja r-xdata
mov edi [ ebx + 0x8 ]
mov ecx [ rw-data ]
mov ebp [ ebx + 0xc ]
sub edi [ ebx ]
mov eax ecx
mov [ esp + 0x20 ] ebx
shr eax 0x1f
sub ebp [ ebx + 0x4 ]
add eax ecx
sar eax 0x1
sub edi [ rw-data ]
sub ebp [ rw-data ]
add eax edi
cdq
idiv ecx
mov ecx [ rw-data ]
xor ebx ebx
mov esi eax
inc ebx
test esi esi
cmovle esi ebx
mov eax ecx
shr eax 0x1f
add eax ecx
sar eax 0x1
add eax ebp
cdq
idiv ecx
test eax eax
cmovg ebx eax
push ebx
push esi
push [ esp + 0x8c8 ]
call sub_4479ac
add esp 0xc
imul ebx [ rw-data ]
imul esi [ rw-data ]
mov ecx [ esp + 0x8c8 ]
sub ebp ebx
sub edi esi
je r-xdata
call [ GetCapture@IAT ]
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x200
je r-xdata
sub esp 0x4
call sub_48bf51
add esp 0x4
mov esi eax
test esi esi
je r-xdata
cmp edx edi
je r-xdata
mov edx [ esp + 0x8c8 ]
jmp r-xdata
mov [ esp + 0xa8 ] dl
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ esp + 0xa9 ] dl
mov [ esp + 0xa8 ] dh
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
inc ecx
call sub_48d2b0
mov eax esi
mov [ rw-data ] ebx
mov [ rw-data ] 0xa0
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
pxor xmm0 xmm0
movdqu [ esp + 0x20 ] xmm0
jmp r-xdata
movzx eax [ esp + 0xb9 ]
movzx ecx [ esp + 0xb8 ]
movd xmm0 eax
movd xmm1 ecx
punpcklqdq xmm1 xmm0
pand xmm1 [ r--data ]
pand xmm1 [ r--data ]
movdqu [ esp + 0x20 ] xmm1
jmp r-xdata
mov eax edx
neg eax
cmovl eax edx
xor ebx ebx
cmp eax 0x78
jl r-xdata
push 0x100
push 0x0
push edi
call sub_49acf0
add esp 0xc
mov eax [ esp + 0x8c8 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov ecx [ esp + 0x8c8 ]
cmp ecx 0x12
jne r-xdata
lea eax [ esp + 0xa8 ]
and ebx 0xdfff
mov [ eax ] edi
mov [ eax + 0x4 ] 0x100
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ebx
push eax
call [ TranslateMessage@IAT ]
jmp r-xdata
push 0x74
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx [ rw-data ]
mov ecx [ ecx + 0x128 ]
cmp eax ecx
jne r-xdata
mov eax [ esp + 0x8cc ]
mov [ eax + 0x8 ] ebx
mov esi [ esp + 0x40 ]
mov eax 0x92
bt eax edx
jae r-xdata
test ebp ebp
je r-xdata
cmp ecx 0x7
ja r-xdata
mov eax esi
test al 0x1
jne r-xdata
push ebx
call sub_49235c
add esp 0x4
mov eax esi
xor ebx ebx
test al 0x13
je r-xdata
push esi
call [ RealizePalette@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ebx ebx
xor ecx ecx
lea edx [ esp + 0xa8 ]
inc ecx
push ecx
push ecx
push edx
push [ rw-data ]
push eax
lea ecx [ esp + 0xa8 ]
push 0x1
push 0x2
push ecx
push [ rw-data ]
push eax
jmp r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push [ rw-data ]
call sub_47b1ad
add esp 0x4
cmp [ rw-data ] 0xa0
je r-xdata
mov edx [ rw-data ]
mov ecx ebx
test edx edx
jle r-xdata
mov eax ebx
and eax 0xc0000000
cmp eax 0x40000000
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0x3
jne r-xdata
mov eax ebx
and eax 0x1000000
je r-xdata
push ecx
push 0x74
push [ rw-data ]
call sub_431ee3
add esp 0xc
mov eax [ rw-data ]
push [ eax + 0x12c ]
push 0x73
push [ rw-data ]
call sub_431ee3
add esp 0xc
push 0x1
push 0x0
push [ esp + 0x8c8 ]
call [ InvalidateRect@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
push 0x73
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx [ rw-data ]
cmp eax [ ecx + 0x12c ]
je r-xdata
mov eax [ esp + 0x8cc ]
mov [ eax + 0xc ] ecx
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x8cc ]
sub ecx ebp
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov esi [ esp + 0x38 ]
mov eax [ esp + 0x8cc ]
sub esi edi
mov [ eax ] esi
mov esi [ rw-data ]
jmp r-xdata
xor ebx ebx
or ebp edi
setne bl
jmp r-xdata
add ecx 0xfffffffd
cmp ecx 0x2
ja r-xdata
mov eax [ esp + 0x20 ]
sub [ eax + 0x8 ] edi
mov eax 0x92
bt eax ecx
jae r-xdata
xor esi esi
inc esi
mov esi eax
shr esi 0x4
and esi 0x1
xor esi 0x3
jmp r-xdata
push esi
call sub_48bf83
add esp 0x4
xor ebx ebx
inc ebx
jmp r-xdata
push esi
call [ UpdateColors@IAT ]
sub esp 0x4
call sub_48bf51
mov edx [ esp + 0x8cc ]
add esp 0x4
mov esi eax
test esi esi
je r-xdata
call sub_43ca08
add esp 0x14
jmp r-xdata
push ebx
call sub_49235c
add esp 0x4
jmp sub_487a7d
jns r-xdata
mov esi 0x7
mov eax 0xffffff88
mov edx ebx
shr edx 0x10
test dh 0x20
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x14c ]
test eax eax
jne r-xdata
cmp eax 0x1
mov [ esp + 0xc ] ecx
jg r-xdata
cmp ecx 0x90
mov [ esp + 0xc ] ecx
je r-xdata
mov al [ esp + 0xba ]
mov [ esp + 0x14d ] al
mov ecx [ ecx + 0x128 ]
imul ebp [ esi + 0x128 ]
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov edi [ esp + 0xc ]
add esi ecx
xor eax ebx
xor ebx ebx
mov ecx esi
add ecx ebp
xor edi ecx
or edi eax
setne bl
add edx 0xfffffffd
cmp edx 0x2
ja r-xdata
mov eax [ esp + 0x20 ]
sub [ eax + 0xc ] ebp
mov eax [ esp + 0x20 ]
add [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ esp + 0x20 ]
add [ eax ] edi
jmp r-xdata
mov ebp eax
call sub_48d341
mov [ esp + 0x20 ] eax
mov eax ebp
mov edi [ rw-data ]
and ebp 0x4
and eax 0x8
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x8cc ]
mov ecx eax
sar ecx 0x10
lea eax [ ecx + 0x1 ]
sub eax edi
test ecx ecx
cmovns eax ecx
sub eax [ rw-data ]
cdq
idiv edi
mov edi [ rw-data ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x8cc ]
mov ecx eax
movsx edx ax
lea eax [ edx + 0x1 ]
shl ecx 0x10
sub eax edi
test ecx ecx
mov ecx esi
cmovns eax edx
sub eax [ rw-data ]
cdq
idiv edi
mov edi eax
call sub_48d394
mov ecx 0x4
push [ esp + 0x20 ]
push [ esp + 0x14 ]
push ebp
push [ esp + 0x18 ]
push edi
push ecx
push eax
push esi
push [ rw-data ]
call sub_4767a8
add esp 0x24
jmp r-xdata
push esi
call [ RealizePalette@IAT ]
test eax eax
je r-xdata
mov esi 0x8
mov eax 0x78
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x128 ]
mov edx ecx
neg edx
cmp esi 0x7
cmovne edx ecx
mov ecx edx
shr ecx 0x1f
add ecx edx
xor edx edx
sar ecx 0x1
push ecx
push edx
push eax
call sub_475e6c
add esp 0xc
jmp r-xdata
push 0x8e
push [ rw-data ]
call sub_43194f
add esp 0x8
movdqu xmm0 [ esp + 0x20 ]
movd edi xmm0
test edi edi
je r-xdata
lea eax [ esp + 0xb9 ]
mov edi edx
mov [ esp + 0x10 ] 0x0
mov bl [ eax ]
and edi 0x8000
mov [ esp + 0x4c ] eax
sete [ esp + 0x20 ]
cmp [ esp + 0x14d ] 0x0
js r-xdata
push edi
call [ SetKeyboardState@IAT ]
cmp ecx 0x90
mov [ esp + 0xc ] ecx
jne r-xdata
cmp [ esp + 0xb8 ] 0x0
js r-xdata
jmp r-xdata
push esi
call sub_48bf83
add esp 0x4
jmp r-xdata
push esi
call [ UpdateColors@IAT ]
add eax edx
cmp [ rw-data ] 0x0
mov ebx ecx
mov [ rw-data ] eax
je r-xdata
lea ecx [ esp + 0xa8 ]
movsx eax bx
mov [ ecx ] eax
mov eax ebx
sar eax 0x10
mov [ ecx + 0x4 ] eax
push ecx
push [ esp + 0x8c4 ]
call [ ScreenToClient@IAT ]
test eax eax
je r-xdata
test eax eax
je r-xdata
shr bh 0x7
and bl 0x2
cmp esi [ rw-data ]
mov eax [ rw-data ]
jne r-xdata
mov [ rw-data ] 0x100
push 0x5b
push [ rw-data ]
call sub_43194f
mov edx [ esp + 0x48 ]
add esp 0x8
test dh 0x1
je r-xdata
lea eax [ esp + 0xb9 ]
mov edi edx
mov bl [ eax ]
and edi 0x8000
mov [ esp + 0x4c ] eax
sete [ esp + 0x20 ]
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
test bl bl
jns r-xdata
cmp [ esp + 0x38 ] 0x0
mov [ esp + 0xc ] ecx
jne r-xdata
mov [ esp + 0xc ] 0x90
cmp ebx 0x3fffffff
mov [ esp + 0xc ] 0x2b
ja r-xdata
call sub_48d341
mov edx [ esp + 0xac ]
mov ebx [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ esp + 0xa8 ]
lea eax [ edx + 0x1 ]
sub eax ebx
test edx edx
cmovns eax edx
sub eax [ rw-data ]
cdq
idiv ebx
mov ebp [ rw-data ]
mov ebx eax
lea eax [ ecx + 0x1 ]
sub eax ebp
test ecx ecx
cmovns eax ecx
mov ecx esi
sub eax [ rw-data ]
cdq
idiv ebp
mov ebp eax
call sub_48d394
movdqu xmm0 [ esp + 0x20 ]
mov ecx [ rw-data ]
pshufd xmm0 xmm0 0x4e
sub esp 0x24
mov edx [ esp + 0x34 ]
mov [ esp + 0x20 ] edx
movd [ esp + 0x1c ] xmm0
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x8f0 ]
xor edx edx
mov [ esp + 0x10 ] ebp
inc edx
mov [ esp + 0xc ] edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] esi
mov [ esp ] ecx
call sub_4767a8
add esp 0x24
jmp r-xdata
cmp esi 0x11
je r-xdata
mov ecx edx
and ecx 0xc000
or ecx eax
je r-xdata
cmp esi 0x5d
jne r-xdata
cmp esi 0x12
jne r-xdata
shr bl 0x6
mov esi [ esp + 0xc ]
mov bh [ esp + 0xb8 ]
cmp [ rw-data ] 0x0
mov [ esp + 0x40 ] edx
jne r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x144 ]
mov [ esp + 0xc ] ecx
test eax eax
je r-xdata
xor [ esp + 0x138 ] 0x1
jmp r-xdata
or bh bl
cmp [ esp + 0x10 ] 0x0
je r-xdata
xor ecx ecx
cmp eax 0x1
je r-xdata
xor ecx ecx
inc ecx
shr edi 0xe
xor ecx ecx
cmp eax 0x1
cmove ecx edi
jmp r-xdata
mov [ rw-data ] 0x5d
test eax eax
je r-xdata
mov [ esp + 0x14d ] 0x80
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov [ esp + 0xba ] 0x0
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
movzx ebx bh
je r-xdata
cmp eax 0x2
jl r-xdata
mov eax ecx
mov [ rw-data ] ecx
jmp r-xdata
mov [ rw-data ] 0x12
mov ecx [ rw-data ]
mov edi ebx
mov ebx edx
xor edx edx
mov esi [ esp + 0x1c ]
cmp [ ecx + 0x144 ] edx
setne dl
cmp [ esp + 0x38 ] 0x0
sete cl
cmp esi 0x2
setne [ esp + 0x18 ]
cmp esi 0x3
mov esi eax
sete ch
or esi [ esp + 0x3c ]
setne dh
test bh 0x1
jne r-xdata
test dh 0x1
je r-xdata
xor eax eax
mov [ rw-data ] 0x0
mov esi [ esp + 0xc ]
mov ebx edi
jmp r-xdata
and dl [ esp + 0x18 ]
mov esi [ esp + 0xc ]
mov ebx edi
and cl dl
or cl dh
or ch cl
je r-xdata
lea edx [ esi - 0x21 ]
cmp edx 0xd
ja r-xdata
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
cmp esi 0xc
jne r-xdata
mov ecx 0x60
jmp [ edx * 4 + jump_table_41c408 ]
xor ebx ebx
cmp [ esp + 0xbc ] 0x0
je r-xdata
test eax eax
jne r-xdata
mov ecx 0x65
jmp r-xdata
mov ecx 0x69
jmp r-xdata
mov edx [ esp + 0x40 ]
and edx 0x81ff
cmp [ rw-data ] 0x2
jne r-xdata
push 0x94
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov al [ esp + 0x14d ]
test al al
js r-xdata
mov dl [ esp + 0x138 ]
mov esi ecx
and dl 0x1
or dl bl
movzx ebx dl
push [ esp + 0x34 ]
push 0x0
push rw-data
lea eax [ esp + 0xb4 ]
push eax
push edx
mov edi esi
push esi
call [ ToAsciiEx@IAT ]
mov esi eax
test esi esi
jle r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ebx ebx
cmp [ esp + 0x10 ] 0x0
mov [ esp + 0xbc ] 0x0
sete bl
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
push [ esp + 0x34 ]
push 0x0
push 0x3
push rw-data
lea ecx [ esp + 0xb8 ]
push ecx
push edx
mov edi esi
push esi
call eax
mov esi eax
jmp r-xdata
lea eax [ esp + 0x64 ]
lea eax [ esp + 0x65 ]
mov [ eax - 0x1 ] 0x1b
jmp r-xdata
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
je r-xdata
mov cl [ eax + eax + rw-data ]
mov [ eax + rw-data ] cl
inc eax
cmp esi eax
jne r-xdata
xor eax eax
push 0x3
push rw-data
push esi
push rw-data
push eax
push eax
call [ MultiByteToWideChar@IAT ]
test esi esi
jle r-xdata
cmp ebx 0x2
jne r-xdata
cmp esi 0x21
jne r-xdata
cmp ebx 0x1
jne r-xdata
push ebx
push ecx
push ebp
push [ esp + 0x8cc ]
jmp r-xdata
push 0x53
push [ rw-data ]
call sub_43194f
mov ecx [ esp + 0x8d0 ]
add esp 0x8
test eax eax
je r-xdata
cmp edi 0x12
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
test ecx ecx
sete al
inc ecx
xor ebp ebp
xor edi edi
lea eax [ esp + eax * 2 + 0x54 ]
inc edi
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] eax
jmp r-xdata
cmp ebx 0x1
jne r-xdata
cmp esi 0x21
jne r-xdata
push 0x0
push 0x2
push 0x115
push [ rw-data ]
jmp r-xdata
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
mov eax [ eax + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
je r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
mov cx [ ebp + ebp + rw-data ]
mov edx [ rw-data ]
movzx eax cx
cmp edx 0x3
mov [ esp + 0x50 ] ax
je r-xdata
cmp ebx 0x2
jne r-xdata
cmp esi 0x22
jne r-xdata
xor eax eax
push eax
push eax
push 0x115
push [ rw-data ]
jmp r-xdata
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ ecx - 0x20 ]
movzx edx dx
cmp edx 0x5f
ja r-xdata
cmp edx 0x2
jne r-xdata
lea ecx [ esi - 0x21 ]
cmp ebx 0x3
jne r-xdata
cmp esi 0x22
jne r-xdata
push 0x0
push 0x3
push 0x115
push [ rw-data ]
jmp r-xdata
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
mov [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
push eax
push [ rw-data ]
call sub_496029
add esp 0x8
cmp eax 0xffffffff
je r-xdata
lea edx [ ecx - 0x20 ]
movzx edx dx
cmp edx 0x5f
ja r-xdata
cmp ebx 0x1
jne r-xdata
cmp ecx 0x1
ja r-xdata
push 0x0
push 0x1
push 0x115
push [ rw-data ]
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x10
call [ MessageBeep@IAT ]
jmp r-xdata
mov [ esp + 0x52 ] ax
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x3
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
mov [ esp + 0x48 ] ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] eax
mov [ esp + 0xc ] esi
je r-xdata
cmp esi 0x2d
jne r-xdata
xor eax eax
cmp esi 0x21
setne al
push eax
push [ rw-data ]
call sub_475ee1
jmp r-xdata
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov [ esp + 0x54 ] 0x1b
mov [ esp + 0x56 ] cx
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x7f
ja r-xdata
inc ebp
cmp ebp esi
jl r-xdata
push edi
push edi
lea ecx [ esp + 0x5a ]
push ecx
push eax
call sub_43ca71
add esp 0x10
jmp r-xdata
cmp esi 0x20
sete bl
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp esi 0x73
jne r-xdata
lea eax [ esp + 0x54 ]
xor ecx ecx
push eax
push ecx
push [ rw-data ]
push sub_48cbad
push ecx
push ecx
call [ CreateThread@IAT ]
jmp r-xdata
add esp 0x8
jmp r-xdata
xor ecx ecx
call sub_48d2b0
push edi
push edi
lea ecx [ esp + 0x58 ]
push ecx
push eax
mov edx [ eax + 0x1090 ]
cmp [ edx + 0xc ] 0xfde9
je r-xdata
mov [ esp + 0x52 ] cx
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
jmp r-xdata
mov [ esp + 0x54 ] 0x1b
push eax
call sub_495f00
add esp 0x4
mov [ esp + 0x56 ] ax
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
cmp esi 0xd
sete al
cmp [ esp + 0x10 ] 0x0
mov [ esp + 0x44 ] eax
je r-xdata
cmp esi 0x20
jne r-xdata
push 0x51
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push edi
push edi
lea ecx [ esp + 0x5a ]
push ecx
push eax
call sub_43ca71
call sub_43ca71
add esp 0x10
push 0x1
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
jmp r-xdata
cmp [ esp + 0xc ] 0x13
sete al
cmp [ esp + 0x18 ] 0x2
jne r-xdata
cmp [ esp + 0xc ] 0xd
jne r-xdata
push 0x52
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
xor eax eax
xor ebx ebx
jmp r-xdata
mov [ esp + 0x54 ] cl
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x13
jne r-xdata
push 0x57
push [ rw-data ]
call sub_43194f
add esp 0x8
mov cl 0x1
test eax eax
mov [ esp + 0x44 ] ecx
je r-xdata
mov bl 0x1
xor eax eax
push 0x0
push 0xf100
push 0x112
push [ rw-data ]
call [ SendMessageA@IAT ]
mov ebx [ esp + 0x8cc ]
mov [ esp + 0x44 ] 0x0
push edi
push edi
lea ecx [ esp + 0x5c ]
push ecx
push eax
call sub_43c15b
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
xor [ eax + 0x144 ] 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
cmp eax 0x1
jne r-xdata
add esp 0x10
cmp [ esp + 0x1c ] 0x3
jne r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov ecx [ esp + 0xc ]
lea ecx [ ecx - 0x61 ]
cmp ecx 0x8
ja r-xdata
mov eax [ esp + 0x40 ]
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
and eax 0xc000
cmp eax 0x4000
je r-xdata
xor esi esi
cmp [ esp + 0x1c ] 0x1
jg r-xdata
xor esi esi
cmp [ esp + 0xc ] 0x6c
jg r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x8
jne r-xdata
jmp [ ecx * 4 + jump_table_41c440 ]
call sub_48d2f6
jmp r-xdata
mov ecx [ rw-data ]
cmp [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] ecx
jne r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
cmp [ esp + 0xc ] 0x6d
je r-xdata
cmp [ esp + 0xc ] 0x2b
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x8
jne r-xdata
push 0x3f
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov cl 0x7f
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x3
mov al [ eax + r--data ]
jmp sub_488571
mov ecx [ esp + 0x8c8 ]
jmp r-xdata
test esi esi
mov edx esi
je r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ ecx + 0x144 ]
test edx edx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x144 ]
test ecx ecx
jne r-xdata
mov esi 0x53
cmp [ esp + 0xc ] 0x6f
jne r-xdata
mov esi 0x50
jmp r-xdata
cmp [ esp + 0xc ] 0x6a
jne r-xdata
cmp [ esp + 0x18 ] 0x2
mov edx ebx
sete cl
and cl dl
cmp cl 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x9
jne r-xdata
push 0x3f
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov cl 0x8
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi 0xfffffffe
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
jmp r-xdata
mov cl 0x8
jmp r-xdata
mov eax [ esp + 0x3c ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
mov edx [ esp + 0xc ]
lea edi [ edx - 0x60 ]
cmp edi 0xf
ja r-xdata
jmp r-xdata
mov esi 0x51
jmp r-xdata
mov esi 0x52
jmp r-xdata
cmp [ esp + 0x18 ] 0x3
sete cl
and cl bl
cmp cl 0x1
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x0
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x5b1b
mov [ esi + 0x2 ] 0x5a
add esi 0x3
jmp r-xdata
mov cl 0x7f
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax r--data
mov eax edx
mov ecx r--data
and eax 0xfffffffc
cmp eax 0x50
mov eax r--data
cmove eax ecx
jmp r-xdata
cmp [ esp + 0xc ] 0xd
jne r-xdata
mov edx 0x70
jmp [ edi * 4 + jump_table_41c464 ]
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0xa0
jmp r-xdata
inc esi
jmp r-xdata
lea eax [ esp + 0x64 ]
sub esi eax
je r-xdata
xor ecx ecx
call sub_48d2b0
jmp r-xdata
lea ecx [ esp + 0x64 ]
push 0x1
push esi
push ecx
push eax
call sub_43c15b
add esp 0x10
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
cmp esi 0xffffffff
je r-xdata
push edx
push eax
mov edi [ esp + 0x1c ]
push edi
mov ecx [ esp + 0x40 ]
mov edx 0x4d
test ch 0x1
je r-xdata
mov cl 0x1a
test al al
jne r-xdata
cmp [ esp + 0xc ] 0x3
jne r-xdata
jmp r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax 0x2
cmp [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0xc ]
lea eax [ eax - 0x32 ]
cmp eax 0x6
ja r-xdata
push 0x1
push [ rw-data ]
call [ eax + 0x18 ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov eax [ esp + 0xc ]
or eax 0x2
cmp eax 0xbf
jne r-xdata
mov al [ eax + r--data ]
jmp sub_488571
cmp [ esp + 0x18 ] 0x3
jne r-xdata
cmp [ esp + 0xc ] 0xdf
je r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1f
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
sete al
and al [ esp + 0x44 ]
cmp al 0x1
jne r-xdata
cmp [ esp + 0xc ] 0xde
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1c
jmp r-xdata
cmp [ esp + 0xc ] 0xdc
jne r-xdata
mov eax [ esp + 0xc ]
lea eax [ eax - 0x70 ]
cmp eax 0x13
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x150 ] 0x0
je r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1e
jmp r-xdata
xor ebx ebx
jmp r-xdata
jmp [ eax * 4 + jump_table_41c4a4 ]
mov esi [ esp + 0x14 ]
mov [ esi ] 0xa0d
add esi 0x2
jmp r-xdata
test [ esp + 0x18 ] 0x2
jne r-xdata
cmp [ esp + 0xb8 ] 0x0
mov ecx 0x17
mov ebx 0xb
jmp r-xdata
cmp [ esp + 0x1c ] 0x3
jne r-xdata
cmp [ esp + 0x48 ] 0xd
ja r-xdata
cmovs ebx ecx
mov ecx [ rw-data ]
lea edi [ ebx - 0x1 ]
cmp edi 0x5
mov edx [ ecx + 0x148 ]
ja r-xdata
cmp ebx 0x6
jg r-xdata
mov edx [ esp + 0x48 ]
mov ecx 0x300f
bt ecx edx
jae r-xdata
cmp [ esp + 0x1c ] 0x5
lea esi [ ebx - 0xb ]
jne r-xdata
test edx edx
je r-xdata
movsx ebx [ ebx + r--data ]
mov ecx [ esp + 0xc ]
mov ebx [ ecx * 4 + r--data ]
cmp [ esp + 0x1c ] 0x5
jne r-xdata
cmp esi 0x17
ja r-xdata
movsx eax [ ebx + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
test edx edx
setne al
cmp [ esp + 0x1c ] 0x4
sete ah
cmp esi 0xd
ja r-xdata
cmp edi 0x5
ja r-xdata
mov ecx [ esp + 0xc ]
mov esi [ esp + 0x4c ]
mov edx ecx
xor ecx ecx
add edx 0xffffff8f
cmp edx 0xb
cmovae eax ecx
cmp [ esp + 0xb8 ] cl
lea edx [ eax + 0xc ]
cmovns edx eax
cmp [ esi ] cl
lea eax [ edx + 0x18 ]
cmovns eax edx
movsx eax [ eax + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
call sub_432778
add esp 0xc
cmp [ esp + 0x1c ] 0x1
jne r-xdata
or ah al
je r-xdata
cmp ebx 0x3
jne r-xdata
cmp [ esp + 0x1c ] 0x2
jne r-xdata
cmp esi 0x4
ja r-xdata
xor eax eax
cmp ebx 0xf
mov esi r--data
setg al
cmp ebx 0x15
lea ecx [ eax + 0x1 ]
cmovle ecx eax
neg ecx
test edx edx
mov edx r--data
lea eax [ ebx + ecx + 0x45 ]
cmove edx esi
push eax
push edx
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
movsx eax [ edi + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x7f
jmp r-xdata
test ebx ebx
je r-xdata
cmp esi 0x3
ja r-xdata
add ebx 0x36
push ebx
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
mov eax [ esp + 0xc ]
lea edx [ eax - 0x25 ]
cmp edx 0x3
ja r-xdata
cmp ebx 0x4
je r-xdata
add ebx 0x45
test edx edx
mov eax r--data
mov ecx r--data
cmovne ecx eax
push ebx
push ecx
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
cmp [ esp + 0xc ] 0xc
jne r-xdata
mov eax 0x41
jmp [ edx * 4 + jump_table_41c4f4 ]
push 0x40
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp ebx 0x1
jne r-xdata
cmp [ esp + 0x44 ] 0x0
mov cl 0xd
jne r-xdata
mov eax 0x47
jmp sub_488b9a
mov eax 0x44
jmp sub_488b9a
push ebx
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
cmp ebx 0x1
mov eax r--data
mov ecx r--data
cmove ecx eax
push ecx
mov edi [ esp + 0x18 ]
push edi
call sub_432778
add esp 0x8
jmp r-xdata
xor eax eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov esi eax
add esi edi
mov esi [ esp + 0xc ]
mov [ rw-data ] eax
mov ecx [ esp + 0xc ]
lea ecx [ ecx - 0x60 ]
cmp ecx 0x9
ja r-xdata
mov eax [ rw-data ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
sub_485f17
mov eax edx
and eax 0xfffffff0
cmp eax 0x13f
jle r-xdata
cmp eax 0x3f
jle r-xdata
cmp eax 0x17f
jg r-xdata
cmp eax 0x10
je r-xdata
cmp eax 0x5f
jg r-xdata
cmp eax 0xf08f
jg r-xdata
cmp eax 0x15f
jg r-xdata
push edi
mov esi edx
call sub_4843e3
jmp r-xdata
cmp eax 0x20
je r-xdata
cmp eax 0x60
je r-xdata
cmp eax 0x40
je r-xdata
cmp eax 0xf090
je r-xdata
cmp eax 0x180
je r-xdata
cmp eax 0x160
je r-xdata
cmp eax 0x140
je r-xdata
mov edx esi
add esp 0x4
jmp r-xdata
cmp [ rw-data ] 0x0
mov eax r--data
mov ebx r--data
cmove ebx eax
cmp edx 0x160
je r-xdata
cmp eax 0x30
je r-xdata
push [ rw-data ]
mov esi edx
call sub_474f14
jmp r-xdata
cmp eax 0x70
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax 0x50
jne r-xdata
xor ecx ecx
mov esi edx
inc ecx
call sub_48d2b0
jmp sub_487a7d
cmp eax 0xf100
jne r-xdata
mov esi edx
call sub_48d2f6
jmp sub_487a7d
cmp eax 0x190
jne r-xdata
cmp eax 0x170
jne r-xdata
push 0x0
push edi
mov esi edx
call sub_48e83d
cmp eax 0x150
jne r-xdata
push ebx
push edx
push ebp
push edi
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x8cc ]
mov ecx eax
lea eax [ ecx - 0x1000 ]
sar eax 0x1f
shr eax 0x1c
lea eax [ ecx + eax - 0x1000 ]
sar eax 0x4
lea ecx [ eax + 0x1 ]
cmp ecx [ rw-data ]
jae r-xdata
cmp edx 0x30
jne r-xdata
jmp r-xdata
lea eax [ edx - 0x1000 ]
cmp eax 0x3fff
ja r-xdata
push 0x1
push [ rw-data ]
mov esi edx
call sub_474087
mov edx esi
add esp 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor esi esi
push r--data
push esi
call sub_4842ab
add esp 0x8
push esi
push [ rw-data ]
call sub_474087
add esp 0x8
call sub_4897f7
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
xor ecx ecx
mov esi edx
inc ecx
call sub_48d2b0
mov edx esi
test ebx ebx
jne r-xdata
lea eax [ esp + 0xa8 ]
xor ecx ecx
push eax
push ecx
push [ rw-data ]
push sub_48cbad
push ecx
push ecx
mov esi edx
call [ CreateThread@IAT ]
jmp sub_487a7d
push [ rw-data ]
mov esi edx
call sub_475f3c
jmp r-xdata
push edi
mov esi edx
call sub_48468d
jmp r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
mov ebx [ esp + 0x8cc ]
jmp r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x20 ] 0x0
push [ ecx + eax * 4 + 0x4 ]
push ebx
push r--data
jmp r-xdata
cmp [ ebx ] 0x0
mov eax r--data
mov ecx r--data
mov [ esp + 0x20 ] 0x0
cmovne ecx eax
push ebx
push ecx
push r--data
push [ rw-data ]
call sub_432334
add esp 0x4
mov edi eax
lea eax [ esp + 0xa8 ]
xor esi esi
mov ecx 0x4
mov [ eax ] 0xc
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] 0x1
push esi
push edi
push esi
push ecx
push eax
push 0xffffffff
call [ CreateFileMappingA@IAT ]
mov ecx eax
inc eax
cmp eax 0x2
jb r-xdata
lea eax [ edx - 0x400 ]
cmp eax 0x400
ja r-xdata
push edx
push 0x160
push 0x112
push edi
mov esi edx
call [ SendMessageA@IAT ]
mov edx esi
push eax
call sub_43c0cc
jmp r-xdata
mov edx [ esp + 0x8c8 ]
jmp r-xdata
mov [ rw-data ] 0x1
push [ rw-data ]
push 0x5f
push [ rw-data ]
call sub_43203b
add esp 0xc
push [ rw-data ]
call sub_43191d
add esp 0x4
mov ecx [ rw-data ]
mov [ esp + 0x20 ] eax
test ecx ecx
je r-xdata
push 0x0
push 0x20
push 0x102
push edi
call [ PostMessageA@IAT ]
jmp sub_487a7d
call sub_43f758
add esp 0xc
mov ebx eax
mov [ esp + 0x10 ] 0x0
push ebx
call sub_43f9d4
add esp 0x4
mov edi [ esp + 0x8c0 ]
mov edx [ esp + 0x8c8 ]
push eax
call [ CloseHandle@IAT ]
mov [ esp + 0x20 ] ecx
push edi
push ecx
push ebx
push r--data
call sub_43f758
add esp 0x10
mov ebx eax
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
jmp r-xdata
push edi
push esi
push esi
push 0x2
push ecx
mov esi ecx
call [ MapViewOfFile@IAT ]
mov ecx esi
test eax eax
je r-xdata
shr eax 0x4
cmp eax [ rw-data ]
jge r-xdata
xor eax eax
push [ rw-data ]
call [ ecx + 0x3c ]
add esp 0x4
jmp r-xdata
lea eax [ esp + 0xa8 ]
xor esi esi
push 0x7ff
push eax
push esi
call [ GetModuleFileNameA@IAT ]
lea eax [ esp + 0x64 ]
lea edi [ esp + 0x54 ]
mov [ eax ] 0x44
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x2c ] esi
mov [ eax + 0x32 ] 0x0
mov [ eax + 0x34 ] esi
push edi
push eax
push esi
push esi
push 0x20
push [ esp + 0x24 ]
push esi
push esi
push ebx
lea eax [ esp + 0xcc ]
push eax
call [ CreateProcessA@IAT ]
mov esi [ CloseHandle@IAT ]
push [ edi ]
call esi
push [ edi + 0x4 ]
call esi
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push eax
push [ rw-data ]
mov [ esp + 0x18 ] eax
call sub_432406
add esp 0x8
push [ esp + 0x10 ]
call [ UnmapViewOfFile@IAT ]
mov ecx esi
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push [ esp + 0x20 ]
jmp r-xdata
push 0x64
push [ rw-data ]
call sub_43194f
add esp 0x8
mov [ rw-data ] eax
push 0x90
push [ rw-data ]
call sub_43194f
add esp 0x8
mov [ rw-data ] eax
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi [ EnableMenuItem@IAT ]
xor ebx ebx
cmp eax 0x1
mov esi 0xfffffff8
mov [ esp + 0x10 ] eax
sete bl
push eax
push edi
call sub_484166
add esp 0x8
test eax eax
mov [ rw-data ] 0x0
je r-xdata
mov esi edx
mov edx [ rw-data ]
push [ edx + eax * 8 + 0x4 ]
push [ rw-data ]
call [ ecx + 0x18 ]
jmp r-xdata
call sub_431816
add esp 0x4
mov ebx [ esp + 0x8cc ]
jmp r-xdata
push ebx
push 0x180
push [ esi + rw-data ]
call edi
add esi 0x4
jne r-xdata
mov esi [ esp + 0x8c0 ]
push esi
call [ IsZoomed@IAT ]
cmp [ esp + 0x10 ] 0x1
jne r-xdata
mov edx esi
add esp 0x8
jmp r-xdata
push [ rw-data ]
push [ rw-data ]
call sub_43d6b9
add esp 0x8
push [ rw-data ]
call sub_43f9d4
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ rw-data ]
push eax
call sub_43c03c
add esp 0x8
push [ rw-data ]
call sub_43c0cc
add esp 0x4
push 0x9
push esi
call [ ShowWindow@IAT ]
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_489118
call sub_489a1e
push [ rw-data ]
push [ rw-data ]
call sub_4747a6
add esp 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov esi 0x74
push esi
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi eax
push esi
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
cmp edi eax
jne r-xdata
push [ rw-data ]
push [ rw-data ]
call [ eax + 0x8 ]
add esp 0x8
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi eax
push 0x73
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebx eax
push 0x74
push [ rw-data ]
call sub_43194f
add esp 0x8
push edi
push ebx
push eax
push [ rw-data ]
call sub_4752f4
add esp 0x10
mov esi 0x73
push esi
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi eax
push esi
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
cmp edi eax
jne r-xdata
mov [ esp + 0x34 ] esi
push 0x7e
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx ebx
and ebx 0xfffffdff
or ecx 0x200
test eax eax
cmovne ebx ecx
call sub_48bf22
xor esi esi
inc esi
cmp eax esi
mov eax 0x6d
sbb eax 0xffffffff
push eax
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edx [ esp + 0x1c ]
mov [ esp + 0xc ] esi
mov ecx edx
mov edi edx
or ecx 0x200000
and edi 0xffdfffff
test eax eax
cmovne edi ecx
mov ecx [ esp + 0x10 ]
cmp ecx esi
je r-xdata
push 0x56
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebx esi
test eax eax
je r-xdata
mov esi 0x60
push esi
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi eax
push esi
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
cmp [ esp + 0x10 ] 0x2
je r-xdata
and edi 0xfffbffff
call sub_48bf22
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
test eax eax
je r-xdata
and ebx 0xfffffff7
xor eax eax
push 0x3
push eax
push eax
push eax
push eax
push 0xfffffffe
push [ esp + 0x8d8 ]
or ebx 0x8
xor eax eax
push 0x3
push eax
push eax
push eax
push eax
push 0xffffffff
push [ esp + 0x8d8 ]
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi edx
je r-xdata
cmp edi edx
je r-xdata
or edi 0x40000
jmp r-xdata
call [ SetWindowPos@IAT ]
mov esi [ esp + 0x10 ]
cmp esi 0x3
jne r-xdata
cmp ebx esi
mov esi [ esp + 0x8c0 ]
je r-xdata
push edi
push 0xfffffff0
push [ esp + 0x8c8 ]
call [ SetWindowLongA@IAT ]
mov esi [ esp + 0x8c0 ]
cmp ecx 0x1
jne r-xdata
mov esi [ esp + 0x34 ]
mov eax edi
or edi 0x10000
and eax 0xfffeffff
cmp ecx 0x1
cmove edi eax
cmp ebx esi
jne r-xdata
cmp esi 0x1
jne r-xdata
push [ esp + 0x8c0 ]
call [ IsZoomed@IAT ]
cmp esi 0x1
je r-xdata
xor eax eax
push 0x137
push eax
push eax
push eax
push eax
push eax
push esi
call [ SetWindowPos@IAT ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0xc ] 0x2
push ebx
push 0xffffffec
push esi
call [ SetWindowLongA@IAT ]
push 0x5f
push [ rw-data ]
call sub_431a8c
mov [ esp + 0x4 ] eax
call sub_48bdc6
add esp 0x8
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push esi
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffff0
mov eax [ esp + 0x8c4 ]
mov ebx eax
push ebx
call edi
mov [ esp + 0x1c ] eax
push 0xffffffec
push ebx
call edi
mov esi eax
mov edi 0x56
push edi
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebx eax
push edi
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
cmp ebx eax
mov ebx esi
je r-xdata
test eax eax
je r-xdata
mov esi 0x75
push esi
push [ rw-data ]
call sub_431e49
add esp 0x8
mov edi eax
push esi
push [ esp + 0x24 ]
call sub_431e49
add esp 0x8
mov ebx eax
push [ ebx ]
push [ edi ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x72
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov eax rw-data
mov ecx rw-data
cmovne ecx eax
push [ ecx ]
push esi
call [ SetWindowTextA@IAT ]
push esi
call sub_483660
add esp 0x4
mov [ esp + 0xc ] 0x2
jmp r-xdata
mov [ esp + 0xc ] 0x2
mov eax 0x91
push eax
push [ esp + 0x24 ]
call sub_431a8c
add esp 0x8
mov esi eax
mov eax 0x91
push eax
push [ rw-data ]
call sub_431a8c
add esp 0x8
push esi
push eax
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ edi + 0xc ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov edi 0x76
push edi
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
push edi
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
cmp esi eax
jne r-xdata
mov edi 0x90
push edi
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
push edi
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
cmp esi eax
jne r-xdata
mov esi 0x88
push esi
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi eax
push esi
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
mov ecx [ esp + 0x10 ]
or ecx 0x2
cmp ecx 0x3
je r-xdata
cmp edi eax
jne r-xdata
push 0x6f
push [ esp + 0x24 ]
call sub_43194f
add esp 0x8
cmp [ esp + 0x10 ] eax
je r-xdata
push 0x1
push 0x0
mov edi [ esp + 0x8c8 ]
push edi
call [ InvalidateRect@IAT ]
mov ecx [ esp + 0xc ]
call sub_48a155
push [ esp + 0x20 ]
sub_485f60
mov eax edx
mov [ esp + 0x64 ] dx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
mov eax edx
and eax 0xfc00
cmp eax 0xdc00
jne r-xdata
mov [ rw-data ] dx
jmp r-xdata
and edx 0xf800
cmp edx 0xd800
je r-xdata
movzx eax [ rw-data ]
mov ecx eax
and ecx 0xfc00
movzx ecx cx
cmp ecx 0xd800
jne r-xdata
xor ebx ebx
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
push [ rw-data ]
call sub_47401d
add esp 0x4
xor eax eax
lea ecx [ esp + 0x64 ]
inc eax
push eax
push eax
push ecx
push [ rw-data ]
lea esi [ esp + 0xa8 ]
mov [ esi ] ax
mov [ esi + 0x2 ] dx
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax 0x2
push 0x1
push eax
push esi
push [ rw-data ]
jmp r-xdata
call sub_43ca71
add esp 0x10
jmp r-xdata
sub_4860bb
test dl 0x8
mov [ esp + 0x10 ] edx
jne r-xdata
xor ecx ecx
inc ecx
call sub_48d2b0
lea esi [ esp + 0xa8 ]
push esi
call [ GetCursorPos@IAT ]
xor eax eax
push eax
push edi
push eax
push [ esi + 0x4 ]
push [ esi ]
push 0x2
push [ rw-data ]
call [ TrackPopupMenu@IAT ]
jmp r-xdata
push 0x8a
push [ rw-data ]
call sub_43194f
add esp 0x8
cmp eax 0x2
jne r-xdata
mov edx [ esp + 0x8c8 ]
jmp r-xdata
or [ esp + 0x10 ] 0x2
xor esi esi
mov [ esp + 0x20 ] 0x3
jmp r-xdata
push ebx
push edx
push ebp
push edi
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
inc esi
jmp sub_486165
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_486165
xor ecx ecx
inc ecx
call sub_48d2b0
lea ebx [ esp + 0x64 ]
push ebx
call [ GetCursorPos@IAT ]
push 0x0
push [ ebx + 0x4 ]
push [ ebx ]
call sub_484c50
mov bl 0x1
test eax eax
je r-xdata
call sub_48bf22
test bl bl
jne r-xdata
lea ebp [ esp + 0xa8 ]
mov [ ebp ] 0x28
push ebp
push eax
call sub_484ca9
mov eax [ ebp + 0x4 ]
cmp eax [ esp + 0x64 ]
jne r-xdata
call sub_48d341
mov ebx [ esp + 0x8cc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov edi [ rw-data ]
mov [ esp + 0xc ] esi
mov ecx ebx
mov ebp eax
mov esi eax
mov [ esp + 0x10 ] eax
sar ecx 0x10
and ebp 0x8
and esi 0x4
lea eax [ ecx + 0x1 ]
sub eax edi
test ecx ecx
cmovns eax ecx
mov ecx ebx
sub eax [ rw-data ]
shl ecx 0x10
cdq
idiv edi
mov edi [ rw-data ]
movsx edx bx
mov [ esp + 0x34 ] eax
lea eax [ edx + 0x1 ]
sub eax edi
test ecx ecx
cmovns eax edx
sub eax [ rw-data ]
cdq
idiv edi
cmp [ esp + 0xc ] 0x0
mov ebx eax
je r-xdata
cmp [ esp + 0x20 ] 0x1
jne r-xdata
mov eax [ esp + 0xb0 ]
cmp eax [ esp + 0x68 ]
setne bl
mov edi [ esp + 0x20 ]
mov ecx edi
call sub_48d394
push [ esp + 0x1c ]
push ebp
push esi
push [ esp + 0x40 ]
push ebx
push 0x5
push eax
push edi
push [ rw-data ]
call sub_4767a8
add esp 0x24
xor ebx ebx
test [ esp + 0x10 ] 0x13
jne r-xdata
mov [ esp + 0x10 ] ebp
call [ GetMessageTime@IAT ]
cmp [ rw-data ] 0x0
mov edi eax
mov ebp esi
je r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
call [ ReleaseCapture@IAT ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x8c0 ]
mov [ esp + 0x38 ] ebx
mov [ esp + 0xc ] edi
cmp [ rw-data ] eax
jne r-xdata
test ebp ebp
je r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
xor ebx ebx
inc ebx
mov [ rw-data ] eax
mov eax edi
sub eax [ rw-data ]
cmp eax [ rw-data ]
jge r-xdata
mov esi [ esp + 0x20 ]
mov [ rw-data ] 0x0
mov ecx esi
call sub_48d394
push [ esp + 0x1c ]
push [ esp + 0x14 ]
push ebp
push [ esp + 0x40 ]
push ebx
push 0x1
push eax
push esi
push [ rw-data ]
call sub_4767a8
add esp 0x24
mov esi [ esp + 0x8c0 ]
jmp r-xdata
push 0x8e
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x68 ]
movzx eax [ esp + 0x64 ]
shl ecx 0x10
or ecx eax
push ecx
push 0xf090
push 0x112
push edi
call [ SendMessageA@IAT ]
jmp r-xdata
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push esi
call [ SetCapture@IAT ]
jmp r-xdata
mov ebx 0x2
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov [ rw-data ] ebx
xor ecx ecx
cmp eax 0x3
sete cl
mov [ rw-data ] ecx
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov [ rw-data ] edi
xor ebx ebx
inc ebx
jmp r-xdata
mov edi [ esp + 0x20 ]
mov ecx edi
call sub_48d394
push [ esp + 0x1c ]
push [ esp + 0x14 ]
push ebp
push [ esp + 0x40 ]
push [ esp + 0x48 ]
push ebx
push eax
push edi
push [ rw-data ]
call sub_4767a8
add esp 0x24
mov edi [ esp + 0xc ]
sub_4862f7
xor ecx ecx
mov esi edx
inc ecx
call sub_48d2b0
push 0x0
push [ rw-data ]
call sub_47b30a
add esp 0x8
call [ DestroyCaret@IAT ]
xor eax eax
dec eax
mov [ rw-data ] eax
mov [ rw-data ] eax
push [ rw-data ]
jmp r-xdata
call sub_4733cc
jmp r-xdata
mov edx esi
add esp 0x4
jmp r-xdata
push ebx
push edx
push ebp
push edi
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_48632f
push edi
call [ HideCaret@IAT ]
lea eax [ esp + 0xa8 ]
push eax
push edi
call [ BeginPaint@IAT ]
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
xor eax eax
xor ecx ecx
mov ebx [ rw-data ]
mov ebp [ rw-data ]
mov [ esp + 0x10 ] edx
cmp [ edx + 0x109c ] eax
mov eax [ esp + 0xbc ]
mov [ esp + 0x20 ] esi
sete cl
dec eax
sub eax ebx
cdq
idiv ebp
mov esi [ rw-data ]
mov edi [ rw-data ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0xb8 ]
dec eax
sub eax esi
cdq
idiv edi
mov [ esp + 0x1c ] eax
mov eax [ esp + 0xb4 ]
sub eax ebx
mov ebx [ esp + 0xb0 ]
cdq
idiv ebp
mov ebp eax
sub ebx esi
mov eax ebx
xor ebx ebx
cdq
idiv edi
push ecx
push [ esp + 0x10 ]
push [ esp + 0x24 ]
push ebp
mov ebp [ esp + 0x30 ]
push eax
push ebp
push [ esp + 0x28 ]
call sub_475cf8
add esp 0x1c
cmp [ esp + 0xac ] ebx
jne r-xdata
push 0x1
push eax
push esi
call [ SelectPalette@IAT ]
push esi
call [ RealizePalette@IAT ]
push [ rw-data ]
call [ CreateSolidBrush@IAT ]
mov esi [ SelectObject@IAT ]
mov [ esp + 0x10 ] eax
push eax
push ebp
call esi
mov edi eax
push [ rw-data ]
push ebx
push ebx
call [ CreatePen@IAT ]
mov ebx eax
push ebx
push ebp
call esi
mov ebp eax
push [ esp + 0xbc ]
push [ esp + 0xbc ]
push [ esp + 0xbc ]
push [ esp + 0xbc ]
push [ esp + 0x30 ]
call [ IntersectClipRect@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov esi [ rw-data ]
mov edx [ ecx + 0x128 ]
mov ecx [ ecx + 0x12c ]
imul edx [ rw-data ]
imul ecx [ rw-data ]
add edx eax
add ecx esi
push edx
push ecx
push eax
push esi
push [ esp + 0x30 ]
call [ ExcludeClipRect@IAT ]
push [ esp + 0xbc ]
push [ esp + 0xbc ]
push [ esp + 0xbc ]
push [ esp + 0xbc ]
push [ esp + 0x30 ]
call [ Rectangle@IAT ]
push edi
push [ esp + 0x24 ]
mov esi [ SelectObject@IAT ]
call esi
mov edi [ DeleteObject@IAT ]
push [ esp + 0x10 ]
call edi
push ebp
mov ebp [ esp + 0x24 ]
push ebp
call esi
push ebx
call edi
mov ecx [ rw-data ]
cmp [ esp + 0xb0 ] ecx
jl r-xdata
xor ebx ebx
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
mov eax [ rw-data ]
cmp [ esp + 0xb4 ] eax
jl r-xdata
mov edx [ rw-data ]
mov esi [ edx + 0x12c ]
imul esi [ rw-data ]
add esi ecx
cmp [ esp + 0xb8 ] esi
jge r-xdata
mov ecx [ edx + 0x128 ]
imul ecx [ rw-data ]
add ecx eax
cmp [ esp + 0xbc ] ecx
jl r-xdata
mov esi [ GetStockObject@IAT ]
push 0xd
call esi
mov edi [ SelectObject@IAT ]
push eax
push ebp
call edi
push 0x6
call esi
push eax
push ebp
call edi
lea eax [ esp + 0xa8 ]
push eax
mov eax [ esp + 0x8c4 ]
mov esi eax
push esi
call [ EndPaint@IAT ]
push esi
call [ ShowCaret@IAT ]
jmp r-xdata
sub_48656f
push 0x1
push [ rw-data ]
mov esi edx
call sub_47b30a
add esp 0x8
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
push edi
call [ CreateCaret@IAT ]
push edi
call [ ShowCaret@IAT ]
xor ecx ecx
call sub_48ce6e
mov [ rw-data ] 0x0
push [ rw-data ]
call sub_4733cc
jmp r-xdata
mov edx esi
add esp 0x4
jmp r-xdata
push ebx
push edx
push ebp
push edi
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_4865c2
push 0x6f
push [ rw-data ]
call sub_43194f
mov edx [ esp + 0x8d0 ]
add esp 0x8
mov esi eax
cmp edx 0x1
jne r-xdata
mov eax edx
mov ecx 0x2
mov ebp ebx
or eax 0x2
cmp eax ecx
jne r-xdata
mov ebp ebx
push 0x72
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov eax rw-data
mov ecx rw-data
cmovne ecx eax
push [ ecx ]
push edi
call [ SetWindowTextA@IAT ]
xor ecx ecx
test edx edx
je r-xdata
push [ rw-data ]
push edi
call [ SetWindowTextA@IAT ]
mov edx [ esp + 0x8c8 ]
mov edi ecx
push 0x7f
push [ rw-data ]
call sub_43194f
mov ecx [ esp + 0x8d0 ]
add esp 0x8
mov bl [ rw-data ]
movzx edx bp
shr ebp 0x10
cmp ecx 0x2
jne r-xdata
xor ecx ecx
dec ecx
jmp r-xdata
mov [ rw-data ] 0x0
push 0xfffffff0
push [ rw-data ]
call [ GetWindowLongA@IAT ]
mov edi eax
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx edi
mov ebx edi
and ecx 0xff3bffff
or ebx 0xc40000
or ecx 0xc00000
cmp eax 0x1
cmove ebx ecx
push 0x6d
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx ebx
and ebx 0xffdfffff
or ecx 0x200000
test eax eax
cmovne ebx ecx
cmp ebx edi
je r-xdata
xor ecx ecx
jmp r-xdata
mov [ esp + 0x10 ] edx
mov edx edi
mov [ esp + 0x20 ] eax
and dl bl
cmp dl 0x1
jne r-xdata
test bl 0x1
jne r-xdata
call sub_48a155
mov ebx [ CheckMenuItem@IAT ]
mov edi 0xfffffff8
push ebx
push 0xfffffff0
push [ rw-data ]
call [ SetWindowLongA@IAT ]
xor eax eax
push 0x27
push eax
push eax
push eax
push eax
push eax
push [ rw-data ]
call [ SetWindowPos@IAT ]
cmp edx 0x2
jne r-xdata
cmp ecx 0x1
je r-xdata
cmp esi 0x2
mov [ rw-data ] 0x0
je r-xdata
test esi esi
mov [ rw-data ] 0x1
jne r-xdata
xor ebx ebx
push 0x0
push 0x180
push [ edi + rw-data ]
call ebx
add edi 0x4
jne r-xdata
mov al [ rw-data ]
mov edx [ esp + 0x8c8 ]
xor ebx ebx
mov cl 0x1
test al al
jne r-xdata
cmp esi 0x1
mov [ rw-data ] 0x1
jne r-xdata
test [ rw-data ] 0x1
je r-xdata
call sub_48a997
jmp r-xdata
test esi esi
je r-xdata
xor ecx ecx
test esi esi
jne r-xdata
mov eax edx
xor edx edx
idiv [ rw-data ]
xor edi edi
inc edi
mov esi eax
mov eax ebp
test esi esi
cmovle esi edi
xor edx edx
idiv [ rw-data ]
test eax eax
cmovg edi eax
cmp [ rw-data ] 0x1
jne r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
xor ebx ebx
mov edi ecx
mov [ rw-data ] bl
mov [ rw-data ] bl
call sub_48d406
mov al [ rw-data ]
mov ecx edi
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
add ecx ecx
sub eax ecx
cdq
idiv [ rw-data ]
xor ebx ebx
inc ebx
mov esi eax
test esi esi
cmovle esi ebx
sub ebp ecx
mov cl 0x1
mov eax ebp
cdq
idiv [ rw-data ]
test eax eax
cmovg ebx eax
cmp [ rw-data ] cl
jne r-xdata
cmp esi 0x3
jne r-xdata
mov ecx 0x2
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
add ecx ecx
sub eax ecx
cdq
idiv [ rw-data ]
xor ebx ebx
inc ebx
mov esi eax
test esi esi
cmovle esi ebx
sub ebp ecx
mov eax ebp
cdq
idiv [ rw-data ]
test eax eax
cmovg ebx eax
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
push eax
push esi
push ebx
push [ rw-data ]
call sub_4752f4
add esp 0x10
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
push eax
push esi
push edi
push [ rw-data ]
call sub_4752f4
add esp 0x10
mov [ rw-data ] 0x1
push edi
push 0x74
push [ rw-data ]
call sub_431ee3
add esp 0xc
push esi
push 0x73
push [ rw-data ]
call sub_431ee3
add esp 0xc
jmp r-xdata
jmp r-xdata
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
push eax
push esi
push ebx
push [ rw-data ]
call sub_4752f4
add esp 0x10
jmp r-xdata
mov [ rw-data ] 0x1
push ebx
push 0x74
push [ rw-data ]
call sub_431ee3
add esp 0xc
push esi
push 0x73
push [ rw-data ]
call sub_431ee3
add esp 0xc
jmp r-xdata
call sub_48d341
test eax eax
jne r-xdata
sub_486634
xor ecx ecx
inc ecx
call sub_48d2b0
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov cl [ rw-data ]
mov esi eax
test cl cl
jne r-xdata
push edi
call [ DestroyWindow@IAT ]
push 0x5
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
call sub_43f9d4
add esp 0x4
jmp r-xdata
push 0x31
push esi
push r--data
push edi
call [ MessageBoxA@IAT ]
cmp eax 0x1
jne r-xdata
xor ebx ebx
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
push esi
jmp r-xdata
sub_486898
lea eax [ esp + 0xa8 ]
mov [ eax ] 0x1c
mov [ eax + 0x4 ] 0x10
push eax
push 0x1
push edi
call [ GetScrollInfo@IAT ]
test eax eax
je r-xdata
mov eax esi
shr eax 0x10
mov [ esp + 0xc0 ] eax
mov eax [ esp + 0xc0 ]
jmp r-xdata
push eax
push 0x1
push [ rw-data ]
call sub_475e6c
add esp 0xc
sub_486b2f
push [ rw-data ]
mov edi edx
call sub_43f9d4
add esp 0x4
mov eax ebx
xor ebx ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
push eax
call [ GlobalLock@IAT ]
mov esi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
push esi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
push ecx
push ecx
push eax
push esi
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov edi eax
push 0x2
push edi
call sub_43f807
add esp 0x8
mov ebp eax
mov [ rw-data ] ebp
push esi
call sub_4a7f30
add esp 0x4
inc eax
push edi
push ebp
push eax
push esi
mov eax 0x0
push eax
push eax
call [ MultiByteToWideChar@IAT ]
lea eax [ edi - 0x1 ]
mov [ rw-data ] eax
lea eax [ edi + edi - 0x2 ]
add eax [ rw-data ]
lea eax [ esi - 0x2 ]
cmp [ eax + 0x2 ] 0x0
lea eax [ eax + 0x2 ]
jne r-xdata
sub eax esi
sar eax 0x1
mov [ rw-data ] eax
inc eax
push 0x2
push eax
call sub_43f807
add esp 0x8
mov ebp [ rw-data ]
mov edi eax
mov [ rw-data ] edi
lea eax [ ebp + ebp ]
push eax
push esi
push edi
call sub_49a1f0
add esp 0xc
lea eax [ edi + ebp * 2 ]
jmp r-xdata
mov [ eax ] 0x0
push [ rw-data ]
call sub_4764ce
add esp 0x4
jmp r-xdata
sub_486baf
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
push [ ebx + 0x4 ]
call [ ebx ]
add esp 0xc
push ebx
call sub_43f9d4
add esp 0x4
jmp r-xdata
xor ebx ebx
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_487a7d
mov edx esi
push ebx
push edx
push ebp
push edi
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_488571
mov esi [ esp + 0x14 ]
mov [ esi ] al
inc esi
jmp r-xdata
lea eax [ esp + 0x64 ]
sub esi eax
je r-xdata
xor ebx ebx
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
cmp esi 0xffffffff
je r-xdata
push ebx
push ecx
push ebp
push [ esp + 0x8cc ]
jmp r-xdata
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
xor ecx ecx
call sub_48d2b0
jmp r-xdata
lea ecx [ esp + 0x64 ]
push 0x1
push esi
push ecx
push eax
call sub_43c15b
add esp 0x10
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_4886bc
mov edx 0x6a
jmp r-xdata
cmp [ esp + 0x1c ] 0x2
je r-xdata
mov eax [ esp + 0x3c ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
test esi esi
mov edx esi
je r-xdata
mov eax r--data
mov eax edx
mov ecx r--data
and eax 0xfffffffc
cmp eax 0x50
mov eax r--data
cmove eax ecx
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
xor ebx ebx
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
cmp esi 0xffffffff
je r-xdata
push edx
push eax
mov edi [ esp + 0x1c ]
push edi
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x8
jne r-xdata
push ebx
push ecx
push ebp
push [ esp + 0x8cc ]
jmp r-xdata
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x8
jne r-xdata
push 0x3f
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov cl 0x7f
jne r-xdata
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
xor ecx ecx
call sub_48d2b0
jmp r-xdata
lea ecx [ esp + 0x64 ]
push 0x1
push esi
push ecx
push eax
call sub_43c15b
add esp 0x10
cmp [ esp + 0x18 ] 0x2
mov edx ebx
sete cl
and cl dl
cmp cl 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x9
jne r-xdata
push 0x3f
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov cl 0x8
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi 0xfffffffe
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
jmp r-xdata
mov cl 0x8
jmp r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
cmp [ esp + 0x18 ] 0x3
sete cl
and cl bl
cmp cl 0x1
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x0
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x5b1b
mov [ esi + 0x2 ] 0x5a
add esi 0x3
jmp r-xdata
mov cl 0x7f
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0xa0
jmp r-xdata
inc esi
jmp r-xdata
lea eax [ esp + 0x64 ]
sub esi eax
je r-xdata
mov cl 0x1a
test al al
jne r-xdata
cmp [ esp + 0xc ] 0x3
jne r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax 0x2
cmp [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0xc ]
lea eax [ eax - 0x32 ]
cmp eax 0x6
ja r-xdata
push 0x1
push [ rw-data ]
call [ eax + 0x18 ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov eax [ esp + 0xc ]
or eax 0x2
cmp eax 0xbf
jne r-xdata
mov al [ eax + r--data ]
jmp sub_488571
add esp 0x8
jmp r-xdata
cmp [ esp + 0x18 ] 0x3
jne r-xdata
cmp [ esp + 0xc ] 0xdf
je r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1f
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
sete al
and al [ esp + 0x44 ]
cmp al 0x1
jne r-xdata
cmp [ esp + 0xc ] 0xde
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1c
jmp r-xdata
cmp [ esp + 0xc ] 0xdc
jne r-xdata
mov eax [ esp + 0xc ]
lea eax [ eax - 0x70 ]
cmp eax 0x13
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x150 ] 0x0
je r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1e
jmp r-xdata
xor ebx ebx
jmp r-xdata
jmp [ eax * 4 + jump_table_41c4a4 ]
mov esi [ esp + 0x14 ]
mov [ esi ] 0xa0d
add esi 0x2
jmp r-xdata
test [ esp + 0x18 ] 0x2
jne r-xdata
cmp [ esp + 0xb8 ] 0x0
mov ecx 0x17
mov ebx 0xb
jmp r-xdata
cmp [ esp + 0x1c ] 0x3
jne r-xdata
cmp [ esp + 0x48 ] 0xd
ja r-xdata
cmovs ebx ecx
mov ecx [ rw-data ]
lea edi [ ebx - 0x1 ]
cmp edi 0x5
mov edx [ ecx + 0x148 ]
ja r-xdata
cmp ebx 0x6
jg r-xdata
mov edx [ esp + 0x48 ]
mov ecx 0x300f
bt ecx edx
jae r-xdata
cmp [ esp + 0x1c ] 0x5
lea esi [ ebx - 0xb ]
jne r-xdata
test edx edx
je r-xdata
movsx ebx [ ebx + r--data ]
mov ecx [ esp + 0xc ]
mov ebx [ ecx * 4 + r--data ]
cmp [ esp + 0x1c ] 0x5
jne r-xdata
cmp esi 0x17
ja r-xdata
movsx eax [ ebx + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
test edx edx
setne al
cmp [ esp + 0x1c ] 0x4
sete ah
cmp esi 0xd
ja r-xdata
cmp edi 0x5
ja r-xdata
mov ecx [ esp + 0xc ]
mov esi [ esp + 0x4c ]
mov edx ecx
xor ecx ecx
add edx 0xffffff8f
cmp edx 0xb
cmovae eax ecx
cmp [ esp + 0xb8 ] cl
lea edx [ eax + 0xc ]
cmovns edx eax
cmp [ esi ] cl
lea eax [ edx + 0x18 ]
cmovns eax edx
movsx eax [ eax + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
call sub_432778
add esp 0xc
cmp [ esp + 0x1c ] 0x1
jne r-xdata
or ah al
je r-xdata
cmp ebx 0x3
jne r-xdata
cmp [ esp + 0x1c ] 0x2
jne r-xdata
cmp esi 0x4
ja r-xdata
xor eax eax
cmp ebx 0xf
mov esi r--data
setg al
cmp ebx 0x15
lea ecx [ eax + 0x1 ]
cmovle ecx eax
neg ecx
test edx edx
mov edx r--data
lea eax [ ebx + ecx + 0x45 ]
cmove edx esi
push eax
push edx
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
movsx eax [ edi + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x7f
jmp r-xdata
test ebx ebx
je r-xdata
cmp esi 0x3
ja r-xdata
add ebx 0x36
push ebx
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
mov eax [ esp + 0xc ]
lea edx [ eax - 0x25 ]
cmp edx 0x3
ja r-xdata
cmp ebx 0x4
je r-xdata
add ebx 0x45
test edx edx
mov eax r--data
mov ecx r--data
cmovne ecx eax
push ebx
push ecx
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
cmp [ esp + 0xc ] 0xc
jne r-xdata
mov eax 0x41
jmp [ edx * 4 + jump_table_41c4f4 ]
push 0x40
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp ebx 0x1
jne r-xdata
cmp [ esp + 0x44 ] 0x0
mov cl 0xd
jne r-xdata
mov eax 0x47
jmp sub_488b9a
mov eax 0x44
jmp sub_488b9a
push ebx
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
cmp ebx 0x1
mov eax r--data
mov ecx r--data
cmove ecx eax
push ecx
mov edi [ esp + 0x18 ]
push edi
call sub_432778
add esp 0x8
jmp r-xdata
xor eax eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov esi eax
add esi edi
mov esi [ esp + 0xc ]
mov [ rw-data ] eax
xor ebx ebx
cmp [ esp + 0xbc ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea ecx [ ecx - 0x60 ]
cmp ecx 0x9
ja r-xdata
mov edx [ esp + 0x40 ]
and edx 0x81ff
cmp [ rw-data ] 0x2
jne r-xdata
push 0x94
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
push [ esp + 0x34 ]
push 0x0
push rw-data
lea eax [ esp + 0xb4 ]
push eax
push edx
mov edi esi
push esi
call [ ToAsciiEx@IAT ]
mov esi eax
test esi esi
jle r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ebx ebx
cmp [ esp + 0x10 ] 0x0
mov [ esp + 0xbc ] 0x0
sete bl
cmp [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
push [ esp + 0x34 ]
push 0x0
push 0x3
push rw-data
lea ecx [ esp + 0xb8 ]
push ecx
push edx
mov edi esi
push esi
call eax
mov esi eax
jmp r-xdata
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
je r-xdata
mov cl [ eax + eax + rw-data ]
mov [ eax + rw-data ] cl
inc eax
cmp esi eax
jne r-xdata
xor eax eax
push 0x3
push rw-data
push esi
push rw-data
push eax
push eax
call [ MultiByteToWideChar@IAT ]
test esi esi
jle r-xdata
push 0x53
push [ rw-data ]
call sub_43194f
mov ecx [ esp + 0x8d0 ]
add esp 0x8
test eax eax
je r-xdata
cmp edi 0x12
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
test ecx ecx
sete al
inc ecx
xor ebp ebp
xor edi edi
lea eax [ esp + eax * 2 + 0x54 ]
inc edi
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ eax + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
je r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
mov cx [ ebp + ebp + rw-data ]
mov edx [ rw-data ]
movzx eax cx
cmp edx 0x3
mov [ esp + 0x50 ] ax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ ecx - 0x20 ]
movzx edx dx
cmp edx 0x5f
ja r-xdata
cmp edx 0x2
jne r-xdata
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
mov [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
push eax
push [ rw-data ]
call sub_496029
add esp 0x8
cmp eax 0xffffffff
je r-xdata
lea edx [ ecx - 0x20 ]
movzx edx dx
cmp edx 0x5f
ja r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x10
call [ MessageBeep@IAT ]
jmp r-xdata
mov [ esp + 0x52 ] ax
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x3
jmp r-xdata
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov [ esp + 0x54 ] 0x1b
mov [ esp + 0x56 ] cx
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x7f
ja r-xdata
inc ebp
cmp ebp esi
jl r-xdata
push edi
push edi
lea ecx [ esp + 0x5a ]
push ecx
push eax
call sub_43ca71
add esp 0x10
jmp r-xdata
xor ecx ecx
call sub_48d2b0
push edi
push edi
lea ecx [ esp + 0x58 ]
push ecx
push eax
mov edx [ eax + 0x1090 ]
cmp [ edx + 0xc ] 0xfde9
je r-xdata
mov [ esp + 0x52 ] cx
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
jmp r-xdata
mov [ esp + 0x54 ] 0x1b
push eax
call sub_495f00
add esp 0x4
mov [ esp + 0x56 ] ax
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push edi
push edi
lea ecx [ esp + 0x5a ]
push ecx
push eax
call sub_43ca71
call sub_43ca71
add esp 0x10
push 0x1
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
jmp r-xdata
mov [ esp + 0x54 ] cl
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push edi
lea ecx [ esp + 0x5c ]
push ecx
push eax
call sub_43c15b
jmp r-xdata
add esp 0x10
sub_4886c3
cmp [ esp + 0x1c ] 0x2
jne r-xdata
xor edx edx
cmp [ esp + 0x18 ] 0x0
setne dl
or edx 0x6c
jmp r-xdata
cmp [ esp + 0x18 ] 0x1
mov edx 0x6b
sbb edx 0xffffffff
jmp r-xdata
mov eax [ esp + 0x3c ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
mov eax r--data
mov eax edx
mov ecx r--data
and eax 0xfffffffc
cmp eax 0x50
mov eax r--data
cmove eax ecx
jmp r-xdata
xor ebx ebx
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
cmp esi 0xffffffff
je r-xdata
push edx
push eax
mov edi [ esp + 0x1c ]
push edi
call sub_432778
add esp 0xc
mov esi eax
add esi edi
lea eax [ esp + 0x64 ]
sub esi eax
je r-xdata
push ebx
push ecx
push ebp
push [ esp + 0x8cc ]
jmp r-xdata
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
xor ecx ecx
call sub_48d2b0
jmp r-xdata
lea ecx [ esp + 0x64 ]
push 0x1
push esi
push ecx
push eax
call sub_43c15b
add esp 0x10
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_4886eb
mov edx 0x6f
cmp [ esp + 0x1c ] 0x2
je r-xdata
mov eax [ esp + 0x3c ]
cmp [ eax + 0x148 ] 0x0
je r-xdata
test esi esi
mov edx esi
je r-xdata
mov eax r--data
mov eax edx
mov ecx r--data
and eax 0xfffffffc
cmp eax 0x50
mov eax r--data
cmove eax ecx
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
jne r-xdata
xor ebx ebx
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
cmp esi 0xffffffff
je r-xdata
push edx
push eax
mov edi [ esp + 0x1c ]
push edi
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x8
jne r-xdata
push ebx
push ecx
push ebp
push [ esp + 0x8cc ]
jmp r-xdata
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x8
jne r-xdata
push 0x3f
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov cl 0x7f
jne r-xdata
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
xor ecx ecx
call sub_48d2b0
jmp r-xdata
lea ecx [ esp + 0x64 ]
push 0x1
push esi
push ecx
push eax
call sub_43c15b
add esp 0x10
cmp [ esp + 0x18 ] 0x2
mov edx ebx
sete cl
and cl dl
cmp cl 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x9
jne r-xdata
push 0x3f
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov cl 0x8
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi 0xfffffffe
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
jmp r-xdata
mov cl 0x8
jmp r-xdata
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
cmp [ esp + 0x18 ] 0x3
sete cl
and cl bl
cmp cl 0x1
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x0
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x5b1b
mov [ esi + 0x2 ] 0x5a
add esi 0x3
jmp r-xdata
mov cl 0x7f
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0xa0
jmp r-xdata
inc esi
jmp r-xdata
lea eax [ esp + 0x64 ]
sub esi eax
je r-xdata
mov cl 0x1a
test al al
jne r-xdata
cmp [ esp + 0xc ] 0x3
jne r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax 0x2
cmp [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0xc ]
lea eax [ eax - 0x32 ]
cmp eax 0x6
ja r-xdata
push 0x1
push [ rw-data ]
call [ eax + 0x18 ]
jmp r-xdata
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov eax [ esp + 0xc ]
or eax 0x2
cmp eax 0xbf
jne r-xdata
mov al [ eax + r--data ]
jmp sub_488571
add esp 0x8
jmp r-xdata
cmp [ esp + 0x18 ] 0x3
jne r-xdata
cmp [ esp + 0xc ] 0xdf
je r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1f
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
sete al
and al [ esp + 0x44 ]
cmp al 0x1
jne r-xdata
cmp [ esp + 0xc ] 0xde
jne r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1c
jmp r-xdata
cmp [ esp + 0xc ] 0xdc
jne r-xdata
mov eax [ esp + 0xc ]
lea eax [ eax - 0x70 ]
cmp eax 0x13
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x150 ] 0x0
je r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x1e
jmp r-xdata
xor ebx ebx
jmp r-xdata
jmp [ eax * 4 + jump_table_41c4a4 ]
mov esi [ esp + 0x14 ]
mov [ esi ] 0xa0d
add esi 0x2
jmp r-xdata
test [ esp + 0x18 ] 0x2
jne r-xdata
cmp [ esp + 0xb8 ] 0x0
mov ecx 0x17
mov ebx 0xb
jmp r-xdata
cmp [ esp + 0x1c ] 0x3
jne r-xdata
cmp [ esp + 0x48 ] 0xd
ja r-xdata
cmovs ebx ecx
mov ecx [ rw-data ]
lea edi [ ebx - 0x1 ]
cmp edi 0x5
mov edx [ ecx + 0x148 ]
ja r-xdata
cmp ebx 0x6
jg r-xdata
mov edx [ esp + 0x48 ]
mov ecx 0x300f
bt ecx edx
jae r-xdata
cmp [ esp + 0x1c ] 0x5
lea esi [ ebx - 0xb ]
jne r-xdata
test edx edx
je r-xdata
movsx ebx [ ebx + r--data ]
mov ecx [ esp + 0xc ]
mov ebx [ ecx * 4 + r--data ]
cmp [ esp + 0x1c ] 0x5
jne r-xdata
cmp esi 0x17
ja r-xdata
movsx eax [ ebx + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
test edx edx
setne al
cmp [ esp + 0x1c ] 0x4
sete ah
cmp esi 0xd
ja r-xdata
cmp edi 0x5
ja r-xdata
mov ecx [ esp + 0xc ]
mov esi [ esp + 0x4c ]
mov edx ecx
xor ecx ecx
add edx 0xffffff8f
cmp edx 0xb
cmovae eax ecx
cmp [ esp + 0xb8 ] cl
lea edx [ eax + 0xc ]
cmovns edx eax
cmp [ esi ] cl
lea eax [ edx + 0x18 ]
cmovns eax edx
movsx eax [ eax + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
call sub_432778
add esp 0xc
cmp [ esp + 0x1c ] 0x1
jne r-xdata
or ah al
je r-xdata
cmp ebx 0x3
jne r-xdata
cmp [ esp + 0x1c ] 0x2
jne r-xdata
cmp esi 0x4
ja r-xdata
xor eax eax
cmp ebx 0xf
mov esi r--data
setg al
cmp ebx 0x15
lea ecx [ eax + 0x1 ]
cmovle ecx eax
neg ecx
test edx edx
mov edx r--data
lea eax [ ebx + ecx + 0x45 ]
cmove edx esi
push eax
push edx
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
movsx eax [ edi + r--data ]
push eax
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esi ] 0x7f
jmp r-xdata
test ebx ebx
je r-xdata
cmp esi 0x3
ja r-xdata
add ebx 0x36
push ebx
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
mov eax [ esp + 0xc ]
lea edx [ eax - 0x25 ]
cmp edx 0x3
ja r-xdata
cmp ebx 0x4
je r-xdata
add ebx 0x45
test edx edx
mov eax r--data
mov ecx r--data
cmovne ecx eax
push ebx
push ecx
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
cmp [ esp + 0xc ] 0xc
jne r-xdata
mov eax 0x41
jmp [ edx * 4 + jump_table_41c4f4 ]
push 0x40
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
cmp ebx 0x1
jne r-xdata
cmp [ esp + 0x44 ] 0x0
mov cl 0xd
jne r-xdata
mov eax 0x47
jmp sub_488b9a
mov eax 0x44
jmp sub_488b9a
push ebx
push r--data
mov edi [ esp + 0x1c ]
push edi
jmp r-xdata
cmp ebx 0x1
mov eax r--data
mov ecx r--data
cmove ecx eax
push ecx
mov edi [ esp + 0x18 ]
push edi
call sub_432778
add esp 0x8
jmp r-xdata
xor eax eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov esi eax
add esi edi
mov esi [ esp + 0xc ]
mov [ rw-data ] eax
xor ebx ebx
cmp [ esp + 0xbc ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea ecx [ ecx - 0x60 ]
cmp ecx 0x9
ja r-xdata
mov edx [ esp + 0x40 ]
and edx 0x81ff
cmp [ rw-data ] 0x2
jne r-xdata
push 0x94
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
push [ esp + 0x34 ]
push 0x0
push rw-data
lea eax [ esp + 0xb4 ]
push eax
push edx
mov edi esi
push esi
call [ ToAsciiEx@IAT ]
mov esi eax
test esi esi
jle r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ebx ebx
cmp [ esp + 0x10 ] 0x0
mov [ esp + 0xbc ] 0x0
sete bl
cmp [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
push [ esp + 0x34 ]
push 0x0
push 0x3
push rw-data
lea ecx [ esp + 0xb8 ]
push ecx
push edx
mov edi esi
push esi
call eax
mov esi eax
jmp r-xdata
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
je r-xdata
mov cl [ eax + eax + rw-data ]
mov [ eax + rw-data ] cl
inc eax
cmp esi eax
jne r-xdata
xor eax eax
push 0x3
push rw-data
push esi
push rw-data
push eax
push eax
call [ MultiByteToWideChar@IAT ]
test esi esi
jle r-xdata
push 0x53
push [ rw-data ]
call sub_43194f
mov ecx [ esp + 0x8d0 ]
add esp 0x8
test eax eax
je r-xdata
cmp edi 0x12
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
test ecx ecx
sete al
inc ecx
xor ebp ebp
xor edi edi
lea eax [ esp + eax * 2 + 0x54 ]
inc edi
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ eax + 0x1090 ]
cmp [ eax + 0xc ] 0xfde9
je r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
mov cx [ ebp + ebp + rw-data ]
mov edx [ rw-data ]
movzx eax cx
cmp edx 0x3
mov [ esp + 0x50 ] ax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ ecx - 0x20 ]
movzx edx dx
cmp edx 0x5f
ja r-xdata
cmp edx 0x2
jne r-xdata
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
mov [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
push eax
push [ rw-data ]
call sub_496029
add esp 0x8
cmp eax 0xffffffff
je r-xdata
lea edx [ ecx - 0x20 ]
movzx edx dx
cmp edx 0x5f
ja r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x10
call [ MessageBeep@IAT ]
jmp r-xdata
mov [ esp + 0x52 ] ax
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x3
jmp r-xdata
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0xdc ] 0x0
je r-xdata
mov [ esp + 0x54 ] 0x1b
mov [ esp + 0x56 ] cx
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x7f
ja r-xdata
inc ebp
cmp ebp esi
jl r-xdata
push edi
push edi
lea ecx [ esp + 0x5a ]
push ecx
push eax
call sub_43ca71
add esp 0x10
jmp r-xdata
xor ecx ecx
call sub_48d2b0
push edi
push edi
lea ecx [ esp + 0x58 ]
push ecx
push eax
mov edx [ eax + 0x1090 ]
cmp [ edx + 0xc ] 0xfde9
je r-xdata
mov [ esp + 0x52 ] cx
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
jmp r-xdata
mov [ esp + 0x54 ] 0x1b
push eax
call sub_495f00
add esp 0x4
mov [ esp + 0x56 ] ax
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push edi
push edi
lea ecx [ esp + 0x5a ]
push ecx
push eax
call sub_43ca71
call sub_43ca71
add esp 0x10
push 0x1
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
jmp r-xdata
mov [ esp + 0x54 ] cl
push eax
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push edi
lea ecx [ esp + 0x5c ]
push ecx
push eax
call sub_43c15b
jmp r-xdata
add esp 0x10
sub_488b9a
push [ esp + 0x18 ]
push eax
push ecx
mov edi [ esp + 0x20 ]
push edi
call sub_47b126
add esp 0x10
jmp r-xdata
mov esi eax
add esi edi
lea eax [ esp + 0x64 ]
sub esi eax
je r-xdata
xor ebx ebx
mov ebx [ esp + 0x8cc ]
mov ecx [ esp + 0x8c8 ]
cmp esi 0xffffffff
je r-xdata
push ebx
push ecx
push ebp
push [ esp + 0x8cc ]
jmp r-xdata
push [ rw-data ]
call sub_47401d
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
call [ DefWindowProcW@IAT ]
mov ebx eax
jmp r-xdata
xor ecx ecx
call sub_48d2b0
jmp r-xdata
lea ecx [ esp + 0x64 ]
push 0x1
push esi
push ecx
push eax
call sub_43c15b
add esp 0x10
mov ecx [ esp + 0x8a8 ]
call sub_497c4a
mov eax ebx
add esp 0x8ac
pop esi
pop edi
pop ebx
pop ebp
retn 0x10
sub_489118
push ebp
push ebx
push edi
push esi
mov esi r--data
mov edi 0x2
mov ebx 0x89
mov ebp [ esi ]
lea eax [ edi - 0x2 ]
push eax
push ebx
push [ rw-data ]
call sub_4319e9
add esp 0xc
mov [ ebp + ebp * 2 + rw-data ] al
lea eax [ edi - 0x1 ]
push eax
push ebx
push [ rw-data ]
call sub_4319e9
add esp 0xc
mov [ ebp + ebp * 2 + rw-data ] al
push edi
push ebx
push [ rw-data ]
call sub_4319e9
add esp 0xc
add edi 0x3
add esi 0x4
mov [ ebp + ebp * 2 + rw-data ] al
cmp edi 0x44
jne r-xdata
xor ecx ecx
mov bl 0x98
mov edi 0xaaaaaaab
mov [ ecx + ecx * 2 + rw-data ] bl
mov [ ecx + ecx * 2 + rw-data ] bl
mov [ ecx + ecx * 2 + rw-data ] bl
mov eax ecx
mul edi
mov esi edx
shr esi 0x2
mov eax esi
mul edi
shr edx 0x1
and edx 0x7ffffffe
lea eax [ edx + edx * 2 ]
mov edx 0x2aaaaaab
sub esi eax
mov eax ecx
imul edx
mov eax edx
shr eax 0x1f
add eax edx
xor edx edx
add eax eax
lea ebp [ eax + eax * 2 ]
lea eax [ ecx + 0x23 ]
cmp eax 0x47
jb r-xdata
cmp ecx 0xd7
jg r-xdata
push 0x86
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov eax ecx
mov [ ecx + ecx * 2 + rw-data ] dl
mov edx 0x0
sub eax ebp
test esi esi
je r-xdata
mov eax ecx
mov edx 0x38e38e39
mul edx
shr edx 0x3
lea eax [ edx + edx * 4 ]
lea edx [ eax * 8 + 0x37 ]
pop esi
pop edi
pop ebx
pop ebp
retn
pop esi
pop edi
pop ebx
pop ebp
jmp sub_48d1c0
mov [ ecx + ecx * 2 + rw-data ] dl
test eax eax
mov edx 0x0
je r-xdata
lea edx [ esi + esi * 4 ]
lea edx [ edx * 8 + 0x37 ]
mov [ ecx + ecx * 2 + rw-data ] dl
jmp r-xdata
lea eax [ eax + eax * 4 ]
lea edx [ eax * 8 + 0x37 ]
inc ecx
add bl 0xa
cmp ecx 0xf0
jne r-xdata
sub_489272
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x90
mov [ esp ] ecx
mov ebx edx
mov eax [ rw-data ]
mov [ esp + 0x88 ] eax
xor eax eax
push 0x100
push eax
push rw-data
call sub_49acf0
add esp 0xc
mov esi 0x88
push esi
push [ rw-data ]
call sub_43194f
add esp 0x8
add eax eax
and eax 0x2
mov [ rw-data ] eax
push esi
push [ rw-data ]
call sub_43194f
add esp 0x8
shr eax 0x1
and eax 0x1
mov [ rw-data ] eax
mov al 0x1
mov [ rw-data ] al
push 0x75
push [ rw-data ]
call sub_431e49
add esp 0x8
mov [ esp + 0x4 ] eax
mov edi 0x2bc
mov ecx 0x384
mov eax [ eax + 0x4 ]
test eax eax
cmove ecx edi
cmove edi eax
mov [ esp + 0x14 ] ecx
push [ rw-data ]
call [ GetDC@IAT ]
mov esi eax
test ebx ebx
mov [ esp + 0x8 ] ebx
jne r-xdata
mov [ rw-data ] ebx
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
mov [ rw-data ] eax
jle r-xdata
mov [ esp + 0x10 ] ebx
push ecx
push 0x1
push edx
push eax
push eax
mov ecx [ esp + 0x18 ]
push [ ecx + 0xc ]
push eax
push eax
push eax
push edi
push eax
push eax
push [ rw-data ]
push [ rw-data ]
call [ CreateFontA@IAT ]
mov [ rw-data ] eax
push eax
push esi
call [ SelectObject@IAT ]
lea ebx [ esp + 0x18 ]
push ebx
push esi
call [ GetTextMetricsA@IAT ]
push rw-data
push 0x3c
push [ rw-data ]
call [ GetObjectA@IAT ]
test [ ebx + 0x33 ] 0x1
jne r-xdata
mov edx 0x4
cmp ebx 0x1
je r-xdata
mov eax [ esp ]
mov [ rw-data ] eax
push 0x76
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebx eax
mov eax [ esp + 0x4 ]
mov edx 0x0
mov ecx [ eax ]
xor eax eax
test ebx ebx
je r-xdata
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push 0x48
push eax
push [ rw-data ]
call [ MulDiv@IAT ]
mov ebx eax
neg ebx
xor eax eax
mov [ rw-data ] 0x1
inc eax
mov ecx [ esp + 0x2c ]
xor eax eax
mov [ rw-data ] 0x0
cmp ecx [ esp + 0x30 ]
setne al
jmp r-xdata
xor edx edx
cmp ebx 0x2
setne dl
lea edx [ edx + edx + 0x3 ]
lea edx [ esp + 0x18 ]
mov ecx esi
mov eax [ edx ]
mov [ rw-data ] eax
call sub_48d216
mov [ rw-data ] eax
cmp [ esp + 0x8 ] 0x0
jne r-xdata
cmp [ esp ] 0x0
mov [ rw-data ] eax
je r-xdata
call [ GetOEMCP@IAT ]
xor esi esi
lea ebx [ esp + 0x50 ]
inc esi
push esi
push ebx
push eax
call [ TranslateCharsetInfo@IAT ]
cmp eax esi
sbb eax eax
or eax [ ebx + 0x4 ]
jmp r-xdata
movzx eax [ esp + 0x4c ]
pcmpeqd xmm0 xmm0
mov [ esp ] esi
movdqa [ esp + 0x60 ] xmm0
movdqa [ esp + 0x50 ] xmm0
cmp eax 0xff
je r-xdata
xor edx edx
inc edx
push eax
push edx
push ecx
push ebx
push ebx
mov eax [ esp + 0x18 ]
push [ eax + 0xc ]
push ebx
push edx
push ebx
push edi
push ebx
push ebx
push [ rw-data ]
push [ rw-data ]
call [ CreateFontA@IAT ]
mov esi [ esp ]
mov [ rw-data ] eax
push esi
call [ CreateCompatibleDC@IAT ]
mov edi eax
push [ rw-data ]
push [ rw-data ]
push esi
call [ CreateCompatibleBitmap@IAT ]
mov esi [ SelectObject@IAT ]
mov [ esp + 0x8 ] eax
push eax
push edi
call esi
mov [ esp + 0xc ] eax
push [ rw-data ]
push edi
call esi
push ebx
push edi
call [ SetTextAlign@IAT ]
push 0xffffff
push edi
call [ SetTextColor@IAT ]
push ebx
push edi
call [ SetBkColor@IAT ]
mov esi 0x2
push esi
push edi
call [ SetBkMode@IAT ]
push ebx
xor eax eax
inc eax
push eax
push r--data
push ebx
push esi
push ebx
push ebx
push edi
call [ ExtTextOutA@IAT ]
cmp [ rw-data ] ebx
jle r-xdata
mov ecx 0x4
cmp edx 0x1
je r-xdata
lea esi [ esp + 0x74 ]
mov [ rw-data ] eax
push esi
push eax
call [ GetCPInfo@IAT ]
xor eax eax
cmp [ esi ] 0x1
mov edx [ esp + 0x10 ]
mov ecx 0x0
seta al
xor ebx ebx
test edx edx
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
je r-xdata
push [ esp + 0xc ]
push edi
call [ SelectObject@IAT ]
push [ esp + 0x8 ]
call [ DeleteObject@IAT ]
push edi
call [ DeleteDC@IAT ]
xor esi esi
xor ebx ebx
xor ecx ecx
cmp edx 0x2
setne cl
lea ecx [ ecx + ecx + 0x3 ]
mov ecx [ esp + 0x1c ]
mov eax [ rw-data ]
inc ecx
cmp ecx eax
mov [ rw-data ] ecx
jl r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
test esi esi
mov edx 0x0
mov ecx [ ecx ]
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
push ebx
push ecx
push edi
call [ GetPixel@IAT ]
test eax eax
mov ecx 0x1
cmovne esi ecx
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
push [ esp + 0xc ]
push edi
call [ SelectObject@IAT ]
push [ esp + 0x8 ]
call [ DeleteObject@IAT ]
push edi
call [ DeleteDC@IAT ]
test esi esi
jne r-xdata
xor edi edi
xor ebx ebx
xor esi esi
dec eax
mov [ rw-data ] eax
push ecx
push 0x1
push edx
push eax
push eax
mov ecx [ esp + 0x18 ]
push [ ecx + 0xc ]
push eax
push eax
push eax
push [ esp + 0x38 ]
push eax
push eax
push [ rw-data ]
push [ rw-data ]
call [ CreateFontA@IAT ]
mov [ rw-data ] eax
mov edx 0x4
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x2
mov esi [ esp + 0x10 ]
jne r-xdata
jmp r-xdata
dec edi
mov [ esp + ebx + 0x50 ] ecx
inc esi
add ebx 0x4
cmp edi 0xfffffffd
jne r-xdata
push eax
push [ esp + 0x4 ]
call [ SelectObject@IAT ]
test eax eax
je r-xdata
xor edx edx
cmp esi 0x2
setne dl
lea edx [ edx + edx + 0x3 ]
mov [ rw-data ] 0x0
push [ rw-data ]
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
mov eax [ ebx + rw-data ]
mov ecx edi
test eax eax
je r-xdata
push [ esp ]
push [ rw-data ]
call [ ReleaseDC@IAT ]
mov esi [ esp + 0x50 ]
cmp [ esp + 0x58 ] esi
je r-xdata
mov ecx esi
neg ecx
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x4 ]
call [ GetTextMetricsA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
mov edi 0x1
jne r-xdata
mov [ rw-data ] 0x0
push [ rw-data ]
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
mov ecx [ esp ]
lea edx [ esp + 0x18 ]
call sub_48d216
mov ecx [ esp + 0x18 ]
shl ecx 0x8
add ecx eax
jmp r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
push rw-data
push [ rw-data ]
call sub_49546c
add esp 0x8
mov ecx [ esp + 0x88 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esp + 0x54 ] esi
je r-xdata
mov [ rw-data ] 0x1
push [ rw-data ]
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
sub_489776
push ebx
push edi
push esi
mov esi [ DeleteMenu@IAT ]
push 0x400
push 0x0
push [ rw-data ]
call esi
test eax eax
jne r-xdata
cmp [ rw-data ] 0x2
jl r-xdata
push r--data
push 0x1000
push 0x1
push [ rw-data ]
call [ AppendMenuA@IAT ]
mov ebx [ AppendMenuA@IAT ]
xor esi esi
mov edi 0x1000
inc esi
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push edi
push 0x0
push [ rw-data ]
call ebx
mov eax [ rw-data ]
inc esi
mov ecx 0x401
cmp eax 0x402
cmovl ecx eax
add edi 0x10
cmp esi ecx
jl r-xdata
cmp eax 0x1
jg r-xdata
pop esi
pop edi
pop ebx
retn
sub_4897f7
push ebp
push ebx
push edi
push esi
sub esp 0x408
mov eax [ rw-data ]
mov [ esp + 0x404 ] eax
push 0x2
push [ rw-data ]
call sub_43194f
add esp 0x8
push eax
call sub_44420b
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
mov esi eax
push 0x30
push esi
push r--data
push 0x0
call [ MessageBoxA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push 0x1
call sub_485b0d
mov ebp [ eax ]
push 0x8
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
push 0x7
push [ rw-data ]
call sub_43194f
add esp 0x8
mov edi eax
push 0x1
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ebx eax
xor eax eax
push eax
push [ rw-data ]
call sub_431a8c
add esp 0x8
mov ecx esp
push esi
push edi
mov edi 0x0
push ecx
push ebx
push eax
push [ rw-data ]
push rw-data
push edi
call ebp
add esp 0x20
mov esi eax
mov eax [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call [ eax + 0x34 ]
add esp 0x8
test esi esi
jne r-xdata
push [ r--data ]
push r--data
call sub_43f758
add esp 0x8
xor ebp ebp
mov edi eax
push [ rw-data ]
call sub_440153
add esp 0x4
lea ebx [ esp + 0x4 ]
push esi
push eax
push r--data
push ebx
call sub_432778
add esp 0x10
push 0x10
push edi
push ebx
push ebp
call [ MessageBoxA@IAT ]
push edi
call sub_43f9d4
add esp 0x4
push ebp
call sub_4a3719
mov [ rw-data ] edi
mov [ rw-data ] edi
push 0x5f
push [ rw-data ]
call sub_431a8c
add esp 0x8
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
push [ esp ]
call sub_43f9d4
sub esp 0x4
mov [ esp + 0x4 ] esi
call sub_48bdc6
mov [ esp + 0x4 ] esi
call sub_48be32
add esp 0x8
mov eax [ rw-data ]
push [ rw-data ]
push [ eax + 0x14 ]
push [ rw-data ]
call sub_475c45
add esp 0xc
push 0x0
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_43bfd4
add esp 0x14
mov edi [ DeleteMenu@IAT ]
mov esi 0xfffffff8
mov [ rw-data ] eax
lea esi [ esp + 0x4 ]
push [ r--data ]
push [ esp + 0x4 ]
push r--data
push esi
call sub_432778
add esp 0x10
push 0x0
push 0x40
push [ esi + rw-data ]
call edi
add esi 0x4
jne r-xdata
mov [ rw-data ] 0x0
mov ecx [ esp + 0x404 ]
call sub_497c4a
add esp 0x408
pop esi
pop edi
pop ebx
pop ebp
retn
sub_489a1e
push ebx
push edi
push esi
push [ rw-data ]
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x87
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov eax 0xfffffefa
mov eax 0xfffffefa
push esi
push [ rw-data ]
call [ ReleaseDC@IAT ]
push 0x26
push esi
call [ GetDeviceCaps@IAT ]
test ah 0x1
je r-xdata
movzx edx [ eax + eax * 2 + rw-data ]
movzx esi [ eax + eax * 2 + rw-data ]
movzx ecx [ eax + eax * 2 + rw-data ]
shl edx 0x8
shl esi 0x10
or edx ecx
or esi edx
mov [ eax * 4 + rw-data ] esi
inc eax
jne r-xdata
pop esi
pop edi
pop ebx
retn
movzx edx [ eax + eax * 2 + rw-data ]
movzx esi [ eax + eax * 2 + rw-data ]
movzx ecx [ eax + eax * 2 + rw-data ]
shl edx 0x8
shl esi 0x10
or edx ecx
lea ecx [ esi + edx + 0x2000000 ]
mov [ eax * 4 + rw-data ] ecx
inc eax
jne r-xdata
jmp r-xdata
push 0x1
push 0x41c
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ rw-data ] eax
mov [ eax ] 0x1060300
mov dl [ ecx + ecx * 2 + rw-data ]
mov [ eax + ecx * 4 + 0x4 ] dl
mov dl [ ecx + ecx * 2 + rw-data ]
mov [ eax + ecx * 4 + 0x5 ] dl
mov dl [ ecx + ecx * 2 + rw-data ]
mov [ eax + ecx * 4 + 0x6 ] dl
mov [ eax + ecx * 4 + 0x7 ] 0x4
inc ecx
cmp ecx 0x106
jne r-xdata
push eax
call [ CreatePalette@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ebx [ SelectPalette@IAT ]
xor edi edi
push edi
push eax
push esi
call ebx
push esi
call [ RealizePalette@IAT ]
push 0xf
call [ GetStockObject@IAT ]
push edi
push eax
push esi
call ebx
sub_489b5f
push esi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax r--data
mov ecx [ esp + 0xc ]
mov edx 0x3f
mov esi 0x8005
test ecx ecx
cmove edx ecx
cmove esi ecx
push edx
push esi
push eax
push [ esp + 0x14 ]
call [ rw-data ]
mov ecx eax
xor eax eax
cmp ecx 0xffffffff
jne r-xdata
pop esi
retn
call [ rw-data ]
cmp eax 0x2742
mov ecx r--data
mov eax r--data
cmove eax ecx
jmp r-xdata
sub_489bb6
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
push [ rw-data ]
call [ eax + 0x1c ]
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
test ecx ecx
je r-xdata
xor ebx ebx
push ebx
push eax
push [ esi + rw-data ]
mov edi [ DeleteMenu@IAT ]
call edi
push ebx
push 0x200
push [ esi + rw-data ]
call edi
mov ecx ebp
xor edi edi
xor ecx ecx
xor ebx ebx
xor ebp ebp
inc ebp
call [ CreatePopupMenu@IAT ]
mov esi eax
xor eax eax
mov [ esp + 0x4 ] 0x0
add esi 0x4
jne r-xdata
push r--data
push ecx
mov edi 0x10
push edi
push edi
push [ esi + rw-data ]
mov ebx [ InsertMenuA@IAT ]
call ebx
push 0x0
push 0x200
push 0x800
push edi
push [ esi + rw-data ]
call ebx
mov ecx ebp
cmp edi 0x40
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] ecx
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ rw-data ]
mov ecx [ eax + edi * 8 + 0x4 ]
cmp ecx 0x1f
je r-xdata
push 0x417
push r--data
push r--data
call sub_4a509d
add esp 0xc
push ebx
push ebx
push 0x800
push esi
call [ AppendMenuA@IAT ]
inc edi
add ebp 0x10
cmp ecx 0x20
je r-xdata
mov ebp [ esp ]
cmp ebp 0x2
jl r-xdata
cmp ecx 0x21
jne r-xdata
inc ebp
call [ CreatePopupMenu@IAT ]
mov ecx [ rw-data ]
mov [ esp ] eax
push [ ecx + edi * 8 ]
push eax
push 0x10
push esi
call [ AppendMenuA@IAT ]
mov ecx [ esp ]
jmp r-xdata
push 0x41d
push r--data
push r--data
call sub_4a509d
add esp 0xc
push [ eax + edi * 8 ]
push ebp
push 0x0
push esi
call [ AppendMenuA@IAT ]
mov ecx esi
mov esi [ esp + 0x4 ]
mov ebp [ esp ]
mov ebp [ esp ]
mov eax [ esp + 0x4 ]
dec ebp
cmovne esi eax
cmovne eax ebx
mov ecx esi
mov esi eax
jmp r-xdata
mov [ esp + 0x4 ] esi
lea eax [ edi + 0x1 ]
test ebp ebp
mov esi ecx
jg r-xdata
mov [ esp ] ebp
mov ebp eax
mov edi eax
shl ebp 0x4
add ebp 0x400
jmp r-xdata
jmp r-xdata
mov esi 0xfffffff8
mov ebp ecx
mov [ rw-data ] edi
sub_489d6d
push edi
push esi
mov eax [ rw-data ]
xor edi edi
inc edi
cmp eax 0x2
je r-xdata
mov eax 0x7f02
jmp r-xdata
cmp eax 0x1
je r-xdata
push eax
push 0x0
call [ LoadCursorA@IAT ]
mov esi eax
push esi
push 0xfffffff4
push [ rw-data ]
call [ SetClassLongA@IAT ]
push esi
call [ SetCursor@IAT ]
cmp edi [ rw-data ]
je r-xdata
mov eax 0x7f8a
jmp r-xdata
test eax eax
jne r-xdata
pop esi
pop edi
retn
push edi
call [ ShowCursor@IAT ]
mov [ rw-data ] edi
push 0x45f
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor edi edi
xor eax eax
cmp [ rw-data ] 0x0
sete al
xor edi edi
or eax 0x7f00
jmp r-xdata
sub_489dfa
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor ecx ecx
push 0x44
push [ rw-data ]
call sub_43194f
add esp 0x8
xor ecx ecx
test eax eax
sete cl
jmp r-xdata
mov [ rw-data ] ecx
jmp sub_489d6d
sub_489e27
push edi
push esi
sub esp 0x6c
mov ecx [ rw-data ]
mov eax [ esp + 0x7c ]
lea edx [ esp + 0x80 ]
mov [ esp + 0x68 ] ecx
mov [ esp ] edx
push edx
push eax
call sub_43fb4c
add esp 0x8
mov esi eax
lea edi [ esp + 0x4 ]
push [ r--data ]
push r--data
push edi
call sub_432778
add esp 0xc
push 0x10
push edi
push esi
push [ rw-data ]
call [ MessageBoxA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push 0x4
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push 0x1
call [ PostQuitMessage@IAT ]
push 0x0
push sub_489ebd
call sub_43023c
add esp 0x8
jmp r-xdata
mov ecx [ esp + 0x68 ]
call sub_497c4a
add esp 0x6c
pop esi
pop edi
retn
sub_489ebd
push ebp
push ebx
push edi
push esi
sub esp 0x68
mov eax [ rw-data ]
mov esi esp
mov [ esp + 0x64 ] eax
mov [ rw-data ] 0x1
push [ r--data ]
push r--data
push esi
call sub_432778
add esp 0x4
mov [ esp + 0x4 ] esi
call sub_48be32
mov [ esp + 0x4 ] esi
call sub_48bdc6
add esp 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_43c08f
add esp 0x4
mov [ rw-data ] 0x0
mov ebp [ InsertMenuA@IAT ]
mov esi 0xfffffff8
xor edi edi
mov ebx 0x40
push [ rw-data ]
call [ eax + 0x4 ]
add esp 0x4
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
push eax
push eax
push [ rw-data ]
call sub_475c45
add esp 0x8
call sub_489bb6
add esp 0x4
push edi
push ebx
push [ esi + rw-data ]
call [ DeleteMenu@IAT ]
push r--data
push ebx
push edi
push 0x30
push [ esi + rw-data ]
call ebp
add esi 0x4
jne r-xdata
mov ecx [ esp + 0x64 ]
call sub_497c4a
add esp 0x68
pop esi
pop edi
pop ebx
pop ebp
retn
sub_489f9b
push ebx
push edi
push esi
sub esp 0x2c
mov eax [ rw-data ]
mov [ esp + 0x28 ] eax
push [ rw-data ]
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
cmp eax 0x1
je r-xdata
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
call sub_497c4a
add esp 0x2c
pop esi
pop edi
pop ebx
retn
mov esi [ esp + 0x44 ]
mov eax [ rw-data ]
mov edi [ esp + 0x40 ]
cmp [ eax + 0x128 ] esi
jne r-xdata
mov ebx [ rw-data ]
call sub_484ae8
test eax eax
je r-xdata
cmp [ eax + 0x12c ] edi
je r-xdata
mov eax 0x12340042
push 0x2
push ebx
call [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
mov ecx 0x2aaaaaab
sub eax [ rw-data ]
sub eax [ rw-data ]
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
cmp eax esi
jl r-xdata
mov ebx esp
mov [ ebx ] 0x28
push ebx
push eax
call sub_484ca9
movsd xmm1 [ ebx + 0xc ]
movsd xmm0 [ ebx + 0x4 ]
movsd [ rw-data ] xmm1
movsd [ rw-data ] xmm0
mov eax [ rw-data ]
sub eax [ rw-data ]
sub eax [ rw-data ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1e
add ecx eax
sar ecx 0x2
cmp ecx edi
jl r-xdata
cmp edi 0xe
mov ebx 0xf
cmovg ebx edi
xor edi edi
inc edi
test esi esi
cmovg edi esi
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
push eax
push ebx
push edi
push [ rw-data ]
call sub_4752f4
add esp 0x10
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
cmp eax 0x2
je r-xdata
xor ecx ecx
call sub_48a155
jmp r-xdata
push [ rw-data ]
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
push 0x1
push 0x0
push [ rw-data ]
call [ InvalidateRect@IAT ]
imul ebx [ rw-data ]
imul edi [ rw-data ]
xor eax eax
add ebx [ rw-data ]
add edi [ rw-data ]
push 0x116
push edi
push ebx
push eax
push eax
push eax
push [ rw-data ]
call [ SetWindowPos@IAT ]
sub_48a155
push ebp
push ebx
push edi
push esi
sub esp 0x5c
mov eax [ rw-data ]
mov ebp ecx
mov [ esp + 0x58 ] eax
lea eax [ esp + 0x10 ]
push eax
push [ rw-data ]
call [ GetWindowRect@IAT ]
lea esi [ esp + 0x20 ]
push esi
push [ rw-data ]
call [ GetClientRect@IAT ]
mov edi [ esi + 0x8 ]
mov eax [ esi + 0xc ]
sub edi [ esi ]
sub eax [ esi + 0x4 ]
mov [ esp + 0xc ] eax
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
mov esi eax
push 0x7f
push [ rw-data ]
call sub_43194f
add esp 0x8
cmp esi 0x1
mov ebx 0x2
mov [ esp ] eax
mov [ esp + 0x4 ] edi
cmovne ebx ebp
cmp ebx 0x2
jl r-xdata
mov ebp [ esp + 0xc ]
test edi edi
je r-xdata
mov edi [ DeleteObject@IAT ]
mov [ esp + 0x8 ] esi
mov ebp 0xffffff00
xor esi esi
mov ecx [ esp + 0x58 ]
call sub_497c4a
add esp 0x5c
pop esi
pop edi
pop ebx
pop ebp
retn
test ebp ebp
je r-xdata
mov [ ebp + rw-data ] esi
mov [ ebp + rw-data ] esi
add ebp 0x4
jne r-xdata
push eax
call edi
test ebx ebx
jne r-xdata
mov eax [ ebp + rw-data ]
test eax eax
je r-xdata
xor ecx ecx
xor edx edx
call sub_489272
mov edi [ esp + 0x4 ]
mov esi [ esp + 0x8 ]
push [ rw-data ]
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx edi
mov eax [ ecx + 0x12c ]
imul eax [ rw-data ]
sub edx eax
mov eax edx
shr eax 0x1f
add eax edx
sar eax 0x1
cmp [ rw-data ] eax
jne r-xdata
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
sub ecx [ esp + 0x14 ]
sub eax [ esp + 0x10 ]
sub ecx [ esp + 0x2c ]
sub eax [ esp + 0x28 ]
add ecx [ esp + 0x24 ]
add eax [ esp + 0x20 ]
test esi esi
mov esi [ rw-data ]
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov edi [ ecx + 0x12c ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ ecx + 0x128 ]
mov ecx [ ecx + 0x128 ]
mov edx [ rw-data ]
mov [ esp + 0x8 ] esi
mov edi ebp
mov esi ecx
imul esi edx
sub edi esi
mov esi edi
shr esi 0x1f
add esi edi
mov edi [ esp + 0x4 ]
sar esi 0x1
cmp [ rw-data ] esi
mov esi [ esp + 0x8 ]
jne r-xdata
test esi esi
je r-xdata
mov edx [ esp + 0x1c ]
mov esi [ esp ]
mov eax [ esp + 0x18 ]
sub edx [ esp + 0x14 ]
lea ecx [ esi + esi ]
mov [ rw-data ] esi
mov [ rw-data ] esi
add eax ecx
sub eax [ esp + 0x10 ]
sub edx [ esp + 0x2c ]
sub eax [ esp + 0x28 ]
add edx [ esp + 0x24 ]
add eax [ esp + 0x20 ]
lea ebp [ edx + esi * 2 ]
mov edx [ rw-data ]
mov [ rw-data ] ebp
mov [ rw-data ] eax
mov ebx [ edx + 0x128 ]
mov edx [ edx + 0x12c ]
imul edx [ rw-data ]
lea esi [ edx + esi * 2 ]
cmp edi esi
mov esi [ rw-data ]
jne r-xdata
imul edi esi
mov esi [ esp + 0x4 ]
cmp edi esi
jne r-xdata
mov eax [ esp + 0x4 ]
cdq
idiv edi
cmp esi eax
jne r-xdata
mov [ rw-data ] eax
imul ecx edx
mov eax ebp
sub eax ecx
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
mov [ rw-data ] ecx
push 0x1
push 0x0
push [ rw-data ]
call [ InvalidateRect@IAT ]
jmp r-xdata
mov ebx [ esp ]
mov ecx [ esp + 0x18 ]
lea eax [ ebx + ebx ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
add ecx eax
sub ecx [ esp + 0x10 ]
sub ecx [ esp + 0x28 ]
add ecx [ esp + 0x20 ]
mov [ rw-data ] ecx
mov ecx [ esp + 0x1c ]
sub ecx [ esp + 0x14 ]
sub ecx [ esp + 0x2c ]
add ecx [ esp + 0x24 ]
lea ecx [ ecx + ebx * 2 ]
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov edx [ ecx + 0x12c ]
imul edx [ rw-data ]
lea edx [ edx + ebx * 2 ]
cmp edi edx
jne r-xdata
cmp esi 0x3
jne r-xdata
imul ebx esi
add edx eax
xor eax eax
add ebx ebp
push 0x6
push ebx
push edx
push eax
push eax
push eax
push [ rw-data ]
call [ SetWindowPos@IAT ]
mov edi ebx
imul edi esi
add ecx edi
cmp [ esp + 0xc ] ecx
je r-xdata
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx eax
mov eax esi
cdq
idiv [ rw-data ]
mov ebx eax
mov eax ebp
cdq
idiv [ rw-data ]
push ecx
push ebx
push eax
push [ rw-data ]
call sub_4752f4
add esp 0x10
mov eax [ rw-data ]
mov ecx [ eax + 0x12c ]
imul ecx [ rw-data ]
sub esi ecx
mov ecx esi
shr ecx 0x1f
add ecx esi
sar ecx 0x1
mov [ rw-data ] ecx
mov eax [ eax + 0x128 ]
imul eax [ rw-data ]
sub ebp eax
mov eax ebp
shr eax 0x1f
add eax ebp
sar eax 0x1
mov [ rw-data ] eax
push 0x1
push 0x0
push [ rw-data ]
jmp r-xdata
mov eax [ ecx + 0x128 ]
imul eax [ rw-data ]
cmp eax ebp
je r-xdata
mov edi [ DeleteObject@IAT ]
mov ebx 0xffffff00
xor esi esi
mov eax ebp
mov esi [ rw-data ]
cdq
idiv [ ecx + 0x128 ]
cmp esi eax
je r-xdata
mov [ esp + 0x8 ] esi
mov esi [ rw-data ]
call sub_484ae8
test eax eax
je r-xdata
mov ecx [ ecx + 0x128 ]
imul ecx [ rw-data ]
add eax ecx
cmp ebp eax
je r-xdata
mov eax [ esp ]
mov ebx edi
mov ecx [ rw-data ]
mov esi [ rw-data ]
add eax eax
sub ebx eax
mov [ esp ] eax
mov eax ebx
cdq
idiv [ ecx + 0x12c ]
cmp esi eax
jne r-xdata
test ebx ebx
jns r-xdata
call [ InvalidateRect@IAT ]
push 0x1
push 0x0
push [ rw-data ]
jmp r-xdata
mov [ ebx + rw-data ] esi
mov [ ebx + rw-data ] esi
add ebx 0x4
jne r-xdata
push eax
call edi
mov eax 0x12340042
push 0x2
push esi
call [ rw-data ]
jmp r-xdata
mov edi [ DeleteObject@IAT ]
mov ebp 0xffffff00
xor esi esi
sub ebp [ esp ]
mov esi [ rw-data ]
mov eax ebp
cdq
idiv [ ecx + 0x128 ]
cmp esi eax
je r-xdata
mov eax [ ebx + rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax ebp
cdq
idiv [ ecx + 0x128 ]
mov esi [ esp + 0x4 ]
mov ebx eax
mov eax esi
cdq
idiv [ ecx + 0x12c ]
mov edx ebx
mov ecx eax
call sub_489272
mov eax [ rw-data ]
mov ecx [ eax + 0x12c ]
imul ecx [ rw-data ]
sub esi ecx
mov ecx esi
shr ecx 0x1f
add ecx esi
sar ecx 0x1
mov [ rw-data ] ecx
mov eax [ eax + 0x128 ]
imul eax [ rw-data ]
sub ebp eax
mov eax ebp
shr eax 0x1f
add eax ebp
sar eax 0x1
mov [ rw-data ] eax
push 0x1
push 0x0
push [ rw-data ]
jmp r-xdata
cmp [ esp + 0x8 ] 0x3
jne r-xdata
cmp [ eax + 0x12c ] edi
jle r-xdata
lea esi [ esp + 0x30 ]
mov [ esi ] 0x28
push esi
push eax
call sub_484ca9
movsd xmm1 [ esi + 0xc ]
movsd xmm0 [ esi + 0x4 ]
movsd [ rw-data ] xmm1
movsd [ rw-data ] xmm0
mov ebp [ rw-data ]
sub ebp [ rw-data ]
sub ebp [ rw-data ]
mov eax ebp
cdq
idiv [ rw-data ]
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov edi eax
sub ecx [ rw-data ]
mov eax ecx
cdq
idiv [ rw-data ]
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x128 ]
cmp ebx esi
jg r-xdata
mov [ ebp + rw-data ] esi
mov [ ebp + rw-data ] esi
add ebp 0x4
jne r-xdata
push eax
call edi
mov eax [ eax + 0x12c ]
cmp esi ebx
cmovg esi ebx
cmp edi eax
cmovg edi eax
push 0x60
push [ rw-data ]
call sub_43194f
add esp 0x8
push eax
push edi
push esi
push [ rw-data ]
call sub_4752f4
add esp 0x10
mov eax [ eax + 0x12c ]
cmp eax edi
jle r-xdata
mov eax [ rw-data ]
xor esi esi
mov ecx [ eax + 0x128 ]
mov eax [ eax + 0x12c ]
imul ecx [ rw-data ]
imul eax [ rw-data ]
add ecx [ rw-data ]
add eax [ rw-data ]
push 0x6
push ecx
push eax
push esi
push esi
push esi
push [ rw-data ]
call [ SetWindowPos@IAT ]
push 0x1
push esi
push [ rw-data ]
mov eax [ ebp + rw-data ]
test eax eax
je r-xdata
mov esi [ esp + 0xc ]
mov ecx [ rw-data ]
mov eax esi
sub eax [ esp ]
cdq
idiv [ ecx + 0x128 ]
mov ebp eax
mov eax ebx
cdq
idiv [ ecx + 0x12c ]
mov edx ebp
mov ecx eax
call sub_489272
mov eax [ rw-data ]
mov edx [ esp + 0x4 ]
mov edi [ esp + 0x18 ]
mov ecx [ eax + 0x12c ]
sub edi [ esp + 0x10 ]
imul ecx [ rw-data ]
sub edi [ esp + 0x28 ]
sub edx ecx
add edi [ esp + 0x20 ]
mov ecx edx
shr ecx 0x1f
add ecx edx
mov edx ecx
and ecx 0xfffffffe
sar edx 0x1
add ecx edi
mov [ rw-data ] edx
mov eax [ eax + 0x128 ]
mov [ rw-data ] ecx
imul eax [ rw-data ]
sub esi eax
mov eax esi
shr eax 0x1f
add eax esi
mov esi [ esp + 0x1c ]
mov edx eax
and eax 0xfffffffe
sar edx 0x1
mov [ rw-data ] edx
sub esi [ esp + 0x14 ]
sub esi [ esp + 0x2c ]
add esi [ esp + 0x24 ]
add eax esi
mov [ rw-data ] eax
push 0x1
push 0x0
push [ rw-data ]
jmp r-xdata
cmp ebx esi
jle r-xdata
mov edi eax
mov eax ebp
cdq
idiv edi
mov [ rw-data ] eax
mov ebx [ DeleteObject@IAT ]
mov esi 0xffffff00
xor edi edi
mov eax ecx
cdq
idiv ebx
mov [ rw-data ] eax
mov [ esi + rw-data ] edi
mov [ esi + rw-data ] edi
add esi 0x4
jne r-xdata
push eax
call ebx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
call sub_489272
jmp r-xdata
sub_48a878
push esi
mov al [ rw-data ]
test al al
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
push [ rw-data ]
call [ eax + 0x24 ]
add esp 0x4
mov esi eax
test esi esi
js r-xdata
push 0x4
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
cmp esi 0x7fffffff
je r-xdata
push 0x0
push sub_489ebd
call sub_43023c
add esp 0x8
cmp esi 0x7fffffff
mov [ rw-data ] 0x1
je r-xdata
cmp eax 0x2
jne r-xdata
push 0x40
push [ r--data ]
push r--data
push [ rw-data ]
call [ MessageBoxA@IAT ]
jmp r-xdata
sub_48a8fd
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
call [ GetTickCount@IAT ]
mov ecx esi
mov ebx 0x4d2
xor edi edi
sub ecx eax
sub eax esi
cmp eax 0x7fffffff
cmovae edi ecx
push ebx
push [ rw-data ]
call [ KillTimer@IAT ]
push 0x0
push edi
push ebx
push [ rw-data ]
call [ SetTimer@IAT ]
mov [ rw-data ] esi
pop esi
pop edi
pop ebx
retn
sub_48a946
mov eax [ rw-data ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
retn
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
imul ecx [ rw-data ]
imul eax [ rw-data ]
add ecx [ rw-data ]
add eax [ rw-data ]
cmp ecx [ rw-data ]
jne r-xdata
mov [ rw-data ] ecx
mov [ rw-data ] eax
jmp sub_48a997
cmp eax [ rw-data ]
jne r-xdata
sub_48a997
push esi
sub esp 0x20
mov eax [ rw-data ]
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
cmp [ eax + 0x134 ] 0x0
je r-xdata
mov ecx [ esp + 0x1c ]
call sub_497c4a
add esp 0x20
pop esi
retn
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx ecx
or edx eax
js r-xdata
push ecx
push eax
call [ SetCaretPos@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
push [ rw-data ]
call ImmGetContext
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi eax
mov eax esp
mov [ eax ] 0x2
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
push eax
push esi
call ImmSetCompositionWindow
push esi
push [ rw-data ]
call ImmReleaseContext
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_48aa2a
push ebp
push ebx
push edi
push esi
sub esp 0xa8
mov eax [ rw-data ]
mov edx [ esp + 0xd4 ]
xor ebx ebx
mov ecx [ esp + 0xd0 ]
mov [ esp + 0xa4 ] eax
mov eax edx
mov edi ecx
and eax 0x3
mov eax edx
setne bl
shr ecx 0x16
inc ebx
and cl 0x1
imul ebx [ rw-data ]
mov ebp ebx
shl ebx cl
and eax 0x3
mov [ esp + 0x8 ] eax
mov eax [ esp + 0xc0 ]
mov [ esp + 0x10 ] ebx
je r-xdata
imul ebp eax
mov eax [ rw-data ]
mov ecx [ esp + 0xc4 ]
xor esi esi
add ebp [ rw-data ]
imul ecx eax
add ecx [ rw-data ]
mov [ esp + 0x14 ] ebp
mov [ esp + 0x3c ] ecx
mov ecx edi
test ecx 0x40000000
jne r-xdata
mov esi [ rw-data ]
lea ecx [ eax + eax ]
cmp ecx [ esi + 0x12c ]
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov ecx [ esp + 0xa4 ]
call sub_497c4a
add esp 0xa8
pop esi
pop edi
pop ebx
pop ebp
retn
and ecx 0xffcc0000
or ecx 0x20b04
xor edi edi
inc edi
mov [ esp ] edi
mov ecx [ rw-data ]
cmp [ ecx + 0x158 ] 0x0
mov ecx edi
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
and dl 0x3
je r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
mov ebp ecx
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0xc8 ]
shr ebp 0x13
mov ebx ebp
and ebx 0x10
movzx ecx [ ecx ]
mov edx ecx
add edx 0xffffdc46
movzx edx dx
cmp edx 0x3
ja r-xdata
cmp dl 0x1
jne r-xdata
xor edx edx
inc edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov [ esp + 0x2c ] 0x0
xor edx edx
jmp r-xdata
add cl 0x46
cmp cl 0x3
ja r-xdata
mov esi 0xc
mov esi 0x4
jmp r-xdata
mov ebp [ esp + 0xcc ]
mov eax ecx
or esi ebx
mov [ esp + 0x38 ] edx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
xor edx edx
jmp r-xdata
movzx ecx cl
jmp [ ecx * 4 + jump_table_41c524 ]
mov ebp [ esp + 0x4 ]
mov eax esi
and ecx 0xff00
or eax 0x20
cmp ecx 0xf000
cmovne eax esi
mov esi ebp
mov edi ebp
mov edx ebp
shr esi 0x9
and edi 0x1ff
and esi 0x1ff
cmp [ rw-data ] 0x2
sete cl
shr edx 0x12
and dl cl
movzx ecx dl
mov dl [ rw-data ]
or ecx eax
mov ebx ecx
or ebx 0x2
test dl dl
cmove ebx ecx
test ebp 0x80000
cmove ebx ecx
mov ecx ebx
call sub_48b775
xor eax eax
cmp [ ebx * 4 + rw-data ] eax
jne r-xdata
cmp ebp 0x2
jl r-xdata
mov eax [ esp + 0x8 ]
or eax 0x1
cmp eax 0x3
mov eax [ esp + 0xc8 ]
sete cl
and ebp 0x1
shl edx cl
mov cx [ rw-data ]
mov [ esp + 0x2c ] edx
mov edx ebp
mov [ eax ] cx
and [ esp + 0x4 ] 0xfff7ffff
add eax eax
neg eax
jmp r-xdata
mov ecx ebx
call sub_48b775
mov eax [ ebx * 4 + rw-data ]
mov edx [ esp + 0x4 ]
mov ebp [ esp + 0xc8 ]
test eax eax
mov ecx edx
cmove ebx eax
and ecx 0x100000
mov eax esi
cmove eax edi
test ecx ecx
mov ecx [ rw-data ]
cmove edi esi
cmp [ esp ] 0x0
jne r-xdata
mov ecx [ esp + 0x38 ]
xor eax eax
inc eax
test bl 0x2
cmovne ecx eax
and ebx 0xfffffffc
mov [ esp + 0x38 ] ecx
cmp ebp 0x1
jne r-xdata
mov eax [ esp + 0xc8 ]
movzx eax [ eax + 0x2 ]
and eax 0xfc00
cmp eax 0xdc00
jne r-xdata
mov ecx 0x66666667
imul ecx
mov eax edx
sar edx 0x1
shr eax 0x1f
add edx eax
mov edx edi
and edx 0x40000
je r-xdata
mov ecx [ esp + 0xc8 ]
mov edx [ esp + 0xcc ]
xor eax eax
jmp r-xdata
mov esi [ eax * 4 + rw-data ]
mov eax [ edx * 4 + rw-data ]
mov [ esp ] eax
push [ ebx * 4 + rw-data ]
mov edi [ esp + 0xc0 ]
push edi
call [ SelectObject@IAT ]
mov [ esp + 0x5c ] esi
push esi
push edi
call [ SetTextColor@IAT ]
push [ esp ]
push edi
call [ SetBkColor@IAT ]
cmp [ esp + 0x4 ] 0x0
js r-xdata
test ecx ecx
je r-xdata
test ecx ecx
mov edx edi
je r-xdata
mov [ ecx + eax * 2 ] 0xfffd
inc eax
cmp eax edx
jl r-xdata
mov cx [ ecx ]
push 0x1
push edi
push 0x2
push edi
jmp r-xdata
cmp edx 0xf
ja r-xdata
test [ esp + 0x4 ] 0x200000
je r-xdata
cmp eax 0xf
ja r-xdata
xor eax eax
xor ecx ecx
xor eax eax
xor edx edx
call [ SetBkMode@IAT ]
mov ebx [ esp + 0xcc ]
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x3c ]
imul esi ebx
mov [ esp + 0x70 ] ecx
mov edx eax
add esi ecx
mov ecx [ rw-data ]
mov [ esp + 0x74 ] edx
mov [ esp + 0x78 ] esi
add ecx edx
test ebx ebx
mov [ esp + 0x7c ] ecx
jle r-xdata
xor ecx ecx
cmp edx 0xff
seta cl
or edx ecx
or edx 0x8
jmp r-xdata
xor edx edx
cmp eax 0xff
seta dl
or eax edx
or eax 0x8
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov [ esp + 0x78 ] ecx
lea esi [ edi - 0x180b ]
movzx esi si
cmp esi 0x3
jb r-xdata
movzx ebx di
cmp ebx 0xdb40
jne r-xdata
push 0x0
push [ esp + 0xc0 ]
call [ SetTextAlign@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x44 ] ebx
mov [ esp + 0xc ] eax
mov eax [ esp + 0x10 ]
mov ecx eax
shr ecx 0x1f
add ecx eax
sar ecx 0x1
mov [ esp + 0x24 ] ecx
push 0x6
push [ esp + 0xc0 ]
call [ SetTextAlign@IAT ]
xor eax eax
mov [ esp + 0xc ] 0x0
inc eax
mov [ esp + 0x44 ] eax
jmp r-xdata
mov esi edx
mov esi [ esp + 0x10 ]
and edi 0xfff0
cmp edi 0xfe00
cmove esi ecx
add eax esi
mov ebx edi
and ebx 0xfc00
cmp ebx 0xd800
mov ebx [ esp + 0xcc ]
jne r-xdata
movzx ebx [ ebp + edx * 2 + 0x2 ]
add ebx 0x2300
movzx ebx bx
cmp ebx 0xf0
mov ebx [ esp + 0xcc ]
jae r-xdata
cmp [ esp + 0x8 ] 0x2
je r-xdata
test eax eax
mov eax [ esp + 0x3c ]
setns [ esp + 0x23 ]
lea eax [ ecx + eax ]
mov [ esp + 0x28 ] eax
xor eax eax
inc eax
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x2c ]
test ebx ebx
jle r-xdata
mov di [ ebp + edx * 2 ]
lea esi [ edx + 0x1 ]
cmp esi ebx
jge r-xdata
jmp r-xdata
movzx ebx [ ebp + edx * 2 + 0x2 ]
and ebx 0xfc00
cmp ebx 0xdc00
mov ebx [ esp + 0xcc ]
jne r-xdata
jmp r-xdata
test [ esp + 0x4 ] 0x80000
sete al
cmp [ esp + 0x38 ] 0x0
jne r-xdata
cmp ebx [ rw-data ]
mov [ esp + 0x30 ] edi
jle r-xdata
movzx eax [ ebp ]
mov ebx ecx
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
add eax [ esp + 0x14 ]
mov ecx [ rw-data ]
mov [ esp + 0x78 ] eax
mov ecx [ ecx + 0x12c ]
imul ecx [ rw-data ]
add ecx [ rw-data ]
cmp eax ecx
jle r-xdata
add eax [ esp + 0x10 ]
jmp r-xdata
inc esi
cmp esi ebx
mov edx esi
jl r-xdata
mov edi [ rw-data ]
cmp [ esp + 0x8 ] 0x3
jne r-xdata
or al [ rw-data ]
test al 0x1
jne r-xdata
test ebx ebx
mov [ esp + 0x1c ] ebp
mov [ esp ] ebx
jle r-xdata
lea eax [ ebx + ebx * 8 ]
mov ecx eax
sar ecx 0x1f
shr ecx 0x1d
add ecx eax
sar ecx 0x3
add ecx 0x10
mov [ rw-data ] ecx
push 0x4
push ecx
push [ rw-data ]
call sub_43f8db
add esp 0xc
mov ecx [ esp + 0xc ]
mov [ rw-data ] eax
test ecx ecx
cmovne ecx eax
mov [ esp + 0xc ] ecx
mov eax edi
sub eax ebx
jle r-xdata
movzx eax [ ebp + 0x2 ]
xor ebx ebx
and eax 0xfc00
cmp eax 0xdc00
sete bl
add ebx ecx
xor ebp ebp
push [ esp + 0x5c ]
push ebp
push ebp
call [ CreatePen@IAT ]
push eax
mov ebx [ esp + 0xc0 ]
push ebx
call [ SelectObject@IAT ]
mov esi eax
mov eax [ esp + 0x74 ]
add eax edi
push ebp
push eax
push [ esp + 0x78 ]
push ebx
call [ MoveToEx@IAT ]
add edi [ esp + 0x74 ]
push edi
push [ esp + 0x7c ]
push ebx
call [ LineTo@IAT ]
push esi
push ebx
call [ SelectObject@IAT ]
push eax
call [ DeleteObject@IAT ]
add edi edi
sub edi [ rw-data ]
movzx eax [ ebp ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
xor ecx ecx
movzx ecx [ ebp + ebx * 2 ]
mov esi ebx
lea edx [ ecx - 0x180b ]
movzx edx dx
cmp edx 0x3
jb r-xdata
and eax 0xfe00
cmp eax 0xf000
jne r-xdata
mov ecx eax
and ecx 0xff00
movzx ecx cx
cmp ecx 0xf100
jne r-xdata
lea edx [ ebx - 0x180b ]
movzx edx dx
cmp edx 0x3
jb r-xdata
movzx ebp bx
lea esi [ eax + ecx * 4 ]
cmp ebp 0xdb40
jne r-xdata
mov ebx esi
inc ebx
jmp r-xdata
mov edx ecx
and edx 0xfff0
movzx edx dx
cmp edx 0xfe00
je r-xdata
cmp [ rw-data ] ebx
jge r-xdata
cmp ebx [ rw-data ]
jle r-xdata
cmp ebx [ rw-data ]
jle r-xdata
test ecx ecx
jle r-xdata
and ebx 0xfff0
movzx edx bx
cmp edx 0xfe00
je r-xdata
mov ebp ebx
and ebp 0xfc00
cmp ebp 0xd800
mov ebp [ esp + 0x1c ]
jne r-xdata
mov edi [ esp + 0x1c ]
movzx ebp [ edi + ecx * 2 + 0x2 ]
add ebp 0x2300
movzx ebp bp
cmp ebp 0xef
mov ebp edi
ja r-xdata
cmp eax 0x2
jl r-xdata
test ebx ebx
mov ebx [ esp + 0x30 ]
jle r-xdata
push [ rw-data ]
call sub_43f9d4
add esp 0x4
mov [ rw-data ] ebx
push 0x2
push ebx
call sub_43f807
add esp 0x8
mov [ rw-data ] eax
mov eax [ rw-data ]
test ebx ebx
jle r-xdata
mov [ rw-data ] ebx
push 0x1
push ebx
push [ rw-data ]
call sub_43f8db
add esp 0xc
mov [ rw-data ] eax
test ebx ebx
jle r-xdata
push [ rw-data ]
call sub_43f9d4
add esp 0x4
mov [ rw-data ] ebx
push 0x2
push ebx
call sub_43f807
add esp 0x8
mov [ rw-data ] eax
mov ebx [ esp ]
mov edx [ esp + 0x10 ]
mov [ eax + ecx * 4 ] edx
lea esi [ eax + ecx * 4 - 0x4 ]
mov edx ecx
mov ebx [ esp ]
jmp r-xdata
mov edi [ esp + 0x1c ]
movzx ebp [ edi + ecx * 2 + 0x2 ]
and ebp 0xfc00
cmp ebp 0xdc00
mov ebp [ esp + 0x1c ]
je r-xdata
test ecx ecx
jle r-xdata
mov ebx esi
movzx eax cx
cmp eax 0xdb40
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x24 ]
lea edi [ eax + ecx ]
mov edx [ rw-data ]
mov esi [ esp ]
xor eax eax
xor ecx ecx
cmp [ esp + 0x18 ] 0x0
mov edx [ rw-data ]
mov esi 0x0
mov edi [ esp + 0x24 ]
setne cl
neg edx
cmp [ esp + 0x8 ] 0x3
lea ecx [ ecx + ecx + 0x4 ]
cmovne edx esi
mov esi [ esp + 0x14 ]
add edx [ esp + 0x28 ]
lea esi [ esi + edi ]
push [ esp + 0xc ]
push [ esp + 0x4 ]
push eax
lea eax [ esp + 0x7c ]
push eax
push ecx
push edx
push esi
push [ esp + 0xd8 ]
call [ ExtTextOutA@IAT ]
test [ esp + 0x4 ] 0x40000
mov ebx [ esp + 0x30 ]
je r-xdata
mov ecx [ esp ]
mov edx eax
mov esi ebp
xor ebx ebx
xor ebp ebp
xor esi esi
mov edx [ esp + 0x10 ]
mov [ eax + ecx * 4 ] edx
lea edx [ ecx + 0x1 ]
cmp edx ebx
mov bx [ ebp + ecx * 2 ]
jge r-xdata
inc ecx
cmp ecx ebx
jl r-xdata
mov ecx edx
mov [ esi ] 0x0
mov [ eax + ecx * 4 - 0x4 ] 0x0
jmp r-xdata
mov ebx esi
movzx eax [ ebp + ebx * 2 + 0x2 ]
lea ecx [ ebx + 0x2 ]
add eax 0x2300
movzx eax ax
cmp eax 0xf0
cmovb ebx ecx
jmp r-xdata
push 0x1
push [ esp + 0xc0 ]
call [ SetBkMode@IAT ]
mov eax [ esp + 0x64 ]
mov ecx [ esp ]
imul eax [ esp + 0x10 ]
lea ebp [ ebp + ecx * 2 ]
add [ esp + 0x14 ] eax
xor eax eax
sub ebx ecx
jg r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
movzx ecx [ ebp + eax * 2 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp esi eax
jne r-xdata
mov [ esp + 0x40 ] edx
cmp [ esp + 0x8 ] 0x3
mov eax [ rw-data ]
mov edi [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
mov ecx 0x0
cmovne eax ecx
lea edi [ edi + edx ]
test esi esi
jle r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov bl [ esi ]
add esi 0x2
mov [ edx ] bl
inc edx
dec ecx
jne r-xdata
mov al [ edi + ebp * 2 ]
mov [ esp + 0x80 ] al
mov eax [ rw-data ]
add eax ebx
xor ecx ecx
inc ecx
push ecx
push eax
push ecx
lea eax [ esp + 0x8c ]
push eax
push 0x4
push [ rw-data ]
mov al [ edi + ebp * 2 ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x80 ] al
mov al [ edi + ebp * 2 + 0x2 ]
inc ebp
mov [ esp + 0x81 ] al
mov eax [ rw-data ]
add [ eax + esi * 4 ] ecx
mov eax [ rw-data ]
add eax ebx
xor ecx ecx
inc ecx
push ecx
push eax
push 0x2
lea eax [ esp + 0x8c ]
push eax
push 0x4
push [ rw-data ]
jmp r-xdata
mov edx [ esp + 0x44 ]
mov ecx ebx
mov edi ebx
mov [ esp + 0x18 ] eax
cmp edx ebx
cmovle ecx edx
cmp edx 0x1
mov ebx ecx
mov [ esp + 0x64 ] ecx
jne r-xdata
push 0x1
mov eax [ esp + 0xc0 ]
mov esi eax
push esi
call [ SetBkMode@IAT ]
xor eax eax
mov ecx 0x0
sub eax [ rw-data ]
cmp [ esp + 0x8 ] 0x3
cmovne eax ecx
dec edi
add eax [ esp + 0x28 ]
push [ esp + 0xc ]
push [ esp + 0x4 ]
push [ rw-data ]
lea ecx [ esp + 0x7c ]
push ecx
push 0x4
push eax
push edi
push esi
call [ ExtTextOutW@IAT ]
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x3c ]
mov esi [ esp ]
mov ebx edi
mov [ esp + 0x60 ] edi
sub ecx eax
mov eax [ rw-data ]
add ecx [ esp + 0x2c ]
cmp [ esp + 0x18 ] 0x0
mov [ esp + 0x58 ] eax
setne al
xor ebp ebp
mov [ esp + 0x48 ] ecx
and al [ esp + 0x23 ]
movzx eax al
push 0x1
mov eax [ esp + 0xc0 ]
mov edi eax
push edi
call [ SetBkMode@IAT ]
xor eax eax
mov ecx 0x0
sub eax [ rw-data ]
cmp [ esp + 0x8 ] 0x3
cmovne eax ecx
dec esi
add eax [ esp + 0x28 ]
push [ esp + 0xc ]
push [ esp + 0x4 ]
push [ rw-data ]
lea ecx [ esp + 0x7c ]
push ecx
push 0x4
push eax
push esi
push edi
call [ ExtTextOutA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + esi * 2 ] 0xfffd
mov edi [ esp + 0x1c ]
movzx eax [ edi + ebp * 2 ]
push eax
push [ rw-data ]
call [ IsDBCSLeadByteEx@IAT ]
test eax eax
je r-xdata
mov eax esi
dec eax
js r-xdata
call [ MultiByteToWideChar@IAT ]
inc ebp
inc esi
add ebx 0x2
cmp ebp [ esp ]
jl r-xdata
mov esi [ esp + 0x40 ]
mov esi [ esp + 0x40 ]
xor eax eax
cmp [ esp + 0x18 ] 0x0
mov edx 0x0
mov edi [ esp + 0x24 ]
setne al
xor ecx ecx
sub ecx [ rw-data ]
cmp [ esp + 0x8 ] 0x3
lea eax [ eax + eax + 0x4 ]
cmovne ecx edx
mov edx [ esp + 0x14 ]
add ecx [ esp + 0x28 ]
lea edi [ edx + edi ]
push [ esp + 0xc ]
push esi
push [ rw-data ]
lea edx [ esp + 0x7c ]
push edx
push eax
push ecx
push edi
push [ esp + 0xd8 ]
call [ ExtTextOutW@IAT ]
test [ esp + 0x4 ] 0x40000
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x30 ]
je r-xdata
xor eax eax
cmp [ esp + 0x50 ] 0x0
setne al
lea eax [ eax + eax + 0x4 ]
push ecx
push edx
push esi
lea ecx [ esp + 0x7c ]
push ecx
push eax
push [ esp + 0x5c ]
push [ esp + 0x6c ]
mov esi [ esp + 0xd8 ]
push esi
call [ ExtTextOutW@IAT ]
xor eax eax
mov [ esp + 0x6c ] esi
lea edi [ edx + edx + 0x2 ]
inc eax
push eax
push edi
mov esi edx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x54 ] esi
call sub_43f807
add esp 0x8
mov [ esp + 0x34 ] eax
xor eax eax
inc eax
push eax
push esi
call sub_43f807
add esp 0x8
mov [ esp + 0x68 ] eax
lea eax [ esp + 0x84 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
push edi
push ecx
mov esi [ esp + 0x3c ]
push esi
call sub_49acf0
add esp 0xc
push [ esp + 0x4c ]
push 0x3
mov edi [ esp + 0x70 ]
push edi
call sub_49acf0
add esp 0xc
mov [ esp + 0x80 ] 0x24
mov [ esp + 0x98 ] esi
mov esi [ esp + 0x4c ]
mov [ esp + 0x94 ] edi
mov [ esp + 0x9c ] esi
push 0x8113b
lea eax [ esp + 0x84 ]
push eax
mov eax 0x0
push eax
push esi
mov edi esi
push [ esp + 0x7c ]
mov esi [ esp + 0xd0 ]
push esi
call [ GetCharacterPlacementW@IAT ]
xor eax eax
cmp [ esp + 0x50 ] 0x0
setne al
lea eax [ eax + eax + 0x14 ]
push [ esp + 0x18 ]
push edi
push [ esp + 0x3c ]
lea ecx [ esp + 0x7c ]
push ecx
push eax
push [ esp + 0x5c ]
push [ esp + 0x6c ]
push esi
call [ ExtTextOutA@IAT ]
jmp r-xdata
mov al [ rw-data ]
mov ecx [ esp + 0x18 ]
mov edx ebp
test al al
mov eax 0x0
cmovne ecx eax
mov eax [ esp + 0x34 ]
sub edx eax
test edi edi
lea esi [ esi + eax * 2 ]
je r-xdata
mov eax [ esp + 0x58 ]
add ebx [ eax + ebp * 4 ]
inc ebp
cmp ebp [ esp ]
jl r-xdata
mov eax [ rw-data ]
mov [ eax ] 0xffffffff
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x40 ]
movzx eax [ eax + ebp * 2 ]
push eax
call sub_43d85d
add esp 0x4
mov edi eax
mov eax [ esp + 0x58 ]
lea ecx [ eax + ebp * 4 ]
mov eax ebx
mov [ esp + 0x18 ] ecx
mov ebx [ ecx ]
mov [ esp + 0x34 ] ebp
inc ebp
mov [ esp + 0x54 ] eax
add ebx eax
cmp ebp esi
jge r-xdata
push edi
push [ esp + 0xc0 ]
call [ SetBkMode@IAT ]
mov eax [ esp + 0x4 ]
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x30 ]
mov edi [ esp + 0x60 ]
jmp r-xdata
push esi
call [ GetBkMode@IAT ]
mov edi eax
push 0x1
push esi
call [ SetBkMode@IAT ]
mov esi [ esp ]
xor eax eax
cmp ebp esi
jl r-xdata
movzx eax [ esi + ebp * 2 ]
push eax
call sub_43d85d
add esp 0x4
cmp edi eax
jne r-xdata
jmp r-xdata
push 0x1
mov eax [ esp + 0xc0 ]
push eax
call [ SetBkMode@IAT ]
xor eax eax
mov ecx 0x0
sub eax [ rw-data ]
cmp [ esp + 0x8 ] 0x3
cmovne eax ecx
dec edi
add eax [ esp + 0x28 ]
push [ esp + 0xc ]
push esi
push [ rw-data ]
lea ecx [ esp + 0x7c ]
push ecx
push 0x4
push eax
push edi
push [ esp + 0xd8 ]
call [ ExtTextOutW@IAT ]
test eax 0x40000
je r-xdata
sub_48b775
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov ebx ecx
cmp ebx 0x3f
ja r-xdata
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
mov ecx ebx
and ecx 0xfffffffc
cmp ecx ebx
je r-xdata
push 0x75
push [ rw-data ]
call sub_431e49
add esp 0x8
mov ecx [ eax ]
mov edx 0x2bc
mov esi 0x384
mov edi [ rw-data ]
mov [ esp + 0x4 ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
test ecx ecx
cmove esi edx
cmove edx ecx
mov ecx ebx
shr cl 0x2
and cl 0x1
shl edi cl
test bl 0x10
je r-xdata
cmp [ ecx * 4 + rw-data ] 0x0
jne r-xdata
test bl 0x20
mov ecx 0xff
mov ebp ebx
cmove ecx eax
test bl 0x1
cmove esi edx
shr ebp 0x1
mov [ esp ] ecx
and ebp 0x1
push 0x76
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
mov ecx 0x0
je r-xdata
lea ecx [ edi + 0x1 ]
shr ecx 0x1f
lea edi [ edi + ecx + 0x1 ]
sar edi 0x1
call sub_48b775
mov eax ebx
shr eax 0x3
and eax 0x1
inc eax
imul eax [ rw-data ]
push [ esp + 0x4 ]
xor edx edx
push edx
push ecx
push edx
push edx
push [ esp + 0x14 ]
push edx
push ebp
push edx
push esi
push edx
push edx
push edi
push eax
call [ CreateFontA@IAT ]
mov [ ebx * 4 + rw-data ] eax
xor eax eax
inc eax
mov [ ebx * 4 + rw-data ] eax
cmp eax 0x1
jne r-xdata
xor ecx ecx
cmp eax 0x2
setne cl
lea ecx [ ecx + ecx + 0x3 ]
mov ecx 0x4
jmp r-xdata
sub_48b88d
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov esi [ esp + 0x3c ]
test esi esi
js r-xdata
mov eax [ esp + 0x40 ]
xor ecx ecx
inc ecx
mov [ esp + 0xc ] eax
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x34 ]
mov [ esp + 0x8 ] eax
cmp ebx 0x2
mov eax [ esp + 0x2c ]
mov [ esp + 0x4 ] eax
mov edi [ esp + 0x28 ]
jl r-xdata
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
jmp sub_48aa2a
mov eax ebx
sub eax ecx
jle r-xdata
movzx eax [ ebp ]
and eax 0xfc00
cmp eax 0xd800
jne r-xdata
and esi 0x7fffffff
xor eax eax
jmp r-xdata
mov [ esp ] ecx
movzx ecx [ ebp + ecx * 2 ]
lea edx [ ecx - 0x180b ]
movzx edx dx
cmp edx 0x3
jb r-xdata
movzx eax [ ebp + 0x2 ]
xor ecx ecx
and eax 0xfc00
cmp eax 0xdc00
sete cl
inc ecx
test ebx ebx
jne r-xdata
mov eax [ esp ]
and esi 0x7fffffff
inc eax
mov [ esp + 0x10 ] eax
push [ esp + 0xc ]
push esi
push eax
push ebp
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push edi
call sub_48aa2a
add esp 0x1c
mov eax [ esp ]
lea ebp [ ebp + eax * 2 + 0x2 ]
mov edx ecx
and edx 0xfff0
movzx edx dx
cmp edx 0xfe00
je r-xdata
cmp ebx 0x2
jl r-xdata
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ esp ]
cmp eax 0x2
jl r-xdata
dec ebx
or eax esi
push [ esp + 0xc ]
push eax
push 0x1
push ebp
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push edi
call sub_48aa2a
add esp 0x1c
movzx ecx [ ebp ]
and ecx 0xfc00
cmp ecx 0xd800
jne r-xdata
movzx eax cx
cmp eax 0xdb40
jne r-xdata
movzx ecx [ ebp + 0x2 ]
and ecx 0xfc00
cmp ecx 0xdc00
jne r-xdata
movzx eax [ ebp + edx * 2 + 0x2 ]
add eax 0x2300
movzx eax ax
cmp eax 0xef
ja r-xdata
or eax esi
push [ esp + 0xc ]
push eax
push 0x2
push ebp
lea ebp [ ebp + 0x2 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push edi
call sub_48aa2a
add esp 0x1c
add ebx 0xfffffffe
jmp r-xdata
and esi 0x7fffffff
lea eax [ edx + 0x2 ]
mov [ esp + 0x10 ] eax
push [ esp + 0xc ]
push esi
push eax
push ebp
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push edi
call sub_48aa2a
add esp 0x1c
mov eax [ esp ]
lea ebp [ ebp + eax * 2 + 0x4 ]
jmp r-xdata
add ebp 0x2
mov eax 0x80000000
sub ebx [ esp + 0x10 ]
mov eax 0x80000000
jmp r-xdata
sub_48ba3c
push ebp
push ebx
push edi
push esi
sub esp 0x38
mov edx [ rw-data ]
mov ecx [ esp + 0x64 ]
mov eax [ esp + 0x60 ]
mov esi [ esp + 0x54 ]
mov ebx [ esp + 0x50 ]
mov [ esp + 0x34 ] edx
and ecx 0x3
test eax 0x40000000
mov edx [ rw-data ]
je r-xdata
xor ebp ebp
inc ebp
cmp ecx ebp
mov [ esp + 0x4 ] ebp
mov ecx eax
sbb ebp 0xffffffff
shr ecx 0x16
imul ebp [ rw-data ]
and cl 0x1
mov edi ebp
imul ebp ebx
shl edi cl
mov ecx [ rw-data ]
add ebp [ rw-data ]
imul esi ecx
add esi [ rw-data ]
test eax 0x20000000
jne r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
mov edx [ esp + 0x58 ]
movzx edi [ edx ]
cmp edi 0xdfff
jne r-xdata
mov edi [ rw-data ]
cmp [ edi + 0x158 ] 0x0
je r-xdata
lea ebx [ esp + 0xc ]
lea eax [ edi + ebp - 0x1 ]
mov [ ebx + 0x20 ] ebp
mov [ ebx + 0x8 ] ebp
mov [ ebx ] ebp
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x10 ] eax
lea eax [ esi + ecx - 0x1 ]
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x1c ] esi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x14 ] eax
mov [ ebx + 0xc ] eax
xor eax eax
push [ rw-data ]
push eax
push eax
call [ CreatePen@IAT ]
mov edi [ SelectObject@IAT ]
push eax
mov eax [ esp + 0x50 ]
mov ebp eax
push ebp
call edi
mov esi eax
push 0x5
push ebx
push ebp
call [ Polyline@IAT ]
push esi
push ebp
call edi
push eax
jmp r-xdata
mov ebx [ rw-data ]
cmp [ ebx + 0x158 ] 0x0
je r-xdata
mov ecx [ esp + 0x34 ]
call sub_497c4a
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx eax
and ebx 0x60000000
je r-xdata
push ecx
push eax
push [ esp + 0x64 ]
push edx
push esi
push ebx
push [ esp + 0x64 ]
call sub_48b88d
add esp 0x1c
jmp r-xdata
or eax 0x10000000
mov edx 0x2
call [ DeleteObject@IAT ]
cmp edx 0x1
jne r-xdata
lea edx [ eax * 8 ]
dec edi
sar edx 0x1f
and edi edx
xor edx edx
add ebp edi
mov edi ecx
add esi [ rw-data ]
xor edx edx
mov [ esp + 0x4 ] 0x0
inc edx
jmp r-xdata
mov [ esp + 0x8 ] edi
xor eax eax
push [ rw-data ]
push eax
push eax
mov ebx edx
call [ CreatePen@IAT ]
mov edi [ SelectObject@IAT ]
push eax
mov eax [ esp + 0x50 ]
push eax
call edi
mov [ esp ] eax
xor eax eax
push eax
push esi
push ebp
push [ esp + 0x58 ]
call [ MoveToEx@IAT ]
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
neg ebx
neg eax
and ebx ecx
and eax ecx
add ebx ebp
add eax esi
push eax
push ebx
mov esi [ esp + 0x54 ]
push esi
call [ LineTo@IAT ]
push [ esp ]
push esi
call edi
push eax
test edi edi
jle r-xdata
test eax 0x40000000
jne r-xdata
xor ebx ebx
add esi [ esp + 0x4 ]
inc ebx
add ebp edx
cmp edi ebx
jne r-xdata
push [ rw-data ]
push esi
push ebp
push [ esp + 0x58 ]
mov [ esp + 0x10 ] esi
mov esi edi
mov edi edx
call [ SetPixel@IAT ]
mov edx edi
mov edi esi
mov esi [ esp ]
test bl 0x1
jne r-xdata
jmp r-xdata
sub_48bc68
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
xor eax eax
xor esi esi
inc esi
cmp [ rw-data ] eax
mov [ esp ] eax
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x20 ]
mov eax ebx
and eax 0xffffff00
cmp eax 0xda00
je r-xdata
movzx eax bl
lea eax [ eax + eax + rw-data ]
jmp r-xdata
cmp eax 0xd900
je r-xdata
movzx ebx [ eax ]
movzx eax bl
lea eax [ eax + eax + rw-data ]
cmp eax 0xd800
jne r-xdata
lea eax [ ebx - 0x20 ]
cmp eax 0x5f
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ esp + 0x1c ]
mov eax ebx
and eax 0xfffffe00
cmp eax 0xf000
jne r-xdata
movzx eax bl
lea eax [ eax + eax + rw-data ]
jmp r-xdata
push [ rw-data ]
push edi
call [ SelectObject@IAT ]
mov esi esp
push esi
push ebx
push ebx
push edi
call [ GetCharWidth32W@IAT ]
cmp eax 0x1
je r-xdata
movzx ebp bl
lea eax [ ebp - 0x20 ]
cmp eax 0x5f
jb r-xdata
mov ecx [ rw-data ]
mov edx [ esp ]
mov eax ecx
shr eax 0x1f
add eax ecx
sar eax 0x1
lea eax [ eax + edx - 0x1 ]
cdq
idiv ecx
mov esi eax
mov [ esp ] esi
push esi
push ebx
push ebx
push edi
call [ GetCharWidthW@IAT ]
xor esi esi
and ebx 0xffffff00
xor esi esi
cmp ebx 0xf000
je r-xdata
jmp r-xdata
mov ecx 0x20
call sub_48b775
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ebx 0xf100
jne r-xdata
push eax
push edi
push [ rw-data ]
push edi
jmp r-xdata
push ebx
push ebp
push ebp
push edi
call [ GetCharWidthA@IAT ]
jmp r-xdata
call [ SelectObject@IAT ]
mov ebx esp
push ebx
push ebp
push ebp
push edi
call [ GetCharWidth32A@IAT ]
cmp eax 0x1
jne r-xdata
cmp eax 0x1
je r-xdata
sub_48bdc6
push esi
mov esi [ esp + 0xc ]
push [ rw-data ]
call sub_43f9d4
add esp 0x4
push esi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ rw-data ] eax
push esi
push eax
call sub_4a7c00
add esp 0x8
push 0x72
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
jne r-xdata
push esi
push [ rw-data ]
call [ SetWindowTextA@IAT ]
push [ rw-data ]
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
pop esi
retn
sub_48be32
push esi
mov esi [ esp + 0xc ]
push [ rw-data ]
call sub_43f9d4
add esp 0x4
push esi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ rw-data ] eax
push esi
push eax
call sub_4a7c00
add esp 0x8
push 0x72
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
jne r-xdata
pop esi
retn
push [ rw-data ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push esi
push [ rw-data ]
call [ SetWindowTextA@IAT ]
sub_48be9e
sub esp 0x20
mov eax [ rw-data ]
mov [ esp + 0x1c ] eax
call sub_48bf22
cmp eax 0x1
mov eax 0x6d
sbb eax 0xffffffff
push eax
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
call sub_497c4a
add esp 0x20
retn
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
mov [ esp ] 0x1c
mov [ esp + 0x4 ] 0x1f
mov [ esp + 0x8 ] 0x0
mov ecx [ esp + 0x2c ]
dec edx
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
mov eax [ rw-data ]
mov [ esp + 0x14 ] ecx
test eax eax
je r-xdata
xor ecx ecx
mov edx esp
inc ecx
push ecx
push edx
push ecx
push eax
call [ SetScrollInfo@IAT ]
sub_48bf22
push [ rw-data ]
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
push 0xfffffff0
push [ rw-data ]
call [ GetWindowLongA@IAT ]
mov ecx eax
xor eax eax
test ecx 0xc00000
sete al
retn
sub_48bf51
push esi
mov eax [ rw-data ]
test eax eax
je r-xdata
xor esi esi
push eax
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push eax
push esi
call [ SelectPalette@IAT ]
jmp r-xdata
sub_48bf83
push esi
mov esi [ esp + 0x8 ]
push 0xf
call [ GetStockObject@IAT ]
push 0x0
push eax
push esi
call [ SelectPalette@IAT ]
push esi
push [ rw-data ]
call [ ReleaseDC@IAT ]
pop esi
retn
sub_48bfa9
push ebx
push edi
push esi
mov eax [ esp + 0x14 ]
lea esi [ eax + 0xf0 ]
cmp eax 0xf
cmovle esi eax
cmp esi 0x105
jg r-xdata
pop esi
pop edi
pop ebx
retn
mov ecx [ rw-data ]
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
test ecx ecx
je r-xdata
shl edx 0x8
shl eax 0x10
movzx ecx bl
movzx edx dx
and eax 0xff0000
or edx ecx
or eax edx
mov [ esi * 4 + rw-data ] eax
mov edi [ rw-data ]
mov [ edi + esi * 4 + 0x4 ] bl
mov [ edi + esi * 4 + 0x5 ] dl
shl edx 0x8
mov [ edi + esi * 4 + 0x6 ] al
shl eax 0x10
movzx ebx bl
mov [ edi + esi * 4 + 0x7 ] 0x4
lea edi [ edi + 0x4 ]
movzx edx dx
and eax 0xff0000
or edx ebx
xor ebx ebx
lea eax [ eax + edx + 0x2000000 ]
mov [ esi * 4 + rw-data ] eax
push edi
push 0x106
push ebx
push ecx
call [ SetPaletteEntries@IAT ]
cmp [ rw-data ] ebx
je r-xdata
push 0x1
push 0x0
push [ rw-data ]
call [ InvalidateRect@IAT ]
cmp esi 0x102
jne r-xdata
sub esp 0x4
call sub_48bf51
add esp 0x4
mov esi eax
push [ rw-data ]
call [ UnrealizeObject@IAT ]
push esi
call [ RealizePalette@IAT ]
push esi
call sub_48bf83
add esp 0x4
jmp r-xdata
sub_48c094
push ebx
push edi
push esi
mov edi [ rw-data ]
mov ecx [ rw-data ]
xor edx edx
movzx ebx [ edx + edx * 2 + rw-data ]
movzx eax [ edx + edx * 2 + rw-data ]
shl ebx 0x8
shl eax 0x10
or ebx esi
or eax ebx
mov [ ecx + edx * 4 + 0x4 ] al
movzx ebx [ edx + edx * 2 + rw-data ]
mov [ ecx + edx * 4 + 0x5 ] bl
shl ebx 0x8
movzx eax [ edx + edx * 2 + rw-data ]
or ebx esi
mov [ ecx + edx * 4 + 0x6 ] al
shl eax 0x10
mov [ ecx + edx * 4 + 0x7 ] 0x0
lea eax [ eax + ebx + 0x2000000 ]
jmp r-xdata
mov al [ edx + edx * 2 + rw-data ]
test edi edi
movzx esi al
je r-xdata
test edi edi
je r-xdata
mov [ edx * 4 + rw-data ] eax
inc edx
cmp edx 0x106
jne r-xdata
push 0x1
push 0x0
push [ rw-data ]
call [ InvalidateRect@IAT ]
add ecx 0x4
push ecx
push 0x106
push 0x0
push edi
call [ SetPaletteEntries@IAT ]
sub esp 0x4
call sub_48bf51
add esp 0x4
mov esi eax
push esi
call [ RealizePalette@IAT ]
push esi
call sub_48bf83
add esp 0x4
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_48c158
push ebp
push ebx
push edi
push esi
mov ebp [ esp + 0x1c ]
lea eax [ ebp + 0x1 ]
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
call [ GlobalLock@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ebx [ esp + 0x20 ]
push ebp
push [ esp + 0x1c ]
push edi
call sub_49a1f0
add esp 0xc
mov [ edi + ebp ] 0x0
push esi
call [ GlobalUnlock@IAT ]
test ebx ebx
jne r-xdata
push [ rw-data ]
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x1
push 0x8002
push [ rw-data ]
call [ SendMessageA@IAT ]
push esi
call [ GlobalFree@IAT ]
call [ EmptyClipboard@IAT ]
push esi
push 0x1
call [ SetClipboardData@IAT ]
call [ CloseClipboard@IAT ]
jmp r-xdata
xor eax eax
push eax
push eax
push 0x8002
push [ rw-data ]
call [ SendMessageA@IAT ]
test ebx ebx
jne r-xdata
sub_48c208
push ebp
push ebx
push edi
push esi
sub esp 0x674
mov eax [ rw-data ]
mov esi [ esp + 0x694 ]
mov [ esp + 0x670 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push esi
push [ esp + 0x6a0 ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov ebp [ GlobalAlloc@IAT ]
mov edi eax
lea eax [ esi + esi ]
mov ebx 0x2002
mov [ esp ] eax
push eax
push ebx
call ebp
mov esi eax
mov [ esp + 0x18 ] edi
push edi
push ebx
call ebp
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
push esi
mov esi eax
call [ GlobalFree@IAT ]
mov eax esi
mov [ esp + 0x24 ] eax
push esi
mov ebx esi
call [ GlobalLock@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esp + 0x670 ]
call sub_497c4a
add esp 0x674
pop esi
pop edi
pop ebx
pop ebp
retn
push eax
call [ GlobalFree@IAT ]
jmp r-xdata
mov esi [ GlobalFree@IAT ]
push ebx
call esi
push [ esp + 0x24 ]
jmp r-xdata
mov [ esp + 0x2c ] ebx
mov ebx [ esp + 0x24 ]
push ebx
call [ GlobalLock@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
call esi
jmp r-xdata
mov edi [ esp + 0x2c ]
push edi
call [ GlobalUnlock@IAT ]
mov esi [ GlobalFree@IAT ]
push edi
call esi
push ebx
push [ esp ]
mov eax [ esp + 0x690 ]
mov ebx eax
push ebx
mov [ esp + 0x48 ] esi
push esi
call sub_49a1f0
add esp 0xc
xor edi edi
push edi
push edi
mov esi [ esp + 0x20 ]
push esi
push ebp
push [ esp + 0x6a4 ]
push ebx
push edi
push edi
call [ WideCharToMultiByte@IAT ]
push 0x8d
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov esi [ GlobalUnlock@IAT ]
push [ esp + 0x2c ]
call esi
push [ esp + 0x24 ]
call esi
cmp [ esp + 0x698 ] 0x0
jne r-xdata
push 0x75
push [ rw-data ]
call sub_431e49
add esp 0x8
mov edi eax
xor eax eax
lea ecx [ esp + 0x470 ]
push eax
push ecx
push eax
call sub_495dfd
add esp 0xc
push [ edi ]
call sub_4a7f30
add esp 0x4
add eax 0x64
push 0x1
mov [ esp + 0x2c ] eax
push eax
call sub_43f807
add esp 0x8
mov ecx [ edi + 0x8 ]
add ecx ecx
push ecx
push [ edi ]
push r--data
mov [ esp + 0x10 ] eax
push eax
call sub_432778
add esp 0x10
cmp [ esp + 0x690 ] 0x0
mov edi eax
mov [ esp + 0x10 ] ebp
je r-xdata
push [ rw-data ]
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x1
push 0x8002
push [ rw-data ]
call [ SendMessageA@IAT ]
mov ebp [ esp + 0x4 ]
lea eax [ esp + 0x48 ]
push 0x418
push 0x0
push eax
call sub_49acf0
add esp 0xc
cmp [ esp + 0x694 ] 0x2
jl r-xdata
mov esi [ GlobalFree@IAT ]
push [ esp + 0x2c ]
call esi
push [ esp + 0x24 ]
call esi
call [ EmptyClipboard@IAT ]
mov esi [ SetClipboardData@IAT ]
push [ esp + 0x2c ]
push 0xd
call esi
push [ esp + 0x24 ]
push 0x1
call esi
test edi edi
je r-xdata
mov [ ebp + edi ] 0x7d
mov [ ebp + edi + 0x2 ] 0x0
add edi 0x3
mov esi edi
push edi
push 0x2002
call [ GlobalAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
test esi esi
jle r-xdata
mov edx [ esp + 0x4 ]
xor eax eax
xor ecx ecx
mov eax [ esp + 0x694 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x690 ]
dec eax
mov [ esp ] ecx
mov [ esp + 0xc ] eax
xor eax eax
push eax
push eax
push 0x8002
push [ rw-data ]
call [ SendMessageA@IAT ]
call [ CloseClipboard@IAT ]
jmp r-xdata
push r--data
call [ RegisterClipboardFormatA@IAT ]
push edi
push eax
call [ SetClipboardData@IAT ]
push ebp
call sub_43f9d4
add esp 0x4
push edi
call [ GlobalLock@IAT ]
test eax eax
je r-xdata
xor ebx ebx
xor edx edx
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
inc ecx
cmp ecx 0x106
jne r-xdata
inc eax
mov [ esp + ecx * 4 + 0x48 ] eax
test esi 0x200000
je r-xdata
mov edi esi
and edi 0x40000
je r-xdata
cmp [ esp + 0x698 ] 0x0
jne r-xdata
push esi
push ebp
push eax
call sub_49a1f0
add esp 0xc
push edi
call [ GlobalUnlock@IAT ]
mov ecx [ esp + 0x40 ]
mov [ esp + 0x4 ] ebp
mov ebp esi
cmp [ ecx + edx * 2 ] 0x0
je r-xdata
cmp [ esp + ecx * 4 + 0x48 ] 0x0
je r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
add eax [ esp + 0x28 ]
push 0x1
push eax
push edx
call sub_43f8db
add esp 0xc
mov edi eax
push edi
call sub_4a7f30
add esp 0x4
xor esi esi
mov ebp edi
mov [ edi + eax + 0xc ] 0x0
mov [ edi + eax + 0x8 ] 0x3b206c62
mov [ edi + eax + 0x4 ] 0x74726f6c
mov [ edi + eax ] 0x6f635c7b
push edi
call sub_4a7f30
add esp 0x4
mov edi eax
inc [ esp + ebx * 4 + 0x48 ]
inc [ esp + ecx * 4 + 0x48 ]
add edx 0x4
dec [ esp + 0xc ]
jne r-xdata
cmp ecx 0x7
ja r-xdata
cmp ebx 0x7
ja r-xdata
mov ebp [ esp + 0x4 ]
lea ecx [ ebx + 0x1 ]
cmp ecx ebp
jge r-xdata
inc esi
cmp esi 0x106
jne r-xdata
movzx eax [ esi + esi * 2 + rw-data ]
movzx ecx [ esi + esi * 2 + rw-data ]
movzx edx [ esi + esi * 2 + rw-data ]
lea ebx [ ebp + edi ]
push eax
push ecx
push edx
push r--data
push ebx
call sub_432778
add esp 0x14
add edi eax
mov esi [ edx ]
mov ebp esi
mov ebx esi
mov edi esi
shr ebx 0x9
and ebp 0x1ff
and ebx 0x1ff
and edi 0x100000
mov ecx ebp
cmove ecx ebx
test edi edi
cmove ebx ebp
cmp [ esp ] 0x0
je r-xdata
cmp ecx 0xff
mov eax 0x0
seta al
add ecx eax
add ecx 0x8
jmp r-xdata
cmp ebx 0xff
mov eax 0x0
seta al
add ebx eax
add ebx 0x8
jmp r-xdata
mov ecx ebx
cmp al 0xd
jne r-xdata
cmp [ esp + esi * 4 + 0x48 ] 0x0
je r-xdata
mov [ ebp + edi ] 0x7d
inc edi
mov esi [ esp + 0x18 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
jmp r-xdata
lea eax [ edi + 0x40 ]
mov [ esp ] edi
cmp [ esp + 0x28 ] eax
jge r-xdata
mov esi [ esp + 0x10 ]
xor eax eax
cmp [ esi + ebx + 0x1 ] 0xa
sete al
cmovne ecx ebx
add edx eax
jmp r-xdata
cmp [ esp + 0x694 ] 0x0
jle r-xdata
xor edi edi
inc edi
movzx eax [ eax + ecx ]
mov ebx [ esp + 0x40 ]
movzx eax [ esp + eax * 2 + 0x470 ]
cmp ax [ ebx + edx * 2 ]
jne r-xdata
mov eax [ esp + 0x690 ]
mov edi [ eax + ecx * 4 ]
mov ecx edi
mov esi edi
mov edx edi
mov ebp edi
shr esi 0x9
and ecx 0x1ff
and esi 0x1ff
and edx 0x100000
mov ebx ecx
cmove ebx esi
test edx edx
cmove esi ecx
mov ecx [ rw-data ]
and ebp 0x40000
test ecx ecx
je r-xdata
lea eax [ edi + 0x200 ]
push 0x1
mov [ esp + 0x2c ] eax
push eax
push [ esp + 0xc ]
call sub_43f8db
mov ecx [ esp + 0x18 ]
add esp 0xc
mov [ esp + 0x4 ] eax
cmp [ esp + 0x690 ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0xc ] ecx
je r-xdata
lea eax [ esp + edx * 2 + 0x470 ]
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push edi
push eax
push ecx
push ecx
mov ebp edx
call [ WideCharToMultiByte@IAT ]
mov esi edi
mov edi eax
movzx eax [ ebx + ebp * 2 ]
cmp edi esi
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] 0x0
mov [ esp ] 0x0
mov [ esp + 0x460 ] al
mov [ esp + 0x44 ] al
mov eax [ esp + 0x18 ]
jmp r-xdata
test edi 0x200000
je r-xdata
test ebp ebp
je r-xdata
push eax
push edi
push r--data
lea eax [ esp + 0x46c ]
push eax
call sub_432778
add esp 0x10
mov [ esp + 0x8 ] eax
mov [ esp + 0x44 ] 0x7d
mov [ esp ] esi
push eax
push r--data
lea eax [ esp + 0x468 ]
push eax
call sub_432778
add esp 0xc
mov edi esi
mov [ esp + 0x8 ] eax
mov [ esp + 0x44 ] 0x0
mov [ esp ] 0x0
jmp r-xdata
lea edx [ edi + ecx ]
cmp edx eax
mov [ esp + 0x20 ] edx
jle r-xdata
mov edx [ rw-data ]
test edx edx
cmove ebp edx
test edi 0x100000
jne r-xdata
cmp ebx 0x7
ja r-xdata
cmp esi 0x7
ja r-xdata
mov eax [ esp ]
mov edx [ esp + 0x8 ]
test edi edi
lea esi [ eax + edx ]
jle r-xdata
push 0x145a
push r--data
push r--data
call sub_4a509d
mov ecx [ esp + 0x18 ]
add esp 0xc
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xc ]
mov [ esp + 0x8 ] ebx
jmp r-xdata
cmp ebx 0xff
mov eax ebx
mov edx 0xffffffff
cmovg eax edx
cmp esi 0x100
cmovl edx esi
mov [ esp + 0x8 ] eax
jl r-xdata
xor edx edx
cmp ebx 0xff
seta dl
add ebx edx
add ebx 0x8
jmp r-xdata
xor edx edx
cmp esi 0xff
seta dl
add esi edx
add esi 0x8
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esi + ecx + 0x3 ]
cmp [ esp + 0x28 ] eax
jge r-xdata
mov eax [ esp + 0x10 ]
lea eax [ eax + ecx ]
mov ecx edi
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x30 ]
cmp edx esi
jne r-xdata
mov esi edx
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
add esi ecx
add esi 0x200
push 0x1
push esi
push [ esp + 0xc ]
call sub_43f8db
mov ecx [ esp + 0x20 ]
add esp 0xc
mov [ esp + 0x28 ] esi
jmp r-xdata
mov ebp 0x6
cmp dl 0xa
je r-xdata
cmp dl 0x5c
je r-xdata
mov ecx [ esp + 0x4 ]
test esi esi
mov [ esp + 0x20 ] esi
js r-xdata
mov [ esp + 0x20 ] edx
jmp r-xdata
cmp ebx 0xff
mov edx esi
mov eax ebp
mov ecx 0x40000
cmovg eax ecx
test dl 0x1
cmovne ebp eax
xor esi esi
dec esi
jmp r-xdata
mov edx ebp
mov esi [ esp + 0xc ]
mov edx ebp
add esi [ esp + 0x10 ]
mov ebp eax
lea eax [ eax + ecx ]
mov esi ecx
lea ecx [ esp + 0x460 ]
push ecx
push eax
call sub_4a7c00
add esp 0x8
mov ebx [ esp + 0x8 ]
add ebx esi
test edi edi
jle r-xdata
add esi ebp
inc eax
dec ecx
jne r-xdata
cmp dl 0xd
je r-xdata
mov ebp 0x2
jmp r-xdata
cmp dl 0x7d
je r-xdata
xor eax eax
mov eax [ esp + esi * 4 + 0x48 ]
jmp r-xdata
mov edx [ esp + 0x8 ]
cmp ecx edx
jne r-xdata
mov ebx [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
cmp ebx esi
jl r-xdata
cmp al 0xa
je r-xdata
cmp al 0x5c
je r-xdata
mov dl [ eax ]
cmp dl 0x5b
jle r-xdata
add dl 0xe0
xor ebx ebx
cmp dl 0x5e
seta bl
lea ebp [ ebx + ebx * 2 + 0x1 ]
cmp dl 0x7b
jne r-xdata
test edx edx
js r-xdata
mov ebx ecx
jmp r-xdata
mov esi [ esp ]
lea ecx [ ecx + esi ]
push eax
push r--data
push ecx
call sub_432778
add esp 0xc
add esi eax
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x30 ]
mov [ esp ] esi
mov eax [ esp + 0x10 ]
mov al [ eax + ebx ]
test al al
je r-xdata
jmp r-xdata
mov [ edx + ebx + 0x6 ] 0x0
mov [ edx + ebx + 0x4 ] 0xa0d
mov [ edx + ebx ] 0x7261705c
add ebx 0x6
jmp r-xdata
cmp al 0xd
jne r-xdata
mov [ edx + ebx ] 0x5c
mov al [ esi ]
mov [ edx + ebx + 0x1 ] al
add ebx 0x2
jmp r-xdata
cmp al 0x7d
je r-xdata
xor eax eax
mov eax [ esp + edx * 4 + 0x48 ]
jmp r-xdata
and edi 0x80000
cmp eax ebp
mov [ esp + 0x8 ] ebx
jne r-xdata
inc esi
dec edi
jne r-xdata
mov ecx eax
add cl 0xe0
cmp cl 0x5f
jb r-xdata
cmp al 0x7b
jne r-xdata
xor ebx ebx
xor eax eax
test ebp ebp
mov esi [ esp ]
mov ecx r--data
mov edx r--data
sete al
cmovne ecx edx
setne bl
mov edx 0x5
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
sub edx ebx
lea eax [ eax + esi ]
push edx
push ecx
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esp + 0x14 ]
lea esi [ esi + eax + 0x3 ]
mov [ esp ] esi
mov ebp eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov esi [ esp ]
lea ecx [ ecx + esi ]
push eax
push r--data
push ecx
call sub_432778
add esp 0xc
add esi eax
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x8 ]
mov [ esp ] esi
mov al [ esi ]
cmp al 0x5b
jle r-xdata
jmp r-xdata
mov [ edx + ebx ] al
inc ebx
movzx eax al
lea ecx [ edx + ebx ]
push eax
push r--data
push ecx
call sub_432778
mov edx ebp
add esp 0xc
add ebx eax
jmp r-xdata
test edi edi
mov eax r--data
mov ecx r--data
mov esi edi
mov ebx ebp
mov ebp [ esp ]
cmovne eax ecx
mov ecx [ esp + 0x4 ]
shr esi 0x11
xor esi 0x4
lea edx [ esi + 0x4 ]
or edx 0x1
lea ecx [ ecx + ebp ]
push edx
push eax
push ecx
call sub_49a1f0
add esp 0xc
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x8 ]
lea eax [ ebp + esi + 0x4 ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x3c ] edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x34 ] edx
mov [ esp + 0x30 ] ecx
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x34 ] eax
mov [ esp + 0x30 ] edx
mov [ esp + 0x14 ] ecx
jmp r-xdata
cmp [ esp + 0x3c ] edi
jne r-xdata
lea ecx [ esp + 0x44 ]
lea eax [ edx + ebx ]
push ecx
push eax
call sub_4a7c00
add esp 0x8
mov edx [ esp + 0x38 ]
mov edi [ esp ]
inc edx
add edi ebx
cmp edx [ esp + 0x694 ]
jge r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0xc ]
sub_48cb7b
sub esp 0x8
mov eax [ rw-data ]
xor ecx ecx
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push ecx
push [ rw-data ]
push sub_48cbad
push ecx
push ecx
call [ CreateThread@IAT ]
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
retn
sub_48cbad
push esi
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
mov esi [ esp + 0x8 ]
push 0xd
call [ GetClipboardData@IAT ]
test eax eax
je r-xdata
push 0x1
call [ GetClipboardData@IAT ]
test eax eax
je r-xdata
push eax
push 0x1
push 0x8006
push esi
jmp r-xdata
call [ CloseClipboard@IAT ]
push eax
push 0x0
push 0x8006
push esi
call [ SendMessageA@IAT ]
sub_48cc18
push edi
push esi
sub esp 0x68
mov eax [ esp + 0x74 ]
lea ecx [ esp + 0x78 ]
mov [ esp ] ecx
push ecx
push eax
call sub_43fb4c
add esp 0x8
mov esi eax
lea edi [ esp + 0x4 ]
push [ r--data ]
push r--data
push edi
call sub_432778
add esp 0xc
push 0x10
push edi
push esi
push [ rw-data ]
call [ MessageBoxA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push 0x1
call sub_485b0d
sub_48cc6c
push edi
push esi
sub esp 0x68
mov eax [ esp + 0x74 ]
lea ecx [ esp + 0x78 ]
mov [ esp ] ecx
push ecx
push eax
call sub_43fb4c
add esp 0x8
mov esi eax
lea edi [ esp + 0x4 ]
push [ r--data ]
push r--data
push edi
call sub_432778
add esp 0xc
push 0x1010
push edi
push esi
push [ rw-data ]
call [ MessageBoxA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
push 0x1
call sub_485b0d
sub_48ccc3
push edi
push esi
sub esp 0x6c
mov ecx [ rw-data ]
mov eax [ esp + 0x78 ]
lea edx [ esp + 0x7c ]
mov [ esp + 0x68 ] ecx
mov [ esp ] edx
push edx
push eax
call sub_43fb4c
add esp 0x8
mov esi eax
lea edi [ esp + 0x4 ]
push [ r--data ]
push r--data
push edi
call sub_432778
add esp 0xc
push 0x10
push edi
push esi
push [ rw-data ]
call [ MessageBoxA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x68 ]
call sub_497c4a
add esp 0x6c
pop esi
pop edi
retn
sub_48cd29
push edi
push esi
sub esp 0xbc
mov eax [ esp + 0xcc ]
mov ecx [ rw-data ]
cmp eax 0x4
mov [ esp + 0xb8 ] ecx
je r-xdata
call [ GetTickCount@IAT ]
sub eax [ rw-data ]
cmp eax 0x32
jb r-xdata
cmp eax 0x3
je r-xdata
mov ecx [ esp + 0xb8 ]
call sub_497c4a
add esp 0xbc
pop esi
pop edi
retn
cmp [ rw-data ] 0x2
jne r-xdata
push 0x6c
push [ rw-data ]
call sub_431daf
add esp 0x8
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
push 0xffffffff
call [ MessageBeep@IAT ]
push 0x64
push 0x320
call [ Beep@IAT ]
jmp r-xdata
lea edi [ esp + 0x64 ]
push [ esi ]
push r--data
push edi
call sub_432778
add esp 0xc
mov esi esp
push [ r--data ]
push r--data
push esi
call sub_432778
add esp 0xc
push 0x30
push esi
push edi
push [ rw-data ]
call [ MessageBoxA@IAT ]
push 0x1
push 0x66
push [ rw-data ]
call sub_431ee3
add esp 0xc
jmp r-xdata
push 0x20001
push 0x0
push [ esi ]
call eax
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x134 ] 0x0
jne r-xdata
call [ GetTickCount@IAT ]
sub eax [ rw-data ]
cmp eax 0x32
jb r-xdata
mov ecx 0x2
call sub_48ce6e
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
push 0x0
call [ MessageBeep@IAT ]
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
jmp r-xdata
sub_48ce6e
push esi
sub esp 0x18
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x14 ] eax
push 0x67
push [ rw-data ]
call sub_43194f
add esp 0x8
test esi esi
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
add esp 0x18
pop esi
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x0
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
push 0x0
push [ rw-data ]
call [ FlashWindow@IAT ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx esp
mov [ ecx ] 0x14
mov [ ecx + 0x4 ] edx
xor edx edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
push ecx
call eax
jmp r-xdata
cmp esi 0x1
jne r-xdata
mov cl [ rw-data ]
test cl cl
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] 0x1
test ecx ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push [ rw-data ]
call [ FlashWindow@IAT ]
push [ rw-data ]
push sub_48d512
push 0x1c2
mov esi [ rw-data ]
xor edx edx
cmp eax 0x1
mov eax esp
setne dl
mov [ eax ] 0x14
add edx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] 0x7
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] 0x0
push eax
call ecx
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
push 0x1
push [ rw-data ]
call [ FlashWindow@IAT ]
push [ rw-data ]
push sub_48d512
push 0x1c2
jmp r-xdata
call sub_47d9f4
add esp 0xc
mov [ rw-data ] eax
sub_48cfb8
push esi
mov esi [ esp + 0xc ]
push [ rw-data ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop esi
retn
push 0x6
push [ rw-data ]
push 0x9
push [ rw-data ]
jmp r-xdata
call [ ShowWindow@IAT ]
sub_48cfef
push 0x6f
push [ rw-data ]
call sub_43194f
add esp 0x8
dec eax
cmp eax 0x2
jb r-xdata
retn
push [ rw-data ]
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
xor eax eax
push 0x5
push eax
push eax
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push eax
push [ rw-data ]
call [ SetWindowPos@IAT ]
retn
sub_48d032
push 0x56
push [ rw-data ]
call sub_43194f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
xor eax eax
test ecx ecx
sete al
xor ecx ecx
push 0x3
push ecx
push ecx
push ecx
push ecx
push eax
push [ rw-data ]
call [ SetWindowPos@IAT ]
retn
retn
sub_48d079
push esi
mov esi [ esp + 0xc ]
push [ rw-data ]
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop esi
retn
push 0x3
push [ rw-data ]
push 0x9
push [ rw-data ]
jmp r-xdata
call [ ShowWindow@IAT ]
sub_48d0bd
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov esi [ esp + 0x2c ]
mov edi [ esp + 0x28 ]
mov ebx esp
mov [ esp + 0x10 ] eax
push ebx
push [ rw-data ]
call [ GetWindowRect@IAT ]
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi ] eax
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
retn
sub_48d0fc
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov esi [ esp + 0x2c ]
mov edi [ esp + 0x28 ]
mov ebx esp
mov [ esp + 0x10 ] eax
push ebx
push [ rw-data ]
call [ GetWindowRect@IAT ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov [ esi ] eax
mov ecx [ esp + 0x10 ]
call sub_497c4a
add esp 0x14
pop esi
pop edi
pop ebx
retn
sub_48d18c
push ebx
push edi
push esi
mov ebx [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
push ebx
push edi
push esi
call sub_4302e0
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
pop esi
pop edi
pop ebx
retn
push ebx
push edi
push esi
push [ rw-data ]
call sub_47b389
add esp 0x10
sub_48d1c0
push edi
push esi
mov edi [ GetSysColor@IAT ]
mov esi 0xffffffd0
push [ esi + r--data ]
call edi
mov ecx [ esi + r--data ]
mov edx [ esi + r--data ]
mov [ ecx + ecx * 2 + rw-data ] al
mov [ edx + edx * 2 + rw-data ] al
mov [ ecx + ecx * 2 + rw-data ] ah
mov [ edx + edx * 2 + rw-data ] ah
shr eax 0x10
add esi 0xc
mov [ ecx + ecx * 2 + rw-data ] al
mov [ edx + edx * 2 + rw-data ] al
jne r-xdata
pop esi
pop edi
retn
sub_48d216
push esi
sub esp 0x7c
mov eax [ rw-data ]
mov esi edx
mov [ esp + 0x78 ] eax
test [ esi + 0x33 ] 0x1
jne r-xdata
mov eax esp
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push eax
push 0x39
push 0x30
push ecx
call [ GetCharABCWidthsFloatA@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
jmp r-xdata
mov esi [ esi + 0x18 ]
movsd xmm0 [ r--data ]
xor esi esi
mov eax 0x8
mov ecx [ esp + 0x78 ]
call sub_497c4a
mov eax esi
add esp 0x7c
pop esi
retn
xorps xmm1 xmm1
cvtss2sd xmm1 [ esp + eax - 0x8 ]
xorps xmm2 xmm2
cvtss2sd xmm2 [ esp + eax - 0x4 ]
xorps xmm3 xmm3
cvtss2sd xmm3 [ esp + eax ]
addsd xmm1 xmm0
addsd xmm2 xmm1
addsd xmm3 xmm2
cvttsd2si ecx xmm3
cmp esi ecx
cmovl esi ecx
add eax 0xc
cmp eax 0x80
jne r-xdata
jmp r-xdata
sub_48d2b0
push edi
push esi
mov esi ecx
push 0x7d
push [ rw-data ]
call sub_43194f
add esp 0x8
xor edi edi
inc edi
test eax eax
mov eax [ rw-data ]
cmovne edi esi
test eax eax
je r-xdata
test eax eax
jne r-xdata
test edi edi
jne r-xdata
mov [ rw-data ] edi
pop esi
pop edi
retn
test edi edi
je r-xdata
push 0x0
jmp r-xdata
push 0x1
call [ ShowCursor@IAT ]
sub_48d2f6
call sub_48bf22
test eax eax
mov eax [ rw-data ]
je r-xdata
push eax
call [ IsZoomed@IAT ]
test eax eax
jne sub_48d406
push 0x9
push eax
call [ ShowWindow@IAT ]
retn
xor eax eax
push eax
push eax
push 0x8003
push [ rw-data ]
call [ SendMessageA@IAT ]
push 0x3
push [ rw-data ]
call [ ShowWindow@IAT ]
retn
sub_48d341
push esi
sub esp 0x104
mov eax [ rw-data ]
mov [ esp + 0x100 ] eax
mov eax esp
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
cmp [ esp + 0x12 ] 0x0
js r-xdata
mov ecx [ esp + 0x100 ]
call sub_497c4a
mov eax esi
add esp 0x104
pop esi
retn
xor esi esi
inc esi
mov al [ esp + 0xa5 ]
shr al 0x7
movzx esi al
jmp r-xdata
sub_48d394
cmp ecx 0x1
je r-xdata
mov eax 0x4
retn
cmp ecx 0x3
je r-xdata
push 0x8a
push [ rw-data ]
call sub_43194f
add esp 0x8
xor ecx ecx
cmp eax 0x1
mov eax 0x6
sete cl
sub eax ecx
retn
cmp ecx 0x2
jne r-xdata
xor eax eax
retn
push 0x8a
push [ rw-data ]
call sub_43194f
add esp 0x8
mov ecx eax
xor eax eax
cmp ecx 0x1
sete al
add eax 0x5
retn
sub_48d406
push edi
push esi
sub esp 0x2c
mov eax [ rw-data ]
mov [ esp + 0x28 ] eax
push [ rw-data ]
call [ IsZoomed@IAT ]
test eax eax
jne r-xdata
call sub_48bf22
test eax eax
jne r-xdata
push 0x1662
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esp + 0x28 ]
call sub_497c4a
add esp 0x2c
pop esi
pop edi
retn
mov edi 0xfffffff0
push edi
push [ rw-data ]
call [ GetWindowLongA@IAT ]
mov esi eax
push 0x6e
push [ rw-data ]
call sub_43194f
add esp 0x8
and esi 0xff1bffff
test eax eax
lea ecx [ esi + 0x200000 ]
cmove ecx esi
push ecx
push edi
push [ rw-data ]
call [ SetWindowLongA@IAT ]
mov esi [ rw-data ]
call sub_484ae8
test eax eax
je r-xdata
mov eax 0x12340042
push 0x2
push esi
call [ rw-data ]
jmp r-xdata
push 0x8
push 0x180
push [ esi + rw-data ]
call edi
add esi 0x4
jne r-xdata
mov esi esp
mov [ esi ] 0x28
push esi
push eax
call sub_484ca9
mov eax [ esi + 0x4 ]
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov esi [ esi + 0x10 ]
sub esi ecx
sub edx eax
push 0x20
push esi
push edx
push ecx
push eax
push 0x0
push [ rw-data ]
call [ SetWindowPos@IAT ]
xor ecx ecx
call sub_48a155
mov edi [ CheckMenuItem@IAT ]
mov esi 0xfffffff8
sub_48d530
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov eax [ rw-data ]
mov [ esp + 0x14 ] eax
push 0x8
push 0x1
call sub_43f807
add esp 0x8
mov ebx eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov esi [ esp + 0x2c ]
push r--data
call sub_48f6f9
add esp 0x4
mov edi eax
test edi edi
je r-xdata
lea ebp [ esp + 0x8 ]
xor edi edi
lea esi [ esp + 0xc ]
push ebp
push edi
push esi
push edi
push r--data
push [ esp + 0x24 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x2a
push esi
call sub_431daf
add esp 0x8
mov ebp [ eax ]
cmp [ ebp ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ ebx ]
lea ecx [ eax + 0x1 ]
imul ebp eax 0x54
xor eax eax
mov [ ebx + 0x4 ] ecx
mov ebx [ GetProcAddress@IAT ]
inc eax
mov [ esi + ebp ] eax
mov [ esi + ebp + 0x4 ] r--data
mov [ esi + ebp + 0x50 ] edi
push r--data
push edi
call ebx
mov [ rw-data ] eax
push r--data
push edi
call ebx
mov [ rw-data ] eax
push r--data
push edi
call ebx
mov [ rw-data ] eax
push r--data
push edi
call ebx
mov [ rw-data ] eax
push r--data
push edi
call ebx
mov [ rw-data ] eax
push r--data
push edi
call ebx
mov [ rw-data ] eax
push r--data
push edi
call ebx
mov ebx [ esp ]
mov [ rw-data ] eax
mov [ esi + ebp + 0x8 ] sub_48d9f7
mov [ esi + ebp + 0xc ] sub_48da0f
mov [ esi + ebp + 0x10 ] sub_48da39
mov [ esi + ebp + 0x14 ] sub_48da5e
mov [ esi + ebp + 0x18 ] sub_48db48
mov [ esi + ebp + 0x1c ] sub_48db6a
mov [ esi + ebp + 0x20 ] sub_48dbc9
mov [ esi + ebp + 0x24 ] sub_48dc04
mov [ esi + ebp + 0x28 ] sub_48dce0
mov [ esi + ebp + 0x2c ] sub_48dcf2
mov esi [ esp + 0x2c ]
push [ esp + 0x10 ]
call [ RegCloseKey@IAT ]
test edi edi
je r-xdata
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov [ rw-data ] eax
push 0x54
push 0x3
call sub_43f807
add esp 0x8
mov [ ebx ] eax
lea eax [ esp + 0x10 ]
mov [ ebx + 0x4 ] 0x0
push eax
push r--data
push 0x80000002
call [ RegOpenKeyA@IAT ]
test eax eax
mov [ esp ] ebx
jne r-xdata
mov ecx [ esp + 0x14 ]
call sub_497c4a
mov eax ebx
add esp 0x18
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ ebx ]
lea ecx [ eax + 0x1 ]
imul ebp eax 0x54
mov [ ebx + 0x4 ] ecx
mov ebx [ GetProcAddress@IAT ]
lea eax [ esi + ebp ]
mov [ esp + 0x4 ] eax
mov [ esi + ebp ] 0x0
mov [ esi + ebp + 0x4 ] r--data
mov [ esi + ebp + 0x50 ] edi
push r--data
push edi
call ebx
mov [ esi + ebp + 0x30 ] eax
push r--data
push edi
call ebx
mov [ esi + ebp + 0x34 ] eax
push r--data
push edi
call ebx
mov [ esi + ebp + 0x38 ] eax
push r--data
push edi
call ebx
mov [ esi + ebp + 0x3c ] eax
push r--data
push edi
call ebx
mov [ esi + ebp + 0x40 ] eax
push r--data
push edi
call ebx
mov [ esi + ebp + 0x44 ] eax
push r--data
push edi
call ebx
mov [ esi + ebp + 0x48 ] eax
push r--data
push edi
call ebx
mov ebx [ esp ]
mov [ esi + ebp + 0x4c ] eax
push [ esp + 0x4 ]
call sub_4668c8
add esp 0x4
mov eax [ esp + 0x8 ]
add eax 0x14
push 0x1
push eax
call sub_43f807
add esp 0x8
mov ebx eax
push ebp
push ebx
push esi
push 0x0
push r--data
push [ esp + 0x24 ]
call [ RegQueryValueExA@IAT ]
xor edi edi
test eax eax
jne r-xdata
push 0xd00
push 0x0
push ebp
call [ LoadLibraryExA@IAT ]
mov edi eax
test edi edi
je r-xdata
push ebp
call sub_4a7f30
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
mov ebx [ esp ]
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov eax [ esp ]
mov edx [ esp ]
mov ebx [ eax ]
mov eax [ esp ]
mov eax [ eax + 0x4 ]
imul esi eax 0x54
lea ecx [ eax + 0x1 ]
lea eax [ ebx + esi ]
mov [ edx + 0x4 ] ecx
mov [ esp + 0x4 ] eax
mov [ ebx + esi ] 0x2
push ebp
push r--data
call sub_43f758
add esp 0x8
mov ebp [ GetProcAddress@IAT ]
mov [ ebx + esi + 0x4 ] eax
mov [ ebx + esi + 0x50 ] edi
push r--data
push edi
call ebp
mov [ ebx + esi + 0x30 ] eax
push r--data
push edi
call ebp
mov [ ebx + esi + 0x34 ] eax
push r--data
push edi
call ebp
mov [ ebx + esi + 0x38 ] eax
push r--data
push edi
call ebp
mov [ ebx + esi + 0x3c ] eax
push r--data
push edi
call ebp
mov [ ebx + esi + 0x40 ] eax
push r--data
push edi
call ebp
mov [ ebx + esi + 0x44 ] eax
push r--data
push edi
call ebp
mov [ ebx + esi + 0x48 ] eax
push r--data
push edi
call ebp
mov [ ebx + esi + 0x4c ] eax
mov ebx [ esp ]
push [ esp + 0x4 ]
call sub_4668c8
add esp 0x4
mov cl [ ebp + eax - 0x1 ]
dec eax
cmp cl 0x5c
je r-xdata
push ebx
call sub_4a7f30
add esp 0x4
mov [ ebx + eax + 0x4 ] 0x0
mov [ ebx + eax ] 0x6e69625c
cmp [ rw-data ] 0x0
je r-xdata
inc eax
cmp cl 0x3a
jne r-xdata
push ebx
call sub_4a7f30
add esp 0x4
mov [ ebx + eax + 0xc ] 0x6c
mov [ ebx + eax + 0x8 ] 0x6c642e32
mov [ ebx + eax + 0x4 ] 0x33697061
mov [ ebx + eax ] 0x7373675c
push 0xd00
push 0x0
push ebx
call [ LoadLibraryExA@IAT ]
mov edi eax
xor eax eax
push ebx
push eax
push eax
call sub_4404de
add esp 0xc
mov edi eax
push edi
call [ rw-data ]
push edi
call sub_43f9d4
add esp 0x4
test eax eax
jle r-xdata
xor edx edx
lea ecx [ eax + 0x1 ]
inc edx
cmp ecx edx
jg r-xdata
push ebp
push eax
push r--data
call sub_43f758
add esp 0xc
mov edi eax
xor eax eax
push edi
push eax
push eax
call sub_4404de
add esp 0xc
mov ebx eax
push ebx
call [ rw-data ]
push ebx
mov ebx [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
sub_48d9a6
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
cmp [ esi + 0x4 ] 0x0
mov eax [ esi ]
jle r-xdata
push eax
call sub_43f9d4
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
jmp sub_43f9d4
mov ebx [ FreeLibrary@IAT ]
xor edi edi
xor ebp ebp
inc ebp
add edi 0x54
cmp ebp [ esi + 0x4 ]
jl r-xdata
push [ eax + edi + 0x4 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi ]
push [ eax + edi + 0x50 ]
call ebx
mov eax [ esi ]
cmp [ eax + edi ] 0x2
jne r-xdata
sub_48da0f
push esi
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax 0x4
mov esi [ esp + 0x10 ]
push 0x0
push eax
push r--data
call sub_43fa97
add esp 0xc
mov [ esi ] eax
xor eax eax
jmp r-xdata
pop esi
retn
sub_48da39
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax 0x4
push eax
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ esi ] 0x0
jmp r-xdata
pop esi
retn
sub_48da5e
push ebp
push ebx
push edi
push esi
sub esp 0x3c
mov edx [ rw-data ]
mov esi [ esp + 0x64 ]
mov ecx [ esp + 0x54 ]
lea ebx [ esp + 0x2c ]
mov eax [ esp + 0x60 ]
lea ebp [ esp + 0x20 ]
mov [ esp + 0x38 ] edx
mov edi [ ecx ]
mov ecx [ esi ]
mov [ ebx ] ecx
mov ecx 0x2
mov [ ebx + 0x4 ] ecx
mov edx [ esi + 0x4 ]
mov esi ebx
mov [ ebx + 0x8 ] edx
lea ebx [ edi + 0x8 ]
mov edx [ eax ]
mov [ ebp ] edx
mov [ ebp + 0x4 ] ecx
xor edx edx
xor ecx ecx
mov eax [ eax + 0x4 ]
inc ecx
mov [ esp ] ebx
mov ebx 0x10
cmp [ esp + 0x5c ] ecx
mov [ ebp + 0x8 ] eax
lea eax [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ebp
lea ebp [ esp + 0x14 ]
lea eax [ esp + 0x4 ]
mov [ ebp ] edx
mov [ ebp + 0x4 ] ecx
mov [ eax ] edx
mov eax 0x117
lea ecx [ edi + 0x20 ]
mov [ ebp + 0x8 ] esi
lea esi [ edi + 0x10 ]
sbb eax edx
push ecx
lea ecx [ esp + 0x8 ]
push ecx
push ebp
push esi
push edx
lea ecx [ esp + 0x1c ]
push ecx
push ebx
push edx
push eax
push [ esp + 0x7c ]
push [ edi + 0x18 ]
push [ esp + 0x2c ]
call [ rw-data ]
mov [ edi ] eax
mov [ edi + 0x18 ] esi
lea edx [ esp + 0x2c ]
mov ecx [ esp + 0x64 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx ]
mov [ ecx ] eax
xor ecx ecx
mov eax [ edi ]
cmp eax 0x90312
setne cl
test eax eax
lea esi [ ecx + ecx * 2 + 0x1 ]
mov ecx [ esp + 0x38 ]
cmove esi eax
call sub_497c4a
mov eax esi
add esp 0x3c
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48db48
push esi
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
mov eax 0x4
push [ esi + 0x4 ]
call [ rw-data ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
pop esi
retn
sub_48db6a
push esi
push 0x28
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
lea edx [ esi + 0x20 ]
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x20 ] eax
lea ecx [ esi + 0x8 ]
push edx
push ecx
push eax
push eax
push eax
push eax
push 0x2
push r--data
push eax
call [ rw-data ]
mov ecx eax
mov eax 0x4
test ecx ecx
mov [ esi ] ecx
jne r-xdata
pop esi
retn
mov eax [ esp + 0xc ]
mov [ eax ] esi
xor eax eax
sub_48dbc9
push edi
push esi
mov esi [ esp + 0x10 ]
mov edi [ esi ]
test edi edi
je r-xdata
mov eax 0x4
lea eax [ edi + 0x8 ]
push eax
call [ rw-data ]
lea eax [ edi + 0x10 ]
push eax
call [ rw-data ]
push edi
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ esi ] 0x0
jmp r-xdata
pop esi
pop edi
retn
sub_48dc04
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x40
mov edi [ ebp + 0xc ]
mov eax [ rw-data ]
test edi edi
mov [ esp + 0x38 ] eax
je r-xdata
mov esi 0x4
xor eax eax
xorps xmm0 xmm0
lea ecx [ esp + 0x10 ]
lea ebx [ edi + 0x10 ]
mov [ edi ] eax
movaps [ ecx ] xmm0
push ecx
push eax
push ebx
call [ rw-data ]
mov esi eax
test esi esi
mov [ edi ] esi
jne r-xdata
mov ecx [ esp + 0x38 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x14 ]
mov esi 0x0
test eax eax
je r-xdata
mov edx 0x2
lea ecx [ esp + 0x4 ]
lea esi [ esp + 0x20 ]
mov [ ecx + 0x4 ] edx
xor edx edx
mov [ ecx + 0x8 ] esi
mov [ ecx ] edx
xor ecx ecx
inc ecx
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov [ esi ] edx
mov edx [ ecx + 0x4 ]
mov ecx 0x2
mov [ esi + 0x8 ] edx
mov [ esi + 0x10 ] ecx
xor ecx ecx
mov [ esi + 0xc ] eax
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x14 ] eax
xor eax eax
push eax
lea ecx [ esp + 0x8 ]
push ecx
push eax
push ebx
call [ rw-data ]
mov esi eax
test esi esi
mov [ edi ] esi
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esp + 0x2c ]
mov [ eax ] ecx
mov ecx [ esp + 0x34 ]
mov [ eax + 0x4 ] ecx
mov esi [ edi ]
jmp r-xdata
sub_48dcf2
push esi
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ eax ]
mov esi [ esp + 0x10 ]
lea eax [ ecx + 0x7ff6fd00 ]
cmp eax 0x11
ja r-xdata
pop esi
retn
mov eax r--data
test ecx ecx
je r-xdata
jmp [ eax * 4 + jump_table_41cafc ]
push eax
call sub_43f79e
add esp 0x4
mov [ esi + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov [ esi ] eax
xor eax eax
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
sub_48dd7c
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov ebp [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
push 0x1034
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebp
mov ebp [ CreateEventA@IAT ]
lea ebx [ esi + 0x4 ]
push edi
push edi
push edi
push edi
call ebp
mov [ esi + 0x8 ] eax
push edi
push edi
push edi
push edi
call ebp
mov [ esi + 0xc ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0x1030 ] eax
mov eax [ esp + 0x24 ]
mov [ esi + 0x18 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x20 ] eax
mov eax [ esp + 0x28 ]
mov [ esi + 0x24 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push eax
call sub_47dcb3
add esp 0x8
mov eax esp
push eax
push edi
push ebx
push sub_48de51
push edi
push edi
call [ CreateThread@IAT ]
mov [ esi + 0x1c ] 0x1
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push sub_48de35
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
sub_48de51
push ebp
push ebx
push edi
push esi
sub esp 0x28
mov eax [ rw-data ]
mov ebx [ esp + 0x3c ]
xor esi esi
mov ebp 0x0
mov [ esp + 0x24 ] eax
mov eax [ ebx + 0x20 ]
test al 0x1
je r-xdata
xor ecx ecx
mov edi 0x1000
lea edx [ ebx + 0x1024 ]
inc ecx
test al 0x4
mov [ esp ] edx
cmovne edi ecx
lea ecx [ ebx + 0x24 ]
mov [ esp + 0xc ] edi
mov [ esp + 0x8 ] ecx
xor eax eax
push eax
push eax
push 0x1
push eax
call [ CreateEventA@IAT ]
mov [ esp + 0x4 ] eax
lea ebp [ esp + 0x10 ]
mov eax [ ebx + 0x20 ]
push ebp
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ ebx ]
call [ ReadFile@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ ebp ] esi
mov [ ebp + 0xc ] esi
mov [ ebp + 0x8 ] esi
mov eax [ esp + 0x4 ]
mov [ ebp + 0x10 ] eax
mov [ ebx + 0x1028 ] esi
cmp [ ebx + 0x1024 ] esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x3e5
mov [ ebx + 0x1028 ] eax
jne r-xdata
test [ ebx + 0x20 ] 0x2
jne r-xdata
push [ ebx + 0x4 ]
call [ SetEvent@IAT ]
push 0xffffffff
push [ ebx + 0x8 ]
call [ WaitForSingleObject@IAT ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ esp ]
mov [ eax ] 0x0
mov [ ebx + 0x1028 ] 0x0
test edi edi
jne r-xdata
push [ ebx + 0x4 ]
push [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x24 ]
call sub_497c4a
xor eax eax
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn 0x4
push [ esp + 0x4 ]
call [ CloseHandle@IAT ]
push 0xffffffff
push [ ebp + 0x10 ]
call [ WaitForSingleObject@IAT ]
push 0x0
push [ esp + 0x4 ]
push ebp
push [ ebx ]
call [ GetOverlappedResult@IAT ]
test eax eax
je r-xdata
call [ SetEvent@IAT ]
test ebp ebp
je r-xdata
call [ GetLastError@IAT ]
mov [ ebx + 0x1028 ] eax
sub_48dfa6
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov edi [ esp + 0x1c ]
xor ebx ebx
inc ebx
mov [ esp + 0x4 ] eax
push 0x1034
push ebx
call sub_43f807
add esp 0x8
mov ebp [ CreateEventA@IAT ]
mov esi eax
mov [ esi ] ebx
mov [ esi + 0x4 ] edi
lea ebx [ esi + 0x4 ]
xor edi edi
push edi
push edi
push edi
push edi
call ebp
mov [ esi + 0x8 ] eax
push edi
push edi
push edi
push edi
call ebp
mov [ esi + 0xc ] eax
mov eax [ esp + 0x24 ]
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x38 ]
push eax
call sub_43ff45
add esp 0x4
mov eax [ esp + 0x20 ]
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] eax
mov eax [ esp + 0x28 ]
mov [ esi + 0x24 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push eax
call sub_47dcb3
add esp 0x8
mov eax esp
push eax
push edi
push ebx
push sub_48e069
push edi
push edi
call [ CreateThread@IAT ]
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push sub_48de35
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
sub_48e069
push ebp
push ebx
push edi
push esi
sub esp 0x20
mov eax [ rw-data ]
mov ebp [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
test [ ebp + 0x20 ] 0x1
jne r-xdata
xor eax eax
lea ebx [ esp + 0x8 ]
push eax
push eax
push 0x1
push eax
call [ CreateEventA@IAT ]
mov edi eax
xor ebx ebx
jmp r-xdata
push [ ebp + 0x4 ]
call [ SetEvent@IAT ]
mov esi [ WaitForSingleObject@IAT ]
lea eax [ ebp + 0x2c ]
mov [ esp + 0x4 ] edi
mov [ esp ] eax
push 0xffffffff
push [ ebp + 0x8 ]
call [ WaitForSingleObject@IAT ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ esp + 0x1c ]
call sub_497c4a
xor eax eax
add esp 0x20
pop esi
pop edi
pop ebx
pop ebp
retn 0x4
push edi
call [ CloseHandle@IAT ]
push ebx
push [ esp + 0x4 ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
mov [ ebx ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x10 ] edi
mov esi edi
mov edi [ GetLastError@IAT ]
call edi
test ebx ebx
mov edi ebp
mov [ ebp + 0x30 ] eax
je r-xdata
mov [ ebp + 0x30 ] 0x0
push [ ebp + 0x4 ]
call [ SetEvent@IAT ]
jmp r-xdata
push [ edi + 0x4 ]
call [ SetEvent@IAT ]
mov edi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x3e5
jne r-xdata
push 0xffffffff
push [ ebp + 0x8 ]
call esi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esp ]
push 0x1
push eax
push ebx
mov ebp edi
push [ ebp ]
call [ GetOverlappedResult@IAT ]
mov edi eax
xor eax eax
test edi edi
jne r-xdata
test ebx ebx
je r-xdata
mov [ ebp + 0x30 ] eax
push [ ebp + 0x4 ]
call [ SetEvent@IAT ]
test edi edi
mov edi [ esp + 0x4 ]
mov esi [ WaitForSingleObject@IAT ]
je r-xdata
call [ GetLastError@IAT ]
sub_48e1a2
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
push 0x1034
push 0x1
call sub_43f807
add esp 0x8
movaps xmm0 [ r--data ]
mov esi eax
xor eax eax
dec eax
mov [ esi ] 0x2
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] eax
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] edi
movups [ esi + 0x10 ] xmm0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push eax
call sub_47dcb3
add esp 0x8
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push sub_48de35
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
sub_48e219
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
cmp [ edi ] 0x1
je r-xdata
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
cmp [ edi + 0x44 ] 0x0
lea esi [ edi + 0x4 ]
je r-xdata
push 0x207
push r--data
push r--data
call sub_4a509d
add esp 0xc
add edi 0x38
push ebp
push ebx
push edi
call sub_43ff80
add esp 0xc
mov ecx esi
call sub_48e288
push edi
call sub_43ff78
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x208
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_48e288
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x8 ] eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
lea edi [ esi + 0x34 ]
push edi
call sub_43ff78
add esp 0x4
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ebx esp
lea ebp [ esp + 0x4 ]
push ebx
push ebp
push edi
call sub_44008c
add esp 0xc
mov eax [ ebp ]
mov [ esi + 0x24 ] eax
mov eax [ ebx ]
mov [ esi + 0x28 ] eax
push [ esi + 0x8 ]
call [ SetEvent@IAT ]
mov [ esi + 0x18 ] 0x1
jmp r-xdata
push edi
call sub_43ff78
add esp 0x4
test eax eax
jne r-xdata
cmp [ esi + 0x40 ] 0x1
jne r-xdata
push [ esi ]
call [ CloseHandle@IAT ]
mov [ esi ] 0xffffffff
mov [ esi + 0x40 ] 0x2
sub_48e31d
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x1
je r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
push 0x217
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x44 ] 0x1
add esi 0x4
mov ecx esi
pop esi
jmp sub_48e288
pop esi
retn
sub_48e358
push ebp
push ebx
push edi
push esi
push eax
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ecx ecx
mov [ esp ] 0x0
push 0x0
push eax
call sub_47e33c
add esp 0x8
mov edi eax
test edi edi
je r-xdata
xor eax eax
xor esi esi
xor ecx ecx
mov [ esp ] 0x0
inc esi
mov ebp eax
mov ebx ecx
jmp r-xdata
cmp [ esp ] eax
jge r-xdata
push esi
push [ rw-data ]
call sub_47e33c
add esp 0x8
mov edi eax
inc esi
mov ecx ebx
mov eax ebp
test edi edi
jne r-xdata
add eax 0x20
push 0x4
mov ebp eax
push eax
push ecx
call sub_43f8db
add esp 0xc
mov ecx eax
mov ebp eax
jmp r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx [ esp ]
mov ebx ecx
mov [ ecx + edx * 4 ] eax
inc edx
mov [ esp ] edx
mov eax [ esp + 0x18 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax ecx
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48e3f4
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
push 0x246
push r--data
push r--data
call sub_4a509d
add esp 0xc
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor eax eax
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x1c ] eax
push [ esi + 0xc ]
call [ SetEvent@IAT ]
pop esi
retn
mov ecx esi
pop esi
jmp sub_48e453
mov [ esi + 0x10 ] 0x1
pop esi
retn
sub_48e453
push edi
push esi
mov esi ecx
cmp [ esi ] 0x1
jne r-xdata
mov edi [ CloseHandle@IAT ]
push [ esi + 0xc ]
call edi
push [ esi + 0x8 ]
call edi
push esi
push [ rw-data ]
call sub_47eb51
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
pop esi
pop edi
retn
lea eax [ esi + 0x38 ]
push eax
call sub_43ff54
add esp 0x4
sub_48e493
push ebp
push ebx
push edi
push esi
push eax
mov eax [ rw-data ]
mov [ esp ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
push sub_48e612
push ecx
push eax
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
je r-xdata
push 0x26b
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ rw-data ]
mov ecx [ esp ]
call sub_497c4a
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
cmp eax 0x2
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
push [ esi + 0x28 ]
call [ esi + 0x24 ]
add esp 0x4
jmp r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
inc eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x1c ] eax
push [ esi + 0xc ]
call [ SetEvent@IAT ]
jmp r-xdata
mov ecx esi
call sub_48e453
jmp r-xdata
mov [ esi + 0x1c ] 0x0
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov ebx esi
lea edi [ esi + 0x4 ]
add ebx 0x38
push [ esi + 0x30 ]
push ebx
call sub_44000a
add esp 0x8
mov ebp [ esi + 0x48 ]
push ebx
call sub_43ff78
add esp 0x4
push eax
push esi
call ebp
add esp 0x8
mov ecx edi
call sub_48e288
neg eax
mov [ esi + 0x18 ] 0x1
push eax
push esi
call [ esi + 0x48 ]
add esp 0x8
jmp r-xdata
mov [ esi + 0x1c ] 0x0
mov eax [ esi + 0x1028 ]
test eax eax
je r-xdata
mov [ esi + 0x18 ] 0x1
xor ecx ecx
xor eax eax
sub ecx [ esi + 0x102c ]
push ecx
push eax
push esi
call [ esi + 0x1030 ]
add esp 0xc
jmp r-xdata
mov ecx esi
add ecx 0x28
push eax
push ecx
push esi
call [ esi + 0x1030 ]
add esp 0xc
cmp [ esi + 0x18 ] 0x0
jne r-xdata
cmp eax 0x7fff
jg r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push [ esi + 0xc ]
call [ SetEvent@IAT ]
mov [ esi + 0x1c ] 0x1
jmp r-xdata
sub_48e62d
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push 0x2c1
push r--data
push r--data
call sub_4a509d
add esp 0xc
pop esi
retn
cmp [ esp + 0xc ] 0x7fff
jg r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push [ esi + 0xc ]
call [ SetEvent@IAT ]
mov [ esi + 0x1c ] 0x1
sub_48e680
push ebx
push edi
push esi
sub esp 0x804
mov eax [ rw-data ]
mov edi esp
mov [ esp + 0x800 ] eax
push 0x7ff
push edi
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x5c
push edi
call sub_49af80
add esp 0x8
lea esi [ eax + 0x1 ]
cmp eax edi
cmovb esi edi
test eax eax
cmove esi edi
push 0x3a
push edi
call sub_49af80
add esp 0x8
lea ebx [ eax + 0x1 ]
cmp eax esi
cmovb ebx esi
test eax eax
cmove ebx esi
mov [ ebx + 0x8 ] 0x70
mov [ ebx + 0x4 ] 0x6c682e79
mov [ ebx ] 0x74747570
push r--data
push edi
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov [ rw-data ] 0x0
push edi
call sub_43f79e
add esp 0x4
mov [ rw-data ] eax
push esi
call sub_4a666f
add esp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
push eax
call sub_4a666f
add esp 0x4
jmp r-xdata
mov [ ebx + 0x8 ] 0x74
mov [ ebx + 0x4 ] 0x6e632e79
mov [ ebx ] 0x74747570
push r--data
push edi
call sub_4a6bb0
add esp 0x8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push edi
call sub_43f79e
add esp 0x4
mov [ rw-data ] eax
push esi
call sub_4a666f
add esp 0x4
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebx + 0x8 ] 0x6d
mov [ ebx + 0x4 ] 0x68632e79
mov [ ebx ] 0x74747570
push r--data
push edi
call sub_4a6bb0
add esp 0x8
mov esi eax
test esi esi
je r-xdata
mov ecx [ esp + 0x800 ]
call sub_497c4a
add esp 0x804
pop esi
pop edi
pop ebx
retn
push r--data
call sub_48f6f9
add esp 0x4
mov esi eax
test esi esi
je r-xdata
xor esi esi
mov [ rw-data ] esi
push [ rw-data ]
call sub_43f9d4
add esp 0x4
mov [ rw-data ] esi
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push [ rw-data ]
call sub_43f9d4
add esp 0x4
mov [ rw-data ] 0x0
push esi
call [ FreeLibrary@IAT ]
jmp r-xdata
sub_48e83d
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
push esi
call sub_4a7d90
add esp 0x8
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ecx ecx
push ecx
push ecx
push eax
push edi
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx eax
add ebx esi
cmp [ esi + eax ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
pop esi
pop edi
pop ebx
retn
movzx ecx [ rw-data ]
lea ecx [ ecx * 8 + 0x3 ]
push 0x0
push ecx
push eax
push edi
call [ WinHelpA@IAT ]
jmp r-xdata
push esi
push eax
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push esi
push 0x102
push [ rw-data ]
push edi
call [ WinHelpA@IAT ]
push esi
inc ebx
push ebx
push ecx
push r--data
call sub_43f758
add esp 0xc
mov esi eax
xor eax eax
push eax
push eax
push esi
push edi
call [ rw-data ]
push esi
jmp r-xdata
push 0x64
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ rw-data ]
call sub_43f9d4
add esp 0x4
sub_48e925
cmp [ rw-data ] 0x1
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
push eax
push 0x12
push eax
push eax
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x0
push 0x0
push 0x2
push eax
push [ esp + 0x10 ]
call [ WinHelpA@IAT ]
sub_48e968
push ebp
push ebx
push edi
push esi
xor edi edi
xor ebx ebx
mov ebp [ esp + 0x20 ]
cmp [ esp + 0x24 ] edi
setne bl
push 0x48
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
lea eax [ esi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x44 ] ebp
mov [ esi + 0x40 ] edi
mov [ esi + 0x1c ] edi
push eax
call sub_43ff45
add esp 0x4
lea eax [ esi + 0x2c ]
push eax
call sub_43ff45
add esp 0x4
mov eax [ esp + 0x18 ]
mov [ esi + 0x8 ] eax
push ebx
push esi
push sub_48ebc7
push eax
call sub_48dd7c
add esp 0x10
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x4 ] eax
push ebx
push esi
push sub_48ec67
push eax
call sub_48dfa6
add esp 0x10
mov [ esi + 0x10 ] eax
mov eax [ esp + 0x1c ]
test eax eax
mov [ esi + 0xc ] eax
je r-xdata
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] edi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push ebx
push esi
push sub_48ecae
push eax
call sub_48dd7c
add esp 0x10
mov [ esi + 0x18 ] eax
sub_48ea22
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x38 ] 0x0
je r-xdata
push [ esi + 0x10 ]
call sub_48e3f4
add esp 0x4
push [ esi + 0x14 ]
call sub_48e3f4
add esp 0x4
push [ esi + 0x4 ]
call [ CloseHandle@IAT ]
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
je r-xdata
mov [ esi + 0x3c ] 0x1
pop esi
retn
lea eax [ esi + 0x20 ]
push eax
call sub_43ff54
add esp 0x4
add esi 0x2c
push esi
call sub_43ff54
add esp 0x4
pop esi
jmp sub_43f9d4
push eax
call [ CloseHandle@IAT ]
sub_48eac3
push esi
mov esi [ esp + 0x8 ]
cmp [ esp + 0xc ] 0x0
mov eax [ esi + 0x1c ]
je r-xdata
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
mov [ esi + 0x1c ] 0x3
push esi
push sub_48ecdd
call sub_43023c
add esp 0x8
cmp eax 0x1
jne r-xdata
mov eax 0x2
test eax eax
jne r-xdata
pop esi
retn
lea eax [ esi + 0x20 ]
push eax
call sub_43ff78
add esp 0x4
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0x1c ] 0x0
jmp r-xdata
push 0x100
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov [ esi + 0x1c ] eax
jmp r-xdata
sub_48eb43
push esi
sub esp 0x8
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ rw-data ]
jmp r-xdata
xor ecx ecx
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
jmp r-xdata
xor esi esi
test ecx ecx
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
retn
mov eax [ esp + 0x10 ]
mov edx esp
push edx
push [ eax + 0x4 ]
call ecx
test eax eax
je r-xdata
mov [ rw-data ] ecx
push [ esp ]
push r--data
call sub_43f758
add esp 0x8
mov esi eax
sub_48ebc7
push edi
push esi
mov edi [ esp + 0x14 ]
push [ esp + 0xc ]
call sub_48e677
add esp 0x4
mov esi eax
test edi edi
js r-xdata
mov eax [ esi + 0x44 ]
xor esi esi
mov ecx [ eax ]
push esi
push esi
push r--data
push eax
jmp r-xdata
je r-xdata
call [ ecx + 0x4 ]
add esp 0x10
jmp r-xdata
mov eax [ esi + 0x44 ]
xor esi esi
mov ecx [ eax ]
push esi
push esi
push esi
push eax
mov ecx [ esi + 0x1c ]
mov eax ecx
and eax 0xfffffffe
cmp eax 0x2
jne r-xdata
mov eax esi
pop esi
pop edi
retn
mov eax [ esp + 0x10 ]
cmp ecx 0x1
jne r-xdata
push 0x3f
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ecx [ esi + 0x1c ]
mov ecx [ esi + 0x44 ]
mov edx [ ecx ]
push edi
push eax
push 0x0
push ecx
call [ edx + 0x8 ]
add esp 0x10
xor esi esi
mov ecx esi
add ecx 0x20
push edi
push eax
push ecx
call sub_43ff80
add esp 0xc
mov [ esi + 0x1c ] 0x2
mov esi 0x7fffffff
jmp r-xdata
sub_48ec67
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
push [ esp + 0x10 ]
call sub_48e677
add esp 0x4
mov esi eax
test edi edi
mov ecx [ esi + 0x44 ]
mov eax [ ecx ]
js r-xdata
mov ebx [ eax + 0x4 ]
neg edi
push edi
call sub_48f7e3
add esp 0x4
xor ecx ecx
push ecx
push edi
push eax
push [ esi + 0x44 ]
call ebx
add esp 0x10
push edi
push ecx
call [ eax + 0xc ]
add esp 0x8
jmp r-xdata
pop esi
pop edi
pop ebx
retn
sub_48ecae
push esi
mov esi [ esp + 0x10 ]
push [ esp + 0x8 ]
call sub_48e677
add esp 0x4
test esi esi
jle r-xdata
xor eax eax
pop esi
retn
mov ecx eax
add ecx 0x2c
push esi
push [ esp + 0x10 ]
push ecx
push [ eax + 0x44 ]
call sub_43014e
add esp 0x10
sub_48ecdd
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov [ esp + 0x8 ] eax
cmp [ esi + 0x1c ] 0x3
jne r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
lea edi [ esi + 0x20 ]
mov ebx esp
lea eax [ esp + 0x4 ]
push ebx
push eax
push edi
call sub_44008c
add esp 0xc
mov eax [ ebx ]
test eax eax
jg r-xdata
mov [ esi + 0x38 ] 0x1
xor ebx ebx
mov ecx [ esi + 0x44 ]
mov edx [ ecx ]
push eax
push [ esp + 0x8 ]
push ebx
push ecx
call [ edx + 0x8 ]
add esp 0x10
push [ esp ]
push edi
call sub_44000a
add esp 0x8
mov [ esi + 0x38 ] ebx
cmp [ esi + 0x3c ] ebx
je r-xdata
push 0xba
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esp ]
push edi
call sub_43ff78
add esp 0x4
test eax eax
jle r-xdata
push esi
call sub_48ea22
add esp 0x4
jmp r-xdata
xor eax eax
mov [ esi + 0x1c ] eax
push eax
push [ esi + 0x14 ]
call sub_48e62d
push esi
push sub_48ecdd
call sub_43023c
jmp r-xdata
add esp 0x8
sub_48eda4
sub esp 0x8
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
retn
mov eax [ esp ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x28 ]
mov eax [ esp ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_48edec
cmp [ rw-data ] 0x6
jb r-xdata
retn
mov eax [ esp + 0x4 ]
jne r-xdata
push eax
call sub_494f1c
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push ebp
push ebx
push edi
push esi
mov eax 0x1028
call sub_497c60
mov eax [ rw-data ]
xor edi edi
mov [ esp + 0x1024 ] eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0xc ] edi
mov [ eax ] edi
push eax
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
jmp sub_48eda4
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0xc ]
lea esi [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push r--data
push esi
push eax
call [ ecx + 0x10 ]
test eax eax
js r-xdata
mov eax [ esp + 0x18 ]
test edi edi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jns r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
xor edi edi
inc edi
test eax eax
js r-xdata
mov [ esp + 0x1c ] 0x0
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
mov eax [ esp + 0x18 ]
call sub_4951ab
mov [ esp ] eax
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ esp ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x14 ]
lea ebx [ esp + 0x10 ]
mov ecx [ eax ]
push ebx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov edi [ esp ]
xor esi esi
mov ebx 0x1e
push 0x0
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x1024 ]
call sub_497c4a
add esp 0x1028
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
xor edi edi
inc edi
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push [ esp + 0x10 ]
push r--data
push eax
call [ ecx + 0x14 ]
lea ebp [ esp + 0x14 ]
push ebp
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
xor ecx ecx
mov edx edi
call sub_48f208
mov ebp eax
test ebp ebp
je r-xdata
mov esi r--data
push edi
call sub_4a7f30
add esp 0x4
lea edi [ edi + eax + 0x1 ]
cmp [ edi ] 0x0
jne r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
push esi
call sub_4a7f30
add esp 0x4
lea esi [ esi + eax + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x14 ]
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
mov eax [ esp + 0x20 ]
cmp eax 0x1f
cmovge eax ebx
cmp esi eax
jge r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebp
push eax
call [ ecx + 0x14 ]
inc esi
mov [ esp + 0x4 ] esi
xor esi esi
xor edx edx
mov ecx esi
call sub_48f208
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp ]
push 0x7ff
lea ecx [ esp + 0x828 ]
push ecx
push ebp
call [ eax + 0x18 ]
xor ebx ebx
test eax eax
js r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0x1c ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
xor esi esi
mov [ esp + 0x10 ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esp + 0x14 ] esi
push ebp
push r--data
push 0x1
push esi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov esi [ esp + 0x4 ]
test ebx ebx
mov ebx 0x1e
jne r-xdata
inc esi
cmp esi [ esp + 0x1c ]
jb r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push 0x7ff
lea edx [ esp + 0x28 ]
push edx
push eax
call [ ecx + 0x18 ]
test eax eax
js r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebx
push r--data
push eax
call [ ecx ]
test eax eax
mov edi 0x1
js r-xdata
mov eax [ ebp ]
push ebp
call [ eax + 0x8 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ecx [ eax ]
push edx
push r--data
push esi
push eax
call [ ecx + 0x10 ]
test eax eax
mov ebx 0x0
js r-xdata
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x828 ]
push eax
call sub_4a7d00
add esp 0x8
xor ebx ebx
test eax eax
sete bl
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0x1c ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
xor edi edi
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
push eax
call ecx
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] edi
mov ecx [ eax ]
mov ecx [ ecx + 0x20 ]
push eax
call ecx
jmp r-xdata
sub_48f180
cmp [ rw-data ] 0x6
jb r-xdata
retn
mov eax [ esp + 0x4 ]
jne r-xdata
push eax
call sub_49519a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push ebp
push ebx
push edi
push esi
mov eax 0x1028
call sub_497c60
mov eax [ rw-data ]
xor edi edi
mov [ esp + 0x1024 ] eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0xc ] edi
mov [ eax ] edi
push eax
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
jmp sub_48eda4
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0xc ]
lea esi [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push r--data
push esi
push eax
call [ ecx + 0x10 ]
test eax eax
js r-xdata
mov eax [ esp + 0x18 ]
test edi edi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jns r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
xor edi edi
inc edi
test eax eax
js r-xdata
mov [ esp + 0x1c ] 0x0
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
mov eax [ esp + 0x18 ]
call sub_4951ab
mov [ esp ] eax
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ esp ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x14 ]
lea ebx [ esp + 0x10 ]
mov ecx [ eax ]
push ebx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov edi [ esp ]
xor esi esi
mov ebx 0x1e
push 0x0
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x1024 ]
call sub_497c4a
add esp 0x1028
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
xor edi edi
inc edi
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push [ esp + 0x10 ]
push r--data
push eax
call [ ecx + 0x14 ]
lea ebp [ esp + 0x14 ]
push ebp
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
xor ecx ecx
mov edx edi
call sub_48f208
mov ebp eax
test ebp ebp
je r-xdata
mov esi r--data
push edi
call sub_4a7f30
add esp 0x4
lea edi [ edi + eax + 0x1 ]
cmp [ edi ] 0x0
jne r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
push esi
call sub_4a7f30
add esp 0x4
lea esi [ esi + eax + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x14 ]
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
mov eax [ esp + 0x20 ]
cmp eax 0x1f
cmovge eax ebx
cmp esi eax
jge r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebp
push eax
call [ ecx + 0x14 ]
inc esi
mov [ esp + 0x4 ] esi
xor esi esi
xor edx edx
mov ecx esi
call sub_48f208
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp ]
push 0x7ff
lea ecx [ esp + 0x828 ]
push ecx
push ebp
call [ eax + 0x18 ]
xor ebx ebx
test eax eax
js r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0x1c ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
xor esi esi
mov [ esp + 0x10 ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esp + 0x14 ] esi
push ebp
push r--data
push 0x1
push esi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov esi [ esp + 0x4 ]
test ebx ebx
mov ebx 0x1e
jne r-xdata
inc esi
cmp esi [ esp + 0x1c ]
jb r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push 0x7ff
lea edx [ esp + 0x28 ]
push edx
push eax
call [ ecx + 0x18 ]
test eax eax
js r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebx
push r--data
push eax
call [ ecx ]
test eax eax
mov edi 0x1
js r-xdata
mov eax [ ebp ]
push ebp
call [ eax + 0x8 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ecx [ eax ]
push edx
push r--data
push esi
push eax
call [ ecx + 0x10 ]
test eax eax
mov ebx 0x0
js r-xdata
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x828 ]
push eax
call sub_4a7d00
add esp 0x8
xor ebx ebx
test eax eax
sete bl
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0x1c ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
xor edi edi
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
push eax
call ecx
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] edi
mov ecx [ eax ]
mov ecx [ ecx + 0x20 ]
push eax
call ecx
jmp r-xdata
sub_48f1b0
cmp [ rw-data ] 0x0
je r-xdata
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ rw-data ]
jmp r-xdata
xor ecx ecx
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
jmp r-xdata
test ecx ecx
je r-xdata
xor eax eax
inc eax
retn
push r--data
call ecx
mov ecx eax
xor eax eax
test ecx ecx
sete al
retn
mov [ rw-data ] ecx
sub_48f208
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x30
mov eax [ rw-data ]
mov edi edx
mov esi ecx
mov [ esp + 0x28 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
test esi esi
je r-xdata
push 0x7ff
push rw-data
push 0x0
call [ GetModuleFileNameA@IAT ]
push rw-data
call sub_43f79e
add esp 0x4
mov ebx eax
mov [ esp + 0xc ] edi
sub esp 0x8
mov ebx rw-data
mov [ esp ] ebx
mov [ esp + 0x4 ] 0x5c
call sub_49af80
add esp 0x8
test eax eax
lea edi [ eax + 0x1 ]
cmove edi ebx
push 0x3a
push edi
call sub_49af80
add esp 0x8
test eax eax
lea eax [ eax + 0x1 ]
cmove eax edi
mov edi esi
sub eax ebx
push esi
push ebx
push eax
push r--data
call sub_43f758
add esp 0x10
mov ebx eax
push r--data
push ebx
call sub_4a6bb0
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
push edi
call sub_494293
add esp 0x4
test eax eax
je r-xdata
push ebx
call sub_43f9d4
add esp 0x4
xor esi esi
jmp r-xdata
push eax
call sub_4a666f
add esp 0x4
mov esi edi
mov edi [ esp + 0xc ]
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x50 ]
test edi edi
mov [ esp + 0x8 ] esi
je r-xdata
push eax
call sub_494288
add esp 0x4
mov ecx [ esp + 0x28 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push r--data
call sub_43f79e
add esp 0x4
push 0x0
push edi
push r--data
call sub_43fa97
add esp 0xc
jmp r-xdata
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push r--data
push edi
push r--data
call sub_43fa97
add esp 0x10
jmp r-xdata
mov esi eax
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x2c ]
push esi
call sub_43f9d4
add esp 0x4
test edi edi
je r-xdata
push r--data
push esi
call sub_4a7d90
add esp 0x8
push esi
push eax
push r--data
call sub_43f758
add esp 0xc
push 0x1bf
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov esi eax
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x1c ]
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push 0x0
push ebx
push eax
call [ ecx + 0x44 ]
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
push ebx
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x24 ]
test edi edi
xorps xmm0 xmm0
movaps [ esp + 0x10 ] xmm0
mov [ esp + 0x10 ] 0x1e
je r-xdata
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
call sub_43f79e
add esp 0x4
jmp r-xdata
push r--data
push esi
call sub_4a7d90
add esp 0x8
push esi
push eax
push r--data
call sub_43f758
add esp 0xc
push 0x1d0
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea esi [ esp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push esi
push r--data
push eax
call [ ecx + 0x18 ]
push [ esi + 0x8 ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_48f4af
push edi
push esi
mov edi [ esp + 0xc ]
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push edi
call sub_43f79e
add esp 0x4
mov [ esi ] eax
mov eax esi
pop esi
pop edi
retn
sub_48f4d3
push edi
push esi
mov eax [ esp + 0xc ]
mov edi [ eax ]
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push edi
call sub_43f79e
add esp 0x4
mov [ esi ] eax
mov eax esi
pop esi
pop edi
retn
sub_48f540
push ebx
push edi
push esi
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov ebx [ eax ]
push ebx
call sub_4a7f30
add esp 0x4
mov esi eax
inc esi
test edi edi
je r-xdata
mov eax esi
pop esi
pop edi
pop ebx
retn
push ebx
push edi
call sub_4a7c00
add esp 0x8
sub_48f56d
push edi
push esi
mov edi [ esp + 0xc ]
push [ esp + 0x10 ]
push 0x0
push edi
call sub_4989c0
add esp 0xc
test eax eax
je r-xdata
xor esi esi
mov ecx [ esp + 0x14 ]
inc eax
sub eax edi
mov [ ecx ] eax
xor eax eax
inc eax
push 0x4
push eax
call sub_43f807
add esp 0x8
mov esi eax
push edi
call sub_43f79e
add esp 0x4
mov [ esi ] eax
jmp r-xdata
mov eax esi
pop esi
pop edi
retn
sub_48f5b3
push ebx
movsx ebx [ esp + 0x8 ]
push 0xa
push ebx
push r--data
call sub_4989c0
add esp 0xc
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov bl 0x2e
sub_48f5eb
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
mov al [ rw-data ]
test al al
je r-xdata
push r--data
call sub_48f6f9
add esp 0x4
mov esi eax
push r--data
call sub_48f6f9
add esp 0x4
test esi esi
je r-xdata
mov ecx [ rw-data ]
jmp r-xdata
xor ecx ecx
push r--data
push esi
call [ GetProcAddress@IAT ]
mov ecx eax
jmp r-xdata
test ecx ecx
je r-xdata
mov edi esp
xor eax eax
mov [ edi ] eax
push edi
push eax
call [ GetUserNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
mov edi esp
mov ebx 0x8
mov [ edi ] eax
push edi
push eax
push ebx
call ecx
push 0x1
push [ edi ]
call sub_43f807
add esp 0x8
mov esi eax
push edi
push esi
push ebx
call [ rw-data ]
test al al
je r-xdata
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
mov eax 0x100
mov [ esp ] 0x100
mov eax [ esp ]
jmp r-xdata
push esi
call sub_43f9d4
add esp 0x4
movzx edi al
push 0x40
push esi
call sub_49ae50
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
test edi edi
cmove esi edi
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
retn
push esi
call sub_43f9d4
add esp 0x4
xor edi edi
push 0x1
push eax
call sub_43f807
add esp 0x8
mov esi eax
push edi
push esi
call [ GetUserNameA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov [ eax ] 0x0
jmp r-xdata
sub_48f6f9
push ebx
push edi
push esi
mov eax [ rw-data ]
mov esi [ esp + 0x10 ]
test eax eax
jne r-xdata
push 0x0
push esi
push r--data
push eax
call sub_43fa97
add esp 0x10
mov esi eax
push esi
call [ LoadLibraryA@IAT ]
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
pop esi
pop edi
pop ebx
retn
mov edi [ GetSystemDirectoryA@IAT ]
xor eax eax
xor ebx ebx
lea ecx [ ebx + ebx * 2 ]
mov ebx ecx
shr ebx 0x1f
add ebx ecx
sar ebx 0x1
add ebx 0x200
push 0x1
push ebx
push eax
call sub_43f8db
add esp 0xc
mov [ rw-data ] eax
push ebx
push eax
call edi
cmp eax ebx
mov eax [ rw-data ]
jge r-xdata
sub_48f76e
cmp [ rw-data ] 0x0
je r-xdata
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ rw-data ]
jmp r-xdata
xor ecx ecx
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
jmp r-xdata
test ecx ecx
je r-xdata
retn
push 0xc00
call ecx
mov [ rw-data ] ecx
sub_48f7e3
push edi
push esi
mov eax 0x10004
call sub_497c60
mov eax [ rw-data ]
mov [ esp + 0x10000 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x10010 ]
push sub_48f8ff
push ecx
push eax
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
push sub_48f8e5
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
mov esi [ esi + 0x4 ]
mov ecx [ esp + 0x10000 ]
call sub_497c4a
mov eax esi
add esp 0x10004
pop esi
pop edi
retn
push 0x8
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov eax [ esp + 0x10010 ]
mov edi esp
mov [ esi ] eax
xor eax eax
push eax
push 0xffff
push edi
push 0x400
push [ esp + 0x10020 ]
push eax
push 0x1200
call [ FormatMessageA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
push edi
call sub_432778
add esp 0xc
push edi
call sub_4a7f30
add esp 0x4
test eax eax
jle r-xdata
push edi
push [ esp + 0x10014 ]
push r--data
call sub_43f758
add esp 0xc
mov [ esi + 0x4 ] eax
push esi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
cmp [ esp + eax - 0x1 ] 0xa
jne r-xdata
mov [ esp + eax - 0x1 ] 0x0
jmp r-xdata
sub_48f919
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
push 0x10
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push edi
call sub_43f79e
add esp 0x4
mov [ esi ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48f956
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0xc ]
mov [ esp ] ecx
mov ebx [ eax + 0x8 ]
mov ebp [ eax ]
mov edi [ eax + 0x4 ]
push 0x10
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
push ebp
call sub_43f79e
add esp 0x4
mov [ esi ] eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov eax [ esp ]
mov [ esi + 0xc ] eax
mov eax esi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_48f99c
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov ebp [ ebx ]
push ebp
call sub_4a7f30
add esp 0x4
mov esi eax
test edi edi
je r-xdata
add esi 0xd
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push ebp
push edi
call sub_4a7c00
add esp 0x8
mov al [ ebx + 0x7 ]
mov [ edi + esi + 0x1 ] al
mov al [ ebx + 0x6 ]
mov [ edi + esi + 0x2 ] al
mov al [ ebx + 0x5 ]
mov [ edi + esi + 0x3 ] al
mov al [ ebx + 0x4 ]
mov [ edi + esi + 0x4 ] al
mov al [ ebx + 0xb ]
mov [ edi + esi + 0x5 ] al
mov al [ ebx + 0xa ]
mov [ edi + esi + 0x6 ] al
mov al [ ebx + 0x9 ]
mov [ edi + esi + 0x7 ] al
mov al [ ebx + 0x8 ]
mov [ edi + esi + 0x8 ] al
mov al [ ebx + 0xf ]
mov [ edi + esi + 0x9 ] al
mov al [ ebx + 0xe ]
mov [ edi + esi + 0xa ] al
mov al [ ebx + 0xd ]
mov [ edi + esi + 0xb ] al
mov al [ ebx + 0xc ]
mov [ edi + esi + 0xc ] al
sub_48fa21
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x18 ]
xor esi esi
cmp eax 0xd
jl r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x14 ]
add eax 0xfffffff4
push eax
push 0x0
push edi
call sub_4989c0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx 0xc
sub edx edi
lea edx [ edx + eax + 0x1 ]
mov [ ecx ] edx
mov ebx [ eax + 0x9 ]
mov ebp [ eax + 0x1 ]
mov edi [ eax + 0x5 ]
xor eax eax
inc eax
bswap ebx
bswap edi
bswap ebp
push 0x10
push eax
call sub_43f807
add esp 0x8
mov esi eax
push [ esp + 0x14 ]
call sub_43f79e
add esp 0x4
mov [ esi ] eax
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
sub_48fa98
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
jne r-xdata
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call sub_48cc18
add esp 0x4
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
xor eax eax
push r--data
push eax
call [ GetProcAddress@IAT ]
jmp r-xdata
mov [ rw-data ] 0x0
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
jmp r-xdata
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
push r--data
push eax
xor eax eax
push r--data
push ecx
call [ GetProcAddress@IAT ]
jmp r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
push rw-data
push 0x2
call [ rw-data ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x2
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
push ecx
jmp r-xdata
push rw-data
push 0x101
call [ rw-data ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x2
je r-xdata
push sub_490173
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
retn
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
call [ GetProcAddress@IAT ]
jmp r-xdata
push r--data
call sub_48cc18
add esp 0x4
cmp [ rw-data ] 0x1
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov [ rw-data ] eax
push rw-data
push 0x202
call [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push ecx
call [ GetProcAddress@IAT ]
jmp r-xdata
sub_490173
push edi
push esi
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
xor eax eax
dec eax
mov esi [ edx + 0x8 ]
mov edi [ ecx + 0x8 ]
cmp esi edi
jb r-xdata
pop esi
pop edi
retn
cmp esi edi
jbe r-xdata
cmp edx ecx
jb r-xdata
xor eax eax
inc eax
jmp r-xdata
seta al
movzx eax al
sub_4901a0
push esi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_47e33c
add esp 0x8
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call eax
push [ rw-data ]
call sub_47dc40
add esp 0x4
mov [ rw-data ] 0x0
xor esi esi
inc esi
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
push [ eax + 0x8 ]
call [ rw-data ]
push esi
push [ rw-data ]
call sub_47e33c
add esp 0x8
inc esi
test eax eax
jne r-xdata
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
sub_49021e
push ebp
push ebx
push edi
push esi
push eax
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
mov [ esp ] ecx
lea ecx [ eax - 0x2714 ]
cmp ecx 0x3f
ja r-xdata
cmp eax 0x2775
jne r-xdata
mov esi r--data
jmp [ ecx * 4 + jump_table_41db14 ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
lea ecx [ esp + 0x18 ]
push sub_4904da
push ecx
push eax
call sub_47e50d
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
push sub_4904c0
call sub_47dc24
add esp 0x4
mov [ rw-data ] eax
mov ecx [ esp ]
call sub_497c4a
mov eax esi
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esi + 0x4 ]
xor edi edi
inc edi
push 0x8
push edi
call sub_43f807
add esp 0x8
mov esi eax
mov eax [ esp + 0x18 ]
mov ebp 0x1000f
mov [ esi ] eax
push edi
push ebp
call sub_43f807
add esp 0x8
mov [ esi + 0x4 ] eax
mov [ eax + 0xc ] 0x203a72
mov [ eax + 0x8 ] 0x6f727265
mov [ eax + 0x4 ] 0x206b726f
mov [ eax ] 0x7774654e
mov ebx [ esi + 0x4 ]
push ebx
call sub_4a7f30
add esp 0x4
mov edi eax
xor eax eax
sub ebp edi
add ebx edi
push eax
push ebp
push ebx
push 0x400
push [ esp + 0x28 ]
push eax
push 0x1200
call [ FormatMessageA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
add edi [ esi + 0x4 ]
push eax
push [ esp + 0x1c ]
push r--data
push edi
call sub_432778
add esp 0x10
mov edi [ esi + 0x4 ]
push edi
call sub_4a7f30
add esp 0x4
test eax eax
jle r-xdata
mov edi [ esi + 0x4 ]
push edi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
inc ecx
push ecx
push eax
push edi
call sub_43f8db
add esp 0xc
mov [ esi + 0x4 ] eax
push esi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
cmp [ edi + eax - 0x1 ] 0xa
jne r-xdata
mov [ edi + eax - 0x1 ] 0x0
jmp r-xdata
sub_4904f4
push ebp
push ebx
push edi
push esi
mov eax 0x2024
call sub_497c60
mov eax [ rw-data ]
mov edi [ esp + 0x2040 ]
xor ebp ebp
inc ebp
mov [ esp + 0x2020 ] eax
push 0x21c
push ebp
call sub_43f807
add esp 0x8
mov ecx 0x2
mov esi eax
xor eax eax
mov ebx 0x17
cmp edi ecx
cmovne ebx eax
cmp edi ebp
lea eax [ esi + 0x4 ]
cmove ebx ecx
push 0x218
push 0x0
push eax
call sub_49acf0
add esp 0xc
mov [ esi ] ebp
mov [ esp + 0x20 ] 0x0
push [ esp + 0x2038 ]
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x4
push ebp
call sub_43f807
add esp 0x8
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ebp
push edi
call [ rw-data ]
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov [ esi + 0x8 ] ebp
lea eax [ esp + 0x20 ]
push 0x2000
push [ esp + 0x203c ]
push eax
call sub_4a8040
add esp 0xc
mov ebx ebp
push [ esp + 0x2038 ]
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
mov ebp esi
xor eax eax
mov edi esp
add ebp 0x10
mov [ edi + 0xc ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x1c ] eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x4 ] ebx
mov [ edi ] 0x2
push [ esp + 0x2038 ]
call sub_43f6f7
add esp 0x4
mov ebx eax
push ebp
push edi
mov eax 0x0
push eax
push ebx
call [ rw-data ]
mov ebp eax
push ebx
call sub_43f9d4
add esp 0x4
test ebp ebp
jne r-xdata
call [ rw-data ]
mov ebp eax
xor ebx ebx
mov [ esi + 0x8 ] 0x1
inc ebx
jmp r-xdata
xor ebx ebx
xor edi edi
inc ebx
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x8 ] 0x1
jmp r-xdata
cmp ebp 0x2742
je r-xdata
mov [ esi + 0x4 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax r--data
jmp r-xdata
cmp ebp 0x2af9
je r-xdata
mov eax [ edi + 0xc ]
mov ebp [ esp + 0x203c ]
xor ebx ebx
dec ebx
mov eax [ eax + 0x14 ]
mov ebp [ esp + 0x203c ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax r--data
jmp r-xdata
cmp ebp 0x2afa
jne r-xdata
cmp [ eax + ebx * 4 + 0x4 ] 0x0
lea ebx [ ebx + 0x1 ]
jne r-xdata
push 0x4
push ebx
call sub_43f807
add esp 0x8
test ebx ebx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ebx
jle r-xdata
lea eax [ esp + 0x20 ]
push 0x2000
push [ esp + 0x203c ]
push eax
lea ecx [ esp + 0x20 ]
push 0x2000
push eax
push ecx
jmp r-xdata
mov ebp [ esp + 0x203c ]
cmp [ rw-data ] 0x0
mov eax r--data
je r-xdata
mov eax r--data
jmp r-xdata
lea eax [ esp + 0x20 ]
push 0x2000
push [ edi ]
push eax
call sub_4a8040
add esp 0xc
xor ebx ebx
inc ebx
jmp r-xdata
xor ebx ebx
lea edi [ esp + 0x20 ]
mov [ edi + 0x1fff ] 0x0
push edi
call sub_4a7f30
add esp 0x4
inc eax
push ebx
push eax
call sub_43f807
add esp 0x8
mov [ ebp ] eax
push edi
push eax
call sub_4a7c00
add esp 0x8
mov ecx [ esp + 0x2020 ]
call sub_497c4a
mov eax esi
add esp 0x2024
pop esi
pop edi
pop ebx
pop ebp
retn
call sub_4a8040
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
mov eax [ eax + ebx * 4 ]
push [ eax ]
call [ rw-data ]
mov ecx [ esi + 0x14 ]
mov [ ecx + ebx * 4 ] eax
inc ebx
cmp ebx [ esi + 0x18 ]
jl r-xdata
push ebp
call ecx
sub_49079f
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
xor ebx ebx
inc ebx
push 0x21c
push ebx
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x14 ] eax
mov [ esi ] ebx
lea eax [ esi + 0x1c ]
push 0x200
push edi
push eax
call sub_4a8040
add esp 0xc
mov [ esi + 0x21b ] 0x0
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_4907ee
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
xor ebx ebx
inc ebx
push 0x21c
push ebx
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi ] ebx
lea eax [ esi + 0x1c ]
push 0x200
push edi
push eax
call sub_4a8040
add esp 0xc
mov [ esi + 0x21b ] 0x0
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_49083d
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
add ebx 0x1c
push esi
push ebx
push edi
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
add ebx 0x1c
push esi
push ebx
push edi
call sub_4a8040
add esp 0xc
cmp [ edi ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
mov [ edx ] esi
push edx
push edi
push 0x0
push [ eax + 0x10 ]
push [ eax + 0x18 ]
call ecx
test eax eax
je r-xdata
push 0x2df
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ ebx + 0x14 ]
cmp [ ebx + 0x18 ] 0x0
jg r-xdata
mov [ edi + esi - 0x1 ] 0x0
push esi
push r--data
push edi
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
pop ebx
retn
call sub_4a8040
add esp 0xc
push [ eax ]
call [ rw-data ]
mov [ esp ] eax
sub esp 0x4
mov eax [ esp + 0x4 ]
mov [ esp ] eax
call [ rw-data ]
push esi
push eax
push edi
jmp r-xdata
sub_490919
push ebx
push esi
mov esi [ esp + 0xc ]
push r--data
push esi
call sub_4a7d00
add esp 0x8
xor ebx ebx
inc ebx
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push r--data
push esi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push 0x4
push r--data
push esi
call sub_4a7fc0
add esp 0xc
xor ebx ebx
test eax eax
sete bl
sub_490962
push ebx
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x18 ]
xor ebx ebx
mov [ esp + 0x8 ] eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax ebx
add esp 0xc
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
push 0x348
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esi + 0x14 ]
cmp [ esi + 0x18 ] 0x0
jg r-xdata
cmp ecx 0x2
je r-xdata
mov [ esp ] eax
call sub_490a87
add esp 0x4
mov ebx eax
jmp r-xdata
push [ eax ]
call [ rw-data ]
mov [ esp ] eax
sub esp 0x4
mov eax [ esp + 0x4 ]
jmp r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
sub esp 0x4
mov eax [ esp + 0x8 ]
cmp ecx 0x17
jne r-xdata
push 0x34d
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ eax + 0x18 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0xe ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ eax + 0x12 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
movzx eax [ eax + 0x16 ]
xor ebx ebx
cmp eax 0x100
sete bl
jmp r-xdata
sub_490a87
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
mov ebx [ esp + 0x1c ]
push ebx
call [ rw-data ]
and eax 0xff000000
xor esi esi
inc esi
cmp eax 0x7f000000
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ rw-data ]
test edx edx
jne r-xdata
test edx edx
jle r-xdata
xor ebp ebp
mov eax 0x2
push ebp
push eax
push eax
call [ rw-data ]
mov edi eax
push ebp
push 0x1
push edi
call [ SetHandleInformation@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
xor esi esi
xor eax eax
mov ecx rw-data
push r--data
push 0x0
call sub_4842ab
add esp 0x8
mov edx [ rw-data ]
jmp r-xdata
mov ecx esp
push ebp
push ebp
push ecx
push 0x4c0
push rw-data
push ebp
push ebp
push 0x4004747f
push edi
call eax
test eax eax
je r-xdata
inc eax
add ecx 0x4c
cmp eax edx
jl r-xdata
mov eax [ esp ]
mov ecx 0x1af286bd
shr eax 0x2
mul ecx
shr edx 0x1
mov [ rw-data ] edx
cmp [ ecx ] ebx
je r-xdata
sub_490b5c
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
xor eax eax
cmp ecx 0x17
mov edx 0x3
sete al
sub edx eax
xor eax eax
inc eax
cmp ecx 0x2
cmovne eax edx
retn
mov ecx 0x2
mov ecx [ eax + 0x4 ]
jmp r-xdata
sub_490b94
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov edi [ ebx + 0x10 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
push 0x36c
push r--data
push r--data
call sub_4a509d
add esp 0xc
test edi edi
je r-xdata
mov esi [ esp + 0x14 ]
test edi edi
je r-xdata
pop esi
pop edi
pop ebx
retn
push 0x376
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax 0x17
je r-xdata
push 0x37b
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ ebx + 0x14 ]
cmp [ ebx + 0x18 ] 0x0
jg r-xdata
mov eax [ edi + 0x18 ]
movsd xmm0 [ eax + 0x8 ]
movsd xmm1 [ eax + 0x10 ]
movsd [ esi + 0x8 ] xmm1
movsd [ esi ] xmm0
jmp r-xdata
cmp eax 0x2
je r-xdata
mov [ esi ] eax
push [ eax ]
call [ rw-data ]
jmp r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
push 0x36c
push r--data
push r--data
call sub_4a509d
add esp 0xc
jmp r-xdata
sub_490c67
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
lea ecx [ eax - 0x1 ]
cmp eax 0x1
mov [ esi ] ecx
jle r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
pop esi
retn
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
pop esi
jmp sub_43f9d4
push eax
call sub_43f9d4
add esp 0x4
push eax
call ecx
sub_490cab
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x2c ]
push 0x68
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor ebx ebx
lea eax [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebp
push eax
call sub_43ff45
add esp 0x4
mov eax [ esp + 0x20 ]
mov [ esi + 0x34 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x38 ] eax
mov eax [ esp + 0x24 ]
mov [ esi + 0x3c ] eax
mov eax [ esp + 0x28 ]
mov [ esi + 0x40 ] eax
mov eax [ esp + 0x1c ]
mov [ esi + 0x44 ] eax
mov eax [ esp + 0x18 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x4c ] edi
mov eax [ edi + 0x10 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] ebx
mov [ esi + 0x8 ] 0xffffffff
jmp r-xdata
mov ecx esi
call sub_49100f
test eax eax
jne r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esi + 0x54 ]
mov ecx [ esi + 0x4c ]
inc eax
cmp eax [ ecx + 0x18 ]
jge r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] eax
mov [ esi + 0x50 ] eax
jmp r-xdata
sub_490d7c
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
push esi
push [ rw-data ]
call sub_47eb51
add esp 0x8
push 0x0
push [ esi + 0x8 ]
call sub_489b5f
add esp 0x8
push [ esi + 0x8 ]
call [ rw-data ]
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push eax
call sub_490d7c
add esp 0x4
pop esi
jmp sub_43f9d4
push eax
call sub_490c67
add esp 0x4
sub_490dcc
push ebp
push ebx
push edi
push esi
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
lea edi [ esi + 0x10 ]
push ebp
push ebx
push edi
call sub_43ff80
add esp 0xc
cmp [ esi + 0x20 ] 0x0
je r-xdata
push 0x62d
push r--data
push r--data
call sub_4a509d
add esp 0xc
push edi
call sub_43ff78
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
call sub_49181e
add esp 0x4
sub_490e24
push ebx
push edi
push esi
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x18 ]
cmp [ edi + 0x48 ] 0x0
je r-xdata
mov ebx [ esp + 0x14 ]
lea eax [ edi + 0x10 ]
push eax
call sub_43ff54
add esp 0x4
cmp esi 0x2
jb r-xdata
push 0x641
push r--data
push r--data
call sub_4a509d
add esp 0xc
lea eax [ edi + 0x30 ]
push esi
push ebx
push eax
call sub_49a1f0
add esp 0xc
mov [ edi + 0x34 ] esi
cmp [ edi + 0x20 ] 0x0
je r-xdata
push 0x647
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esi
pop esi
pop edi
pop ebx
retn
push edi
call sub_49181e
add esp 0x4
mov esi [ edi + 0x34 ]
sub_490ea1
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov [ esi + 0x48 ] 0x1
cmp [ esi + 0x20 ] 0x0
je r-xdata
push 0x658
push r--data
push r--data
call sub_4a509d
add esp 0xc
pop esi
retn
pop esi
jmp sub_49181e
sub_490ed9
push edi
push esi
sub esp 0x8
mov ecx [ rw-data ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
mov [ esp + 0x4 ] ecx
cmp [ esi + 0x24 ] eax
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
retn
test eax eax
mov [ esi + 0x24 ] eax
je r-xdata
push 0x1
push [ esi + 0x8 ]
call sub_489b5f
add esp 0x8
cmp [ esi + 0x28 ] 0x0
lea edi [ esi + 0x28 ]
je r-xdata
add esi 0x28
mov edi esi
jmp r-xdata
mov [ edi ] 0x0
lea eax [ esp + 0x3 ]
push 0x2
push 0x1
push eax
push [ esi + 0x8 ]
call [ rw-data ]
sub_490f48
push ebp
mov ebp esp
push edi
push esi
and esp 0xfffffff8
sub esp 0xd8
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
lea edi [ esp + 0x8 ]
lea edx [ esp + 0x50 ]
mov [ esp + 0xd4 ] ecx
mov [ edi ] 0x80
push edi
push edx
push [ eax + 0x8 ]
call [ rw-data ]
xor esi esi
test eax eax
js r-xdata
mov ecx [ esp + 0xd4 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0x8 ]
pop esi
pop edi
pop ebp
retn
movzx eax [ esp + 0x50 ]
cmp eax 0x17
je r-xdata
lea esi [ esp + 0x58 ]
movzx eax [ esi - 0x6 ]
push eax
call [ rw-data ]
movzx edi ax
lea eax [ esp + 0xf ]
push 0x41
push eax
push esi
push 0x17
call [ rw-data ]
push edi
push eax
push r--data
movzx eax ax
cmp eax 0x2
jne r-xdata
movzx eax [ esp + 0x52 ]
push eax
call [ rw-data ]
movzx esi ax
mov eax [ esp + 0x54 ]
mov [ esp + 0x4 ] eax
sub esp 0x4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
call [ rw-data ]
push esi
push eax
push r--data
jmp r-xdata
call sub_43f758
add esp 0xc
mov esi eax
sub_49100f
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x480
mov eax [ rw-data ]
mov esi ecx
mov [ esp + 0x478 ] eax
mov eax [ esi + 0x8 ]
cmp eax 0xffffffff
je r-xdata
mov ebx esi
lea ecx [ esp + 0x274 ]
mov edi [ ebx + 0x4c ]
mov eax [ edi + 0xc ]
mov [ esp + 0x258 ] eax
lea eax [ edi + 0x18 ]
movsd xmm0 [ edi + 0x4 ]
movsd [ esp + 0x250 ] xmm0
mov esi [ edi + 0x14 ]
push 0x204
push eax
push ecx
call sub_49a1f0
add esp 0xc
mov [ esp + 0x8 ] ebx
mov eax [ ebx + 0x50 ]
test eax eax
jne r-xdata
push 0x0
push eax
call sub_489b5f
add esp 0x8
push [ esi + 0x8 ]
call [ rw-data ]
mov edi [ esp + 0x8 ]
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
push edi
push [ rw-data ]
call sub_47eb51
add esp 0x8
push 0x0
push 0x1
push esi
call [ rw-data ]
mov ebx eax
cmp ebx 0xffffffff
mov [ edi + 0x8 ] ebx
je r-xdata
mov eax [ edi + 0x50 ]
test eax eax
je r-xdata
mov edi [ esp + 0x8 ]
mov ecx [ edi + 0x54 ]
lea esi [ esi + ecx * 4 ]
jmp r-xdata
call [ rw-data ]
mov ebx eax
xor edi edi
push edi
push 0x1
push ebx
call [ SetHandleInformation@IAT ]
mov eax [ esp + 0x8 ]
cmp [ eax + 0x38 ] edi
mov edi [ esp + 0x8 ]
je r-xdata
mov esi 0x2
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x258 ]
movsd xmm0 [ esp + 0x250 ]
lea edx [ esp + 0x3c ]
mov [ edx - 0x18 ] 0x1
mov [ edx - 0xc ] ecx
movsd [ edx - 0x14 ] xmm0
mov [ edx - 0x8 ] eax
mov [ edx - 0x4 ] esi
push 0x204
lea eax [ esp + 0x278 ]
push eax
push edx
call sub_49a1f0
add esp 0xc
mov eax [ edi + 0xc ]
xor esi esi
lea edx [ esp + 0x24 ]
mov ecx [ eax ]
push esi
push esi
push [ edi + 0x58 ]
push edx
push esi
push eax
call [ ecx ]
add esp 0x18
mov eax [ edi + 0x4c ]
cmp [ eax + 0x8 ] esi
je r-xdata
mov esi edi
mov edi [ esi + 0x4c ]
mov eax [ edi + 0xc ]
mov [ esp + 0x20 ] eax
movsd xmm0 [ edi + 0x4 ]
movsd [ esp + 0x18 ] xmm0
mov eax [ edi + 0x14 ]
mov [ esp + 0xc ] eax
lea eax [ edi + 0x18 ]
push 0x204
push eax
lea eax [ esp + 0x27c ]
push eax
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
jmp r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
mov [ esp + 0x24 ] 0x1
push 0x4
lea eax [ esp + 0x28 ]
push eax
push 0x100
push 0xffff
push ebx
call [ rw-data ]
mov edi [ esp + 0x8 ]
mov esi [ esp + 0xc ]
lea edx [ esp + 0x3c ]
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
xor ebx ebx
cmp [ edi + 0x40 ] 0x0
je r-xdata
xor eax eax
inc eax
mov [ esp + 0x24 ] eax
push 0x4
lea ecx [ esp + 0x28 ]
push ecx
push eax
push 0x6
push ebx
call [ rw-data ]
mov ecx [ esp + 0x478 ]
call sub_497c4a
mov eax ebx
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x8 ]
mov esi [ esp + 0xc ]
lea edx [ esp + 0x3c ]
mov ecx [ edi + 0x54 ]
lea esi [ esi + ecx * 4 ]
jmp r-xdata
xor eax eax
cmp [ edi + 0x44 ] 0x0
mov di 0x3ff
mov ecx 0x10
lea edx [ esp + 0x240 ]
mov [ esp + 0x10 ] esi
cmove di ax
cmp esi 0x17
mov eax 0x1c
cmove ecx eax
lea eax [ esp + 0x250 ]
cmove edx eax
mov [ esp + 0xc ] ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0x24 ] 0x1
push 0x4
lea eax [ esp + 0x28 ]
push eax
push 0x8
push 0xffff
push ebx
call [ rw-data ]
xor ecx ecx
movsd xmm0 [ esp + 0x18 ]
inc ecx
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x20 ]
mov [ esp + 0x30 ] ecx
movsd [ esp + 0x28 ] xmm0
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] esi
push 0x204
lea eax [ esp + 0x278 ]
push eax
push edx
call sub_49a1f0
add esp 0xc
mov eax [ edi + 0xc ]
mov ecx [ eax ]
push ebx
push [ edi + 0x4 ]
push [ edi + 0x58 ]
lea edx [ esp + 0x30 ]
push edx
xor edx edx
inc edx
push edx
push eax
call [ ecx ]
add esp 0x18
jmp r-xdata
mov [ esp + 0x240 ] 0x2
push 0x0
call [ rw-data ]
mov [ esp + 0x244 ] eax
sub esp 0x4
movzx eax di
mov [ esp ] eax
call [ rw-data ]
mov [ esp + 0x242 ] ax
xorps xmm0 xmm0
xor eax eax
movaps [ esp + 0x250 ] xmm0
mov [ esp + 0x264 ] eax
mov [ esp + 0x260 ] eax
mov [ esp + 0x268 ] eax
mov [ esp + 0x250 ] 0x17
sub esp 0x4
movzx eax di
mov [ esp ] eax
call [ rw-data ]
mov [ esp + 0x252 ] ax
jmp r-xdata
mov edi [ esp + 0x8 ]
mov eax [ edi + 0x50 ]
test eax eax
je r-xdata
call [ rw-data ]
mov ebx eax
test di di
je r-xdata
push [ esp + 0xc ]
push [ esp + 0x18 ]
mov esi ebx
push ebx
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ edi + 0x4c ]
mov eax [ edx + 0x14 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x17
jne r-xdata
test ebx ebx
je r-xdata
cmp ebx 0x2740
jne r-xdata
push 0x473
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ edi + 0x4c ]
mov ecx [ edi + 0x54 ]
mov eax [ eax + 0x14 ]
mov ecx [ edi + 0x54 ]
cmp ecx [ edx + 0x18 ]
jl r-xdata
mov [ esp + 0x240 ] 0x2
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x250 ] 0x17
movzx eax [ edi + 0x58 ]
push eax
call [ rw-data ]
mov [ esp + 0x252 ] ax
mov eax [ edi + 0x50 ]
mov eax [ eax + 0x18 ]
movsd xmm0 [ eax + 0x8 ]
movsd xmm1 [ eax + 0x10 ]
movsd [ esp + 0x260 ] xmm1
movsd [ esp + 0x258 ] xmm0
mov ecx [ eax + 0x4 ]
mov [ esp + 0x254 ] ecx
mov eax [ eax + 0x18 ]
mov [ esp + 0x268 ] eax
jmp r-xdata
push ebx
call sub_49021e
add esp 0x4
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ebx esi
mov esi [ esp + 0x10 ]
dec di
jne r-xdata
mov [ esp + 0x244 ] eax
movzx eax [ edi + 0x58 ]
push eax
call [ rw-data ]
mov [ esp + 0x242 ] ax
mov [ esp + 0x240 ] 0x2
push [ eax + ecx * 4 ]
call [ rw-data ]
jmp r-xdata
push [ esp + 0xc ]
push [ esp + 0x18 ]
push esi
call [ rw-data ]
cmp eax 0xffffffff
je r-xdata
xor ebx ebx
inc ebx
push 0x1
push esi
call sub_489b5f
add esp 0x8
test eax eax
je r-xdata
mov [ edi + 0x4 ] eax
push edi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
cmp esi 0x17
jne r-xdata
mov ebx 0x2740
jmp r-xdata
call [ rw-data ]
mov ebx eax
cmp ebx 0x2733
jne r-xdata
mov [ edi + 0x20 ] 0x1
jmp r-xdata
push ebx
call sub_49021e
add esp 0x4
mov [ edi + 0x4 ] eax
push edi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
test ebx ebx
jne r-xdata
push edi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
sub_491507
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
sub esp 0x70
mov eax [ rw-data ]
mov ebx [ ebp + 0x10 ]
mov [ esp + 0x68 ] eax
xor eax eax
inc eax
mov [ esp + 0x1c ] eax
push 0x68
push eax
call sub_43f807
add esp 0x8
mov esi eax
xor edi edi
lea eax [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] ebx
push eax
call sub_43ff45
add esp 0x4
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov ebx 0x17
mov [ esi + 0x2c ] eax
mov eax 0x2
mov [ esi + 0x5c ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x4c ] edi
cmp ecx eax
cmovne ebx edi
xor edx edx
inc edx
cmp ecx edx
cmove ebx eax
test ebx ebx
cmove ebx eax
push edi
push edx
push ebx
call [ rw-data ]
cmp eax 0xffffffff
mov [ esi + 0x8 ] eax
je r-xdata
call [ rw-data ]
push eax
push edi
push 0x1
push eax
mov [ esp + 0x1c ] ebx
mov ebx eax
call [ SetHandleInformation@IAT ]
mov eax 0x4
mov [ esi + 0x38 ] edi
lea ecx [ esp + 0x1c ]
push eax
push ecx
push eax
push 0xffff
mov [ esp + 0x24 ] ebx
push ebx
mov ebx [ esp + 0x24 ]
call [ rw-data ]
cmp ebx 0x17
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x20 ] 0x2
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
lea ecx [ esp + 0x48 ]
xorps xmm0 xmm0
movaps [ ecx - 0x8 ] xmm0
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx - 0x8 ] 0x17
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx eax
mov eax 0x7f000001
test ecx ecx
cmove eax ecx
push eax
call [ rw-data ]
mov [ esp + 0x24 ] eax
push eax
call [ rw-data ]
cmp eax 0xffffffff
mov [ esp + 0x24 ] eax
je r-xdata
mov [ ecx + 0x4 ] eax
mov [ ecx ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] eax
movsd xmm0 [ r--data ]
movsd xmm1 [ r--data ]
movsd [ ecx + 0x8 ] xmm0
movsd [ ecx ] xmm1
jmp r-xdata
cmp ebx 0x17
mov eax 0x1c
mov ecx 0x10
lea edx [ esp + 0x20 ]
cmove ecx eax
lea eax [ esp + 0x40 ]
cmove edx eax
push ecx
push edx
mov edi [ esp + 0x1c ]
push edi
call [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ rw-data ]
and eax 0xff000000
xor ecx ecx
cmp eax 0x7f000000
sete cl
mov [ esi + 0x2c ] ecx
jmp r-xdata
sub esp 0x4
mov eax [ ebp + 0xc ]
movzx eax ax
mov [ esp ] eax
call [ rw-data ]
mov [ esp + 0x42 ] ax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx edi
test ecx ecx
je r-xdata
call [ rw-data ]
test eax eax
je r-xdata
push 0x7fffffff
push edi
call [ rw-data ]
cmp eax 0xffffffff
je r-xdata
sub esp 0x4
mov eax [ ebp + 0xc ]
movzx eax ax
mov [ esp ] eax
call [ rw-data ]
mov [ esp + 0x22 ] ax
jmp r-xdata
mov eax ecx
lea edi [ esp + 0x20 ]
xor ecx ecx
mov [ edi + 0xc ] ecx
mov [ edi + 0x8 ] ecx
mov [ edi + 0x14 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1c ] ecx
mov [ edi + 0x18 ] ecx
mov [ edi + 0x4 ] 0x17
mov [ edi ] ecx
push eax
call sub_43f6f7
add esp 0x4
lea ecx [ esp + 0x18 ]
push ecx
push edi
xor ecx ecx
push ecx
mov edi eax
push edi
call [ rw-data ]
mov [ esp + 0xc ] eax
push edi
call sub_43f9d4
add esp 0x4
cmp [ esp + 0xc ] 0x0
jne r-xdata
push edi
mov edi eax
call [ rw-data ]
push edi
jmp r-xdata
push edi
call [ rw-data ]
push 0x1
push edi
call sub_489b5f
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax + 0x4 ] 0x17
jne r-xdata
call sub_49021e
add esp 0x4
mov [ esi + 0x4 ] eax
push esi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push edi
mov edi eax
call [ rw-data ]
mov [ esi + 0x4 ] edi
jmp r-xdata
mov eax [ eax + 0x18 ]
movsd xmm0 [ eax + 0x8 ]
movsd xmm1 [ eax + 0x10 ]
lea eax [ esp + 0x48 ]
movsd [ eax + 0x8 ] xmm1
movsd [ eax ] xmm0
mov ecx [ esp + 0x68 ]
call sub_497c4a
mov eax esi
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
push 0x2
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_491507
add esp 0x14
test eax eax
je r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov [ eax + 0x60 ] esi
mov [ esi + 0x64 ] eax
jmp r-xdata
push eax
call sub_43f9d4
add esp 0x4
jmp r-xdata
sub_49181e
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov ebx [ esp + 0x24 ]
mov eax [ rw-data ]
lea ebp [ ebx + 0x30 ]
lea ecx [ ebx + 0x10 ]
mov [ esp + 0xc ] eax
mov [ esp ] ecx
jmp r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jne r-xdata
xor edx edx
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ebp
mov ecx ebp
inc edx
push [ esp ]
call sub_43ff78
add esp 0x4
test eax eax
jg r-xdata
xor edi edi
test esi esi
jns r-xdata
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
cmp [ ebx + 0x48 ] 0x1
jne r-xdata
test esi esi
sets al
cmp edi 0x2710
setb cl
cmp edi 0x2733
je r-xdata
call [ rw-data ]
mov edi eax
push esi
push [ esp + 0x4 ]
call sub_44000a
mov edi [ esp + 0x4 ]
xor eax eax
sub edi esi
jle r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
push [ esp + 0x8 ]
call sub_44008c
add esp 0xc
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
xor edx edx
jmp r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x1
push [ ebx + 0x8 ]
call [ rw-data ]
mov [ ebx + 0x48 ] 0x2
jmp r-xdata
mov [ ebx + 0x20 ] 0x0
jmp r-xdata
and al cl
jne r-xdata
mov [ ebx + 0x34 ] eax
jmp r-xdata
lea eax [ ebx + esi + 0x30 ]
push edi
push eax
push ebp
call sub_49a770
add esp 0xc
mov eax edi
push edx
push eax
push ecx
push [ ebx + 0x8 ]
call [ rw-data ]
mov esi eax
push esi
call sub_49235c
add esp 0x4
test esi esi
jle r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x5c ] edi
push ebx
push sub_4919a8
call sub_43023c
add esp 0x8
lea eax [ edi - 0x2745 ]
cmp eax 0x1
jbe r-xdata
push edi
call sub_49021e
add esp 0x4
push eax
push 0x0
call sub_4842ab
add esp 0x8
push edi
call sub_49021e
add esp 0x4
push eax
push r--data
call sub_48cc18
jmp r-xdata
add esp 0x8
jmp r-xdata
sub_4919a8
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
push 0x0
push esi
push [ rw-data ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
retn
mov edi [ esi + 0x5c ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov ebx [ eax + 0x4 ]
push edi
call sub_49021e
add esp 0x4
push 0x0
push edi
push eax
push [ esi + 0xc ]
call ebx
add esp 0x10
sub_4919ec
push ebp
mov ebp esp
push ebx
push edi
push esi
and esp 0xfffffff0
mov eax 0x5240
call sub_497c60
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
test eax eax
mov [ esp + 0x5238 ] ecx
je r-xdata
mov ecx [ esp + 0x5238 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
push sub_491e93
push eax
push [ rw-data ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
mov esi eax
mov ebx edi
shr ebx 0x10
je r-xdata
mov ebx eax
push edi
call sub_49235c
add esp 0x4
lea eax [ edi - 0x1 ]
movzx eax ax
cmp eax 0x7
ja r-xdata
mov edi [ esi + 0x4c ]
test edi edi
je r-xdata
movzx eax di
cmp eax 0x10
je r-xdata
mov ecx ebx
jmp [ eax * 4 + jump_table_41dc14 ]
add eax 0xc
jmp r-xdata
mov [ esp + 0xc ] eax
lea ecx [ esp + 0x5034 ]
mov eax [ edi + 0xc ]
mov [ esp + 0x28 ] eax
movsd xmm0 [ edi + 0x4 ]
movsd [ esp + 0x20 ] xmm0
mov eax [ edi + 0x14 ]
mov [ esp + 0x10 ] eax
lea eax [ edi + 0x18 ]
push 0x204
push eax
push ecx
call sub_49a1f0
add esp 0xc
mov eax [ esi + 0x50 ]
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
xor eax eax
inc eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
cmp eax 0x20
jne r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov ecx [ eax ]
mov ecx [ ecx ]
mov esi [ ecx + 0x4 ]
push ebx
mov edi eax
call sub_49021e
add esp 0x4
push 0x0
push ebx
push eax
push [ edi ]
call esi
mov eax [ esp + 0x10 ]
lea edi [ esp + 0x5034 ]
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
push eax
call sub_490c67
add esp 0x4
mov [ esi + 0x4c ] 0x0
jmp r-xdata
lea edi [ esp + 0x30 ]
push 0x0
push 0x5000
push edi
push [ esi + 0x8 ]
call [ rw-data ]
test eax eax
js r-xdata
cmp [ esi + 0x38 ] 0x0
mov [ esp + 0x5034 ] 0x1
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esi + 0x50 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x54 ]
mov eax [ esp + 0x10 ]
lea edi [ esp + 0x5034 ]
lea eax [ eax + ecx * 4 ]
jmp r-xdata
call [ rw-data ]
mov edi eax
cmp edi 0x2733
je r-xdata
xor ebx ebx
add ecx 0x8
add ecx 0x8
lea eax [ esp + 0x5034 ]
push eax
push 0x40047307
push [ esi + 0x8 ]
mov edi ecx
call [ rw-data ]
mov ecx edi
jmp r-xdata
mov ecx [ esi + 0x54 ]
inc ecx
cmp ecx [ eax + 0x18 ]
jge r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
xor edx edx
lea ecx [ esp + 0x48 ]
movsd xmm0 [ esp + 0x20 ]
inc edx
mov [ ecx - 0x18 ] edx
mov edx [ esp + 0x28 ]
mov [ ecx - 0xc ] edx
mov edx [ esp + 0x14 ]
movsd [ ecx - 0x14 ] xmm0
mov [ ecx - 0x8 ] edx
mov [ ecx - 0x4 ] eax
push 0x204
push edi
push ecx
call sub_49a1f0
add esp 0xc
add [ esp + 0xc ] 0xc
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
push ebx
call sub_49021e
add esp 0x4
lea ecx [ esp + 0x30 ]
push ebx
push eax
push [ esi + 0x58 ]
push ecx
xor eax eax
inc eax
push eax
push [ esi + 0xc ]
call edi
add esp 0x18
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov ebx [ eax + 0x4 ]
push edi
call sub_49021e
add esp 0x4
push 0x0
push edi
push eax
push [ esi + 0xc ]
call ebx
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push edx
call [ ecx + 0x4 ]
jmp r-xdata
push eax
push edi
push ebx
push edx
call [ ecx + 0x8 ]
add esp 0x10
push ebx
push 0x5000
push edi
push [ esi + 0x8 ]
call [ rw-data ]
test eax eax
jns r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
je r-xdata
lea ebx [ esp + 0x30 ]
push 0x0
push 0x5000
push ebx
push [ ecx ]
call [ rw-data ]
mov edi eax
push edi
call sub_49235c
add esp 0x4
test edi edi
js r-xdata
mov [ esi + 0x54 ] ecx
mov [ esi + 0x50 ] eax
jmp r-xdata
add esp 0x10
mov edx [ esi + 0xc ]
test eax eax
mov ecx [ edx ]
je r-xdata
jmp r-xdata
xor edx edx
push edx
push edx
push edx
push ecx
call [ eax + 0x4 ]
jmp r-xdata
mov edx [ esp + 0x5034 ]
mov esi ebx
xor ebx ebx
test edx edx
sete bl
push edi
push esi
push ebx
push ecx
call [ eax + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx esi
call sub_49100f
mov ebx eax
test ebx ebx
jne r-xdata
sub_491c6a
lea ebx [ esp + 0x30 ]
push 0x1
push 0x5000
push ebx
push [ esi + 0x8 ]
call [ rw-data ]
mov edi eax
push edi
call sub_49235c
add esp 0x4
test edi edi
jle r-xdata
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edi
push ebx
push 0x2
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov esi r--data
call [ rw-data ]
push eax
call sub_49021e
add esp 0x4
mov esi eax
jmp r-xdata
add esp 0x10
mov ecx [ esp + 0x5238 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
push esi
push 0x0
call sub_4842ab
add esp 0x8
push esi
push r--data
call sub_48cc18
add esp 0x8
jmp r-xdata
sub_491ca4
lea eax [ esp + 0x5034 ]
xorps xmm0 xmm0
lea ecx [ esp + 0x30 ]
movaps [ ecx + 0x70 ] xmm0
movaps [ ecx + 0x60 ] xmm0
movaps [ ecx + 0x50 ] xmm0
movaps [ ecx + 0x40 ] xmm0
movaps [ ecx + 0x30 ] xmm0
movaps [ ecx + 0x20 ] xmm0
movaps [ ecx + 0x10 ] xmm0
mov [ eax ] 0x80
movaps [ ecx ] xmm0
push eax
push ecx
push [ esi + 0x8 ]
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
movzx eax [ esp + 0x30 ]
cmp eax 0x2
jne r-xdata
call [ rw-data ]
cmp eax 0x2afa
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov ecx [ ecx + 0x10 ]
mov [ esp + 0x18 ] edi
sub esp 0xc
mov edx [ esp + 0x24 ]
mov [ esp + 0x8 ] edx
mov [ esp ] eax
mov [ esp + 0x4 ] sub_491eaa
call ecx
add esp 0xc
test eax eax
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov ecx [ esp + 0x5238 ]
call sub_497c4a
lea esp [ ebp - 0xc ]
pop esi
pop edi
pop ebx
pop ebp
retn
push edi
call [ rw-data ]
jmp r-xdata
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
sub esp 0x4
mov eax [ esp + 0x20 ]
mov [ esp ] eax
call sub_490a87
add esp 0x4
test eax eax
je r-xdata
sub_491eaa
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
push 0x68
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor ebx ebx
lea eax [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] edi
push eax
call sub_43ff45
add esp 0x4
movaps xmm0 [ r--data ]
mov [ esi + 0x34 ] ebx
mov [ esi + 0x48 ] ebx
movups [ esi + 0x20 ] xmm0
mov [ esi + 0x5c ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x4c ] ebx
mov eax [ esp + 0x10 ]
cmp eax 0xffffffff
mov [ esi + 0x8 ] eax
je r-xdata
call [ rw-data ]
push eax
call sub_49021e
add esp 0x4
mov [ esi + 0x38 ] 0x0
push 0x1
push eax
call sub_489b5f
add esp 0x8
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
push esi
push [ rw-data ]
call sub_47dcb3
add esp 0x8
jmp r-xdata
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_491f49
push esi
push 0x0
push [ rw-data ]
call sub_47e33c
add esp 0x8
test eax eax
je r-xdata
pop esi
retn
xor esi esi
inc esi
push esi
push [ rw-data ]
call sub_47e33c
add esp 0x8
inc esi
test eax eax
jne r-xdata
push 0x1
push [ eax + 0x8 ]
call sub_489b5f
add esp 0x8
cmp [ eax + 0x24 ] 0x0
jne r-xdata
sub_491fac
push edi
push esi
xor esi esi
mov edi 0x80
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
push esi
call sub_4a7f30
add esp 0x4
lea ecx [ edi - 0x1 ]
cmp eax ecx
jae r-xdata
add edi edi
push 0x1
push edi
push esi
call sub_43f8db
add esp 0xc
mov esi eax
push edi
push esi
call [ rw-data ]
test eax eax
js r-xdata
jmp r-xdata
mov eax esi
pop esi
pop edi
retn
sub_491ff3
push edi
push esi
xor edi edi
inc edi
push 0x21c
push edi
call sub_43f807
add esp 0x8
mov esi eax
lea eax [ esi + 0x8 ]
push 0x214
push 0x0
push eax
call sub_49acf0
add esp 0xc
mov [ esi + 0x4 ] r--data
mov [ esi ] edi
mov eax esi
pop esi
pop edi
retn
sub_49202c
push ebp
push ebx
push edi
push esi
sub esp 0x274
mov eax [ rw-data ]
mov edi [ esp + 0x288 ]
lea esi [ esp + 0x29 ]
mov [ esp + 0x270 ] eax
push 0x107
push esi
call [ GetWindowsDirectoryA@IAT ]
push esi
call sub_4a7f30
add esp 0x4
lea ebx [ esp + 0x130 ]
mov [ esp + eax + 0x2b ] 0x0
mov [ esp + eax + 0x29 ] 0x2a5c
push ebx
push esi
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
call [ GetCurrentProcessId@IAT ]
lea ecx [ esp + 0x4 ]
mov [ ecx ] eax
push 0x4
push ecx
call edi
add esp 0x8
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ebp [ FindNextFileA@IAT ]
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
jmp r-xdata
push 0x140
push ebx
call edi
add esp 0x8
push ebx
push esi
call ebp
test eax eax
jne r-xdata
push esi
call [ FindClose@IAT ]
mov [ rw-data ] 0x0
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
push edi
call sub_494bf2
add esp 0x4
call sub_4921c4
mov ecx [ esp + 0x270 ]
call sub_497c4a
add esp 0x274
pop esi
pop edi
pop ebx
pop ebp
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
xor ecx ecx
xor eax eax
push r--data
push ecx
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
jmp r-xdata
test eax eax
je r-xdata
mov [ rw-data ] eax
xor eax eax
mov edx esp
push 0xf0000000
push 0x1
push eax
push eax
push edx
call ecx
test eax eax
je r-xdata
lea esi [ esp + 0x9 ]
push esi
push 0x20
push [ esp + 0x8 ]
call [ rw-data ]
test eax eax
je r-xdata
push 0x0
push [ esp + 0x4 ]
call [ rw-data ]
push 0x20
push esi
call edi
add esp 0x8
sub_4921c4
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
add esp 0xc
pop esi
pop edi
retn
lea esi [ esp + 0x4 ]
mov edi esp
push esi
push edi
call sub_469c95
add esp 0x8
push [ esi ]
push [ edi ]
call sub_494ed5
add esp 0x8
push [ edi ]
call sub_43f9d4
add esp 0x4
sub_492210
push edi
push esi
sub esp 0x20
mov eax [ rw-data ]
mov esi [ esp + 0x2c ]
lea edi [ esp + 0x4 ]
mov [ esp + 0x1c ] eax
push edi
call [ GetSystemTime@IAT ]
push 0x10
push edi
call esi
add esp 0x8
mov ecx esp
lea eax [ esp + 0x18 ]
lea edi [ esp + 0x14 ]
push ecx
push eax
push edi
call [ GetSystemTimeAdjustment@IAT ]
push 0x8
push edi
call esi
add esp 0x8
mov ecx [ esp + 0x1c ]
call sub_497c4a
add esp 0x20
pop esi
pop edi
retn
sub_49225f
push ebp
push ebx
push edi
push esi
sub esp 0x54
mov eax [ rw-data ]
mov [ esp + 0x50 ] eax
call [ GetForegroundWindow@IAT ]
lea edi [ esp + 0x2c ]
mov esi 0x4
mov [ edi ] eax
push esi
push edi
call sub_4698c8
add esp 0x8
call [ GetCapture@IAT ]
mov [ edi ] eax
push esi
push edi
call sub_4698c8
add esp 0x8
call [ GetClipboardOwner@IAT ]
mov [ edi ] eax
push esi
push edi
call sub_4698c8
add esp 0x8
push 0x1cbf
call [ GetQueueStatus@IAT ]
lea ecx [ esp + 0x28 ]
mov [ ecx ] eax
push esi
push ecx
call sub_4698c8
add esp 0x8
lea esi [ esp + 0x20 ]
push esi
call [ GetCursorPos@IAT ]
mov eax 0x8
push eax
push esi
call sub_4698c8
add esp 0x8
mov edi esp
push edi
call [ GlobalMemoryStatus@IAT ]
mov eax 0x20
push eax
push edi
call sub_4698c8
add esp 0x8
lea ebx [ esp + 0x48 ]
lea esi [ esp + 0x40 ]
lea ebp [ esp + 0x38 ]
call [ GetCurrentThread@IAT ]
lea edi [ esp + 0x30 ]
push ebx
push esi
push ebp
push edi
push eax
call [ GetThreadTimes@IAT ]
mov eax 0x20
push eax
push edi
call sub_4698c8
add esp 0x8
call [ GetCurrentProcess@IAT ]
push ebx
push esi
push ebp
push edi
push eax
call [ GetProcessTimes@IAT ]
mov eax 0x20
push eax
push edi
call sub_4698c8
add esp 0x8
mov ecx [ esp + 0x50 ]
call sub_497c4a
add esp 0x54
pop esi
pop edi
pop ebx
pop ebp
retn
sub_49235c
push ebp
mov ebp esp
push esi
and esp 0xfffffff8
sub esp 0x18
mov eax [ rw-data ]
mov esi 0x4
mov [ esp + 0x10 ] eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_4698c8
add esp 0x8
call [ GetTickCount@IAT ]
lea ecx [ esp + 0xc ]
mov [ ecx ] eax
push esi
push ecx
call sub_4698c8
add esp 0x8
mov esi esp
push esi
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
call sub_497c4a
lea esp [ ebp - 0x4 ]
pop esi
pop ebp
retn
push 0x8
push esi
call sub_4698c8
add esp 0x8
sub_4923c0
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov esi [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
push 0x9
push r--data
push esi
call sub_4a7fc0
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x9 ]
push 0x5c
push eax
call sub_49ae50
add esp 0x8
test eax eax
je r-xdata
push 0x1e
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov ebp [ CreateFileA@IAT ]
xor edi edi
push 0x1f
push r--data
push r--data
call sub_4a509d
add esp 0xc
call sub_4931fa
mov edi eax
test edi edi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xe7
jne r-xdata
push esi
call [ CloseHandle@IAT ]
push r--data
call sub_43f758
add esp 0x4
mov esi eax
push [ esp + 0x24 ]
push esi
call sub_43bf6c
add esp 0x8
mov edi eax
push esi
mov eax esp
xor ecx ecx
lea edx [ esp + 0x4 ]
push eax
push ecx
push ecx
push ecx
push edx
push 0x1
push 0x6
push esi
call [ rw-data ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push ebx
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push [ esp + 0x24 ]
push esi
call sub_43bf6c
add esp 0x8
mov edi eax
push esi
jmp r-xdata
push 0x0
mov esi ebx
push esi
call [ WaitNamedPipeA@IAT ]
test eax eax
jne r-xdata
push edi
push [ esp + 0x8 ]
call [ EqualSid@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push [ esp + 0x24 ]
push ebx
call sub_43bf6c
add esp 0x8
mov edi eax
push ebx
call sub_43f9d4
add esp 0x4
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
call sub_43f9d4
add esp 0x4
push edi
push 0x40000000
push 0x3
push edi
push edi
push 0xc0000000
mov ebx esi
push esi
call ebp
mov esi eax
cmp esi 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push esi
push r--data
call sub_43f758
add esp 0xc
mov esi eax
push [ esp + 0x24 ]
push esi
call sub_43bf6c
add esp 0x8
mov edi eax
push esi
jmp r-xdata
push ebx
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push [ esp + 0x24 ]
push ebx
call sub_43bf6c
add esp 0x8
mov edi eax
push ebx
call sub_43f9d4
add esp 0x4
push esi
call [ CloseHandle@IAT ]
push [ esp ]
call [ LocalFree@IAT ]
jmp r-xdata
push [ esp ]
call [ LocalFree@IAT ]
push 0x1
push [ esp + 0x28 ]
push 0x0
push esi
push esi
call sub_48e968
add esp 0x14
mov edi eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax edi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
sub_4925e4
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
push 0x34
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
mov [ esi ] r--data
mov [ esi + 0x2c ] edi
xor edi edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x4 ] edi
push ebx
call sub_43f79e
add esp 0x4
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x28 ] edi
push 0x9
push r--data
push ebx
call sub_4a7fc0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
lea ebx [ esi + 0x30 ]
lea ebp [ esi + 0x4 ]
lea edi [ esi + 0x8 ]
lea eax [ eax + 0x9 ]
push 0x5c
push eax
call sub_49ae50
add esp 0x8
test eax eax
je r-xdata
push 0xea
push r--data
push r--data
call sub_4a509d
add esp 0xc
push ebx
push edi
push ebp
push 0xc0000000
call sub_493468
add esp 0x10
test eax eax
je r-xdata
push 0xeb
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
xor edx edx
mov ecx esi
inc edx
call sub_492787
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push [ esp + 0x18 ]
push r--data
call sub_43f758
add esp 0xc
mov [ ebx ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x24 ] eax
push eax
push eax
push 0x1
push eax
call [ CreateEventA@IAT ]
mov [ esi + 0x24 ] eax
push esi
push sub_4927f5
push eax
call sub_48e1a2
add esp 0xc
xor edx edx
mov ecx esi
mov [ esi + 0x28 ] eax
call sub_492801
jmp r-xdata
sub_49271d
push edi
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov edi [ CloseHandle@IAT ]
push [ esi + 0x10 ]
call edi
push [ esi + 0x24 ]
call edi
push [ esi + 0x30 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0xc ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_48e3f4
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
pop esi
pop edi
jmp sub_43f9d4
push eax
call [ LocalFree@IAT ]
sub_492787
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov esi ecx
mov edi 0x40000003
mov ebx 0x8
mov [ esp + 0xc ] eax
mov eax esp
mov [ eax ] 0xc
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
test edx edx
mov edx 0x40080003
cmovne edi edx
mov [ eax + 0x8 ] ecx
mov edx 0x1000
push eax
push ecx
push edx
push edx
push 0xff
push ebx
push edi
push [ esi + 0xc ]
call [ CreateNamedPipeA@IAT ]
mov [ esi + 0x10 ] eax
xor ebx ebx
cmp eax 0xffffffff
mov ecx [ esp + 0xc ]
setne bl
call sub_497c4a
mov eax ebx
add esp 0x10
pop esi
pop edi
pop ebx
retn
sub_492801
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov esi ecx
test edx edx
mov [ esp + 0x4 ] eax
jne r-xdata
mov eax [ esi + 0x2c ]
mov edi [ esi + 0x10 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x10 ]
mov [ esp ] edi
sub esp 0xc
mov edx [ esp + 0xc ]
mov [ esp + 0x8 ] edx
mov [ esp ] eax
mov [ esp + 0x4 ] sub_4928e3
call ecx
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ ConnectNamedPipe@IAT ]
test eax eax
je r-xdata
xor edx edx
mov ecx esi
call sub_492787
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
mov edi eax
test edi edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
cmp edi 0x217
je r-xdata
push edi
call sub_48f7e3
add esp 0x4
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
mov eax [ esi + 0x2c ]
mov eax [ eax ]
mov ebp [ eax ]
push [ esi + 0xc ]
call sub_4907ee
add esp 0x4
push edi
push ebx
push 0x0
push eax
push 0x1
push [ esi + 0x2c ]
call ebp
add esp 0x18
push ebx
call sub_43f9d4
add esp 0x4
cmp edi 0x3e5
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_492936
push ebp
push ebx
push edi
push esi
sub esp 0x28
mov eax [ rw-data ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x44 ]
xor esi esi
mov [ esp + 0x24 ] eax
mov [ edx ] esi
mov [ ecx ] esi
sub esp 0x8
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] eax
call [ FindWindowA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ esp + 0x24 ]
call sub_497c4a
xor eax eax
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
call [ GetCurrentThreadId@IAT ]
push eax
push r--data
call sub_43f758
add esp 0x8
mov edi eax
call sub_493090
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call sub_4931fa
mov ebp eax
test ebp ebp
je r-xdata
push edi
push 0x2000
push 0x0
push 0x4
push eax
push 0xffffffff
call [ CreateFileMappingA@IAT ]
xor ecx ecx
mov ebp eax
lea eax [ ebp + 0x1 ]
inc ecx
cmp eax ecx
ja r-xdata
xor eax eax
xor esi esi
push 0x14
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov [ esp + 0x4 ] ebx
mov ebx edi
mov edi [ esp + 0x40 ]
xor eax eax
push eax
push eax
push eax
push 0x2
push ebp
call [ MapViewOfFile@IAT ]
push edi
push [ esp + 0x40 ]
mov [ esp + 0x8 ] eax
push eax
call sub_49a1f0
add esp 0xc
lea edi [ esp + 0x18 ]
mov [ edi ] 0x804e50ba
push ebx
call sub_4a7f30
add esp 0x4
inc eax
mov [ esp + 0x8 ] ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
push edi
xor eax eax
push eax
push 0x4a
push [ esp + 0x10 ]
call [ SendMessageA@IAT ]
test eax eax
jle r-xdata
push edi
call sub_43f9d4
add esp 0x4
jmp r-xdata
push 0x1
push esi
call [ rw-data ]
test eax eax
je r-xdata
push [ esp ]
call [ UnmapViewOfFile@IAT ]
push ebp
call [ CloseHandle@IAT ]
push [ esp + 0x8 ]
call sub_43f9d4
add esp 0x4
test esi esi
je r-xdata
mov eax [ esp ]
mov edi [ eax ]
bswap edi
add edi 0x4
push 0x1
push edi
call sub_43f807
add esp 0x8
mov ebx eax
test ebx ebx
je r-xdata
push esi
call [ LocalFree@IAT ]
push 0x0
push ebp
push esi
call [ rw-data ]
test eax eax
je r-xdata
push esi
call [ LocalFree@IAT ]
push edi
push [ esp + 0x4 ]
push ebx
call sub_49a1f0
add esp 0xc
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x48 ]
mov [ eax ] ebx
mov [ ecx ] edi
lea eax [ esp + 0xc ]
mov [ eax ] 0xc
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x4 ] esi
jmp r-xdata
sub_492ae8
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov edi [ esp + 0x24 ]
xor ebp ebp
inc ebp
mov [ esp + 0xc ] eax
push 0xc
push ebp
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
mov [ edi ] eax
mov eax 0x200
push ebp
push eax
call sub_43f807
add esp 0x8
xor ebx ebx
cmp [ rw-data ] 0x2
mov edi eax
mov [ esp ] esi
lea ecx [ esp + 0x8 ]
setne bl
xor eax eax
or ebx 0x4
mov [ esi + 0x4 ] ebx
lea esi [ esp + 0x4 ]
mov [ ecx ] eax
mov [ esi ] eax
call sub_492d04
push ebp
mov ebp 0x200
push ebp
push edi
call sub_43f8db
add esp 0xc
mov edi eax
push esi
lea esi [ esp + 0xc ]
push esi
push ebp
push edi
push ebx
mov eax 0x0
push eax
push 0x6
call [ rw-data ]
mov eax [ esi ]
cmp eax 0x1ff
ja r-xdata
push 0x1
push eax
push edi
call sub_43f8db
add esp 0xc
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push esi
push [ esp + 0x10 ]
push edi
push ebx
push 0x0
push 0x6
call [ rw-data ]
test eax eax
je r-xdata
mov eax 0x200
mov [ esp + 0x8 ] 0x200
push edi
call sub_43f9d4
add esp 0x4
push [ esp ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x24 ]
xor esi esi
mov [ eax ] 0x0
mov ebx [ esp + 0x24 ]
mov edx 0x4
mov eax [ ebx ]
add eax [ esp + 0x4 ]
mov [ ebx ] eax
mov esi [ esp ]
mov ecx [ esi + 0x4 ]
and ecx 0xfffffffe
cmp ecx edx
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov [ esi + 0x8 ] edi
mov eax [ ebx ]
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_492c0a
push esi
mov ecx [ esp + 0x8 ]
xor eax eax
test ecx ecx
je r-xdata
pop esi
retn
mov edx [ esp + 0xc ]
test edx edx
js r-xdata
cmp [ ecx ] edx
jle r-xdata
mov esi [ ecx + 0x4 ]
cmp esi 0x5
je r-xdata
mov eax [ ecx + 0x8 ]
lea ecx [ edx + edx * 4 ]
cmp esi 0x4
jne r-xdata
mov eax [ ecx + 0x8 ]
lea ecx [ edx + edx * 2 ]
jmp r-xdata
mov eax [ eax + ecx * 4 ]
sub_492c41
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ eax + 0x4 ]
cmp ecx 0x5
je r-xdata
push [ eax + 0x8 ]
cmp ecx 0x4
jne r-xdata
jmp sub_43f9d4
push [ eax + 0x8 ]
jmp r-xdata
call sub_43f9d4
add esp 0x4
sub_492c6c
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov edi [ esp + 0x1c ]
mov [ esp + 0xc ] eax
push 0x4
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
call sub_492d04
xor eax eax
mov [ esi ] eax
push eax
push esi
push edi
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esp
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] r--data
push eax
push 0x1
push [ esi ]
call [ rw-data ]
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
push eax
call [ rw-data ]
push [ esi ]
call [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
retn
push [ esi ]
call [ rw-data ]
sub_492d04
mov al [ rw-data ]
test al al
jne r-xdata
retn
push edi
push esi
push r--data
call sub_48f6f9
add esp 0x4
mov esi eax
push r--data
call sub_48f6f9
add esp 0x4
test esi esi
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov edi [ GetProcAddress@IAT ]
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
mov [ rw-data ] eax
push r--data
push esi
call edi
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x1
pop esi
pop edi
sub_492dd2
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ rw-data ]
test eax eax
mov [ esp + 0x4 ] ecx
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
retn
mov ecx esp
push ecx
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ eax ]
call [ rw-data ]
sub_492e07
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi ]
call [ rw-data ]
push [ esi ]
call [ rw-data ]
push [ esi ]
call [ rw-data ]
pop esi
jmp sub_43f9d4
sub_492e30
push ebp
push ebx
push edi
push esi
sub esp 0x7c
mov eax [ rw-data ]
mov esi [ esp + 0xb0 ]
mov [ esp + 0x78 ] eax
push 0xd
push esi
call sub_43194f
add esp 0x8
xor edi edi
cmp eax 0x5
jne r-xdata
mov ecx [ esp + 0x78 ]
call sub_497c4a
mov eax edi
add esp 0x7c
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0xac ]
mov edi [ esp + 0x90 ]
push esi
push [ esp + 0x9c ]
push edi
call sub_442b7f
add esp 0xc
mov esi eax
push edi
call sub_490c67
add esp 0x4
push esi
push r--data
call sub_43f758
add esp 0x8
mov edi eax
mov eax [ ebx ]
xor ebp ebp
push ebp
push edi
push ebp
push ebp
push 0x2
push ebx
call [ eax ]
add esp 0x18
push edi
call sub_43f9d4
add esp 0x4
lea edi [ esp + 0x54 ]
lea eax [ esp + 0x68 ]
lea ecx [ esp + 0x6c ]
mov [ edi ] 0xc
mov [ edi + 0x4 ] ebp
mov [ edi + 0x8 ] 0x1
push ebp
push edi
push eax
push ecx
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
push ebx
push r--data
call sub_43bf6c
add esp 0x8
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x74 ]
lea ecx [ esp + 0x70 ]
push 0x0
push edi
push eax
push ecx
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
push ebx
push r--data
call sub_43bf6c
add esp 0x8
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov esi [ CloseHandle@IAT ]
push [ esp + 0x6c ]
call esi
push [ esp + 0x68 ]
test [ rw-data ] 0x2
jne r-xdata
xor eax eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x64 ]
push 0x0
push edi
push eax
push ecx
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x70 ]
mov ebx [ esp + 0x68 ]
mov edx [ esp + 0x60 ]
lea eax [ esp + 0x10 ]
mov [ eax ] 0x44
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x2c ] 0x100
mov [ eax + 0x32 ] 0x0
mov [ eax + 0x34 ] edi
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] ebx
mov ebx esp
mov [ eax + 0x40 ] edx
push ebx
push eax
push edi
push edi
push 0x8000020
push 0x1
push edi
push edi
push esi
push edi
call [ CreateProcessA@IAT ]
mov edi [ CloseHandle@IAT ]
push [ ebx ]
call edi
push [ ebx + 0x4 ]
call edi
push esi
call sub_43f9d4
add esp 0x4
push [ esp + 0x70 ]
call edi
push [ esp + 0x68 ]
call edi
mov eax [ esp + 0x60 ]
test eax eax
je r-xdata
push 0x0
push 0x1
push eax
call [ SetHandleInformation@IAT ]
mov ebx [ SetHandleInformation@IAT ]
xor edi edi
xor ebp ebp
inc ebp
push edi
push ebp
push [ esp + 0x7c ]
call ebx
push edi
push ebp
push [ esp + 0x74 ]
call ebx
mov eax [ esp + 0x64 ]
test eax eax
je r-xdata
push ebx
push r--data
call sub_43bf6c
add esp 0x8
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov esi [ CloseHandle@IAT ]
push [ esp + 0x6c ]
call esi
push [ esp + 0x68 ]
call esi
push [ esp + 0x74 ]
call esi
push [ esp + 0x70 ]
jmp r-xdata
push 0x0
push [ esp + 0xb0 ]
push [ esp + 0x6c ]
push [ esp + 0x78 ]
push [ esp + 0x84 ]
call sub_48e968
add esp 0x14
mov edi eax
push eax
call [ CloseHandle@IAT ]
call esi
jmp r-xdata
sub_493090
push ebx
cmp [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
push r--data
call sub_48f6f9
add esp 0x4
xor ebx ebx
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov [ rw-data ] ebx
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
push r--data
push eax
call [ GetProcAddress@IAT ]
jmp r-xdata
xor ebx ebx
test eax eax
mov [ rw-data ] eax
setne bl
sub_4931fa
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] 0x0
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
call sub_493090
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax ebx
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
call [ GetCurrentProcessId@IAT ]
push eax
push 0x0
push 0x2000000
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
push 0x8
push esi
call [ rw-data ]
test eax eax
je r-xdata
mov [ esp ] 0x0
xor edi edi
jmp r-xdata
lea ecx [ esp + 0x4 ]
xor eax eax
push ecx
push eax
push eax
push 0x1
push [ esp + 0x18 ]
call [ rw-data ]
test eax eax
jne r-xdata
xor ebp ebp
push [ esp + 0x4 ]
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
mov edi 0x0
mov ebp 0x0
mov ebx 0x0
mov [ esp ] 0x0
jne r-xdata
test edi edi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esp ] 0x0
lea eax [ esp + 0x4 ]
push eax
push [ esp + 0x8 ]
push edi
push 0x1
push [ esp + 0x18 ]
call [ rw-data ]
test eax eax
mov [ esp ] edi
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push [ esp ]
call [ LocalFree@IAT ]
push [ edi ]
call [ GetLengthSid@IAT ]
mov ebp eax
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov ebx eax
push [ edi ]
push ebx
push ebp
call [ CopySid@IAT ]
test eax eax
je r-xdata
push ebp
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ebp ebx
jmp r-xdata
xor ebp ebp
mov [ rw-data ] ebx
jmp r-xdata
xor ebx ebx
sub_493355
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
movzx ecx [ r--data ]
movzx edx [ r--data ]
mov edi [ esp + 0x20 ]
mov esi [ r--data ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] cx
mov ecx [ r--data ]
mov [ esp + 0x4 ] dx
mov [ esp + 0x8 ] esi
mov [ esp ] ecx
xor ecx ecx
mov [ edi ] ecx
cmp [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4931fa
test eax eax
mov [ rw-data ] eax
je r-xdata
xor esi esi
inc esi
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
lea eax [ esp + 0x8 ]
push rw-data
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push 0x1
push eax
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push r--data
mov ecx [ esp + 0x10 ]
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
retn
xor eax eax
mov ecx esp
push rw-data
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push 0x2
push 0x1
push ecx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push r--data
call sub_43f758
add esp 0x8
mov [ edi ] eax
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push r--data
jmp r-xdata
call sub_43f758
add esp 0x8
xor esi esi
jmp r-xdata
sub_493468
push ebp
push ebx
push edi
push esi
sub esp 0x64
mov eax [ rw-data ]
mov ecx [ esp + 0x84 ]
mov ebx [ esp + 0x80 ]
mov esi [ esp + 0x7c ]
xor ebp ebp
mov [ esp + 0x60 ] eax
mov [ esi ] ebp
mov [ ebx ] ebp
mov [ ecx ] ebp
push ecx
call sub_493355
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
lea edx [ esp + 0xc ]
mov eax 0x0
mov ecx 0x14
mov esi [ esp + 0x78 ]
mov edi edx
[ edi ]
mov eax 0x4
mov ecx [ rw-data ]
mov [ edx - 0xc ] esi
mov [ edx - 0x8 ] eax
mov [ edx - 0x4 ] ebp
mov [ edx + 0x8 ] ebp
mov [ edx + 0x10 ] ecx
mov ecx [ rw-data ]
mov [ edx + 0x14 ] esi
mov [ edx + 0x18 ] 0x1
mov [ edx + 0x1c ] ebp
mov [ edx + 0x28 ] ebp
mov [ edx + 0x30 ] ecx
mov [ edx + 0x34 ] esi
mov [ edx + 0x38 ] eax
mov eax [ rw-data ]
mov [ edx + 0x3c ] ebp
mov [ edx + 0x48 ] ebp
mov [ edx + 0x50 ] eax
mov eax esp
push ebx
push ebp
push eax
push 0x3
call [ rw-data ]
mov edi r--data
test eax eax
je r-xdata
mov eax [ ebx ]
xor esi esi
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi ] 0x0
cmp [ ebx ] 0x0
je r-xdata
mov esi [ esp + 0x7c ]
jmp r-xdata
mov ecx [ esp + 0x60 ]
call sub_497c4a
mov eax esi
add esp 0x64
pop esi
pop edi
pop ebx
pop ebp
retn
push eax
call [ LocalFree@IAT ]
mov [ ebx ] 0x0
xor eax eax
jmp r-xdata
push 0x14
push 0x40
call [ LocalAlloc@IAT ]
mov esi [ esp + 0x7c ]
test eax eax
mov [ esi ] eax
je r-xdata
push eax
call sub_48f7e3
add esp 0x4
push eax
push edi
call sub_43f758
add esp 0x8
mov ecx [ esp + 0x84 ]
mov [ ecx ] eax
mov edi r--data
jmp r-xdata
push 0x1
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov edi r--data
jmp r-xdata
push 0x0
push [ rw-data ]
push [ esi ]
call [ SetSecurityDescriptorOwner@IAT ]
test eax eax
je r-xdata
mov edi r--data
jmp r-xdata
push 0x0
push [ ebx ]
push 0x1
push [ esi ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
mov edi r--data
mov eax [ esp + 0x84 ]
mov esi eax
push [ esi ]
call sub_43f9d4
add esp 0x4
mov [ esi ] 0x0
xor esi esi
inc esi
jmp r-xdata
sub_493604
push ebx
push edi
push esi
sub esp 0x4c
mov eax [ rw-data ]
xor esi esi
mov [ esp + 0x48 ] eax
mov eax esp
mov [ esp + 0x4 ] esi
mov [ eax ] esi
push eax
call sub_493355
add esp 0x4
test eax eax
je r-xdata
mov esi [ esp ]
mov edx [ rw-data ]
lea eax [ esp + 0x8 ]
mov ecx 0x3
mov [ eax + 0x20 ] esi
mov [ eax + 0x38 ] esi
mov [ eax + 0x34 ] esi
mov [ eax + 0x14 ] esi
mov [ eax + 0x18 ] esi
mov [ eax + 0x2c ] esi
mov [ eax + 0x30 ] esi
mov [ eax + 0x10 ] esi
mov [ eax + 0xc ] esi
mov [ eax ] 0xc0bfa
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] 0x1405
mov [ eax + 0x24 ] 0x1
mov [ eax + 0x28 ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x3c ] ecx
lea ecx [ esp + 0x4 ]
push ecx
push esi
push eax
push 0x2
call [ rw-data ]
test eax eax
mov esi r--data
jne r-xdata
push eax
call sub_48f7e3
add esp 0x4
push eax
push esi
call sub_43f758
add esp 0x8
mov esi eax
mov eax [ esp + 0x4 ]
mov [ esp ] esi
test eax eax
je r-xdata
mov edi [ esp + 0x4 ]
test edi edi
je r-xdata
push esi
push r--data
call sub_48cc6c
add esp 0x8
push eax
call [ LocalFree@IAT ]
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov esi [ rw-data ]
mov ebx [ rw-data ]
call [ GetCurrentProcess@IAT ]
xor ecx ecx
push ecx
push edi
push ecx
push ebx
push 0x5
push 0x6
push eax
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0x48 ]
call sub_497c4a
add esp 0x4c
pop esi
pop edi
pop ebx
retn
mov esi r--data
call [ GetLastError@IAT ]
sub_493724
push ebp
push ebx
push edi
push esi
push eax
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
push 0x1c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
xor eax eax
xor edi edi
dec eax
mov [ esi ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x18 ] edi
mov [ ebp ] esi
mov [ esi + 0xc ] ebx
push 0x39
push [ esp + 0x24 ]
call sub_431a8c
add esp 0x8
mov ebp eax
push ebp
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
push 0x5c
push ebp
call sub_49ae50
add esp 0x8
test eax eax
mov eax r--data
mov ecx r--data
mov [ esp ] ebp
cmovne ecx eax
push ebp
push ecx
push r--data
call sub_43f758
add esp 0xc
mov ebp eax
push edi
push 0x40000000
push 0x3
push edi
push edi
push 0xc0000000
push ebp
call [ CreateFileA@IAT ]
mov ebx eax
push ebp
call sub_43f9d4
add esp 0x4
xor eax eax
dec eax
cmp ebx eax
je r-xdata
mov eax r--data
mov ecx esi
mov edx ebx
push [ esp + 0x20 ]
call sub_493935
add esp 0x4
test eax eax
jne r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x2c ]
mov [ esi ] ebx
push 0x1
push esi
push sub_493b43
push ebx
call sub_48dfa6
add esp 0x10
mov [ esi + 0x4 ] eax
push 0x7
push esi
push sub_493ba0
push ebx
call sub_48dd7c
add esp 0x10
mov [ esi + 0x8 ] eax
push [ esp ]
call sub_43f79e
add esp 0x4
mov [ edi ] eax
push [ esi + 0xc ]
call sub_489bb6
add esp 0x4
xor eax eax
jmp r-xdata
sub_49387c
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call sub_48e219
add esp 0xc
mov [ esi + 0x10 ] eax
jmp r-xdata
pop esi
retn
sub_4938ab
push esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
pop esi
retn
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
push r--data
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
push [ esi ]
call [ SetCommBreak@IAT ]
push esi
push sub_493c66
push 0x190
call sub_47d9f4
add esp 0xc
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x1
sub_493935
push ebp
push ebx
push edi
push esi
sub esp 0x38
mov eax [ rw-data ]
mov esi edx
mov edi ecx
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x18 ]
push eax
push esi
call [ GetCommState@IAT ]
test eax eax
je r-xdata
xor ebx ebx
mov eax 0xffff8002
mov ebp [ esp + 0x4c ]
and eax [ esp + 0x20 ]
or eax 0x1011
mov [ esp + 0x20 ] eax
push 0x3a
push ebp
call sub_43194f
add esp 0x8
mov [ esp + 0x1c ] eax
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
push [ edi + 0xc ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
push 0x3b
push ebp
call sub_43194f
add esp 0x8
mov [ esp + 0x2a ] al
movzx eax al
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
push [ edi + 0xc ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
push 0x3c
push ebp
call sub_43194f
add esp 0x8
lea ecx [ eax - 0x2 ]
mov ebx r--data
cmp ecx 0x2
ja r-xdata
mov ecx [ esp + 0x34 ]
call sub_497c4a
mov eax ebx
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esp ] esi
mov esi ebp
mov ebp [ eax * 4 + r--data ]
mov [ esp + 0x2c ] cl
push ebp
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
push [ edi + 0xc ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
push 0x3d
push esi
call sub_43194f
add esp 0x8
cmp eax 0x4
ja r-xdata
push ebp
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
push [ edi + 0xc ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
push 0x3e
push [ esp + 0x50 ]
call sub_43194f
add esp 0x8
mov esi [ esp ]
cmp eax 0x3
ja r-xdata
mov ebp [ eax * 4 + r--data ]
mov [ esp + 0x2b ] al
push ebp
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
push [ edi + 0xc ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
lea eax [ esp + 0x18 ]
push eax
push esi
call [ SetCommState@IAT ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_41e4a4 ]
mov ebx r--data
jmp r-xdata
lea eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
push eax
push esi
call [ SetCommTimeouts@IAT ]
test eax eax
je r-xdata
mov ebp r--data
jmp r-xdata
mov ebx r--data
jmp r-xdata
sub_493ac3
mov [ esp + 0x20 ] eax
push ebp
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
push ebx
push [ edi + 0xc ]
call sub_4842ab
add esp 0x8
push ebx
call sub_43f9d4
add esp 0x4
lea eax [ esp + 0x18 ]
push eax
push esi
call [ SetCommState@IAT ]
test eax eax
je r-xdata
mov ebx r--data
jmp r-xdata
lea eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
push eax
push esi
call [ SetCommTimeouts@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x34 ]
call sub_497c4a
mov eax ebx
add esp 0x38
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx r--data
jmp r-xdata
xor ebx ebx
sub_493b43
push edi
push esi
mov edi [ esp + 0x10 ]
push [ esp + 0xc ]
call sub_48e677
add esp 0x4
mov esi eax
test edi edi
js r-xdata
mov ecx esi
call sub_493c10
push [ esi + 0xc ]
call sub_48a878
add esp 0x4
mov eax [ esi + 0xc ]
sub esp 0x8
mov edi r--data
mov [ esp + 0x4 ] edi
mov [ esp ] eax
call sub_4842ab
add esp 0x8
push edi
push r--data
push [ esi + 0xc ]
call sub_489e27
add esp 0xc
mov [ esi + 0x10 ] edi
jmp r-xdata
pop esi
pop edi
retn
sub_493ba0
push edi
push esi
mov edi [ esp + 0x14 ]
push [ esp + 0xc ]
call sub_48e677
add esp 0x4
mov esi eax
test edi edi
jle r-xdata
mov ecx esi
mov eax r--data
mov edi r--data
cmove edi eax
call sub_493c10
push [ esi + 0xc ]
call sub_48a878
lea esp [ esp + 0x4 ]
push edi
push [ esi + 0xc ]
call sub_4842ab
lea esp [ esp + 0x8 ]
push edi
push r--data
push [ esi + 0xc ]
call sub_489e27
lea esp [ esp + 0xc ]
xor eax eax
push edi
push [ esp + 0x14 ]
push 0x0
push [ esi + 0xc ]
call sub_48d156
add esp 0x10
jmp r-xdata
pop esi
pop edi
retn
sub_493c10
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_48e3f4
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push eax
call sub_48e3f4
add esp 0x4
mov [ esi + 0x8 ] 0x0
pop esi
retn
cmp [ esi + 0x18 ] 0x0
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi ] 0xffffffff
push eax
call [ ClearCommBreak@IAT ]
mov eax [ esi ]
sub_493c66
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
cmp eax [ esp + 0xc ]
jne r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call [ ClearCommBreak@IAT ]
mov [ esi + 0x18 ] 0x0
push r--data
push [ esi + 0xc ]
call sub_4842ab
add esp 0x8
sub_493c9c
push ebp
push ebx
push edi
push esi
sub esp 0xdc
mov eax [ rw-data ]
mov [ esp + 0xd8 ] eax
push [ esp + 0xf0 ]
call sub_4a7f30
add esp 0x4
lea ecx [ eax + 0x10 ]
sar ecx 0x1f
shr ecx 0x1c
lea ebp [ eax + ecx + 0x10 ]
mov ebx ebp
and ebp 0xfffffff0
sar ebx 0x4
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov esi eax
mov edi ebp
push ebp
push 0x0
push esi
call sub_49acf0
add esp 0xc
push [ esp + 0xf0 ]
push esi
call sub_4a7c00
add esp 0x8
call sub_47eec8
test eax eax
je r-xdata
lea ebp [ esp + 0x6c ]
push ebp
call sub_46bd6a
add esp 0x4
mov eax ebx
lea ecx [ esp + 0x4 ]
shr eax 0x14
mov [ ecx ] al
mov eax ebx
shr ebx 0x4
shr eax 0xc
mov [ ecx + 0x1 ] al
mov [ ecx + 0x2 ] bl
mov ebx edi
mov edi ebp
mov [ ecx + 0x3 ] bl
push 0x4
push ecx
push edi
call sub_46bd8f
add esp 0xc
push ebx
push esi
push edi
call sub_46bd8f
add esp 0xc
lea ebp [ esp + 0x4c ]
push ebp
push edi
call sub_46bea9
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
lea ebx [ esp + 0x8 ]
push 0x1
mov eax edi
push eax
push esi
call [ rw-data ]
movzx eax [ esp + esi + 0x4c ]
push eax
push r--data
push ebx
call sub_432778
add esp 0xc
inc esi
add ebx 0x2
cmp esi 0x20
jne r-xdata
lea esi [ esp + 0x8 ]
push esi
call sub_43f79e
add esp 0x4
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push r--data
call sub_43f758
add esp 0x8
mov ecx [ esp + 0x104 ]
mov [ ecx ] eax
jmp r-xdata
mov ecx r--data
mov edx eax
mov edi ebp
mov ebp eax
call sub_494098
mov ebx eax
push [ esp + 0x104 ]
push edi
push esi
push 0x1f0001
call sub_493468
add esp 0x10
test eax eax
je r-xdata
xor esi esi
push ebx
call sub_43f9d4
add esp 0x4
push ebp
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] ebp
xor ebp ebp
mov [ esp + 0x6c ] 0xc
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] ebp
push ebx
push ebp
lea eax [ esp + 0x74 ]
push eax
call [ CreateMutexA@IAT ]
mov edi eax
test edi edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push ebx
push r--data
call sub_43f758
add esp 0xc
mov ecx [ esp + 0x104 ]
mov [ ecx ] eax
push ebx
call sub_43f9d4
add esp 0x4
push [ esp ]
call sub_43f9d4
add esp 0x4
mov esi [ LocalFree@IAT ]
push [ esp + 0x8 ]
call esi
push [ esp + 0x4c ]
call esi
push ebx
call sub_43f9d4
add esp 0x4
mov esi [ LocalFree@IAT ]
push [ esp + 0x8 ]
call esi
push [ esp + 0x4c ]
call esi
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
mov edx [ esp ]
mov ecx r--data
call sub_494098
mov ecx [ esp + 0x104 ]
cmp [ esp + 0x114 ] 0x0
mov ebx eax
mov [ ecx ] ebp
je r-xdata
cmp [ esp + 0x110 ] 0x0
je r-xdata
push [ esp + 0xf8 ]
push ebx
call sub_4923c0
add esp 0x8
mov ebp eax
mov eax [ ebp ]
push ebp
call [ eax + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x104 ]
cmp [ eax ] 0x0
jne r-xdata
push [ esp + 0xfc ]
push ebx
call sub_4925e4
add esp 0x8
mov ebp eax
mov eax [ ebp ]
push ebp
call [ eax + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x104 ]
mov esi eax
push [ esi ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x100 ]
mov [ esi ] ebx
mov [ eax ] ebp
push [ esp ]
call sub_43f9d4
add esp 0x4
push edi
call [ ReleaseMutex@IAT ]
push edi
call [ CloseHandle@IAT ]
xor esi esi
inc esi
jmp r-xdata
mov eax [ esp + 0x108 ]
mov esi eax
push [ esi ]
call sub_43f9d4
add esp 0x4
mov eax [ ebp ]
push ebp
call [ eax + 0x1c ]
add esp 0x4
push eax
push ebx
push r--data
call sub_43f758
add esp 0xc
mov [ esi ] eax
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push ebp
call eax
add esp 0x4
push ebx
call sub_43f9d4
add esp 0x4
push [ esp ]
call sub_43f9d4
add esp 0x4
push edi
call [ ReleaseMutex@IAT ]
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
mov eax [ esp + 0x108 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esp + 0x104 ]
mov esi eax
push [ esi ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x100 ]
mov [ esi ] ebx
mov [ eax ] ebp
push [ esp ]
call sub_43f9d4
add esp 0x4
push edi
call [ ReleaseMutex@IAT ]
push edi
call [ CloseHandle@IAT ]
mov esi 0x2
jmp r-xdata
mov eax [ esp + 0x10c ]
mov esi eax
push [ esi ]
call sub_43f9d4
add esp 0x4
mov eax [ ebp ]
push ebp
call [ eax + 0x1c ]
add esp 0x4
push eax
push ebx
push r--data
call sub_43f758
add esp 0xc
mov [ esi ] eax
mov eax [ ebp ]
mov eax [ eax + 0x4 ]
push ebp
call eax
add esp 0x4
mov ecx [ esp + 0xd8 ]
call sub_497c4a
mov eax esi
add esp 0xdc
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ esp + 0x10c ]
cmp [ eax ] 0x0
jne r-xdata
push 0xe2
push r--data
push r--data
call sub_4a509d
add esp 0xc
sub_494098
push ebx
push edi
push esi
mov esi edx
mov edi ecx
call sub_48f5eb
mov ebx eax
push esi
push ebx
push edi
push r--data
call sub_43f758
add esp 0x10
mov esi eax
push ebx
call sub_43f9d4
add esp 0x4
mov eax esi
pop esi
pop edi
pop ebx
retn
sub_4940c8
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
xor eax eax
test edi edi
mov [ ebx ] eax
je r-xdata
mov edi r--data
cmp [ edi ] 0x0
jne r-xdata
mov eax esp
push eax
push esi
push [ esp + 0xc ]
call [ RegCreateKeyA@IAT ]
mov edi eax
push [ esp + 0x4 ]
call [ RegCloseKey@IAT ]
test edi edi
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
push r--data
push r--data
call sub_43f758
add esp 0x8
mov [ ebx ] eax
jmp r-xdata
push edi
call sub_4a7f30
add esp 0x4
xor ecx ecx
lea eax [ eax + eax * 2 + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov ecx edi
mov edx esi
call sub_4941ac
lea eax [ esp + 0x4 ]
push eax
push r--data
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov esi [ esp ]
jmp r-xdata
push esi
push r--data
push r--data
call sub_43f758
add esp 0xc
mov [ ebx ] eax
push esi
call sub_43f9d4
add esp 0x4
xor esi esi
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
retn
sub_4941ac
push ebp
push ebx
push edi
push esi
xor edi edi
xor eax eax
mov esi 0x80000421
inc eax
jmp r-xdata
mov bl [ ecx ]
mov bh bl
add bh 0xe0
cmp bh 0x1f
ja r-xdata
cmp bl 0x5c
je r-xdata
movzx ebp bh
bt esi ebp
jb r-xdata
mov [ edx ] 0x25
movzx edi [ ecx ]
shr edi 0x4
mov bl [ edi + r--data ]
mov [ edx + 0x1 ] bl
movzx edi [ ecx ]
and edi 0xf
mov bl [ edi + r--data ]
mov [ edx + 0x2 ] bl
add edx 0x3
test bl bl
jne r-xdata
cmp bl 0x20
jl r-xdata
mov [ edx ] 0x0
pop esi
pop edi
pop ebx
pop ebp
retn
cmp bl 0x7f
je r-xdata
test edi edi
jne r-xdata
mov [ edx ] bl
inc edx
jmp r-xdata
cmp bl 0x2e
jne r-xdata
inc ecx
mov edi eax
jmp r-xdata
sub_494222
push ebx
push edi
push esi
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
pop esi
pop edi
pop ebx
retn
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
push edi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
inc ecx
push eax
push edi
push ecx
push 0x0
push ebx
push esi
call [ RegSetValueExA@IAT ]
sub_494253
push eax
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
test eax eax
mov [ esp ] ecx
je r-xdata
mov ecx [ esp ]
call sub_497c4a
pop eax
retn
mov ecx 0x4
lea edx [ esp + 0x10 ]
push ecx
push edx
push ecx
push 0x0
push [ esp + 0x1c ]
push eax
call [ RegSetValueExA@IAT ]
sub_494293
push edi
push esi
sub esp 0xc
mov edi [ esp + 0x18 ]
mov eax [ rw-data ]
test edi edi
mov [ esp + 0x8 ] eax
je r-xdata
mov edi r--data
cmp [ edi ] 0x0
jne r-xdata
mov eax esp
push eax
push esi
push [ esp + 0xc ]
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
push edi
call sub_4a7f30
add esp 0x4
xor ecx ecx
lea eax [ eax + eax * 2 + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov ecx edi
mov edx esi
call sub_4941ac
lea eax [ esp + 0x4 ]
push eax
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ RegCloseKey@IAT ]
mov [ esp ] 0x0
push esi
call sub_43f9d4
add esp 0x4
mov esi [ esp ]
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
retn
sub_49433a
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov ebx [ esp + 0x20 ]
mov eax [ rw-data ]
test ebx ebx
mov [ esp + 0x8 ] eax
je r-xdata
xor esi esi
jmp r-xdata
mov edi [ esp + 0x24 ]
mov eax esp
xor esi esi
lea ecx [ esp + 0x4 ]
push eax
push esi
push ecx
push esi
push edi
push ebx
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ esp + 0x4 ] 0x1
jne r-xdata
mov ebp [ esp ]
inc ebp
xor eax eax
inc eax
push eax
push ebp
call sub_43f807
add esp 0x8
mov ecx edi
mov edi eax
mov eax esp
push eax
push edi
lea eax [ esp + 0xc ]
push eax
push 0x0
push ecx
push ebx
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_43f9d4
add esp 0x4
cmp [ esp + 0x4 ] 0x1
jne r-xdata
mov eax [ esp ]
cmp eax ebp
jb r-xdata
mov esi edi
mov [ edi + eax ] 0x0
jmp r-xdata
push 0xb0
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esp ]
sub_4943f1
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov eax [ esp + 0x24 ]
mov ecx [ rw-data ]
mov esi [ esp + 0x2c ]
test eax eax
mov [ esp + 0xc ] ecx
mov [ esp ] 0x4
je r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
mov eax esi
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi esp
lea ebx [ esp + 0x4 ]
lea ebp [ esp + 0x8 ]
push edi
push ebx
push ebp
push 0x0
push [ esp + 0x38 ]
push eax
call [ RegQueryValueExA@IAT ]
mov ecx [ edi ]
mov edx [ ebp ]
xor ecx 0x4
xor edx 0x4
or ecx eax
or ecx edx
cmove esi [ ebx ]
sub_494454
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov edi [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
push edi
push ebp
call sub_49433a
add esp 0x8
test eax eax
je r-xdata
xor eax eax
mov [ esp ] eax
push 0x0
push r--data
push edi
call sub_43fa97
add esp 0xc
xor esi esi
mov ebx eax
dec esi
push esi
push ebx
push ebp
call sub_4943f1
add esp 0xc
mov edi eax
push ebx
call sub_43f9d4
add esp 0x4
mov [ esp + 0x4 ] edi
cmp edi esi
mov edi esi
je r-xdata
push [ esp ]
jmp r-xdata
push 0x0
push r--data
mov ebx [ esp + 0x28 ]
push ebx
call sub_43fa97
add esp 0xc
mov ecx ebp
mov ebp eax
push edi
push ebp
push ecx
call sub_4943f1
add esp 0xc
mov esi eax
push ebp
call sub_43f9d4
add esp 0x4
cmp esi edi
je r-xdata
call sub_43f9d4
add esp 0x4
push [ esp ]
push 0x0
push r--data
push ebx
call sub_43fa97
add esp 0xc
mov edi 0x80000000
mov ebx eax
push edi
push ebx
push [ esp + 0x24 ]
call sub_4943f1
add esp 0xc
mov ebp eax
push ebx
call sub_43f9d4
add esp 0x4
cmp ebp edi
jne r-xdata
push esi
push ebp
push [ esp + 0xc ]
mov esi [ esp + 0xc ]
push esi
call sub_48f919
add esp 0x10
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
jmp r-xdata
push [ esp ]
jmp r-xdata
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_494554
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov ebp [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
push [ ebp ]
push esi
push edi
call sub_494222
add esp 0xc
xor ebx ebx
push ebx
push r--data
push esi
call sub_43fa97
add esp 0xc
mov ecx [ ebp + 0x4 ]
mov esi eax
test edi edi
mov [ esp ] ecx
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
push ebx
push r--data
mov ebp [ esp + 0x28 ]
push ebp
call sub_43fa97
add esp 0xc
mov ebx [ esp + 0x24 ]
mov esi eax
test edi edi
mov eax [ ebx + 0xc ]
mov [ esp ] eax
je r-xdata
mov eax 0x4
mov ecx esp
push eax
push ecx
push eax
push 0x0
push esi
push edi
call [ RegSetValueExA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
xor eax eax
push eax
push r--data
push ebp
call sub_43fa97
add esp 0xc
mov ecx [ ebx + 0x8 ]
mov esi eax
test edi edi
mov [ esp ] ecx
je r-xdata
mov eax 0x4
mov ecx esp
push eax
push ecx
push eax
push 0x0
push esi
push edi
call [ RegSetValueExA@IAT ]
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax 0x4
mov ecx esp
push eax
push ecx
push eax
push 0x0
push esi
push edi
call [ RegSetValueExA@IAT ]
sub_494642
push edi
push esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_49433a
add esp 0x8
mov esi eax
test esi esi
je r-xdata
xor eax eax
push esi
call sub_48f4af
add esp 0x4
mov edi eax
push esi
call sub_43f9d4
add esp 0x4
mov eax edi
jmp r-xdata
pop esi
pop edi
retn
sub_49468e
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
retn
mov esi [ esp + 0x14 ]
push esi
call sub_4a7f30
add esp 0x4
xor ecx ecx
lea eax [ eax + eax * 2 + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov edi eax
mov ecx esi
mov edx edi
call sub_4941ac
push edi
push [ esp + 0x4 ]
call [ RegDeleteKeyA@IAT ]
push edi
call sub_43f9d4
add esp 0x4
push [ esp ]
call [ RegCloseKey@IAT ]
push esi
call sub_48f180
add esp 0x4
sub_494711
push esi
sub esp 0x8
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
xor esi esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
retn
push 0x8
push 0x1
call sub_43f807
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp ]
mov esi eax
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
sub_494765
push ebp
push ebx
push edi
push esi
push eax
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x18 ]
lea ebp [ ebx + ebx * 2 ]
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov ecx [ edi + 0x4 ]
mov esi eax
mov eax [ edi ]
lea edx [ ecx + 0x1 ]
mov [ edi + 0x4 ] edx
push ebp
push esi
push ecx
push eax
call [ RegEnumKeyA@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x1c ]
mov edx esi
jmp r-xdata
push esi
call sub_43f9d4
add esp 0x4
xor eax eax
jmp r-xdata
mov al [ edx ]
cmp al 0x25
je r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
mov ah [ edx + 0x1 ]
lea ebp [ edx + 0x1 ]
test ah ah
je r-xdata
test al al
jne r-xdata
dec ebx
mov [ edi ] al
je r-xdata
mov cl [ edx + 0x2 ]
test cl cl
mov [ esp + 0x3 ] cl
je r-xdata
inc edx
mov ebp edx
jmp r-xdata
mov [ edi ] 0x0
push esi
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x1c ]
inc edi
mov edx ebp
mov al 0x39
mov cl 0x7
cmp ah al
jg r-xdata
sub ah cl
mov cl [ esp + 0x3 ]
mov al 0x39
cmp cl al
mov al cl
mov cl 0xf9
jg r-xdata
xor ecx ecx
shl ah 0x4
add ah al
add ah cl
add ah 0xd0
dec ebx
mov [ edi ] ah
je r-xdata
xor ecx ecx
add edx 0x3
mov ebp edx
jmp r-xdata
sub_494837
push ebp
push ebx
push edi
push esi
sub esp 0x28
mov eax [ rw-data ]
mov ebp [ esp + 0x44 ]
mov edi [ esp + 0x3c ]
mov [ esp + 0x24 ] eax
push [ esp + 0x48 ]
call sub_4a7f30
add esp 0x4
mov [ esp ] eax
push edi
call sub_4a7f30
add esp 0x4
mov esi eax
push ebp
call sub_4a7f30
add esp 0x4
add eax esi
xor ebx ebx
inc ebx
lea eax [ eax + eax * 2 + 0xf ]
push ebx
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov edx edi
mov ecx esi
push ebp
push [ esp + 0x44 ]
call sub_494acb
add esp 0x8
lea eax [ esp + 0x20 ]
push eax
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
mov eax [ esp ]
lea edi [ esp + 0x1c ]
lea ebx [ eax + 0x1 ]
mov [ edi ] ebx
push 0x1
push ebx
call sub_43f807
add esp 0x8
lea ecx [ esp + 0x18 ]
push edi
mov [ esp + 0x8 ] eax
push eax
push ecx
push 0x0
push esi
push [ esp + 0x34 ]
call [ RegQueryValueExA@IAT ]
test eax eax
mov [ esp + 0xc ] eax
je r-xdata
push esi
call sub_43f9d4
add esp 0x4
jmp r-xdata
mov ebp [ esp + 0x48 ]
jmp r-xdata
cmp eax 0xea
jne r-xdata
mov ecx [ esp + 0x24 ]
call sub_497c4a
mov eax ebx
add esp 0x28
pop esi
pop edi
pop ebx
pop ebp
retn
push [ esp + 0x20 ]
call [ RegCloseKey@IAT ]
push ebp
mov edi [ esp + 0x8 ]
push edi
call sub_4a7d00
add esp 0x8
mov ebp eax
push edi
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0xc ]
mov ebx 0x2
cmp ecx 0xea
je r-xdata
push r--data
push [ esp + 0x48 ]
call sub_4a7d00
add esp 0x8
mov ebp [ esp + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test ebp ebp
je r-xdata
push r--data
push esi
call sub_4a7d90
add esp 0x8
mov [ esp + 0x8 ] esi
mov ecx [ esp + 0x8 ]
lea esi [ ecx + eax + 0x1 ]
mov ecx [ esp ]
add ecx 0xb
xor eax eax
inc eax
push eax
push ecx
call sub_43f807
add esp 0x8
mov [ esp + 0x1c ] ebx
mov ebx eax
push edi
push ebx
lea eax [ esp + 0x20 ]
push eax
push 0x0
push esi
mov esi [ esp + 0x1c ]
push [ esp + 0x34 ]
call [ RegQueryValueExA@IAT ]
test eax eax
mov [ esp + 0xc ] eax
jne r-xdata
xor eax 0x1
xor ebx ebx
or ecx eax
setne bl
test ecx ecx
jne r-xdata
push ebx
call sub_43f9d4
add esp 0x4
cmp [ esp + 0x18 ] 0x1
jne r-xdata
cmp eax 0x1
je r-xdata
mov edi [ esp + 0x4 ]
xor eax eax
mov [ esp + 0x14 ] ebx
mov eax esi
add [ esp ] 0x2
sar eax 0x1f
shr eax 0x1e
add eax esi
sar eax 0x2
test edi edi
jle r-xdata
lea ebp [ edi - 0x1 ]
lea eax [ edx - 0x1 ]
mov ecx ebp
xor ecx 0x3
cmp [ ebx + ecx ] 0x30
je r-xdata
mov ecx [ esp ]
lea ebx [ ebx + eax * 4 ]
mov ebp [ esp + 0x48 ]
add ecx edi
cmp [ ebx ] 0x0
mov edi ecx
je r-xdata
xor esi esi
mov edi ebp
mov edx eax
cmp edi 0x2
jl r-xdata
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x8 ]
mov [ edi ] 0x0
inc eax
cmp eax 0x2
jne r-xdata
mov [ edi ] 0x2c
inc ebx
inc edi
mov ecx esi
inc esi
xor ecx 0x3
mov cl [ ebx + ecx ]
mov [ edx ] cl
dec edx
cmp edi esi
jne r-xdata
mov [ esp + 0x10 ] eax
mov [ edi ] 0x7830
push r--data
push ebx
call sub_4a7d90
add esp 0x8
mov esi eax
mov [ esp ] edi
lea eax [ edi + esi + 0x1 ]
mov ebp esi
push ebp
push [ esp + 0x8 ]
call sub_4a7d00
add esp 0x8
mov ebx [ esp + 0x14 ]
test eax eax
jne r-xdata
mov edi [ esp + 0x4 ]
push edi
call sub_4a7f30
add esp 0x4
inc eax
push eax
push edi
mov eax 0x1
push eax
push 0x0
push esi
push [ esp + 0x34 ]
call [ RegSetValueExA@IAT ]
sub_494acb
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
mov esi edx
mov edi ecx
push [ esp + 0x14 ]
push edi
call sub_4a7c00
add esp 0x8
push edi
call sub_4a7f30
add esp 0x4
mov [ edi + eax ] 0x40
push edi
call sub_4a7f30
add esp 0x4
add eax edi
push ebx
push r--data
push eax
call sub_432778
add esp 0xc
push edi
call sub_4a7f30
add esp 0x4
lea edx [ eax + edi ]
mov ecx esi
pop esi
pop edi
pop ebx
jmp sub_4941ac
sub_494b46
push ebp
push ebx
push edi
push esi
sub esp 0x8
mov eax [ rw-data ]
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x20 ]
mov ebp [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
push edi
call sub_4a7f30
add esp 0x4
mov esi eax
push ebp
call sub_4a7f30
add esp 0x4
add eax esi
lea eax [ eax + eax * 2 + 0xf ]
push 0x1
push eax
call sub_43f807
add esp 0x8
mov esi eax
mov edx edi
mov ecx esi
push ebp
push ebx
call sub_494acb
add esp 0x8
mov eax esp
push eax
push r--data
push 0x80000001
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
push esi
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
mov edi [ esp + 0x28 ]
push edi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
inc ecx
push eax
push edi
push ecx
push 0x0
push esi
push [ esp + 0x14 ]
call [ RegSetValueExA@IAT ]
push [ esp ]
call [ RegCloseKey@IAT ]
sub_494bf2
push ebp
push ebx
push edi
push esi
sub esp 0x408
mov eax [ rw-data ]
xor ecx ecx
inc ecx
mov [ esp + 0x404 ] eax
call sub_494c85
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ esp + 0x404 ]
call sub_497c4a
add esp 0x408
pop esi
pop edi
pop ebx
pop ebp
retn
lea ebx [ esp + 0x4 ]
mov eax esp
push 0x0
push eax
push 0x400
push ebx
push esi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp ]
test eax eax
je r-xdata
mov ebp [ esp + 0x41c ]
mov edi [ ReadFile@IAT ]
mov eax [ esp ]
test eax eax
jne r-xdata
push eax
push ebx
call ebp
add esp 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x400
push ebx
push esi
call edi
test eax eax
je r-xdata
sub_494c85
push ebp
push ebx
push edi
push esi
sub esp 0x228
mov eax [ rw-data ]
mov esi ecx
mov ebx 0x212
lea edi [ esp + 0x12 ]
mov [ esp + 0x224 ] eax
push ebx
push 0x0
push edi
call sub_49acf0
add esp 0xc
lea eax [ esp + 0xc ]
mov [ esp + 0x4 ] ebx
push eax
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
push eax
push edi
push ecx
push 0x0
push r--data
push [ esp + 0x20 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov [ esp + 0x12 ] 0x0
cmp [ esp + 0x8 ] 0x1
je r-xdata
push r--data
call sub_48f6f9
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax esp
lea ecx [ esp + 0x12 ]
mov edx esi
push eax
call sub_495351
add esp 0x4
test eax eax
jne r-xdata
push [ esp + 0xc ]
call [ RegCloseKey@IAT ]
cmp [ esp + 0x12 ] 0x0
je r-xdata
xor ecx ecx
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx eax
jmp r-xdata
test ecx ecx
je r-xdata
mov esi [ esp ]
jmp r-xdata
mov ebp [ GetEnvironmentVariableA@IAT ]
mov ebx 0x212
push ebx
push edi
push r--data
call ebp
sub ebx eax
lea eax [ esp + eax + 0x12 ]
push ebx
push eax
push r--data
call ebp
test eax eax
je r-xdata
xor ebx ebx
push edi
push ebx
push ebx
push 0x1c
push ebx
call ecx
test eax eax
js r-xdata
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
push 0x212
push edi
call [ GetWindowsDirectoryA@IAT ]
push edi
call sub_4a7f30
add esp 0x4
mov [ esp + eax + 0x1c ] 0x0
mov [ esp + eax + 0x1a ] 0x444e
mov [ esp + eax + 0x16 ] 0x522e5954
mov [ esp + eax + 0x12 ] 0x5455505c
mov eax esp
mov ecx edi
mov edx esi
push eax
call sub_495351
add esp 0x4
test eax eax
je r-xdata
push edi
call sub_4a7f30
add esp 0x4
mov [ esp + eax + 0x1c ] 0x0
mov [ esp + eax + 0x1a ] 0x444e
mov [ esp + eax + 0x16 ] 0x522e5954
mov [ esp + eax + 0x12 ] 0x5455505c
mov eax esp
mov ecx edi
mov edx esi
push eax
call sub_495351
add esp 0x4
test eax eax
jne r-xdata
push edi
push ebx
push ebx
push 0x1a
push ebx
call [ rw-data ]
test eax eax
js r-xdata
push edi
call sub_4a7f30
add esp 0x4
mov [ esp + eax + 0x1c ] 0x0
mov [ esp + eax + 0x1a ] 0x444e
mov [ esp + eax + 0x16 ] 0x522e5954
mov [ esp + eax + 0x12 ] 0x5455505c
mov eax esp
mov ecx edi
mov edx esi
push eax
call sub_495351
add esp 0x4
test eax eax
jne r-xdata
xor esi esi
dec esi
jmp r-xdata
push edi
call sub_4a7f30
add esp 0x4
mov [ esp + eax + 0x1c ] 0x0
mov [ esp + eax + 0x1a ] 0x444e
mov [ esp + eax + 0x16 ] 0x522e5954
mov [ esp + eax + 0x12 ] 0x5455505c
mov eax esp
mov ecx edi
mov edx esi
push eax
call sub_495351
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x224 ]
call sub_497c4a
mov eax esi
add esp 0x228
pop esi
pop edi
pop ebx
pop ebp
retn
sub_494ed5
push esi
sub esp 0x8
mov eax [ rw-data ]
mov ecx 0x2
mov [ esp + 0x4 ] eax
call sub_494c85
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ esp + 0x4 ]
call sub_497c4a
add esp 0x8
pop esi
retn
mov eax esp
push 0x0
push eax
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_494f2d
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov ebp ecx
mov esi edx
lea ecx [ esp + 0xc ]
mov [ esp + 0x10 ] eax
xor eax eax
push eax
push ecx
push eax
push 0x2001f
push eax
push eax
push eax
push r--data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
mov ebx 0x2
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_497c4a
mov eax ebx
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax 0xc8
lea edi [ esp + 0x4 ]
mov [ edi ] eax
push 0x1
push eax
call sub_43f807
add esp 0x8
mov ebx eax
lea eax [ esp + 0x8 ]
push edi
push ebx
push eax
push 0x0
push r--data
push [ esp + 0x20 ]
call [ RegQueryValueExA@IAT ]
cmp eax 0xea
jne r-xdata
test eax eax
je r-xdata
push ebx
call sub_43f9d4
add esp 0x4
push 0x1
push [ esp + 0x8 ]
call sub_43f807
add esp 0x8
mov ebx eax
push edi
push ebx
lea eax [ esp + 0x10 ]
push eax
push 0x0
push r--data
push [ esp + 0x20 ]
call [ RegQueryValueExA@IAT ]
cmp [ esp + 0x8 ] 0x7
jne r-xdata
cmp eax 0x2
jne r-xdata
push r--data
push [ esp + 0x10 ]
call [ RegDeleteValueA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov ecx 0x0
cmp eax 0x1
je r-xdata
push ebx
call sub_43f9d4
add esp 0x4
push [ esp + 0xc ]
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push ebx
call sub_43f9d4
add esp 0x4
push [ esp + 0xc ]
cmp ecx edx
jb r-xdata
dec eax
lea edx [ ebx + 0x1 ]
xor ecx ecx
call [ RegCloseKey@IAT ]
mov ebx 0x3
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax ebp
mov dl 0x1
or eax esi
je r-xdata
mov [ ebx ] 0x0
mov ecx edx
inc edx
sub ecx ebx
cmp ecx eax
jb r-xdata
cmp [ edx ] 0x0
je r-xdata
mov edi ebx
jmp r-xdata
mov edi [ esp + 0x4 ]
test ebp ebp
je r-xdata
cmp [ edx - 0x1 ] 0x0
jne r-xdata
mov edx eax
test ecx ecx
mov [ esp ] dl
je r-xdata
push 0x1
push edi
call sub_43f807
add esp 0x8
mov edi eax
mov ebp edi
push ebp
call sub_4a7f30
add esp 0x4
xor ecx ecx
lea eax [ edi + eax + 0x1 ]
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov edi eax
push ebp
push edi
call sub_4a7c00
add esp 0x8
push edi
call sub_4a7f30
add esp 0x4
lea ebp [ edi + eax + 0x1 ]
jmp r-xdata
push edi
call sub_43f9d4
add esp 0x4
test dl dl
je r-xdata
mov [ ebp ] 0x0
inc ebp
mov edi [ esp ]
sub ebp edi
push ebp
push edi
push 0x7
push 0x0
push r--data
push [ esp + 0x20 ]
call [ RegSetValueExA@IAT ]
mov esi eax
push ebx
call sub_43f9d4
add esp 0x4
mov ecx [ esp + 0x28 ]
test esi esi
sete dl
mov edi ebx
cmp [ ebx ] 0x0
mov [ esp ] edi
je r-xdata
mov [ ecx ] edi
jmp r-xdata
push edi
call sub_494293
add esp 0x4
test eax eax
je r-xdata
push esi
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push [ esp + 0xc ]
call [ RegCloseKey@IAT ]
xor ebx ebx
cmp [ esp ] 0x0
sete bl
shl ebx 0x2
push edi
call sub_4a7f30
add esp 0x4
lea edi [ edi + eax + 0x1 ]
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ RegCloseKey@IAT ]
push edi
push ebp
call sub_4a7c00
add esp 0x8
push ebp
call sub_4a7f30
add esp 0x4
lea ebp [ ebp + eax + 0x1 ]
test esi esi
je r-xdata
sub_4951ab
push esi
sub esp 0x8
mov eax [ rw-data ]
xor ecx ecx
xor edx edx
mov [ esp + 0x4 ] eax
mov eax esp
push eax
call sub_494f2d
add esp 0x4
test eax eax
je r-xdata
mov esi [ esp ]
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax esi
add esp 0x8
pop esi
retn
push 0x1
push 0x2
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ esp ] eax
mov [ eax ] cl
mov eax [ esp ]
mov [ eax + 0x1 ] cl
sub_4951f7
push edi
push esi
sub esp 0x110
mov eax [ rw-data ]
xor ecx ecx
mov [ esp + 0x10c ] eax
call sub_494c85
call sub_48eda4
mov edi esp
push edi
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
push edi
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp ]
call sub_4952cc
push [ esp ]
call [ RegCloseKey@IAT ]
push r--data
push [ esp + 0x4 ]
call [ RegDeleteKeyA@IAT ]
lea eax [ esp + 0x7 ]
push 0x105
push eax
push 0x0
push [ esp + 0xc ]
call [ RegEnumKeyA@IAT ]
mov esi eax
push [ esp ]
call [ RegCloseKey@IAT ]
test esi esi
je r-xdata
mov ecx [ esp + 0x10c ]
call sub_497c4a
add esp 0x110
pop esi
pop edi
retn
push edi
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
push r--data
push [ esp + 0x4 ]
call [ RegDeleteKeyA@IAT ]
push [ esp ]
call [ RegCloseKey@IAT ]
jmp r-xdata
sub_4952cc
push ebp
push ebx
push edi
push esi
sub esp 0x110
mov eax [ rw-data ]
mov esi ecx
lea edi [ esp + 0x7 ]
mov [ esp + 0x10c ] eax
push 0x105
push edi
push 0x0
push esi
call [ RegEnumKeyA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10c ]
call sub_497c4a
add esp 0x110
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ RegDeleteKeyA@IAT ]
mov ebp [ RegEnumKeyA@IAT ]
push edi
push esi
call ebx
push 0x105
push edi
push 0x0
push esi
call ebp
test eax eax
je r-xdata
mov ecx [ esp ]
call sub_4952cc
push [ esp ]
call [ RegCloseKey@IAT ]
mov eax esp
push eax
push edi
push esi
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
sub_495351
push ebp
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov esi ecx
test edx edx
je r-xdata
push esi
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor ecx ecx
xor eax eax
cmp edx 0x2
mov edx 0x40000000
mov ebx 0x80000000
cmove ebx edx
sete al
mov edx 0x3
setne cl
xor ebp ebp
sub edx eax
shl eax 0x7
lea ecx [ ecx + ecx * 2 ]
push ebp
push eax
push edx
push ebp
push ecx
push ebx
push esi
call [ CreateFileA@IAT ]
mov ecx eax
xor eax eax
cmp ecx 0xffffffff
mov [ edi ] ecx
setne al
jmp r-xdata
mov [ edi ] 0xffffffff
xor eax eax
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
call [ GetLastError@IAT ]
push eax
call sub_48f7e3
add esp 0x4
push eax
push esi
push r--data
call sub_48ccc3
add esp 0xc
sub_4953e4
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov esi [ esp + 0x20 ]
mov edi esp
mov [ esp + 0x10 ] eax
push edi
call [ GetLocalTime@IAT ]
movzx eax [ edi + 0xa ]
movd xmm0 [ edi + 0xc ]
movzx ecx [ edi ]
pxor xmm1 xmm1
xor edx edx
pinsrw xmm0 eax 0x1
movzx eax [ edi + 0x6 ]
pinsrw xmm0 [ edi + 0x8 ] 0x2
pinsrw xmm0 eax 0x3
movzx eax [ edi + 0x2 ]
movzx edi [ edi + 0x4 ]
punpcklwd xmm0 xmm1
movdqu [ esi ] xmm0
dec eax
cmp ecx 0x76b
lea ecx [ ecx - 0x76c ]
cmovbe ecx edx
mov [ esi + 0x10 ] eax
xor eax eax
dec eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] 0x0
mov ecx [ esp + 0x10 ]
call sub_497c4a
mov eax esi
add esp 0x14
pop esi
pop edi
retn
sub_49546c
push ebp
push ebx
push edi
push esi
push eax
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push 0x91
push esi
call sub_431a8c
add esp 0x8
push eax
call sub_495baa
add esp 0x4
mov [ edi + 0xc ] eax
cmp [ edi + 0x8 ] 0x0
jg r-xdata
push 0x90
push esi
call sub_43194f
add esp 0x8
mov ebp eax
cmp ebp 0x2
jne r-xdata
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0x4 ] eax
cmp [ edi + 0xc ] 0x0
jg r-xdata
xor eax eax
mov [ edi + 0x8 ] 0x1b5
mov [ edi + 0x4 ] eax
cmp [ edi + 0xc ] eax
jg r-xdata
cmp [ edi + 0x4 ] 0x0
mov eax [ edi + 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
call [ GetACP@IAT ]
jmp r-xdata
test eax eax
je r-xdata
lea ecx [ edi + 0x410 ]
push 0x2
push ecx
push eax
call sub_495dfd
add esp 0xc
movdqa xmm0 [ r--data ]
movdqa xmm1 [ r--data ]
movdqa xmm2 [ r--data ]
movdqa xmm3 [ r--data ]
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
jmp r-xdata
lea ecx [ edi + 0x410 ]
push 0x1
push ecx
push eax
call sub_495dfd
add esp 0xc
cmp [ edi + 0x8 ] 0x1b5
jne r-xdata
movdqa xmm4 xmm1
movdqa xmm5 xmm0
paddd xmm1 xmm3
paddd xmm0 xmm3
pslld xmm4 0x10
pslld xmm5 0x10
psrad xmm4 0x10
psrad xmm5 0x10
packssdw xmm4 xmm5
paddw xmm4 xmm2
movdqu [ edi + eax * 2 + 0x510 ] xmm4
add eax 0x8
cmp eax 0x80
jne r-xdata
test ebp ebp
jne r-xdata
xor eax eax
dec eax
mov [ edi + 0x60e ] ax
mov [ edi + 0x410 ] ax
jmp r-xdata
xor ebx ebx
lea esi [ edi + 0x810 ]
inc ebx
push ebx
push esi
push ebx
call sub_495dfd
add esp 0xc
lea eax [ edi + 0x10 ]
cmp ebp ebx
ja r-xdata
lea eax [ edi + 0x412 ]
push 0x40
push r--data
push eax
call sub_49a1f0
add esp 0xc
push 0x1
push eax
push 0x1b5
call sub_495dfd
push 0x200
push esi
push eax
call sub_49a1f0
jmp r-xdata
lea ecx [ edi + 0x210 ]
push 0x0
push ecx
push eax
call sub_495dfd
add esp 0xc
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
add esp 0xc
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
jne r-xdata
lea eax [ edi + 0x610 ]
mov [ esp ] ebp
lea ecx [ edi + 0x210 ]
push 0x200
push ecx
push eax
call sub_49a1f0
add esp 0xc
lea eax [ edi + 0x6d0 ]
push 0x40
push r--data
push eax
call sub_49a1f0
add esp 0xc
mov [ edi + 0x6ce ] 0x20
mov eax [ edi ]
test eax eax
je r-xdata
movdqa xmm0 [ r--data ]
movdqa xmm1 [ r--data ]
xor eax eax
cmp ebp 0x3
je r-xdata
test ebx ebx
jne r-xdata
xor esi esi
movdqu [ edi + eax * 2 + 0x210 ] xmm0
add eax 0x8
paddw xmm0 xmm1
cmp eax 0x20
jne r-xdata
movdqa xmm0 [ r--data ]
movdqa xmm1 [ r--data ]
movdqa xmm2 [ r--data ]
movdqa xmm3 [ r--data ]
xor eax eax
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
mov ebp [ esp ]
xor eax eax
xor ebx ebx
mov ebp 0x100
inc esi
cmp esi 0x100
jne r-xdata
push ecx
call sub_43f9d4
add esp 0x4
mov eax [ edi ]
movdqa xmm4 xmm1
movdqa xmm5 xmm0
paddd xmm1 xmm3
paddd xmm0 xmm3
pslld xmm4 0x10
pslld xmm5 0x10
psrad xmm4 0x10
psrad xmm5 0x10
packssdw xmm4 xmm5
paddw xmm4 xmm2
movdqu [ edi + eax * 2 + 0x250 ] xmm4
add eax 0x8
cmp eax 0xe0
jne r-xdata
mov [ edi + 0x30e ] 0x7f
cmp ecx 0x20
jb r-xdata
mov dh 0xff
inc ebx
cmp ebx 0x100
jne r-xdata
mov ecx eax
and ecx 0xfe00
cmp ecx 0xf000
je r-xdata
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
mov [ edi ] 0x0
mov [ edi + eax + 0xa10 ] dl
inc eax
cmp eax 0x100
jne r-xdata
mov dl dh
movzx eax [ edi + ebx * 2 + 0x210 ]
mov ecx eax
and ecx 0xfc00
cmp ecx 0xd800
je r-xdata
mov ecx [ edi ]
test ecx ecx
jne r-xdata
movzx ecx [ edi + eax * 2 + 0x210 ]
lea edx [ ecx - 0x7f ]
movzx edx dx
cmp edx 0x21
mov edx eax
mov dh dl
jb r-xdata
xor eax eax
xor ecx ecx
dec ecx
cmp ebp 0x2
jae r-xdata
movzx esi ax
shr esi 0x8
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
push 0x4
push 0x100
call sub_43f807
add esp 0x8
mov [ edi ] eax
push 0x400
push 0x0
push eax
call sub_49acf0
add esp 0xc
mov ax [ edi + ebx * 2 + 0x210 ]
mov ecx [ edi ]
movzx edx [ edi + eax * 2 + 0x210 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
movzx edx [ edi + eax * 2 + 0x10 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
movzx eax al
mov [ ecx + eax ] bl
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov ecx [ edi ]
mov [ ecx + esi * 4 ] eax
mov eax [ edi ]
push ebp
push 0x0
push [ eax + esi * 4 ]
call sub_49acf0
add esp 0xc
mov eax [ edi ]
mov ecx [ eax + esi * 4 ]
movzx eax [ edi + ebx * 2 + 0x210 ]
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
xor eax eax
xor ecx ecx
dec ecx
or ebx 0xf100
mov [ edi + eax * 2 + 0x210 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
xor eax eax
xor ecx ecx
dec ecx
or ebx 0xf000
mov [ edi + eax * 2 + 0x10 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x410 ]
je r-xdata
jmp r-xdata
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x810 ]
je r-xdata
jmp r-xdata
movzx edx [ edi + eax * 2 + 0x10 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
xor eax eax
xor ecx ecx
dec ecx
or ebx 0xf100
mov [ edi + eax * 2 + 0x10 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
movzx edx [ edi + eax * 2 + 0x210 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
xor eax eax
xor ecx ecx
dec ecx
or ebx 0xf100
mov [ edi + eax * 2 + 0x210 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x410 ]
je r-xdata
jmp r-xdata
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x410 ]
je r-xdata
jmp r-xdata
movzx edx [ edi + eax * 2 + 0x610 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
or ebx 0xf100
mov [ edi + eax * 2 + 0x610 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
movzx edx [ edi + eax * 2 + 0x10 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
xor eax eax
xor ecx ecx
dec ecx
or ebx 0xf100
mov [ edi + eax * 2 + 0x10 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
cmp ebp 0x4
je r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0xc ]
je r-xdata
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x410 ]
je r-xdata
jmp r-xdata
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x410 ]
je r-xdata
jmp r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
xor eax eax
mov [ edi + 0x2c8 ] 0xf05c
movzx edx [ edi + eax * 2 + 0x610 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
xor eax eax
xor ecx ecx
dec ecx
or ebx 0xf100
mov [ edi + eax * 2 + 0x610 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
inc eax
cmp eax 0x60
jne r-xdata
mov edx ecx
and edx 0xfe00
cmp edx 0xf000
je r-xdata
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x410 ]
je r-xdata
jmp r-xdata
movzx ecx [ edi + eax * 2 + 0x350 ]
lea edx [ ecx - 0xa0 ]
movzx edx dx
cmp edx 0x5f
ja r-xdata
xor eax eax
movsx ecx [ ecx + r--data ]
add ecx 0xfffff100
mov [ edi + eax * 2 + 0x350 ] cx
movzx edx [ edi + eax * 2 + 0x210 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
xor eax eax
xor ecx ecx
dec ecx
or ebx 0xf000
mov [ edi + eax * 2 + 0x210 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
inc eax
cmp eax 0x1f
jne r-xdata
movsx ecx [ eax + r--data ]
add ecx 0xfffff100
mov [ edi + eax * 2 + 0x6d0 ] cx
inc eax
cmp eax 0x100
jne r-xdata
mov esi ecx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x810 ]
je r-xdata
jmp r-xdata
movzx ecx [ edi + eax * 2 + 0x6d0 ]
and ecx 0xfe00
cmp ecx 0xf000
je r-xdata
xor eax eax
movzx edx [ edi + eax * 2 + 0x610 ]
mov esi edx
and esi 0xfe00
cmp esi 0xf000
je r-xdata
jmp r-xdata
or ebx 0xf000
mov [ edi + eax * 2 + 0x610 ] bx
inc esi
cmp esi 0xfe
jle r-xdata
inc eax
cmp eax 0x80
jne r-xdata
movsx ecx [ eax + r--data ]
add ecx 0xfffff100
mov [ edi + eax * 2 + 0x110 ] cx
lea ebx [ esi + 0x21 ]
movzx ebx bl
cmp dx [ edi + ebx * 2 + 0x810 ]
je r-xdata
jmp r-xdata
movzx ecx [ edi + eax * 2 + 0x110 ]
and ecx 0xfe00
cmp ecx 0xf000
je r-xdata
sub_495baa
push ebp
push ebx
push edi
push esi
sub esp 0x20
mov eax [ rw-data ]
mov edi [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
mov eax 0xfde9
test edi edi
je r-xdata
mov ecx [ esp + 0x1c ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x20
pop esi
pop edi
pop ebx
pop ebp
retn
cmp [ edi ] 0x0
je r-xdata
xor eax eax
mov ebp r--data
mov [ esp + 0x4 ] r--data
dec eax
mov [ esp ] eax
test bl bl
je r-xdata
xor esi esi
movsx eax bl
push eax
call sub_4a75aa
add esp 0x4
cmp bl 0x3a
je r-xdata
test bl bl
je r-xdata
mov esi ebx
jmp r-xdata
test eax eax
je r-xdata
xor ebx ebx
movsx eax bl
push eax
call sub_4a75aa
add esp 0x4
cmp bl 0x3a
je r-xdata
mov bl [ ebp ]
jmp r-xdata
mov bl [ edi + 0x1 ]
inc edi
inc edi
movzx eax al
push eax
call sub_4a8654
add esp 0x4
mov esi eax
inc ebp
movzx eax bl
push eax
call sub_4a8654
add esp 0x4
cmp esi eax
je r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov eax esi
test al al
jne r-xdata
test eax eax
je r-xdata
mov bl [ edi ]
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edi [ esp + 0x34 ]
mov ebp [ eax + 0x10 ]
add eax 0x10
mov [ esp + 0x4 ] eax
test ebp ebp
jne r-xdata
cmp eax 0xfde9
je r-xdata
mov bl [ ebp + 0x1 ]
inc ebp
jmp r-xdata
movzx ebx [ edi ]
push ebx
call sub_4a8654
add esp 0x4
cmp eax 0x63
jne r-xdata
test eax eax
je r-xdata
mov esi edi
movzx eax [ edi + 0x1 ]
push eax
call sub_4a8654
add esp 0x4
lea esi [ edi + 0x2 ]
cmp eax 0x70
cmovne esi edi
mov bl [ esi ]
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov eax r--data
mov edi [ esp + 0x34 ]
sub ecx eax
sar ecx 0x4
add ecx 0x10000
mov eax ecx
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0x4 ] eax
push eax
call [ GetCPInfo@IAT ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ esi + 0x1 ]
push eax
call sub_4a8654
add esp 0x4
cmp eax 0x62
jne r-xdata
movzx eax bl
push eax
call sub_4a8654
add esp 0x4
cmp eax 0x69
jne r-xdata
cmp esi 0xfde9
je r-xdata
xor eax eax
cmp [ edi ] 0x0
sete al
or eax 0xfffffffe
jmp r-xdata
mov esi [ esp ]
mov edi [ esp + 0x34 ]
mov al [ edi ]
mov bl [ ebp ]
mov cl [ esi + eax ]
inc eax
mov edx ecx
add dl 0xd0
cmp dl 0xa
jb r-xdata
cmp eax 0x1
je r-xdata
movzx eax [ esi + 0x2 ]
push eax
call sub_4a8654
add esp 0x4
lea ecx [ esi + 0x3 ]
cmp eax 0x6d
cmove esi ecx
mov eax esi
jmp r-xdata
cmp esi 0xffff
jg r-xdata
mov eax [ esp ]
mov eax [ esp ]
test cl cl
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
push esi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
call [ GetACP@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4a65cf
add esp 0x4
jmp r-xdata
mov eax 0xfffffffe
cmp [ esp + 0x8 ] 0x1
mov eax 0xfffffffd
ja r-xdata
mov esi 0xfffffffe
cmp eax 0xffff
jg r-xdata
call [ GetOEMCP@IAT ]
cmp esi 0xffffffff
mov eax esi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
sub_495dfd
push ebp
push ebx
push edi
push esi
sub esp 0x10
mov edx [ esp + 0x2c ]
mov ecx [ rw-data ]
mov eax [ esp + 0x24 ]
mov edi [ esp + 0x28 ]
mov esi 0x100
test edx edx
mov [ esp + 0xc ] ecx
mov ecx 0x80
setne bl
cmp edx 0x2
cmove esi ecx
test eax eax
je r-xdata
call [ GetACP@IAT ]
jmp r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ eax - 0x1 ]
cmp ecx 0xfffe
ja r-xdata
call [ GetOEMCP@IAT ]
cmp eax 0xfde9
jne r-xdata
movzx eax ax
xor edx edx
shl eax 0x4
mov ecx [ eax + r--data ]
xor ecx ecx
mov ebp esi
mov [ esp ] eax
mov cl bl
xor ebx ebx
xor esi esi
lea ecx [ ecx * 4 + 0x8 ]
inc esi
mov [ esp + 0x4 ] ecx
xor eax eax
mov [ edi + edx * 2 ] dx
inc edx
cmp edx esi
jl r-xdata
mov edx 0x100
sub edx ecx
cmp edx esi
jge r-xdata
mov eax [ esp ]
inc ebx
add edi 0x2
cmp ebx ebp
jl r-xdata
mov [ edi ] 0xfffd
mov [ edi + eax * 2 ] ax
inc eax
cmp eax esi
jl r-xdata
jmp r-xdata
mov ecx [ esp + 0xc ]
call sub_497c4a
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax [ eax + r--data ]
lea edx [ edi + edx * 2 ]
lea ecx [ esi + ecx - 0x100 ]
mov [ esp + 0x8 ] bl
push esi
push edi
push esi
lea ecx [ esp + 0x14 ]
push ecx
push [ esp + 0x14 ]
push eax
call [ MultiByteToWideChar@IAT ]
cmp eax esi
je r-xdata
jmp r-xdata
movzx esi [ eax ]
add eax 0x2
mov [ edx ] si
add edx 0x2
dec ecx
jne r-xdata
sub_495f10
push ebp
push ebx
push edi
push esi
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
mov dl 0x2b
mov ecx r--data
mov [ rw-data ] r--data
mov dl [ ecx ]
mov [ rw-data ] ecx
add ecx 0x4
test dl dl
jne r-xdata
movsx edx [ ecx - 0x3 ]
cmp edx ebx
je r-xdata
movsx edx dl
cmp edx ebp
jne r-xdata
xor esi esi
dec esi
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov cl 0x2b
mov eax r--data
mov [ rw-data ] r--data
mov cl [ eax ]
mov [ rw-data ] eax
add eax 0x4
test cl cl
jne r-xdata
movsx ecx [ eax - 0x3 ]
cmp ecx ebp
je r-xdata
movsx ecx cl
cmp ecx ebx
jne r-xdata
push ebx
call sub_4a8684
add esp 0x4
mov edi eax
push ebp
call sub_4a8684
add esp 0x4
mov dl 0x2b
mov ecx r--data
mov [ rw-data ] r--data
movzx esi [ eax - 0x2 ]
jmp r-xdata
mov dl [ ecx ]
mov [ rw-data ] ecx
add ecx 0x4
test dl dl
jne r-xdata
movsx edx [ ecx - 0x3 ]
cmp edi edx
je r-xdata
movsx edx dl
cmp eax edx
jne r-xdata
push ebp
call sub_4a8684
add esp 0x4
mov edi eax
push ebx
call sub_4a8684
add esp 0x4
mov dl 0x2b
mov ecx r--data
mov [ rw-data ] r--data
mov dl [ ecx ]
mov [ rw-data ] ecx
add ecx 0x4
test dl dl
jne r-xdata
movsx edx [ ecx - 0x3 ]
cmp edi edx
je r-xdata
movsx edx dl
cmp eax edx
jne r-xdata
jmp r-xdata
sub_49603c
push esi
mov esi [ esp + 0x8 ]
cmp esi 0xffffffff
je r-xdata
push 0x12
push r--data
push rw-data
call sub_49a1f0
add esp 0xc
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0xfffe
ja r-xdata
mov eax rw-data
cmp esi 0x10000
mov [ rw-data ] 0x0
jl r-xdata
push esi
push r--data
push rw-data
call sub_432778
add esp 0xc
jmp r-xdata
mov eax r--data
mov ecx r--data
lea eax [ esi - 0x10000 ]
shl esi 0x4
mov ecx 0x100000
pop esi
retn
mov eax [ ecx ]
add ecx 0x10
test eax eax
jne r-xdata
shl eax 0x4
mov edx r--data
mov ecx [ eax + r--data ]
mov eax r--data
cmp [ ecx + 0x31ef88 ] 0x0
lea ecx [ ecx + 0x10 ]
jne r-xdata
cmp [ ecx - 0xc ] esi
je r-xdata
mov eax [ edx ]
add edx 0x10
test eax eax
jne r-xdata
cmp esi ecx
je r-xdata
jmp r-xdata
cmp ecx [ edx - 0x4 ]
je r-xdata
jmp r-xdata
sub_496120
push ebp
push ebx
push edi
push esi
push eax
mov esi [ esp + 0x38 ]
mov edi [ esp + 0x30 ]
mov ebp [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
test esi esi
je r-xdata
push [ esp + 0x34 ]
push edi
push [ esp + 0x34 ]
push ebp
push ebx
push edx
push [ esp + 0x34 ]
push ecx
call [ WideCharToMultiByte@IAT ]
cmp [ esi + 0xc ] ecx
jne r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
test ebx ebx
jns r-xdata
test ebx ebx
jle r-xdata
xor ebx ebx
mov ecx ebp
lea ecx [ edi + 0x1 ]
xor edi edi
mov [ esp ] ecx
jmp r-xdata
cmp [ edx + ebx * 2 ] 0x0
lea ebx [ ebx + 0x1 ]
jne r-xdata
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
movzx ecx [ edx + edi * 2 ]
test esi esi
je r-xdata
cmp ecx 0x7f
ja r-xdata
movzx edx ch
mov eax [ esi + edx * 4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
mov [ ebp ] cl
jmp r-xdata
movzx edx cl
mov al [ eax + edx ]
test al al
je r-xdata
mov [ ebp ] 0x2e
mov al [ eax ]
test al al
je r-xdata
inc ebp
mov [ ebp ] al
jmp r-xdata
mov edx [ esp + 0x20 ]
inc edi
cmp edi ebx
jne r-xdata
push 0x4a5
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov ecx [ esp ]
mov eax [ esp + 0x38 ]
mov esi [ eax ]
mov ecx [ esp + 0x28 ]
jmp r-xdata
mov eax ebp
sub eax [ esp + 0x28 ]
cmp eax [ esp + 0x2c ]
jl r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebp ] al
inc ebp
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ebp ecx
mov eax ebp
jmp r-xdata
sub_496254
push ebp
push ebx
push edi
push esi
sub esp 0x108
mov ebx [ esp + 0x124 ]
mov eax [ rw-data ]
mov esi [ esp + 0x120 ]
xor ebp ebp
mov edi 0x0
test ebx ebx
mov [ esp + 0x104 ] eax
je r-xdata
mov ebx [ esp + 0x11c ]
mov eax [ esp + 0x128 ]
mov [ esi ] 0x4c
test ebx ebx
je r-xdata
mov eax esp
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
dec eax
xor ecx ecx
cmp eax 0x102
cmova ebx ecx
mov edi ebx
test eax eax
mov [ esi + 0x2c ] ebp
je r-xdata
xor ebp ebp
cmp [ ebx ] 0x0
cmovne ebp ebx
push esi
call [ GetOpenFileNameA@IAT ]
push esi
call [ GetSaveFileNameA@IAT ]
jmp r-xdata
test edi edi
je r-xdata
push ebx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
dec eax
cmp eax 0x103
jb r-xdata
mov esi eax
test ebx ebx
je r-xdata
mov ecx [ esp + 0x104 ]
call sub_497c4a
mov eax esi
add esp 0x108
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax esp
push eax
call [ SetCurrentDirectoryA@IAT ]
mov [ ebx ] 0x0
sub_496318
push edi
push esi
sub esp 0x2c
mov edi [ rw-data ]
mov eax [ esp + 0x44 ]
mov esi [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
mov [ esp + 0x28 ] edi
mov [ esp ] 0x28
mov edi [ rw-data ]
mov [ esp + 0x8 ] edi
mov edi [ rw-data ]
mov [ esp + 0x4 ] edi
xor edi edi
test eax eax
mov [ esp + 0x20 ] sub_4963a3
mov [ esp + 0x24 ] edi
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] esi
je r-xdata
mov eax esp
push eax
call [ MessageBoxIndirectA@IAT ]
mov ecx [ esp + 0x28 ]
mov esi eax
call sub_497c4a
mov eax esi
add esp 0x2c
pop esi
pop edi
retn
call sub_48e82b
test eax eax
je r-xdata
or esi 0x4000
mov [ esp + 0x14 ] esi
sub_4963a3
mov eax [ esp + 0x4 ]
xor ecx ecx
mov edx r--data
mov eax [ eax + 0x10 ]
cmp eax 0x1
cmovne edx ecx
cmp eax 0x2
mov ecx r--data
cmovne ecx edx
cmp eax 0x3
mov edx r--data
cmovne edx ecx
cmp eax 0x4
mov ecx r--data
cmovne ecx edx
cmp eax 0x5
mov eax r--data
cmovne eax ecx
test eax eax
je r-xdata
retn 0x4
push eax
push [ rw-data ]
call sub_48e83d
add esp 0x8
sub_496410
push ebp
push ebx
push edi
push esi
xor esi esi
xor edi edi
shl edi 0x2
mov ecx 0x55555556
mov eax edi
imul ecx
mov ebp edx
mov ebx ebp
shr ebx 0x1f
lea edi [ ebp + ebx + 0x200 ]
push 0x1
push edi
push esi
call sub_43f8db
add esp 0xc
mov esi eax
push edi
push esi
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call [ GetDlgItemTextA@IAT ]
lea eax [ ebp + ebx + 0x1ff ]
push eax
push 0x0
push esi
call sub_4989c0
add esp 0xc
test eax eax
je r-xdata
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
sub_49646e
push ebp
push ebx
push edi
push esi
sub esp 0x18
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x30 ]
mov al [ edi ]
jmp r-xdata
test al al
jne r-xdata
movsx eax al
push eax
call sub_4a7635
add esp 0x4
test eax eax
je r-xdata
test esi esi
je r-xdata
push edi
call sub_4a7f30
add esp 0x4
inc eax
xor ecx ecx
inc ecx
push ecx
push eax
call sub_43f807
add esp 0x8
mov ebx eax
push edi
call sub_4a7f30
add esp 0x4
mov esi 0x4
push esi
push eax
call sub_43f807
add esp 0x8
mov [ esp + 0xc ] eax
push edi
call sub_4a7f30
add esp 0x4
push esi
push eax
call sub_43f807
add esp 0x8
mov [ esp + 0x8 ] eax
xor ebp ebp
mov al [ edi ]
test al al
je r-xdata
mov al [ edi + 0x1 ]
inc edi
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x38 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov esi 0x4
push esi
push ebp
push [ esp + 0x14 ]
call sub_43f8db
add esp 0xc
mov edi eax
push esi
push ebp
push [ esp + 0x10 ]
call sub_43f8db
add esp 0xc
mov esi eax
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
mov esi ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov [ eax ] ebp
mov eax [ esp + 0xc ]
mov [ eax + ebp * 4 ] esi
mov eax [ esp + 0x8 ]
mov [ eax + ebp * 4 ] ebx
mov al [ ebx ]
test al al
je r-xdata
mov al [ ebx + 0x1 ]
inc ebx
test al al
jne r-xdata
add esp 0x18
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_43f9d4
add esp 0x4
mov [ eax ] edi
jmp r-xdata
mov edi ebx
mov [ esp ] ebp
mov [ esp + 0x4 ] 0x0
movsx eax al
push eax
call sub_4a7635
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_43f9d4
add esp 0x1c
jmp r-xdata
mov [ eax ] esi
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
mov ebx edi
cmp al 0x22
je r-xdata
mov ebx eax
movsx eax bl
push eax
call sub_4a7635
add esp 0x4
test eax eax
mov eax ebx
jne r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
xor ebx ebx
cmp al 0x5c
jne r-xdata
mov [ esi ] 0x0
inc ebp
inc esi
mov al [ edi ]
test al al
jne r-xdata
test ebx ebx
je r-xdata
xor ebp ebp
mov [ esi ] al
inc edi
inc esi
jmp r-xdata
xor ebx ebx
mov al [ edi ]
test al al
jne r-xdata
push ebx
push 0x5c
push esi
call sub_49acf0
add esp 0xc
add esi ebx
jmp r-xdata
cmp [ edi + ebp + 0x1 ] 0x22
lea ebp [ ebp + 0x1 ]
je r-xdata
cmp ebx 0x2
jl r-xdata
mov al [ edi + ebx + 0x1 ]
inc ebx
cmp al 0x5c
je r-xdata
add edi ebx
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov ecx 0xfffffffc
mov [ esp + 0x10 ] esi
not eax
cmp eax 0xfffffffb
cmovle eax ecx
lea esi [ ebx + eax + 0x2 ]
mov eax esi
and esi 0xfffffffe
shr eax 0x1
mov [ esp + 0x14 ] eax
inc eax
push eax
push 0x5c
push [ esp + 0x18 ]
call sub_49acf0
add esp 0xc
neg esi
mov eax [ esp + 0x14 ]
lea ebx [ ebx + esi - 0x2 ]
mov esi [ esp + 0x10 ]
lea esi [ esi + eax + 0x1 ]
cmp al 0x22
jne r-xdata
mov ecx ebp
mov [ esi ] 0x22
lea ecx [ ebp - 0x1 ]
inc esi
jmp r-xdata
cmp [ esp + 0x4 ] 0x1
lea ebx [ edi + ebp ]
sbb ecx 0x0
cmp ecx 0x2
jl r-xdata
add edi ebp
mov ebp [ esp ]
test ecx ecx
jg r-xdata
mov eax ecx
mov edx 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
xor edx edx
lea eax [ eax + eax * 2 ]
cmp ecx eax
sete dl
mov [ esp + 0x4 ] edx
mov al [ ebx ]
test al al
jne r-xdata
mov eax 0x2
mov ebp [ esp ]
mov edi ebx
add edi ebp
mov ebp [ esp ]
jmp r-xdata
add eax 0x3
mov [ esi ] 0x22
inc esi
cmp eax ecx
jle r-xdata
sub_496724
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
push 0x28
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
cmp ebx 0x2
je r-xdata
xor ebx ebx
mov eax 0x10
mov [ esi ] 0x2
inc ebx
mov [ esi + 0x8 ] eax
push ebx
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x4 ] eax
mov eax 0x8
push ebx
push eax
call sub_43f807
add esp 0x8
xor ecx ecx
mov [ esi + 0x14 ] eax
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
cmp ebx 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x14 ]
movsd xmm0 [ eax ]
movsd [ ecx ] xmm0
mov eax [ esi + 0x4 ]
add eax 0x9
push 0x8
push [ esi + 0x14 ]
push eax
call sub_45fbd2
add esp 0xc
push esi
push edi
call sub_47dcb3
add esp 0x8
cmp eax esi
jne r-xdata
xor ebx ebx
push 0x76
push r--data
push r--data
call sub_4a509d
add esp 0xc
xor eax eax
mov ecx 0x10
inc eax
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
push eax
push ecx
call sub_43f807
add esp 0x8
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] 0x0
cmp [ esi + 0x8 ] 0x0
jle r-xdata
push sub_4968ca
call sub_47dc24
add esp 0x4
mov ecx [ esi + 0x4 ]
mov [ ecx + ebx ] al
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
call sub_469c4e
push esi
push edi
call sub_47dcb3
add esp 0x8
cmp eax esi
jne r-xdata
xor ebx ebx
xor eax eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x20 ] eax
mov eax esi
pop esi
pop edi
pop ebx
retn
mov ecx [ esi + 0x4 ]
movzx ecx [ ecx ]
push ecx
push r--data
push eax
call sub_432778
add esp 0xc
cmp [ esi + 0x8 ] 0x2
jl r-xdata
cmp ebx 0x8
mov eax 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
jle r-xdata
xor eax eax
jmp r-xdata
call sub_469c4e
mov ecx [ esi + 0x4 ]
mov [ ecx + ebx ] al
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov ebx 0x2
mov [ esi + 0x18 ] eax
mov eax [ esi ]
push [ eax * 4 + r--data ]
call sub_43f79e
add esp 0x4
mov [ esi + 0xc ] eax
xor edi edi
mov eax [ esi + 0x8 ]
inc edi
lea eax [ eax + eax + 0x1 ]
push edi
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x10 ] eax
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x10 ]
movzx eax [ eax + edi ]
add ecx ebx
push eax
push r--data
push ecx
call sub_432778
add esp 0xc
inc edi
add ebx 0x2
cmp edi [ esi + 0x8 ]
jl r-xdata
sub_4968ca
push esi
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov edx [ eax ]
mov esi [ ecx ]
cmp edx esi
jbe r-xdata
cmp edx esi
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
add eax 0x4
add ecx 0x4
push 0x6
push ecx
push eax
call sub_498a6d
add esp 0xc
xor eax eax
dec eax
jmp r-xdata
pop esi
retn
sub_4968fd
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
push [ esi + 0x8 ]
push eax
call sub_48f5d3
add esp 0x8
mov eax [ esi + 0x4 ]
jmp r-xdata
pop esi
jmp sub_43f9d4
push 0x0
push eax
jmp r-xdata
push eax
call sub_43f9d4
add esp 0x4
push [ esi + 0xc ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x14 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
call sub_47e541
add esp 0x8
test eax eax
jne r-xdata
push eax
call sub_43f9d4
add esp 0x4
push 0x0
push [ esi + 0x18 ]
push [ esi + 0x18 ]
call sub_47dc40
add esp 0x4
sub_49697d
push ebx
push edi
push esi
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
xor eax eax
dec eax
mov edx [ esi ]
mov ebx [ edi ]
cmp edx ebx
jl r-xdata
pop esi
pop edi
pop ebx
retn
xor ecx ecx
inc ecx
cmp edx ebx
jle r-xdata
cmp edx 0x2
je r-xdata
mov eax ecx
jmp r-xdata
push 0x8
push [ edi + 0x14 ]
push [ esi + 0x14 ]
cmp edx 0x1
jne r-xdata
push 0xb9
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov edx [ esi + 0x8 ]
cmp edx [ edi + 0x8 ]
jl r-xdata
mov eax ecx
jg r-xdata
push edx
push [ edi + 0x4 ]
push [ esi + 0x4 ]
jmp r-xdata
call sub_498a6d
add esp 0xc
sub_4969e8
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
push 0x2c
push 0x1
call sub_43f807
add esp 0x8
mov esi eax
test edi edi
je r-xdata
call sub_48f498
mov edi eax
test edi edi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
push edi
call sub_43f9d4
add esp 0x4
push r--data
mov al [ edi ]
test al al
jne r-xdata
push edi
jmp r-xdata
push 0x3a
push edi
call sub_43f6bb
add esp 0x8
mov ebp eax
test ebp ebp
je r-xdata
xor eax eax
mov [ esi + 0x10 ] edi
mov [ esi ] 0x1
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0xffffffff
mov [ esi + 0xc ] eax
mov [ esi + 0x14 ] eax
jmp r-xdata
cmp al 0x2f
jne r-xdata
call sub_43f79e
add esp 0x4
mov edi eax
mov al [ edi ]
push esi
call sub_43f9d4
add esp 0x4
push edi
jmp r-xdata
mov eax ebp
inc ebp
mov [ eax ] 0x0
push 0x2e
push ebp
call sub_49ae50
add esp 0x8
test eax eax
mov ebx 0x0
je r-xdata
mov ebx [ esp + 0x24 ]
lea ebp [ esi + 0x14 ]
call sub_43f9d4
add esp 0x4
xor esi esi
push ebp
call sub_4a65cf
add esp 0x4
mov [ esi + 0x8 ] eax
test ebx ebx
mov eax 0x0
je r-xdata
mov ebx eax
mov [ eax ] 0x0
inc ebx
mov edi esi
add edi 0x10
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_491ff3
add esp 0x8
mov [ esi + 0x14 ] eax
mov edi esi
add edi 0x10
jmp r-xdata
xor edx edx
cmp ebp edi
mov ebp 0x0
mov ebx edi
mov [ esi + 0xc ] eax
jbe r-xdata
push ebx
call sub_4a65cf
add esp 0x4
push [ esi + 0x8 ]
push r--data
call sub_43f758
add esp 0x8
push eax
call sub_43f79e
add esp 0x4
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
push 0x2f
push edi
call sub_49ae50
xor edx edx
add esp 0x8
test eax eax
mov ebp 0x0
mov ebx edi
je r-xdata
mov ecx [ esp + 0x8 ]
call sub_497c4a
mov eax esi
add esp 0xc
pop esi
pop edi
pop ebx
pop ebp
retn
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] 0x0
test ebp ebp
mov [ esi + 0x4 ] edx
je r-xdata
push ebx
call sub_43f79e
add esp 0x4
mov edx eax
mov ebx eax
mov ebp edi
mov [ eax ] 0x0
inc ebx
cmp [ ebx ] 0x0
je r-xdata
mov ebx edx
push r--data
push ebp
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov ecx [ r--data ]
push r--data
push ebx
mov ebx edx
call sub_4a7d00
mov edx ebx
add esp 0x8
xor ecx ecx
test eax eax
jne r-xdata
mov [ esi ] 0x1
push r--data
push ebp
call sub_4a7d00
add esp 0x8
xor ecx ecx
test eax eax
mov edx ebx
sete cl
jmp r-xdata
xor ebx ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
push edi
call sub_43f9d4
add esp 0x4
cmp [ esi ] ebx
je r-xdata
test edx edx
jne r-xdata
test ecx ecx
mov [ esi ] ecx
jne r-xdata
mov eax 0x1770
lea ecx [ esi + 0x1c ]
add eax [ esi + 0x8 ]
mov [ esi + 0x18 ] eax
push ebx
push ebx
push ebx
mov ebx [ esp + 0x30 ]
push ebx
push ecx
push eax
push [ esi + 0x4 ]
call sub_441360
add esp 0x1c
mov [ esi + 0x14 ] eax
push eax
call sub_491f41
add esp 0x4
test eax eax
je r-xdata
push r--data
call sub_43f79e
add esp 0x4
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ esi ] 0x0
lea ebp [ esi + 0x14 ]
jne r-xdata
push [ esi + 0x14 ]
call sub_490c67
add esp 0x4
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push esi
mov edi [ ebp ]
push [ ebp ]
call sub_490962
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push [ esi + 0x8 ]
push 0x0
call sub_491ff3
add esp 0x8
mov edi eax
push edi
call sub_491f41
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
push edi
call sub_490c67
add esp 0x4
lea ebx [ esp + 0x4 ]
mov [ ebx ] r--data
push edi
call sub_490ca4
add esp 0x4
xor ecx ecx
push ebx
push ecx
push ecx
push ecx
push ecx
push ecx
push eax
call sub_490cab
add esp 0x1c
mov ebx eax
mov eax [ ebx ]
push ebx
call [ eax + 0x1c ]
add esp 0x4
mov [ esp ] eax
mov eax [ ebx ]
push ebx
mov ebx [ esp + 0x28 ]
call [ eax + 0x4 ]
add esp 0x4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
push ebx
push esi
call sub_4966fc
add esp 0x8
jmp r-xdata
push [ ebp ]
call sub_490c67
add esp 0x4
mov [ esi ] 0x1
mov [ ebp ] edi
jmp r-xdata
test edi edi
je r-xdata
sub_496d20
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
xor eax eax
push [ esi + 0x28 ]
push eax
call sub_48f5d3
add esp 0x8
mov eax [ esi + 0x24 ]
jmp r-xdata
push eax
call sub_43f9d4
add esp 0x4
push [ esi + 0x14 ]
call sub_490c67
add esp 0x4
pop esi
jmp sub_43f9d4
sub_496d6f
push ebp
push ebx
push edi
push esi
sub esp 0x48
mov eax [ rw-data ]
mov ecx [ esp + 0x5c ]
mov esi [ esp + 0x60 ]
mov [ esp + 0x44 ] eax
cmp [ ecx ] 0x0
je r-xdata
push [ ecx + 0x14 ]
call sub_490962
add esp 0x4
test eax eax
setne al
mov [ esp + 0x8 ] eax
mov [ esp + 0x8 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x44 ]
call sub_497c4a
add esp 0x48
pop esi
pop edi
pop ebx
pop ebp
retn
call sub_491fac
mov [ esp + 0x4 ] eax
push 0x1
push 0x40004
call sub_43f807
add esp 0x8
mov [ esp + 0xc ] eax
push edi
call sub_4a691d
add esp 0x4
mov esi eax
cmp eax 0xffffffff
je r-xdata
push r--data
push esi
call sub_4a6bb0
add esp 0x8
mov edi eax
test edi edi
je r-xdata
push edi
call sub_4a666f
add esp 0x4
push 0x40004
mov esi [ esp + 0x10 ]
push esi
call sub_48f5d3
add esp 0x8
push esi
call sub_43f9d4
add esp 0x4
push [ esp + 0x4 ]
call sub_43f9d4
add esp 0x4
mov eax [ esp + 0x8 ]
xor al 0x1
mov [ esp + 0x3 ] al
mov ebx [ esp + 0xc ]
movzx eax al
shl esi 0x8
or esi eax
mov [ esp + 0x10 ] esi
xor esi esi
movzx ebp al
mov [ esp + esi * 4 + 0x24 ] ebp
push edi
call sub_4a691d
add esp 0x4
cmp eax 0xffffffff
je r-xdata
movzx eax al
shl ebp 0x8
mov [ esp + esi * 4 + 0x34 ] ebx
or ebp eax
test ebp ebp
mov [ esp + esi * 4 + 0x24 ] ebp
je r-xdata
mov [ ebx ] 0x0
inc ebx
cmp esi 0x3
lea esi [ esi + 0x1 ]
jl r-xdata
xor ebp ebp
push edi
call sub_4a691d
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x5c ]
mov esi [ eax + 0x8 ]
test esi esi
js r-xdata
mov [ ebx + ebp ] al
inc ebp
cmp ebp [ esp + esi * 4 + 0x24 ]
jl r-xdata
push edi
call sub_4a691d
add esp 0x4
mov esi eax
cmp eax 0xffffffff
jne r-xdata
push [ esp + 0x38 ]
call sub_4a65cf
add esp 0x4
cmp esi eax
jne r-xdata
push edi
call sub_4a691d
add esp 0x4
cmp eax 0xffffffff
je r-xdata
add ebx ebp
push edi
call sub_4a691d
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov ebx [ esp + 0x3c ]
xor esi esi
inc esi
mov ecx [ esp + 0x10 ]
movzx eax cx
cmp eax 0x100
je r-xdata
inc esi
cmp esi 0x3
jb r-xdata
mov eax [ esp + 0x5c ]
xor ecx ecx
cmp [ eax ] ecx
setne al
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp eax 0x6
je r-xdata
push [ esi * 4 + r--data ]
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
je r-xdata
or al [ esp + 0x8 ]
je r-xdata
mov eax [ esp + 0x5c ]
cmp [ eax ] 0x0
jne r-xdata
test cx cx
jne r-xdata
push [ esp + 0x34 ]
push [ esp + 0x8 ]
call sub_4a7d00
add esp 0x8
test eax eax
mov ebx 0x1
jne r-xdata
mov eax [ esp + 0x5c ]
push [ eax + 0x14 ]
call sub_490b5c
add esp 0x4
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x5c ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x60 ]
push [ eax + 0x14 ]
call sub_490b94
add esp 0x8
xor ebx ebx
cmp [ esp + 0x24 ] 0x10
mov eax 0x0
jne r-xdata
mov eax [ esp + 0x5c ]
push [ eax + 0x14 ]
call sub_490b5c
add esp 0x4
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x5c ]
mov ebp eax
mov [ ebp + 0x20 ] esi
push [ ebp + 0x24 ]
call sub_43f9d4
add esp 0x4
mov esi [ esp + 0x30 ]
push 0x1
push esi
call sub_43f807
add esp 0x8
mov [ ebp + 0x24 ] eax
push esi
push [ esp + 0x44 ]
push eax
call sub_49a1f0
add esp 0xc
mov [ ebp + 0x28 ] esi
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
movdqu xmm1 [ esp + 0x14 ]
movdqu xmm0 [ eax ]
xor eax eax
pcmpeqb xmm1 xmm0
pmovmskb ecx xmm1
cmp ecx 0xffff
lea eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x60 ]
push [ eax + 0x14 ]
call sub_490b94
add esp 0x8
xor ebx ebx
cmp [ esp + 0x24 ] 0x4
mov eax 0x0
jne r-xdata
test ebx ebx
jne r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ eax ]
xor eax eax
cmp ecx [ esp + 0x14 ]
jmp r-xdata
sete al
mov ecx eax
and cl [ esp + 0x3 ]
movzx ebx cl
sub_497095
push ebp
push ebx
push edi
push esi
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
push 0x54
push 0x1
call sub_43f807
add esp 0x8
movaps xmm0 [ r--data ]
mov esi eax
xor eax eax
test ebx ebx
mov [ esi ] r--data
mov [ esi + 0x18 ] eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x20 ] eax
movups [ esi + 0x34 ] xmm0
mov [ esi + 0x4c ] ebp
mov [ esi + 0x14 ] eax
mov [ esi + 0x50 ] eax
je r-xdata
mov [ esi + 0x44 ] eax
mov eax [ esp + 0x20 ]
mov [ esi + 0x48 ] eax
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push ebx
call sub_43f79e
add esp 0x4
sub_4970f7
push ebx
push edi
push esi
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
cmp [ esi + 0x40 ] 0x0
je r-xdata
pop esi
pop edi
pop ebx
retn
push eax
call sub_44802d
add esp 0x4
push ebx
push [ esi + 0x4c ]
call sub_44812b
add esp 0x8
jmp r-xdata
push ebx
push r--data
call sub_43f758
add esp 0x8
mov edi eax
mov ecx esi
mov edx edi
call sub_497875
push edi
call sub_43f9d4
add esp 0x4
sub_497150
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esi + 0x4c ]
call sub_448357
add esp 0xc
test eax eax
jle r-xdata
pop esi
retn
xor eax eax
inc eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x40 ] 0x0
mov ecx [ esi + 0x50 ]
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0x18 ]
add esp 0x8
sub_49719c
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push eax
call sub_43f9d4
add esp 0x4
push [ esi + 0x1c ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x44 ]
call sub_43f9d4
add esp 0x4
pop esi
jmp sub_43f9d4
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
sub_4971e3
push ebx
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov [ ecx + 0x38 ] 0x0
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
xor ebx ebx
cmp [ ecx + 0x3c ] 0x0
mov edx [ eax ]
setne bl
push ebx
push eax
call [ edx + 0x18 ]
add esp 0x8
sub_49720f
push ebx
push esi
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
pop esi
pop ebx
retn
mov edx [ esp + 0x10 ]
mov [ ecx + 0x3c ] edx
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
xor ebx ebx
or edx [ ecx + 0x38 ]
mov esi [ eax ]
setne bl
push ebx
push eax
call [ esi + 0x18 ]
add esp 0x8
sub_49723c
push ebp
push ebx
push edi
push esi
sub esp 0x70
mov esi [ esp + 0x84 ]
mov eax [ rw-data ]
xor edi edi
test esi esi
mov [ esp + 0x6c ] eax
je r-xdata
mov ecx [ esp + 0x6c ]
call sub_497c4a
mov eax edi
add esp 0x70
pop esi
pop edi
pop ebx
pop ebp
retn
mov ebx [ esp + 0x8c ]
mov ebp [ esp + 0x88 ]
test ebx ebx
jle r-xdata
cmp [ esi + 0x20 ] 0xc
jl r-xdata
mov eax [ esi + 0x20 ]
cmp eax 0xb
jg r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov cl [ ebp ]
inc ebp
lea edx [ eax + 0x1 ]
cmp ebx 0x1
lea ebx [ ebx - 0x1 ]
mov [ esi + 0x20 ] edx
mov [ esi + eax + 0x4 ] cl
jg r-xdata
test ebx ebx
jle r-xdata
cmp [ esi + 0x4 ] 0x42
movzx ecx [ esi + 0xa ]
jne r-xdata
lea eax [ esi + 0x28 ]
lea ecx [ esi + 0x30 ]
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x20 ]
add ecx 0xc
cmp eax ecx
jge r-xdata
movzx eax [ esi + 0xb ]
shl eax 0x8
or eax ecx
mov [ esi + 0x24 ] eax
movzx ecx [ esi + 0xd ]
movzx edx [ esi + 0xc ]
shl ecx 0x8
movzx eax [ esi + 0xb ]
shl ecx 0x8
or eax ecx
mov [ esi + 0x24 ] eax
movzx edx [ esi + 0xc ]
movzx ecx [ esi + 0xd ]
shl edx 0x8
jmp r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
test ebx ebx
jle r-xdata
mov cl [ ebp ]
mov edx [ esi + 0x18 ]
inc ebp
lea edi [ eax + 0x1 ]
cmp ebx 0x1
lea ebx [ ebx - 0x1 ]
mov [ esi + 0x20 ] edi
mov [ edx + eax - 0xc ] cl
jg r-xdata
add eax 0x3
or ecx edx
mov [ esi + 0x2c ] ecx
add ecx 0x3
and eax 0x1fffc
mov [ esi + 0x28 ] eax
and ecx 0x1fffc
or eax 0x1
xor edi edi
inc edi
mov [ esi + 0x30 ] ecx
push edi
push eax
call sub_43f807
add esp 0x8
mov [ esi + 0x18 ] eax
push edi
push [ esi + 0x30 ]
call sub_43f807
add esp 0x8
xor edi edi
mov [ esi + 0x1c ] eax
cmp [ esi + 0x4 ] 0x42
movzx eax [ esi + 0x6 ]
jne r-xdata
add esi 0x50
xor edi edi
lea eax [ esi + 0x28 ]
lea ecx [ esi + 0x30 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
movzx edi [ esi + 0x7 ]
movzx ecx [ esi + 0x9 ]
shl edi 0x8
shl ecx 0x8
or edi eax
movzx eax [ esi + 0x8 ]
movzx edi [ esi + 0x7 ]
shl eax 0x8
movzx ecx [ esi + 0x9 ]
or edi eax
movzx eax [ esi + 0x8 ]
shl eax 0x8
jmp r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
xor edi edi
jmp r-xdata
mov al [ ebp ]
mov [ esp ] al
mov eax ebx
mov ebx ebp
mov ebp esi
mov ecx [ esi + 0x1c ]
lea esi [ edx + 0x1 ]
add edx 0xfffffff4
mov [ ebp + 0x20 ] esi
mov esi ebp
mov ebp ebx
mov ebx eax
sub edx edi
mov al [ esp ]
inc ebp
cmp ebx 0x1
lea ebx [ ebx - 0x1 ]
mov [ ecx + edx ] al
jg r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x24 ]
lea edx [ esp + 0x20 ]
mov [ eax + ecx ] 0x0
mov [ edx ] 0x0
mov ecx [ esi + 0x44 ]
call sub_497800
test eax eax
mov [ esp + 0x18 ] edi
je r-xdata
push 0x36c
push r--data
push r--data
call sub_4a509d
add esp 0xc
or ecx eax
mov [ esp + 0x14 ] ecx
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax [ eax ]
mov ecx [ ecx ]
lea eax [ eax + ecx + 0xc ]
cmp [ esi + 0x20 ] eax
jl r-xdata
mov edi [ esi + 0x28 ]
mov eax [ esi + 0x30 ]
mov edx [ esi + 0x20 ]
lea eax [ edi + eax + 0xc ]
cmp edx eax
jge r-xdata
xor eax eax
dec eax
mov eax [ esi + 0x48 ]
jmp r-xdata
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x28 ]
xor edi edi
mov [ eax - 0x4 ] 0x1
mov [ eax + 0x4 ] ecx
push r--data
push edi
call sub_4a7d00
add esp 0x8
mov edx r--data
test eax eax
mov edi 0x0
jne r-xdata
mov [ esp + 0xc ] eax
mov eax [ esi + 0x2c ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ esp ] eax
mov eax [ esi + 0x10 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x20 ]
mov edi [ esi + 0x18 ]
mov [ esp + 0x10 ] eax
push r--data
push edi
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov edx r--data
cmp [ eax ] 0x2
jne r-xdata
mov ecx esi
call sub_497875
lea eax [ esp + 0x38 ]
mov [ eax - 0x14 ] 0x2
jmp r-xdata
mov edx eax
mov eax [ edx + 0x20 ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x18
mov edx r--data
jne r-xdata
mov ecx [ esp ]
mov [ eax ] ecx
lea eax [ esp + 0x24 ]
push 0x0
push eax
push [ esp + 0x10 ]
call sub_47e50d
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x4 ] ebp
push [ esi + 0x4c ]
mov edi edx
call sub_4487f8
add esp 0x4
mov eax [ edi + 0x1c ]
mov [ esi + 0x14 ] eax
push [ esi + 0x4c ]
call sub_448020
add esp 0x4
mov [ esp ] eax
mov eax [ esi + 0x14 ]
mov ebp [ eax + 0x18 ]
mov edi [ eax + 0x1c ]
push [ eax + 0x14 ]
call sub_490ca4
add esp 0x4
xor ecx ecx
push [ esp ]
push esi
push ecx
push ecx
push 0x1
push ecx
push ebp
push edi
push eax
call sub_441484
add esp 0x24
mov [ esi + 0x50 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
movzx ecx [ esi + 0x4 ]
push ebx
push ebp
push [ esp + 0x1c ]
push [ esp + 0x24 ]
push ecx
push [ esi + 0x48 ]
push [ esi + 0x44 ]
push [ edx + 0x24 ]
push eax
push [ esi + 0x4c ]
call sub_44879f
add esp 0x28
jmp r-xdata
cmp [ esp + 0xc ] 0xffffffff
je r-xdata
lea eax [ esi + 0x50 ]
mov ebp esi
lea edi [ esp + 0x1c ]
mov [ esp ] eax
lea eax [ esp + 0x4c ]
mov [ eax + 0x4 ] 0x302e30
mov [ eax ] 0x2e302e30
mov ecx [ esi + 0x14 ]
movzx edx [ esi + 0x4 ]
push edi
push 0x0
push eax
push [ ecx + 0x28 ]
push [ ecx + 0x24 ]
push [ ecx + 0x20 ]
push [ esp + 0x2c ]
push [ esp + 0x34 ]
push edx
call sub_497956
add esp 0x24
mov edi eax
mov eax [ ebp + 0x50 ]
lea edx [ esp + 0x1c ]
mov esi [ edx ]
mov ecx [ eax ]
push esi
push edi
push eax
call [ ecx + 0x8 ]
add esp 0xc
push esi
push edi
call sub_48f5d3
add esp 0x8
push edi
call sub_43f9d4
add esp 0x4
mov [ ebp + 0x34 ] 0x1
mov esi [ esp ]
mov ebp [ esp + 0x4 ]
jmp r-xdata
push eax
push r--data
call sub_43f758
add esp 0x8
mov ebx eax
mov ecx esi
mov edx ebx
call sub_497875
push ebx
call sub_43f9d4
add esp 0x4
xor edi edi
jmp r-xdata
mov edx r--data
jmp r-xdata
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x4 ]
add eax 0x9
push 0x18
push [ esp + 0x4 ]
push eax
call sub_45fd6c
add esp 0xc
push 0x8
push [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
push [ eax + 0x4 ]
call sub_498a6d
add esp 0xc
mov edx r--data
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push ebx
push ebp
push eax
call [ ecx + 0x8 ]
add esp 0xc
mov edi eax
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x8 ]
bswap eax
cmp eax [ esp + 0x10 ]
jne r-xdata
movzx eax [ ecx + 0xc ]
movzx ecx [ ecx + 0xd ]
shl eax 0x8
or ecx eax
cmp ecx [ esp + 0xc ]
jne r-xdata
mov ecx [ esp ]
lea eax [ ecx + 0x8 ]
mov [ esp + 0xc ] eax
mov eax [ ecx + 0xe ]
bswap eax
mov [ esp + 0x4 ] eax
mov eax 0x11
inc eax
cmp eax 0x16
jle r-xdata
cmp [ ecx + eax + 0x1 ] 0x0
jne r-xdata
push 0x0
call sub_4a48c4
add esp 0x4
mov ecx [ esp + 0x4 ]
mov edx r--data
lea ecx [ ecx + 0x4b0 ]
sub ecx eax
mov eax [ esp + 0x8 ]
cmp ecx 0x960
ja r-xdata
mov [ esp + 0x10 ] ebx
mov ebx ebp
push 0xc
push 0x1
mov edi eax
call sub_43f807
add esp 0x8
mov ecx [ esp + 0x4 ]
mov ebp eax
mov [ eax ] ecx
mov ecx [ esp + 0xc ]
movzx edx [ ecx + 0x4 ]
mov [ eax + 0x8 ] dx
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x18 ]
test eax eax
jne r-xdata
push ebp
push eax
call sub_47dcb3
add esp 0x8
cmp eax ebp
je r-xdata
push 0x1ac
push r--data
push r--data
call sub_4a509d
add esp 0xc
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x18 ]
mov ebp ebx
mov ebx [ esp + 0x10 ]
xor edi edi
jmp r-xdata
push ebp
call sub_43f9d4
add esp 0x4
mov edx r--data
xor edi edi
jmp r-xdata
push 0x0
mov eax [ esp + 0xc ]
push [ eax + 0x18 ]
call sub_47e33c
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
sub ecx [ eax ]
mov eax [ esp + 0x8 ]
cmp ecx 0x4b1
jae r-xdata
push 0x1b5
push r--data
push r--data
mov [ esp + 0xc ] eax
call sub_4a509d
mov eax [ esp + 0xc ]
add esp 0xc
push 0x0
push [ eax + 0x18 ]
call sub_47e541
add esp 0x8
push eax
call sub_43f9d4
add esp 0x4
sub_497800
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
xor edi edi
mov esi edx
test ecx ecx
mov [ esp + 0x10 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
call sub_497c4a
mov eax edi
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
lea eax [ esp + 0xc ]
lea edx [ esp + 0x8 ]
lea ebx [ esp + 0x4 ]
mov ebp esp
push eax
push edx
push ebx
push ebp
push r--data
push ecx
call sub_442b34
add esp 0x18
mov ecx 0x4
cmp eax ecx
jne r-xdata
mov eax [ esp ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
shl eax 0x18
shl edx 0x8
shl ecx 0x10
or edx eax
or edx ecx
or edx [ esp + 0xc ]
xor edi edi
inc edi
mov [ esi ] edx
sub_497875
push ebp
push ebx
push edi
push esi
sub esp 0xc
mov esi ecx
push edx
push [ r--data ]
push r--data
call sub_43f758
add esp 0xc
mov [ esp + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ebp eax
lea eax [ ebp + 0xd ]
push 0x1
push eax
call sub_43f807
add esp 0x8
mov ebx eax
mov ecx ebp
mov [ ebx ] 0x0
mov [ ebx + 0x1 ] cl
mov [ esp + 0x8 ] esi
lea eax [ ecx + 0x3 ]
mov edi ecx
mov ecx [ esi + 0x6 ]
mov ebp eax
and ebp 0xfffffffc
mov [ ebx + 0x2 ] ecx
mov ecx eax
shr eax 0xa
shr ecx 0x2
cmp [ esi + 0x4 ] 0x42
mov esi edi
mov edx ecx
cmove edx eax
cmove eax ecx
xor ecx ecx
mov [ ebx + 0x6 ] dl
mov [ ebx + 0x7 ] al
lea eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax ebp
sub eax esi
cmovbe eax ecx
xor edi edi
lea ecx [ ebx + esi + 0x8 ]
push eax
push edi
push ecx
call sub_49acf0
add esp 0xc
push esi
mov edi [ esp + 0x8 ]
push edi
push [ esp + 0x8 ]
call sub_49a1f0
add esp 0xc
add ebp 0x8
push ebp
push ebx
mov esi [ esp + 0x10 ]
push [ esi + 0x4c ]
call sub_448357
add esp 0xc
push [ esi + 0x4c ]
call sub_44802d
add esp 0x4
xor eax eax
mov [ esi + 0x40 ] eax
push ebx
call sub_43f9d4
add esp 0x4
push edi
call sub_43f9d4
add esp 0x10
pop esi
pop edi
pop ebx
pop ebp
retn
sub_497956
push ebp
push ebx
push edi
push esi
sub esp 0x60
mov eax [ rw-data ]
mov esi [ esp + 0x80 ]
mov edi [ esp + 0x84 ]
mov ebx [ esp + 0x74 ]
mov [ esp + 0x5c ] eax
mov eax [ esi * 4 + r--data ]
mov [ esp + 0x14 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov ebp eax
mov [ esp + 0x8 ] eax
add ebp 0x3
and ebp 0xfffffffc
cmp esi 0x1
jne r-xdata
mov ecx [ esp + 0x88 ]
lea eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
xor eax eax
cmp esi 0x2
jne r-xdata
mov eax [ esp + 0x88 ]
mov [ esp + 0x4 ] edi
jmp r-xdata
mov edi eax
mov [ esp + 0xc ] ebp
lea eax [ edi + 0x3 ]
and eax 0xfffffffc
lea ebp [ ebp + eax + 0xc ]
push 0x1
push ebp
call sub_43f807
add esp 0x8
mov esi eax
mov [ esp + 0x10 ] ebp
push ebp
push 0x0
push esi
call sub_49acf0
mov eax edi
add esp 0xc
mov [ esi ] bl
cmp ebx 0x42
mov ch al
mov edx [ esp + 0x8 ]
mov cl dl
je r-xdata
cmp ecx 0x10
jne r-xdata
mov al ah
mov ebx [ esp + 0x7c ]
mov [ esp + 0x2 ] cl
mov cl dh
mov [ esp + 0x3 ] al
mov eax [ esp + 0x78 ]
mov edx ebx
mov bl bh
mov dh al
mov al ah
mov al dh
mov ebx [ esp + 0x7c ]
mov [ esp + 0x3 ] ch
mov [ esp + 0x2 ] al
mov eax [ esp + 0x78 ]
mov dl bh
mov dh ah
jmp r-xdata
mov ecx [ esp + 0x8c ]
lea esi [ esp + 0x18 ]
xor eax eax
lea ebx [ esp + 0x1c ]
mov edx esi
mov [ esi ] eax
call sub_497800
xor edx edx
mov [ ebx + 0x12 ] edx
mov [ ebx + 0x16 ] 0x0
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ esi ]
mov [ ebx + 0x4 ] ecx
mov ecx eax
shr ecx 0x18
mov [ ebx + 0x8 ] cl
mov ecx eax
shr ecx 0x10
mov [ ebx + 0x9 ] cl
mov [ ebx + 0xa ] ah
mov [ ebx + 0xb ] al
mov eax [ esp + 0x90 ]
mov [ ebx + 0xc ] ah
mov [ ebx + 0xd ] al
push edx
call sub_4a48c4
add esp 0x4
mov ecx eax
add edi 0x9
shr ecx 0x18
mov [ ebx + 0xe ] cl
mov ecx eax
shr ecx 0x10
mov [ ebx + 0xf ] cl
mov [ ebx + 0x10 ] ah
mov [ ebx + 0x11 ] al
push 0x18
mov [ esp + 0x8 ] ebx
push ebx
mov ebx [ esp + 0x7c ]
push edi
call sub_45fbd2
add esp 0xc
mov eax 0x18
mov [ esi + 0x9 ] ch
lea eax [ esi + 0xc ]
push [ esp + 0x8 ]
push [ esp + 0x18 ]
push eax
call sub_49a1f0
add esp 0xc
lea eax [ esi + ebx + 0xc ]
push edi
push [ esp + 0x8 ]
push eax
call sub_49a1f0
add esp 0xc
lea eax [ esp + 0x1c ]
push 0x40
push eax
call sub_48f5d3
add esp 0x8
mov eax [ esp + 0x10 ]
mov [ ebp ] eax
mov ecx [ esp + 0x5c ]
call sub_497c4a
mov eax esi
add esp 0x60
pop esi
pop edi
pop ebx
pop ebp
retn
mov eax edi
mov ch ah
mov [ esi + 0x2 ] al
mov [ esi + 0x3 ] dh
mov [ esi + 0x4 ] bl
mov [ esi + 0x5 ] dl
mov [ esi + 0x6 ] cl
mov ebp [ esp + 0x94 ]
mov al [ esp + 0x2 ]
mov [ esi + 0x7 ] al
mov al [ esp + 0x3 ]
mov [ esi + 0x8 ] al
mov ebx [ esp + 0xc ]
je r-xdata
sub_497b51
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
add esp 0x4
retn
retn
push eax
call sub_44802d
add esp 0x4
sub_497b77
push ebx
push edi
push esi
mov ebx [ esp + 0x10 ]
xor esi esi
inc esi
xor edi edi
dec edi
mov eax esi
pop esi
pop edi
pop ebx
retn
inc esi
cmp esi 0x3
jb r-xdata
push [ esi * 4 + r--data ]
push ebx
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
mov esi edi
sub_497ba6
push ebp
push ebx
push edi
push esi
sub esp 0x14
mov eax [ rw-data ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
push ebp
call sub_4a7f30
add esp 0x4
mov esi eax
shr esi 0x1
push 0x1
push esi
call sub_43f807
add esp 0x8
test esi esi
mov [ esp ] eax
mov [ esp + 0x4 ] esi
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov ecx [ esp + 0x10 ]
call sub_497c4a
mov eax [ esp ]
add esp 0x14
pop esi
pop edi
pop ebx
pop ebp
retn
mov esi [ esp + 0x4 ]
mov ebx [ esp ]
inc ebp
lea edi [ esp + 0xd ]
mov [ esp + 0x8 ] 0x0
mov al [ ebp - 0x1 ]
mov [ esp + 0xd ] al
mov al [ ebp ]
mov [ esp + 0xe ] al
lea eax [ esp + 0x8 ]
mov [ esp + 0xf ] 0x0
push eax
push r--data
push edi
call sub_442b34
add esp 0xc
mov al [ esp + 0x8 ]
add ebp 0x2
mov [ ebx ] al
inc ebx
dec esi
jne r-xdata
sub_497c60
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax

cmp ecx eax
r-xdata
sub_497cb5
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_497c8d
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_497db0
push esi
push 0x2
call sub_4a4487
call sub_498308
push eax
call sub_4a44c2
call sub_49b5e3
mov esi eax
call sub_498301
push 0x1
mov [ esi ] eax
call sub_4980af
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_498374
int3
fnclex
call sub_49855b
push sub_498586
call sub_498250
call sub_498304
push eax
call sub_4a3adc
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_49830e
call sub_49835c
test eax eax
je r-xdata
call sub_49833e
call sub_49833e
call sub_49831d
call sub_498301
push eax
call sub_4a378c
pop ecx
call sub_49831a
test al al
je r-xdata
push sub_498301
call sub_49b65f
pop ecx
call sub_498301
xor eax eax
retn
call j_sub_4a3faf
sub_497e6e
push 0x14
push r--data
call sub_4985c0
push 0x1
call sub_498076
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_498041
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_498374
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call sub_4a42c9
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_49836e
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_498146
pop ecx
test al al
je r-xdata
push r--data
push r--data
call sub_4a426d
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
call sub_49848f
movzx eax ax
push eax
call sub_4a3f2d
push eax
push edi
push __dos_header
call sub_484d85
mov esi eax
call sub_4984c2
test al al
jne r-xdata
push esi
call sub_498146
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_49833e
call esi
push [ ebp - 0x24 ]
call sub_4981d0
pop ecx
call sub_498368
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_498606
retn
test bl bl
jne r-xdata
push esi
call sub_4a3719
push [ esi ]
call sub_4a36e1
pop ecx
push edi
push 0x1
call sub_4981ed
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
jmp r-xdata
call sub_4a36bc
sub_497fa7
mov esp [ ebp - 0x18 ]
call sub_4984c2
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_4a36cb
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_498606
retn
call sub_4a36ad
sub_497ffd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_498041
call sub_4987b5
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor al al
retn
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_498076
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_49861b
call sub_4987c1
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_49b473
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_4987ea
pop ecx
jmp r-xdata
sub_4980af
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4987b5
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_498374
int3
push rw-data
call sub_4a3ecc
pop ecx
test eax eax
je r-xdata
push rw-data
call sub_4a3ecc
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_498146
push 0x8
push r--data
call sub_4985c0
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __dos_header
sub eax ecx
push eax
push ecx
call sub_497ffd
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ eax + 0x24 ] 0x0
jl r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_498606
retn
sub_4981ed
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_49b485
push [ ebp + 0x8 ]
call sub_4987ea
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_498215
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_4a3f09
pop ecx
call sub_4a3e99
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_498265
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_498374
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call sub_49acf0
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_49acf0
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_49848f
push ebp
mov ebp esp
sub esp 0x44
push 0x44
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_49acf0
add esp 0xc
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4984c2
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_498512
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4a8316
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_49855b
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_49833e
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_498586
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_49833e
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_4985c0
push sub_498850
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_49861b
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x28
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x10 ] 0x0
xor eax eax
or [ rw-data ] 0x2
xor ecx ecx
push esi
push edi
mov [ rw-data ] ebx
lea edi [ ebp - 0x28 ]
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x20 ]
xor eax 0x6c65746e
or ecx eax
mov eax [ ebp - 0x24 ]
push 0x1
xor eax 0x756e6547
or ecx eax
pop eax
push 0x0
pop ecx
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
jne r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x28 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
pop edi
pop esi
test eax 0x100000
je r-xdata
push 0x7
pop eax
xor ecx ecx
push ebx
cpuid
mov esi ebx
pop ebx
lea ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] edx
mov eax [ ebp - 0x24 ]
test eax 0x200
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] 0x2
test eax 0x8000000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
cmp [ ebp - 0x8 ] 0x7
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] eax
jl r-xdata
cmp eax 0x20670
je r-xdata
test eax 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
xor ecx ecx
xgetbv
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
and eax 0x6
xor ecx ecx
cmp eax 0x6
jne r-xdata
cmp eax 0x30660
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x30670
jne r-xdata
mov eax [ rw-data ]
or eax 0x8
mov [ rw-data ] 0x3
test [ ebp - 0x10 ] 0x20
mov [ rw-data ] eax
je r-xdata
or eax 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] eax
sub_4987c1
call sub_4a8c4e
call sub_4a8be2
call sub_4a895f
test al al
jne r-xdata
call sub_4a8911
test al al
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_4a899b
jmp r-xdata
sub_498810
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
add ecx edi
xor ecx [ eax + edi ]
pop edi
pop esi
pop ebp
jmp sub_497c4a
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_497c4a
sub_498850
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov ebx [ esi + 0x8 ]
lea eax [ esi + 0x10 ]
xor ebx [ rw-data ]
push eax
push ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] ebx
call sub_498810
mov edi [ ebp + 0x10 ]
push edi
call sub_49833e
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ eax + 0x4 ] 0x66
jne r-xdata
cmp [ esi + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
mov edi [ esi + 0xc ]
mov [ esi - 0x4 ] eax
cmp edi 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
lea eax [ esi + 0x10 ]
mov edx 0xfffffffe
push eax
mov ecx esi
call sub_4a8f07
lea eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
mov ecx [ ebx + eax * 4 + 0x4 ]
lea eax [ ebx + eax * 4 ]
mov ebx [ eax ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov cl [ ebp - 0x1 ]
lea edx [ esi + 0x10 ]
call sub_4a8ebe
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
push [ ebp - 0x14 ]
push ebx
call sub_498810
add esp 0x8
mov edi ebx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx eax
mov ecx esi
call sub_4a8eee
cmp [ esi + 0xc ] edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ esi + 0xc ] ebx
lea ebx [ esi + 0x10 ]
push ebx
push [ ebp - 0x8 ]
call sub_498810
mov ecx [ ebp - 0x10 ]
add esp 0x8
mov edx ebx
mov ecx [ ecx + 0x8 ]
call sub_4a8ed5
int3
jmp r-xdata
push rw-data
call sub_4a8cc0
add esp 0x4
test eax eax
je r-xdata
push rw-data
lea eax [ esi + 0x10 ]
mov edx edi
push eax
mov ecx esi
call sub_4a8f07
mov eax [ ebp + 0x8 ]
mov esi [ rw-data ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call j_sub_49833e
call esi
mov esi [ ebp + 0xc ]
add esp 0x8
sub_4989c0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_498a6d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
sub eax 0x1
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
sub eax 0x1
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
sub eax 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_49a16d ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx eax [ edx - 0x1f ]
movzx edi [ esi - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x8 ]
movzx edi [ esi - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x7 ]
movzx ecx [ esi - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_49a1f0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_49a770
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_49acf0
mov ecx [ esp + 0xc ]
movzx eax [ esp + 0x8 ]
mov edx edi
mov edi [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edi edx
retn
imul eax eax 0x1010101
cmp ecx 0x20
jle r-xdata
test ecx 0x3
je r-xdata
cmp ecx 0x80
jl r-xdata
test ecx 0x4
je r-xdata
mov [ edi ] al
inc edi
sub ecx 0x1
test ecx 0x3
jne r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jae r-xdata
test ecx 0xfffffff8
je r-xdata
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
movd xmm0 eax
pshufd xmm0 xmm0 0x0
bt [ rw-data ] 0x1
jae r-xdata
[ edi ]
mov eax [ esp + 0x4 ]
mov edi edx
retn
lea esp [ esp ]
lea ebx [ ebx ]
lea edi [ ecx + edi - 0x20 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
mov eax [ esp + 0x4 ]
mov edi edx
retn
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
add edi 0x20
sub ecx 0x20
cmp ecx 0x20
jae r-xdata
movd xmm0 eax
pshufd xmm0 xmm0 0x0
add ecx edi
movups [ edi ] xmm0
add edi 0x10
and edi 0xfffffff0
sub ecx edi
cmp ecx 0x80
jle r-xdata
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add edi 0x8
sub ecx 0x8
test ecx 0xfffffff8
jne r-xdata
test ecx 0x1f
je r-xdata
lea esp [ esp ]
lea esp [ esp ]
nop
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
sub ecx 0x80
test ecx 0xffffff00
jne r-xdata
jmp r-xdata
cmp ecx 0x20
jb r-xdata
sub_49ae50
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_49af80
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_49b0c0
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push edi
push ebx
push esi
cmp [ rw-data ] 0x1
jb r-xdata
mov dl [ ecx ]
mov edi eax
test dl dl
je r-xdata
ja r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
mov ebx edx
shl edx 0x8
or edx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
pop esi
pop ebx
pop edi
retn
mov edi ecx
mov ebx 0xfff
and ebx ecx
cmp ebx 0xff0
ja r-xdata
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
pxor xmm0 xmm0
mov esi ecx
or edi 0xffffffff
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
mov ebx 0xf
movdqu xmm0 [ ecx ]
jmp r-xdata
movd edx xmm3
test ecx 0xf
jne r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
movd edx xmm0
test esi esi
je r-xdata
movzx ebx [ eax ]
test ebx ebx
je r-xdata
movdqu xmm1 [ eax ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm1 xmm2
pmovmskb ebx xmm1
add eax 0x10
test ebx ebx
je r-xdata
movzx ebx [ ecx ]
add ecx 0x1
test ebx ebx
je r-xdata
movdqa xmm2 [ ecx ]
pcmpeqb xmm2 xmm0
pmovmskb ebx xmm2
test ebx ebx
jne r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
add eax 0x10
pcmpistri xmm0 [ eax - 0x10 ] 0xc
ja r-xdata
movzx ebx [ eax ]
test ebx ebx
je r-xdata
pinsrb xmm0 esi 0xf
psrldq xmm0 0x1
dec ebx
je r-xdata
jmp r-xdata
xor eax eax
add eax 0x1
cmp dl bl
jne r-xdata
mov ebx 0xfff
and ebx eax
cmp ebx 0xff0
ja r-xdata
bsf ebx ebx
sub eax 0x10
add eax ebx
mov edi 0xf
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ebx 0xfff
and ebx eax
cmp ebx 0xff0
jbe r-xdata
jae r-xdata
cmp dl bl
je r-xdata
movzx esi [ ecx ]
add ecx 0x1
mov edx eax
lea ecx [ esi + 0x1 ]
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
sub eax 0x10
add eax ecx
mov edx edi
mov esi eax
add eax 0x1
jmp r-xdata
movzx ebx [ ecx ]
test ebx ebx
je r-xdata
and ebx edx
cmp ebx 0xff0
ja r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
movzx ebx [ edx ]
test ebx ebx
je r-xdata
mov ebx 0xfff
and ebx edx
cmp ebx 0xff0
ja r-xdata
dec eax
pop esi
pop ebx
pop edi
retn
cmp bl [ edx ]
jne r-xdata
movdqu xmm1 [ edx ]
movdqa xmm2 [ ecx ]
pcmpeqb xmm1 xmm2
pcmpeqb xmm2 xmm0
pcmpeqb xmm1 xmm0
por xmm2 xmm1
pmovmskb ebx xmm2
test ebx ebx
jne r-xdata
shr eax 0x10
cmp al bl
je r-xdata
cmp bl [ esi ]
jne r-xdata
movdqu xmm1 [ edx ]
add esi 0x10
add edx 0x10
pcmpistri xmm1 [ esi - 0x10 ] 0xc
jno r-xdata
add edx 0x1
add ecx 0x1
jmp r-xdata
bsf ebx ebx
add edx ebx
add ecx ebx
add edx 0x10
add ecx 0x10
jmp r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
add eax 0x1
add esi 0x1
add edx 0x1
jmp r-xdata
jns r-xdata
mov ebx 0xfff
test edi ecx
jne r-xdata
cmp ah bl
je r-xdata
mov ebx 0xfff
and ebx esi
cmp ebx 0xff0
ja r-xdata
jmp r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_49b363
mov eax [ rw-data ]
push esi
push 0x20
and eax 0x1f
xor esi esi
pop ecx
sub ecx eax
ror esi cl
xor esi [ rw-data ]
push esi
call sub_4aa932
push esi
call sub_4aaa04
push esi
call sub_4aabb1
push esi
call sub_49b602
push esi
call sub_4a369e
add esp 0x14
mov al 0x1
pop esi
retn
sub_49b3a9
mov eax [ rw-data ]
or ecx 0xffffffff
push esi
[ eax ] ecx
jne r-xdata
push [ rw-data ]
call sub_4a8813
push [ rw-data ]
xor esi esi
mov [ rw-data ] esi
call sub_4a8813
push [ rw-data ]
mov [ rw-data ] esi
call sub_4a8813
push [ rw-data ]
mov [ rw-data ] esi
call sub_4a8813
add esp 0x10
mov [ rw-data ] esi
mov al 0x1
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_4a8813
pop ecx
mov [ rw-data ] esi
sub_49b423
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_49b442
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_49b497
mov eax [ rw-data ]
push esi
push 0x3
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4aaf77
push 0x0
mov [ rw-data ] eax
call sub_4a8813
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
mov [ rw-data ] eax
push edi
xor edi edi
mov esi rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_4aaf77
push 0x0
mov [ rw-data ] eax
call sub_4a8813
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0xfffffffe
cmp eax 0xfffffffe
je r-xdata
or eax 0xffffffff
pop esi
retn
push 0x0
push 0xfa0
lea eax [ esi + 0x20 ]
push eax
call sub_4a93e8
mov eax [ rw-data ]
mov edx edi
sar edx 0x6
mov [ eax + edi * 4 ] esi
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov eax [ eax + ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add esi 0x38
inc edi
cmp esi rw-data
jne r-xdata
sub_49b571
push esi
call sub_4a679c
call sub_4aafd4
xor esi esi
mov eax [ rw-data ]
push [ esi + eax ]
call sub_4ab074
mov eax [ rw-data ]
pop ecx
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
add esi 0x4
cmp esi 0xc
jne r-xdata
push [ rw-data ]
call sub_4a8813
and [ rw-data ] 0x0
pop ecx
pop esi
retn
sub_49b616
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
sub_49b674
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_49bf9f
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_49b6b9
mov eax esi
call sub_498606
retn 0xc
sub_49b6c5
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_49c05c
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_49b70a
mov eax esi
call sub_498606
retn 0xc
sub_49b716
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_49b674
mov esp ebp
pop ebp
retn
sub_49b73e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_49b6c5
mov esp ebp
pop ebp
retn
sub_49b766
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_49bede
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_49bf61
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_49be74
lea ecx [ ebp - 0x45c ]
call sub_49c408
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_49b8e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_49bede
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_49bf61
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_49bea9
lea ecx [ ebp - 0x45c ]
call sub_49c644
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_49ba7f
mov edi edi
push ebp
mov ebp esp
push ecx
or eax 0xffffffff
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
div esi
push edi
and eax 0xfffffffe
mov edi ecx
cmp eax 0x2
jae r-xdata
push ebx
xor ebx ebx
add esi esi
cmp [ edi + 0x404 ] ebx
jne r-xdata
call sub_4aaf64
mov [ eax ] 0xc
xor al al
jmp r-xdata
cmp esi [ edi + 0x400 ]
ja r-xdata
cmp esi 0x400
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_4a884d
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_4a8813
pop ecx
mov al bl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x404 ]
call sub_49bf7b
mov eax [ ebp - 0x4 ]
mov bl 0x1
mov [ edi + 0x400 ] esi
pop ebx
sub_49bb05
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov al [ ebp + 0x10 ]
cmp al 0x63
je r-xdata
mov cl 0x1
cmp al 0x73
je r-xdata
xor cl cl
jmp r-xdata
xor eax eax
test cl cl
sete al
pop ebp
retn
sub_49bb45
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x4
mov dl 0x1
or eax ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x63
je r-xdata
mov dl cl
mov cl 0x1
cmp [ ebp + 0x10 ] 0x73
jne r-xdata
xor eax eax
cmp dl cl
sete al
pop ebp
retn
sub_49bb94
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x404 ]
call sub_49ba67
test edi edi
jne r-xdata
add eax edi
add eax esi
jmp r-xdata
pop edi
pop esi
retn
sub_49bbb2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_49ba67
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_49bc27
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_49ba67
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_4ac1f0
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_49bcaf
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_49e220
cmp [ edi ] 0xffffffff
je r-xdata
sub_49bcdb
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_49e25d
cmp [ edi ] 0xffffffff
je r-xdata
sub_49bd0c
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_49e29d
cmp [ edi ] 0xffffffff
je r-xdata
sub_49bd38
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_49e2df
cmp [ edi ] 0xffffffff
je r-xdata
sub_49bd69
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x30 ] ax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] al
mov [ ecx + 0x440 ] eax
mov [ ecx + 0x444 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_49bdb0
mov edi edi
push ebp
mov ebp esp
push ecx
xor edx edx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov [ ecx ] edx
mov [ ecx + 0x32 ] ax
mov eax ecx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x3c ] dl
mov [ ecx + 0x440 ] edx
mov [ ecx + 0x444 ] edx
mov esp ebp
pop ebp
retn
sub_49bdfc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_49bd69
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_49be38
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_49bdb0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_49be74
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_49bdfc
and [ esi + 0x450 ] 0x0
call sub_4aaf64
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_49bea9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_49be38
and [ esi + 0x450 ] 0x0
call sub_4aaf64
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_49bede
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x0
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
push esi
call sub_4a9bc5
lea edx [ edi + 0x4 ]
mov [ edi ] eax
push edx
lea esi [ edi + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x48 ]
push eax
mov [ esi ] ecx
call sub_4ab5e2
push esi
push [ edi ]
call sub_4ab60f
mov ecx [ edi ]
add esp 0x10
mov eax [ ecx + 0x350 ]
pop esi
test al 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x350 ] eax
mov [ edi + 0xc ] 0x1
sub_49bf7b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_4a8813
mov edx [ ebp + 0x8 ]
and [ esi ] 0x0
pop ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax esi
and [ edx ] 0x0
pop esi
pop ebp
retn 0x4
sub_49bf9f
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_4aadfd
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_49bede
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_49bea9
lea ecx [ ebp - 0x45c ]
call sub_49c524
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_49bf61
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_4aaeb2
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_49c05c
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_4aadfd
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_49bede
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_49be74
lea ecx [ ebp - 0x45c ]
call sub_49c2ec
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_49bf61
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_4aaeb2
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_49c119
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov bl [ eax ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al bl
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
inc ecx
pop ebx
pop ebp
retn
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x65
je r-xdata
mov edx ecx
cmp al 0x45
je r-xdata
dec ecx
cmp [ ecx ] 0x30
je r-xdata
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov al [ edx ]
inc ecx
inc edx
mov [ ecx ] al
test al al
jne r-xdata
dec ecx
sub_49c170
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor ecx ecx
movsx eax cl
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_49c1a2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor ecx ecx
movzx eax cx
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_49c1d6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4a8654
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_4a75d9
test eax eax
movsx eax [ esi ]
push eax
call sub_4a8654
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp + 0xc ]
mov cl [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
pop ebp
retn
sub_49c232
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_4a8266
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_49c28e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_4a82ea
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_49c2ec
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_49e162
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_49c170
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_49c3e8 ]
mov ecx esi
call sub_49c7de
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_49c764
jmp r-xdata
mov ecx esi
call sub_49d8d9
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_49c9a6
jmp r-xdata
mov ecx esi
call sub_49c9f7
jmp r-xdata
mov ecx esi
call sub_49cfc1
test al al
je r-xdata
sub_49c408
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_49e183
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_49c170
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_49c504 ]
mov ecx esi
call sub_49c7fd
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_49c764
jmp r-xdata
mov ecx esi
call sub_49d8d9
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_49c9a6
jmp r-xdata
mov ecx esi
call sub_49cb60
jmp r-xdata
mov ecx esi
call sub_49d1f0
test al al
je r-xdata
sub_49c524
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_49e183
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_49c1a2
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_49c624 ]
mov ecx esi
call sub_49c81c
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_49c7a1
jmp r-xdata
mov ecx esi
call sub_49d904
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_49c9ce
jmp r-xdata
mov ecx esi
call sub_49ccc9
jmp r-xdata
mov ecx esi
call sub_49d41f
test al al
je r-xdata
sub_49c644
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_49e183
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_49c1a2
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_49c744 ]
mov ecx esi
call sub_49c83b
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_49c7a1
jmp r-xdata
mov ecx esi
call sub_49d904
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_49c9ce
jmp r-xdata
mov ecx esi
call sub_49ce45
jmp r-xdata
mov ecx esi
call sub_49d67c
test al al
je r-xdata
sub_49c764
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_49c7a1
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_49c85a
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_49c8e4
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_49e220
mov al 0x1
pop esi
retn
pop esi
retn
sub_49c884
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_49c945
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_49e29d
mov al 0x1
pop esi
retn
pop esi
retn
sub_49c8e4
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_49e220
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_49c945
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_49e29d
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_49c9a6
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_49c232
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_49c9ce
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_49c28e
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_49c9f7
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_49cfc1
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_49cb60
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_49d1f0
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_49ccc9
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_49d41f
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_49ce45
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_49d67c
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_49cfc1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_49e03b
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_49e023
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_49da52
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_49d98c
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_49de46
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_49df90
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_49dd1e
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_49e004
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_49e588
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bcaf
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_49e324
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_49bcaf
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bcaf
add esp 0x10
sub_49d1f0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_49e03b
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_49e023
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_49da52
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_49d98c
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_49de46
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_49df90
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_49dd1e
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_49e004
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_49e69f
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bd0c
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_49e3cb
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_49bd0c
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bd0c
add esp 0x10
sub_49d41f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_49e0ae
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_49e023
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_49dbac
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_49d9ef
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_49de46
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_49df90
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_49ddae
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_49e004
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_49e612
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bcdb
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_49e472
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_49bcdb
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bcdb
add esp 0x10
sub_49d67c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_49e0ae
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_49e023
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_49dbac
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_49d9ef
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_49de46
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_49df90
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_49ddae
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_49e004
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_49e732
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bd38
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_49e4fd
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_49bd38
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_49bd38
add esp 0x10
sub_49d8d9
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_49c232
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_49d904
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_49c28e
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_49d930
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_49d95c ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_49d98c
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_49bb05
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_49d9ef
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_49bb45
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_49da52
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_49ba7f
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_49ba67
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_49ba67
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_49bb94
push eax
mov ecx edi
call sub_49ba67
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4abf07
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_49c1d6
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_49c119
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_49dbac
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_49ba7f
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_49ba67
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_49ba67
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_49bb94
push eax
mov ecx edi
call sub_49ba67
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4abf07
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_49c1d6
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_49c119
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_49dd1e
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_49bb05
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_49ba67
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_4ab2e7
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_49ddae
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_49bb45
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_4ab0b2
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_49de46
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_49d930
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_49bbb2
push edx
push ecx
mov ecx esi
call sub_49bc27
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_49df90
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_4ac1cf
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_49d930
pop ecx
sub eax 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_49e03b
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_49bb05
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_4ab304
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4ab42b
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_49e0ae
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_49bb45
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_49e122
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4ab42b
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_49e122
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_49e19e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov eax [ ecx + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
mov al 0x1
push ecx
call sub_4ac1a9
mov edx eax
mov esi rw-data
pop ecx
cmp edx 0xffffffff
je r-xdata
mov eax esi
cmp edx 0xfffffffe
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
and eax 0x3f
mov ecx edx
imul eax eax 0x30
sar ecx 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
pop esi
pop ebp
retn
test [ esi + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
and edx 0x3f
imul esi edx 0x30
sar eax 0x6
add esi [ eax * 4 + rw-data ]
sub_49e220
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
movsx eax [ ebp + 0x8 ]
push eax
call sub_4a6bc7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_49e25d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
push [ ebp + 0x8 ]
call sub_4ac083
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_49e29d
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
mov eax [ edx ]
inc [ eax ]
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_49e2df
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
mov eax [ edx ]
add [ eax ] 0x2
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_49e324
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_49e588
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4ab2e7
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_49e588
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_49e3cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_49e69f
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4ab2e7
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_49e69f
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_49e472
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_49e612
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_4ab0b2
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_49e25d
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_49e4fd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_49e732
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_4ab0b2
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_49e2df
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_49e588
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
add eax edi
mov [ ebp - 0x4 ] eax
mov ecx [ esi ]
and [ esi ] 0x0
mov [ ebp - 0x8 ] ecx
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_49e220
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_49e220
mov eax [ ebp + 0x10 ]
sub_49e612
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ esi ]
and [ esi ] 0x0
lea eax [ edi + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_49e25d
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_49e25d
mov eax [ ebp + 0x10 ]
sub_49e69f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov eax ecx
mov [ ebp - 0x8 ] eax
mov ecx [ edi ]
and [ edi ] 0x0
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov esi [ eax + 0x4 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
sub esi [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp esi ebx
jb r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
push [ eax ]
call sub_49a1f0
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
add [ eax + 0x8 ] esi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov esi ebx
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp esi ebx
je r-xdata
add [ eax ] ebx
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] esi
or [ eax ] 0xffffffff
jmp r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ edi ] ecx
sub_49e732
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
mov eax ecx
push edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebx ]
and [ ebx ] 0x0
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp [ edx + 0x8 ] edi
jne r-xdata
sub edi [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edi eax
jb r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
push esi
lea esi [ edi + edi ]
push esi
push [ ebp + 0x8 ]
push [ edx ]
call sub_49a1f0
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
pop esi
add [ eax + 0x8 ] edi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov edi eax
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0xc ]
add [ eax ] ecx
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] edi
or [ eax ] 0xffffffff
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ ebx ] ecx
sub_49e7cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_49b73e
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_49e843
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_49b716
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_49e8ba
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_49b766
add esp 0x1c
pop ebp
retn
sub_49e8de
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_49b8e2
add esp 0x1c
pop ebp
retn
sub_49e902
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] 0x80000000
mov eax [ ecx ]
or [ ecx + 0x4 ] 0x7ff00000
mov [ ecx ] eax
mov eax [ ecx + 0x4 ]
and eax 0xfff80000
or eax 0x80000
and [ ecx ] 0x0
mov [ ecx + 0x4 ] eax
pop ebp
retn
sub_49e931
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] al
push esi
mov esi [ ebp + 0xc ]
setne al
cdq
shl eax 0x1f
xor edx edx
mov ecx [ esi + 0x4 ]
or edx [ esi ]
and ecx 0x7fffffff
or eax ecx
mov [ esi + 0x4 ] eax
mov eax edx
or [ esi + 0x4 ] 0x7ff00000
mov [ esi ] eax
and [ esi ] 0x0
and [ esi + 0x4 ] 0xfff00000
pop esi
pop ebp
retn
sub_49e970
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] al
push esi
mov esi [ ebp + 0xc ]
setne al
cdq
shl eax 0x1f
xor edx edx
mov ecx [ esi + 0x4 ]
or edx [ esi ]
and ecx 0x7fffffff
or eax ecx
mov [ esi + 0x4 ] eax
mov eax edx
or [ esi + 0x4 ] 0x7ff00000
mov [ esi ] eax
or [ esi ] 0xffffffff
or [ esi + 0x4 ] 0xfffff
pop esi
pop ebp
retn
sub_49e9af
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] al
push esi
mov esi [ ebp + 0xc ]
setne al
cdq
shl eax 0x1f
xor edx edx
mov ecx [ esi + 0x4 ]
or edx [ esi ]
and ecx 0x7fffffff
or eax ecx
mov [ esi + 0x4 ] eax
mov eax edx
or [ esi + 0x4 ] 0x7ff00000
mov ecx eax
and [ esi + 0x4 ] 0xfff00000
and ecx 0x1
or ecx 0x1
mov [ esi ] ecx
pop esi
pop ebp
retn
sub_49e9f3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
movzx eax [ ebp + 0x8 ]
shl eax 0x1f
lea ecx [ ecx + 0x7f ]
shl ecx 0x17
and ecx 0x7f800000
or ecx eax
mov eax [ ebp + 0x10 ]
and eax 0x7fffff
or ecx eax
mov eax [ ebp + 0x18 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
sub_49ea23
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
cdq
push esi
mov esi [ ebp + 0x18 ]
xor edx edx
shl eax 0x1f
mov ecx [ esi + 0x4 ]
or [ esi ] edx
and ecx 0x7fffffff
or eax ecx
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
add eax 0x3ff
and eax 0x7ff
and ecx 0x800fffff
cdq
shl eax 0x14
xor edx edx
or edx [ esi ]
or eax ecx
mov [ esi + 0x4 ] eax
mov ecx edx
xor eax [ ebp + 0x14 ]
xor ecx [ ebp + 0x10 ]
and eax 0xfffff
xor [ esi + 0x4 ] eax
mov [ esi ] edx
xor [ esi ] ecx
xor eax eax
pop esi
pop ebp
retn
sub_49ea82
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] al
push esi
mov esi [ ebp + 0xc ]
setne al
cdq
shl eax 0x1f
xor edx edx
mov ecx [ esi + 0x4 ]
or edx [ esi ]
and ecx 0x7fffffff
or eax ecx
mov [ esi + 0x4 ] eax
mov eax edx
and [ esi + 0x4 ] 0x800fffff
mov [ esi ] eax
and [ esi ] 0x0
and [ esi + 0x4 ] 0xfff00000
pop esi
pop ebp
retn
sub_49eac1
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
push esi
mov esi [ ebp + 0x14 ]
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_497c4a
mov esp ebp
pop ebp
retn
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x98 ]
call sub_49bede
push [ ebp + 0x20 ]
lea eax [ esi + edi ]
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x84 ] eax
lea ecx [ ebp - 0x7c ]
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x80 ] edi
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x88 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_49fd92
lea ecx [ ebp - 0x7c ]
call sub_4a294a
cmp [ ebp - 0x8c ] 0x0
pop esi
je r-xdata
mov esi edi
lea ecx [ esi + 0x1 ]
mov ecx [ ebp - 0x98 ]
and [ ecx + 0x350 ] 0xfffffffd
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi ecx
sub_49eb80
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_4a050a
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_49eba3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_4a050a
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_49ebc6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_4a22cd
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_49ebe9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_4a22cd
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_49ec0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x80000000
jb r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jb r-xdata
ja r-xdata
ja r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0xc ] 0xffffffff
ja r-xdata
sub_49ec6d
mov edi edi
push ebp
mov ebp esp
sub esp 0x310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x2c ]
test esi esi
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
inc eax
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ ebp + 0x24 ]
pop esi
test edx edx
je r-xdata
lea ecx [ ebp - 0x310 ]
push ecx
lea ecx [ ebp + 0xc ]
push ecx
push eax
call sub_49ed63
push esi
lea ecx [ ebp - 0x310 ]
push ecx
push eax
call sub_49f411
add esp 0x18
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x1c ]
or ecx [ ebp + 0x20 ]
jne r-xdata
mov [ edx ] cl
sub_49ece8
mov edi edi
push ebp
mov ebp esp
sub esp 0x310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x2c ]
test esi esi
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
inc eax
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ ebp + 0x24 ]
pop esi
test edx edx
je r-xdata
lea ecx [ ebp - 0x310 ]
push ecx
lea ecx [ ebp + 0xc ]
push ecx
push eax
call sub_49ed63
push esi
lea ecx [ ebp - 0x310 ]
push ecx
push eax
call sub_49f521
add esp 0x18
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x1c ]
or ecx [ ebp + 0x20 ]
jne r-xdata
mov [ edx ] cl
sub_49ed63
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
push edi
call sub_4a3256
test al al
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx esi
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x14 ]
push ebx
mov [ ebp - 0x14 ] eax
call sub_4a283e
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x7 ]
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] ecx
jmp r-xdata
push 0x7
pop eax
jmp r-xdata
push ebx
mov [ ebp - 0x7 ] al
movzx eax al
push 0x8
push eax
call sub_4a33cf
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_4a283e
mov cl [ ebp - 0x7 ]
mov edx [ ebp + 0x10 ]
cmp cl 0x2d
sete al
mov [ edx + 0x308 ] al
cmp cl 0x2d
je r-xdata
mov ecx esi
call sub_4a283e
mov cl al
mov [ ebp - 0x7 ] cl
cmp cl 0x2b
jne r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x7 ]
push [ ebp - 0x18 ]
push esi
push eax
call sub_49f1ca
cmp cl 0x69
je r-xdata
cmp cl 0x49
je r-xdata
cmp cl 0x4e
je r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x7 ]
push [ ebp - 0x18 ]
push esi
push eax
call sub_49f28b
jmp r-xdata
cmp cl 0x6e
je r-xdata
add esp 0x10
xor ebx ebx
mov [ ebp - 0x1 ] bl
cmp cl 0x30
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x2 ] bl
lea edi [ edx + 0x8 ]
cmp cl 0x30
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx esi
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_4a283e
mov [ ebp - 0xc ] al
cmp al 0x78
je r-xdata
xor ebx ebx
cmp [ ebp - 0x1 ] bl
sete bl
dec ebx
and ebx 0x6
add ebx 0x9
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x2 ] 0x1
mov ecx esi
mov [ ebp - 0x1 ] 0x1
call sub_4a283e
mov cl al
mov [ ebp - 0x18 ] edi
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x14 ] eax
cmp al 0x58
je r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov ecx esi
call sub_4a283e
mov cl al
mov [ ebp - 0x7 ] cl
cmp cl 0x30
je r-xdata
mov edx [ ebp + 0x10 ]
push [ ebp - 0xc ]
mov ecx esi
call sub_4a31da
mov cl [ ebp - 0x7 ]
jmp r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax ebx
ja r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
pop ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
lea ecx [ edx + 0x308 ]
mov [ ebp - 0x2 ] 0x1
cmp edi ecx
je r-xdata
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov ecx esi
call sub_4a283e
mov edx [ ebp + 0x10 ]
mov cl al
mov [ ebp - 0x7 ] cl
lea eax [ edx + 0x8 ]
cmp edi eax
jne r-xdata
inc [ ebp - 0xc ]
mov ecx esi
call sub_4a283e
mov edx [ ebp + 0x10 ]
mov cl al
mov [ ebp - 0x7 ] cl
jmp r-xdata
mov [ edi ] al
inc edi
push [ ebp - 0x7 ]
mov ecx esi
call sub_4a31da
mov eax [ esi + 0x10 ]
mov ecx esi
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_4a283e
mov [ ebp - 0x7 ] al
mov cl bl
cmp al 0x45
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_49fe2e
test al al
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp cl 0x30
jne r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp [ ebp - 0x1 ] 0x0
sete cl
cmp al 0x50
je r-xdata
push 0x7
jmp r-xdata
xor eax eax
cmp [ ebp - 0x1 ] al
sete al
dec eax
and eax 0xfffffffb
add eax 0x7
jmp r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x2 ] 0x1
push [ ebp - 0x7 ]
mov ecx esi
call sub_4a31da
mov esi [ ebp + 0x10 ]
lea edx [ esi + 0x8 ]
cmp edi edx
je r-xdata
mov ecx esi
call sub_4a283e
mov cl al
cmp cl 0x2d
mov [ ebp - 0x7 ] cl
sete [ ebp - 0x3 ]
cmp cl 0x2b
je r-xdata
mov cl [ ebp - 0x1 ]
jmp r-xdata
cmp al 0x65
je r-xdata
pop eax
jmp r-xdata
pop ebx
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax ebx
ja r-xdata
mov ecx esi
dec ebx
call sub_4a283e
mov cl al
mov [ ebp - 0x7 ] cl
cmp cl 0x30
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ebx
push 0x2
cmp [ edi - 0x1 ] 0x0
jne r-xdata
mov ecx esi
call sub_4a283e
mov cl al
mov [ ebp - 0x7 ] cl
cmp cl 0x2d
jne r-xdata
test cl cl
je r-xdata
cmp al 0x70
jne r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
xor ebx ebx
lea ecx [ edx + 0x308 ]
mov [ ebp - 0x2 ] 0x1
cmp edi ecx
je r-xdata
cmp edi edx
je r-xdata
dec edi
cmp edi edx
jne r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
mov [ ebp - 0x2 ] 0x1
mov [ ebp - 0x2 ] bl
cmp cl 0x30
jne r-xdata
mov ecx esi
call sub_4a283e
mov edx [ ebp + 0x10 ]
mov cl al
mov [ ebp - 0x7 ] cl
jmp r-xdata
mov [ edi ] al
inc edi
cmp ebx 0x1450
jg r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov ecx esi
call sub_4a283e
mov cl al
mov [ ebp - 0x7 ] cl
cmp cl 0x30
je r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
push 0x9
jmp r-xdata
cmp ebx 0xffffebb0
jl r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax 0xa
jae r-xdata
push 0x8
jmp r-xdata
mov cl [ ebp - 0x1 ]
xor eax eax
test cl cl
sete al
dec eax
and eax 0x3
inc eax
imul eax [ ebp - 0xc ]
add ebx eax
cmp ebx 0x1450
jle r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
imul ebx ebx 0xa
mov [ ebp - 0x2 ] 0x1
add ebx eax
cmp ebx 0x1450
jg r-xdata
cmp ebx 0xffffebb0
jge r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov ebx 0x1451
mov ecx esi
call sub_4a283e
mov cl al
mov [ ebp - 0x7 ] cl
jmp r-xdata
sub edi edx
mov [ esi ] ebx
xor eax eax
mov [ esi + 0x4 ] edi
test cl cl
setne al
jmp r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax 0xa
jae r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov ecx esi
call sub_4a283e
mov cl al
mov [ ebp - 0x7 ] cl
jmp r-xdata
mov al [ ebp - 0x2 ]
test al al
jne r-xdata
neg ebx
lea ecx [ ebp - 0x24 ]
call sub_49fe2e
test al al
je r-xdata
mov ecx esi
call sub_4a283e
mov [ ebp - 0x7 ] al
sub_49f1ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push esi
xor esi esi
mov [ ebp - 0x8 ] eax
push edi
mov edi [ ebp + 0xc ]
mov eax esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] esi
mov ecx edi
call sub_4a283e
mov cl al
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebx ] cl
mov [ ebp - 0x4 ] eax
cmp eax 0x3
jne r-xdata
cmp cl [ eax + r--data ]
jne r-xdata
mov cl [ ebx ]
cmp cl [ eax + r--data ]
je r-xdata
push ecx
mov ecx edi
call sub_4a31da
mov eax [ edi + 0x10 ]
mov ecx edi
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ ebp + 0x14 ] eax
call sub_4a283e
mov [ ebx ] al
lea ecx [ ebp - 0x10 ]
call sub_49fdda
push 0x7
jmp r-xdata
mov ecx edi
call sub_4a283e
inc esi
mov [ ebx ] al
cmp esi 0x5
jne r-xdata
cmp al [ esi + r--data ]
jne r-xdata
pop eax
mov al [ ebx ]
cmp al [ esi + r--data ]
je r-xdata
push eax
mov ecx edi
call sub_4a31da
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_49fdda
xor ecx ecx
test al al
sete cl
lea eax [ ecx * 4 + 0x3 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_49f28b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov ecx edi
call sub_4a283e
inc ebx
mov [ esi ] al
cmp ebx 0x3
jne r-xdata
cmp al [ ebx + r--data ]
jne r-xdata
mov al [ esi ]
cmp al [ ebx + r--data ]
je r-xdata
push eax
mov ecx edi
call sub_4a31da
mov eax [ edi + 0x10 ]
mov ecx edi
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ ebp + 0x14 ] eax
call sub_4a283e
mov [ esi ] al
cmp al 0x28
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_49fe04
push 0x7
jmp r-xdata
mov ecx edi
call sub_4a283e
push edi
push esi
mov [ esi ] al
call sub_49f3d7
pop ecx
pop ecx
test al al
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_49fe04
movzx eax al
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x7
jmp r-xdata
pop eax
push edi
push esi
call sub_49f39d
pop ecx
pop ecx
test al al
je r-xdata
push 0x5
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi ] 0x29
je r-xdata
push 0x6
movzx edx [ esi ]
mov ecx edi
pop ebx
push edx
call sub_4a31da
mov eax ebx
jmp r-xdata
push 0x4
mov al [ esi ]
test al al
je r-xdata
cmp [ esi ] 0x29
jne r-xdata
movsx ecx al
lea eax [ ecx - 0x30 ]
cmp eax 0x9
jbe r-xdata
mov ecx edi
call sub_4a283e
mov [ esi ] al
cmp al 0x29
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp eax 0x19
jbe r-xdata
lea eax [ ecx - 0x41 ]
cmp eax 0x19
jbe r-xdata
cmp ecx 0x5f
jne r-xdata
sub_49f39d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov esi ebx
mov ecx [ ebp + 0xc ]
call sub_4a283e
inc esi
mov [ edi ] al
cmp esi 0x4
jne r-xdata
cmp al [ esi + r--data ]
jne r-xdata
mov al [ edi ]
cmp al [ esi + r--data ]
je r-xdata
mov bl 0x1
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_49f3d7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov esi ebx
mov ecx [ ebp + 0xc ]
call sub_4a283e
inc esi
mov [ edi ] al
cmp esi 0x5
jne r-xdata
cmp al [ esi + r--data ]
jne r-xdata
mov al [ edi ]
cmp al [ esi + r--data ]
je r-xdata
mov bl 0x1
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_49f411
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x9
ja r-xdata
xor eax eax
inc eax
pop ebp
retn
jmp [ eax * 4 + jump_table_49f4f9 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_49eb80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_49ebc6
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
cmp [ eax + 0x308 ] cl
setne cl
shl ecx 0x1f
mov eax [ ebp + 0xc ]
xor ecx ecx
cmp [ eax + 0x308 ] cl
setne cl
shl ecx 0x1f
or ecx 0x7f800000
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
cmp [ eax + 0x308 ] cl
setne cl
shl ecx 0x1f
or ecx 0x7fffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
cmp [ eax + 0x308 ] cl
setne cl
shl ecx 0x1f
or ecx 0x7f800001
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0xffc00000
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
xor ecx ecx
push 0x2
cmp [ eax + 0x308 ] cl
setne cl
shl ecx 0x1f
mov eax [ ebp + 0xc ]
xor ecx ecx
push 0x3
cmp [ eax + 0x308 ] cl
setne cl
shl ecx 0x1f
or ecx 0x7f800000
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
pop eax
pop ebp
retn
sub_49f521
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x9
ja r-xdata
xor eax eax
inc eax
pop ebp
retn
jmp [ eax * 4 + jump_table_49f5fd ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_49eba3
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_49ebe9
jmp r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_49ea82
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_49e931
jmp r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_49e970
jmp r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_49e9af
jmp r-xdata
push [ ebp + 0x10 ]
call sub_49e902
jmp r-xdata
push [ ebp + 0x10 ]
push 0x0
call sub_49ea82
pop ecx
pop ecx
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_49ea82
pop ecx
pop ecx
push 0x2
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_49e931
pop ecx
pop ecx
push 0x3
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
pop ecx
pop ecx
xor eax eax
pop ebp
retn
pop eax
pop ebp
retn
sub_49f625
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
lea ecx [ ebp + 0xc ]
push esi
push edi
call sub_4a3256
test al al
je r-xdata
xor eax eax
mov edx eax
mov esi eax
jmp r-xdata
mov edi [ ebp + 0x2c ]
test edi edi
je r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
je r-xdata
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_49bede
xor eax eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov esi eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x2c ] eax
call sub_4a283e
mov bl al
lea eax [ ebp - 0x3c ]
push eax
push 0x8
movzx ecx bl
push ecx
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov eax edx
mov edx esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x1c ]
or ecx [ ebp + 0x20 ]
jne r-xdata
mov [ ebp - 0x4 ] bl
call sub_4a33cf
add esp 0xc
test eax eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
cmp edi 0x24
jle r-xdata
mov [ edi ] al
lea ecx [ ebp + 0xc ]
call sub_4a283e
mov bl al
lea eax [ ebp - 0x3c ]
push eax
push 0x8
movzx eax bl
push eax
cmp [ ebp + 0x30 ] al
setne al
mov [ ebp - 0xc ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
or ecx 0xffffffff
mov [ ebp - 0x10 ] ecx
test edi edi
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_4a283e
mov bl al
mov [ ebp - 0x4 ] bl
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp edi 0x10
jne r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
mov eax edi
cdq
push edx
push eax
push ecx
push ecx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
call sub_4ac1f0
mov [ ebp - 0x20 ] ecx
mov cl [ ebp - 0x4 ]
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx edx cl
add edx 0xffffffd0
jmp r-xdata
mov eax ecx
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_4a283e
mov [ ebp - 0x18 ] al
cmp al 0x78
je r-xdata
test edi edi
jne r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx edx cl
add edx 0xffffffa9
jmp r-xdata
mov [ ebp - 0xc ] edx
cmp edx 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop edi
jmp r-xdata
or edx 0xffffffff
movsx edx cl
add edx 0xffffffc9
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
call sub_4a31da
test bl 0x8
jne r-xdata
cmp edx edi
jae r-xdata
lea ecx [ ebp + 0xc ]
call sub_4a283e
mov [ ebp - 0x4 ] al
push 0x10
pop edi
test edi edi
jne r-xdata
mov edi [ ebp - 0x8 ]
push esi
push edi
push ebx
call sub_49ec0c
add esp 0xc
test al al
je r-xdata
push [ ebp - 0x2c ]
lea ecx [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_4a2c1a
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ebx 0x8
cmp esi [ ebp - 0x18 ]
jb r-xdata
push [ ebp - 0x18 ]
lea ecx [ ebp + 0xc ]
call sub_4a31da
jmp r-xdata
push 0x8
pop edi
test bl 0x2
je r-xdata
call sub_4aaf64
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
jmp r-xdata
push esi
push ecx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_4ac3f0
add eax [ ebp - 0xc ]
mov esi edx
mov [ ebp - 0x8 ] eax
adc esi 0x0
mov eax [ ebp - 0x14 ]
ja r-xdata
or ecx 0xffffffff
mov edx edi
neg edi
adc esi 0x0
neg esi
test bl 0x2
je r-xdata
or eax 0xffffffff
mov edi eax
mov esi eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
pop ebx
je r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp ecx eax
jne r-xdata
cmp ecx eax
jb r-xdata
xor eax eax
mov eax [ ebp - 0x40 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi 0x7fffffff
and [ ebp - 0x10 ] 0x0
mov esi 0x80000000
jmp r-xdata
or ebx 0x4
jmp r-xdata
cmp esi [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_4a283e
mov cl al
mov [ ebp - 0x4 ] cl
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x1c ]
jb r-xdata
ja r-xdata
cmp edx [ ebp - 0x20 ]
jbe r-xdata
sub_49f8d6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fldz
lea eax [ ebp - 0x8 ]
push esi
push eax
sub esp 0x20
mov [ ebp - 0x1 ] 0x0
mov esi ecx
lea eax [ ebp - 0x1 ]
mov ecx esp
fstp [ ebp - 0x8 ]
push eax
push [ esi + 0x34 ]
lea eax [ esi + 0x8 ]
push [ esi + 0x30 ]
push eax
push ecx
call sub_49ec4f
add esp 0x14
push [ esi + 0x68 ]
call sub_49ec6d
add esp 0x28
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor al al
cmp eax 0x1
je r-xdata
cmp [ esi + 0x2e ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_49fca3
jmp r-xdata
mov al 0x1
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_49f93e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fldz
lea eax [ ebp - 0x10 ]
push esi
push eax
sub esp 0x20
mov [ ebp - 0x1 ] 0x0
mov esi ecx
lea eax [ ebp - 0x1 ]
mov ecx esp
fstp [ ebp - 0x10 ]
push eax
push [ esi + 0x34 ]
lea eax [ esi + 0x8 ]
push [ esi + 0x30 ]
push eax
push ecx
call sub_49ec4f
add esp 0x14
push [ esi + 0x68 ]
call sub_49ece8
add esp 0x28
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor al al
cmp eax 0x1
je r-xdata
cmp [ esi + 0x2e ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_49fcda
jmp r-xdata
mov al 0x1
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_49f9a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x2e ] bl
jne r-xdata
or edi 0xffffffff
add [ esi + 0x6c ] 0x4
mov ecx [ esi + 0x6c ]
mov ebx [ ecx - 0x4 ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov eax [ esi + 0x30 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x34 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] edi
je r-xdata
mov eax [ esi ]
and eax 0x4
or eax edi
je r-xdata
mov eax [ esi ]
and eax 0x1
or eax 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor edx edx
xor ecx ecx
cmp edi 0xffffffff
je r-xdata
call sub_4aaf64
mov [ eax ] 0xc
jmp r-xdata
lea ecx [ esi + 0x8 ]
call sub_4a2878
lea eax [ ecx + 0x4 ]
mov [ esi + 0x6c ] eax
mov edi [ eax - 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x8 ]
call sub_4a2878
push eax
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x1c ] eax
call sub_4a28ac
test al al
je r-xdata
cmp edx [ ebp - 0x10 ]
jne r-xdata
lea eax [ edi - 0x1 ]
mov [ ebp - 0x4 ] eax
xor al al
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp - 0x1c ]
lea ecx [ esi + 0x8 ]
push edx
call sub_4a321b
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
cmp [ esi + 0x2e ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x14 ]
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add edx 0x1
adc ecx 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax edx
or eax ecx
je r-xdata
cmp [ esi + 0x2e ] 0x0
jne r-xdata
cmp edx [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
or eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov [ ecx ] dl
inc ecx
dec eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
and eax 0x4
or eax 0x0
je r-xdata
cmp ecx [ ebp - 0x14 ]
je r-xdata
jmp r-xdata
inc [ esi + 0x70 ]
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
sub_49fb08
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x2e ] bl
jne r-xdata
or edi 0xffffffff
add [ esi + 0x6c ] 0x4
mov ecx [ esi + 0x6c ]
mov ebx [ ecx - 0x4 ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov eax [ esi + 0x30 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x34 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] edi
je r-xdata
mov eax [ esi ]
and eax 0x4
or eax edi
je r-xdata
mov eax [ esi ]
and eax 0x1
or eax 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor edx edx
xor ecx ecx
cmp edi 0xffffffff
je r-xdata
call sub_4aaf64
mov [ eax ] 0xc
jmp r-xdata
lea ecx [ esi + 0x8 ]
call sub_4a2878
lea eax [ ecx + 0x4 ]
mov [ esi + 0x6c ] eax
mov edi [ eax - 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x8 ]
call sub_4a2878
push eax
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x18 ] eax
call sub_4a28ac
test al al
je r-xdata
cmp edx [ ebp - 0x10 ]
jne r-xdata
lea eax [ edi - 0x1 ]
mov [ ebp - 0xc ] eax
xor al al
jmp r-xdata
test edi edi
jne r-xdata
push [ ebp - 0x18 ]
lea ecx [ esi + 0x8 ]
call sub_4a321b
cmp [ esi + 0x2e ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x14 ]
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add edx 0x1
adc ecx 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edx
or eax ecx
je r-xdata
cmp [ esi + 0x2e ] 0x0
jne r-xdata
cmp edx [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
or eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
je r-xdata
cmp edi 0xffffffff
je r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
mov ecx esi
push eax
lea eax [ ebp - 0x1c ]
push eax
push edi
push ebx
call sub_4a3299
test al al
je r-xdata
mov al 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
and eax 0x4
or eax 0x0
je r-xdata
cmp ecx [ ebp - 0x14 ]
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
inc [ esi + 0x70 ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov [ eax ] cx
xor eax eax
mov [ ebx ] ax
sub_49fc74
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
push [ ebp + 0xc ]
movzx ecx bl
push 0x8
push ecx
call sub_4a33cf
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4a2878
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_49fca3
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x6c ] 0x4
mov eax [ ecx + 0x6c ]
mov edx [ eax - 0x4 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
inc [ ecx + 0x70 ]
mov eax [ eax ]
mov [ edx ] eax
mov al 0x1
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
jmp r-xdata
pop ebp
retn 0x4
sub_49fcda
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x6c ] 0x4
mov eax [ ecx + 0x6c ]
mov edx [ eax - 0x4 ]
test edx edx
jne r-xdata
inc [ ecx + 0x70 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
mov al 0x1
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
jmp r-xdata
pop ebp
retn 0x4
sub_49fd17
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx ecx
push ebx
xor ebx ebx
push edi
mov [ edx ] eax
lea edi [ edx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
push 0x8
mov [ edx + 0x8 ] eax
xor eax eax
pop ecx
mov [ edx + 0xc ] ebx
[ edi ]
pop edi
mov [ edx + 0x10 ] ebx
mov eax edx
mov [ edx + 0x14 ] bx
mov [ edx + 0x16 ] bl
mov [ edx + 0x18 ] ebx
mov [ edx + 0x1c ] ebx
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] bl
mov [ edx + 0x28 ] ebx
pop ebx
pop ebp
retn 0xc
sub_49fd61
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and [ ecx + 0x10 ] 0x0
and [ ecx + 0x14 ] 0x0
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x18 ] eax
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x10
mov [ eax ] 0x1
sub_49fd92
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
push [ ebp + 0x14 ]
mov [ ebx ] edx
lea edi [ ebx + 0x8 ]
mov [ ebx + 0x4 ] eax
lea ecx [ ebx + 0x18 ]
movsd [ edi ] [ esi ]
push eax
push edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_49fd17
mov eax [ ebp + 0x18 ]
and [ ebx + 0x70 ] 0x0
and [ ebx + 0x74 ] 0x0
mov [ ebx + 0x68 ] eax
mov eax [ ebp + 0x1c ]
pop edi
mov [ ebx + 0x6c ] eax
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x18
sub_49fdda
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
movzx eax [ eax ]
push eax
call sub_4a31da
mov eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
push [ eax + 0x4 ]
push [ eax ]
call sub_4a2c1a
pop esi
retn
sub_49fe04
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
movzx eax [ eax ]
push eax
call sub_4a31da
mov eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
push [ eax + 0x4 ]
push [ eax ]
call sub_4a2c1a
pop esi
retn
sub_49fe2e
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
movzx eax [ eax ]
push eax
call sub_4a31da
mov eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
push [ eax + 0x4 ]
push [ eax ]
call sub_4a2c1a
pop esi
retn
sub_49fe58
mov edi edi
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0xc ] ebx
je r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] bx
mov [ esi + 0x16 ] bl
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] bl
mov [ esi + 0x28 ] ebx
cmp [ eax ] bl
jne r-xdata
xor al al
jmp r-xdata
movzx eax [ eax ]
push eax
call sub_4a7635
pop ecx
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x1
jmp r-xdata
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
cmp [ ecx ] 0x25
jne r-xdata
mov [ esi + 0x10 ] 0x2
jmp r-xdata
mov [ esi + 0x10 ] 0x3
mov al [ ecx ]
mov [ esi + 0x14 ] al
xor eax eax
cmp [ ecx ] 0x25
push ebx
sete al
inc ecx
add eax ecx
mov ecx esi
mov [ esi + 0x8 ] eax
call sub_4a2f69
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x25
je r-xdata
mov eax [ esi + 0x8 ]
movzx eax [ eax ]
push eax
call sub_4a7635
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x10 ] 0x4
mov [ esi + 0x8 ] eax
cmp [ eax ] 0x2a
jne r-xdata
inc [ esi + 0x8 ]
mov al 0x1
jmp r-xdata
mov ecx esi
call sub_4a2daa
test al al
je r-xdata
inc eax
mov [ esi + 0x16 ] 0x1
mov [ esi + 0x8 ] eax
mov ecx esi
call sub_4a2e49
mov ecx esi
call sub_4a2fbe
mov ecx esi
call sub_4a2c3f
test al al
je r-xdata
imul ecx [ esi + 0x28 ] 0xc
mov eax [ esi + 0x20 ]
cmp [ ecx + eax + r--data ] bl
jne r-xdata
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] bx
mov [ esi + 0x16 ] bl
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] bl
mov [ esi + 0x28 ] ebx
mov [ esi + 0xc ] 0x16
jmp r-xdata
sub_49ffc2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
call sub_49ff9d
xor ecx ecx
cmp [ ebp + 0x8 ] cl
setne cl
shl ecx 0x1f
or ecx 0x7f800000
mov [ eax ] ecx
pop ebp
retn
call sub_49ff78
push eax
push [ ebp + 0x8 ]
call sub_49e931
pop ecx
pop ecx
pop ebp
retn
sub_49fffc
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
cmp esi ebx
ja r-xdata
bsr eax esi
mov [ ebp - 0x24 ] ebx
lea ecx [ eax + 0x1 ]
jne r-xdata
cmp edi 0xffffffff
ja r-xdata
add ecx 0x20
mov ecx ebx
bsr eax edi
mov [ ebp - 0x24 ] ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1 ] al
sete al
dec eax
and eax 0xfffffc80
add eax 0xffffff82
cmp ecx eax
jge r-xdata
push [ ebp + 0x1c ]
mov ecx ebx
jmp r-xdata
lea ecx [ eax + 0x1 ]
jmp r-xdata
test edx edx
jns r-xdata
mov eax [ ebp - 0x10 ]
dec eax
add eax ecx
mov ecx [ ebp - 0x10 ]
add eax edx
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] ecx
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x1c ]
xor edx edx
mov al [ eax + 0x4 ]
test al al
mov [ ebp - 0x1 ] al
sete dl
xor eax eax
dec edx
and edx 0x1d
add edx 0x18
sub edx ecx
mov ecx [ ebp + 0x10 ]
sub ecx edx
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] ecx
sete al
dec eax
and eax 0x380
add eax 0x7f
mov [ ebp - 0x10 ] eax
cmp ecx eax
jle r-xdata
jle r-xdata
neg edx
mov [ ebp - 0xc ] edx
cmp edx 0x40
jb r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
neg eax
mov [ ebp - 0x10 ] eax
cmp eax 0x40
jae r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor eax eax
lea ecx [ edx - 0x1 ]
inc eax
xor edx edx
call sub_4ac430
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
add eax 0xffffffff
mov [ ebp - 0x1c ] eax
mov eax edx
adc eax 0xffffffff
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
xor edx edx
xor eax eax
inc eax
call sub_4ac430
and eax edi
mov [ ebp - 0x1 ] 0x1
and edx esi
or eax edx
jne r-xdata
mov edi ebx
mov esi ebx
jmp r-xdata
mov edx esi
mov eax edi
call sub_4ac430
mov esi edx
mov edi eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
call sub_4a04d6
pop ecx
pop ecx
push 0x2
jmp r-xdata
lea ecx [ eax - 0x1 ]
xor edx edx
xor eax eax
inc eax
call sub_4ac430
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
add eax 0xffffffff
mov [ ebp - 0x20 ] eax
mov eax edx
adc eax 0xffffffff
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x24 ] eax
xor edx edx
xor eax eax
inc eax
call sub_4ac430
and eax edi
mov [ ebp - 0x3 ] 0x1
and edx esi
or eax edx
jne r-xdata
call sub_49ff9d
push eax
push esi
push edi
push ebx
push [ ebp + 0x14 ]
call sub_49e9f3
call sub_49ff78
push eax
push esi
push edi
push ebx
push [ ebp + 0x14 ]
call sub_49ea23
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
and eax edi
and ecx esi
or eax ecx
mov cl 0x1
jne r-xdata
mov [ ebp - 0x1 ] bl
mov ecx [ ebp + 0x1c ]
call sub_4a2933
cmp esi edx
jb r-xdata
pop eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
and eax edi
and ecx esi
or eax ecx
mov cl 0x1
jne r-xdata
mov [ ebp - 0x3 ] bl
add esp 0x14
mov [ ebp - 0x3 ] cl
cmp [ ebp + 0x18 ] bl
je r-xdata
mov cl bl
ja r-xdata
mov [ ebp - 0x1 ] cl
cmp [ ebp + 0x18 ] bl
je r-xdata
mov cl bl
mov al 0x1
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
and eax edi
and edx esi
or eax edx
mov al bl
je r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
mov ebx [ ebp - 0x8 ]
shrd edi esi 0x1
shr esi 0x1
inc ebx
cmp [ ecx + 0x4 ] al
sete al
dec eax
and eax 0x380
add eax 0x7f
cmp ebx eax
jle r-xdata
cmp edi eax
jbe r-xdata
mov al 0x1
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x24 ]
and eax edi
and edx esi
or eax edx
mov al bl
je r-xdata
call sub_4ac3dc
test eax eax
je r-xdata
test al al
je r-xdata
mov [ ebp - 0x2 ] al
test cl cl
jne r-xdata
mov ecx [ ebp + 0x1c ]
call sub_4a2379
and edi eax
and esi edx
mov eax [ ebp + 0x1c ]
mov ecx eax
cmp [ eax + 0x4 ] 0x0
je r-xdata
push ecx
jmp r-xdata
call sub_4ac3dc
test eax eax
je r-xdata
test al al
je r-xdata
mov [ ebp - 0x2 ] al
test cl cl
jne r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
cmp eax 0x100
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
mov edx esi
call sub_4ac450
mov edi eax
mov esi edx
movzx eax bl
cdq
add edi eax
adc esi edx
push [ ebp + 0x14 ]
call sub_49ffc2
pop ecx
pop ecx
push 0x3
cmp [ ebp - 0x1 ] bl
je r-xdata
cmp eax 0x100
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax edi
mov edx esi
call sub_4ac450
mov edi eax
mov esi edx
movzx eax bl
cdq
add edi eax
mov eax edi
adc esi edx
or eax esi
je r-xdata
cmp [ ebp - 0x2 ] bl
jne r-xdata
cmp [ ebp + 0x14 ] bl
sete bl
jmp r-xdata
cmp eax 0x200
jne r-xdata
cmp [ ebp - 0x2 ] bl
jne r-xdata
cmp [ ebp + 0x14 ] bl
sete bl
jmp r-xdata
cmp eax 0x200
jne r-xdata
mov ecx [ ebp + 0x1c ]
call sub_4a2379
cmp esi edx
jb r-xdata
mov bl 0x1
cmp [ ebp - 0x1 ] bl
je r-xdata
mov bl [ ebp + 0x14 ]
jmp r-xdata
mov bl 0x1
cmp [ ebp - 0x3 ] bl
je r-xdata
mov bl [ ebp + 0x14 ]
jmp r-xdata
ja r-xdata
mov ebx [ ebp + 0x10 ]
sub ebx [ ebp - 0x14 ]
sub ebx [ ebp - 0xc ]
dec ebx
jmp r-xdata
cmp edi eax
jbe r-xdata
sub_4a0348
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
xor edx edx
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov edi [ ebp + 0xc ]
cmp [ ebx + 0x4 ] dl
sete dl
dec edx
and edx 0x1d
add edx 0x17
cmp edi 0x40
ja r-xdata
mov eax edi
shr edi 0x5
and eax 0x1f
mov [ ebp - 0x1c ] eax
lea esi [ edi - 0x2 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jbe r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] esi
shl [ ebp - 0x4 ] 0x5
mov ecx eax
add [ ebp - 0x4 ] eax
inc ebx
add [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ebx
shl [ ebp - 0x8 ] cl
dec [ ebp - 0x8 ]
push 0x40
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] ecx
add ecx 0xffffffe0
mov edx [ eax + esi * 4 + 0x4 ]
mov eax [ eax + edi * 4 ]
mov [ ebp - 0x14 ] edx
xor edx edx
call sub_4ac430
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] edx
xor edx edx
mov eax [ eax + edi * 4 + 0x4 ]
mov edi [ ebp - 0x8 ]
and eax edi
call sub_4ac430
add [ ebp - 0xc ] eax
mov eax edi
mov ecx [ ebp - 0x1c ]
not eax
adc [ ebp - 0x10 ] edx
xor edx edx
and eax [ ebp - 0x14 ]
call sub_4ac450
mov ecx [ ebp - 0xc ]
add ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
adc eax edx
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx esi
shl ecx 0x5
add ecx edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + edi * 4 ]
mov edi [ ebp + 0x8 ]
add eax [ edi + esi * 4 + 0x4 ]
mov [ ebp - 0x14 ] eax
adc edx 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0xc ] edx
sete dl
mov [ ebp - 0x10 ] dl
test esi esi
je r-xdata
xor esi esi
mov esi [ ecx + 0x4 ]
jmp r-xdata
xor bl bl
test [ ebp - 0x14 ] edi
je r-xdata
push ebx
push [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push ecx
push [ ebp - 0xc ]
jmp r-xdata
add edi 0x4
xor ecx ecx
mov ecx [ ecx + 0x8 ]
jmp r-xdata
cmp [ ecx ] 0x1
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp - 0x8 ] bl
test esi esi
je r-xdata
push eax
jmp r-xdata
cmp [ edi ] 0x0
lea edi [ edi + 0x4 ]
sete al
and dl al
sub esi 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] dl
call sub_49fffc
add esp 0x18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
push ebx
sete al
movzx eax al
push eax
push [ ebp + 0x10 ]
xor eax eax
add eax esi
push edx
adc ecx 0x0
push ecx
cmp [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
sete al
and bl al
mov [ ebp - 0x8 ] bl
sub esi 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
sub_4a04d6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
call sub_49ff9d
xor ecx ecx
cmp [ ebp + 0x8 ] cl
setne cl
shl ecx 0x1f
mov [ eax ] ecx
pop ebp
retn
call sub_49ff78
push eax
push [ ebp + 0x8 ]
call sub_49ea82
pop ecx
pop ecx
pop ebp
retn
sub_4a050a
mov edi edi
push ebp
mov ebp esp
sub esp 0xb2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
xor eax eax
push ebx
push esi
push edi
cmp [ ecx + 0x4 ] al
mov edi [ ebp + 0x8 ]
sete al
mov [ ebp - 0x950 ] edi
dec eax
mov [ ebp - 0x958 ] ecx
and eax 0x1d
mov ebx [ edi ]
add eax 0x19
mov [ ebp - 0x954 ] eax
test ebx ebx
jns r-xdata
mov eax [ edi + 0x4 ]
mov ecx ebx
cmp ebx eax
jb r-xdata
xor ebx ebx
add eax 0x8
lea edx [ edi + 0x8 ]
add eax edi
add edx ecx
mov [ ebp - 0x93c ] eax
sub ebx ecx
sub eax edx
mov [ ebp - 0x934 ] ebx
add edi 0x8
mov [ ebp - 0x920 ] eax
xor eax eax
mov [ ebp - 0x92c ] edx
xor esi esi
mov [ ebp - 0x918 ] eax
xor ecx ecx
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x91c ] esi
mov [ ebp - 0x924 ] edi
cmp edi edx
jne r-xdata
mov ecx eax
cmp ecx 0x9
jne r-xdata
mov ebx eax
jmp r-xdata
mov ebx [ ebp - 0x918 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x934 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x918 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebp - 0x918 ]
xor ecx ecx
xor esi esi
mov edi 0x3b9aca00
test ebx ebx
jne r-xdata
push 0xa
xor edx edx
pop ecx
div ecx
mov [ ebp - 0x928 ] eax
mov ecx edx
mov [ ebp - 0x948 ] ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x918 ]
mov eax ecx
xor edx edx
push 0xa
pop ecx
div ecx
mov [ ebp - 0x938 ] eax
mov ecx edx
mov [ ebp - 0x948 ] ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x918 ]
xor edx edx
test eax eax
je r-xdata
mov eax [ ebp + esi * 4 - 0x1d0 ]
mul edi
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
mov edi [ ebp - 0x924 ]
mov eax [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x934 ] 0x0
bsr eax eax
je r-xdata
xor ecx ecx
jmp r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
movzx eax [ edi ]
imul esi esi 0xa
add esi eax
inc ecx
inc edi
mov [ ebp - 0x91c ] esi
mov [ ebp - 0x924 ] edi
cmp edi edx
jne r-xdata
test esi esi
je r-xdata
xor eax eax
add [ ebp + edx * 4 - 0x1d0 ] esi
adc eax eax
inc edx
mov esi eax
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x918 ] eax
cmp edx eax
jne r-xdata
mov esi [ ebp - 0x91c ]
mov [ ebp - 0x918 ] eax
cmp eax 0x73
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x920 ]
mov [ ebp - 0x944 ] ecx
cmp ecx [ ebp - 0x954 ]
jae r-xdata
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x944 ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x744 ] eax
lea eax [ ebp - 0x740 ]
push 0x0
push eax
call sub_49acf0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x944 ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x740 ]
add eax edi
push eax
call sub_49a1f0
mov eax [ ebp - 0x744 ]
xor ecx ecx
inc ecx
add esp 0x18
cmp eax ecx
ja r-xdata
push 0x26
pop eax
mov eax [ ebp - 0x918 ]
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x930 ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x744 ] eax
lea eax [ ebp - 0x740 ]
push 0x0
push eax
call sub_49acf0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x930 ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x740 ]
add eax edi
push eax
call sub_49a1f0
mov eax [ ebp - 0x744 ]
xor ecx ecx
inc ecx
add esp 0x18
cmp eax ecx
ja r-xdata
push 0x26
pop eax
cmp eax 0x73
jae r-xdata
and [ ebp - 0x744 ] 0x0
lea eax [ ebp - 0x740 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
mov eax [ ebp - 0x1d4 ]
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] ecx
mov eax [ ebp - 0x1d4 ]
inc eax
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
push [ ebp - 0x958 ]
test eax eax
setne al
movzx eax al
push eax
mov eax [ ebp - 0x950 ]
movzx eax [ eax + 0x308 ]
push eax
push ecx
test eax eax
je r-xdata
lea ecx [ ebx - 0x1 ]
shl ecx 0x5
add ecx eax
cmp edi 0x1
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
cmp ebx ecx
ja r-xdata
mov edi [ ebp - 0x740 ]
test edi edi
jne r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x918 ]
cmp edi 0x1
je r-xdata
and [ ebp - 0x744 ] 0x0
lea eax [ ebp - 0x740 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
mov eax [ ebp - 0x1d4 ]
add esp 0x10
cmp ebx ecx
ja r-xdata
mov esi [ ebp - 0x740 ]
test esi esi
jne r-xdata
and [ ebp - 0x744 ] 0x0
lea eax [ ebp - 0x740 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
mov ebx [ ebp - 0x1d4 ]
add esp 0x10
mov [ ebp - 0x918 ] ebx
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] esi
mov ebx [ ebp - 0x1d4 ]
inc ebx
mov [ ebp - 0x918 ] ebx
mov [ ebp - 0x1d4 ] ebx
jmp r-xdata
mov edi [ ebp - 0x92c ]
xor ebx ebx
xor esi esi
mov [ ebp - 0x91c ] ebx
xor ecx ecx
mov [ ebp - 0x574 ] ebx
mov [ ebp - 0x924 ] esi
cmp edi [ ebp - 0x93c ]
je r-xdata
test ebx ebx
je r-xdata
cmp eax ebx
lea edx [ ebp - 0x740 ]
setb cl
test cl cl
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov ebx 0x1cc
mov [ ebp - 0x1d4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4a3402
add esp 0x10
xor eax eax
test edi edi
jne r-xdata
cmp edi ecx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x914 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x910 ]
push eax
push 0x1cc
test edx edx
je r-xdata
mov eax edx
xor edx edx
add [ ebp + ecx * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x1d4 ]
adc edx edx
mov [ ebp - 0x918 ] eax
inc ecx
cmp ecx eax
jne r-xdata
mov edx [ ebp - 0x91c ]
test edx edx
je r-xdata
test eax eax
je r-xdata
cmp eax ebx
lea esi [ ebp - 0x740 ]
setb cl
test cl cl
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov ebx 0x1cc
mov [ ebp - 0x1d4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4a3402
add esp 0x10
xor eax eax
test edi edi
jne r-xdata
cmp esi ecx
jne r-xdata
xor eax eax
mov [ ebp - 0x914 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x910 ]
jmp r-xdata
mov edx [ ebp - 0x92c ]
xor esi esi
xor ecx ecx
jmp r-xdata
mov ecx [ ebp - 0x950 ]
cmp [ ecx ] 0x0
jge r-xdata
cmp ecx 0x9
jne r-xdata
xor ecx ecx
xor esi esi
mov [ ebp - 0x91c ] edx
lea edx [ ebp - 0x1d0 ]
test cl cl
jne r-xdata
lea edx [ ebp - 0x1d0 ]
mov ebx [ ebp - 0x1d4 ]
inc eax
mov [ ebp - 0x918 ] ebx
cmp edi eax
je r-xdata
push eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x740 ]
push eax
push ebx
jmp r-xdata
test ebx ebx
je r-xdata
mov al cl
jmp r-xdata
test al al
je r-xdata
cmp eax 0x73
jae r-xdata
xor ecx ecx
mov ebx eax
xor esi esi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea esi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x740 ]
mov ebx [ ebp - 0x1d4 ]
inc eax
mov [ ebp - 0x918 ] ebx
cmp edi eax
je r-xdata
push eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x740 ]
push eax
push ebx
jmp r-xdata
test ebx ebx
je r-xdata
mov al cl
jmp r-xdata
push eax
push 0x1cc
push 0xa
xor edx edx
and [ ebp - 0x39c ] 0x0
pop esi
div esi
xor ecx ecx
inc ecx
mov [ ebp - 0x94c ] edx
mov [ ebp - 0x3a0 ] ecx
mov [ ebp - 0x920 ] ecx
mov [ ebp - 0x3a4 ] ecx
mov [ ebp - 0x938 ] eax
test eax eax
je r-xdata
sub eax [ ecx ]
movzx eax [ edi ]
imul esi esi 0xa
add esi eax
inc ecx
inc edi
mov [ ebp - 0x924 ] esi
mov [ ebp - 0x92c ] edi
cmp edi [ ebp - 0x93c ]
jne r-xdata
test ebx ebx
je r-xdata
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x938 ] edx
test cl cl
je r-xdata
lea edx [ ebp - 0x740 ]
mov ebx [ ebp - 0x918 ]
jmp r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
call sub_4a3402
add esp 0x10
xor ecx ecx
xor esi esi
and [ ebp - 0x744 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x928 ]
sub eax [ ebp - 0x944 ]
mov [ ebp - 0x928 ] eax
jne r-xdata
and [ ebp - 0x744 ] 0x0
lea eax [ ebp - 0x740 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
mov ebx [ ebp - 0x1d4 ]
add esp 0x10
mov [ ebp - 0x918 ] ebx
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] edx
mov ebx [ ebp - 0x1d4 ]
inc ebx
mov [ ebp - 0x918 ] ebx
mov [ ebp - 0x1d4 ] ebx
jmp r-xdata
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x924 ] edx
test cl cl
je r-xdata
mov edx ebx
mov [ ebp - 0x918 ] ebx
mov edx eax
mov [ ebp - 0x918 ] edx
jmp r-xdata
test al al
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
call sub_4a3402
mov al 0x1
xor ecx ecx
xor edi edi
mov eax [ ebp - 0x938 ]
sub eax [ ebp - 0x930 ]
mov [ ebp - 0x938 ] eax
jne r-xdata
test edx edx
je r-xdata
cmp eax 0x26
jbe r-xdata
mov [ ebp - 0x91c ] ebx
test ecx ecx
je r-xdata
test esi esi
je r-xdata
xor ecx ecx
mov esi 0x3b9aca00
xor edi edi
mov ebx [ ebp - 0x1d4 ]
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi ebx
mov [ ebp - 0x924 ] ebx
mov edi eax
mov [ ebp - 0x924 ] edi
jmp r-xdata
xor ecx ecx
xor esi esi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
mov eax [ ebp - 0x950 ]
add esp 0x10
push [ ebp - 0x958 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_49ffc2
pop ecx
pop ecx
push 0x3
mov ecx [ ebp - 0x948 ]
mov [ ebp - 0x918 ] eax
jmp r-xdata
cmp eax 0x73
jae r-xdata
xor ecx ecx
xor edi edi
mov [ ebp - 0x3a4 ] ecx
test edx edx
je r-xdata
mov ebx eax
test cl cl
jne r-xdata
xor ecx ecx
xor esi esi
mov eax esi
mul [ ebp + edi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov ecx edx
cmp edi ebx
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x948 ]
mov ecx [ ebp - 0x920 ]
mov eax [ edx * 4 + r--data ]
mov [ ebp - 0x934 ] eax
test eax eax
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x930 ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x744 ] eax
lea eax [ ebp - 0x740 ]
push 0x0
push eax
call sub_49acf0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x930 ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x740 ]
add eax edi
push eax
call sub_49a1f0
mov eax [ ebp - 0x744 ]
xor edx edx
inc edx
add esp 0x18
cmp eax edx
ja r-xdata
push 0x26
pop eax
mov eax [ ebp - 0x920 ]
mov eax ecx
xor edx edx
push 0xa
pop ecx
div ecx
mov [ ebp - 0x938 ] eax
mov ecx edx
mov [ ebp - 0x94c ] ecx
test eax eax
je r-xdata
xor esi esi
xor ecx ecx
xor ecx ecx
test ebx ebx
je r-xdata
mov eax [ ebp + edi * 4 - 0x570 ]
mul esi
add eax ecx
mov [ ebp + edi * 4 - 0x570 ] eax
adc edx 0x0
inc edi
mov ecx edx
cmp edi ebx
jne r-xdata
mov esi [ ebp - 0x924 ]
test ecx ecx
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
mov [ ebp + eax * 4 - 0x1d0 ] ecx
mov ebx [ ebp - 0x1d4 ]
inc ebx
mov [ ebp - 0x1d4 ] ebx
jmp r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x3a4 ] edx
test edi edi
je r-xdata
mov ebx eax
test cl cl
jne r-xdata
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov [ ebp + eax * 4 - 0x1d0 ] ecx
mov eax [ ebp - 0x1d4 ]
inc eax
mov [ ebp - 0x918 ] eax
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
mov eax ecx
mov [ ebp - 0x1d4 ] ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x3a0 ]
lea eax [ ebp - 0x3a0 ]
sub esi eax
mov [ ebp - 0x94c ] esi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp + ebx * 4 - 0x574 ]
and [ ebp - 0x934 ] 0x0
bsr eax eax
je r-xdata
xor esi esi
jmp r-xdata
cmp eax 0x1
je r-xdata
push eax
mov [ ebp - 0xb2c ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0xb28 ]
push eax
lea eax [ ebp - 0x3a0 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
mov ecx [ ebp - 0x920 ]
cmp ecx edx
ja r-xdata
cmp [ ebp - 0x740 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test esi esi
je r-xdata
mov eax esi
xor esi esi
add [ ebp + ecx * 4 - 0x570 ] eax
mov ebx [ ebp - 0x574 ]
adc esi esi
inc ecx
cmp ecx ebx
jne r-xdata
mov ebx [ ebp - 0x574 ]
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
mov [ ebp - 0x918 ] ebx
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x3a0 ]
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
mov al 0x1
mov eax [ ebp - 0x91c ]
lea ecx [ ebp - 0x3a0 ]
sub eax ecx
mov [ ebp - 0x91c ] eax
mov ebx [ ebp - 0x1d4 ]
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jb r-xdata
xor edx edx
xor eax eax
mov [ ebp - 0x928 ] edx
mov esi edi
mov [ ebp - 0x944 ] eax
test ebx ebx
je r-xdata
cmp edi ecx
jne r-xdata
mov [ ebp - 0x918 ] ebx
xor ebx ebx
lea eax [ ebp - 0x740 ]
mov [ ebp - 0x744 ] ebx
mov [ ebp + eax * 4 - 0x1d0 ] ecx
mov ebx [ ebp - 0x1d4 ]
inc ebx
mov [ ebp - 0x1d4 ] ebx
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
test ebx ebx
jne r-xdata
cmp eax ecx
lea esi [ ebp - 0x740 ]
setb dl
test dl dl
jne r-xdata
mov esi [ ebp - 0x3a0 ]
mov edi 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
mov [ ebp - 0x934 ] esi
push eax
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call sub_4a3402
add esp 0x10
xor eax eax
test esi esi
jne r-xdata
cmp [ ebp - 0x740 ] edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x914 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x910 ]
push eax
push 0x1cc
mov edx [ ebp - 0x924 ]
test edx edx
je r-xdata
mov edi [ ecx * 4 + r--data ]
test edi edi
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x928 ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x744 ] eax
lea eax [ ebp - 0x740 ]
push 0x0
push eax
call sub_49acf0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x928 ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x740 ]
add eax edi
push eax
call sub_49a1f0
mov eax [ ebp - 0x744 ]
xor ecx ecx
inc ecx
add esp 0x18
cmp eax ecx
ja r-xdata
push 0x26
pop eax
cmp ebx 0x73
jae r-xdata
xor eax eax
push eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
mov [ ebp + eax * 4 - 0x570 ] ecx
mov ebx [ ebp - 0x574 ]
inc ebx
mov [ ebp - 0x574 ] ebx
jmp r-xdata
xor eax eax
xor edi edi
mov [ ebp - 0x930 ] eax
mov ecx esi
test ebx ebx
je r-xdata
cmp esi edx
jne r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
mov ebx [ ebp - 0x1d4 ]
inc ebx
mov [ ebp - 0x1d4 ] ebx
jmp r-xdata
xor ebx ebx
lea eax [ ebp - 0x740 ]
push ebx
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x744 ] ebx
push 0x1cc
push eax
mov [ ebp - 0x1d4 ] ebx
call sub_4a3402
mov al bl
add esp 0x10
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
cmp esi 0x73
je r-xdata
cmp esi 0x73
je r-xdata
inc edi
cmp edi edx
jne r-xdata
and [ ebp + edi * 4 - 0x3a0 ] eax
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x3a4 ] ecx
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
add esp 0x10
mov al 0x1
jmp r-xdata
mov eax [ ebp + ecx * 4 - 0x3a4 ]
and [ ebp - 0x934 ] 0x0
bsr eax eax
je r-xdata
xor edx edx
jmp r-xdata
lea esi [ ebx - 0x1 ]
shl esi 0x5
add esi eax
xor edi edi
xor esi esi
lea edi [ ebp - 0x3a0 ]
jmp r-xdata
lea esi [ ebp - 0x3a0 ]
lea edi [ ebp - 0x740 ]
mov ecx [ ebp - 0x3a4 ]
inc eax
mov [ ebp - 0x920 ] ecx
cmp esi eax
je r-xdata
push eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x740 ]
push eax
push edi
jmp r-xdata
mov ecx [ ebp - 0x920 ]
test ecx ecx
je r-xdata
mov al dl
jmp r-xdata
test al al
je r-xdata
xor ecx ecx
test ebx ebx
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x744 ] eax
cmp edi 0x1
je r-xdata
cmp ebx ecx
ja r-xdata
mov edi [ ebp - 0x740 ]
test edi edi
jne r-xdata
and [ ebp - 0x744 ] 0x0
lea eax [ ebp - 0x740 ]
and [ ebp - 0x574 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_4a3402
mov ebx [ ebp - 0x574 ]
add esp 0x10
mov [ ebp + ebx * 4 - 0x570 ] esi
mov ebx [ ebp - 0x574 ]
inc ebx
mov [ ebp - 0x574 ] ebx
jmp r-xdata
mov edi [ ebp - 0x92c ]
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
mov eax [ ebp - 0x91c ]
inc esi
cmp esi edi
jne r-xdata
and [ ebp + esi * 4 - 0x3a0 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x3a4 ] edx
jmp r-xdata
mov al 0x1
mov [ ebp - 0x918 ] ebx
xor ebx ebx
lea eax [ ebp - 0x910 ]
mov [ ebp - 0x914 ] ebx
jmp r-xdata
mov edx [ ebp - 0x918 ]
mov esi [ ebp - 0x94c ]
test edx edx
je r-xdata
cmp esi ecx
jne r-xdata
lea eax [ esi + edi * 4 ]
mov eax [ ebp + eax - 0x3a0 ]
mov [ ebp - 0x95c ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax edx
sub eax esi
cmp esi edx
push 0xffffffff
sbb esi esi
and esi eax
mov [ ebp - 0x92c ] esi
pop edi
jbe r-xdata
mul [ ebp + esi * 4 - 0x3a0 ]
add eax edi
mov [ ebp + esi * 4 - 0x3a0 ] eax
mov eax [ ebp - 0x934 ]
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x93c ] edi
mov [ ebp - 0x928 ] eax
test dl dl
jne r-xdata
xor edx edx
xor edi edi
mov [ ebp - 0x914 ] edx
cmp [ ebp - 0x928 ] edx
je r-xdata
mov [ ebp - 0x928 ] ecx
mov ecx eax
mov ecx [ ebp - 0x920 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea eax [ ebp - 0x3a0 ]
push eax
call sub_4a3402
add esp 0x10
xor esi esi
xor edi edi
and [ ebp - 0xb2c ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x938 ]
sub eax [ ebp - 0x930 ]
mov [ ebp - 0x938 ] eax
jne r-xdata
test edx edx
je r-xdata
mov eax edx
xor edx edx
add [ ebp + ecx * 4 - 0x570 ] eax
mov ebx [ ebp - 0x574 ]
adc edx edx
mov [ ebp - 0x91c ] ebx
inc ecx
cmp ecx ebx
jne r-xdata
test ebx ebx
je r-xdata
cmp eax ebx
lea edi [ ebp - 0x740 ]
setb cl
test cl cl
jne r-xdata
mov edi [ ebp - 0x570 ]
mov ebx 0x1cc
mov [ ebp - 0x574 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x570 ]
push ebx
push eax
call sub_4a3402
add esp 0x10
xor eax eax
test edi edi
jne r-xdata
cmp edi ecx
jne r-xdata
xor eax eax
mov [ ebp - 0x914 ] eax
mov [ ebp - 0x574 ] eax
push eax
lea eax [ ebp - 0x910 ]
jmp r-xdata
xor eax eax
push eax
mov [ ebp - 0x914 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x910 ]
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
xor al al
jmp r-xdata
mov edi [ ebp - 0x924 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ eax + esi * 4 ]
mov eax [ ebp + eax - 0x3a0 ]
mov [ ebp - 0x934 ] eax
test eax eax
jne r-xdata
push ebx
push eax
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] ebx
push 0x1cc
push eax
call sub_4a3402
mov al bl
jmp r-xdata
cmp esi 0x73
je r-xdata
mov ecx [ ebp - 0x924 ]
mov eax [ ecx + eax * 4 ]
mul [ ebp - 0x95c ]
add eax [ ebp - 0x928 ]
adc edx 0x0
add [ ebp + esi * 4 - 0x3a0 ] eax
mov eax [ ebp - 0x944 ]
mov ecx [ ebp - 0x3a4 ]
adc edx 0x0
inc eax
mov [ ebp - 0x928 ] edx
inc esi
mov [ ebp - 0x944 ] eax
cmp eax ebx
jne r-xdata
and [ ebp + esi * 4 - 0x3a0 ] 0x0
inc eax
add eax edi
mov [ ebp - 0x3a4 ] eax
mov eax [ ebp - 0x944 ]
mov edx [ ebp - 0x954 ]
mov eax [ ebp - 0x944 ]
sub edx eax
mov [ ebp - 0x954 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x92c ]
xor edx edx
and eax 0x1f
shr esi 0x5
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x938 ] eax
xor eax eax
mov [ ebp - 0x924 ] esi
inc eax
mov [ ebp - 0x948 ] ecx
call sub_4ac430
mov ecx [ ebp + ebx * 4 - 0x574 ]
dec eax
bsr ecx ecx
mov [ ebp - 0x94c ] eax
not eax
mov [ ebp - 0x934 ] eax
je r-xdata
lea edx [ ecx - 0x1 ]
shl edx 0x5
add edx eax
mov ecx [ ebp - 0x3a4 ]
mov [ ebp - 0x920 ] ecx
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x910 ]
push eax
lea eax [ ebp - 0x3a0 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
mov al 0x1
lea eax [ ebp - 0x910 ]
sub esi eax
mov [ ebp - 0x948 ] esi
mov ebx [ ebp - 0x934 ]
xor esi esi
xor edi edi
mov eax [ ebp - 0x740 ]
mul [ ebp + edi * 4 - 0x3a0 ]
add eax esi
mov [ ebp + edi * 4 - 0x3a0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xb28 ]
push eax
lea eax [ ebp - 0x3a0 ]
push 0x1cc
push eax
call sub_4a3402
mov eax [ ebp - 0x950 ]
add esp 0x10
push [ ebp - 0x958 ]
movzx eax [ eax + 0x308 ]
push eax
call sub_4a04d6
pop ecx
pop ecx
push 0x2
jmp r-xdata
mov edx [ ebp - 0x94c ]
cmp ebx 0x73
jae r-xdata
xor ecx ecx
xor esi esi
lea edx [ ebp - 0x570 ]
jmp r-xdata
lea edi [ ebp - 0x570 ]
lea edx [ ebp - 0x740 ]
mov ebx [ ebp - 0x574 ]
inc eax
mov [ ebp - 0x91c ] ebx
cmp edi eax
je r-xdata
push eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x740 ]
push eax
push ebx
jmp r-xdata
test ebx ebx
je r-xdata
mov al cl
jmp r-xdata
push eax
push 0x1cc
mov ebx [ ebp - 0x1d4 ]
mov [ ebp - 0x918 ] ebx
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x938 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x934 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x3a0 ] eax
mov eax [ ebp - 0x930 ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x930 ] eax
mov edi edx
mov edx [ ebp - 0x3a4 ]
cmp eax ebx
jne r-xdata
and [ ebp + ecx * 4 - 0x3a0 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x3a4 ] eax
mov eax [ ebp - 0x930 ]
cmp esi ecx
jne r-xdata
cmp ebx ecx
ja r-xdata
mov eax edx
cmp esi eax
jbe r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0xb2c ] eax
mov [ ebp - 0x3a4 ] eax
push eax
mov [ ebp + eax * 4 - 0x3a0 ] edi
mov ecx [ ebp - 0x3a4 ]
inc ecx
mov [ ebp - 0x920 ] ecx
mov [ ebp - 0x3a4 ] ecx
jmp r-xdata
and [ ebp - 0x92c ] 0x0
xor eax eax
mov [ ebp - 0x924 ] eax
mov esi edi
test ecx ecx
je r-xdata
cmp edi edx
jne r-xdata
mov eax ebx
mul [ ebp + edi * 4 - 0x3a0 ]
add eax esi
mov [ ebp + edi * 4 - 0x3a0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
mov ebx [ ebp - 0x91c ]
test esi esi
je r-xdata
pop eax
jmp r-xdata
and [ ebp - 0x744 ] 0x0
lea eax [ ebp - 0x740 ]
and [ ebp - 0x574 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_4a3402
mov ebx [ ebp - 0x574 ]
add esp 0x10
mov [ ebp + ebx * 4 - 0x570 ] edx
mov ebx [ ebp - 0x574 ]
inc ebx
mov [ ebp - 0x574 ] ebx
jmp r-xdata
mov eax edi
mul [ ebp + esi * 4 - 0x570 ]
add eax ecx
mov [ ebp + esi * 4 - 0x570 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x93c ] edx
mov [ ebp - 0x92c ] eax
test cl cl
jne r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x3a4 ] edx
cmp [ ebp - 0x92c ] edx
je r-xdata
mov [ ebp - 0x92c ] ebx
mov ebx eax
test al al
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x570 ]
push eax
call sub_4a3402
mov al 0x1
xor ecx ecx
xor esi esi
and [ ebp - 0x744 ] 0x0
and [ ebp - 0x574 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x938 ]
sub eax [ ebp - 0x928 ]
mov [ ebp - 0x938 ] eax
jne r-xdata
cmp ecx edx
jne r-xdata
mov eax edx
xor edx edx
add [ ebp + esi * 4 - 0x3a0 ] eax
mov ecx [ ebp - 0x3a4 ]
adc edx edx
inc esi
jmp r-xdata
and [ ebp + esi * 4 - 0x3a0 ] 0x0
lea eax [ esi + 0x1 ]
mov [ ebp - 0x3a4 ] eax
mov esi edx
xor eax eax
and edx 0x1f
shr esi 0x5
push 0x20
pop ecx
sub ecx edx
mov [ ebp - 0x938 ] edx
inc eax
mov [ ebp - 0x924 ] esi
xor edx edx
mov [ ebp - 0x948 ] ecx
call sub_4ac430
mov ecx [ ebp + ebx * 4 - 0x574 ]
dec eax
bsr ecx ecx
mov [ ebp - 0x94c ] eax
not eax
mov [ ebp - 0x934 ] eax
je r-xdata
jb r-xdata
mov edx eax
sub edx esi
push [ ebp - 0x958 ]
mov eax [ ebp - 0x950 ]
push 0x1
movzx eax [ eax + 0x308 ]
push eax
push [ ebp - 0x944 ]
jmp r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ esi + ebx ]
cmp [ ebp - 0x938 ] eax
mov [ ebp - 0x930 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x93d ] al
seta cl
cmp edx 0x73
jne r-xdata
cmp esi 0x73
je r-xdata
cmp esi 0x73
je r-xdata
inc edi
cmp edi [ ebp - 0x928 ]
jne r-xdata
and [ ebp + edi * 4 - 0x910 ] eax
lea edx [ edi + 0x1 ]
mov [ ebp - 0x914 ] edx
jmp r-xdata
mov ecx [ ebp - 0x3a4 ]
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
mov [ ebp - 0x91c ] ebx
mov ebx [ ebp - 0x574 ]
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
mov eax edx
mov [ ebp - 0x574 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x3a0 ]
lea eax [ ebp - 0x3a0 ]
sub edi eax
mov [ ebp - 0x948 ] edi
xor ecx ecx
xor esi esi
mov eax edi
mul [ ebp + esi * 4 - 0x570 ]
add eax ecx
mov [ ebp + esi * 4 - 0x570 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
test ecx ecx
je r-xdata
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
mov ecx [ ebp - 0x94c ]
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x3a0 ] eax
mov edx [ ebp - 0x3a4 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x3a0 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x3a4 ] eax
xor eax eax
lea eax [ ecx + 0x1 ]
jmp r-xdata
inc esi
mov [ ebp - 0x92c ] esi
lea ecx [ ebx - 0x1 ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x1d4 ]
push eax
call sub_4a0348
add esp 0x14
xor eax eax
push eax
mov [ ebp - 0xb2c ] eax
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0xb28 ]
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_4a3402
mov ebx [ ebp - 0x574 ]
add esp 0x10
mov ecx [ ebp - 0x920 ]
mov esi [ ebp - 0x92c ]
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
push eax
mov [ ebp - 0xb2c ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0xb28 ]
push eax
lea eax [ ebp - 0x3a0 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
xor al al
jmp r-xdata
mov esi [ ebp - 0x948 ]
cmp [ ebp - 0x92c ] 0x0
je r-xdata
cmp esi edx
jne r-xdata
lea eax [ esi + edi * 4 ]
mov eax [ ebp + eax - 0x910 ]
mov [ ebp - 0x934 ] eax
test eax eax
jne r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] esi
mov ecx [ ebp - 0x3a4 ]
inc ecx
mov [ ebp - 0x3a4 ] ecx
jmp r-xdata
xor eax eax
push eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebp - 0x3a0 ]
push 0x1cc
push eax
call sub_4a3402
mov ecx [ ebp - 0x3a4 ]
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] ecx
mov ebx [ ebp - 0x574 ]
inc ebx
mov [ ebp - 0x574 ] ebx
jmp r-xdata
xor eax eax
xor edi edi
mov [ ebp - 0x930 ] eax
mov ecx esi
test ebx ebx
je r-xdata
cmp esi edx
jne r-xdata
mov eax edi
mul [ ebp + esi * 4 - 0x570 ]
add eax ecx
mov [ ebp + esi * 4 - 0x570 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi ebx
jne r-xdata
jmp r-xdata
mov ebx [ ebp - 0x574 ]
mov eax [ ebp - 0x574 ]
cmp eax 0x73
jae r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop ecx
sub ecx eax
lea edx [ esi + ebx ]
cmp [ ebp - 0x938 ] ecx
mov [ ebp - 0x930 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x93d ] al
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx * 4 - 0x570 ]
cmp eax [ ebp + ecx * 4 - 0x3a0 ]
jne r-xdata
cmp edx 0x72
jb r-xdata
test cl cl
jne r-xdata
mov ecx [ ebp - 0x3a4 ]
mov [ ebp - 0x920 ] ecx
cmp esi 0x73
je r-xdata
mov edx [ ebp - 0x93c ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x934 ]
add eax [ ebp - 0x92c ]
adc edx 0x0
add [ ebp + esi * 4 - 0x910 ] eax
mov eax [ ebp - 0x924 ]
adc edx 0x0
inc eax
inc esi
mov [ ebp - 0x92c ] edx
mov edx [ ebp - 0x914 ]
mov [ ebp - 0x924 ] eax
cmp eax ecx
jne r-xdata
and [ ebp + esi * 4 - 0x910 ] 0x0
inc eax
add eax edi
mov [ ebp - 0x914 ] eax
mov eax [ ebp - 0x924 ]
mov al 0x1
mov [ ebp - 0x920 ] ecx
mov [ ebp - 0x91c ] ebx
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi [ ebp - 0x92c ]
jne r-xdata
and [ ebp + esi * 4 - 0x3a0 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x3a4 ] edx
jmp r-xdata
mov [ ebp - 0x91c ] ebx
xor ebx ebx
lea eax [ ebp - 0x740 ]
push ebx
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x744 ] ebx
push 0x1cc
push eax
mov [ ebp - 0x574 ] ebx
call sub_4a3402
mov al bl
jmp r-xdata
mov [ ebp + eax * 4 - 0x570 ] ecx
mov ebx [ ebp - 0x574 ]
inc ebx
mov [ ebp - 0x574 ] ebx
jmp r-xdata
xor eax eax
push eax
mov [ ebp - 0xb2c ] eax
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0xb28 ]
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
cmp ecx edi
je r-xdata
dec ecx
cmp ecx edi
jne r-xdata
mov ecx edx
mov [ ebp - 0x928 ] ecx
cmp edx edi
je r-xdata
push 0x72
pop edx
mov [ ebp - 0x930 ] edx
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x914 ] eax
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x910 ]
push eax
lea eax [ ebp - 0x570 ]
push 0x1cc
push eax
call sub_4a3402
add esp 0x10
xor al al
jmp r-xdata
mov edi [ ebp - 0x948 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x3a0 ]
mov [ ebp - 0x934 ] eax
test eax eax
jne r-xdata
add esp 0x10
mov al 0x1
jmp r-xdata
bsr eax ecx
je r-xdata
cmp ebx edi
ja r-xdata
cmp edx 0x72
jb r-xdata
test cl cl
jne r-xdata
mov eax [ ebp + ecx * 4 - 0x570 ]
cmp eax [ ebp + ecx * 4 - 0x3a0 ]
ja r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x924 ]
mov esi edx
sub esi eax
lea edx [ ebp - 0x570 ]
lea edx [ edx + esi * 4 ]
mov eax [ ebp - 0x92c ]
xor edx edx
add [ ebp + esi * 4 - 0x910 ] eax
adc edx edx
inc esi
mov [ ebp - 0x92c ] edx
test edx edx
mov edx [ ebp - 0x914 ]
jne r-xdata
and [ ebp + esi * 4 - 0x910 ] 0x0
lea eax [ esi + 0x1 ]
mov [ ebp - 0x914 ] eax
mov ebx [ ebp - 0x574 ]
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x93c ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x934 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x3a0 ] eax
mov eax [ ebp - 0x930 ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x930 ] eax
mov edi edx
mov edx [ ebp - 0x3a4 ]
cmp eax ebx
jne r-xdata
and [ ebp + ecx * 4 - 0x3a0 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x3a4 ] eax
mov eax [ ebp - 0x930 ]
xor esi esi
lea esi [ eax + 0x1 ]
jmp r-xdata
bsr eax ebx
je r-xdata
mov ecx edx
mov [ ebp - 0x928 ] ecx
cmp edx edi
je r-xdata
push 0x72
pop edx
mov [ ebp - 0x930 ] edx
cmp [ ebp - 0x93d ] 0x0
lea ebx [ edx + 0x1 ]
mov ecx [ ebp - 0x920 ]
mov esi [ ebp - 0x92c ]
jne r-xdata
xor eax eax
lea edi [ ebp - 0x570 ]
mov ecx esi
[ edi ]
or edi 0xffffffff
mov edx [ ebp - 0x930 ]
mov esi [ ebp - 0x924 ]
cmp esi ebx
jae r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp - 0x954 ]
xor eax eax
cmp eax [ ebp - 0x918 ]
sbb esi esi
inc eax
and esi [ ebp - 0x1d0 ]
cmp eax [ ebp - 0x918 ]
sbb edx edx
xor eax eax
and edx [ ebp - 0x1cc ]
add eax esi
adc edx 0x0
call sub_4ac430
mov ecx eax
mov eax [ ebp - 0x944 ]
add ecx [ ebp - 0x93c ]
adc edx [ ebp - 0x924 ]
test eax eax
je r-xdata
sub esi eax
test dl dl
je r-xdata
add esi 0x20
xor esi esi
jmp r-xdata
lea esi [ eax + 0x1 ]
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x924 ]
mov esi edx
sub esi eax
lea edx [ ebp - 0x570 ]
lea edx [ edx + esi * 4 ]
mov [ ebp - 0x574 ] ebx
jmp r-xdata
mov ebx edx
xor eax eax
mov eax [ edx ]
jmp r-xdata
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x3a0 ] eax
mov edx [ ebp - 0x3a4 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x3a0 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x3a4 ] eax
sub edi [ ebp - 0x92c ]
lea edi [ eax - 0x2 ]
jmp r-xdata
mov [ ebp - 0x928 ] 0x0
xor eax eax
xor edx edx
inc eax
mov ecx esi
call sub_4ac430
mov ecx [ ebp - 0x924 ]
add eax edi
mov [ ebp - 0x928 ] 0x1
adc edx edi
and eax ebx
and edx ecx
or eax edx
je r-xdata
mov eax [ ebp - 0x954 ]
cmp esi eax
jbe r-xdata
cmp [ ebp - 0x93d ] 0x0
je r-xdata
xor eax eax
lea edi [ ebp - 0x570 ]
mov ecx esi
[ edi ]
or edi 0xffffffff
mov edx [ ebp - 0x930 ]
mov esi [ ebp - 0x924 ]
cmp esi ebx
jae r-xdata
xor eax eax
mov eax [ edx - 0x4 ]
jmp r-xdata
mov [ ebp - 0x93c ] eax
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
push [ ebp - 0x958 ]
mov eax [ ebp - 0x950 ]
push [ ebp - 0x928 ]
movzx eax [ eax + 0x308 ]
push eax
push edi
push edx
push ecx
call sub_49fffc
add esp 0x18
jmp r-xdata
mov edx ecx
mov eax ebx
mov ecx esi
call sub_4ac450
mov [ ebp - 0x93c ] eax
mov [ ebp - 0x924 ] edx
mov [ ebp - 0x574 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x574 ] eax
jmp r-xdata
xor eax eax
mov eax [ edx ]
jmp r-xdata
mov ebx [ ebp - 0x574 ]
mov eax [ ebp - 0x924 ]
jmp r-xdata
and eax [ ebp - 0x934 ]
sub edx 0x4
mov ecx [ ebp - 0x948 ]
mov ebx [ ebp - 0x93c ]
and ebx [ ebp - 0x94c ]
shr eax cl
mov ecx [ ebp - 0x938 ]
shl ebx cl
mov ecx [ ebp - 0x928 ]
or eax ebx
mov [ ebp + ecx * 4 - 0x570 ] eax
dec ecx
dec esi
mov [ ebp - 0x928 ] ecx
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x574 ]
push eax
call sub_4a2390
cmp [ ebp - 0x574 ] 0x0
mov ebx eax
pop ecx
pop ecx
mov ecx edx
mov [ ebp - 0x93c ] ebx
sete dl
mov [ ebp - 0x924 ] ecx
mov [ ebp - 0x928 ] dl
test ecx ecx
jne r-xdata
xor eax eax
mov eax [ edx - 0x4 ]
jmp r-xdata
mov [ ebp - 0x93c ] eax
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp ecx eax
jb r-xdata
mov ebx [ ebp - 0x574 ]
mov eax [ ebp - 0x924 ]
jmp r-xdata
and eax [ ebp - 0x934 ]
sub edx 0x4
mov ecx [ ebp - 0x948 ]
mov ebx [ ebp - 0x93c ]
and ebx [ ebp - 0x94c ]
shr eax cl
mov ecx [ ebp - 0x938 ]
shl ebx cl
mov ecx [ ebp - 0x928 ]
or eax ebx
mov [ ebp + ecx * 4 - 0x570 ] eax
dec ecx
dec esi
mov [ ebp - 0x928 ] ecx
cmp ecx edi
je r-xdata
cmp ecx eax
jb r-xdata
sub_4a22cd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov edx [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
push edi
xor edi edi
lea esi [ edx + 0x8 ]
cmp [ eax + 0x4 ] cl
mov eax [ edx ]
sete cl
dec eax
dec ecx
and ecx 0x1d
add ecx 0x18
add eax ecx
lea ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
cmp esi ecx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_4a2933
cmp ebx edx
ja r-xdata
mov [ ebp - 0x4 ] al
cmp esi ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
jb r-xdata
test al al
je r-xdata
push [ ebp + 0xc ]
movzx eax [ edx + 0x308 ]
push [ ebp - 0x4 ]
push eax
push [ ebp - 0x8 ]
push ebx
push edi
call sub_49fffc
add esp 0x18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi ]
mov ecx [ ebp - 0x4 ]
shld ebx edi 0x4
cdq
shl edi 0x4
add edi eax
adc ebx edx
sub [ ebp - 0x8 ] 0x4
inc esi
cmp esi ecx
jne r-xdata
cmp edi eax
ja r-xdata
mov al [ esi ]
inc esi
test al al
je r-xdata
jmp r-xdata
xor al al
mov edx [ ebp + 0x8 ]
sub_4a2390
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax - 0x1 ]
lea eax [ ecx - 0x1 ]
mov [ ebp - 0xc ] esi
test eax eax
jne r-xdata
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0x1
jne r-xdata
pop esi
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
lea ecx [ eax + 0x1 ]
sub edx eax
mov [ ebp - 0x38 ] ecx
mov ecx esi
cmp esi edx
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
push eax
mov [ ebp - 0x21c ] eax
mov [ ebx ] eax
lea eax [ ebp - 0x218 ]
push eax
push 0x1cc
push ecx
call sub_4a3402
add esp 0x10
mov eax esi
xor edx edx
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov eax ecx
inc esi
sub eax edx
lea esi [ ebx + esi * 4 ]
lea edi [ edi + eax * 4 ]
add edi 0x4
xor edi edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
je r-xdata
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x218 ]
push 0x0
push eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x21c ] 0x0
push 0x1cc
push edi
mov [ ebx ] 0x0
call sub_4a3402
xor edx edx
mov eax esi
div [ ebp - 0x28 ]
add esp 0x10
xor ecx ecx
cmp ecx edx
mov [ edi ] edx
sbb ecx ecx
pop esi
neg ecx
xor edx edx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] eax
bsr eax esi
mov [ ebp - 0x34 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
mov eax ecx
sub eax edx
mov eax [ esi + eax * 4 + 0x4 ]
cmp eax [ ebx + ecx * 4 + 0x4 ]
jae r-xdata
dec ecx
sub edi 0x4
sub esi 0x4
cmp ecx edx
jge r-xdata
push 0x0
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x21c ] 0x0
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] 0x0
push 0x1cc
push esi
call sub_4a3402
mov eax [ ebp - 0x10 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
xor ecx ecx
cmp ecx eax
mov [ esi ] edi
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
sbb ecx ecx
neg ecx
pop esi
inc ecx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc esi
inc eax
mov [ ebp - 0x1c ] eax
lea esi [ ebx + esi * 4 ]
lea esp [ esp ]
mov ecx 0x20
mov ecx 0x1f
sub ecx eax
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
jmp r-xdata
push 0x0
push ecx
xor eax eax
or eax [ esi ]
push edi
push eax
call sub_4ac1f0
mov [ ebp - 0x40 ] edx
lea esi [ esi - 0x4 ]
xor edx edx
mov [ ebp - 0x10 ] ebx
mov edi ecx
add edx eax
mov ecx [ ebp - 0x8 ]
adc ecx 0x0
mov [ ebp - 0x8 ] edx
sub [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x28 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x48 ] 0x0
add edx 0xffffffff
mov [ ebp - 0x1c ] edx
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
shr eax cl
mov ecx [ ebp - 0x24 ]
shl [ ebp - 0x20 ] cl
shl esi cl
or esi eax
mov [ ebp - 0x34 ] esi
cmp edi 0x2
jbe r-xdata
mov eax 0x20
mov [ ebp - 0x24 ] ecx
sub eax ecx
mov [ ebp - 0x3c ] eax
test ecx ecx
je r-xdata
xor edi edi
lea ecx [ ebx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edx + edi ]
lea ecx [ ebx - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x4c ] ecx
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
mov eax [ esi + edi * 4 - 0x8 ]
shr eax cl
or [ ebp - 0x20 ] eax
mov [ ebx ] edx
test edx edx
je r-xdata
lea ecx [ eax + 0x1 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edx esi
mov eax edi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
cmp [ ebx + ecx * 4 ] 0x0
jne r-xdata
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
inc eax
cmp eax [ ebx ]
jb r-xdata
push 0x0
push [ ebp - 0x34 ]
push eax
push edx
call sub_4ac1f0
mov [ ebp - 0x28 ] ebx
xor esi esi
mov ebx eax
mov [ ebp - 0x28 ] esi
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] eax
mov edi ecx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov edi ecx
mov eax edx
mov ecx [ ebp - 0x3c ]
xor esi esi
mov edx [ ebp - 0x4 ]
shr edi cl
mov ecx [ ebp - 0x24 ]
call sub_4ac430
mov ecx [ ebp - 0x24 ]
or esi edx
or edi eax
mov eax esi
mov esi [ ebp - 0x14 ]
mov edx edi
shl esi cl
cmp [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] esi
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add ecx 0xffffffff
mov [ ebx ] ecx
jne r-xdata
push 0x0
push [ ebp - 0x34 ]
add ebx 0x1
adc eax 0xffffffff
push eax
push ebx
call sub_4ac3f0
add edi eax
adc esi edx
or ebx 0xffffffff
xor eax eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x40 ] eax
cmp ebx 0xffffffff
jbe r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebx + eax * 4 - 0x8 ]
shr eax cl
or esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] esi
test eax eax
jne r-xdata
jb r-xdata
test esi esi
ja r-xdata
mov ecx [ ebp - 0x38 ]
xor edi edi
xor esi esi
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push eax
push ebx
xor ecx ecx
mov esi edi
or ecx [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_4ac3f0
cmp edx esi
jb r-xdata
cmp edi 0xffffffff
ja r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x48 ]
xor eax eax
mov edx [ ebp - 0x1c ]
add eax ebx
mov ecx [ ebp - 0x4c ]
mov edi eax
mov eax [ ebp - 0x8 ]
adc esi 0x0
sub [ ebp - 0x10 ] 0x4
dec edx
mov ebx [ ebp + 0x8 ]
sub ecx 0x4
dec eax
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x8 ] eax
test edx edx
jns r-xdata
mov eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jb r-xdata
sub eax ecx
mov [ ebx ] eax
add ebx 0x4
mov eax [ ebp - 0x14 ]
add eax 0x4
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
add edi 0x1
adc esi esi
cmp eax [ ebp - 0xc ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add ebx 0xffffffff
mov [ ebp - 0x44 ] ebx
adc eax 0xffffffff
add edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
adc [ ebp - 0x28 ] 0x0
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x40 ]
mul [ ebp - 0x28 ]
mov ecx eax
mov eax [ ebp - 0x44 ]
mul [ ebp - 0x28 ]
add edx ecx
add edi eax
mov eax [ ebx ]
mov ecx edi
adc esi edx
mov edi esi
xor esi esi
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
inc edx
mov eax edx
cmp eax [ ebx ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
cmp edi 0xffffffff
jbe r-xdata
add ebx 0xffffffff
adc [ ebp - 0x18 ] 0xffffffff
mov esi [ ebp + 0xc ]
mov edi ecx
mov edx [ ebp - 0x10 ]
add esi 0x4
mov ebx eax
lea esp [ esp ]
jmp r-xdata
mov ecx [ edx ]
lea esi [ esi + 0x4 ]
xor eax eax
lea edx [ edx + 0x4 ]
add ecx [ esi - 0x4 ]
adc eax eax
add ecx ebx
mov [ edx - 0x4 ] ecx
adc eax 0x0
mov ebx eax
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub_4a283e
add [ ecx + 0x10 ] 0x1
mov edx [ ecx + 0x8 ]
mov eax edx
adc [ ecx + 0x14 ] 0x0
push esi
mov esi [ ecx + 0xc ]
or eax esi
je r-xdata
mov ecx [ ecx ]
call sub_4a2878
mov ecx eax
cmp ecx 0xffffffff
pop esi
sete al
dec al
and al cl
retn
cmp [ ecx + 0x14 ] esi
jb r-xdata
ja r-xdata
xor al al
pop esi
retn
cmp [ ecx + 0x10 ] edx
jbe r-xdata
sub_4a288e
lea edx [ ecx + 0x20 ]
mov eax edx
push esi
xor esi esi
sub eax ecx
cmp edx ecx
sbb edx edx
not edx
and edx eax
je r-xdata
pop esi
retn
not [ ecx ]
inc ecx
inc esi
cmp esi edx
jne r-xdata
sub_4a28ac
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
cmp edx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
sub eax 0x1
je r-xdata
pop ebp
retn 0x8
lea eax [ edx - 0x9 ]
cmp eax 0x4
jbe r-xdata
sub eax 0x7
jne r-xdata
cmp edx 0x20
push edx
add ecx 0x44
call sub_4a312e
test al al
jmp r-xdata
setne al
jmp r-xdata
sub_4a28f2
mov eax [ ecx + 0x28 ]
test eax eax
js r-xdata
xor eax eax
retn
cmp eax 0x1
jle r-xdata
xor eax eax
cmp [ ecx + 0x24 ] al
setne al
inc eax
retn
cmp eax 0x6
jle r-xdata
push [ ecx + 0x20 ]
call sub_4a3182
cmp eax 0x7
je r-xdata
push [ ecx + 0x20 ]
call sub_4a315f
jmp r-xdata
cmp eax 0x8
je r-xdata
pop ecx
retn
cmp eax 0x9
je r-xdata
sub_4a294a
mov edi edi
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x8 ]
mov ecx ebx
call sub_4a3277
test al al
jne r-xdata
push edi
lea edi [ esi + 0x18 ]
mov ecx edi
call sub_4a323a
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx edi
call sub_49fe58
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
mov ecx esi
call sub_4a2b7f
test al al
je r-xdata
cmp [ esi + 0x74 ] 0x0
mov edi [ esi + 0x70 ]
jne r-xdata
pop edi
mov eax [ esi ]
and eax 0x1
or eax 0x0
je r-xdata
mov ecx ebx
call sub_4a2878
cmp eax 0xffffffff
jne r-xdata
mov eax edi
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
push eax
mov ecx ebx
call sub_4a321b
or edi eax
call sub_4aaf64
mov [ eax ] esi
call sub_4aa9c1
sub_4a29e9
mov eax [ ecx + 0x40 ]
cmp eax 0x9
ja r-xdata
xor al al
retn
jmp [ eax * 4 + jump_table_4a2a35 ]
push 0x0
push 0x1
jmp r-xdata
push 0x8
jmp r-xdata
push 0x1
push 0x0
push 0x1
push 0x0
push 0x8
jmp r-xdata
push 0x0
jmp r-xdata
push 0x0
push 0x10
jmp r-xdata
jmp sub_4a2a5d
jmp sub_4a29cf
call sub_4a2bb5
retn
call sub_4a2a8d
retn
push 0xa
jmp r-xdata
sub_4a2a5d
mov edi edi
push esi
mov esi ecx
call sub_4a2bfd
lea ecx [ esi + 0x18 ]
call sub_4a28f2
cmp eax 0x4
je r-xdata
mov ecx esi
pop esi
jmp sub_49f8d6
cmp eax 0x8
je r-xdata
mov ecx esi
pop esi
jmp sub_49f93e
xor al al
pop esi
retn
sub_4a2a8d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
call sub_4a2bfd
push [ ebp + 0xc ]
lea eax [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x0
push [ ebp + 0x8 ]
sub esp 0x20
mov ecx esp
push eax
push [ esi + 0x34 ]
lea eax [ esi + 0x8 ]
push [ esi + 0x30 ]
push eax
push ecx
call sub_49ec4f
add esp 0x14
push [ esi + 0x68 ]
call sub_49f625
add esp 0x2c
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ esi + 0x2e ] 0x0
je r-xdata
xor al al
jmp r-xdata
push 0x1
push edx
push eax
mov ecx esi
call sub_4a330a
mov al 0x1
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4a2af3
mov edi edi
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x8 ]
call sub_4a2878
mov edx eax
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi + 0x2c ]
push edx
cmp edx eax
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_4a2b29
lea ecx [ esi + 0x8 ]
call sub_4a321b
jmp r-xdata
pop edi
pop esi
retn
sub_4a2b29
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
call sub_4ac285
mov bl [ ebp + 0x8 ]
mov ecx 0x8000
movzx edx bl
test [ eax + edx * 2 ] cx
jne r-xdata
push esi
lea esi [ edi + 0x8 ]
mov ecx esi
call sub_4a2878
movzx edx [ edi + 0x2d ]
cmp eax edx
je r-xdata
mov al 0x1
jmp r-xdata
mov al 0x1
push eax
mov ecx esi
call sub_4a321b
movsx eax bl
mov ecx esi
push eax
call sub_4a321b
xor al al
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x4
pop esi
sub_4a2b7f
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
dec eax
sub eax 0x1
je r-xdata
pop esi
jmp sub_4a2bfd
sub eax 0x1
je r-xdata
pop esi
jmp sub_4a2af3
sub eax 0x1
je r-xdata
call sub_4a29e9
test al al
je r-xdata
xor al al
pop esi
retn
inc [ esi + 0x74 ]
pop esi
retn
sub_4a2bb5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
jne r-xdata
lea ecx [ esi + 0x18 ]
call sub_4a28f2
sub eax 0x1
je r-xdata
call sub_4a2bfd
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_49f9a6
sub eax 0x1
je r-xdata
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_49fb08
jmp r-xdata
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4a2bfd
mov edi edi
push esi
push [ ecx + 0x68 ]
lea esi [ ecx + 0x8 ]
push esi
call sub_49fc74
pop ecx
pop ecx
push eax
mov ecx esi
call sub_4a321b
mov al 0x1
pop esi
retn
sub_4a2c1a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ecx + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x18 ]
mov [ eax ] 0x0
xor al al
mov eax [ ebp + 0xc ]
cmp eax [ ecx + 0x14 ]
jne r-xdata
mov al 0x1
jmp r-xdata
pop ebp
retn 0x8
sub_4a2c3f
mov edi edi
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
movzx eax [ ecx ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
mov [ esi + 0x28 ] 0x3
cmp eax 0x53
jg r-xdata
mov ecx esi
call sub_4a310e
mov [ esi + 0x28 ] 0x1
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x20 ] 0x9
cmp eax 0x67
jle r-xdata
mov al 0x1
sub eax 0x58
je r-xdata
je r-xdata
mov [ esi + 0x28 ] 0x5
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi + 0x28 ] 0x7
jmp r-xdata
cmp eax 0x69
je r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
sub eax 0x3
je r-xdata
cmp eax 0x41
je r-xdata
xor ebx ebx
mov [ esi + 0xc ] 0x16
mov [ esi + 0x10 ] ebx
xor al al
mov [ esi + 0x14 ] bx
mov [ esi + 0x16 ] bl
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] bl
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov [ esi + 0x28 ] 0x2
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov ecx esi
call sub_4a310e
inc [ esi + 0x8 ]
mov ecx esi
mov [ esi + 0x28 ] 0x8
pop esi
pop ebx
jmp sub_4a2fdc
sub eax 0x6
je r-xdata
cmp eax 0x43
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x28 ] 0x9
jmp r-xdata
cmp eax 0x6f
jne r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
or eax [ esi + 0x1c ]
push 0x0
pop ebx
jne r-xdata
cmp eax 0x44
jle r-xdata
mov [ esi + 0x28 ] 0x4
jmp r-xdata
mov ecx esi
call sub_4a310e
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x1c ] ebx
cmp eax 0x47
jle r-xdata
inc [ esi + 0x8 ]
cmp eax 0x49
jne r-xdata
sub_4a2daa
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov cl [ edx ]
lea eax [ ecx - 0x30 ]
cmp al 0x9
ja r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
ja r-xdata
movsx eax cl
add eax 0xffffffd0
jmp r-xdata
lea eax [ ecx - 0x41 ]
cmp al 0x19
ja r-xdata
movsx eax cl
add eax 0xffffffa9
jmp r-xdata
cmp eax 0x9
jbe r-xdata
or eax 0xffffffff
movsx eax cl
add eax 0xffffffc9
jmp r-xdata
push ebx
push 0xa
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
push edx
mov [ ebp - 0x4 ] ebx
call sub_4a82be
mov ecx eax
add esp 0xc
or ecx edx
je r-xdata
mov al 0x1
jmp r-xdata
mov [ esi + 0x10 ] ebx
xor al al
mov [ esi + 0x14 ] bx
mov [ esi + 0x16 ] bl
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] bl
mov [ esi + 0x28 ] ebx
mov [ esi + 0xc ] 0x16
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi + 0x8 ]
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x18 ] eax
mov al 0x1
mov [ esi + 0x1c ] edx
mov [ esi + 0x8 ] ecx
jmp r-xdata
pop ebx
sub_4a2e49
mov eax [ ecx + 0x8 ]
push esi
movzx edx [ eax ]
cmp edx 0x6a
jg r-xdata
cmp edx 0x6c
je r-xdata
je r-xdata
lea edx [ eax + 0x1 ]
cmp [ edx ] 0x6c
jne r-xdata
cmp edx 0x74
je r-xdata
inc eax
mov [ ecx + 0x20 ] 0x5
mov [ ecx + 0x8 ] eax
pop esi
retn
cmp edx 0x49
je r-xdata
mov [ ecx + 0x20 ] 0x3
add eax 0x2
mov [ ecx + 0x20 ] 0x4
mov [ ecx + 0x8 ] eax
pop esi
retn
inc eax
mov [ ecx + 0x20 ] 0x7
mov [ ecx + 0x8 ] eax
pop esi
retn
cmp edx 0x7a
jne r-xdata
lea esi [ eax + 0x1 ]
mov dl [ esi ]
cmp dl 0x33
jne r-xdata
cmp edx 0x4c
je r-xdata
pop esi
retn
inc eax
mov [ ecx + 0x20 ] 0x6
mov [ ecx + 0x8 ] eax
pop esi
retn
cmp dl 0x36
jne r-xdata
cmp [ eax + 0x2 ] 0x32
jne r-xdata
inc eax
mov [ ecx + 0x20 ] 0x8
mov [ ecx + 0x8 ] eax
pop esi
retn
cmp edx 0x54
je r-xdata
cmp dl 0x64
je r-xdata
cmp [ eax + 0x2 ] 0x34
jne r-xdata
add eax 0x3
mov [ ecx + 0x8 ] eax
inc eax
mov [ ecx + 0x20 ] 0xb
mov [ ecx + 0x8 ] eax
pop esi
retn
cmp edx 0x68
jne r-xdata
mov [ ecx + 0x8 ] esi
jmp r-xdata
cmp dl 0x69
je r-xdata
add eax 0x3
mov [ ecx + 0x20 ] 0xa
mov [ ecx + 0x8 ] eax
pop esi
retn
lea edx [ eax + 0x1 ]
cmp [ edx ] 0x68
jne r-xdata
mov [ ecx + 0x20 ] 0x9
pop esi
retn
cmp dl 0x6f
je r-xdata
mov [ ecx + 0x20 ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x20 ] 0x1
mov [ ecx + 0x8 ] eax
pop esi
retn
cmp dl 0x75
je r-xdata
mov [ ecx + 0x8 ] edx
cmp dl 0x78
je r-xdata
cmp dl 0x58
jne r-xdata
sub_4a2f69
mov edi edi
push esi
mov esi ecx
call sub_4ac285
movzx edx [ esi + 0x14 ]
mov ecx 0x8000
test [ eax + edx * 2 ] cx
je r-xdata
mov al 0x1
mov eax [ esi + 0x8 ]
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ esi + 0x15 ] cl
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] 0x2a
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ax
mov [ esi + 0x16 ] al
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] al
mov [ esi + 0x28 ] eax
xor al al
jmp r-xdata
pop esi
retn 0x4
sub_4a2fbe
mov edx [ ecx + 0x8 ]
mov al [ edx ]
cmp al 0x77
jne r-xdata
cmp al 0x43
je r-xdata
lea eax [ edx + 0x1 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ ecx + 0x24 ] 0x1
cmp al 0x53
jne r-xdata
retn
sub_4a2fdc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
xor eax eax
mov [ ebp - 0x10 ] esi
lea edx [ esi + 0x2c ]
mov [ ebp - 0xc ] edx
test edx edx
jne r-xdata
push edi
push 0x8
pop ecx
mov edi edx
[ edi ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x5e
sete cl
mov [ ebp - 0x1 ] cl
test cl cl
je r-xdata
mov [ esi + 0xc ] 0xc
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x5d
jne r-xdata
inc eax
mov [ esi + 0x8 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x8 ]
cmp [ edi ] 0x5d
je r-xdata
inc eax
mov [ esi + 0x8 ] eax
or [ esi + 0x37 ] 0x20
mov eax [ esi + 0x8 ]
pop edi
cmp [ eax ] 0x0
jne r-xdata
push ebx
test cl cl
je r-xdata
xor eax eax
mov [ esi + 0xc ] 0x16
jmp r-xdata
mov cl [ ebp - 0x1 ]
pop ebx
cmp cl 0x2d
jne r-xdata
inc [ esi + 0x8 ]
mov al 0x1
mov ecx edx
call sub_4a288e
mov [ esi + 0x28 ] eax
mov [ esi + 0x24 ] al
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x16 ] al
mov [ esi + 0x14 ] ax
mov [ esi + 0x10 ] eax
xor al al
jmp r-xdata
push ecx
mov ecx edx
call sub_4a30e3
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax ]
test cl cl
je r-xdata
mov bh [ eax + 0x1 ]
cmp bh 0x5d
je r-xdata
mov bl [ eax - 0x1 ]
cmp bl bh
jbe r-xdata
inc bh
mov [ ebp - 0x5 ] bl
cmp bl bh
je r-xdata
mov al bl
mov bl bh
mov bh al
inc [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x5d
jne r-xdata
mov esi [ ebp - 0xc ]
push [ ebp - 0x5 ]
mov ecx esi
call sub_4a30e3
inc bl
mov [ ebp - 0x5 ] bl
cmp bl bh
jne r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
lea edx [ esi + 0x2c ]
sub_4a30e3
mov edi edi
push ebp
mov ebp esp
push esi
movzx esi [ ebp + 0x8 ]
mov edx esi
shr edx 0x3
movzx eax [ edx + ecx ]
and esi 0x80000007
jns r-xdata
bts eax esi
mov [ edx + ecx ] al
pop esi
pop ebp
retn 0x4
dec esi
or esi 0xfffffff8
inc esi
sub_4a312e
mov edi edi
push ebp
mov ebp esp
movzx edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx edx
and ecx 0x80000007
jns r-xdata
xor eax eax
shr edx 0x3
inc eax
shl eax cl
push 0x0
test [ edx + esi ] al
pop eax
setne al
pop esi
pop ebp
retn 0x4
dec ecx
or ecx 0xfffffff8
inc ecx
sub_4a315f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x4
cmp eax 0x3
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x8
je r-xdata
pop eax
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4a3182
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xa
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_4a31ae ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_4a31da
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x10 ] 0xffffffff
mov edx [ ecx + 0x8 ]
mov eax edx
adc [ ecx + 0x14 ] 0xffffffff
push esi
mov esi [ ecx + 0xc ]
or eax esi
je r-xdata
mov al [ ebp + 0x8 ]
test al al
je r-xdata
cmp [ ecx + 0x14 ] esi
ja r-xdata
pop esi
pop ebp
retn 0x4
cmp al 0xff
je r-xdata
jb r-xdata
mov ecx [ ecx ]
movsx eax al
push eax
call sub_4a321b
cmp [ ecx + 0x10 ] edx
ja r-xdata
sub_4a321b
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
cmp eax [ ecx ]
je r-xdata
pop ebp
retn 0x4
cmp eax [ ecx + 0x4 ]
jne r-xdata
dec eax
mov [ ecx + 0x8 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
sub_4a3299
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov bl [ ebp + 0x18 ]
push esi
mov esi ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
call sub_4ac285
movzx edx bl
mov ecx 0x8000
test [ eax + edx * 2 ] cx
je r-xdata
push 0x3f
pop eax
mov [ ebp - 0x8 ] ax
mov eax [ esi + 0x68 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4ab0b2
mov edx [ ebp + 0x10 ]
add esp 0x10
movsx cx bl
mov eax [ edx ]
pop esi
pop ebx
mov [ eax ] cx
mov eax [ ebp + 0x14 ]
add [ edx ] 0x2
dec [ eax ]
mov al 0x1
mov esp ebp
pop ebp
retn 0x14
lea ecx [ esi + 0x8 ]
call sub_4a2878
mov [ ebp - 0x3 ] al
sub_4a330a
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x6c ] 0x4
mov eax [ ecx + 0x6c ]
push esi
mov esi [ eax - 0x4 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
add ecx 0x18
call sub_4a28f2
sub eax 0x1
je r-xdata
inc [ ecx + 0x70 ]
pop esi
pop ebp
retn 0xc
mov al [ ebp + 0x8 ]
mov [ esi ] al
sub eax 0x1
je r-xdata
mov ax [ ebp + 0x8 ]
mov [ esi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_4a3381
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_49eac1
add esp 0x1c
pop ebp
retn
sub_4a33a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_4ac285
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and eax [ ebp + 0xc ]
pop ebp
retn
sub_4a33cf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a33a5
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4ac30a
jmp r-xdata
add esp 0xc
pop ebp
retn
sub_4a3402
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_49acf0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_4aaf64
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop edi
sub_4a3496
push 0xc
push r--data
call sub_4ac470
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push 0x2
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4a35f0
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a35a0
test esi esi
jne r-xdata
xor eax eax
inc eax
mov ecx rw-data
xchg [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
call sub_4a3634
pop ecx
call sub_4ac4b9
retn
push [ ebp + 0x8 ]
call sub_4a35af
cmp edi 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx ebx
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor eax eax
ror eax cl
xor eax ebx
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
xor ebx ecx
xor eax eax
push eax
push eax
push eax
mov ecx edx
ror ebx cl
mov ecx ebx
call [ r--data ]
call ebx
push r--data
push r--data
call sub_4a426d
pop ecx
pop ecx
test esi esi
jne r-xdata
push r--data
push r--data
call sub_4a426d
pop ecx
pop ecx
call sub_4a3eaf
pop ecx
mov [ rw-data ] 0x1
sub_4a35af
mov edi edi
push ebp
mov ebp esp
call sub_4a96db
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_4a3634
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
mov eax [ fs : 0x30 ]
mov eax [ eax + 0x68 ]
shr eax 0x8
test al 0x1
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
sub_4a35f0
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_4a3634
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push esi
push r--data
push [ ebp - 0x8 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
pop esi
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
sub_4a36e1
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
cmp [ rw-data ] eax
jne sub_4a8316
push [ ebp + 0x8 ]
call sub_49b423
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_4a373a
push 0x8
push r--data
call sub_4985c0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_498606
retn
push 0x4
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_4acccf
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a3783
sub_4a378c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4a9bc5
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x0
pop eax
mov ecx [ esi + 0x350 ]
test cl 0x2
sete al
inc eax
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
pop esi
pop ebp
retn
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x350 ] ecx
jmp r-xdata
sub_4a37ee
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
call sub_4aa3f5
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] 0x0
jne r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_4a3912
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_4aaf64
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_4a3912
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_4a3a87
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_4ad1c2
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_4a8813
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_4a8813
pop ecx
mov [ ebp - 0x8 ] edi
sub_4a3912
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor cl cl
mov [ ebp - 0x1 ] cl
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
test cl cl
mov al 0x22
sete cl
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x2 ] al
movsx eax al
push eax
call sub_4ad226
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test cl cl
jne r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov cl [ ebp - 0x1 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test ecx ecx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov esp ebp
pop ebp
retn
and [ ecx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ ecx ] edi
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc eax
cmp [ esi ] 0x22
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr eax 0x1
jmp r-xdata
mov cl [ ebp - 0x1 ]
test cl cl
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor edx edx
test cl cl
sete [ ebp - 0x1 ]
lea ecx [ esi + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov cl [ ebp - 0x1 ]
mov esi ecx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor eax eax
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_4ad226
pop ecx
test eax eax
je r-xdata
mov [ edi ] al
inc edi
inc [ ebx ]
inc esi
inc [ ebx ]
test edi edi
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
sub_4a3a87
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x3fffffff
jb r-xdata
push edi
or edi 0xffffffff
mov ecx [ ebp + 0xc ]
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
imul ecx [ ebp + 0x10 ]
shl esi 0x2
sub edi esi
cmp edi ecx
ja r-xdata
pop esi
pop ebp
retn
pop edi
lea eax [ ecx + esi ]
push 0x1
push eax
call sub_4aaf77
push 0x0
mov esi eax
call sub_4a8813
add esp 0xc
mov eax esi
sub_4a3ae7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_4ad3c7
call sub_4ad3c7
mov [ esi ] eax
jmp r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_4ad3c7
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_4a3b46
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4a3d58
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a3b8b
mov eax esi
call sub_498606
retn 0xc
sub_4a3b97
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4a3c38
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a3bdc
mov eax esi
call sub_498606
retn 0xc
sub_4a3be8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a3b97
mov esp ebp
pop ebp
retn
sub_4a3c10
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a3b46
mov esp ebp
pop ebp
retn
sub_4a3c38
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x18 ] eax
push ebx
mov eax [ eax ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edx [ rw-data ]
push esi
push edi
mov edi [ ebx ]
mov esi edx
mov ebx [ ebx + 0x4 ]
and esi 0x1f
xor edi edx
mov [ ebp - 0x14 ] esi
mov ecx esi
xor ebx edx
ror edi cl
ror ebx cl
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
xor eax eax
pop esi
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ebx
cmp edi 0xffffffff
je r-xdata
cmp [ ebx ] eax
je r-xdata
mov eax edx
xor edx edx
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
ror edx cl
mov ecx [ ebp - 0x18 ]
xor edx [ rw-data ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x8 ] edx
push edi
call sub_4a8813
mov edx [ rw-data ]
pop ecx
sub ebx 0x4
cmp ebx edi
jb r-xdata
mov esi [ ebx ]
mov ecx [ ebp - 0x14 ]
xor esi edx
ror esi cl
mov ecx esi
mov [ ebx ] eax
call [ r--data ]
call esi
mov eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov esi edx
and esi 0x1f
mov [ ebp - 0x14 ] esi
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor ecx edx
mov [ ebp - 0x8 ] ecx
xor eax edx
mov ecx esi
ror [ ebp - 0x8 ] cl
ror eax cl
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0xc ] ecx
mov edi ecx
mov [ ebp - 0x10 ] eax
mov ebx eax
jmp r-xdata
push 0x20
pop ecx
cmp eax [ ebp - 0x10 ]
je r-xdata
push 0x20
pop ecx
sub ecx esi
xor eax eax
ror eax cl
xor eax edx
mov ecx [ ebp - 0x8 ]
sub_4a3d58
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax ecx
mov [ ebp - 0x8 ] eax
push esi
mov eax [ eax ]
mov esi [ eax ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
push ebx
mov ebx [ esi ]
and ecx 0x1f
push edi
mov edi [ esi + 0x4 ]
xor ebx eax
mov esi [ esi + 0x8 ]
xor edi eax
xor esi eax
ror edi cl
ror esi cl
ror ebx cl
cmp edi esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_49b423
push ebx
mov [ edi ] eax
call sub_497fe0
mov ebx [ ebp - 0x8 ]
mov ecx [ ebx ]
mov ecx [ ecx ]
mov [ ecx ] eax
lea eax [ edi + 0x4 ]
push eax
call sub_497fe0
mov ecx [ ebx ]
push esi
mov ecx [ ecx ]
mov [ ecx + 0x4 ] eax
call sub_497fe0
mov ecx [ ebx ]
add esp 0x10
mov ecx [ ecx ]
mov [ ecx + 0x8 ] eax
xor eax eax
sub esi ebx
mov eax 0x200
sar esi 0x2
cmp esi eax
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea edi [ eax + esi ]
test edi edi
jne r-xdata
mov eax esi
cmp edi esi
jb r-xdata
push 0x20
pop edi
push 0x4
lea edi [ esi + 0x4 ]
push edi
push ebx
call sub_4ad762
push 0x0
mov [ ebp - 0x4 ] eax
call sub_4a8813
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x4
push edi
push ebx
call sub_4ad762
push 0x0
mov [ ebp - 0x4 ] eax
call sub_4a8813
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + edi * 4 ]
mov eax [ rw-data ]
mov edi [ ebp - 0x4 ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
mov ecx edi
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax esi
sub eax edi
add eax 0x3
shr eax 0x2
cmp esi edi
sbb edx edx
not edx
and edx eax
mov [ ebp - 0x4 ] edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
pop edi
pop ebx
inc eax
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_4a3eaf
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x2
call sub_4a3be8
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4a3ecc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_4a3f09
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call sub_4a3c10
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4a3f2d
mov edi edi
push ebx
push esi
call sub_4aa3f5
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_4ad226
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_4a3f80
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
cmp [ rw-data ] eax
jne r-xdata
call sub_4a3faf
test eax eax
jne r-xdata
xor eax eax
retn
call sub_4a4137
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
sub_4a3faf
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_4aa3f5
call sub_4ad811
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_4a4008
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_49b442
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_4a8813
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4a8813
pop ecx
sub_4a4008
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov esi edi
mov al [ edi ]
jmp r-xdata
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_4aaf77
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ecx esi
lea ebx [ ecx + 0x1 ]
inc edx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx ebx
inc esi
add esi ecx
mov al [ esi ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
cmp [ edi ] 0x3d
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
je r-xdata
push 0x0
call sub_4a8813
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
add edi eax
push 0x1
push eax
call sub_4aaf77
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push ebx
call sub_4a40d9
push 0x0
call sub_4a8813
pop ecx
pop ecx
push edi
push [ ebp - 0x8 ]
push esi
call sub_4a889b
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
mov eax [ ebp - 0x4 ]
push 0x0
mov [ eax ] esi
add eax 0x4
mov [ ebp - 0x4 ] eax
call sub_4a8813
mov eax [ ebp - 0x8 ]
pop ecx
sub_4a40d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_4a8813
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_4a8813
pop ecx
pop edi
sub_4a4108
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_4a8813
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_4a8813
pop ecx
pop edi
sub_4a4137
mov edi edi
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
push esi
xor ebx ebx
jmp r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ edi ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push [ edi ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
call sub_4aaf77
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
push esi
call sub_4a8813
pop ecx
push 0x0
push 0x0
push ebx
push esi
push 0xffffffff
push [ edi ]
xor ebx ebx
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push ebx
push esi
call sub_4adbd4
push ebx
call sub_4a8813
add esp 0xc
add edi 0x4
sub_4a41b6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x4
sub_4a4231
push sub_4a41f6
mov ecx rw-data
call sub_4a41b6
push sub_4a4211
mov ecx rw-data
call sub_4a41b6
push [ rw-data ]
call sub_4a40d9
push [ rw-data ]
call sub_4a4108
pop ecx
pop ecx
retn
sub_4a426d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
add eax 0x3
push edi
xor edi edi
shr eax 0x2
cmp [ ebp + 0xc ] esi
sbb ebx ebx
not ebx
and ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add esi 0x4
inc edi
cmp edi ebx
jne r-xdata
mov ecx eax
call [ r--data ]
call [ ebp - 0x8 ]
sub_4a42c9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
xor eax eax
add esi 0x4
mov ecx edi
call [ r--data ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
sub_4a430e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_4a9c49
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov ecx edx
push ebx
xor ebx ebx
push edi
lea eax [ edx + 0x90 ]
cmp edx eax
je r-xdata
mov ecx ebx
mov edi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0xc
cmp ecx eax
jne r-xdata
pop edi
pop ebx
cmp edi 0x5
jne r-xdata
cmp [ ecx ] edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] ebx
inc eax
jmp r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
push [ ecx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx edi
call [ r--data ]
call edi
lea eax [ edx + 0x24 ]
lea edx [ eax + 0x6c ]
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x8 ] ebx
add eax 0xc
mov ebx [ esi + 0x8 ]
mov eax 0xc0000091
cmp [ ecx ] eax
ja r-xdata
cmp [ ecx ] 0xc0000092
je r-xdata
je r-xdata
mov [ esi + 0x8 ] 0x8a
cmp [ ecx ] 0xc0000093
je r-xdata
mov [ esi + 0x8 ] 0x84
jmp r-xdata
cmp [ ecx ] 0xc000008d
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc00002b4
je r-xdata
push [ esi + 0x8 ]
mov ecx edi
push 0x8
call [ r--data ]
call edi
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0x8 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc000008e
je r-xdata
mov [ esi + 0x8 ] 0x8e
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x8 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc000008f
je r-xdata
mov [ esi + 0x8 ] 0x8d
jmp r-xdata
mov [ esi + 0x8 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x8 ] 0x81
jmp r-xdata
sub_4a4496
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push 0x16
pop eax
pop ebp
retn
sub_4a44c2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push 0x16
pop eax
pop ebp
retn
sub_4a44ff
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi eax
and eax 0x3f
sar edi 0x6
imul edx eax 0x30
mov esi [ edi * 4 + rw-data ]
mov al [ esi + edx + 0x28 ]
mov bl [ esi + edx + 0x29 ]
movzx ecx al
and ecx 0x80
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x4000
je r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov ecx [ edi * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] 0x0
cmp ecx 0x8000
je r-xdata
test bl bl
jne r-xdata
mov eax 0x8000
jmp r-xdata
and al 0x7f
mov [ esi + edx + 0x28 ] al
jmp r-xdata
cmp ecx 0x10000
je r-xdata
xor eax eax
cmp bl 0x1
setne al
dec eax
and eax 0x30000
add eax 0x10000
mov eax 0x4000
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x2
jmp r-xdata
cmp ecx 0x20000
je r-xdata
cmp ecx 0x40000
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x1
jmp r-xdata
sub_4a45d6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
pop ebp
retn
cmp eax 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
pop ebp
retn
sub_4a4605
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
movzx edx [ edi ]
inc edi
lea eax [ edx - 0x41 ]
cmp eax 0x19
ja r-xdata
add ecx 0x20
test ecx ecx
je r-xdata
add edx 0x20
sub ecx edx
pop edi
mov eax ecx
pop esi
pop ebp
retn
cmp ecx edx
je r-xdata
movzx ecx [ esi ]
inc esi
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
sub_4a4640
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a4688
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_4a4605
sub_4a4688
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x10 ]
call sub_49bede
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov esi 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub edi ebx
push ebx
push edi
call sub_4a4605
pop ecx
pop ecx
mov esi eax
jmp r-xdata
sub esi eax
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_4a8620
lea ecx [ ebp - 0xc ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_4a8620
add esp 0x10
inc ebx
test esi esi
je r-xdata
sub_4a4722
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a478e
add esp 0x10
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_4ae160
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov eax esi
jmp r-xdata
sub_4a478e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_4ae160
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_4a8620
lea ecx [ ebp - 0xc ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_4a8620
add esp 0x10
inc ebx
sub [ ebp + 0x10 ] 0x1
je r-xdata
sub_4a4845
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push eax
call sub_4a9322
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx 0xd53e8000
push 0x0
push 0x989680
sbb eax 0x19db1de
push eax
push ecx
call sub_4ae1d0
mov [ ebp - 0x4 ] ebx
pop ebx
cmp edx 0x7
jl r-xdata
pop esi
mov esp ebp
pop ebp
retn
imul ecx ecx 0x64
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] edx
inc eax
mov [ esi + 0x8 ] ecx
jg r-xdata
cmp eax 0x93406fff
ja r-xdata
sub_4a48c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x1
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4a4845
pop ecx
pop ecx
pop edi
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
or eax 0xffffffff
mov edx eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_4a4906
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x484 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x480
push 0x0
push eax
call sub_49acf0
push esi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x484 ]
push edi
push ebx
push 0x240
push eax
call sub_4a49a2
push 0x12012
lea eax [ ebp - 0x484 ]
push r--data
push eax
call sub_4add19
add esp 0x30
pop edi
pop esi
pop ebx
sub eax 0x3
je r-xdata
push 0x16
call sub_4aabf5
pop ecx
push 0x3
call sub_4a36cb
int3
sub eax 0x1
je r-xdata
int3
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
jmp r-xdata
call sub_4a519f
sub_4a49a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x22c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x228 ] eax
mov eax [ ebp + 0x14 ]
push r--data
mov [ ebp - 0x218 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push edi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x214 ] eax
call sub_4ac7ed
add esp 0xc
test eax eax
jne r-xdata
xor esi esi
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_4aa9d1
int3
push 0x20a
lea eax [ ebp - 0x210 ]
push esi
push eax
call sub_49acf0
add esp 0xc
mov [ ebp - 0x224 ] esi
lea eax [ ebp - 0x224 ]
push eax
push [ ebp - 0x214 ]
push 0x6
call [ GetModuleHandleExW@IAT ]
neg eax
lea ecx [ ebp - 0x210 ]
push 0x105
sbb eax eax
and eax [ ebp - 0x224 ]
push ecx
push eax
mov [ ebp - 0x224 ] eax
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x210 ]
mov ecx edx
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x214 ] eax
push r--data
lea eax [ ebp - 0x210 ]
push 0x105
push eax
call sub_4ac7ed
add esp 0xc
test eax eax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx [ ebp - 0x214 ]
sar ecx 0x1
lea eax [ ecx + 0xb ]
cmp eax 0x40
jbe r-xdata
push edx
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
lea edx [ ebp + ecx * 2 - 0x27a ]
mov eax edx
mov [ ebp - 0x214 ] edx
lea ecx [ ebp - 0x210 ]
sub eax ecx
mov ecx 0x105
sar eax 0x1
push 0x6
sub ecx eax
push r--data
add ecx ecx
push ecx
push edx
call sub_4a5100
add esp 0x10
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x214 ]
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x218 ]
mov edx ecx
lea eax [ edx + 0x2 ]
mov [ ebp - 0x214 ] eax
mov ax [ edx ]
add edx 0x2
cmp ax si
jne r-xdata
sub edx [ ebp - 0x214 ]
sar edx 0x1
lea eax [ edx + 0x8 ]
cmp eax 0x40
jbe r-xdata
push ecx
jmp r-xdata
lea edx [ ecx + 0x2 ]
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
mov eax [ ebp - 0x218 ]
sub ecx edx
sar ecx 0x1
xor edx edx
mov [ ebp - 0x220 ] 0x5c
inc edx
mov [ ebp - 0x214 ] ecx
movzx ebx [ eax + ecx * 2 - 0x2 ]
cmp bx [ ebp - 0x220 ]
mov ebx [ ebp + 0xc ]
je r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
sub ecx edx
mov [ ebp - 0x220 ] ecx
cmp ecx 0x26
jbe r-xdata
movzx ebx [ eax + ecx * 2 - 0x2 ]
mov [ ebp - 0x22c ] ebx
lea ebx [ eax - 0x2 ]
mov edi [ ebp - 0x22c ]
lea ebx [ ebx + ecx * 2 ]
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
jae r-xdata
cmp edx 0x12
jae r-xdata
mov edi [ ebp - 0x21c ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x218 ]
cmp edx ecx
jae r-xdata
mov ecx edi
lea edx [ ecx + 0x2 ]
push 0x23
push eax
push ebx
push edi
call sub_4ae4ba
add esp 0x10
test eax eax
jne r-xdata
push 0x35
pop eax
shr edx 0x1
sub eax edx
mov [ ebp - 0x21c ] edx
push eax
push [ ebp - 0x218 ]
push ebx
push edi
call sub_4ae4ba
add esp 0x10
test eax eax
jne r-xdata
cmp ecx 0x26
mov ecx [ ebp - 0x218 ]
push 0x35
pop eax
sub eax edx
push eax
push ecx
push ebx
push edi
call sub_4ae4ba
add esp 0x10
test eax eax
jne r-xdata
sub ebx 0x2
inc edx
movzx eax [ ebx ]
mov edi eax
cmp ax [ ebp - 0x220 ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
mov edx edi
sar ecx 0x1
lea eax [ edx + 0x2 ]
mov [ ebp - 0x21c ] eax
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
cmp di 0x2f
je r-xdata
mov ax [ edx ]
add edx 0x2
cmp ax si
jne r-xdata
sub edx [ ebp - 0x21c ]
mov eax ebx
sar edx 0x1
sub eax ecx
push 0xa
push eax
lea eax [ edi + edx * 2 ]
push eax
push [ ebp + 0x18 ]
call sub_4ae39c
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ ebp - 0x220 ]
mov eax [ ebp - 0x218 ]
push 0x8
lea eax [ eax + ecx * 2 ]
push eax
push ebx
push edi
call sub_4ae4ba
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp - 0x214 ]
sub eax [ ebp - 0x21c ]
mov ecx [ ebp - 0x218 ]
mov eax [ ebp - 0x218 ]
mov ecx [ ebp - 0x220 ]
lea eax [ eax + ecx * 2 ]
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push eax
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x218 ]
add eax 0xfffffff9
jmp r-xdata
mov ecx edi
lea edx [ ecx + 0x2 ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
lea edx [ ecx + 0xb0 ]
mov ecx [ ebp - 0x228 ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x21c ] eax
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx [ ebp - 0x21c ]
sar ecx 0x1
lea eax [ ecx + edx ]
cmp eax ebx
jbe r-xdata
push [ ebp - 0x228 ]
jmp r-xdata
mov eax ebx
sub eax edx
sub eax 0x3
push eax
push [ ebp - 0x228 ]
push ebx
push edi
call sub_4ae4ba
add esp 0x10
test eax eax
jne r-xdata
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
push r--data
push ebx
push edi
call sub_4ac778
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
sub_4a4ee7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a4f92
push 0x2
call sub_49b55f
add esp 0x10
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
push 0x0
call sub_4a5043
push 0x2
mov [ ebp - 0x4 ] eax
call sub_49b55f
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4a4f6a
push 0x2
call sub_49b55f
push eax
call sub_4a687d
add esp 0x24
call sub_4a519f
push 0x0
push 0x4
push 0x0
push 0x2
call sub_49b55f
pop ecx
push eax
call sub_4ae60b
add esp 0x10
sub_4a4f6a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a50e5
add esp 0x14
pop ebp
retn
sub_4a4f92
mov edi edi
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
push esi
call [ GetFileType@IAT ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x484 ]
push ebx
push edi
push r--data
push 0x240
push eax
call sub_4a5181
add esp 0x18
test eax eax
js r-xdata
lea ecx [ ebp - 0x484 ]
xor edi edi
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
push edi
sub ecx edx
mov [ ebp - 0x488 ] edi
lea eax [ ebp - 0x488 ]
sar ecx 0x1
push eax
push ecx
lea eax [ ebp - 0x484 ]
push eax
push esi
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
call sub_4a519f
sub_4a5049
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43aed0
push [ eax + 0x4 ]
push [ eax ]
call sub_49e843
add esp 0x18
pop ebp
retn
sub_4a506e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43aed0
push [ eax + 0x4 ]
push [ eax ]
call sub_49e8de
add esp 0x1c
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_4a509d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x4 ]
push 0x3
call sub_4adbdf
pop ecx
cmp eax 0x1
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a4ee7
test eax eax
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a4906
add esp 0x10
pop esi
pop ebp
retn
call sub_4a4481
cmp eax 0x1
je r-xdata
sub_4a5100
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_49acf0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_4aaf64
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop edi
sub_4a5181
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a506e
add esp 0x14
pop ebp
retn
sub_4a519f
call sub_4aab9a
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4aabf5
pop ecx
push 0x3
call sub_4a36cb
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_4aa7f7
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_4a51e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x1c ]
call sub_49bede
fldz
lea eax [ ebp - 0xc ]
push eax
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
fstp [ ebp - 0xc ]
push eax
call sub_4a524d
add esp 0xc
lea eax [ ebp - 0x18 ]
push eax
call sub_4a5268
fld [ ebp - 0xc ]
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
fldz
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
sub_4a524d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_4a5268
mov edi edi
push ebp
mov ebp esp
sub esp 0x310
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
inc eax
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
pop esi
test edx edx
je r-xdata
lea ecx [ ebp - 0x310 ]
push ecx
lea ecx [ ebp + 0xc ]
push ecx
push eax
call sub_4a52de
push esi
lea ecx [ ebp - 0x310 ]
push ecx
push eax
call sub_49f521
add esp 0x18
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
sub_4a52de
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
push edi
call sub_49e183
test al al
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
mov cl [ eax ]
inc eax
mov [ esi ] eax
lea eax [ ebp - 0x5 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] eax
jmp r-xdata
push 0x7
pop eax
jmp r-xdata
push ebx
movzx eax cl
push 0x8
push eax
mov [ ebp - 0x5 ] cl
call sub_4a33cf
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ esi ] eax
mov edx [ ebp + 0x10 ]
mov cl [ ebp - 0x5 ]
add edx 0x308
cmp cl 0x2d
mov [ ebp - 0x14 ] edx
sete al
mov [ edx ] al
cmp cl 0x2d
je r-xdata
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
cmp cl 0x2b
jne r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x5 ]
push esi
push eax
call sub_4a56d0
cmp cl 0x69
je r-xdata
cmp cl 0x49
je r-xdata
cmp cl 0x4e
je r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x5 ]
push esi
push eax
call sub_4a577d
jmp r-xdata
cmp cl 0x6e
je r-xdata
add esp 0xc
xor ebx ebx
mov [ ebp - 0x1 ] bl
cmp cl 0x30
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ch bl
add eax 0x8
mov [ ebp - 0x18 ] eax
mov edi eax
cmp cl 0x30
jne r-xdata
mov edx [ esi ]
mov al [ edx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x18 ] al
mov [ esi ] edi
cmp al 0x78
je r-xdata
xor edx edx
cmp [ ebp - 0x1 ] dl
sete dl
dec edx
and edx 0x6
add edx 0x9
mov ch 0x1
mov cl [ edi ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
mov [ ebp - 0x10 ] edx
cmp al 0x58
je r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
cmp cl 0x30
je r-xdata
push [ ebp - 0x18 ]
mov ecx esi
call sub_4a5982
mov cl [ ebp - 0x5 ]
jmp r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax edx
ja r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0xc ] ebx
pop ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
mov ch 0x1
cmp edi [ ebp - 0x14 ]
je r-xdata
test ch ch
jne r-xdata
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
cmp edi [ ebp - 0x18 ]
jne r-xdata
mov eax [ esi ]
inc ebx
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
jmp r-xdata
mov [ edi ] al
inc edi
push [ ebp - 0x5 ]
mov ecx esi
call sub_4a5982
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
mov cl [ eax ]
lea edx [ eax + 0x1 ]
mov [ ebp - 0x5 ] cl
mov al bl
mov [ esi ] edx
cmp cl 0x45
je r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4a5910
test al al
je r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp cl 0x30
jne r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp [ ebp - 0x1 ] 0x0
sete al
cmp cl 0x50
je r-xdata
push 0x7
jmp r-xdata
xor eax eax
cmp [ ebp - 0x1 ] al
sete al
dec eax
and eax 0xfffffffb
add eax 0x7
jmp r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov ch 0x1
push [ ebp - 0x5 ]
mov ecx esi
call sub_4a5982
mov edx [ ebp - 0x18 ]
cmp edi edx
je r-xdata
mov cl [ edx ]
lea eax [ edx + 0x1 ]
cmp cl 0x2d
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
sete ch
cmp cl 0x2b
je r-xdata
mov al [ ebp - 0x1 ]
jmp r-xdata
cmp cl 0x65
je r-xdata
pop eax
jmp r-xdata
pop ebx
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax edx
ja r-xdata
mov cl [ eax ]
dec [ ebp - 0xc ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
cmp cl 0x30
je r-xdata
push 0x2
cmp [ edi - 0x1 ] 0x0
jne r-xdata
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
cmp cl 0x2d
jne r-xdata
test al al
je r-xdata
cmp cl 0x70
jne r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
mov ch 0x1
cmp edi [ ebp - 0x14 ]
je r-xdata
cmp edi edx
je r-xdata
dec edi
cmp edi edx
jne r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
mov dl 0x1
mov dl bl
cmp cl 0x30
jne r-xdata
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
jmp r-xdata
mov [ edi ] al
inc edi
cmp ebx 0x1450
jg r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
cmp cl 0x30
je r-xdata
push 0x9
jmp r-xdata
mov esi 0xffffebb0
cmp ebx esi
jl r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax 0xa
jae r-xdata
push 0x8
jmp r-xdata
mov cl [ ebp - 0x1 ]
xor eax eax
test cl cl
sete al
dec eax
and eax 0x3
inc eax
imul eax [ ebp - 0xc ]
add ebx eax
cmp ebx 0x1450
jle r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
imul ebx ebx 0xa
mov dl 0x1
add ebx eax
cmp ebx 0x1450
jg r-xdata
cmp ebx esi
jge r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
mov ebx 0x1451
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
sub edi edx
mov [ eax ] ebx
mov [ eax + 0x4 ] edi
xor eax eax
test cl cl
setne al
jmp r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
jmp r-xdata
cmp eax 0xa
jae r-xdata
or eax 0xffffffff
movsx eax cl
sub eax 0x37
jmp r-xdata
test ch ch
je r-xdata
mov eax [ esi ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x5 ] cl
mov [ esi ] eax
jmp r-xdata
test dl dl
jne r-xdata
neg ebx
lea ecx [ ebp - 0x24 ]
call sub_4a5910
test al al
je r-xdata
mov ecx [ esi ]
mov al [ ecx ]
mov [ ebp - 0x5 ] al
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
sub_4a56d0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
mov ecx edi
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov dl [ eax ]
inc eax
inc ecx
mov [ esi ] eax
mov [ ebx ] dl
cmp ecx 0x3
jne r-xdata
cmp al [ ecx + r--data ]
jne r-xdata
mov al [ ebx ]
cmp al [ ecx + r--data ]
je r-xdata
push edx
mov ecx esi
call sub_4a5982
mov eax [ esi ]
mov [ ebp + 0x10 ] eax
mov cl [ eax ]
inc eax
mov [ esi ] eax
mov [ ebx ] cl
lea ecx [ ebp - 0xc ]
call sub_4a595c
push 0x7
jmp r-xdata
mov eax [ esi ]
mov cl [ eax ]
inc eax
inc edi
mov [ esi ] eax
mov [ ebx ] cl
cmp edi 0x5
jne r-xdata
cmp al [ edi + r--data ]
jne r-xdata
pop eax
mov al [ ebx ]
cmp al [ edi + r--data ]
je r-xdata
push ecx
mov ecx esi
call sub_4a5982
push 0x3
lea ecx [ ebp - 0xc ]
call sub_4a595c
xor ecx ecx
test al al
sete cl
lea eax [ ecx * 4 + 0x3 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a577d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
xor ecx ecx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov dl [ eax ]
inc eax
inc ecx
mov [ edi ] eax
mov [ esi ] dl
cmp ecx 0x3
jne r-xdata
cmp al [ ecx + r--data ]
jne r-xdata
mov al [ esi ]
cmp al [ ecx + r--data ]
je r-xdata
push edx
mov ecx edi
call sub_4a5982
mov eax [ edi ]
mov [ ebp + 0x10 ] eax
mov cl [ eax ]
inc eax
mov [ edi ] eax
mov [ esi ] cl
cmp cl 0x28
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_4a5936
push 0x7
pop eax
jmp r-xdata
mov eax [ edi ]
push ebx
push edi
push esi
mov cl [ eax ]
inc eax
mov [ edi ] eax
mov [ esi ] cl
call sub_4a58d4
pop ecx
pop ecx
test al al
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_4a5936
movzx eax al
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x7
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push edi
push esi
call sub_4a5898
pop ecx
pop ecx
test al al
je r-xdata
push 0x5
jmp r-xdata
cmp [ esi ] 0x29
je r-xdata
push 0x6
movzx edx [ esi ]
mov ecx edi
pop ebx
push edx
call sub_4a5982
mov eax ebx
jmp r-xdata
push 0x4
pop eax
mov al [ esi ]
test al al
je r-xdata
pop ebx
cmp [ esi ] 0x29
je r-xdata
movsx ecx al
lea eax [ ecx - 0x30 ]
cmp eax 0x9
jbe r-xdata
lea ecx [ ebp - 0xc ]
call sub_4a5936
movzx eax al
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x7
jmp r-xdata
mov eax [ edi ]
mov cl [ eax ]
inc eax
mov [ edi ] eax
mov [ esi ] cl
cmp cl 0x29
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp eax 0x19
jbe r-xdata
lea eax [ ecx - 0x41 ]
cmp eax 0x19
jbe r-xdata
cmp ecx 0x5f
jne r-xdata
sub_4a5898
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov edx ebx
mov eax [ edi ]
mov cl [ eax ]
inc eax
inc edx
mov [ edi ] eax
mov [ esi ] cl
cmp edx 0x4
jne r-xdata
cmp al [ edx + r--data ]
jne r-xdata
mov al [ esi ]
cmp al [ edx + r--data ]
je r-xdata
mov bl 0x1
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_4a58d4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov edx ebx
mov eax [ edi ]
mov cl [ eax ]
inc eax
inc edx
mov [ edi ] eax
mov [ esi ] cl
cmp edx 0x5
jne r-xdata
cmp al [ edx + r--data ]
jne r-xdata
mov al [ esi ]
cmp al [ edx + r--data ]
je r-xdata
mov bl 0x1
pop edi
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_4a5910
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
movzx eax [ eax ]
push eax
call sub_4a5982
mov eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
pop esi
mov eax [ eax ]
mov [ ecx ] eax
mov al 0x1
retn
sub_4a5936
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
movzx eax [ eax ]
push eax
call sub_4a5982
mov eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
pop esi
mov eax [ eax ]
mov [ ecx ] eax
mov al 0x1
retn
sub_4a595c
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
movzx eax [ eax ]
push eax
call sub_4a5982
mov eax [ esi + 0x4 ]
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
pop esi
mov eax [ eax ]
mov [ ecx ] eax
mov al 0x1
retn
sub_4a5982
mov edi edi
push ebp
mov ebp esp
dec [ ecx ]
mov al [ ebp + 0x8 ]
mov ecx [ ecx ]
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
sub_4a59aa
mov edi edi
push ebp
mov ebp esp
add [ ecx ] 0xfffffffe
mov ax [ ebp + 0x8 ]
mov ecx [ ecx ]
test ax ax
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] ax
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
sub_4a59e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x80000000
ja r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
ja r-xdata
sub_4a5a1c
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_49e183
test al al
je r-xdata
xor ebx ebx
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_49bede
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0x4 ] bl
call sub_4a33cf
add esp 0xc
test eax eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp edi 0x10
jne r-xdata
test edi edi
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
xor edx edx
or eax 0xffffffff
div edi
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x10 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
test edi edi
jne r-xdata
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffa9
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop edi
jmp r-xdata
or ecx 0xffffffff
movsx ecx bl
add ecx 0xffffffc9
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
call sub_4a5982
mov ebx [ ebp - 0x8 ]
test bl 0x8
jne r-xdata
cmp ecx edi
jae r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
push 0x10
pop edi
test edi edi
jne r-xdata
mov esi [ ebp - 0xc ]
push esi
push ebx
call sub_4a59e9
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
or edx 0x8
mov ebx [ ebp - 0x10 ]
cmp eax ebx
jb r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
call sub_4a5982
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0x8
pop edi
test bl 0x2
je r-xdata
call sub_4aaf64
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
pop esi
je r-xdata
imul eax edi
add eax ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
or edx 0x4
jmp r-xdata
cmp ecx [ ebp - 0x14 ]
jbe r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
sub_4a5c44
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_49e183
test al al
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
push 0x2
pop edi
test eax eax
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_49bede
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp eax edi
jl r-xdata
movzx esi [ eax ]
add eax edi
push 0x8
push esi
mov [ ebp + 0xc ] eax
call sub_4ac2ab
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp + 0x18 ] bl
setne bl
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or ebx edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp si ax
jb r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x19
push 0x30
pop eax
push 0x10
pop edx
test ecx ecx
je r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
test ecx ecx
jne r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x58
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_4a59aa
test bl 0x8
jne r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
cmp eax 0xffffffff
je r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov esi [ ebp - 0x8 ]
push esi
push ebx
call sub_4a59e9
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0xc ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
or ebx 0x8
cmp esi ecx
jb r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_4a59aa
mov edi [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
test bl 0x2
je r-xdata
call sub_4aaf64
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
pop esi
je r-xdata
imul esi [ ebp + 0x14 ]
add esi eax
mov [ ebp - 0x8 ] esi
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
push 0x30
pop eax
cmp si ax
jb r-xdata
or ebx 0x4
jmp r-xdata
cmp eax edx
jbe r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
sub_4a6329
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
lea ecx [ ebp + 0xc ]
push esi
push edi
call sub_49e183
test al al
je r-xdata
xor eax eax
mov edi eax
mov esi eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax edi
mov edx esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_49bede
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp eax 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x3c ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0xc ] bl
mov [ ebp - 0x1 ] bl
call sub_4a33cf
add esp 0xc
test eax eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
mov [ ebp - 0x1 ] bl
mov [ ebp - 0xc ] bl
mov [ ebp + 0xc ] edi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x10
pop edx
test ecx ecx
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
mov eax ecx
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx edx cl
add edx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x1c ] al
mov [ ebp + 0xc ] edi
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx edx cl
add edx 0xffffffa9
jmp r-xdata
mov [ ebp - 0x14 ] edx
cmp edx 0xffffffff
je r-xdata
test ecx ecx
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop eax
mov [ ebp + 0x14 ] eax
jmp r-xdata
or edx 0xffffffff
movsx edx cl
add edx 0xffffffc9
jmp r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
call sub_4a5982
mov eax [ ebp - 0x8 ]
test al 0x8
jne r-xdata
cmp edx [ ebp + 0x14 ]
jae r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] al
mov [ ebp + 0xc ] edi
jmp r-xdata
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
cdq
mov ecx edx
mov [ ebp - 0x2c ] eax
push ecx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] ecx
call sub_4ac1f0
mov [ ebp - 0x24 ] ecx
mov cl [ ebp - 0x1 ]
mov [ ebp - 0x20 ] ebx
xor ebx ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
mov edi [ ebp - 0x10 ]
push esi
push edi
push eax
call sub_49ec0c
add esp 0xc
test al al
je r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp + 0xc ] eax
xor eax eax
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
or ecx 0x8
mov [ ebp - 0x8 ] ecx
cmp esi [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
push [ ebp - 0x1c ]
lea ecx [ ebp + 0xc ]
call sub_4a5982
mov edi [ ebp + 0xc ]
mov [ ebp + 0x14 ] 0x8
test [ ebp - 0x8 ] 0x2
je r-xdata
call sub_4aaf64
mov [ eax ] 0x22
mov eax [ ebp - 0x8 ]
test al 0x1
jne r-xdata
mov edi eax
jmp r-xdata
push esi
push eax
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
call sub_4ac3f0
add eax [ ebp - 0x14 ]
mov esi edx
mov [ ebp - 0x10 ] eax
adc esi ebx
ja r-xdata
cmp [ ebp - 0x34 ] 0x0
pop ebx
je r-xdata
neg edi
adc esi ebx
neg esi
test al 0x2
je r-xdata
or edi 0xffffffff
or esi 0xffffffff
jmp r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp eax [ ebp - 0x18 ]
jne r-xdata
cmp eax [ ebp - 0x18 ]
jb r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x40 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
mov esi 0x7fffffff
xor eax eax
mov esi 0x80000000
jmp r-xdata
or ecx 0x4
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp esi [ ebp - 0x1c ]
jne r-xdata
mov cl [ edi ]
inc edi
mov [ ebp - 0xc ] cl
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp ebx [ ebp - 0x20 ]
jb r-xdata
ja r-xdata
cmp edx [ ebp - 0x24 ]
jbe r-xdata
sub_4a65cf
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_4a524d
add esp 0xc
push 0x0
call sub_4a5a1c
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4a65f9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
shr eax 0xd
test al 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4ae8a5
pop ecx
mov eax edi
pop edi
push esi
call sub_4a66ef
push esi
mov edi eax
call sub_4ab074
push esi
call sub_4ac1a9
push eax
call sub_4ae72b
add esp 0x10
test eax eax
jns r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_4a8813
and [ esi + 0x1c ] 0x0
pop ecx
sub_4a666f
push 0x10
push r--data
call sub_4985c0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
shr eax 0xc
push esi
test al 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
and [ ebp - 0x1c ] 0x0
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4a65f9
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a66e5
mov eax esi
call sub_4ae8a5
pop ecx
jmp r-xdata
call sub_498606
retn
or eax 0xffffffff
jmp r-xdata
sub_4a66ef
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0xc ]
mov eax [ esi ]
and al 0x3
cmp al 0x2
je r-xdata
mov eax [ esi ]
test al 0xc0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
sub edi eax
mov [ ecx ] eax
and [ ecx + 0x8 ] 0x0
test edi edi
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
push edi
push eax
push ecx
call sub_4ac1a9
pop ecx
push eax
call sub_4af062
add esp 0xc
cmp edi eax
je r-xdata
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
push 0x10
pop eax
[ esi ] eax
or eax 0xffffffff
jmp r-xdata
push 0xfffffffd
pop eax
[ esi ] eax
pop edi
sub_4a6755
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4a66ef
pop ecx
test eax eax
je r-xdata
push esi
call sub_4a67a5
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
shr eax 0xb
test al 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4ac1a9
push eax
call sub_4aea63
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_4a67a5
push 0x1c
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x8
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov eax [ rw-data ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x2c ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a6874
cmp ebx 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov edi [ esi ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
call sub_498606
retn
mov eax [ ebp - 0x24 ]
add esi 0x4
jmp r-xdata
push edi
call sub_49b5bb
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4a684a
mov eax [ ebp - 0x2c ]
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push edi
call sub_4a6755
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ edi + 0xc ]
shr eax 0x1
test al 0x1
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_4a6755
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_4a687d
push 0xc
push r--data
call sub_4985c0
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4a6755
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a68ce
mov eax edi
push esi
call sub_4a67a5
pop ecx
jmp r-xdata
call sub_498606
retn
sub_4a68d6
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
sub [ edx + 0x8 ] 0x1
jns r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
pop ebp
retn
mov eax [ edx ]
mov cl [ eax ]
inc eax
mov [ edx ] eax
movzx eax cl
pop ebp
retn
push edx
call sub_4af4da
pop ecx
pop ebp
retn
sub_4a691d
push 0x10
push r--data
call sub_4985c0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push esi
call sub_4a68d6
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a6a15
mov eax esi
push esi
call sub_4ac1a9
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_498606
retn
mov ecx rw-data
mov eax ecx
cmp edx 0xfffffffe
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_4a8dc0
add esp 0xc
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x6
and eax 0x3f
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
mov ecx rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
test [ ecx + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
sar eax 0x6
and edx 0x3f
imul ecx edx 0x30
add ecx [ eax * 4 + rw-data ]
sub_4a6a1f
push 0x18
push r--data
call sub_4985c0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
setge al
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
cmp [ ebp + 0x10 ] eax
setne al
test eax eax
je r-xdata
call sub_498606
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push [ ebp + 0x10 ]
call sub_49b5bb
pop ecx
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
call sub_49e19e
pop ecx
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a6ada
mov eax ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor edi edi
inc edi
mov [ esi ] bl
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
push [ ebp + 0x10 ]
call sub_4a6912
pop ecx
mov [ ebp - 0x28 ] eax
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x20 ] esi
cmp al 0xa
je r-xdata
cmp esi [ ebp + 0x8 ]
je r-xdata
inc edi
jmp r-xdata
mov [ ebp - 0x24 ] edi
cmp edi [ ebp + 0xc ]
je r-xdata
sub_4a6aef
push 0x10
push r--data
call sub_4985c0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
setne al
test eax eax
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
cmp [ edi ] al
setne al
test eax eax
je r-xdata
call sub_498606
retn
cmp [ esi ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_4ae846
pop ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
jmp r-xdata
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_4af88f
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a6b99
mov eax esi
call sub_4aaf64
mov [ eax ] 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4a6bc7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub [ edx + 0x8 ] 0x1
jns r-xdata
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
pop ebp
retn
push edx
push [ ebp + 0x8 ]
call sub_4afc60
pop ecx
pop ecx
pop ebp
retn
sub_4a6bf0
push 0xc
push r--data
call sub_4985c0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push esi
push [ ebp + 0x8 ]
call sub_4a6bc7
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a6cec
mov eax edi
push esi
call sub_4ac1a9
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_498606
retn
mov ecx rw-data
mov eax ecx
cmp edx 0xfffffffe
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_4a8dc0
add esp 0xc
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x6
and eax 0x3f
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
mov ecx rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
test [ ecx + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
sar eax 0x6
and edx 0x3f
imul ecx edx 0x30
add ecx [ eax * 4 + rw-data ]
sub_4a6cf4
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
test esi esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div esi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test ecx ecx
je r-xdata
push ebx
push 0x0
push edi
call sub_49acf0
mov ecx [ ebp + 0x18 ]
add esp 0xc
lea eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
test eax 0x4c0
je r-xdata
or eax 0xffffffff
xor edx edx
div esi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x8 ] edx
jne r-xdata
imul esi [ ebp + 0x14 ]
mov edx ebx
mov [ ebp - 0x4 ] edi
mov edi esi
test esi esi
jmp r-xdata
mov eax [ ecx + 0xc ]
test eax 0x4c0
je r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
cmp edi [ ebp - 0xc ]
jb r-xdata
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
call sub_4af4da
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov eax 0x7fffffff
cmp edi eax
jbe r-xdata
js r-xdata
sub esi edi
xor edx edx
mov eax esi
div [ ebp + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
mov eax edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0x10
cmp edi eax
jae r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] cl
inc eax
mov ecx [ ebp + 0x18 ]
dec edi
mov [ ebp - 0x4 ] eax
dec edx
mov eax [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
cmp eax edx
ja r-xdata
xor edx edx
div [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
sub eax edx
mov edx [ ebp - 0x8 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax edx
ja r-xdata
mov eax edi
mov [ ebp - 0x14 ] edi
call sub_4aaf64
mov [ eax ] 0x22
jmp r-xdata
push ebx
push 0x0
push [ ebp + 0x8 ]
call sub_49acf0
add esp 0xc
push eax
push [ ebp - 0x4 ]
push ecx
call sub_4ac1a9
pop ecx
push eax
call sub_4b0271
add esp 0xc
test eax eax
je r-xdata
push eax
push [ ecx ]
push edx
push [ ebp - 0x4 ]
call sub_4a6f70
mov ecx [ ebp + 0x18 ]
add esp 0x10
mov eax [ ebp - 0x14 ]
sub edi eax
mov edx [ ebp - 0x8 ]
add [ ebp - 0x4 ] eax
sub [ ecx + 0x8 ] eax
add [ ecx ] eax
sub edx eax
jmp r-xdata
call sub_4aa9c1
push 0x8
jmp r-xdata
js r-xdata
test edi edi
mov eax [ ebp - 0x10 ]
pop ecx
[ eax ] ecx
mov edx [ ebp - 0x8 ]
sub edi eax
add [ ebp - 0x4 ] eax
sub edx eax
mov ecx [ ebp + 0x18 ]
jmp r-xdata
sub_4a6edd
push 0xc
push r--data
call sub_4985c0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a6cf4
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a6f68
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_498606
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_49acf0
add esp 0xc
sub_4a6f70
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_49acf0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_4aaf64
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop edi
sub_4a6ff6
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4a706f
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a703b
mov eax esi
call sub_498606
retn 0xc
sub_4a7047
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a6ff6
mov esp ebp
pop ebp
retn
sub_4a706f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_4aadfd
mov [ ebp - 0x4 ] al
mov eax [ esi ]
push [ eax ]
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax ]
mov eax [ esi + 0x4 ]
push [ eax ]
call sub_4a70b5
push edi
push [ ebp - 0x4 ]
mov esi eax
call sub_4aaeb2
add esp 0x1c
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4a70b5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
xor edx edx
div esi
cmp edi eax
ja r-xdata
lea eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
test eax 0x4c0
je r-xdata
mov edx 0x1000
mov edx [ ebx + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
imul esi edi
mov [ ebp - 0x4 ] edx
mov edi esi
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi edx
jb r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
movsx eax [ ecx ]
push ebx
push eax
call sub_4afc60
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
js r-xdata
sub esi edi
xor edx edx
mov eax esi
div [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x18 ]
inc ecx
dec edi
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] edx
test edx edx
jg r-xdata
mov eax edi
test edx edx
je r-xdata
push ebx
call sub_4a66ef
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push 0x10
pop ecx
[ eax ] ecx
cmp edi eax
jae r-xdata
test edi edi
jne r-xdata
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edi
xor edx edx
div [ ebp - 0x4 ]
mov eax edi
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
push eax
push ecx
push [ ebx ]
call sub_49a1f0
mov eax [ ebp - 0x8 ]
add esp 0xc
sub [ ebx + 0x8 ] eax
sub edi eax
mov ecx [ ebp + 0x8 ]
add [ ebx ] eax
add ecx eax
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax edi
mov [ ebp - 0x8 ] edi
push eax
push ecx
push ebx
call sub_4ac1a9
pop ecx
push eax
call sub_4af062
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jb r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
add [ ebp + 0x8 ] edx
sub edi edx
cmp eax ecx
jb r-xdata
mov edx eax
mov ecx [ ebp + 0x8 ]
sub_4a722e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
call sub_4a7047
pop ecx
pop ecx
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov esp ebp
pop ebp
retn
sub_4a7286
push 0x10
push r--data
call sub_4985c0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi 0x7fff
push edi
push esi
call sub_4ab304
pop ecx
pop ecx
cmp eax edi
sbb eax eax
neg eax
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xb
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4a7306
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a72fd
mov eax esi
call sub_498606
retn
sub_4a7306
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
call j_sub_4a3f80
mov edi eax
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x1 ]
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi ecx
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov edx [ edi ]
mov ecx edx
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
cmp ecx esi
jbe r-xdata
add edi 0x4
cmp [ edx + esi ] 0x3d
jne r-xdata
push esi
push [ ebp + 0x8 ]
push edx
call sub_4b0626
add esp 0xc
test eax eax
je r-xdata
mov eax [ edi ]
inc eax
add eax esi
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4a7376
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
push 0xb
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a73cb
add esp 0x10
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a73c2
mov eax esi
call sub_498606
retn
sub_4a73cb
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
test ebx ebx
jne r-xdata
and [ ebx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
push [ ebp + 0x14 ]
call sub_4a7306
mov edx eax
pop ecx
test edx edx
je r-xdata
mov [ edi ] 0x0
pop edi
xor eax eax
jmp r-xdata
mov ecx edx
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
inc ecx
mov [ ebx ] ecx
test esi esi
je r-xdata
cmp ecx esi
jbe r-xdata
push edx
push esi
push edi
call sub_4a889b
add esp 0xc
test eax eax
jne r-xdata
push 0x22
pop eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
sub_4a7489
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
lea eax [ ebp - 0xc ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_4a33cf
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4a74c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
lea eax [ ebp - 0xc ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_4a33cf
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4a74fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
lea eax [ ebp - 0xc ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_4a33cf
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4a7537
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
lea eax [ ebp - 0xc ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_4a33cf
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4a756f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
lea eax [ ebp - 0xc ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_4a33cf
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4a75aa
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4a7489
pop ecx
pop ecx
pop ebp
retn
sub_4a75d9
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4a74c4
pop ecx
pop ecx
pop ebp
retn
sub_4a7606
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4a74fc
pop ecx
pop ecx
pop ebp
retn
sub_4a7635
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4a7537
pop ecx
pop ecx
pop ebp
retn
sub_4a7662
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4a756f
pop ecx
pop ecx
pop ebp
retn
sub_4a76a0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push esi
push edi
lea edx [ ecx + eax ]
mov esi eax
mov edx ebx
cmp edi ebx
je r-xdata
jmp r-xdata
sub ebx eax
lea edx [ ecx + eax ]
cmp ebx ecx
ja r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
push edi
push esi
call [ r--data ]
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jle r-xdata
mov esi edx
mov edi ecx
cmp esi ebx
ja r-xdata
pop edi
pop esi
sub edi ebx
mov eax [ ebp + 0x10 ]
add esi eax
cmp esi ebx
jbe r-xdata
mov edi esi
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ edi + edx - 0x1 ]
mov [ edi + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub_4a7740
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
sub edi eax
lea ebx [ ebx ]
mov cl [ eax ]
lea eax [ eax + 0x1 ]
mov dl [ edi + eax - 0x1 ]
mov [ edi + eax - 0x1 ] cl
mov [ eax - 0x1 ] dl
sub esi 0x1
jne r-xdata
sub_4a7780
mov edi edi
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x104 ] ecx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x100 ] esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xfc ] edi
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov [ ebp - 0x108 ] 0x0
cmp edx 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
dec edx
imul edx edi
push ebx
add edx ecx
shr ebx 0x1
imul ebx edi
add ebx ecx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x110 ] ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push esi
push edi
push [ ebp - 0xf8 ]
push ecx
call sub_4a76a0
add esp 0x10
jmp r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push [ ebp - 0x104 ]
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
push [ ebp - 0x104 ]
call sub_4a7740
add esp 0xc
mov eax [ ebp - 0x108 ]
sub eax 0x1
mov [ ebp - 0x108 ] eax
js r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push [ ebp - 0xf8 ]
push [ ebp - 0x104 ]
call sub_4a7740
add esp 0xc
pop ebx
mov ecx [ ebp + eax * 4 - 0xf4 ]
mov edx [ ebp + eax * 4 - 0x7c ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov edi eax
mov esi [ ebp - 0x104 ]
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x114 ] eax
nop
push edi
push [ ebp - 0xf8 ]
push ebx
call sub_4a7740
add esp 0xc
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0x100 ]
add esi edx
mov [ ebp - 0x10c ] esi
cmp esi ebx
jae r-xdata
mov edi [ ebp - 0x114 ]
mov [ ebp - 0x10c ] esi
push ebx
push esi
mov ecx edi
call [ r--data ]
call edi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0xf8 ]
jle r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x100 ]
push ebx
push esi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
jle r-xdata
mov edx [ ebp - 0xfc ]
sub edi edx
cmp edi ebx
jbe r-xdata
add esi edx
cmp esi eax
ja r-xdata
cmp ebx esi
ja r-xdata
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edi
cmp edi esi
jb r-xdata
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
add esp 0x8
test eax eax
jg r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
add edi edx
cmp ebx edi
jae r-xdata
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edi
cmp esi edi
je r-xdata
mov edx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
lea esp [ esp ]
mov eax [ ebp - 0xf8 ]
cmp ebx edi
jne r-xdata
mov ebx esi
mov edx edi
mov esi [ ebp - 0x118 ]
sub ebx edi
mov esi [ ebp - 0x10c ]
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x100 ]
push ebx
push edi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
cmp ebx esi
jbe r-xdata
mov ebx esi
mov [ ebp - 0x110 ] ebx
jmp r-xdata
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ ebx + edx - 0x1 ]
mov [ ebx + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov esi [ ebp - 0x10c ]
mov ebx [ ebp - 0x110 ]
mov edx [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
cmp ebx edi
jae r-xdata
sub edi edx
cmp edi [ ebp - 0x104 ]
jbe r-xdata
sub edi edx
cmp edi ebx
jbe r-xdata
cmp ebx edi
jb r-xdata
mov ecx [ ebp - 0x104 ]
mov esi [ ebp - 0x100 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] esi
mov [ ebp + eax * 4 - 0x7c ] edx
inc eax
mov [ ebp - 0x108 ] eax
mov edi [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] ebx
mov [ ebp + eax * 4 - 0x7c ] edi
inc eax
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0xf8 ]
mov eax edi
mov ebx [ ebp - 0x104 ]
mov ecx edx
sub ecx esi
sub eax ebx
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0xfc ]
mov edx edi
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
mov ecx esi
mov esi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax edx
xor edx edx
sub eax ecx
div edi
lea ebx [ eax + 0x1 ]
cmp ebx 0x8
ja r-xdata
sub_4a7b25
push 0xc
push r--data
call sub_4985c0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_4ac1a9
mov edi eax
push esi
call sub_49b5bb
pop ecx
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push esi
call sub_4a66ef
pop ecx
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ebx
add esi 0xc
push 0xffffffe7
pop eax
[ esi ] eax
cmp edi 0xffffffff
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov edx rw-data
cmp edi 0xfffffffe
je r-xdata
push ebx
push ebx
push edi
call sub_4b0acb
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
push 0xfffffffc
pop eax
[ esi ] eax
mov ecx edi
sar ecx 0x6
mov eax edi
and eax 0x3f
imul edx eax 0x30
add edx [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a7be9
jmp r-xdata
push 0x10
pop eax
[ esi ] eax
movzx eax [ edx + 0x28 ]
and al 0xfd
mov [ edx + 0x28 ] al
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
call sub_498606
retn
sub_4a7c00
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4a7c10
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4a7d00
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_4a7d90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_4a7dd6
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x18 ]
call sub_49bede
mov eax [ ebp - 0x14 ]
xor ebx ebx
mov ecx [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
test eax eax
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ eax ] bl
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x10 ]
push ebx
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
add eax eax
push edi
push eax
call sub_4a884d
mov edi eax
pop ecx
test edi edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
pop ecx
jmp r-xdata
push edi
call sub_4a8813
pop ecx
pop edi
push [ ebp - 0x8 ]
push edi
push 0xffffffff
push [ ebp + 0x10 ]
push ebx
push [ ebp - 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ esi + esi ]
push eax
call sub_4a884d
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
jmp r-xdata
push esi
call sub_4a8813
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_4b1d00
add esp 0x18
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
pop ecx
push ebx
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xffffffff
push esi
push ebx
push [ ebp - 0x4 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x8 ]
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
pop ecx
jmp r-xdata
sub_4a7f05
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a7dd6
add esp 0x18
pop ebp
retn
sub_4a7f30
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4a7fc0
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
je r-xdata
sub ebx 0x4
jbe r-xdata
inc edx
sub ebx 0x1
jbe r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
test dl 0x3
jne r-xdata
sub_4a8040
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4a8164
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_4aaf64
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
mov [ edi ] 0x0
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ecx ] 0x0
call sub_4aaf64
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
sub_4a8220
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jb r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_4a8266
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4a524d
add esp 0xc
push 0x0
call sub_4a5a1c
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4a8292
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4a524d
add esp 0xc
push 0x0
call sub_4a5a1c
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4a82be
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4a524d
add esp 0xc
push 0x0
call sub_4a6329
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4a82ea
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4a524d
add esp 0xc
push 0x0
call sub_4a5c44
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4a8316
push 0xc
push r--data
call sub_4ac470
call sub_4a9bc5
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
call sub_4a519f
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_4a8352
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_49bede
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_4a85e6
pop ecx
pop ecx
test al al
je r-xdata
call sub_4aaf64
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_4b1e81
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x98 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4b20d7
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_4a849c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_49bede
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_4a8603
pop ecx
pop ecx
test al al
je r-xdata
call sub_4aaf64
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_4b1e81
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4b20d7
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_4a85e6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x2
push [ ebp + 0x8 ]
call sub_4a33cf
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_4a8603
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_4a33cf
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_4a8654
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4a8620
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_4a8684
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x61 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4a863a
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0xffffffe0
sub_4a86b4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
lea edx [ esi + 0xc ]
mov eax [ edx ]
shr eax 0xc
test al 0x1
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_4ac1a9
mov edx eax
mov edi rw-data
pop ecx
cmp edx 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ edx ]
mov ecx [ edx ]
test al 0x1
jne r-xdata
mov eax edi
cmp edx 0xfffffffe
je r-xdata
pop ebx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
and ecx 0x6
cmp cl 0x6
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
and eax 0x3f
mov ecx edx
imul eax eax 0x30
sar ecx 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jne r-xdata
push esi
call sub_4b2122
pop ecx
lea edx [ esi + 0xc ]
pop edi
pop esi
pop ebp
retn
test [ edi + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax [ edx ]
shr eax 0xc
dec [ esi ]
test al 0x1
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea edx [ esi + 0xc ]
mov eax edx
and edx 0x3f
imul edi edx 0x30
sar eax 0x6
add edi [ eax * 4 + rw-data ]
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
inc [ esi + 0x8 ]
push 0xfffffff7
pop eax
[ edx ] eax
xor eax eax
inc eax
[ edx ] eax
movzx eax bl
inc eax
mov [ esi ] eax
sub_4a87a3
push 0xc
push r--data
call sub_4985c0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
push esi
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_4a86b4
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a880b
mov eax edi
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
call sub_498606
retn
sub_4a8813
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4aaf64
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4aaeeb
pop ecx
mov [ esi ] eax
pop esi
sub_4a884d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
call sub_4aaf64
mov [ eax ] 0xc
xor eax eax
test esi esi
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_4a45d0
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4aaa18
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_4a889b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_4aaf64
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov [ edx ] cl
call sub_4aaf64
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_4aa9c1
sub_4a8911
push sub_4a88f5
call sub_4a8aeb
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
call sub_4a8b5f
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_4a8944
jmp r-xdata
sub_4a895f
push esi
push edi
mov edi rw-data
xor esi esi
call sub_4a899b
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x18
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_4a8b9c
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_4a899b
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_4a89ca
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
xor eax eax
[ ebx ] ecx
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_4a8a6a
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_49b423
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_4a8a6a
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push edi
xor eax eax
lea edi [ ebx * 4 + rw-data ]
[ edi ] ecx
mov ecx eax
test ecx ecx
je r-xdata
mov ebx [ ebx * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
sub_4a8aeb
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_4a89ca
mov esi eax
add esp 0x10
test esi esi
je r-xdata
pop esi
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call j_sub_49833e
call esi
pop esi
pop ebp
retn
sub_4a8b25
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_4a89ca
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call j_sub_49833e
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4a8b5f
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_4a89ca
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call j_sub_49833e
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4a8b9c
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_4a89ca
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_49833e
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4a8be2
mov eax [ rw-data ]
mov edx rw-data
push esi
and eax 0x1f
xor esi esi
push 0x20
pop ecx
sub ecx eax
mov eax rw-data
ror esi cl
xor ecx ecx
xor esi [ rw-data ]
cmp edx eax
sbb edx edx
and edx 0xfffffff7
add edx 0x9
inc ecx
mov [ eax ] esi
lea eax [ eax + 0x4 ]
cmp ecx edx
jne r-xdata
pop esi
retn
sub_4a8c1c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_4a8c70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4a8cc0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_498850
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4a8d80
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4a8c70
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a8d80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_4a8dc0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4a8e50
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4b2295
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4b22b4
jmp r-xdata
sub_4a8e50
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_497c4a
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4a8dc0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4a8e96
push ebp
push [ esp + 0x8 ]
call sub_49833e
add esp 0x4
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4a8dc0
add esp 0xc
pop ebp
retn 0x4
sub_4a8ebe
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4a8eee
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4a8f6c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_4a9008
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_49b423
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_4a9008
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 + rw-data ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
push ebx
mov ebx [ eax * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
sub_4a9083
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
inc eax
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
sub_4a90d1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_4a8f1e
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4a94d2
push eax
call [ CompareStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x24
sub_4a9145
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x4
sub_4a919b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_4a8f6c
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x4
sub_4a91f1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_4a8f6c
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x4
sub_4a9247
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_4a8f6c
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x8
sub_4a92a0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x9
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4a94d2
push eax
call [ GetDateFormatW@IAT ]
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x1c
sub_4a9322
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xf
call sub_4a8f6c
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x4
sub_4a9378
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x10
call sub_4a8f6c
add esp 0x10
mov esi eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4a94d2
push eax
call [ GetTimeFormatW@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x18
sub_4a93e8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x14
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0xc
sub_4a944a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x16
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4a94d2
push eax
call [ LCMapStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x24
sub_4a94d2
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x18
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_4b2373
pop ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x8
sub_4a952e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_4a8f52
mov esi eax
test esi esi
je r-xdata
call sub_4a519f
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn 0x10
sub_4a9590
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
push edi
mov ecx esi
call [ r--data ]
call esi
mov edi eax
test edi edi
je r-xdata
pop edi
push r--data
push r--data
push r--data
push 0xc
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push edi
mov ecx esi
call [ r--data ]
call esi
mov eax edi
jmp r-xdata
sub_4a960f
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x20
pop ecx
[ edi ]
mov al 0x1
pop edi
retn
sub_4a9635
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xe
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push ebx
push r--data
push r--data
push r--data
push 0x12
call sub_4a8f6c
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx eax
test ecx ecx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
xor al al
jmp r-xdata
push edi
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x0
push 0xc
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push ecx
mov ecx ebx
call [ r--data ]
call ebx
pop edi
test eax eax
jne r-xdata
pop ebx
mov al [ ebp - 0x8 ]
and al 0x1
sub_4a96db
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_4a8f6c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
jmp r-xdata
push 0x2
pop eax
mov ecx rw-data
xchg [ ecx ] eax
xor al al
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov ecx esi
call [ r--data ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx rw-data
inc ecx
xchg [ edx ] ecx
mov al 0x1
jmp r-xdata
pop esi
sub_4a9762
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_4a9798
mov edi edi
push esi
push edi
mov edi rw-data
xor esi esi
push 0x0
call sub_4a97f0
pop ecx
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x138
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_4a93e8
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_4a97f0
mov edi edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_4a9853
push 0x8
push r--data
call sub_4985c0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_4a9b7a
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a9897
call sub_498606
retn 0xc
sub_4a98a3
push 0x8
push r--data
call sub_4985c0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a98f8
call sub_498606
retn 0xc
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_4a8813
pop ecx
sub_4a9904
push 0x8
push r--data
call sub_4985c0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_4a9b7a
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a9943
call sub_498606
retn 0xc
sub_4a994f
push 0x8
push r--data
call sub_4985c0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a998b
call sub_498606
retn 0xc
sub_4a9997
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a98a3
mov esp ebp
pop ebp
retn
sub_4a99bf
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a9853
mov esp ebp
pop ebp
retn
sub_4a99e7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a9904
mov esp ebp
pop ebp
retn
sub_4a9a0f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a994f
mov esp ebp
pop ebp
retn
sub_4a9a37
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
push 0x43
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x350 ] ecx
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax + 0x48 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x172 ] cx
mov eax [ ebp + 0x8 ]
and [ eax + 0x34c ] 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_4a9a0f
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_4a99bf
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4a9ab0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_4a9ad1
push [ ebp + 0x8 ]
call sub_4a8813
pop ecx
pop ecx
sub_4a9ad1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx r--data
je r-xdata
push [ eax + 0x3c ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x28 ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x2c ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x40 ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x44 ]
call sub_4a8813
mov eax [ ebp + 0x8 ]
push [ eax + 0x360 ]
call sub_4a8813
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_4a9997
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
call sub_4a99e7
add esp 0x34
mov esp ebp
pop ebp
retn
push ecx
call sub_4a8813
mov eax [ ebp + 0x8 ]
pop ecx
sub_4a9b7a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
pop esi
test eax eax
je r-xdata
push [ esi + 0x4c ]
call sub_4acbd7
mov eax [ esi + 0x4c ]
pop ecx
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_4ac98e
pop ecx
cmp eax rw-data
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
push eax
call sub_4aca0b
pop ecx
sub_4a9bc5
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_4aaf77
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_4a91f1
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_4a9247
test eax eax
jne r-xdata
push eax
push esi
call [ SetLastError@IAT ]
mov eax edi
pop edi
pop esi
retn
push rw-data
push edi
call sub_4a9a37
push 0x0
call sub_4a8813
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
call sub_4a519f
call sub_4a8813
pop ecx
jmp r-xdata
sub_4a9c49
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_4aaf77
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_4a91f1
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_4a9247
test eax eax
jne r-xdata
push ebx
push esi
call [ SetLastError@IAT ]
mov ebx edi
push rw-data
push edi
call sub_4a9a37
push ebx
call sub_4a8813
add esp 0xc
test edi edi
jne r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
jmp r-xdata
call sub_4a8813
pop ecx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_4a9cce
push sub_4a9ab0
call sub_4a9145
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_4a9c49
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
push eax
call sub_4a9cfa
pop ecx
jmp r-xdata
sub_4a9d14
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + esi ]
mov [ ebp - 0x4 ] eax
mov eax 0x2000
cmp esi eax
jl r-xdata
push esi
call sub_4addd3
mov eax [ rw-data ]
pop ecx
cmp esi eax
jle r-xdata
mov esi eax
push edi
xor edi edi
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
inc edi
add eax 0x4
inc ebx
mov [ ebp - 0x4 ] eax
cmp edi esi
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov dl [ ebx ]
test dl 0x1
je r-xdata
test dl 0x8
jne r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov eax [ ebp - 0x4 ]
add edx [ ecx * 4 + rw-data ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov al [ ebx ]
mov [ edx + 0x28 ] al
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
sub_4a9dca
mov edi edi
push ebx
push esi
push edi
xor edi edi
mov eax edi
mov [ esi + 0x28 ] 0x81
sub eax 0x0
je r-xdata
cmp [ esi + 0x18 ] 0xfffffffe
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
or [ esi + 0x28 ] 0x80
jmp r-xdata
xor eax eax
test ebx ebx
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
inc edi
cmp edi 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
mov [ esi + 0x18 ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
and eax 0xff
mov [ esi + 0x18 ] ebx
cmp eax 0x2
jne r-xdata
push ebx
call [ GetFileType@IAT ]
jmp r-xdata
pop eax
push eax
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul esi eax 0x30
add esi [ ecx * 4 + rw-data ]
cmp [ esi + 0x18 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
cmp eax 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
jmp r-xdata
test eax eax
je r-xdata
or [ esi + 0x28 ] 0x8
jmp r-xdata
sub_4a9e80
push 0xc
push r--data
call sub_4985c0
push 0x7
call sub_4a97d9
pop ecx
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
push ebx
call sub_4addd3
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a9ecd
mov al bl
call sub_498606
retn
call sub_4a9d14
call sub_4a9dca
mov bl 0x1
mov [ ebp - 0x19 ] bl
sub_4a9ed8
push esi
xor esi esi
add esi 0x4
cmp esi 0x200
jb r-xdata
push eax
call sub_4add9e
and [ esi + rw-data ] 0x0
pop ecx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov al 0x1
pop esi
retn
sub_4a9f1b
push 0x8
push r--data
call sub_4985c0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4a9f86
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4a9f52
call sub_498606
retn 0xc
sub_4a9f5e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4a9f1b
mov esp ebp
pop ebp
retn
sub_4a9f86
mov edi edi
push esi
mov esi ecx
push 0xc
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x21c ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0xc
push eax
push 0xc
push rw-data
call sub_4aa6a6
mov eax [ esi ]
mov ecx 0x101
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x18
push eax
push ecx
push rw-data
call sub_4aa6a6
mov eax [ esi ]
mov ecx 0x100
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x119
push eax
push ecx
push rw-data
call sub_4aa6a6
mov eax [ rw-data ]
add esp 0x30
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
pop esi
retn
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_4a8813
pop ecx
sub_4aa04a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4aa088
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_49bede
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4aa0fb
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_49acf0
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ecx 0x1
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4aa160
mov edi edi
push ebp
mov ebp esp
sub esp 0x720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x718 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x720 ] eax
mov eax ebx
cmp [ ebp - 0x71c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x712 ]
lea ecx [ ebp - 0x712 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x71c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x720 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x704 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_4ac851
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_4b20d7
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_4b20d7
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x704 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_4aa2f4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
call sub_4a9bc5
mov [ ebp - 0x4 ] eax
call sub_4aa413
push [ ebp + 0x8 ]
call sub_4aa088
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + 0x48 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ebx
push esi
push edi
push 0x220
call sub_4a884d
mov edi eax
or ebx 0xffffffff
pop ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi ebx
mov esi [ ebp - 0x4 ]
mov ecx 0x88
mov esi [ esi + 0x48 ]
[ edi ] [ esi ]
mov edi eax
push edi
push [ ebp - 0xc ]
and [ edi ] 0x0
call sub_4aa4b5
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
[ eax ] ebx
dec ebx
jne r-xdata
call sub_4a372f
mov [ edi ] 0x1
mov ecx edi
mov eax [ ebp - 0x4 ]
xor edi edi
mov [ eax + 0x48 ] ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] rw-data
je r-xdata
push edi
call sub_4a8813
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
test [ rw-data ] 0x1
jne r-xdata
push [ eax + 0x48 ]
call sub_4a8813
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x5
call sub_4a9f5e
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
sub_4aa413
push 0xc
push r--data
call sub_4985c0
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_4a9bc5
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x5
call sub_4a97d9
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x48 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4aa4a4
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x48 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x48 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
[ esi ]
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_498606
retn
call sub_4a519f
cmp esi rw-data
je r-xdata
push esi
call sub_4a8813
pop ecx
sub_4aa4b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_4aa088
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_4aa0fb
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_49acf0
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_4aa04a
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
sub edi 0x1
jne r-xdata
push esi
call sub_4aa160
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_49acf0
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_4aa0fb
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
sub ecx 0x1
jne r-xdata
push [ esi + 0x4 ]
call sub_4aa04a
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_4aa6a6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_49acf0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_4aaf64
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop edi
sub_4aa727
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
push esi
mov esi edi
push ebx
mov al 0x1
jmp r-xdata
add esi 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx ebx
call [ r--data ]
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
cmp esi edi
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
add esi 0xfffffffc
pop ebx
pop esi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp [ esi - 0x4 ] 0x0
je r-xdata
push 0x0
mov ecx ebx
call [ r--data ]
call ebx
pop ecx
sub_4aa7aa
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
add esi 0xfffffffc
push edi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
mov ecx edi
call [ r--data ]
call edi
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_4aa7f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
push 0x50
lea eax [ ebp - 0x320 ]
push 0x0
push eax
call sub_49acf0
push 0x2cc
lea eax [ ebp - 0x2d0 ]
push 0x0
push eax
call sub_49acf0
lea eax [ ebp - 0x320 ]
add esp 0x18
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_498553
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_497c4a
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_498553
pop ecx
sub_4aa946
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_4a9c49
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x14 ]
xor esi [ rw-data ]
and ecx 0x1f
push [ ebp + 0x10 ]
ror esi cl
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ eax + 0x35c ]
test esi esi
je r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x14
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
call sub_4aa9d1
int3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_4aa9d1
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_4aa7f7
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_4aaa18
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_4aaa5c
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
sub_4aaa5c
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4aaaa5
mov eax esi
call sub_498606
retn
sub_4aaaae
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4aaafc
mov eax esi
call sub_498606
retn 0xc
sub_4aab08
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4aaaae
mov esp ebp
pop ebp
retn
sub_4aab30
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
sub eax 0x1
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x9
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x6
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x1
je r-xdata
xor eax eax
pop ebp
retn
sub_4aab72
mov edi edi
push ebp
mov ebp esp
imul ecx [ r--data ] 0xc
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_4aab9a
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push eax
push 0x3
call sub_4aab08
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4aabb1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_49b442
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_49b442
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_49b442
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_49b442
pop ebp
retn
sub_4aabf5
push 0x2c
push r--data
call sub_4ac470
xor ebx ebx
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x34 ] ebx
mov cl 0x1
mov [ ebp - 0x1d ] cl
mov esi [ ebp + 0x8 ]
push 0x8
pop edi
cmp esi edi
jg r-xdata
cmp esi 0xb
je r-xdata
je r-xdata
call sub_4a9c49
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
cmp esi 0xf
je r-xdata
lea eax [ esi - 0x1 ]
sub eax 0x1
je r-xdata
push [ ebx ]
push esi
call sub_4aab72
pop ecx
pop ecx
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4aab30
add esp 0x4
jmp r-xdata
cmp esi 0x14
jle r-xdata
dec eax
sub eax 0x1
je r-xdata
add eax 0x8
xor cl cl
mov [ ebp - 0x1d ] cl
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
jmp r-xdata
call sub_4ac4b9
retn
mov [ ebp - 0x28 ] eax
and [ ebp - 0x30 ] 0x0
test cl cl
je r-xdata
cmp esi 0x16
jg r-xdata
dec eax
sub eax 0x1
jne r-xdata
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1e ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
test cl cl
je r-xdata
push 0x3
call sub_4a97d9
pop ecx
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov edx [ eax ]
mov edx [ rw-data ]
mov ecx edx
and ecx 0x1f
xor edx [ eax ]
ror edx cl
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4aadb5
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x24 ] eax
xor edx edx
cmp eax 0x1
sete dl
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1e ] dl
test dl dl
jne r-xdata
xor eax eax
cmp esi edi
jne r-xdata
cmp esi edi
je r-xdata
test cl cl
je r-xdata
push esi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
call sub_4a9bc5
push [ eax + 0x8 ]
push edi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
and [ ebx + 0x4 ] 0x0
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x3
call sub_4a36cb
push 0x3
call sub_4a9821
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x4 ] eax
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi edi
je r-xdata
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
call sub_4aabec
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
call sub_4aabec
mov [ eax ] 0x8c
cmp esi 0x4
jne r-xdata
call sub_4a9bc5
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
cmp esi 0x4
jne r-xdata
imul eax [ r--data ] 0xc
add eax [ ebx ]
imul ecx [ r--data ] 0xc
add ecx eax
cmp esi edi
jne r-xdata
and [ eax + 0x8 ] 0x0
add eax 0xc
jmp r-xdata
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
sub_4aadfd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4ac1a9
push eax
call sub_4b23ae
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
push edi
push 0x1
call sub_49b55f
pop ecx
push 0x2
pop ebx
cmp esi eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
call sub_49b55f
pop ecx
cmp esi eax
jne r-xdata
mov edi rw-data
jmp r-xdata
pop esi
pop ebp
retn
xor al al
mov edi rw-data
inc [ rw-data ]
lea ecx [ esi + 0xc ]
mov eax [ ecx ]
test eax 0x4c0
jne r-xdata
mov eax 0x282
[ ecx ] eax
mov eax [ edi ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x1000
mov [ esi + 0x18 ] 0x1000
push 0x1000
call sub_4a884d
push 0x0
mov [ edi ] eax
call sub_4a8813
mov eax [ edi ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
lea ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_4aaeb2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0x9
test al 0x1
je r-xdata
pop edi
pop esi
push esi
call sub_4a66ef
pop ecx
mov eax 0xfffffd7f
[ edi ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
sub_4aaeeb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4aaf2e
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4aaf51
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4aaeeb
pop ecx
mov esi eax
call sub_4aaf64
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4aaf77
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jb r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0xc
xor eax eax
call sub_4a45d0
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4aaa18
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_4aafd4
push 0x10
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
push 0x8
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4ab06b
mov eax [ ebp - 0x1c ]
call sub_498606
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4a8813
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4a666f
pop ecx
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
sub_4ab074
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0xd
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edi ]
shr eax 0x6
test al 0x1
je r-xdata
push [ esi + 0x4 ]
call sub_4a8813
pop ecx
mov eax 0xfffffebf
[ edi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_4ab0b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
movzx eax [ esi ]
push eax
call sub_4b1e81
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp [ edi + 0x4 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4aaf64
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
push esi
push 0x9
push [ edi + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
jmp r-xdata
sub_4ab1c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_49bede
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_4aaf64
push 0x2a
pop esi
mov [ eax ] esi
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_49acf0
add esp 0xc
push edi
push esi
push ebx
call sub_49acf0
add esp 0xc
sub_4ab304
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edx
mov eax [ ebp + 0xc ]
add eax edx
cmp edx eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx edx
cmp [ ecx ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
cmp ecx eax
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_4ab42b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub edx ecx
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
pop edi
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
jmp r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
sub_4ab5e2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_4acc58
mov [ esi ] eax
sub_4ab60f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_4aa413
mov [ esi ] eax
sub_4ab63c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x7ff
push ebx
push esi
xor edx edx
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax esi
shr eax 0x14
and eax ecx
push edi
cmp eax ecx
jne r-xdata
xor eax eax
cmp edx edx
jne r-xdata
mov edi esi
mov eax ebx
and edi 0xfffff
or eax edi
jne r-xdata
mov ecx esi
mov eax edx
and ecx 0x80000000
or eax ecx
mov eax 0x80000
je r-xdata
inc eax
jmp r-xdata
and esi eax
or edx esi
je r-xdata
cmp ebx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
cmp edi eax
jne r-xdata
pop eax
jmp r-xdata
push 0x4
sub_4ab6a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax + 0x4 ]
mov eax edx
and ecx 0x80000000
or eax ecx
je r-xdata
mov al dl
pop ebp
retn
inc edx
sub_4ab6c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
xor ebx ebx
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
push [ ebp + 0x28 ]
mov [ esi ] bl
call sub_49bede
lea eax [ edi + 0xb ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax ecx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_4aaf64
push 0x22
pop edi
mov [ eax ] edi
call sub_4aa9c1
jmp r-xdata
and ecx 0x80000000
mov eax ebx
or eax ecx
je r-xdata
cmp ebx ebx
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ edx + 0x4 ]
xor ebx ebx
cmp [ ebp + 0x20 ] bl
push 0x30
sete bl
mov [ ebp - 0xc ] 0x3ff
dec ebx
xor eax eax
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
or eax ecx
mov [ ebp - 0x1c ] ebx
pop eax
jne r-xdata
mov [ esi ] 0x2d
inc esi
push ebx
push [ ebp + 0x24 ]
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push edx
call sub_4ab9c9
mov edi eax
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
and [ ecx + 0x350 ] 0xfffffffd
mov [ esi ] 0x31
inc esi
mov [ esi ] al
inc esi
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x65
push esi
call sub_49af80
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] bl
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x3fe
jmp r-xdata
and [ ebp - 0xc ] ecx
jmp r-xdata
mov edi ebx
jmp r-xdata
cmp [ ebp + 0x20 ] bl
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] bl
and [ ebp - 0x4 ] 0x0
mov ecx 0xf0000
push 0x30
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x10 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0x18 ] ecx
test edi edi
jne r-xdata
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_4ac450
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_4ac450
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x4 ]
shrd eax ecx 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_49acf0
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x20 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_4ac450
mov ecx eax
xor ebx ebx
and ecx 0x7ff
sub ecx [ ebp - 0xc ]
sbb ebx ebx
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx 0x0
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp esi edi
jne r-xdata
mov eax 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
test ecx ecx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push 0x0
push 0xa
push ebx
push ecx
call sub_4ae1d0
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
push 0x0
push eax
push ebx
push ecx
call sub_4ae1d0
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
cmp esi edi
jne r-xdata
cmp ecx eax
jb r-xdata
mov edi esi
push 0x30
pop eax
mov [ esi ] al
test ebx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x30
pop eax
add cl al
xor edi edi
mov [ esi ] cl
mov [ esi + 0x1 ] 0x0
jg r-xdata
push 0x0
push 0x64
push ebx
push ecx
call sub_4ae1d0
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_4ab9c9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push esi
mov esi [ ebp + 0x1c ]
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea edi [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_4b24ea
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
mov edi [ ebp + 0xc ]
push ecx
xor ecx ecx
cmp [ ebp - 0xc ] 0x2d
sete cl
xor eax eax
test esi esi
setg al
add ecx edi
add eax ecx
push eax
call sub_4b2404
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
xor eax eax
test esi esi
setg al
sub ecx eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x10 ]
push edi
call sub_4aba64
add esp 0x20
mov [ edi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4aba64
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jle r-xdata
xor eax eax
mov eax edi
jmp r-xdata
push ebx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
mov dl [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
test dl dl
je r-xdata
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax [ ebp + 0x1c ]
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
test edi edi
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
push [ ebp + 0xc ]
push ebx
call sub_4abed3
mov dl [ ebp + 0x20 ]
add esp 0x10
test edi edi
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
test dl dl
sete al
add eax edi
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_4a889b
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] al
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ edx + 0x4 ]
sub edx 0x1
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop edi
cmp edx edi
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_49a770
add esp 0xc
push 0xa
pop edi
cmp edx edi
jl r-xdata
mov eax edx
cdq
idiv edi
add [ esi + 0x2 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv edi
add [ esi + 0x3 ] al
sub_4abbaf
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
push edi
push [ ebp + 0x18 ]
lea edi [ ebp - 0xc ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_4b24ea
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
xor eax eax
cmp [ ebp - 0xc ] 0x2d
push ecx
sete al
add eax esi
push eax
call sub_4b2404
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
push [ ebp + 0x20 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x10 ]
push esi
call sub_4abc3c
add esp 0x18
mov [ esi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4abc3c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
call sub_49bede
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
dec ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ edx ] 0x2d
mov esi ebx
jne r-xdata
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + ebx ] 0x30
add esi eax
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_4abed3
add esp 0x10
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_4abed3
mov eax [ ebp - 0xc ]
add esp 0x10
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jns r-xdata
test edi edi
jle r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edi ecx
neg edi
mov eax ecx
neg eax
cmp eax edi
jge r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call sub_4abed3
push edi
push 0x30
push esi
call sub_49acf0
add esp 0x1c
sub_4abd13
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x18 ]
xor eax eax
lea edi [ ebp - 0x10 ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_4b24ea
mov eax [ ebp - 0xc ]
xor ecx ecx
mov ebx [ ebp + 0xc ]
add esp 0x18
cmp [ ebp - 0x10 ] 0x2d
sete cl
dec eax
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
lea esi [ ecx + ebx ]
cmp [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push esi
call sub_4b2404
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax ecx
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x4 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edi
push [ ebp + 0x10 ]
push ebx
call sub_4aba64
add esp 0x20
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl cl
je r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call sub_4abc3c
add esp 0x18
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
mov [ esi - 0x2 ] al
sub_4abddb
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov bl [ ebp + 0xc ]
movzx eax bl
add eax 0x4
cmp edx eax
jae r-xdata
test bl bl
je r-xdata
push 0xc
mov [ ecx ] 0x0
pop eax
mov eax r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x44 ] eax
xor ebx ebx
cmp [ ebp + 0x18 ] bl
mov [ ebp - 0x40 ] eax
mov eax r--data
mov [ ebp - 0x3c ] eax
setne bl
mov [ ebp - 0x38 ] eax
dec ebx
mov eax r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x2c ] eax
and ebx 0x2
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
mov [ ebp - 0x14 ] r--data
push edi
lea edi [ eax * 4 - 0x4 ]
mov [ ebp - 0x34 ] esi
lea eax [ edi + ebx ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] r--data
mov esi [ ebp + eax * 4 - 0x44 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x48 ] eax
mov [ ecx ] 0x2d
inc ecx
dec edx
mov [ ecx ] 0x0
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi [ ebp - 0x48 ]
cmp esi edx
sbb eax eax
inc edi
add eax edi
add eax ebx
push [ ebp + eax * 4 - 0x44 ]
push edx
push ecx
call sub_4a889b
add esp 0xc
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
sub_4abed3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
lea eax [ ecx + 0x1 ]
push eax
lea eax [ esi + edx ]
push esi
push eax
call sub_49a770
add esp 0xc
pop edi
pop esi
sub_4abf07
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov esi [ ebp + 0x1c ]
cmp esi 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp esi 0x45
je r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x10
or eax 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_4ab63c
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
cmp esi 0x46
je r-xdata
push 0x2
push 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4ab6a8
pop ecx
movzx eax al
push eax
push [ ebp - 0x8 ]
call sub_4abddb
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi 0x47
jne r-xdata
sub esi 0x65
je r-xdata
pop eax
cmp esi 0x61
jg r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x8
or eax 0x0
jne r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4ab9c9
sub esi 0x1
je r-xdata
push [ ebp + 0x2c ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4ab6c6
jmp r-xdata
sub esi 0x41
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4abbaf
add esp 0x1c
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4abd13
jmp r-xdata
add esp 0x24
sub esi 0x4
jmp r-xdata
push [ ebp + 0x2c ]
je r-xdata
sub_4ac051
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add [ eax + 0x8 ] 0xfffffffe
mov edx [ ebp + 0xc ]
cmp [ edx + 0x8 ] 0x0
jge r-xdata
mov ecx [ edx ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edx ] 0x2
pop ebp
retn
movzx eax [ ebp + 0x8 ]
push edx
push eax
call sub_4afc6b
pop ecx
pop ecx
pop ebp
retn
sub_4ac083
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push ebx
push esi
push edi
call sub_4ac1a9
mov ebx rw-data
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
push [ ebp + 0x8 ]
call sub_4ac051
pop ecx
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_4ac1a9
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_497c4a
mov esp ebp
pop ebp
retn
push edi
push [ ebp + 0x8 ]
call sub_4ac051
pop ecx
pop ecx
cmp al 0x1
je r-xdata
push edi
call sub_4ac1a9
mov esi eax
push edi
sar esi 0x6
call sub_4ac1a9
and eax 0x3f
imul eax eax 0x30
pop ecx
pop ecx
add eax [ esi * 4 + rw-data ]
jmp r-xdata
push edi
call sub_4ac1a9
pop ecx
cmp eax 0xffffffff
je r-xdata
mov al [ eax + 0x29 ]
cmp al 0x2
je r-xdata
test [ ebx + 0x28 ] 0x80
je r-xdata
push edi
call sub_4ac1a9
pop ecx
cmp eax 0xfffffffe
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4ab2e7
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_4ac1a9
mov esi eax
push edi
sar esi 0x6
call sub_4ac1a9
and eax 0x3f
imul ebx eax 0x30
pop ecx
pop ecx
add ebx [ esi * 4 + rw-data ]
mov eax 0xffff
jmp r-xdata
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
pop esi
pop ebx
mov ax [ ebp + 0x8 ]
jmp r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_4a6bc7
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
sub_4ac1a9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
pop ebp
retn
sub_4ac1f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4ac285
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_4a9bc5
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_4ab5e2
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_4ac2ab
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
sub_4ac30a
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_49bede
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x1c ]
sar eax 0x8
mov [ ebp - 0x24 ] eax
push ecx
movzx eax al
push eax
call sub_4b1e81
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] bl
xor ecx ecx
mov [ ebp - 0xf ] al
inc ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] al
xor eax eax
push 0x2
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] al
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
movzx eax [ ebp - 0xc ]
cmp [ ebp - 0x14 ] al
je r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x1c ]
push 0x1
push [ eax + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push 0x1
push eax
call sub_4ac851
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
and [ eax + 0x350 ] 0xfffffffd
sub_4ac3f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4ac430
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_4ac450
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_4ac470
push sub_498850
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_4ac4ca
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_4a9bc5
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_4ab5e2
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4ac4f1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
push eax
call sub_4a8813
pop ecx
sub_4ac5ef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4a8813
pop ecx
push eax
call sub_4a8813
pop ecx
sub_4ac658
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + eax * 4 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_4a8813
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_4ac694
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push 0x7
push esi
call sub_4ac658
lea eax [ esi + 0x1c ]
push 0x7
push eax
call sub_4ac658
lea eax [ esi + 0x38 ]
push 0xc
push eax
call sub_4ac658
lea eax [ esi + 0x68 ]
push 0xc
push eax
call sub_4ac658
lea eax [ esi + 0x98 ]
push 0x2
push eax
call sub_4ac658
push [ esi + 0xa0 ]
call sub_4a8813
push [ esi + 0xa4 ]
call sub_4a8813
push [ esi + 0xa8 ]
call sub_4a8813
lea eax [ esi + 0xb4 ]
push 0x7
push eax
call sub_4ac658
lea eax [ esi + 0xd0 ]
push 0x7
push eax
call sub_4ac658
add esp 0x44
lea eax [ esi + 0xec ]
push 0xc
push eax
call sub_4ac658
lea eax [ esi + 0x11c ]
push 0xc
push eax
call sub_4ac658
lea eax [ esi + 0x14c ]
push 0x2
push eax
call sub_4ac658
push [ esi + 0x154 ]
call sub_4a8813
push [ esi + 0x158 ]
call sub_4a8813
push [ esi + 0x15c ]
call sub_4a8813
push [ esi + 0x160 ]
call sub_4a8813
add esp 0x28
sub_4ac778
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov edx edi
xor esi esi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add edx 0x2
sub ecx 0x1
jne r-xdata
sub ebx edx
cmp [ edx ] si
je r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov [ edi ] ax
call sub_4aaf64
push 0x22
jmp r-xdata
movzx eax [ ebx + edx ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_4aa9c1
sub_4ac7ed
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_4aaf64
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
xor eax eax
mov [ edx ] ax
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
xor eax eax
mov [ edx ] ax
call sub_4aaf64
push 0x22
jmp r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_4aa9c1
sub_4ac851
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_49bede
mov ecx [ ebp + 0x1c ]
test ecx ecx
jne r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
and eax ecx
lea ecx [ ebx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_4ac96e
pop ecx
push ebx
push edi
push esi
call sub_49acf0
add esp 0xc
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
push eax
call sub_4a884d
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
call sub_4b3da0
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_4ac96e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4a8813
pop ecx
sub_4ac98e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_4acb55
pop ecx
pop esi
pop ebp
retn
[ edx ]
sub_4aca0b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
push [ esi + 0x9c ]
call sub_4acb7e
pop ecx
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_4a8813
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_4a8813
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_4a8813
push [ esi + 0x8c ]
call sub_4a8813
add esp 0x10
cmp [ eax ] 0x0
jne r-xdata
add ebx 0x4
add edi 0x10
sub eax 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4a8813
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4a8813
push [ ebx ]
call sub_4a8813
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4a8813
pop ecx
push [ esi + 0x7c ]
call sub_4a8813
push [ esi + 0x88 ]
call sub_4a8813
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4a8813
push [ esi + 0x88 ]
call sub_4ac4f1
pop ecx
pop ecx
push eax
call sub_4a8813
push [ esi + 0x88 ]
call sub_4ac5ef
pop ecx
pop ecx
sub_4acb55
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
xor eax eax
inc eax
[ ecx + 0xb0 ] eax
inc eax
pop ebp
retn
sub_4acb7e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp esi r--data
je r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
jne r-xdata
push esi
call sub_4ac694
push esi
call sub_4a8813
pop ecx
pop ecx
sub_4acbae
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
or eax 0xffffffff
[ ecx + 0xb0 ] eax
dec eax
pop ebp
retn
sub_4acbd7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_4acbae
pop ecx
pop esi
[ edx ]
sub_4acc58
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
call sub_4a9bc5
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x4
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ edi + 0x4c ]
push eax
call sub_4acccf
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4accbe
test esi esi
jne r-xdata
mov esi [ edi + 0x4c ]
test esi esi
jne r-xdata
mov eax esi
call sub_498606
retn
call sub_4a519f
sub_4acccf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ eax ]
cmp edi esi
jne r-xdata
push esi
mov [ eax ] esi
call sub_4ac98e
pop ecx
test edi edi
je r-xdata
mov eax esi
jmp r-xdata
push edi
call sub_4acbd7
cmp [ edi + 0xc ] 0x0
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi rw-data
je r-xdata
push edi
call sub_4aca0b
pop ecx
jmp r-xdata
sub_4acd1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4acd37
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x4 ] ecx
mov edx eax
add eax 0x3
sar edx 0x2
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0xc ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x3f2a
push eax
push [ esi ]
mov [ ebp - 0x2 ] cl
call sub_4b3f50
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp - 0x4 ]
push edx
call sub_4a3a87
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edx edi
mov ebx ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ esi ]
call sub_4acf5d
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push [ esi ]
call sub_4acec7
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov edx eax
mov [ ebp - 0xc ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
inc ebx
mov eax [ ebp - 0x8 ]
add ebx ecx
add edx 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4ad0e1
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
mov [ eax ] esi
mov eax esi
sub eax edi
mov [ ebp - 0x14 ] eax
push 0x0
call sub_4a8813
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x8 ]
lea eax [ ecx + 0x1 ]
push eax
push [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
sub eax edx
add eax [ ebp - 0x4 ]
push eax
push edx
call sub_4a8215
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + edi ] edx
add edi 0x4
add edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
sub_4acec7
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
or eax 0xffffffff
push edi
mov edi [ ebp + 0x10 ]
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push ebx
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x1
push ebx
call sub_4aaf77
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_4a8215
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_4a8215
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_4ad106
push 0x0
mov esi eax
call sub_4a8813
pop ecx
mov eax esi
pop esi
pop ebx
sub_4acf5d
mov edi edi
push ebp
mov ebp esp
sub esp 0x150
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x148 ] esi
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov al [ ecx ]
cmp al 0x2f
je r-xdata
mov dl [ ecx ]
cmp dl 0x3a
jne r-xdata
cmp al 0x5c
je r-xdata
xor edi edi
cmp dl 0x2f
je r-xdata
lea eax [ ebx + 0x1 ]
cmp ecx eax
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
inc eax
cmp dl 0x5c
je r-xdata
push esi
xor edi edi
push edi
push edi
push ebx
call sub_4acec7
add esp 0x10
jmp r-xdata
push ecx
push ebx
call sub_4b3f90
pop ecx
pop ecx
mov ecx eax
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
sar ecx 0x2
mov [ ebp - 0x150 ] ecx
push eax
push edi
push edi
push ebx
call sub_4acec7
add esp 0x10
cmp dl 0x3a
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
push eax
push [ ebp - 0x14c ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
call sub_4acec7
add esp 0x10
test eax eax
jne r-xdata
mov cl [ ebp - 0x117 ]
test cl cl
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x144 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
mov eax [ ebp - 0x148 ]
jne r-xdata
cmp cl 0x2e
jne r-xdata
movzx eax al
sub ecx ebx
inc ecx
neg eax
push 0x140
sbb eax eax
and eax ecx
mov [ ebp - 0x14c ] eax
lea eax [ ebp - 0x144 ]
push edi
push eax
call sub_49acf0
add esp 0xc
lea eax [ ebp - 0x144 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExA@IAT ]
mov esi eax
mov eax [ ebp - 0x148 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x118 ] 0x2e
jne r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x150 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x116 ] 0x0
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_4acd1f
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_4a7780
add esp 0x10
jmp r-xdata
sub_4ad0e1
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_4a8813
pop ecx
add esi 0x4
push [ edi ]
call sub_4a8813
pop ecx
pop edi
pop esi
retn
sub_4ad106
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_4ad13b
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_4a8813
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4ad13b
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_4aaf77
push 0x0
mov [ esi ] eax
call sub_4a8813
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_4ad762
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_4a8813
pop ecx
mov eax esi
pop ebx
sub_4ad1cd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
movzx esi [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x14 ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_4ad23e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_4ad2e9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x1
jl r-xdata
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov ax [ ebp - 0x4 ]
xor ecx ecx
mov edx ecx
push edi
mov edi 0x80000
test al 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xffffffc0
mov [ ebp - 0xc ] eax
ldmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
test al 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or ecx edx
mov eax ecx
pop edi
jmp r-xdata
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test al 0x2
je r-xdata
or ecx 0x1
or edx edi
or ecx edi
sub_4ad3c7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_4ad6c9
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_4ad23e
push eax
mov [ ebp - 0xc ] eax
call sub_4b4034
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_4ad6c9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_4ad76d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edi edi
push ebx
call sub_4b4156
pop ecx
mov edi eax
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
imul esi [ ebp + 0x10 ]
push esi
push ebx
call sub_4b0719
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
sub esi edi
lea eax [ ebx + edi ]
push esi
push 0x0
push eax
call sub_49acf0
add esp 0xc
sub_4ad7da
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ edx ] di
je r-xdata
lea eax [ edx + 0x2 ]
pop edi
pop ebp
retn
push esi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
sar ecx 0x1
lea edx [ edx + ecx * 2 ]
add edx 0x2
cmp [ edx ] di
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
pop esi
sub_4ad811
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor edi edi
test esi esi
je r-xdata
mov ebx edi
push esi
call sub_4ad7da
pop ecx
push edi
push edi
push edi
mov ebx eax
push edi
sub ebx esi
sar ebx 0x1
push ebx
push esi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
call [ FreeEnvironmentStringsW@IAT ]
push eax
call sub_4a884d
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ebx ebx
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push edi
push ebx
push esi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ebx edi
xor edi edi
jmp r-xdata
push edi
call sub_4a8813
pop ecx
jmp r-xdata
sub_4ad894
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
push 0x3d
push ebx
mov edi ebx
call sub_49ae50
mov [ ebp - 0xc ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x16
cmp eax ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x1 ] 0x0
mov esi [ rw-data ]
sete al
mov [ ebp - 0x1 ] al
cmp esi [ rw-data ]
jne r-xdata
xor ebx ebx
test esi esi
jne r-xdata
push esi
call sub_4adacf
mov esi eax
mov al [ ebp - 0x1 ]
pop ecx
mov [ rw-data ] esi
mov eax [ ebp - 0xc ]
mov ecx edi
sub eax ecx
push eax
push ecx
call sub_4adb80
mov [ ebp - 0x8 ] eax
pop ecx
pop ecx
test eax eax
js r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi ] ebx
je r-xdata
test al al
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push edi
call sub_4a8813
pop ecx
pop edi
mov eax ebx
pop esi
neg eax
mov [ ebp - 0x8 ] eax
lea ecx [ eax + 0x2 ]
cmp ecx eax
jb r-xdata
push [ esi + eax * 4 ]
call sub_4a8813
pop ecx
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
push 0x4
push 0x1
call sub_4aaf77
push ebx
mov [ rw-data ] eax
call sub_4a8813
mov esi [ rw-data ]
add esp 0xc
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
call j_sub_4a3f80
test eax eax
jne r-xdata
or ebx 0xffffffff
cmp ecx 0x3fffffff
jae r-xdata
cmp [ esi + ecx * 4 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi ebx
mov [ esi + ecx * 4 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ rw-data ]
push 0x4
push ecx
push esi
call sub_4ad762
push ebx
mov esi eax
call sub_4a8813
add esp 0x10
test esi esi
je r-xdata
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ esi + ecx * 4 ] eax
inc ecx
push 0x4
push ecx
push esi
call sub_4ad762
push ebx
mov esi eax
call sub_4a8813
add esp 0x10
mov eax edi
test esi esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
test esi esi
je r-xdata
push 0x4
push 0x1
call sub_4aaf77
push ebx
mov [ rw-data ] eax
call sub_4a8813
add esp 0xc
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edi ebx
mov eax [ ebp + 0x8 ]
mov [ esi + ecx * 4 ] eax
mov [ esi + ecx * 4 + 0x4 ] ebx
jmp r-xdata
mov ecx eax
lea edx [ ecx + 0x1 ]
mov [ rw-data ] esi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push 0x1
lea eax [ ecx + 0x2 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_4aaf77
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
call sub_4a8813
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push esi
call sub_4a889b
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4aa9d1
int3
mov ecx [ ebp - 0xc ]
mov eax esi
sub eax [ ebp + 0x8 ]
inc ecx
add ecx eax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
not eax
mov [ ecx - 0x1 ] bl
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
call sub_4aaf64
or ebx 0xffffffff
mov [ eax ] 0x2a
sub_4adacf
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
xor ecx ecx
mov eax edi
cmp [ edi ] ecx
je r-xdata
xor eax eax
jmp r-xdata
push esi
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_4aaf77
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
call sub_4a519f
cmp [ edi ] 0x0
je r-xdata
push 0x0
call sub_4a8813
pop ecx
mov eax esi
pop esi
push ebx
mov ebx esi
sub ebx edi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push 0x1
lea eax [ ecx + 0x1 ]
push eax
mov [ ebp - 0x4 ] eax
call sub_4aaf77
push 0x0
mov [ ebx + edi ] eax
call sub_4a8813
add esp 0xc
cmp [ ebx + edi ] 0x0
je r-xdata
push [ edi ]
push [ ebp - 0x4 ]
push [ ebx + edi ]
call sub_4a889b
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
add edi 0x4
cmp [ edi ] eax
jne r-xdata
mov ecx [ edi ]
lea edx [ ecx + 0x1 ]
pop ebx
sub_4adb80
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
mov esi edi
cmp [ edi ] 0x0
je r-xdata
sub esi edi
sar esi 0x2
neg esi
mov ebx [ ebp + 0xc ]
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov al [ ebx + eax ]
cmp al 0x3d
je r-xdata
push ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_4b0626
add esp 0xc
test eax eax
jne r-xdata
sub esi edi
sar esi 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4adbdf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4adc1e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_4a96db
mov bl al
call [ IsDebuggerPresent@IAT ]
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4a9577
test al al
jne r-xdata
test esi esi
je r-xdata
test bl bl
je r-xdata
call [ IsDebuggerPresent@IAT ]
neg eax
sbb eax eax
neg eax
add eax 0x3
jmp r-xdata
test bl bl
je r-xdata
push esi
call [ OutputDebugStringW@IAT ]
call sub_4a9635
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
push edi
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
push sub_4adcf7
push edi
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
call [ CreateThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
pop eax
jmp r-xdata
call sub_4a9590
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0x10 ]
or eax 0x200000
push eax
push [ ebp + 0xc ]
push esi
push 0x0
jmp r-xdata
mov eax edi
pop edi
jmp r-xdata
push edi
push 0xffffffff
push esi
call [ WaitForSingleObjectEx@IAT ]
test eax eax
jne r-xdata
call sub_4a952e
cmp esi 0xffffffff
je r-xdata
mov edi [ ebp - 0x4 ]
push esi
call [ CloseHandle@IAT ]
sub_4adcf7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
push [ esi ]
push [ esi + 0x4 ]
push 0x0
call sub_4a952e
mov [ esi + 0xc ] eax
xor eax eax
pop esi
pop ebp
retn 0x4
sub_4add24
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x30
push 0x40
call sub_4aaf77
mov edi eax
xor ebx ebx
mov [ ebp - 0x8 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ edi + 0xc00 ]
cmp edi eax
je r-xdata
mov edi ebx
jmp r-xdata
push ebx
call sub_4a8813
pop ecx
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + 0x20 ]
mov edi eax
push ebx
push 0xfa0
lea eax [ esi - 0x20 ]
push eax
call sub_4a93e8
or [ esi - 0x8 ] 0xffffffff
mov [ esi ] ebx
lea esi [ esi + 0x30 ]
mov [ esi - 0x2c ] ebx
lea eax [ esi - 0x20 ]
mov [ esi - 0x28 ] 0xa0a0000
mov [ esi - 0x24 ] 0xa
and [ esi - 0x23 ] 0xf8
mov [ esi - 0x22 ] bl
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x8 ]
pop esi
sub_4add9e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push ebx
lea ebx [ esi + 0xc00 ]
push edi
mov edi esi
cmp esi ebx
je r-xdata
push esi
call sub_4a8813
pop ecx
pop edi
pop ebx
push edi
call [ DeleteCriticalSection@IAT ]
add edi 0x30
cmp edi ebx
jne r-xdata
sub_4addd3
push 0x14
push r--data
call sub_4985c0
cmp [ ebp + 0x8 ] 0x2000
sbb eax eax
neg eax
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push 0x7
call sub_4a97d9
pop ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov eax [ rw-data ]
call sub_4aaf64
push 0x9
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4ade62
jmp r-xdata
cmp [ edi * 4 + rw-data ] esi
jne r-xdata
mov eax esi
call sub_498606
retn
inc edi
jmp r-xdata
call sub_4add24
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ rw-data ]
add eax 0x40
mov [ rw-data ] eax
push 0xc
pop esi
mov [ ebp - 0x1c ] esi
sub_4ade6b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_4ade8e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov ebx esi
and eax 0x3f
sar ebx 0x6
imul ecx eax 0x30
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + eax + 0x18 ] 0xffffffff
jne r-xdata
push edi
call sub_4a4481
mov edi [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x18 ] edi
xor eax eax
pop edi
jmp r-xdata
sub esi 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0xfffffff6
sub esi 0x1
je r-xdata
push edi
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push edi
push 0xfffffff4
jmp r-xdata
sub_4adf22
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4adf45
push 0x1c
push r--data
call sub_4985c0
push 0x7
call sub_4a97d9
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4ae04e
mov eax edi
call sub_498606
retn
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
lea ecx [ eax + 0xc00 ]
mov [ ebp - 0x20 ] ecx
mov esi eax
push 0x30
pop eax
call sub_4add24
mov [ ebx * 4 + rw-data ] eax
test eax eax
je r-xdata
inc ebx
jmp r-xdata
test [ esi + 0x28 ] 0x1
jne r-xdata
add [ rw-data ] 0x40
mov edi ebx
shl edi 0x6
push edi
call sub_4ade6b
pop ecx
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] 0x1
mov [ ebp - 0x2c ] ebx
cmp ebx 0x80
jge r-xdata
add esi eax
jmp r-xdata
push esi
call [ EnterCriticalSection@IAT ]
test [ esi + 0x28 ] 0x1
je r-xdata
mov [ ebp - 0x24 ] esi
cmp esi ecx
je r-xdata
sub esi [ ebp - 0x28 ]
mov eax esi
cdq
push 0x30
pop ecx
idiv ecx
shl ebx 0x6
lea esi [ ebx + eax ]
mov edx esi
sar edx 0x6
mov ecx esi
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x28 ] 0x1
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x18 ] edi
mov edi esi
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0x20 ]
push 0x30
pop eax
mov [ ebp - 0x1c ] edi
sub_4ae057
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov edi esi
and eax 0x3f
sar edi 0x6
imul ebx eax 0x30
mov eax [ edi * 4 + rw-data ]
test [ ebx + eax + 0x28 ] 0x1
je r-xdata
cmp [ ebx + eax + 0x18 ] 0xffffffff
je r-xdata
call sub_4a4481
cmp eax 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ ebx + eax + 0x18 ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
push 0xfffffff6
sub esi 0x1
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_4ae0e8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aa9c1
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
mov eax [ eax + ecx + 0x18 ]
pop ebp
retn
sub_4ae160
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4ae1d0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4ae2af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
push edi
cmp [ ebp + 0x18 ] bl
je r-xdata
mov edi esi
push 0x2d
pop edx
inc ebx
mov [ eax ] dx
lea esi [ eax + 0x2 ]
neg ecx
mov [ esi ] ax
add esi 0x2
inc ebx
test ecx ecx
je r-xdata
lea eax [ edx + 0x30 ]
cmp ebx [ ebp + 0x10 ]
jb r-xdata
cmp ebx [ ebp + 0x10 ]
jb r-xdata
xor eax eax
mov [ esi ] ax
sub esi 0x2
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] cx
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
mov eax ecx
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ edx + 0x57 ]
cmp edx 0x9
ja r-xdata
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edi ] cx
add edi 0x2
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4ae33d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
call sub_4aaf64
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] al
mov [ ecx ] ax
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x14 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_4aaf64
push 0x22
jmp r-xdata
push [ ebp + 0x18 ]
push esi
push edx
push ecx
push [ ebp + 0x8 ]
call sub_4ae2af
add esp 0x14
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
sub_4ae39c
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4ae33d
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4ae3d1
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
test esi esi
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_4aaf64
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov ebx [ ebp + 0x10 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov edi eax
mov edx ecx
mov eax esi
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
add edx 0x2
sub edi 0x1
jne r-xdata
xor eax eax
mov [ ecx ] ax
cmp esi 0xffffffff
jne r-xdata
cmp [ edx ] 0x0
je r-xdata
test esi esi
je r-xdata
sub ebx edx
test eax eax
jne r-xdata
mov ecx esi
test edi edi
jne r-xdata
sub edi 0x1
jne r-xdata
mov [ edx ] ax
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
sub edi 0x1
je r-xdata
cmp esi 0xffffffff
jne r-xdata
movzx eax [ ebx + edx ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
sub ecx 0x1
jne r-xdata
xor eax eax
mov [ ecx ] ax
call sub_4aaf64
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
movzx eax [ ebx ]
lea ebx [ ebx + 0x2 ]
mov [ edx ] ax
add edx 0x2
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
sub_4ae4c5
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_49b5bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4ae53e
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4ae50a
mov eax esi
call sub_498606
retn 0xc
sub_4ae516
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4ae4c5
mov esp ebp
pop ebp
retn
sub_4ae53e
mov edi edi
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
and ebx 0xfffffffe
push [ eax ]
call sub_4a66ef
mov eax [ edi + 0x4 ]
push [ eax ]
call sub_4ab074
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov ecx 0xfffff81f
mov eax [ eax ]
add eax 0xc
[ eax ] ecx
mov eax [ edi + 0x8 ]
test [ eax ] 0x4
je r-xdata
mov eax [ edi + 0xc ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x4 ]
push 0x400
push 0x2
mov eax [ ecx ]
add eax 0x14
push eax
push [ ecx ]
jmp r-xdata
push 0x180
push ebx
push eax
push ebx
call sub_4a884d
push 0x0
mov esi eax
call sub_4a8813
pop ecx
pop ecx
test esi esi
jne r-xdata
call sub_4ae5d8
add esp 0x10
push 0x140
push ebx
push esi
jmp r-xdata
inc [ rw-data ]
or eax 0xffffffff
jmp r-xdata
mov eax [ edi + 0x4 ]
push [ eax ]
pop edi
pop esi
pop ebx
retn
sub_4ae5d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
add eax 0xc
[ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and [ eax + 0x8 ] 0x0
xor eax eax
pop ebp
retn
sub_4ae60b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x7ffffffd
ja r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ecx
call sub_4ae516
pop ecx
pop ecx
sub_4ae681
push 0xc
push r--data
call sub_4985c0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4ade6b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x9
or esi 0xffffffff
push esi
call sub_4ae7aa
pop ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4ae6f7
mov eax esi
call sub_498606
retn 0xc
sub_4ae703
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4ae681
mov esp ebp
pop ebp
retn
sub_4ae72b
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aa9c1
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4ae703
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_4ae7aa
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4ae0e8
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push edi
call sub_4ae057
pop ecx
mov ecx edi
and edi 0x3f
sar ecx 0x6
imul edx edi 0x30
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x28 ] 0x0
test esi esi
je r-xdata
push edi
call sub_4ae0e8
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push 0x2
call sub_4ae0e8
push 0x1
mov esi eax
call sub_4ae0e8
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
push esi
call sub_4aaf2e
pop ecx
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
pop edi
pop esi
pop ebp
retn
sub_4ae846
push 0xc
push r--data
call sub_4985c0
xor edi edi
mov esi [ ebp + 0x8 ]
mov [ esi ] edi
push 0x8
call sub_4a97d9
pop ecx
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x1c ]
push eax
call sub_4ae8e0
pop ecx
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4ae89c
mov eax esi
call sub_498606
retn
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
or [ eax + 0x10 ] 0xffffffff
sub_4ae8a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
add eax 0xc
xchg [ eax ] ecx
pop ebp
retn
sub_4ae8e0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov edi [ rw-data ]
add edi 0xc
add ebx 0xfffffffd
lea ebx [ edi + ebx * 4 ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edi ebx
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
push 0x38
push 0x1
call sub_4aaf77
push 0x0
mov [ edi ] eax
call sub_4a8813
mov eax [ edi ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
shr eax 0xd
test al 0x1
jne r-xdata
or [ eax + 0x10 ] 0xffffffff
mov eax [ edi ]
push 0x0
push 0xfa0
add eax 0x20
push eax
call sub_4a93e8
mov esi [ edi ]
mov ecx 0x2000
lea eax [ esi + 0xc ]
[ eax ] ecx
push esi
call sub_49b5bb
pop ecx
jmp r-xdata
add edi 0x4
push esi
call sub_49b5bb
pop ecx
lea edx [ esi + 0xc ]
mov ebx 0x2000
mov eax [ edx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
jmp r-xdata
mov ecx eax
or ecx ebx
[ edx ] ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
shr eax 0xd
not al
test al 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_49b5cf
pop ecx
sub_4ae9a3
push 0xc
push r--data
call sub_4985c0
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4ade6b
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x9
or esi 0xffffffff
push edi
call sub_4ae0e8
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4aea2f
mov eax esi
call sub_498606
retn 0xc
call sub_4aaf51
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_4aea3b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4ae9a3
mov esp ebp
pop ebp
retn
sub_4aea63
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aa9c1
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4aea3b
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_4aead2
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
push ebx
imul ebx eax 0x30
push esi
mov eax [ ecx * 4 + rw-data ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ecx
mov eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
add eax edi
mov [ ebp - 0x24 ] eax
call [ GetConsoleCP@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov ch [ edi ]
xor eax eax
mov [ ebp - 0x18 ] ax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b ] ch
mov edx [ eax * 4 + rw-data ]
mov cl [ edx + ebx + 0x2d ]
test cl 0x4
je r-xdata
call sub_4ac285
movzx ecx [ edi ]
mov edx 0x8000
test [ eax + ecx * 2 ] dx
je r-xdata
mov al [ edx + ebx + 0x2e ]
and cl 0xfb
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
push 0x2
mov [ ebp - 0xb ] ch
mov [ edx + ebx + 0x2d ] cl
push eax
jmp r-xdata
push 0x1
push edi
cmp edi [ ebp - 0x24 ]
jae r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_4ab1ac
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x14 ]
push ecx
push ecx
push 0x5
push eax
push 0x1
lea eax [ ebp - 0x18 ]
inc edi
push eax
push ecx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov al [ edi ]
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + ebx + 0x2e ] al
mov eax [ edx * 4 + rw-data ]
or [ eax + ebx + 0x2d ] 0x4
inc [ esi + 0x4 ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_4ab1ac
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc edi
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x8 ]
sub eax [ ebp - 0x30 ]
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x1b ] 0xa
jne r-xdata
cmp edi [ ebp - 0x24 ]
jb r-xdata
push 0xd
pop eax
push 0x0
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jb r-xdata
inc [ esi + 0x8 ]
inc [ esi + 0x4 ]
sub_4aec85
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add eax edi
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
push ebx
call sub_4b4189
pop ecx
cmp ax bx
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
add [ esi + 0x4 ] 0x2
cmp ebx 0xa
jne r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jb r-xdata
push 0xd
pop ebx
push ebx
call sub_4b4189
pop ecx
cmp ax bx
jne r-xdata
jmp r-xdata
inc [ esi + 0x4 ]
inc [ esi + 0x8 ]
sub_4aecf2
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4b23ae
pop ecx
test eax eax
jne r-xdata
push edi
mov edi esi
and esi 0x3f
sar edi 0x6
imul esi esi 0x30
mov eax [ edi * 4 + rw-data ]
test [ eax + esi + 0x28 ] 0x80
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
call sub_4a9bc5
mov eax [ eax + 0x4c ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
pop edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi * 4 + rw-data ]
push [ eax + esi + 0x18 ]
call [ GetConsoleMode@IAT ]
test eax eax
setne al
mov eax [ edi * 4 + rw-data ]
cmp [ eax + esi + 0x29 ] 0x0
jne r-xdata
sub_4aed68
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_497c60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi ] 0x0
add eax ebx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ ebp - 0x1410 ] ecx
mov [ ebp - 0x1408 ] eax
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x1404 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ebx ]
inc ebx
cmp al 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] al
lea eax [ ebp - 0x5 ]
inc edi
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
inc [ esi + 0x8 ]
mov [ edi ] 0xd
inc edi
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_4aee47
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_497c60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ebx
mov [ ebp - 0x1410 ] ecx
xor edx edx
mov [ ebp - 0x1408 ] eax
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
and edi 0xfffffffe
lea eax [ ebp - 0x1404 ]
push edi
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] ax
lea eax [ ebp - 0x6 ]
add edi 0x2
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
add [ esi + 0x8 ] 0x2
push 0xd
pop edx
mov [ edi ] dx
add edi 0x2
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_4aef35
mov edi edi
push ebp
mov ebp esp
mov eax 0x1418
call sub_497c60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
push esi
mov eax [ eax * 4 + rw-data ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
push edi
mov eax [ eax + ecx + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edi ecx
mov [ ebp - 0x1414 ] eax
mov eax [ ebp + 0x14 ]
add eax ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x140c ] eax
mov [ esi + 0x8 ] ebx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x140c ]
lea eax [ ebp - 0x6b0 ]
push ebx
push ebx
push 0xd55
lea ecx [ ebp - 0x1408 ]
push ecx
lea ecx [ ebp - 0x6b0 ]
sub eax ecx
sar eax 0x1
push eax
mov eax ecx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1418 ] eax
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp ecx 0xa
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
push 0x0
lea ecx [ ebp - 0x1410 ]
sub eax ebx
push ecx
push eax
lea eax [ ebp - 0x1408 ]
add eax ebx
push eax
push [ ebp - 0x1414 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ eax ] cx
add eax 0x2
lea ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
push 0xd
pop edx
mov [ eax ] dx
add eax 0x2
add ebx [ ebp - 0x1410 ]
mov eax [ ebp - 0x1418 ]
cmp ebx eax
jb r-xdata
cmp edi esi
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
cmp edi [ ebp - 0x140c ]
jae r-xdata
xor ebx ebx
jmp r-xdata
sub_4af062
push 0x14
push r--data
call sub_4985c0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aa9c1
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_4ade6b
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4af14d
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
and [ eax ] 0x0
jmp r-xdata
call sub_498606
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4af124
mov eax edi
jmp r-xdata
sub_4af14d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax esi
mov ebx esi
sar ebx 0x6
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x1c ] ebx
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] edx
mov bl [ eax + edx + 0x29 ]
cmp bl 0x2
je r-xdata
call sub_4aaf51
and [ eax ] edi
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
mov eax ecx
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
jmp r-xdata
test [ eax + edx + 0x28 ] 0x20
je r-xdata
push esi
call sub_4aecf2
pop ecx
test al al
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_4b0af1
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test bl bl
je r-xdata
pop ebx
mov eax [ ecx + eax + 0x18 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp - 0x8 ]
push edi
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
movsx eax bl
sub eax 0x0
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4aead2
dec bl
cmp bl 0x1
ja r-xdata
lea esi [ ebp - 0x14 ]
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4aed68
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x40
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_4aec85
add esp 0xc
sub eax [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
add esp 0x10
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4aef35
jmp r-xdata
sub eax 0x1
jne r-xdata
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x1c
call sub_4aaf51
and [ eax ] 0x0
cmp [ edi ] 0x1a
jne r-xdata
mov edi [ ebp - 0x30 ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4aee47
jmp r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_4aaf2e
pop ecx
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
mov [ eax ] esi
jmp r-xdata
sub_4af359
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
push ebx
xor ebx ebx
shr eax 0xd
inc ebx
test bl al
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0xc
test bl al
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x1
test bl al
mov eax [ ebp + 0x8 ]
je r-xdata
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
push [ esi + 0x4 ]
push esi
call sub_4ac1a9
pop ecx
push eax
call sub_4b015e
mov [ esi + 0x8 ] eax
add esp 0xc
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
push [ ebp + 0x8 ]
call sub_4b2122
pop ecx
xor ecx ecx
test edx edx
setne cl
add eax 0xc
lea ecx [ ecx * 8 + 0x8 ]
[ eax ] ecx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x8 ] 0x0
cmp edx 0xffffffff
je r-xdata
mov eax [ eax + 0xc ]
test al 0x6
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
push [ ebp + 0x8 ]
call sub_4ac1a9
pop ecx
cmp eax 0xffffffff
je r-xdata
dec [ eax + 0x8 ]
mov ecx [ eax ]
mov dl [ ecx ]
inc ecx
mov [ eax ] ecx
movzx eax dl
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0x6
test bl al
je r-xdata
mov eax rw-data
push [ ebp + 0x8 ]
call sub_4ac1a9
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x8
test bl al
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x20
pop ecx
add eax 0xc
[ eax ] ecx
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4ac1a9
mov edi eax
push esi
sar edi 0x6
call sub_4ac1a9
and eax 0x3f
imul eax eax 0x30
pop ecx
pop ecx
add eax [ edi * 4 + rw-data ]
pop edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1000
mov al [ eax + 0x28 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_4af4e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
lea esi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
xor ecx ecx
cmp al 0x61
je r-xdata
mov [ ebx ] 0x109
cmp al 0x72
je r-xdata
mov ch [ ebp - 0x1 ]
movsx eax al
cmp eax 0x53
jg r-xdata
mov [ ebx ] ecx
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
sub eax 0x54
je r-xdata
je r-xdata
mov dl cl
mov [ ebp - 0x3 ] cl
mov ch cl
mov [ ebp - 0x4 ] cl
inc esi
mov [ ebp - 0x2 ] dl
mov [ ebp - 0x1 ] ch
mov cl 0x1
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov [ ebx ] 0x301
jmp r-xdata
test ch ch
jne r-xdata
push ebx
call sub_4af7b7
sub eax 0xe
je r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
sub eax 0x20
je r-xdata
mov [ ebx + 0x4 ] 0x2
push 0x3
push r--data
push esi
call sub_4a7fc0
add esp 0xc
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
jmp r-xdata
push ebx
call sub_4af7d6
jmp r-xdata
sub eax 0x1
je r-xdata
xor cl cl
jmp r-xdata
or [ ebx ] 0x20
mov ch [ ebp - 0x1 ]
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
test ch ch
je r-xdata
mov dl [ ebp - 0x2 ]
pop ecx
mov cl al
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_4af7f6
jmp r-xdata
sub eax 0xb
je r-xdata
xor eax eax
test cl cl
setne al
add esi eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_4af83a
sub eax 0x1
je r-xdata
cmp [ esi ] al
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
jmp r-xdata
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_4af818
jmp r-xdata
sub eax 0x6
jne r-xdata
mov ch 0x1
mov [ ebp - 0x1 ] ch
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
push ebx
call sub_4af86f
jmp r-xdata
push ebx
call sub_4af79c
jmp r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or [ ebx ] 0x80
mov cl 0x1
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_4a4722
add esp 0xc
test eax eax
jne r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
push 0x8
push r--data
push esi
call sub_4a4722
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebx ] 0x40000
jmp r-xdata
or [ ebx ] 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_4a4722
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebx ] 0x20000
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov dl 0x1
mov [ ebp - 0x2 ] dl
mov cl dl
jmp r-xdata
add esi 0x7
or [ ebx ] 0x10000
jmp r-xdata
inc esi
jmp r-xdata
sub_4af717
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_4af4e5
mov esi eax
lea edi [ ebp - 0x10 ]
pop ecx
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call sub_4b47f9
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
add eax 0xc
mov ecx [ ebp - 0xc ]
[ eax ] ecx
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_4af79c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test al 0x40
je r-xdata
or eax 0x40
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_4af7b7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx 0x1000
mov eax [ ecx ]
test edx eax
je r-xdata
or eax edx
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_4af7d6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x8000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_4af7f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx + 0x4 ] 0x800
pop ebp
retn
xor al al
pop ebp
retn
sub_4af818
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
and [ ecx + 0x4 ] 0xfffff7ff
pop ebp
retn
xor al al
pop ebp
retn
sub_4af83a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax [ edx ]
test al 0x2
jne r-xdata
xor al al
pop ebp
retn
mov ecx [ edx + 0x4 ]
and eax 0xfffffffe
or eax 0x2
and ecx 0xfffffffc
or ecx 0x4
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov al 0x1
pop ebp
retn
sub_4af86f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x4000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_4af89a
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_4ac1a9
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4afac0
pop ecx
pop ecx
test al al
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push 0x1
call sub_49b55f
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax bl
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
push edi
call sub_4b23ae
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_49b55f
pop ecx
cmp esi eax
jne r-xdata
pop ebx
pop esi
push [ ebp + 0xc ]
call sub_4b2122
pop ecx
sub_4af9ab
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_4ac1a9
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push esi
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push esi
call sub_4afb8c
pop ecx
pop ecx
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
push 0x1
call sub_49b55f
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov eax 0xffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax si
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov eax 0xffff
jmp r-xdata
push edi
call sub_4b23ae
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_49b55f
pop ecx
cmp esi eax
jne r-xdata
pop esi
pop ebx
push [ ebp + 0xc ]
call sub_4b2122
pop ecx
sub_4afac0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_4ac1a9
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_4af062
add esp 0xc
dec eax
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
inc eax
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
dec ecx
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_4af062
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_4b0ad6
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_4afb8c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_4ac1a9
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_4af062
sub eax 0x2
add esp 0xc
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
add eax 0x2
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
sub ecx 0x2
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_4af062
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_4b0ad6
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_4afc76
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
mov edx [ ebp + 0xc ]
push ebx
sar ecx 0x6
push esi
push edi
imul edi eax 0x30
mov eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] 0xa
jne r-xdata
sub esi edx
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x1 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
cmp cl 0xd
je r-xdata
lea eax [ edx + ecx ]
mov ebx edx
mov [ ebp - 0x8 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cl [ ebx ]
mov [ esi ] cl
inc esi
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
mov [ esi ] cl
inc esi
inc ebx
inc eax
jmp r-xdata
inc ebx
inc eax
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi ] 0xd
inc esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ esi ] 0xd
inc esi
inc ebx
inc eax
jmp r-xdata
add ebx 0x2
mov [ esi ] 0xa
add eax 0x2
inc esi
jmp r-xdata
mov cl [ ebx ]
cmp cl 0x1a
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
cmp ebx ecx
jb r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov dl [ ebp - 0x1 ]
cmp dl 0xa
jne r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4b0af1
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
mov [ esi ] 0xd
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2a ] dl
jmp r-xdata
mov [ esi ] dl
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] 0xa
inc esi
jmp r-xdata
mov eax [ ebp - 0xc ]
sub_4afdcd
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
sar ecx 0x6
imul edi eax 0x30
mov [ ebp - 0x8 ] ecx
push 0xa
mov eax [ ecx * 4 + rw-data ]
pop ebx
mov edx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0xc ]
test esi esi
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] bx
jne r-xdata
sub esi edx
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x2 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
push 0xd
pop edx
cmp [ ebp - 0xc ] dx
mov edx [ ebp + 0xc ]
je r-xdata
lea eax [ edx + esi * 2 ]
mov ebx edx
mov [ ebp - 0x10 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cx [ ebx ]
mov [ esi ] cx
add esi 0x2
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add ebx 0x2
mov [ esi ] cx
add esi 0x2
add eax 0x2
jmp r-xdata
add eax 0x2
add ebx 0x2
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0xa
pop edx
cmp [ eax ] dx
mov edx [ ebp + 0xc ]
jne r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
push 0xd
pop eax
mov [ esi ] ax
add esi 0x2
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xd
pop edx
mov [ esi ] dx
add ebx 0x2
add esi 0x2
add eax 0x2
jmp r-xdata
push 0xa
pop ecx
add ebx 0x4
mov [ esi ] cx
add eax 0x4
add esi 0x2
jmp r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0xc ] ecx
cmp ecx 0x1a
mov ecx [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push 0xa
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
pop eax
je r-xdata
mov edx [ ebp + 0xc ]
cmp [ ebp - 0x4 ] ax
jne r-xdata
mov dx [ ebp - 0x4 ]
cmp dx ax
jne r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_4b0af1
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x4 ] ax
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
push 0xd
pop eax
mov [ esi ] ax
mov eax [ ecx * 4 + rw-data ]
push 0xa
mov [ eax + edi + 0x2a ] dl
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2b ] dh
mov eax [ ecx * 4 + rw-data ]
pop edx
mov [ eax + edi + 0x2c ] dl
jmp r-xdata
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ esi ] ax
add esi 0x2
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_4aff8d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
call sub_4afc76
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
sar edx 0x6
push edi
imul edi eax 0x30
mov [ ebp - 0x4 ] edx
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ eax + edi + 0x29 ] 0x0
jne r-xdata
push esi
lea esi [ ebx - 0x1 ]
add esi ecx
mov al [ esi ]
test al al
js r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
movzx eax al
inc edx
jmp r-xdata
inc esi
jmp r-xdata
pop edi
cmp [ eax + rw-data ] 0x0
je r-xdata
push [ ebp + 0x18 ]
sub esi ebx
push [ ebp + 0x14 ]
push esi
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edx eax
test edx edx
jne r-xdata
cmp edx 0x4
ja r-xdata
mov cl [ esi ]
movzx eax cl
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp edx esi
mov ecx [ eax * 4 + rw-data ]
setne al
add al al
xor al [ ecx + edi + 0x2d ]
and al 0x2
xor [ ecx + edi + 0x2d ] al
lea eax [ edx + edx ]
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
pop ecx
cmp esi ebx
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x2a
jmp r-xdata
pop esi
dec esi
inc edx
movzx eax [ esi ]
mov eax [ ebp - 0x8 ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
neg edx
mov eax edx
push 0x1
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_4b0af1
add esp 0x10
inc esi
mov [ eax + edi + 0x2a ] cl
cmp edx 0x2
jb r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
inc esi
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x2b ] al
sub esi edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + edi + 0x2c ] al
sub_4b00dd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi edi
lea edx [ edi + eax * 2 ]
mov eax edi
cmp edi edx
jae r-xdata
sub esi edi
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebp
retn
lea ecx [ edi + 0x2 ]
push ebx
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov ecx [ ecx * 4 + rw-data ]
or [ ecx + edx + 0x28 ] 0x2
cmp ebx 0xd
jne r-xdata
mov [ esi ] bx
add eax 0x2
add esi 0x2
add ecx 0x2
cmp ecx edx
jae r-xdata
movzx ebx [ eax ]
cmp ebx 0x1a
je r-xdata
jmp r-xdata
push 0xa
pop edi
cmp [ ecx ] di
mov edi [ ebp + 0xc ]
jne r-xdata
pop ebx
push 0xa
pop ebx
add eax 0x4
mov [ esi ] bx
add ecx 0x4
add esi 0x2
jmp r-xdata
cmp eax edx
jb r-xdata
sub_4b015e
push 0x14
push r--data
call sub_4985c0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
add eax 0x1
jne r-xdata
push esi
call sub_4ade6b
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x16
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4b0271
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
and [ eax ] 0x0
jmp r-xdata
call sub_4aa9c1
call sub_498606
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4b0248
mov eax edi
jmp r-xdata
sub_4b0271
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax ebx
mov [ ebp - 0x14 ] 0x1
and eax 0x3f
mov edi ebx
sar edi 0x6
imul edx eax 0x30
mov [ ebp - 0x10 ] edi
mov eax [ edi * 4 + rw-data ]
mov [ ebp - 0x18 ] edx
mov cl [ edx + eax + 0x28 ]
mov [ ebp - 0x1 ] cl
test cl 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0x7fffffff
jbe r-xdata
test ecx ecx
je r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
jmp r-xdata
test [ ebp - 0x1 ] 0x2
jne r-xdata
call sub_4aa9c1
pop edi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi [ edx + eax + 0x18 ]
mov al [ edx + eax + 0x29 ]
mov [ ebp - 0x1 ] al
mov [ ebp - 0x1c ] esi
xor esi esi
movsx eax al
sub eax 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax ecx
not eax
test dl al
jne r-xdata
sub eax 0x1
jne r-xdata
push 0x4
pop eax
shr ecx 0x1
mov [ ebp - 0xc ] eax
cmp ecx eax
jb r-xdata
call sub_4aaf51
and [ eax ] esi
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax ecx
not eax
test al 0x1
je r-xdata
push eax
call sub_4a884d
push 0x0
mov esi eax
call sub_4a8813
push 0x0
call sub_4a8813
add esp 0xc
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
mov eax ecx
mov [ ebp - 0xc ] ecx
or edi 0xffffffff
mov ebx [ ebp - 0x10 ]
xor edi edi
mov [ ebp - 0x24 ] eax
mov ebx [ ebx * 4 + rw-data ]
mov [ ebp - 0x20 ] ebx
test [ edx + ebx + 0x28 ] 0x48
mov ebx [ ebp + 0x8 ]
je r-xdata
push [ ebp - 0x14 ]
push 0x0
push 0x0
push ebx
call sub_4b0af1
mov ecx [ edi * 4 + rw-data ]
add esp 0x10
mov edi [ ebp - 0x18 ]
mov [ edi + ecx + 0x20 ] eax
mov eax esi
mov [ edi + ecx + 0x24 ] edx
mov edx edi
mov ecx [ ebp - 0xc ]
call sub_4aaf64
mov [ eax ] 0xc
call sub_4aaf51
mov [ eax ] 0x8
jmp r-xdata
push ebx
call sub_4b23ae
pop ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x20 ]
mov bl [ edx + ebx + 0x2a ]
mov [ ebp - 0x2 ] bl
cmp bl 0xa
mov ebx [ ebp + 0x8 ]
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test ecx ecx
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop edi
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ebp - 0x20 ] ecx
ja r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x1c ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
mov bl [ ebp - 0x2 ]
mov edi [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2a ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
mov [ eax ] edi
jmp r-xdata
add edi [ ebp - 0x20 ]
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2b ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
push eax
call sub_4aaf2e
pop ecx
xor edi edi
jmp r-xdata
push esi
call sub_4a8813
pop ecx
mov eax edi
pop esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
shr edi 0x1
cmp [ ebp - 0x14 ] 0x0
push edi
push [ ebp - 0x24 ]
push ebx
je r-xdata
shr ecx 0x1
push ecx
push [ ebp + 0xc ]
push edi
push [ ebp - 0x8 ]
push ebx
call sub_4aff8d
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x2
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2b ] 0xa
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x14 ]
jne r-xdata
call sub_4afdcd
jmp r-xdata
call sub_4b00dd
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ edx + eax + 0x28 ] 0x80
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2c ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
add esp 0xc
jmp r-xdata
mov edi eax
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x3
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2c ] 0xa
sub_4b0626
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b064f
add esp 0x10
pop ebp
retn
pop ebp
jmp sub_4a4722
sub_4b064f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_49bede
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov edi [ ebp - 0xc ]
mov ebx [ edi + 0xa4 ]
test ebx ebx
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
jmp r-xdata
push [ edi + 0x10 ]
push eax
push edx
push eax
push ecx
push 0x1001
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_4b4dea
add esp 0x20
test eax eax
jne r-xdata
lea esi [ ebp - 0xc ]
push esi
push eax
push edx
push ecx
call sub_4a478e
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
call sub_4aaf64
mov [ eax ] 0x16
jmp r-xdata
sub_4b0719
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4a884d
pop ecx
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
push edi
call sub_4a8813
pop ecx
jmp r-xdata
pop edi
pop ebp
retn
push esi
push edi
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
je r-xdata
call sub_4aaf64
mov [ eax ] 0xc
xor eax eax
call sub_4a45d0
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_4aaa18
pop ecx
test eax eax
je r-xdata
pop esi
sub_4b0782
push 0x14
push r--data
call sub_4985c0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aa9c1
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_4ade6b
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4b0972
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
and [ eax ] 0x0
jmp r-xdata
call sub_498606
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4b0844
mov eax edi
jmp r-xdata
sub_4b086d
push 0x1c
push r--data
call sub_4985c0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf51
and [ eax ] 0x0
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aa9c1
cmp edi [ rw-data ]
jae r-xdata
or esi 0xffffffff
mov edx esi
mov ecx edi
sar ecx 0x6
mov [ ebp - 0x1c ] ecx
mov eax edi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x20 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
push edi
call sub_4ade6b
pop ecx
or esi 0xffffffff
mov [ ebp - 0x2c ] esi
mov ebx esi
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4b09c9
add esp 0x10
mov esi eax
mov [ ebp - 0x2c ] esi
mov ebx edx
mov [ ebp - 0x28 ] ebx
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aaf51
and [ eax ] 0x0
jmp r-xdata
mov eax esi
call sub_498606
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4b0945
mov edx ebx
jmp r-xdata
sub_4b0972
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4ae0e8
pop ecx
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4b0a47
mov edx eax
add esp 0xc
cmp edx 0xffffffff
je r-xdata
call sub_4aaf64
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
mov eax esi
and esi 0x3f
sar eax 0x6
imul ecx esi 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfd
mov eax edx
pop esi
pop ebp
retn
sub_4b09c9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4ae0e8
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and eax edx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
and esi 0x3f
sar ecx 0x6
imul esi esi 0x30
mov ecx [ ecx * 4 + rw-data ]
and [ ecx + esi + 0x28 ] 0xfd
sub_4b0a47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
push 0x1
push eax
xor esi esi
push esi
push esi
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
push ecx
cdq
push edx
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call [ SetFilePointerEx@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] esi
jl r-xdata
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn
jg r-xdata
push esi
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
call sub_4aaf64
mov [ eax ] 0x16
cmp eax 0x7fffffff
jbe r-xdata
sub_4b0b0c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ecx + 0x76c ]
mov ecx 0x190
cdq
idiv ecx
neg edx
sbb dl dl
lea eax [ edx + 0x1 ]
pop ebp
retn
push esi
push 0x64
mov eax ecx
pop esi
cdq
idiv esi
pop esi
test edx edx
je r-xdata
mov al 0x1
pop ebp
retn
sub_4b0b4d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
push edi
push esi
call sub_4b0b9b
add esp 0xc
test eax eax
jne r-xdata
jg r-xdata
dec esi
push esi
call sub_4b0b0c
xor ecx ecx
test al al
setne cl
sub edi [ ebp + 0x10 ]
add ecx 0x16d
add edi 0x7
push ecx
push edi
push esi
call sub_4b0b9b
add esp 0x10
jmp r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
inc eax
sub_4b0b9b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x7
pop ecx
lea eax [ esi + 0x6 ]
cdq
idiv ecx
mov eax [ ebp + 0x10 ]
sub eax edx
add eax ecx
cdq
idiv ecx
push [ ebp + 0x8 ]
mov ebx eax
call sub_4b0b0c
sub esi [ ebp + 0x10 ]
pop ecx
movzx ecx al
push 0x7
lea eax [ esi + 0x173 ]
mov edi [ ebp + 0x10 ]
cdq
sub edi ecx
pop esi
idiv esi
lea eax [ ecx + 0x16d ]
mov esi edx
add eax esi
push 0x7
cdq
pop ecx
idiv ecx
cmp edi 0x16c
jl r-xdata
cmp edi 0x16b
jl r-xdata
cmp edx 0x2
je r-xdata
cmp edi 0x16a
jl r-xdata
cmp edx 0x3
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
je r-xdata
cmp edx 0x4
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
lea eax [ ebx + 0x1 ]
cmp esi 0x3
je r-xdata
mov eax ebx
cmp esi 0x4
jne r-xdata
sub_4b0c30
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push esi
call sub_4b0b9b
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
jg r-xdata
lea eax [ esi - 0x1 ]
jmp r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x1 ]
sub_4b0c5b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0xc ]
push ebx
movzx eax dx
push esi
push edi
cmp eax 0x5a
jle r-xdata
je r-xdata
cmp eax 0x6e
jg r-xdata
call sub_4b5571
xor esi esi
mov [ ebp - 0x8 ] esi
call sub_4b50d7
mov ecx [ ebp + 0x10 ]
xor edx edx
push [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
cmp [ ecx + 0x20 ] esi
push 0xffffffff
setne dl
mov eax [ eax + edx * 4 ]
push eax
push [ edi ]
lea eax [ ebp - 0x8 ]
push [ ebx ]
push eax
call sub_4b4fab
add esp 0x18
test eax eax
je r-xdata
cmp eax 0x4d
jg r-xdata
cmp eax 0x77
jg r-xdata
je r-xdata
cmp eax 0x50
jne r-xdata
cmp eax 0x16
je r-xdata
push 0x7
sub eax 0x52
pop edi
cmp eax edi
ja r-xdata
je r-xdata
sub eax 0x78
je r-xdata
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push r--data
jmp r-xdata
cmp eax 0x65
jle r-xdata
mov ecx [ ebp - 0x8 ]
xor eax eax
inc eax
sub eax ecx
add [ edi ] eax
lea eax [ ecx * 2 - 0x2 ]
add [ ebx ] eax
mov eax [ edi ]
add eax eax
add [ ebx ] eax
mov [ edi ] esi
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_4aa9d1
stc
adc al 0x4b
add [ ebx + 0x15 ] al
dec ebx
add [ eax + 0x15 ] bl
dec ebx
add ch al
adc eax 0x1634004b
dec ebx
add ch al
adc eax 0x1666004b
dec ebx
add [ ecx + 0x16 ] bh
dec ebx
add [ ebx - 0x1374aa01 ] cl
sub esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
cmp eax 0x22
je r-xdata
xor al al
jmp r-xdata
jmp [ eax * 4 + jump_table_4b1737 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
js r-xdata
cmp eax 0x44
jg r-xdata
push [ ebp + 0x1c ]
xor eax eax
push [ ebp + 0x18 ]
cmp [ ebp + 0x20 ] al
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
push eax
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
sub eax 0x70
je r-xdata
call sub_4b1860
add esp 0xc
jmp r-xdata
je r-xdata
sub eax 0x67
je r-xdata
mov al 0x1
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
cmp eax [ esi ]
jae r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4b17f9
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x48
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x1c
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
test ecx ecx
js r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp + 0x18 ]
push [ ebp + 0x1c ]
mov edi [ ebp + 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x48
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x1c
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
mov eax [ ebp + 0x10 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax + 0x1c ]
push [ eax + 0x18 ]
push [ eax + 0x14 ]
call sub_4b0b4d
add esp 0xc
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x14 ]
cmp ecx 0xfffff894
jl r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
cmp ecx 0x3b
jmp r-xdata
sub eax 0x46
je r-xdata
je r-xdata
test al al
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x14 ]
cmp ecx 0xfffff894
jl r-xdata
sub eax 0x1
jne r-xdata
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
dec eax
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0xc ]
cmp ecx 0x1
jl r-xdata
sub eax 0x61
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x14 ] 0xfffff894
jl r-xdata
sub eax 0x1
jne r-xdata
and [ esi ] 0x0
push ebx
xor ebx ebx
dec eax
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push r--data
call sub_4b1860
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x4d
jmp r-xdata
cmp ecx 0x3c
jmp r-xdata
push esi
push edi
mov ebx r--data
push ebx
call sub_4b1860
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x4d
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
cmp ecx 0x6
jg r-xdata
push eax
push [ ebp + 0x8 ]
call sub_4b1891
add esp 0x18
jmp r-xdata
cmp ecx 0x1fa3
jg r-xdata
jg r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp + 0x18 ]
push [ ebp + 0x1c ]
mov edi [ ebp + 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x59
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x1c
test al al
je r-xdata
sub eax 0x1
je r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp + 0x18 ]
push [ ebp + 0x1c ]
mov edi [ ebp + 0x14 ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x6d
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x1c
test al al
je r-xdata
sub eax 0x25
je r-xdata
jmp r-xdata
cmp ecx 0x1fa3
jg r-xdata
call sub_4b5571
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_4b5135
pop ecx
test eax eax
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x17
jg r-xdata
mov esi [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push esi
cmp esi r--data
jne r-xdata
dec eax
sub eax 0x1
je r-xdata
cmp ecx 0x1f
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
sub eax 0x1
je r-xdata
cmp [ eax + 0x14 ] 0x1fa3
jg r-xdata
dec eax
sub eax 0x1
je r-xdata
push 0x62
pop edx
push edx
pop eax
jmp r-xdata
lea eax [ ebx + ebx ]
add [ edi ] eax
sub [ esi ] ebx
pop edi
pop ebx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add eax eax
mov si [ ebp + 0x18 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
push esi
push edi
push ebx
call sub_4b1860
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x53
jmp r-xdata
cmp dx 0x57
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
lea eax [ ecx + 0x76c ]
push [ ebp + 0x14 ]
push 0x4
jmp r-xdata
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
jmp r-xdata
push esi
push edi
mov ebx r--data
push ebx
call sub_4b1860
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x6d
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x14 ] 0xfffff894
jl r-xdata
sub eax 0x1
je r-xdata
push esi
push edi
mov ebx r--data
push ebx
call sub_4b1860
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x64
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push r--data
jmp r-xdata
sub eax 0x1c
je r-xdata
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
lea eax [ ecx + 0x76c ]
push [ ebp + 0x14 ]
push 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x20 ] esi
je r-xdata
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
jmp r-xdata
cmp dx 0x75
jne r-xdata
cmp eax 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x58
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x1c
jmp r-xdata
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
push edi
push ebx
push [ ebp + 0x10 ]
push 0x49
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x1c
test al al
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x20
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
sub eax 0x1
je r-xdata
push 0x30
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax + 0x1c ]
push [ eax + 0x18 ]
push [ eax + 0x14 ]
call sub_4b0c30
add esp 0xc
add eax 0x76c
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x1c ]
test ecx ecx
js r-xdata
sub eax 0x3
jne r-xdata
pop esi
mov ecx [ edi ]
mov [ eax + ecx ] si
mov eax ecx
push 0xa
cdq
pop ecx
idiv ecx
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
add edx 0x30
mov [ ecx + eax ] dx
jmp r-xdata
mov eax [ eax + 0x1c ]
test eax eax
js r-xdata
test ecx ecx
jne r-xdata
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push esi
push edi
push ebx
call sub_4b1860
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x64
jmp r-xdata
cmp [ eax + 0x14 ] 0x1fa3
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
js r-xdata
sub eax 0x1
jne r-xdata
push esi
push edi
push ebx
call sub_4b1860
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push edi
push [ ebp + 0x10 ]
push 0x79
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
js r-xdata
sub eax 0x1
je r-xdata
push 0x64
cdq
pop ecx
idiv ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
push eax
call sub_4b5109
pop ecx
test eax eax
jne r-xdata
push ecx
jmp r-xdata
push 0x7
pop ecx
mov eax [ eax + 0x150 ]
mov eax [ eax + 0x14c ]
jmp r-xdata
push edi
push ebx
push r--data
call sub_4b1860
push [ ebp + 0x20 ]
push esi
push edi
push ebx
push [ ebp + 0x10 ]
push 0x4d
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
call sub_4b1757
add esp 0x14
jmp r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xb4 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
mov ebx [ ebp + 0x1c ]
mov ecx [ ebp + 0x20 ]
cmp ebx r--data
jne r-xdata
sub eax 0x1
jne r-xdata
cmp ecx 0x16d
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
test ecx ecx
je r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
cdq
push 0xa
pop ecx
idiv ecx
inc ebx
mov ecx eax
mov eax [ ebp - 0x4 ]
sub eax 0x2
mov [ ebp - 0x8 ] ecx
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp eax 0x16d
jg r-xdata
dec ecx
push 0x6
pop ecx
jmp r-xdata
push 0x30
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x4
push [ eax + 0x1c ]
push [ eax + 0x18 ]
push [ eax + 0x14 ]
call sub_4b0c30
add esp 0xc
add eax 0x76c
jmp r-xdata
cmp ecx 0x17
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
js r-xdata
cmp ecx 0x6
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
js r-xdata
sub eax 0x1
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ecx
call sub_4b1860
push 0x30
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push esi
call sub_4b1757
push 0x30
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push edi
call sub_4b1757
add esp 0x34
jmp r-xdata
mov ecx r--data
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
jmp r-xdata
push edi
push ebx
push r--data
call sub_4b1860
push [ ebp + 0x20 ]
push esi
push edi
push ebx
push [ ebp + 0x10 ]
push 0x53
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xec ]
push ebx
push [ ebp + 0x18 ]
xor eax eax
test cl cl
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4b1891
add esp 0x18
test al al
je r-xdata
test cl cl
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0xc ] 0x1
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x3
jmp r-xdata
cmp ecx 0xb
jg r-xdata
xor esi esi
cmp eax ecx
jl r-xdata
cmp eax 0x17
jg r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0xd0 ]
jmp r-xdata
cmp ecx 0xb
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x14 ]
cmp ecx 0xfffff894
jl r-xdata
mov eax ecx
cdq
xor eax edx
sub eax edx
cdq
push 0x3c
pop esi
idiv esi
cdq
idiv esi
test ecx ecx
mov ecx r--data
mov edi edx
mov esi eax
js r-xdata
push edi
push ebx
push r--data
call sub_4b1860
push [ ebp + 0x20 ]
push esi
push edi
push ebx
push [ ebp + 0x10 ]
push 0x70
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push r--data
call sub_4b1860
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x2
push [ ebp + 0x8 ]
call sub_4b1891
add esp 0x24
jmp r-xdata
mov edi [ ebp + 0x18 ]
xor esi esi
push esi
push ebx
mov ebx [ ebp + 0x14 ]
push edi
push ebx
push [ ebp + 0x10 ]
push 0x61
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x1c
test al al
jne r-xdata
cmp [ eax + 0xc ] 0x1f
jg r-xdata
lea eax [ ecx + 0x1 ]
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
cmp [ ebp + 0x20 ] 0x0
setne cl
dec cl
and cl 0x30
movsx ax cl
movzx eax ax
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push esi
jmp r-xdata
cdq
idiv edi
mov esi eax
cmp edx ecx
jl r-xdata
push 0xc
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ eax + ecx * 4 + 0x11c ]
jmp r-xdata
cmp ecx 0x1fa3
jg r-xdata
push edi
push ebx
push r--data
call sub_4b1860
push esi
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push 0x62
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
cmp [ ebp + 0x20 ] 0x0
setne cl
dec cl
and cl 0x30
movsx cx cl
movzx ecx cx
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
push [ eax + 0xc ]
jmp r-xdata
inc esi
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x2
jmp r-xdata
mov edx ecx
cmp [ ebp + 0x20 ] 0x0
setne al
dec al
and al 0x30
cbw
movzx eax ax
push eax
push [ ebp + 0x18 ]
lea eax [ ecx + 0x76c ]
push [ ebp + 0x14 ]
cdq
push 0x2
push 0x64
pop ecx
idiv ecx
jmp r-xdata
push edi
push ebx
push r--data
call sub_4b1860
push esi
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push 0x65
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
push edx
jmp r-xdata
push edi
push ebx
push r--data
call sub_4b1860
push esi
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push 0x54
push [ ebp + 0x8 ]
call sub_4b0c5b
add esp 0x28
test al al
je r-xdata
push edi
push ebx
push r--data
call sub_4b1860
push esi
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push 0x59
sub_4b1757
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
cmp eax [ esi ]
jae r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4b17f9
add esp 0xc
jmp r-xdata
and [ esi ] 0x0
push ebx
xor ebx ebx
dec eax
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebx + ebx ]
add [ edi ] eax
sub [ esi ] ebx
pop edi
pop ebx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add eax eax
mov si [ ebp + 0x18 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
pop esi
mov ecx [ edi ]
mov [ eax + ecx ] si
mov eax ecx
push 0xa
cdq
pop ecx
idiv ecx
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
add edx 0x30
mov [ ecx + eax ] dx
jmp r-xdata
test ecx ecx
je r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
cdq
push 0xa
pop ecx
idiv ecx
inc ebx
mov ecx eax
mov eax [ ebp - 0x4 ]
sub eax 0x2
mov [ ebp - 0x8 ] ecx
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
sub_4b17f9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
mov ecx [ edi ]
cmp eax 0x1
jbe r-xdata
add eax eax
sub ecx eax
mov [ edi ] ecx
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
mov edx [ edi ]
lea esi [ ecx - 0x2 ]
mov [ edi ] ecx
pop ebx
jmp r-xdata
cmp [ esi ] 0x1
ja r-xdata
cmp edx esi
jb r-xdata
mov eax ebx
push 0xa
cdq
pop ebx
idiv ebx
mov ebx eax
lea eax [ edx + 0x30 ]
mov [ ecx ] ax
add ecx 0x2
dec [ esi ]
test ebx ebx
jle r-xdata
mov ax [ edx ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edx ] cx
add edx 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_4b1860
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
pop edi
pop esi
mov eax [ esi ]
add edx 0x2
mov [ eax ] di
add [ esi ] 0x2
sub [ ecx ] 0x1
jne r-xdata
movzx edi [ edx ]
test di di
je r-xdata
sub_4b1891
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] ebx
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x1c ] esi
push edi
sub eax 0x0
je r-xdata
mov edi [ ebx + 0x154 ]
sub eax 0x1
je r-xdata
movzx edx [ edi ]
test dx dx
jne r-xdata
cmp [ ebp + 0xc ] 0x2
mov eax 0x76c
sete cl
add ax [ edx + 0x14 ]
mov [ ebp - 0x14 ] ax
mov ax [ edx + 0x10 ]
inc ax
mov [ ebp - 0x1d ] cl
mov [ ebp - 0x12 ] ax
mov ax [ edx + 0xc ]
mov [ ebp - 0xe ] ax
mov ax [ edx + 0x8 ]
mov [ ebp - 0xc ] ax
mov ax [ edx + 0x4 ]
mov [ ebp - 0xa ] ax
mov ax [ edx ]
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x14 ]
test cl cl
je r-xdata
mov edi [ ebx + 0x158 ]
jmp r-xdata
mov edi [ ebx + 0x15c ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push edi
push eax
push ecx
push [ ebx + 0x160 ]
call sub_4a92a0
xor ecx ecx
push ecx
push ecx
push edi
push eax
push ecx
push [ ebx + 0x160 ]
call sub_4a9378
jmp r-xdata
cmp [ ebx + 0xac ] 0x1
je r-xdata
mov al 0x1
mov [ ebp - 0x1c ] 0x0
xor ecx ecx
mov [ ebp - 0x18 ] edi
mov ebx edi
movzx eax dx
lea edx [ ebx + ebx ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
add ebx 0x2
inc ecx
cmp [ ebx ] ax
je r-xdata
movzx eax dx
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp - 0x28 ]
cmp eax 0x64
jg r-xdata
xor esi esi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
sub eax 0x68
je r-xdata
je r-xdata
push 0x0
call sub_4ac96e
mov esi [ ebp - 0x1c ]
pop ecx
jmp r-xdata
cmp [ ebp - 0x1d ] 0x0
lea eax [ ebp - 0x14 ]
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_4a884d
mov esi eax
mov [ ebp - 0x18 ] esi
pop ecx
test esi esi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4b3da0
mov esi esp
mov [ ebp - 0x18 ] esi
test esi esi
je r-xdata
sub ecx 0x1
je r-xdata
sub eax 0x5
je r-xdata
sub ecx 0x1
je r-xdata
cmp eax 0x27
je r-xdata
push 0x0
push ebx
push esi
push edi
push eax
mov eax [ ebp - 0x28 ]
push 0x0
push [ eax + 0x160 ]
call sub_4a92a0
push ebx
push esi
push edi
push eax
mov eax [ ebp - 0x28 ]
push 0x0
push [ eax + 0x160 ]
call sub_4a9378
jmp r-xdata
mov [ esi ] 0xdddd
jmp r-xdata
mov [ esi ] 0xcccc
mov [ ebp - 0x1c ] 0x1
sub ecx 0x1
je r-xdata
sub ecx 0x1
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x1c ] 0x1
sub ecx 0x1
je r-xdata
mov eax ecx
and eax 0x80000001
jns r-xdata
cmp eax 0x41
je r-xdata
push esi
call sub_4ac96e
pop ecx
mov ebx [ ebp - 0x1c ]
mov esi [ ebp - 0x24 ]
mov edx eax
mov edi esi
dec edx
test edx edx
jle r-xdata
add esi 0x8
jmp r-xdata
mov [ ebp - 0x18 ] esi
test esi esi
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
xor al al
jmp r-xdata
mov edi [ ebp - 0x18 ]
push 0x49
mov ecx [ ebp - 0x24 ]
add edi 0x2
mov eax [ ecx ]
mov [ eax ] dx
add [ ecx ] 0x2
dec [ esi ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
sub ecx 0x1
je r-xdata
sub ecx 0x1
je r-xdata
sub eax 0x1
je r-xdata
pop eax
push [ ebp - 0x1c ]
push ebx
push esi
push [ ebp - 0x24 ]
push [ ebp - 0x2c ]
push eax
push [ ebp - 0x30 ]
call sub_4b0c5b
add esp 0x1c
test al al
je r-xdata
push 0x64
jmp r-xdata
sub ecx 0x1
je r-xdata
lea edi [ edi + ecx * 2 ]
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
push r--data
push edi
call sub_4b3dcc
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x48
je r-xdata
mov esi [ ebp - 0x18 ]
mov ecx [ esi ]
mov ax [ edi ]
add edi 0x2
mov [ ecx ] ax
add [ esi ] 0x2
dec [ ebx ]
dec edx
test edx edx
jg r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
push 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
sub ecx 0x1
je r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x8 ] 0xb
jg r-xdata
sub eax 0x5
jne r-xdata
push 0x61
jmp r-xdata
sub ecx 0x1
jne r-xdata
movzx ecx [ edi ]
test cx cx
je r-xdata
push r--data
push edi
call sub_4b3dcc
pop ecx
pop ecx
test eax eax
jne r-xdata
lea ecx [ edi + 0xa ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub ecx 0x1
je r-xdata
cmp eax 0x4d
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
push 0x53
jmp r-xdata
jmp r-xdata
mov edx [ ebx + 0x150 ]
mov edx [ ebx + 0x14c ]
jmp r-xdata
dec ecx
sub ecx 0x1
je r-xdata
push 0x41
jmp r-xdata
mov edx [ ebp - 0x24 ]
push 0x70
jmp r-xdata
lea eax [ edi + 0x6 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] 0x1
sub ecx 0x1
je r-xdata
sub ecx 0x1
je r-xdata
cmp eax 0x61
jne r-xdata
movzx ecx [ edx ]
test cx cx
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
cmp ecx 0x1
jne r-xdata
push 0x79
jmp r-xdata
dec ecx
sub ecx 0x1
jne r-xdata
push 0x27
pop eax
add edi 0x2
cmp cx ax
je r-xdata
push 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
sub ecx 0x1
je r-xdata
mov ebx [ ebp - 0x24 ]
mov edi [ ebp - 0x24 ]
mov ax [ edx ]
mov ecx [ edi ]
mov [ ecx ] ax
add [ edi ] 0x2
dec [ esi ]
jmp r-xdata
push 0x59
jmp r-xdata
mov eax [ edx ]
mov [ eax ] cx
add [ edx ] 0x2
dec [ esi ]
movzx ecx [ edi ]
test cx cx
jne r-xdata
push 0x6d
jmp r-xdata
sub ecx 0x1
je r-xdata
mov eax [ ebx ]
add edx 0x2
mov [ eax ] cx
add [ ebx ] 0x2
dec [ esi ]
movzx ecx [ edx ]
test cx cx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
push 0x62
jmp r-xdata
sub ecx 0x1
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
jmp r-xdata
push 0x42
jmp r-xdata
sub_4b1d00
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
jmp r-xdata
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
mov [ edi ] ax
test esi esi
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
call sub_49bede
mov edx [ ebp + 0x18 ]
test edx edx
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx edi
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ eax + 0x9c ]
mov [ ebp + 0x18 ] edx
pop esi
mov cl bl
movzx edi [ esi ]
mov [ ebp - 0x10 ] edi
movzx edi di
test edi edi
mov edi [ ebp + 0x8 ]
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov edi [ ebp - 0x10 ]
cmp di 0x25
mov edi [ ebp + 0x8 ]
je r-xdata
mov eax ebx
pop ebx
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_4aaf64
mov [ eax ] 0x22
jmp r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
sub ebx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
add esi 0x2
mov [ ecx ] ax
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add ecx 0x2
dec eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
add esi 0x2
mov [ ebp - 0x14 ] bl
cmp [ esi ] 0x23
jne r-xdata
mov edx [ ebp + 0x18 ]
test eax eax
jne r-xdata
movzx eax [ esi ]
cmp eax 0x45
je r-xdata
mov [ ebp - 0x14 ] 0x1
add esi 0x2
add esi 0x2
cmp eax 0x4f
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
add esi 0x2
push [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x14 ]
movzx eax [ esi ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_4b0c5b
add esp 0x1c
test al al
mov eax [ ebp - 0x8 ]
je r-xdata
mov cl 0x1
jmp r-xdata
xor edx edx
mov [ edi ] dx
test cl cl
jne r-xdata
sub_4b1e81
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
mov eax [ ebp - 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4b1eba
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
jne r-xdata
push esi
push [ ebp + 0x14 ]
call sub_4b55c2
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0x24 ] edi
mov esi eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
xor ebx ebx
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
xor esi esi
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_4a884d
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4b3da0
mov ebx esp
test ebx ebx
je r-xdata
mov edi [ ebp - 0x8 ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4a944a
mov esi eax
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
xor edi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4ac96e
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
push edi
call sub_4ac96e
pop ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4a944a
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_4a884d
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4b3da0
mov edi esp
test edi edi
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4a944a
mov esi eax
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
jmp r-xdata
push eax
push eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
push esi
push edi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_4ac96e
pop ecx
jmp r-xdata
sub_4b20d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4b1eba
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4b2122
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x1000
push ebx
call sub_4a884d
push 0x0
mov [ esi + 0x4 ] eax
call sub_4a8813
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0xc ]
pop ecx
pop ecx
je r-xdata
mov ecx 0x400
[ eax ] ecx
lea eax [ esi + 0x14 ]
mov [ esi + 0x18 ] 0x2
mov [ esi + 0x4 ] eax
push 0x40
pop ecx
[ eax ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop esi
pop ebx
pop ebp
retn
sub_4b2180
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b21a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_497c4a
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4b21e5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4b21e5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4b21a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4b2295
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4b22b4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4b2295
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4b22b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
mov edx eax
cmp ax bx
ja r-xdata
add esi 0x2
sub [ ebp - 0x4 ] 0x1
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
movzx eax ax
movzx edx dx
sub edx eax
je r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax di
jb r-xdata
mov eax [ ecx * 8 + r--data ]
test edx edx
jns r-xdata
cmp dx ax
je r-xdata
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
lea ebx [ ecx - 0x1 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
movzx eax [ ecx + esi ]
cmp ax di
jb r-xdata
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] 0x55
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
push 0x41
pop edi
mov [ ebp - 0x10 ] ecx
mov esi [ ecx * 8 + r--data ]
mov ecx [ ebp + 0x8 ]
push 0x5a
sub ecx esi
pop ebx
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b2373
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_4b22b7
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_4b23ae
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_4aaf64
mov [ eax ] 0x9
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x9
call sub_4aa9c1
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x40
pop ebp
retn
sub_4b2404
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_4aaf64
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ edx ] 0x0
test ecx ecx
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_4aaf64
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
push ebx
lea ebx [ edx + 0x1 ]
mov eax ebx
push edi
mov edi [ esi + 0x8 ]
mov [ edx ] 0x30
test ecx ecx
jle r-xdata
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
cmp [ edx ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
mov bl 0x30
inc edi
jmp r-xdata
mov ecx ebx
lea esi [ ecx + 0x1 ]
inc [ esi + 0x4 ]
jmp r-xdata
jmp r-xdata
lea ebx [ edx + 0x1 ]
mov [ eax ] bl
inc eax
dec ecx
test ecx ecx
jg r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
lea eax [ ecx + 0x1 ]
push eax
push ebx
push edx
call sub_49a770
add esp 0xc
pop edi
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4b24c0
mov edi edi
push esi
mov esi ecx
push esi
call sub_4b55de
mov eax [ esi ]
and eax 0x1f
pop ecx
cmp al 0x1f
jne r-xdata
push esi
call sub_4b5644
pop ecx
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax esi
pop esi
retn
sub_4b24ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x964
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x18 ]
lea ecx [ ebp - 0x794 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x780 ] edi
mov [ ebp - 0x77c ] ebx
call sub_4b24c0
mov esi [ ebp + 0xc ]
xor eax eax
mov ecx esi
and ecx 0x80000000
or eax ecx
mov al 0x2d
jne r-xdata
movsx eax al
mov ecx esi
mov [ edi ] eax
and ecx 0x7ff00000
xor eax eax
mov [ edi + 0x8 ] ebx
or eax ecx
mov edi [ ebp + 0x8 ]
jne r-xdata
add al 0xf3
lea eax [ ebp + 0x8 ]
push eax
call sub_4ab63c
pop ecx
test eax eax
je r-xdata
mov ecx esi
mov eax edi
and ecx 0xfffff
or eax ecx
jne r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x780 ]
push r--data
and [ eax + 0x4 ] 0x0
jmp r-xdata
push r--data
sub eax 0x1
je r-xdata
push [ ebp + 0x1c ]
push ebx
call sub_4a889b
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
cmp [ ebp - 0x78c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x794 ]
push eax
call sub_4b55fb
pop ecx
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
mov eax [ ebp + 0x10 ]
and esi 0x7fffffff
and [ ebp - 0x784 ] 0x0
inc eax
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] esi
fld [ ebp + 0x8 ]
fst [ ebp - 0x768 ]
mov edi [ ebp - 0x764 ]
mov ecx edi
mov [ ebp - 0x778 ] eax
shr ecx 0x14
mov eax ecx
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov esi 0x100000
xor eax eax
mov dl 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x76c ] eax
cmp eax 0x80000000
jne r-xdata
mov ebx [ ebp - 0x768 ]
and edi 0xfffff
add ebx eax
adc edi esi
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
lea esi [ ecx - 0x434 ]
add esi eax
mov [ ebp - 0x74c ] esi
call sub_4b56e0
push ecx
push ecx
fstp [ esp ]
call sub_4b58b0
pop ecx
pop ecx
call sub_4b57f0
mov [ ebp - 0x76c ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop esi
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] esi
cmp ebx esi
jne r-xdata
mov [ ebp - 0x1d0 ] ebx
xor ebx ebx
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x764 ] 0x0
bsr eax eax
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop ecx
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] ecx
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
inc eax
mov edi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x750 ] eax
xor eax eax
shr edi 0x5
inc eax
mov [ ebp - 0x74c ] edi
mov [ ebp - 0x770 ] ecx
call sub_4ac430
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
and [ ebp - 0x764 ] 0x0
bsr ecx ecx
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
xor ecx ecx
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
xor ecx ecx
inc ecx
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add edx 0x4
cmp edx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ ebx + edi ]
cmp [ ebp - 0x750 ] eax
mov [ ebp - 0x760 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x570 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
add eax 0x2
mov esi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x75c ] eax
xor eax eax
shr esi 0x5
inc eax
mov [ ebp - 0x750 ] esi
mov [ ebp - 0x770 ] ecx
call sub_4ac430
and [ ebp - 0x764 ] 0x0
dec eax
bsr ecx edi
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
and [ ebp - 0x574 ] 0x0
lea eax [ ebp - 0x570 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_4b3886
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + edx - 0x570 ]
cmp eax [ ebp + edx - 0x1d0 ]
jne r-xdata
and [ ebp - 0x764 ] 0x0
bsr eax edi
je r-xdata
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
neg eax
div ecx
mov [ ebp - 0x754 ] eax
mov ecx edx
mov [ ebp - 0x758 ] ecx
test eax eax
je r-xdata
div ecx
mov [ ebp - 0x770 ] eax
mov ecx edx
mov [ ebp - 0x764 ] ecx
test eax eax
je r-xdata
push 0x72
pop ecx
cmp ebx ecx
jae r-xdata
test cl cl
jne r-xdata
xor edx edx
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
jmp r-xdata
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ esi + 0x2 ]
cmp [ ebp - 0x75c ] eax
mov [ ebp - 0x754 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
cmp ecx 0xffffffff
je r-xdata
mov ecx ebx
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
push 0x20
pop eax
sub eax edx
mov esi ecx
cmp eax ecx
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x754 ] eax
mov edi eax
setb [ ebp - 0x745 ]
mov eax [ ebp - 0x76c ]
xor edx edx
push 0xa
pop ecx
mov [ ebp - 0x774 ] ecx
test eax eax
js r-xdata
mov eax edx
mov [ ebp - 0x754 ] eax
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x760 ] ecx
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x77c ]
mov esi edi
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] esi
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + r--data ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x74c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_49acf0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x74c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_49a1f0
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x75c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_49acf0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x75c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_49a1f0
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov esi ecx
lea edi [ edi + ecx * 4 ]
mov [ ebp - 0x754 ] edi
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
test edi edi
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x74c ]
sub esi edx
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x75c ] ecx
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_4a2390
pop ecx
pop ecx
push 0xa
pop edx
cmp eax edx
jne r-xdata
xor esi esi
xor edi edi
xor eax eax
push eax
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x964 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
jmp r-xdata
cmp [ ebp - 0x3a4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x745 ] al
setne al
add eax ecx
sub ecx [ ebp - 0x74c ]
mov edi ecx
mov [ ebp - 0x1d4 ] eax
shr edi 0x5
lea eax [ ebp - 0x570 ]
mov esi edi
mov [ ebp - 0x758 ] ecx
shl esi 0x2
push esi
push 0x0
push eax
call sub_49acf0
mov ecx [ ebp - 0x758 ]
xor eax eax
inc eax
and ecx 0x1f
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ edi + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
shl eax 0x2
shr edx 0x1e
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx edi
xor eax eax
lea edi [ ebp - 0x1d0 ]
[ edi ]
mov edx [ ebp - 0x760 ]
mov edi [ ebp - 0x74c ]
push 0x2
pop esi
cmp esi ebx
jae r-xdata
mov ecx edx
mov [ ebp - 0x760 ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x754 ] ecx
test eax eax
jne r-xdata
inc [ ebp - 0x76c ]
lea esi [ edi + 0x1 ]
mov eax [ ebp - 0x3a4 ]
mov [ edi ] 0x31
mov [ ebp - 0x74c ] esi
test eax eax
je r-xdata
mov eax [ ebp + edi * 4 - 0x1d0 ]
push 0xa
pop edx
mul edx
add eax esi
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
mov [ ebp - 0x764 ] esi
test esi esi
mov esi [ ebp - 0x74c ]
je r-xdata
mov ecx [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
cmp ecx [ ebp - 0x1d4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
test edi edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x960 ]
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
cmp ecx [ ebp - 0x3a4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x3a0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] ecx
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x570 ]
inc edi
sub edi esi
mov ebx edi
shr ebx 0x5
mov esi ebx
shl esi 0x2
push esi
push 0x0
push eax
call sub_49acf0
xor eax eax
and edi 0x1f
inc eax
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ ebx + 0x1 ]
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ ebp - 0x574 ] eax
mov ebx 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_4b3886
add esp 0x1c
cmp esi ebx
jae r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ ecx ]
jmp r-xdata
test esi esi
je r-xdata
mov esi edx
lea eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x750 ]
sub esi edx
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x74c ] eax
add al 0x30
lea esi [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] esi
mov eax [ ebp - 0x76c ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x76c ]
xor edi edi
mov esi eax
xor ecx ecx
mov edi esi
mov ecx [ ebp - 0x1d4 ]
cmp ecx 0x73
jae r-xdata
xor edi edi
xor esi esi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea edi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
xor esi esi
xor ecx ecx
push ebx
push eax
call sub_4b3886
add esp 0x10
lea edx [ ebp - 0x3a0 ]
jmp r-xdata
lea edi [ ebp - 0x3a0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x740 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
add eax eax
shr edx 0x1f
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x56c ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x570 ] esi
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push 0x4
jmp r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx esi
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x754 ]
mov esi [ ebp - 0x750 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x778 ]
test eax eax
js r-xdata
mov eax [ ebp + ecx * 4 - 0x3a0 ]
mul edx
push 0xa
add eax edi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov edi edx
pop edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
mov eax edx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
inc [ ebp - 0x1d4 ]
jmp r-xdata
mul [ ebp + esi * 4 - 0x1d0 ]
add eax edi
mov [ ebp + esi * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x764 ]
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x770 ] edx
test al al
jne r-xdata
mov [ ebp - 0x750 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x754 ]
sub eax [ ebp - 0x74c ]
mov [ ebp - 0x754 ] eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
mov eax edi
mul [ ebp + ecx * 4 - 0x3a0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx [ ebp - 0x764 ]
jne r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x3a4 ]
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
mov eax [ ebp - 0x770 ]
sub eax [ ebp - 0x75c ]
mov [ ebp - 0x770 ] eax
jne r-xdata
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and edi [ ebp - 0x758 ]
and eax [ ebp - 0x774 ]
mov ecx [ ebp - 0x750 ]
shl edi cl
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
or edi eax
mov eax [ ebp - 0x754 ]
sub ecx 0x4
mov [ ebp - 0x75c ] ecx
mov [ ebp + eax * 4 - 0x1d0 ] edi
dec eax
dec esi
mov [ ebp - 0x754 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ eax ]
jmp r-xdata
add eax [ ebp - 0x77c ]
mov [ ebp - 0x778 ] eax
cmp esi eax
je r-xdata
mov eax ecx
add ecx eax
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov ecx [ ebp - 0x758 ]
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
mov ecx [ ebp - 0x764 ]
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
jmp r-xdata
cmp eax edx
jb r-xdata
and [ ebp - 0x56c ] 0x0
xor ecx ecx
push 0x4
pop eax
inc ecx
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x574 ] ecx
mov [ ebp - 0x3a4 ] ecx
push eax
xor eax eax
mov eax [ ebp - 0x74c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] edi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] esi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x774 ]
and edi [ ebp - 0x758 ]
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
shl edi cl
mov ecx [ ebp - 0x760 ]
or eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
mov eax [ ebp - 0x74c ]
dec esi
sub eax 0x4
mov [ ebp - 0x760 ] ecx
mov [ ebp - 0x74c ] eax
cmp ecx 0xffffffff
je r-xdata
xor edi edi
mov esi eax
xor ecx ecx
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x75c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x74c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mov edx 0x3b9aca00
mul edx
add eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_4a2390
pop ecx
pop ecx
mov ecx [ ebp - 0x778 ]
push 0x8
pop edi
sub ecx esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x750 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x764 ] eax
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x960 ]
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x758 ] eax
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
xor al al
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ edi + esi ] dl
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_4b3886
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x770 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x764 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x75c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x75c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x75c ]
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x758 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x74c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x74c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x74c ]
xor edx edx
div [ ebp - 0x774 ]
add dl 0x30
cmp ecx edi
jb r-xdata
cmp ecx 0x9
jbe r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
add esi ecx
mov [ ebp - 0x74c ] esi
cmp esi [ ebp - 0x778 ]
jne r-xdata
push 0x9
pop ecx
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
sub_4b3886
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_49acf0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_4aaf64
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_49a1f0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_4aaf64
push 0x22
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
pop edi
sub_4b3907
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x7e80
je r-xdata
mov eax ecx
pop ebp
retn
test dl dl
jns r-xdata
push edi
mov edi 0x200
test edi edx
je r-xdata
push 0x10
pop ecx
test edx 0x400
je r-xdata
or ecx 0x8
test edx 0x800
je r-xdata
or ecx 0x4
test edx 0x1000
je r-xdata
or ecx 0x2
push esi
mov esi 0x6000
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x4000
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x2000
je r-xdata
or ecx 0x100
jmp r-xdata
pop edi
or ecx edi
sub_4b3984
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0xc3d
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
test dl 0x8
je r-xdata
or ecx 0x8
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x20
je r-xdata
or ecx 0x2
push esi
mov esi 0xc00
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x800
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or ecx 0x100
jmp r-xdata
or ecx 0x200
sub_4b39f7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
test dl 0x8
je r-xdata
inc ecx
test dl 0x4
je r-xdata
or ecx 0x4
test dl 0x2
je r-xdata
or ecx 0x8
test dl 0x1
je r-xdata
or ecx 0x10
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x20
test edx 0x200
je r-xdata
or ecx 0xc00
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x400
jmp r-xdata
or ecx 0x800
sub_4b3a68
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
push edi
mov edi 0x200
test dl 0x8
je r-xdata
mov ecx 0x80
test dl 0x4
je r-xdata
or ecx edi
test dl 0x2
je r-xdata
or ecx 0x400
test dl 0x1
je r-xdata
or ecx 0x800
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1000
test edi edx
je r-xdata
or ecx 0x6000
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x2000
jmp r-xdata
pop edi
or ecx 0x4000
sub_4b3ae8
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x10000010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x8000008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x4000004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x2000002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x1000001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_4b3b49
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x100010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x80008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x40004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x20002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x10001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_4b3baa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstcw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_4b3984
push [ ebp - 0x8 ]
mov esi eax
call sub_4b3907
pop ecx
or eax esi
pop ecx
and eax 0x31f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_4b3bed
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x8 ] ecx
fnstsw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx edx [ ebp - 0x4 ]
mov eax ecx
test dl 0x3d
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3d
je r-xdata
test dl 0x1
je r-xdata
or eax ecx
and eax 0x1f1f001f
mov esp ebp
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
mov eax 0x100010
test dl 0x4
je r-xdata
mov ecx 0x10000010
test dl 0x8
je r-xdata
or eax 0x80008
test dl 0x8
je r-xdata
or ecx 0x8000008
test dl 0x10
je r-xdata
or eax 0x40004
test dl 0x10
je r-xdata
or ecx 0x4000004
test dl 0x20
je r-xdata
or eax 0x20002
test dl 0x20
je r-xdata
or ecx 0x2000002
or eax 0x10001
or ecx 0x1000001
sub_4b3c95
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x31f
push ebx
call sub_4b39f7
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x20 ]
call sub_4b39f7
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x20 ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_4b3a68
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_4b3a68
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_4b3d15
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x1f1f001f
push ebx
call sub_4b3b49
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x1c ]
call sub_4b3b49
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x1c ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_4b3ae8
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_4b3ae8
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_4b3dcc
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b3e61
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
pop edi
movzx eax si
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_4b3e61
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_49bede
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0xc ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_4b59cd
lea ecx [ ebp - 0xc ]
movzx edi ax
movzx eax [ esi ]
lea ebx [ ebx + 0x2 ]
push ecx
push eax
call sub_4b59cd
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_4b3f50
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_4b3fa7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] esi
jb r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
jmp r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
dec esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ esi - 0x1 ]
pop esi
mov eax esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax esi
sub eax ecx
and eax 0x1
sub esi eax
movzx eax [ ecx ]
test [ eax + edx + 0x19 ] 0x4
jne r-xdata
dec ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub_4b4034
push 0x8
push r--data
call sub_4985c0
cmp [ rw-data ] 0x1
jl r-xdata
call sub_498606
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_4b40bd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and cx [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
or cx ax
mov [ ebp - 0x8 ] cx
fldcw [ ebp - 0x8 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4b40e9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ r--data ]
fistp [ ebp - 0x4 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0xc ]
fwait
sub_4b4156
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
pop ebp
retn
sub_4b4189
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_4b5a96
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4b41ce
push 0x10
push r--data
call sub_4985c0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_498606
retn
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_4b47a8
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4b426e
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
add eax 0x1
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_4b426e
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_4adf22
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_4b429a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push edi
mov edi [ ebp + 0x28 ]
xor ebx ebx
sar edx 0x6
imul ecx eax 0x30
mov [ edi ] bl
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x80
jne r-xdata
push esi
mov esi [ ebp + 0x24 ]
test esi 0x74000
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
and eax 0x74000
cmp eax 0x4000
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
call sub_4a4496
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi ] bl
cmp eax 0x10000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4aa9d1
int3
mov eax [ ebp - 0x4 ]
and eax 0x74000
jne r-xdata
xor eax eax
test [ ebp + 0xc ] 0x40
jne r-xdata
mov ecx 0x301
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
cmp eax 0x14000
je r-xdata
or esi eax
jmp r-xdata
or esi 0x4000
mov eax [ ebp + 0x10 ]
mov edx 0xc0000000
and eax edx
mov ecx ebx
mov esi ebx
cmp eax 0x40000000
je r-xdata
test esi 0x70000
je r-xdata
mov [ edi ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_4b0271
mov edx eax
add esp 0xc
test edx edx
jle r-xdata
cmp eax edx
jne r-xdata
cmp eax 0x40000
je r-xdata
xor esi esi
inc esi
cmp eax 0x4
jbe r-xdata
cmp edx 0xffffffff
je r-xdata
lea ecx [ esi - 0x1 ]
neg ecx
sbb ecx ecx
and esi ecx
mov [ edi ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
test esi esi
je r-xdata
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_4b0af1
add esp 0x10
or eax edx
je r-xdata
cmp eax 0x5
je r-xdata
call sub_4aaf64
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp edx 0x2
je r-xdata
movsx eax [ edi ]
mov esi ebx
mov [ ebp - 0x4 ] ebx
sub eax 0x1
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_4b0af1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
pop esi
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp edx 0x3
jne r-xdata
push 0x3
mov [ ebp - 0x4 ] 0xbfbbef
pop esi
sub eax 0x1
jne r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x1f
jmp r-xdata
cmp eax 0xfeff
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_4b0af1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp eax 0xbfbbef
jne r-xdata
mov eax esi
sub eax ebx
push eax
lea eax [ ebp - 0x4 ]
add eax ebx
push eax
push [ ebp + 0x8 ]
call sub_4af062
add esp 0xc
cmp eax 0xffffffff
je r-xdata
test esi esi
jle r-xdata
push 0x2
mov [ ebp - 0x4 ] 0xfeff
pop esi
jmp r-xdata
test ecx ecx
je r-xdata
push ebx
push ebx
push 0x2
push [ ebp + 0x8 ]
call sub_4b0af1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ edi ] 0x1
jmp r-xdata
add ebx eax
cmp esi ebx
jg r-xdata
mov [ edi ] 0x2
jmp r-xdata
jmp r-xdata
sub_4b44e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
or eax [ ebp + 0x24 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
pop ebp
retn
sub_4b450c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
jg r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
push 0x5
jmp r-xdata
cmp eax edx
je r-xdata
cmp eax 0x100
je r-xdata
pop eax
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
pop ebp
retn
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp eax 0x300
jne r-xdata
push 0x2
jmp r-xdata
sub_4b457c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
push esi
mov esi [ ebp + 0x8 ]
and eax 0x3
push edi
mov edi 0x80000000
mov [ esi ] 0x0
sub eax 0x0
je r-xdata
mov eax edi
sub eax 0x1
je r-xdata
xor eax eax
sub eax ecx
je r-xdata
test ebx 0x70000
setne cl
test bl 0x8
setne al
and cl al
movzx eax cl
neg eax
sbb eax eax
and eax edi
add eax 0x40000000
jmp r-xdata
sub eax 0x1
je r-xdata
mov edi 0x8000
test edi ebx
jne r-xdata
or [ esi ] 0x10
xor eax eax
inc eax
jmp r-xdata
sub eax ecx
je r-xdata
push ebx
mov [ esi + 0x4 ] eax
call sub_4b450c
pop ecx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax 0xc0000000
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
mov ecx 0x100
test ecx ebx
je r-xdata
test ebx 0x74000
jne r-xdata
and [ esi + 0x14 ] 0x0
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x80
test bl bl
jns r-xdata
push 0x2
sub eax ecx
je r-xdata
test bl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x14 ]
test al al
js r-xdata
or [ esi ] 0x80
lea eax [ ebp - 0x4 ]
push eax
call sub_4a4496
pop ecx
test eax eax
jne r-xdata
push 0x3
jmp r-xdata
sub eax 0x40
je r-xdata
test ebx 0x1000
je r-xdata
or [ esi + 0x14 ] 0x4000000
or [ esi + 0x4 ] 0x10000
or [ esi + 0xc ] 0x4
mov [ esi + 0x10 ] 0x1
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
cmp [ ebp - 0x4 ] edi
je r-xdata
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] edi
sete al
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
test ebx 0x2000
je r-xdata
or [ esi + 0x10 ] ecx
test bl 0x20
je r-xdata
or [ esi + 0x14 ] 0x2000000
test bl 0x10
je r-xdata
or [ esi + 0x14 ] 0x8000000
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or [ esi + 0x14 ] 0x10000000
sub_4b46f8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov al [ eax + ecx + 0x28 ]
test al 0x48
je r-xdata
test al al
jns r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push 0x2
push 0xffffffff
push 0xffffffff
push esi
call sub_4b0af1
mov edi eax
mov ebx edx
mov ecx edi
add esp 0x10
and ecx ebx
cmp ecx 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push esi
call sub_4b0271
add esp 0xc
test eax eax
jne r-xdata
call sub_4aaf51
cmp [ eax ] 0x83
jne r-xdata
xor eax eax
push eax
push eax
push eax
push esi
call sub_4b0af1
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
call sub_4aaf64
mov eax [ eax ]
jmp r-xdata
xor eax eax
push ebx
push edi
push esi
call sub_4b5b93
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop edi
pop ebx
sub_4b47a8
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_4b5acc
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp - 0x4 ]
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b4819
push esi
mov edi eax
call sub_4a8813
add esp 0x20
mov eax edi
pop edi
pop esi
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4b47f9
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4b41ce
add esp 0x18
pop ebp
retn
sub_4b4819
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call sub_4b457c
add esp 0x10
lea edi [ ebp - 0x2c ]
mov esi eax
push 0x6
pop ecx
[ edi ] [ esi ]
or esi 0xffffffff
cmp [ ebp - 0x20 ] esi
jne r-xdata
call sub_4adf45
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
cmp eax esi
jne r-xdata
call sub_4aaf51
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x2c ]
and [ ebp - 0x10 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x14 ] 0xc
sub esp 0x18
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
shr eax 0x7
not eax
and eax ecx
push 0x6
pop ecx
mov [ ebp - 0xc ] eax
mov edi esp
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_4b44e7
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
mov edx 0xc0000000
cmp edi 0xffffffff
jne r-xdata
call sub_4aaf51
and [ eax ] 0x0
mov [ ebx ] esi
call sub_4aaf64
mov [ eax ] 0x18
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
call sub_4aaf64
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_4aaf2e
pop ecx
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
push edi
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
mov al [ ebp - 0x2c ]
jne r-xdata
mov al [ ebp - 0x2c ]
or al 0x40
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0xd
jmp r-xdata
sub esp 0x18
lea eax [ ebp - 0x14 ]
and ecx 0x7fffffff
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_4b44e7
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
cmp edi 0xffffffff
jne r-xdata
push edi
push [ ebx ]
mov [ ebp - 0x1 ] al
call sub_4ade8e
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ ebx ]
or dl 0x1
mov eax ecx
mov [ ebp - 0x1 ] dl
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov [ ebp - 0x2c ] dl
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] dl
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
test [ ebp + 0x14 ] 0x2
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x29 ] 0x0
je r-xdata
or al 0x8
lea eax [ ebp - 0x2 ]
mov [ ebp - 0x2 ] 0x0
push eax
push [ ebp + 0x14 ]
lea esi [ ebp - 0x2c ]
sub esp 0x18
push 0x6
pop ecx
mov edi esp
push [ ebx ]
[ edi ] [ esi ]
call sub_4b429a
add esp 0x24
test eax eax
je r-xdata
push [ ebx ]
call sub_4b46f8
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov eax [ ebx ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov al [ ebp - 0x2 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] al
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul edx ecx 0x30
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
shr eax 0x10
xor al [ ecx + edx + 0x2d ]
and al 0x1
xor [ ecx + edx + 0x2d ] al
test [ ebp - 0x1 ] 0x48
jne r-xdata
mov esi eax
push [ ebx ]
call sub_4ae7aa
pop ecx
mov eax esi
jmp r-xdata
mov esi [ ebp - 0x28 ]
mov ecx 0xc0000000
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
test [ ebp + 0x14 ] 0x8
je r-xdata
xor eax eax
test [ ebp + 0x14 ] 0x1
je r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
or [ eax + ecx + 0x28 ] 0x20
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
sub esp 0x18
lea eax [ ebp - 0x14 ]
and esi 0x7fffffff
mov [ ebp - 0x28 ] esi
lea esi [ ebp - 0x2c ]
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_4b44e7
mov edx eax
add esp 0x20
cmp edx 0xffffffff
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x18 ] edx
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
push [ ebx ]
call sub_4ae057
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_4b4b42
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x20 ] edi
test esi esi
jle r-xdata
cmp esi 0xffffffff
jge r-xdata
push esi
push edi
call sub_4b55c2
pop ecx
mov esi eax
mov eax [ ebp - 0x24 ]
pop ecx
mov ebx [ ebp + 0x20 ]
test ebx ebx
jle r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0xffffffff
jl r-xdata
push ebx
push eax
call sub_4b55c2
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_497c4a
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x24 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov [ ebp + 0x24 ] eax
cmp esi ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp ebx 0x1
jle r-xdata
push 0x2
xor edi edi
push edi
push edi
push esi
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
cmp esi 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
mov eax edi
mov [ ebp - 0x1c ] edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
test esi esi
jle r-xdata
pop eax
jmp r-xdata
mov ebx [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push eax
push esi
push [ ebp - 0x20 ]
mov esi [ ebp + 0x24 ]
push 0x1
push esi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_4a884d
mov [ ebp - 0x1c ] eax
pop ecx
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4b3da0
mov eax esp
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test ebx ebx
jle r-xdata
push 0x2
pop eax
cmp [ ebp - 0x18 ] eax
jb r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push 0x9
push esi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push 0x2
pop eax
cmp [ ebp - 0x18 ] eax
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea ecx [ ebp - 0x12 ]
je r-xdata
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
test eax eax
je r-xdata
add eax 0x8
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea ecx [ ebp - 0x12 ]
je r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
mov esi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov bl [ edi ]
cmp bl [ ecx ]
jb r-xdata
mov ebx [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push esi
push ebx
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_4a884d
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4b3da0
mov esi esp
test esi esi
je r-xdata
mov bl [ esi ]
cmp bl [ ecx ]
jb r-xdata
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
cmp bl dl
jbe r-xdata
push ebx
call sub_4ac96e
pop ecx
mov eax edi
mov ebx [ ebp - 0x1c ]
push edi
push edi
push edi
push [ ebp - 0x20 ]
push esi
push [ ebp - 0x28 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x2c ]
call sub_4a90d1
mov edi eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
cmp bl dl
jbe r-xdata
jmp r-xdata
push esi
call sub_4ac96e
pop ecx
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
jmp r-xdata
sub_4b4dea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
push [ ebp + 0x24 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4b4b42
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4b4e32
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_49bede
mov eax [ ebp - 0x14 ]
test edi edi
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi ] ax
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
push esi
push esi
or esi 0xffffffff
push esi
push [ ebp + 0xc ]
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ esi + 0x1 ]
push ebx
push edi
or esi 0xffffffff
push esi
push [ ebp + 0xc ]
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
lea esi [ eax - 0x1 ]
call sub_4aaf64
mov [ eax ] 0x2a
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi ecx
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_4aaf64
mov [ eax ] 0x2a
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
mov edx ebx
test ebx ebx
je r-xdata
inc esi
add edi 0x2
cmp esi ebx
jb r-xdata
push ebx
push edi
sub ecx eax
push ecx
push eax
mov eax [ ebp - 0x14 ]
push 0x1
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov al [ ecx ]
dec edx
mov [ ebp - 0x8 ] edx
test al al
je r-xdata
movzx eax [ esi + ecx ]
mov [ edi ] ax
cmp [ esi + ecx ] 0x0
je r-xdata
jmp r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
movzx eax al
push ecx
push eax
call sub_4b1e81
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
inc ecx
mov [ ebp - 0x4 ] ecx
test edx edx
jne r-xdata
inc ecx
cmp [ ecx ] 0x0
je r-xdata
sub_4b4fab
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] ax
call sub_4aaf64
push 0x16
pop esi
mov [ eax ] esi
call sub_4aa9c1
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
call sub_49bede
mov eax ebx
cmp [ ebp + 0x18 ] ebx
ja r-xdata
mov [ eax ] esi
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push [ ebp + 0x14 ]
push edi
call sub_4b4e32
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_4aaf64
push 0x16
jmp r-xdata
inc eax
test edi edi
je r-xdata
test edi edi
je r-xdata
pop esi
mov [ eax ] esi
call sub_4aa9c1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp eax ebx
jbe r-xdata
call sub_4aaf64
mov esi [ eax ]
jmp r-xdata
xor eax eax
mov [ edi ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ecx ] eax
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
push 0x50
mov eax ebx
pop esi
xor eax eax
mov [ edi ] ax
call sub_4aaf64
push 0x22
sub_4b50dd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push 0x16
pop eax
pop ebp
retn
sub_4b5109
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push 0x16
pop eax
pop ebp
retn
sub_4b5135
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
push 0x16
pop eax
pop ebp
retn
sub_4b5161
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call sub_4b50d7
and [ ebp - 0x4 ] 0x0
mov ebx eax
and [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4b5135
pop ecx
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4aa9d1
int3
lea eax [ ebp - 0xc ]
push eax
call sub_4b50dd
pop ecx
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov esi [ ebp + 0x8 ]
test edx edx
je r-xdata
push edx
call sub_4a8813
pop ecx
mov ecx esi
lea edx [ ecx + 0x1 ]
mov ecx edx
mov eax esi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
lea eax [ ecx + 0x1 ]
push eax
call sub_4a884d
push 0x0
mov [ rw-data ] eax
call sub_4a8813
mov edx [ rw-data ]
pop ecx
pop ecx
test edx edx
je r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov ebx [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
cmp bl [ ecx + 0x1 ]
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push esi
lea eax [ ecx + 0x1 ]
push eax
push edx
call sub_4a889b
add esp 0xc
test eax eax
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test bl bl
jne r-xdata
push 0x3
pop edi
push edi
push esi
push 0x40
push [ ebx ]
call sub_4a8215
add esp 0x10
test eax eax
jne r-xdata
mov bl [ eax ]
cmp bl [ ecx ]
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x2d
pop edi
sete bl
test bl bl
je r-xdata
inc esi
sub edi 0x1
jne r-xdata
push esi
call sub_4a65cf
pop ecx
imul ecx eax 0xe10
mov [ ebp - 0x4 ] ecx
inc esi
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
test bl bl
je r-xdata
inc esi
push esi
call sub_4a65cf
imul eax eax 0x3c
pop ecx
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
xor eax eax
cmp [ esi ] al
setne al
mov [ ebp - 0xc ] eax
test eax eax
mov eax [ ebp - 0x8 ]
je r-xdata
neg ecx
mov [ ebp - 0x4 ] ecx
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
push 0x3
push esi
push 0x40
push [ eax + 0x4 ]
call sub_4a8215
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x4 ]
call sub_4b50d1
mov [ eax ] esi
mov esi [ ebp - 0xc ]
call sub_4b50c5
mov [ eax ] esi
jmp r-xdata
inc esi
inc esi
push esi
call sub_4a65cf
pop ecx
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_4b5336
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_4b50d7
mov esi eax
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
call sub_4b5135
pop ecx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4aa9d1
int3
lea eax [ ebp - 0x8 ]
push eax
call sub_4b50dd
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_4b5109
pop ecx
test eax eax
jne r-xdata
push [ rw-data ]
call sub_4a8813
mov [ rw-data ] ebx
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp - 0x4 ]
call sub_4b50d1
mov [ eax ] esi
mov esi [ ebp - 0x8 ]
call sub_4b50c5
mov [ eax ] esi
mov esi [ ebp - 0xc ]
call sub_4b50cb
mov [ eax ] esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
imul ecx [ rw-data ] 0x3c
mov edx [ rw-data ]
push edi
xor edi edi
inc edi
mov [ rw-data ] edi
mov [ ebp - 0x4 ] ecx
cmp [ rw-data ] bx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
imul eax edx 0x3c
add ecx eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esi ]
mov [ eax ] bl
cmp [ ebp - 0x10 ] ebx
jne r-xdata
sub eax edx
mov [ ebp - 0x8 ] edi
imul eax eax 0x3c
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x10 ] ebx
jne r-xdata
mov eax [ esi ]
mov [ eax + 0x3f ] bl
jmp r-xdata
call sub_4ac4ca
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push 0x3f
push [ esi ]
push 0xffffffff
push rw-data
push ebx
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push 0x3f
push [ esi + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push edi
call [ WideCharToMultiByte@IAT ]
pop edi
test eax eax
je r-xdata
sub_4b5491
mov edi edi
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
or [ rw-data ] 0xffffffff
lea eax [ ebp - 0x104 ]
or [ rw-data ] 0xffffffff
push ebx
push esi
push edi
mov ebx r--data
xor edi edi
push ebx
push 0x100
push eax
lea eax [ ebp - 0x108 ]
mov [ rw-data ] edi
push eax
call sub_4a747e
add esp 0x10
test eax eax
jne r-xdata
cmp eax 0x22
jne r-xdata
lea edi [ ebp - 0x104 ]
jmp r-xdata
lea eax [ ebp - 0x104 ]
mov esi edi
sub esi eax
neg esi
sbb esi esi
and esi edi
test edi edi
je r-xdata
push [ ebp - 0x108 ]
call sub_4a884d
mov esi eax
pop ecx
test esi esi
jne r-xdata
call sub_4b5336
cmp [ edi ] 0x0
je r-xdata
push ebx
push [ ebp - 0x108 ]
lea eax [ ebp - 0x10c ]
push esi
push eax
call sub_4a747e
add esp 0x10
test eax eax
je r-xdata
push edi
push edi
call sub_4b5161
pop ecx
jmp r-xdata
push edi
call sub_4a8813
mov edi esi
push esi
jmp r-xdata
pop ecx
push esi
call sub_4a8813
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_497c4a
mov esp ebp
pop ebp
retn
call sub_4a8813
jmp r-xdata
sub_4b5571
push 0x8
push r--data
call sub_4985c0
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_498606
retn
push 0x6
call sub_4a97d9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4b55b9
call sub_4b5491
[ rw-data ]
sub_4b55c2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
cmp eax [ ebp + 0xc ]
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_4b55de
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4b3baa
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_4b3bed
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
pop ebp
retn
sub_4b55fb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_4b3c95
push [ esi + 0x4 ]
call sub_4b3d15
lea eax [ ebp - 0x8 ]
push eax
call sub_4b55de
mov eax [ esi ]
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_4b5644
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_4b55de
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ecx ] edx
or edx 0x1f
push eax
mov [ ebp - 0x8 ] edx
call sub_4b55fb
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
call sub_4ad2e9
xor eax eax
mov esp ebp
pop ebp
retn
sub_4b56a0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_4b6415
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4b5d58
sub_4b56e0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_4b6458
call sub_4b5738
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4b5d40
sub_4b5738
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_4b63fc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ r--data ]
mov edx 0x1b
call sub_4b6577
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ r--data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_4b6577
pop edx
retn
sub_4b57f0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_4b58b0
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push 0x1b3f
call sub_4b40bd
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_4b6b62
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_4b7342
dec eax
pop ecx
pop ecx
cmp eax 0x2
ja r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_4b40bd
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
push esi
push ebx
call sub_4b40bd
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4b6bac
add esp 0x1c
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4b65b3
add esp 0x10
sub_4b59cd
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x18
cmp [ ebp + 0x8 ] ax
je r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_49bede
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_4b6884
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4ac2ab
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
mov [ ebp - 0x8 ] eax
jmp r-xdata
add cx 0x20
movzx eax cx
mov [ ebp - 0x8 ] eax
mov cx ax
mov ax [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
movzx eax [ eax + ecx ]
mov ax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_4b5acc
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
jmp r-xdata
push ebx
push edi
call sub_4a9083
neg eax
sbb ebx ebx
xor edi edi
push edi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
inc ebx
mov [ esi ] edi
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
add eax eax
push eax
call sub_4a884d
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
xor eax eax
jmp r-xdata
pop esi
push esi
call sub_4a8813
mov eax edi
push [ ebp - 0x4 ]
push esi
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
pop ecx
pop edi
pop ebx
mov ecx [ ebp + 0xc ]
mov eax esi
mov esi edi
xor edi edi
inc edi
mov [ ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_4aaf2e
pop ecx
jmp r-xdata
sub_4b5b93
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
call sub_4b0af1
mov ecx eax
mov [ ebp - 0x10 ] eax
and ecx edx
mov [ ebp - 0xc ] edx
add esp 0x10
cmp ecx 0xffffffff
jne r-xdata
push 0x2
push esi
push esi
push edi
call sub_4b0af1
mov ecx eax
add esp 0x10
and ecx edx
cmp ecx 0xffffffff
je r-xdata
call sub_4aaf64
mov eax [ eax ]
jmp r-xdata
push ebx
mov ebx [ ebp + 0xc ]
sub ebx eax
mov eax [ ebp + 0x10 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp eax esi
jg r-xdata
jg r-xdata
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push edi
call sub_4b0af1
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
push 0x1
push 0x1000
call sub_4aaf77
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp ebx esi
jbe r-xdata
xor eax eax
call sub_4aaf64
mov eax [ eax ]
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4b0af1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp ebx esi
jae r-xdata
push 0x8000
push edi
call sub_4a44ff
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4aaf64
mov [ eax ] 0xc
jmp r-xdata
pop ebx
push edi
call sub_4ae0e8
pop ecx
push eax
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
mov eax ebx
jg r-xdata
call sub_4aaf64
push esi
mov edi [ eax ]
call sub_4a8813
pop ecx
mov eax edi
jmp r-xdata
call sub_4aaf64
mov [ eax ] 0xd
call sub_4aaf51
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
jmp r-xdata
call sub_4aaf51
cmp [ eax ] 0x5
jne r-xdata
cdq
sub ebx eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
mov eax 0x1000
jmp r-xdata
cmp ebx 0x1000
jb r-xdata
call sub_4aaf64
mov [ eax ] 0xd
jl r-xdata
push eax
push esi
push edi
call sub_4af14d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push edi
call sub_4a44ff
push esi
call sub_4a8813
add esp 0xc
xor esi esi
test ebx ebx
jne r-xdata
test eax eax
jl r-xdata
sub_4b5d5e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4b65b3
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_4b5fcb
jmp r-xdata
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_4b6161
or eax eax
je r-xdata
fxch st1
jmp sub_4b6383
xor ch ch
cmp eax 0x2
je r-xdata
call sub_4b611e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_4b62c8
fchs
sub_4b5fe1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_4b611e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_4b62c8
fchs
sub_4b608d
call sub_4b6161
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_4b611e
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_4b62d6
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_4b6161
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_4b6195
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_4b692c
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_4b6396
sub_4b61d0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_4b6344
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_4b6415
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_4b64a5
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_4b6560
pop edx
retn
call sub_4b6577
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_4b6560
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4b6a57
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_4b6577
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4b6a57
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_4b65b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi sub_49b616
push [ rw-data ]
call [ DecodePointer@IAT ]
mov edi eax
jmp r-xdata
sub eax 0x1b
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1a
jg r-xdata
mov [ ebp - 0x24 ] 0x2
sub eax 0x1
je r-xdata
fld1
cmp eax 0xe
jg r-xdata
fld [ ebp - 0xc ]
fstp [ esi ]
call sub_4aaf64
mov [ eax ] 0x22
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x15
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
retn
sub eax 0xf
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x1
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] r--data
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_4aaf64
mov [ eax ] 0x21
jmp r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3ab
je r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
mov [ ebp - 0x20 ] r--data
sub_4b6884
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
xor eax eax
push eax
push eax
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a944a
pop esi
pop ebp
retn
push esi
push [ ebp + 0x10 ]
call sub_4ab42b
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
mov esi eax
sub_4b68c2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4b73a0
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4b6b62
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_4b6b62
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4b692c
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ r--data ]
jmp r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_4b68c2
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
sub_4b6a57
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
sub eax 0x1
je r-xdata
push 0x8
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
push [ esi ]
call sub_4b716e
pop ecx
call sub_49b5e9
test al al
je r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_4b6c7a
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call sub_49b616
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4b6e5a
add esp 0x18
push 0xffff
push ecx
call sub_4b40bd
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_4b6b78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_4b6bac
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_4b6c7a
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_4b6b78
pop ecx
mov edi eax
call sub_49b5e9
test al al
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4b6e7d
mov esi [ ebx + 0x20 ]
add esp 0x1c
push edi
call sub_4b716e
mov [ esp ] 0xffff
push esi
call sub_4b40bd
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test edi edi
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_4b719d
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_497c4a
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_4b6c7a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
mov eax ebx
and eax [ ebp + 0x10 ]
test al 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
push 0x4
call sub_4b40e9
pop ecx
and esi 0xfffffffb
jmp r-xdata
push 0x1
call sub_4b40e9
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_4b40e9
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_4b40e9
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4b723f
mov eax [ ebp - 0x4 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp - 0x4 ] eax
fst [ ebp - 0x10 ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_4b40e9
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ r--data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ r--data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0xa ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x10 ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x10 ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0xc ] 0x1
sub ecx 0x1
jne r-xdata
or eax 0x80000000
mov [ ebp - 0x10 ] eax
inc edi
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_4b6e5a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b6e7d
add esp 0x1c
pop ebp
retn
sub_4b6e7d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_4b4144
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_4b40aa
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
sub eax 0x1
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_4b716e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_4aaf64
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_4aaf64
mov [ eax ] 0x22
pop ebp
retn
sub_4b719d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + r--data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_4b40bd
push [ ebp + 0x8 ]
call sub_4b716e
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_4b40bd
lea eax [ ebp - 0x20 ]
push eax
call sub_49b616
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + r--data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_4b716e
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_4b723f
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_4b7313
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_4b7313
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_4b7313
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4b7342
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_4b73a0
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4b7342
pop ecx
pop ecx
sub eax 0x1
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
sub eax 0x1
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
sub eax 0x1
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_4302d1
xor eax eax
cmp [ rw-data ] 0x0
setne al
retn
sub_439404
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x1c ]
push 0x0
push eax
call sub_447761
add esp 0x8
push [ esi + 0x2c ]
call sub_43f9d4
add esp 0x4
pop esi
jmp sub_43f9d4
sub_43aed0
mov eax rw-data
retn
sub_43af7c
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax + edx ] 0x3
inc [ ecx ]
retn
sub_43b2dd
mov ecx [ esp + 0x4 ]
xor eax eax
inc eax
jmp r-xdata
mov dl [ ecx ]
cmp dl 0x2f
je r-xdata
inc eax
test dl dl
jne r-xdata
inc ecx
retn
sub_43b729
push j_sub_43f9d4#3
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_43b6bc
add esp 0xc
retn
j_sub_43f9d4#3
jmp sub_43f9d4
sub_43bfa0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ edx + 0x8 ]
test ecx ecx
je r-xdata
retn
mov [ edx + 0x8 ] ecx
sub_43bfb3
mov eax [ esp + 0x4 ]
push [ eax + 0x4 ]
call sub_43f9d4
add esp 0x4
jmp sub_43f9d4
sub_43bfc7
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
retn
sub_43bfcf
xor eax eax
retn
sub_43cc3c
mov eax [ esp + 0x4 ]
cmp [ eax + 0x20 ] 0x0
jle r-xdata
retn
cmp [ eax + 0x4 ] 0x2
jne r-xdata
push [ eax ]
call sub_4a687d
add esp 0x4
sub_4405e1
push [ esp + 0x4 ]
call sub_47db90
add esp 0x4
jmp sub_43f9d4
sub_440743
retn
sub_440c2b
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
retn
push [ esp + 0x8 ]
push eax
call sub_4483c3
add esp 0x8
sub_440d39
retn
j_sub_440e71
jmp sub_440e71
sub_440e35
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x10 ]
call sub_43f9d4
add esp 0x4
push esi
call sub_43f9d4
add esp 0x4
sub_440f09
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
add esp 0x4
retn
sub_441865
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ edx + 0xc ]
test ecx ecx
je r-xdata
retn
mov [ edx + 0xc ] ecx
sub_441878
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
add esp 0x4
push [ esi + 0x10 ]
call sub_490c67
add esp 0x4
pop esi
jmp sub_43f9d4
sub_441924
mov eax [ esp + 0x4 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
add esp 0x4
retn
mov [ eax + 0x40 ] 0x1
retn
sub_441943
mov eax [ esp + 0x4 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
add esp 0x4
retn
mov [ eax + 0x30 ] 0x1
retn
sub_442a8d
push esi
call sub_440fd8
add esp 0x4
xor ebx ebx
inc ebx
jmp sub_442ac5
sub_442ac5
mov ecx [ esp + 0x4 ]
call sub_497c4a
mov eax ebx
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
sub_442ad8
push [ esp + 0x18 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_491507
add esp 0x14
retn
sub_443339
mov eax rw-data
retn
sub_443483
retn
sub_4434aa
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xc ]
retn
sub_4434b2
retn
sub_4434e0
xor eax eax
retn
sub_4434e3
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x4 ] 0x0
setne al
retn
sub_4434f1
mov eax [ esp + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
mov eax 0x7fffffff
test ecx ecx
cmove eax ecx
retn
xor eax eax
dec eax
retn
sub_44350d
xor eax eax
inc eax
retn
sub_443511
xor eax eax
cmp [ esp + 0x8 ] 0x2
setb al
retn
sub_44351c
retn
sub_44351d
retn
sub_44351e
mov eax [ esp + 0x4 ]
xor edx edx
cmp [ esp + 0x8 ] 0x1000
mov eax [ eax + 0x4 ]
setg dl
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x18 ]
add esp 0x8
retn
sub_44353d
xor eax eax
retn
sub_443540
mov eax [ esp + 0x4 ]
push [ eax + 0x1c ]
push [ eax + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ eax + 0x10 ]
call sub_430000
add esp 0x20
retn
sub_443647
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
retn
sub_44388a
retn
sub_4438e2
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xc ]
retn
sub_443955
retn
sub_443956
xor eax eax
retn
sub_443959
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x4 ] 0x0
setne al
retn
sub_443967
mov eax [ esp + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
mov eax 0x7fffffff
test ecx ecx
cmove eax ecx
retn
xor eax eax
dec eax
retn
sub_443983
xor eax eax
inc eax
retn
sub_443987
xor eax eax
retn
sub_44398a
retn
sub_44398b
retn
sub_44398c
mov eax [ esp + 0x4 ]
xor edx edx
cmp [ esp + 0x8 ] 0x1000
mov eax [ eax + 0x4 ]
setg dl
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x18 ]
add esp 0x8
retn
sub_4439ab
xor eax eax
retn
sub_443ab4
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
retn
sub_448020
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov eax [ eax + 0x248 ]
retn
sub_44802d
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x144 ] 0x4
je r-xdata
retn
test [ ecx + 0x14 ] 0x1
jne r-xdata
mov [ ecx + 0x18 ] 0x1
jmp sub_44804f
sub_448357
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x144 ] 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_44837a
add esp 0x4
retn
xor eax eax
retn
sub_4483c3
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
cmp [ eax + 0x144 ] 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
jmp sub_4483dc
retn
sub_4485ec
mov eax [ esp + 0x8 ]
push [ eax ]
push [ eax + 0x14 ]
push [ eax + 0x8 ]
push [ esp + 0x18 ]
call sub_46e667
add esp 0x10
retn
sub_448660
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push r--data
push esi
call sub_447e12
add esp 0xc
mov ecx esi
pop esi
jmp sub_44867f
sub_44877c
push esi
mov esi [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push esi
push [ eax + 0x194 ]
call sub_47eb51
add esp 0x8
push esi
call sub_4968fd
add esp 0x4
pop esi
retn
sub_448b62
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx + 0x8 ]
seta al
cmovb eax esi
pop esi
retn
sub_44a154
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x10 ] 0x0
setne al
retn
sub_44a162
mov eax [ esp + 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ eax + 0x130 ]
mov eax 0x7fffffff
test ecx ecx
cmovns eax ecx
retn
xor eax eax
dec eax
retn
sub_44a181
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x100 ]
retn
sub_44a18c
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x108
xor eax eax
cmp ecx 0x1
jne r-xdata
retn
mov eax 0x104
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + eax ]
sub_44a1af
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x14 ] eax
retn
sub_44a1bb
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x18 ] eax
retn
sub_44a218
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x198 ]
test ecx ecx
je r-xdata
xor eax eax
retn
cmp [ eax + 0xec ] 0x1
sbb eax eax
not eax
or eax ecx
retn
sub_451412
xor eax eax
retn
sub_451415
retn
sub_451416
xor eax eax
retn
sub_451419
xor eax eax
retn
sub_453aa3
lea eax [ ecx - 0x1 ]
cmp eax 0x47
ja r-xdata
mov eax r--data
retn
mov eax [ ecx * 4 + r--data ]
retn
sub_453af8
mov ecx [ esp + 0x4 ]
xor edx edx
push [ esp + 0x8 ]
push 0x0
call sub_44e4fe
add esp 0x8
retn
sub_453dfd
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax + 0x8 ]
xor eax eax
cmp edx [ ecx + 0x8 ]
seta al
cmovb eax esi
pop esi
retn
sub_455d79
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ esp + 0x4 ]
xor edx edx
mov ecx [ ecx ]
push eax
push 0x0
call sub_44e4fe
add esp 0x8
sub_455f72
push ecx
push eax
push [ esi + 0x4c ]
call sub_49723c
jmp r-xdata
add esp 0xc
pop esi
pop edi
retn
sub_45605a
mov ecx esi
pop esi
pop edi
jmp sub_44dea3
sub_456678
mov eax [ esp + 0x8 ]
cmp eax 0x7fff
jg r-xdata
retn
mov ecx [ esp + 0x4 ]
xor edx edx
push eax
call sub_44b052
add esp 0x4
sub_457b04
retn
sub_459396
mov ecx [ esp + 0x4 ]
xor edx edx
push [ esp + 0x8 ]
push 0x0
call sub_44b0db
add esp 0x8
retn
sub_459a18
push 0x3f0
push 0x1
call sub_43f807
add esp 0x8
retn
j_sub_43f9d4
jmp sub_43f9d4
sub_459a2d
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x10
call sub_459a40
add esp 0x4
retn
sub_459ca6
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x18
call sub_459a40
add esp 0x4
retn
sub_459cb9
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x20
call sub_459a40
add esp 0x4
retn
sub_459ccc
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
xor eax eax
mov esi [ ecx + eax * 4 ]
bswap esi
mov [ edx + eax * 4 + 0x3c8 ] esi
inc eax
cmp eax 0x4
jne r-xdata
pop esi
retn
sub_459ceb
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_459cf8
sub_459dd4
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_459de1
sub_45a6cc
push 0x102
push 0x1
call sub_43f807
add esp 0x8
retn
j_sub_43f9d4#2
jmp sub_43f9d4
sub_45a6e1
retn
sub_45a6e2
push esi
mov esi [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov ecx esi
push 0x10
call sub_45a79d
add esp 0x4
mov ecx esi
pop esi
jmp sub_45a837
sub_45a780
push esi
mov esi [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov ecx esi
push 0x20
call sub_45a79d
add esp 0x4
mov ecx esi
pop esi
jmp sub_45a837
sub_45af7c
push 0x1050
push 0x1
call sub_43f807
add esp 0x8
retn
sub_45af8c
push 0x1050
push 0x2
call sub_43f807
add esp 0x8
retn
sub_45b57e
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
bswap edx
mov [ eax + 0x1048 ] edx
mov ecx [ ecx + 0x4 ]
bswap ecx
mov [ eax + 0x104c ] ecx
retn
sub_45b59c
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x20
call sub_45b189
add esp 0x4
retn
sub_45b6fd
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x10
call sub_45b189
add esp 0x4
retn
sub_45b8c8
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
cmp ecx 0x2
jb r-xdata
retn
cmp [ eax + ecx * 4 ] 0x0
jne r-xdata
dec ecx
cmp ecx 0x1
mov [ eax ] ecx
ja r-xdata
sub_45d823
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_45dd54
add esp 0xc
retn
sub_45e46b
retn
sub_45e491
mov ecx 0x84
mov edx [ esp + 0x8 ]
add ecx [ esp + 0x4 ]
push [ esp + 0xc ]
call sub_45e55f
add esp 0x4
retn
sub_45e4ab
mov ecx 0x84
mov edx [ esp + 0x8 ]
add ecx [ esp + 0x4 ]
push [ esp + 0xc ]
call sub_45e55f
add esp 0x4
retn
sub_45e9f0
xor eax eax
mov [ ecx + 0x30 ] eax
mov [ ecx + 0x34 ] eax
mov eax [ edx ]
bswap eax
mov [ ecx + 0x38 ] eax
mov eax [ edx + 0x4 ]
bswap eax
mov [ ecx + 0x3c ] eax
mov [ ecx + 0x80 ] 0x40
retn
sub_45ea12
mov eax [ esp + 0x4 ]
retn
sub_45ea17
retn
sub_45ea18
retn
sub_45ed41
mov ecx 0x114
mov edx [ esp + 0x8 ]
add ecx [ esp + 0x4 ]
jmp sub_45f274
sub_45f424
push 0x8
push 0x1
call sub_43f807
add esp 0x8
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x1000
retn
sub_45f43e
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi ]
call sub_43f9d4
add esp 0x4
mov [ esi ] 0x0
pop esi
jmp sub_43f9d4
sub_45feb7
push 0x88
push 0x6
call sub_43f807
add esp 0x8
retn
j_sub_43f9d4#4
jmp sub_43f9d4
sub_45fef3
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_45f93d
sub_45ff00
mov eax 0x198
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add eax [ esp + 0x4 ]
push eax
call sub_45f904
add esp 0x4
retn
sub_45ff1b
push 0x88
push 0x2
call sub_43f807
add esp 0x8
retn
sub_45ff52
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_45fc9e
sub_45ff5f
mov eax 0x88
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add eax [ esp + 0x4 ]
push eax
call sub_45fdc2
add esp 0x4
retn
sub_4612bc
push 0x88
push 0x3
call sub_43f807
add esp 0x8
retn
sub_4612cc
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
bswap edx
mov [ eax + 0x80 ] edx
mov ecx [ ecx + 0x4 ]
bswap ecx
mov [ eax + 0x84 ] ecx
retn
sub_4614b1
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_45fab9
sub_4614be
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_45f97b
sub_4614cb
push 0x88
push 0x1
call sub_43f807
add esp 0x8
retn
sub_4614db
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
bswap edx
bswap ecx
jmp sub_45f7da
sub_4614ed
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_45fc9e
sub_4614fa
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
jmp sub_45fdc2
sub_461508
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x10 ]
xor eax eax
cmp [ ecx ] 0x0
sete al
retn
sub_4617bb
mov eax [ esp + 0x4 ]
push [ eax + 0x8 ]
push [ eax ]
push [ esp + 0x10 ]
call sub_45c5e9
add esp 0xc
retn
sub_464da1
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x10 ]
call [ eax ]
mov eax [ eax + 0x8 ]
retn
j_sub_4631d0
jmp sub_4631d0
sub_466913
mov ecx [ r--data ]
mov eax [ esp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
xor eax eax
retn
sub_466c84
mov eax [ esp + 0x4 ]
movaps xmm0 [ r--data ]
xor ecx ecx
movups [ eax ] xmm0
mov [ eax + 0x50 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x54 ] ecx
retn
sub_46761e
push 0x5c
push 0x3
call sub_43f807
add esp 0x8
retn
sub_46762b
push 0x114
push [ esp + 0x8 ]
call sub_48f5d3
add esp 0x8
jmp sub_43f9d4
sub_46778e
push 0x10
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_467641
add esp 0xc
retn
sub_4677a1
push esi
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
lea esi [ edx + eax ]
push esi
push [ esp + 0x18 ]
push eax
call sub_4678fa
add esp 0xc
pop esi
retn
sub_467812
push edi
push esi
mov esi [ esp + 0xc ]
mov ecx 0x17
lea edi [ esi + 0xb8 ]
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_467828
mov eax 0xb8
add eax [ esp + 0x4 ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push eax
call sub_466c9e
add esp 0xc
retn
sub_4698af
mov eax [ esp + 0x4 ]
cmp eax 0xa
ja r-xdata
mov eax r--data
retn
mov eax [ eax * 4 + r--data ]
retn
sub_469dda
mov eax [ esp + 0xc ]
add eax 0x10
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_45d990
add esp 0xc
retn
sub_46a009
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
jmp sub_46a016
sub_46a871
push [ esp + 0x4 ]
call sub_46a736
add esp 0x4
jmp sub_43f9d4
sub_46b4ef
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push r--data
call sub_46a7ad
add esp 0xc
retn
sub_46b505
push [ esp + 0x4 ]
call sub_46a736
add esp 0x4
jmp sub_43f9d4
sub_46b516
mov eax [ esp + 0x4 ]
push [ eax + 0x8 ]
call sub_45d970
add esp 0x4
retn
sub_46bd6a
mov eax [ esp + 0x4 ]
movaps xmm0 [ r--data ]
movaps xmm1 [ r--data ]
xor ecx ecx
movups [ eax ] xmm0
movups [ eax + 0x10 ] xmm1
mov [ eax + 0x60 ] ecx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x64 ] ecx
retn
j_sub_46bd8f
jmp sub_46bd8f
sub_46bfd7
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push esi
call sub_46bea9
add esp 0x8
push 0x6c
push esi
call sub_48f5d3
add esp 0x8
pop esi
jmp sub_43f9d4
sub_46bffa
push 0x6c
push [ esp + 0x8 ]
call sub_48f5d3
add esp 0x8
jmp sub_43f9d4
sub_46c00d
push 0x6c
push 0x3
call sub_43f807
add esp 0x8
retn
sub_46c01a
push 0x144
push [ esp + 0x8 ]
call sub_48f5d3
add esp 0x8
jmp sub_43f9d4
sub_46c117
push esi
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
lea esi [ edx + eax ]
push esi
push [ esp + 0x18 ]
push eax
call sub_46c27c
add esp 0xc
pop esi
retn
sub_46c188
push edi
push esi
mov esi [ esp + 0xc ]
mov ecx 0x1b
lea edi [ esi + 0xd8 ]
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_46c19e
mov eax 0xd8
add eax [ esp + 0x4 ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push eax
call sub_46bd8f
add esp 0xc
retn
j_sub_46c333
jmp sub_46c333
sub_46d3da
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push esi
call sub_46d24e
add esp 0x8
push 0xd4
push esi
call sub_48f5d3
add esp 0x8
pop esi
jmp sub_43f9d4
sub_46d400
push 0xd4
push [ esp + 0x8 ]
call sub_48f5d3
add esp 0x8
jmp sub_43f9d4
sub_46d63e
mov eax [ esp + 0x4 ]
movaps xmm0 [ r--data ]
xor ecx ecx
movups [ eax ] xmm0
mov [ eax + 0x10 ] 0xc3d2e1f0
mov [ eax + 0x54 ] ecx
mov [ eax + 0x5c ] ecx
mov [ eax + 0x58 ] ecx
retn
sub_46d8bf
push 0x60
push 0x1
call sub_43f807
add esp 0x8
movaps xmm0 [ r--data ]
xor ecx ecx
movups [ eax ] xmm0
mov [ eax + 0x10 ] 0xc3d2e1f0
mov [ eax + 0x54 ] ecx
mov [ eax + 0x5c ] ecx
mov [ eax + 0x58 ] ecx
retn
j_sub_46d65f
jmp sub_46d65f
sub_46d90b
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push esi
call sub_46d779
add esp 0x8
push 0x60
push esi
call sub_48f5d3
add esp 0x8
pop esi
jmp sub_43f9d4
sub_46d92e
push 0x60
push [ esp + 0x8 ]
call sub_48f5d3
add esp 0x8
jmp sub_43f9d4
sub_46daf0
push 0x60
push 0x3
call sub_43f807
add esp 0x8
retn
sub_46dafd
push 0x120
push [ esp + 0x8 ]
call sub_48f5d3
add esp 0x8
jmp sub_43f9d4
sub_46db13
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x14
call sub_46d9d2
add esp 0x4
retn
sub_46db26
push esi
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
lea esi [ edx + eax ]
push esi
push [ esp + 0x18 ]
push eax
call sub_46ddb4
add esp 0xc
pop esi
retn
sub_46db97
push edi
push esi
mov esi [ esp + 0xc ]
mov ecx 0x18
lea edi [ esi + 0xc0 ]
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_46dbad
mov eax 0xc0
add eax [ esp + 0x4 ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push eax
call sub_46d65f
add esp 0xc
retn
sub_46dda1
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x10
call sub_46d9d2
add esp 0x4
retn
sub_46ed70
mov eax [ esp + 0x4 ]
push [ eax + 0xc ]
call sub_47dc82
add esp 0x4
retn
sub_46efc5
retn
sub_46efc6
retn
sub_46efc7
retn
sub_46efc8
retn
sub_46f394
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax + 0x4 ]
xor eax eax
cmp edx [ ecx + 0x4 ]
seta al
cmovb eax esi
pop esi
retn
sub_47034b
retn
sub_47044d
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
seta al
cmovb eax esi
pop esi
retn
sub_470467
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax + 0x4 ]
xor eax eax
cmp edx [ ecx + 0x4 ]
seta al
cmovb eax esi
pop esi
retn
sub_470483
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax + 0x8 ]
xor eax eax
cmp edx [ ecx + 0x8 ]
seta al
cmovb eax esi
pop esi
retn
sub_47049f
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
seta al
cmovb eax esi
pop esi
retn
sub_4704b9
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax + 0x4 ]
xor eax eax
cmp edx [ ecx + 0x4 ]
seta al
cmovb eax esi
pop esi
retn
sub_4708be
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_43f9d4
add esp 0x4
push [ esi ]
call sub_43f9d4
add esp 0x4
pop esi
jmp sub_43f9d4
sub_472138
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x50 ]
retn
sub_47243e
mov eax r--data
retn
sub_472444
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x4 ] 0x0
setne al
retn
sub_472452
mov eax [ esp + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
mov eax 0x7fffffff
test ecx ecx
cmove eax ecx
retn
xor eax eax
dec eax
retn
sub_47246e
xor eax eax
inc eax
retn
sub_472472
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x48
xor eax eax
cmp ecx 0x1
jne r-xdata
retn
mov eax 0x44
jmp r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ ecx + eax ]
sub_472495
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x10 ] eax
retn
sub_4724a1
retn
sub_4724a2
mov eax [ esp + 0x4 ]
xor edx edx
cmp [ esp + 0x8 ] 0x1000
mov eax [ eax + 0x4 ]
setg dl
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x18 ]
add esp 0x8
retn
sub_4724c1
xor eax eax
retn
sub_4724c4
mov eax [ esp + 0x4 ]
push [ eax + 0x68 ]
push [ eax + 0x70 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ eax + 0xc ]
call sub_430000
add esp 0x20
retn
sub_472d67
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x50 ] eax
retn
sub_47324f
mov eax r--data
retn
sub_473299
mov eax r--data
retn
sub_47329f
mov eax r--data
retn
sub_4732a5
mov eax r--data
retn
sub_4732ab
mov eax r--data
retn
sub_4732b1
mov eax r--data
retn
sub_4732b7
mov eax r--data
retn
sub_4732bd
mov eax r--data
retn
sub_4732c3
mov eax r--data
retn
sub_4732c9
mov eax r--data
retn
sub_4732cf
mov eax r--data
retn
sub_4732d5
mov eax r--data
retn
sub_4732db
mov eax r--data
retn
sub_4732e1
mov eax r--data
retn
sub_4732e7
mov eax r--data
retn
sub_4732ed
mov eax r--data
retn
sub_4732f3
mov eax r--data
retn
sub_4732f9
mov eax r--data
retn
sub_4732ff
mov eax r--data
retn
sub_473305
mov eax r--data
retn
sub_47330b
mov eax r--data
retn
sub_473311
mov eax r--data
retn
sub_473317
mov eax r--data
retn
sub_47331d
mov eax r--data
retn
sub_473323
mov eax r--data
retn
sub_473329
mov eax r--data
retn
sub_47332f
mov eax r--data
retn
sub_473335
mov eax r--data
retn
sub_47333b
mov eax r--data
retn
sub_473341
mov eax r--data
retn
sub_473347
mov eax r--data
retn
sub_47334d
mov eax r--data
retn
sub_473353
mov eax r--data
retn
sub_473359
mov eax r--data
retn
sub_47335f
mov eax r--data
retn
sub_473365
mov eax r--data
retn
sub_47336b
mov eax r--data
retn
sub_473371
mov eax r--data
retn
sub_473377
mov eax r--data
retn
sub_47337d
mov eax r--data
retn
sub_473383
mov eax r--data
retn
sub_473389
mov eax r--data
retn
sub_47338f
mov eax r--data
retn
sub_473395
mov eax r--data
retn
sub_47339b
mov eax r--data
retn
sub_4733a1
mov eax r--data
retn
sub_4733a7
mov eax r--data
retn
sub_4733ad
mov eax r--data
retn
sub_4733b3
mov eax r--data
retn
sub_47b181
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x1074 ] 0x0
je r-xdata
pop esi
retn
push [ esi + 0x1070 ]
call sub_43f9d4
add esp 0x4
xor eax eax
mov [ esi + 0x1070 ] eax
mov [ esi + 0x1074 ] eax
sub_47b1ee
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
add ecx 0xcc
xor eax eax
cmp edx 0x1
jne r-xdata
retn
add ecx 0xc8
jmp r-xdata
mov eax [ ecx ]
sub_47b2fb
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x108c ] eax
retn
sub_47dacb
mov eax [ rw-data ]
retn
sub_47db90
push esi
mov esi [ esp + 0x8 ]
call sub_47da91
push esi
push [ rw-data ]
call sub_47eb51
add esp 0x8
pop esi
retn
sub_47dc0f
mov ecx [ esp + 0x4 ]
xor edx edx
xor eax eax
dec edx
cmp ecx [ esp + 0x8 ]
seta al
cmovb eax edx
retn
sub_47dc24
push esi
mov esi [ esp + 0x8 ]
push 0x8
push 0x1
call sub_43f807
add esp 0x8
mov [ eax ] 0x0
mov [ eax + 0x4 ] esi
pop esi
retn
sub_47e50d
xor eax eax
push eax
push eax
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_47e3cc
add esp 0x14
retn
sub_47e526
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_47e3cc
add esp 0x14
retn
sub_47ec45
mov ecx [ esp + 0x4 ]
mov edx r--data
push 0xb2
call sub_47ebf2
add esp 0x4
test eax eax
je sub_47eb9c
mov eax 0x2
retn
sub_47fff1
cmp [ esp + 0x10 ] 0x1
jne r-xdata
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x14 ]
push [ eax ]
call sub_4836c3
add esp 0x4
sub_48000a
cmp [ esp + 0x10 ] 0x1
jne r-xdata
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x14 ]
push [ eax ]
call sub_48381a
add esp 0x4
sub_480785
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x0
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_4807a4
add esp 0x10
retn
sub_48083b
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push 0x20
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_4807a4
add esp 0x10
retn
sub_4811be
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
seta al
cmovb eax esi
pop esi
retn
sub_4811d8
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax + 0x4 ]
xor eax eax
cmp edx [ ecx + 0x4 ]
setg al
cmovl eax esi
pop esi
retn
sub_4812ef
mov eax [ esp + 0x4 ]
push sub_481307
push [ esp + 0xc ]
push [ eax ]
call sub_47e50d
add esp 0xc
retn
sub_481307
mov eax [ esp + 0x8 ]
xor edx edx
dec edx
mov ecx [ eax ]
xor eax eax
cmp ecx [ esp + 0x4 ]
setb al
cmova eax edx
retn
sub_481f67
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x34 ]
lea edx [ eax + 0x34 ]
add eax 0x38
cmp ecx [ esp + 0x4 ]
cmovne eax edx
mov eax [ eax ]
retn
sub_48340f
push 0x0
call [ MessageBeep@IAT ]
retn
sub_483418
mov eax [ esp + 0x4 ]
push 0x10
push [ eax + 0x2c ]
push [ esp + 0x10 ]
push [ eax ]
call [ MessageBoxA@IAT ]
retn
sub_48342e
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0xc8 ] 0x1
mov [ ecx + 0xcc ] eax
retn
sub_4834c7
push esi
mov esi [ esp + 0xc ]
mov al [ esp + 0x18 ]
mov cl [ esp + 0x14 ]
mov dl [ esp + 0x10 ]
mov [ esi + 0xbc ] 0x1
mov [ esi + 0xc0 ] dl
mov [ esi + 0xc1 ] cl
mov [ esi + 0xc2 ] al
pop esi
retn
sub_483536
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xd0 ]
retn
sub_483541
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ ecx + 0xd0 ] eax
retn
sub_4835b6
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x28 ]
call sub_43f9d4
add esp 0x4
push [ esi + 0x2c ]
call sub_43f9d4
add esp 0x4
pop esi
retn
sub_483609
push r--data
push [ esp + 0x8 ]
call sub_4a7d00
add esp 0x8
test eax eax
mov eax r--data
mov ecx r--data
cmove ecx eax
push ecx
call sub_48f4af
add esp 0x4
retn
sub_483633
push r--data
push [ esp + 0x8 ]
call sub_4a7d00
add esp 0x8
test eax eax
je r-xdata
push r--data
call sub_43f79e
add esp 0x4
retn
xor eax eax
retn
sub_483659
mov eax [ esp + 0x8 ]
retn
sub_48381a
push 0x0
push [ esp + 0x8 ]
call sub_48e83d
add esp 0x8
retn
sub_48385d
xor eax eax
retn 0x10
sub_48468d
push 0x0
push sub_4836fb
push [ esp + 0xc ]
push 0x6f
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
retn
sub_484d61
retn
sub_484d62
xor eax eax
cmp [ rw-data ] 0xfde9
sete al
retn
sub_484d72
push [ esp + 0x8 ]
push [ rw-data ]
call sub_47b31d
add esp 0x8
retn
sub_486113
and edx 0xfffffffd
mov [ esp + 0x20 ] 0x3
jmp r-xdata
mov [ esp + 0x10 ] edx
jmp r-xdata
xor esi esi
jmp sub_486165
sub_486120
or edx 0x10
xor esi esi
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x10 ] edx
inc esi
jmp sub_486165
sub_486134
and edx 0xffffffef
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x10 ] edx
jmp r-xdata
xor esi esi
jmp sub_486165
sub_486145
and edx 0xfffffffe
xor eax eax
inc eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x20 ] eax
xor esi esi
jmp sub_486165
sub_486157
or edx 0x1
xor esi esi
inc esi
mov [ esp + 0x10 ] edx
mov [ esp + 0x20 ] esi
sub_486628
mov esi edx
call sub_48a997
jmp sub_487a7d
sub_488501
mov eax [ esp + 0x18 ]
and eax 0x3
mov al [ eax + r--data ]
jmp sub_488571
sub_488510
mov eax [ esp + 0x18 ]
and eax 0x3
mov al [ eax + r--data ]
jmp sub_488571
sub_48851f
mov eax [ esp + 0x18 ]
and eax 0x3
mov al [ eax + r--data ]
jmp sub_488571
sub_488537
mov eax [ esp + 0x18 ]
and eax 0x3
mov al [ eax + r--data ]
jmp sub_488571
sub_488546
mov eax [ esp + 0x18 ]
and eax 0x3
mov al [ eax + r--data ]
jmp sub_488571
sub_488555
mov eax [ esp + 0x18 ]
and eax 0x3
mov al [ eax + r--data ]
jmp sub_488571
j_sub_488b9a
mov eax 0x43
jmp sub_488b9a
sub_489d5f
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
jmp sub_489d6d
sub_48cbfc
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov ecx [ esp + 0xc ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ ecx ] eax
sub_48d068
push 0x1
push 0x0
push [ rw-data ]
call [ InvalidateRect@IAT ]
retn
sub_48d0b0
push [ rw-data ]
call [ IsIconic@IAT ]
retn
sub_48d141
cmp [ esp + 0x8 ] 0x0
mov eax rw-data
mov ecx rw-data
cmovne ecx eax
mov eax [ ecx ]
retn
sub_48d156
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ rw-data ]
call sub_47b212
add esp 0x10
retn
sub_48d171
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ rw-data ]
call sub_47b2a5
add esp 0xc
retn
sub_48d188
xor eax eax
inc eax
retn
sub_48d3f0
mov eax [ esp + 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_4919ec
add esp 0x8
jmp sub_43f9d4
sub_48d512
cmp [ rw-data ] 0x1
jne r-xdata
retn
mov eax [ esp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
xor ecx ecx
inc ecx
jmp sub_48ce6e
sub_48d9f7
mov eax [ esp + 0x8 ]
mov edx [ r--data ]
mov ecx [ r--data ]
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
xor eax eax
retn
sub_48dce0
mov eax [ esp + 0x8 ]
push [ eax + 0x4 ]
call sub_43f9d4
add esp 0x4
xor eax eax
retn
sub_48dd5b
mov eax r--data
push eax
call sub_43f79e
add esp 0x4
mov [ esi + 0x4 ] eax
push eax
call sub_4a7f30
add esp 0x4
mov [ esi ] eax
xor eax eax
pop esi
retn
sub_48de35
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax + 0x8 ]
xor eax eax
cmp edx [ ecx + 0x8 ]
seta al
cmovb eax esi
pop esi
retn
sub_48e612
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx + 0x8 ]
seta al
cmovb eax esi
pop esi
retn
sub_48e677
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x20 ]
retn
sub_48e82b
mov ecx [ rw-data ]
xor eax eax
or ecx [ rw-data ]
setne al
retn
sub_48ea0f
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ edx + 0x44 ]
test ecx ecx
je r-xdata
retn
mov [ edx + 0x44 ] ecx
sub_48ea82
mov eax [ esp + 0x4 ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ eax + 0x10 ]
call sub_48e219
add esp 0xc
retn
sub_48ea9a
mov eax [ esp + 0x4 ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ eax + 0x10 ]
call sub_48e219
add esp 0xc
retn
sub_48eab2
mov eax [ esp + 0x4 ]
push [ eax + 0x10 ]
call sub_48e31d
add esp 0x4
retn
sub_48eac2
retn
sub_48eb3b
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x40 ]
retn
sub_48f498
push r--data
call sub_4a7473
add esp 0x4
push eax
call sub_43f79e
add esp 0x4
retn
sub_48f4f9
mov eax [ esp + 0x4 ]
mov eax [ eax ]
retn
sub_48f500
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push [ ecx ]
push [ eax ]
call sub_4a7d00
add esp 0x8
xor ecx ecx
test eax eax
sete cl
mov eax ecx
retn
sub_48f51e
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
xor eax eax
cmp [ ecx ] 0x0
sete al
retn
sub_48f52d
mov eax [ esp + 0x4 ]
push [ eax ]
call sub_43f9d4
add esp 0x4
jmp sub_43f9d4
sub_48f5d3
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
sub_48f7b9
push 0x90
push 0x0
push rw-data
call sub_49acf0
add esp 0xc
mov [ rw-data ] 0x94
push rw-data
call [ GetVersionExA@IAT ]
retn
sub_48f8e5
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
setg al
cmovl eax esi
pop esi
retn
sub_48f8ff
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
setg al
cmovl eax esi
pop esi
retn
sub_4904c0
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
setg al
cmovl eax esi
pop esi
retn
sub_4904da
push esi
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
xor esi esi
dec esi
mov edx [ eax ]
xor eax eax
cmp edx [ ecx ]
setg al
cmovl eax esi
pop esi
retn
sub_49090b
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0xc ] 0x0
sete al
retn
sub_490b59
xor eax eax
retn
sub_490ca4
mov eax [ esp + 0x4 ]
inc [ eax ]
retn
sub_490d69
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ edx + 0xc ]
test ecx ecx
je r-xdata
retn
mov [ edx + 0xc ] ecx
sub_490ed8
retn
sub_490f40
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
retn
sub_491e93
mov eax [ esp + 0x8 ]
xor edx edx
dec edx
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ esp + 0x4 ]
setb al
cmova eax edx
retn
sub_491f8a
push 0x0
push [ esp + 0x8 ]
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
movzx eax [ eax + 0x8 ]
push eax
call [ rw-data ]
movzx eax ax
retn
sub_49270a
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ edx + 0x2c ]
test ecx ecx
je r-xdata
retn
mov [ edx + 0x2c ] ecx
sub_49277c
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x30 ]
retn
sub_492784
xor eax eax
retn
sub_4927f5
mov ecx [ esp + 0x4 ]
xor edx edx
inc edx
jmp sub_492801
sub_4928e3
mov eax [ esp + 0x4 ]
push 0x1
push [ esp + 0xc ]
push 0x0
push eax
push eax
call sub_48e968
add esp 0x14
retn
sub_4928fc
sub esp 0x8
mov eax r--data
mov [ esp + 0x4 ] eax
mov [ esp ] eax
call [ FindWindowA@IAT ]
sub esp 0x8
xor ecx ecx
test eax eax
setne cl
mov eax ecx
add esp 0x8
retn
sub_492921
push 0x1e
push r--data
push r--data
call sub_4a509d
add esp 0xc
retn
sub_49384e
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_493c10
push esi
call sub_47db90
add esp 0x4
pop esi
jmp sub_43f9d4
sub_493869
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
push [ esp + 0x8 ]
call sub_493935
add esp 0x4
retn
sub_4938a2
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x10 ]
retn
sub_4938aa
retn
sub_4938f4
mov eax r--data
retn
sub_4938fa
xor eax eax
inc eax
retn
sub_4938fe
mov eax [ esp + 0x4 ]
xor ecx ecx
dec ecx
cmp [ eax ] ecx
mov eax 0x7fffffff
cmovne eax ecx
retn
sub_493910
xor eax eax
inc eax
retn
sub_493914
xor eax eax
retn
sub_493917
retn
sub_493918
retn
sub_493919
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
retn
push [ esp + 0x8 ]
push eax
call sub_48e62d
add esp 0x8
sub_493932
xor eax eax
retn
sub_493a9f
mov eax 0xffffcffb
mov ebp r--data
and eax [ esp + 0x20 ]
or eax 0x2004
jmp sub_493ac3
sub_494288
push [ esp + 0x4 ]
call [ RegCloseKey@IAT ]
retn
sub_494677
mov eax [ esp + 0xc ]
push [ eax ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_494222
add esp 0xc
retn
sub_494826
mov eax [ esp + 0x4 ]
push [ eax ]
call [ RegCloseKey@IAT ]
jmp sub_43f9d4
sub_494b22
push r--data
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_494837
add esp 0x10
xor ecx ecx
cmp eax 0x1
setne cl
mov eax ecx
retn
sub_494f1c
mov ecx [ esp + 0x4 ]
mov edx ecx
push 0x0
call sub_494f2d
add esp 0x4
retn
sub_49519a
mov edx [ esp + 0x4 ]
xor ecx ecx
push 0x0
call sub_494f2d
add esp 0x4
retn
sub_495f00
mov eax [ esp + 0x4 ]
and eax 0x7f
movzx eax [ eax + eax + r--data ]
retn
sub_496029
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_495f10
add esp 0xc
retn
sub_4960ec
mov ecx [ esp + 0x4 ]
xor eax eax
cmp ecx 0x24
ja r-xdata
retn
shl ecx 0x4
mov eax [ ecx + r--data ]
sub_496101
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
retn
sub_496239
sub esp 0x8
movzx ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
call [ IsDBCSLeadByteEx@IAT ]
retn
sub_4963f9
push 0x5
push 0x40
push r--data
push r--data
call sub_496318
add esp 0x10
retn
sub_4966fc
push 0x98
push [ esp + 0xc ]
call sub_431daf
add esp 0x8
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
retn
push eax
push [ esp + 0x8 ]
call sub_496d6f
add esp 0x8
sub_4970f6
retn
sub_497188
mov eax [ esp + 0x4 ]
push [ esp + 0x8 ]
push [ eax + 0x4c ]
call sub_4483c3
add esp 0x8
retn
sub_497c42
retn
sub_497c43
retn
sub_497c44
retn
sub_497c45
retn
sub_497c46
xor eax eax
inc eax
retn
sub_497c8d
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_497f93
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_4a430e
pop ecx
pop ecx
retn
_start
call sub_498265
jmp sub_497e6e
sub_4981ab
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_4981d0
push ebp
mov ebp esp
call sub_4987b5
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_498250
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_498215
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_498301
xor eax eax
retn
sub_498304
xor eax eax
inc eax
retn
sub_498308
mov eax 0x4000
retn
sub_49830e
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_49831a
mov al 0x1
retn
sub_49831d
push 0x30000
push 0x10000
push 0x0
call sub_4a3ae7
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_498374
int3
retn
sub_49833e
retn
sub_49833f
call sub_43aed0
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_443339
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_49835c
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_498368
mov eax rw-data
retn
sub_49836e
mov eax rw-data
retn
sub_498506
push sub_498512
call [ SetUnhandledExceptionFilter@IAT ]
retn
j_sub_49833e
jmp [ r--data ]
sub_498606
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_4987b5
xor eax eax
cmp [ rw-data ] eax
setne al
retn
sub_4987ea
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
call sub_4a8944
call sub_4a899b
push 0x0
call sub_4a8c1c
pop ecx
sub_49b323
push rw-data
mov ecx rw-data
call sub_49b442
mov al 0x1
retn
sub_49b335
push rw-data
call sub_4a3ecc
mov [ esp ] rw-data
call sub_4a3ecc
pop ecx
mov al 0x1
retn
sub_49b34f
mov al 0x1
retn
sub_49b352
mov al 0x1
retn
sub_49b355
call sub_4a4231
mov al 0x1
retn
sub_49b35d
mov al 0x1
retn
sub_49b360
mov al 0x1
retn
sub_49b3a0
push 0x0
call sub_4987ea
pop ecx
retn
sub_49b420
mov al 0x1
retn
sub_49b473
push r--data
push r--data
call sub_4aa727
pop ecx
pop ecx
retn
sub_49b485
push r--data
push r--data
call sub_4aa7aa
pop ecx
pop ecx
retn
sub_49b5cf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_49b5e3
mov eax rw-data
retn
sub_49b5e9
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
neg eax
sbb eax eax
neg eax
retn
sub_49b602
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_49b442
pop ebp
retn
sub_49b65f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_49b423
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_49b6b9
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_49b5cf
pop ecx
retn
sub_49b70a
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_49b5cf
pop ecx
retn
sub_49bf61
mov edi edi
push esi
mov esi ecx
push [ esi + 0x404 ]
call sub_4a8813
and [ esi + 0x404 ] 0x0
pop ecx
pop esi
retn
sub_49c7de
call sub_49c85a
test al al
jne r-xdata
mov al 0x1
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
sub_49c7fd
call sub_49c884
test al al
jne r-xdata
mov al 0x1
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
sub_49c81c
call sub_49c8ae
test al al
jne r-xdata
mov al 0x1
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
sub_49c83b
call sub_49c8c9
test al al
jne r-xdata
mov al 0x1
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
sub_49c8ae
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_49e25d
mov al 0x1
retn
sub_49c8c9
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_49e2df
mov al 0x1
retn
sub_49e004
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_49de46
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_49e023
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_49de46
retn
sub_49e162
mov eax [ ecx ]
test eax eax
jne r-xdata
push eax
call sub_49e19e
pop ecx
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
sub_49e183
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
sub_49ec4f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_49fd61
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_49ff78
cmp [ ecx + 0x4 ] 0x0
je r-xdata
push 0x0
push 0x19f
push r--data
push r--data
push r--data
call sub_4aa9d1
int3
mov eax [ ecx ]
retn
sub_49ff9d
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x1a5
push r--data
push r--data
push r--data
call sub_4aa9d1
int3
mov eax [ ecx ]
retn
sub_4a2379
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax 0x7fffff
xor edx edx
retn
or eax 0xffffffff
mov edx 0xfffff
retn
sub_4a2878
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
movsx eax [ ecx ]
inc ecx
mov [ edx + 0x8 ] ecx
retn
or eax 0xffffffff
retn
sub_4a2933
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax 0xffffff
xor edx edx
retn
or eax 0xffffffff
mov edx 0x1fffff
retn
sub_4a29cf
cmp [ ecx + 0x2e ] 0x0
je r-xdata
mov eax [ ecx + 0x10 ]
sub eax [ ecx + 0x8 ]
push 0x0
push 0x0
push eax
call sub_4a330a
retn
mov al 0x1
retn
sub_4a310e
mov eax [ ecx + 0x20 ]
cmp eax 0x2
jne r-xdata
cmp eax 0x3
je r-xdata
mov [ ecx + 0x24 ] 0x0
mov [ ecx + 0x24 ] 0x1
cmp eax 0x4
je r-xdata
cmp eax 0x8
jne r-xdata
retn
sub_4a323a
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
sub_4a3256
cmp [ ecx ] 0x0
jne r-xdata
cmp [ ecx + 0x18 ] 0x0
je r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
mov al 0x1
retn
sub_4a3277
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
cmp eax [ ecx + 0x4 ]
ja r-xdata
call sub_4aaf64
mov [ eax ] 0x16
call sub_4aa9c1
xor al al
retn
mov al 0x1
retn
sub_4a3483
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe06d7363
sete al
pop ebp
retn
sub_4a3595
mov esp [ ebp - 0x18 ]
call sub_4a8316
sub_4a35a0
push 0x2
call sub_4a9821
pop ecx
retn
sub_4a369e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4a36ad
push 0x1
push 0x2
push 0x0
call sub_4a3496
add esp 0xc
retn
sub_4a36bc
push 0x1
push 0x0
push 0x0
call sub_4a3496
add esp 0xc
retn
sub_4a36cb
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_4a3496
add esp 0xc
pop ebp
retn
sub_4a3719
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4a3496
add esp 0xc
pop ebp
retn
sub_4a372f
xor eax eax
mov ecx rw-data
inc eax
xchg [ ecx ] eax
retn
sub_4a3783
push 0x4
call sub_4a9821
pop ecx
retn
sub_4a3adc
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4a37ee
sub_4a3b8b
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4a9821
pop ecx
retn
sub_4a3bdc
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4a9821
pop ecx
retn
sub_4a3e99
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_4a3f09
pop ecx
pop ecx
pop ebp
retn
sub_4a41f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_4a40d9
pop ecx
sub_4a4211
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_4a4108
pop ecx
j_sub_4a3f80
jmp sub_4a3f80
j_sub_4a3faf
jmp sub_4a3faf
sub_4a4481
mov eax [ rw-data ]
retn
sub_4a4487
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4a45d0
mov eax [ rw-data ]
retn
sub_4a5043
mov eax r--data
retn
sub_4a50e5
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a5049
add esp 0x10
pop ebp
retn
sub_4a59d6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4a51e2
pop ecx
pop ecx
pop ebp
retn
sub_4a66e5
push [ ebp - 0x20 ]
call sub_49b5cf
pop ecx
retn
sub_4a679c
push 0x1
call sub_4a67a5
pop ecx
retn
sub_4a684a
push [ ebp - 0x28 ]
call sub_49b5cf
pop ecx
retn
sub_4a6874
push 0x8
call sub_4a9821
pop ecx
retn
sub_4a68ce
push esi
call sub_49b5cf
pop ecx
retn
sub_4a6912
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4a68d6
sub_4a6a15
push [ ebp - 0x20 ]
call sub_49b5cf
pop ecx
retn
sub_4a6ada
push [ ebp + 0x10 ]
call sub_49b5cf
pop ecx
retn
sub_4a6ae4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4a6a1f
sub_4a6b99
test esi esi
jne r-xdata
push [ ebp - 0x1c ]
call sub_49b5cf
pop ecx
retn
push [ ebp - 0x1c ]
call sub_4ae8a5
pop ecx
sub_4a6bb0
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4a6aef
add esp 0xc
pop ebp
retn
sub_4a6cec
push esi
call sub_49b5cf
pop ecx
retn
sub_4a6ec0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4a6edd
add esp 0x14
pop ebp
retn
sub_4a6f68
push esi
call sub_49b5cf
pop ecx
retn
j_sub_4a8813
jmp sub_4a8813
sub_4a703b
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_49b5cf
pop ecx
retn
sub_4a72fd
push 0xb
call sub_4a9821
pop ecx
retn
sub_4a73c2
push 0xb
call sub_4a9821
pop ecx
retn
sub_4a7473
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4a7286
sub_4a7691
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4a884d
sub_4a7b1a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4b0719
sub_4a7be9
push [ ebp - 0x1c ]
call sub_49b5cf
pop ecx
retn
sub_4a833e
xor eax eax
inc eax
retn
sub_4a8620
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x100
push [ ebp + 0x8 ]
call sub_4a849c
add esp 0xc
pop ebp
retn
sub_4a863a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x200
push [ ebp + 0x8 ]
call sub_4a8352
add esp 0xc
pop ebp
retn
sub_4a880b
push esi
call sub_49b5cf
pop ecx
retn
sub_4a88f5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
cmp eax rw-data
je r-xdata
push eax
call sub_4a8813
pop ecx
sub_4a8944
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_4a8b25
or [ rw-data ] 0xffffffff
pop ecx
sub_4a8c4e
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_4a8d49
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_4a8ed5
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4b2295
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4a8f07
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4a8dc0
add esp 0xc
pop ebp
retn 0x8
sub_4a8f1e
push r--data
push r--data
push r--data
push 0x1
call sub_4a8f6c
add esp 0x10
retn
sub_4a8f38
push r--data
push r--data
push r--data
push 0x1a
call sub_4a8f6c
add esp 0x10
retn
sub_4a8f52
push r--data
push r--data
push r--data
push 0x1b
call sub_4a8f6c
add esp 0x10
retn
sub_4a9577
call sub_4a8f38
test eax eax
je r-xdata
xor eax eax
retn
call sub_4a8f52
test eax eax
je r-xdata
xor eax eax
inc eax
retn
sub_4a97d9
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_4a9821
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4a9838
call [ GetProcessHeap@IAT ]
test eax eax
mov [ rw-data ] eax
setne al
retn
sub_4a9849
and [ rw-data ] 0x0
mov al 0x1
retn
sub_4a9897
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4a9821
pop ecx
retn
sub_4a98f8
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4a9821
pop ecx
retn
sub_4a9943
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4a9821
pop ecx
retn
sub_4a998b
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4a9821
pop ecx
retn
sub_4a9cfa
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_4a919b
or [ rw-data ] 0xffffffff
sub_4a9ecd
push 0x7
call sub_4a9821
pop ecx
retn
sub_4a9f02
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
mov al 0x1
retn
sub_4a9f52
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4a9821
pop ecx
retn
sub_4aa3f5
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
retn
push 0x1
push 0xfffffffd
call sub_4aa2f4
pop ecx
pop ecx
mov [ rw-data ] 0x1
sub_4aa4a4
push 0x5
call sub_4a9821
pop ecx
retn
sub_4aa932
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_49b442
pop ebp
retn
sub_4aaa04
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_49b442
pop ebp
retn
sub_4aaaa5
push 0x0
call sub_4a9821
pop ecx
retn
sub_4aaafc
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_4a9821
pop ecx
retn
sub_4aadb5
cmp [ ebp - 0x1d ] 0x0
je r-xdata
retn
push 0x3
call sub_4a9821
pop ecx
sub_4ab06b
push 0x8
call sub_4a9821
pop ecx
retn
sub_4ab2e7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4ab1c6
add esp 0x14
pop ebp
retn
sub_4ac1cf
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_4ac3dc
call sub_4b3baa
and eax 0x300
retn
sub_4ac4b9
mov ecx [ ebp - 0x1c ]
xor ecx ebp
sub_497c4a
sub_498606
sub_4accbe
push 0x4
call sub_4a9821
pop ecx
retn
sub_4ad1c2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4acd37
sub_4ad226
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4ad1cd
add esp 0x10
pop ebp
retn
sub_4adbd4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4ad894
sub_4add19
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4adc1e
sub_4ade62
push 0x7
call sub_4a9821
pop ecx
retn
sub_4ae04e
push 0x7
call sub_4a9821
pop ecx
retn
sub_4ae4ba
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4ae3d1
sub_4ae50a
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_49b5cf
pop ecx
retn
sub_4ae6f7
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4adf22
pop ecx
retn
sub_4ae89c
push 0x8
call sub_4a9821
pop ecx
retn
sub_4aea2f
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_4adf22
pop ecx
retn
sub_4af124
push esi
call sub_4adf22
pop ecx
retn
sub_4af4da
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4af359
sub_4af88f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4af717
sub_4afc60
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4af89a
sub_4afc6b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4af9ab
sub_4b0248
push esi
call sub_4adf22
pop ecx
retn
sub_4b0844
push esi
call sub_4adf22
pop ecx
retn
sub_4b0945
push edi
call sub_4adf22
pop ecx
retn
sub_4b0acb
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4b0782
sub_4b0ad6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b086d
add esp 0x10
pop ebp
retn
sub_4b2269
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4b21a0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4b22b4
call eax
retn
sub_4b239f
call sub_4aa3f5
xor ecx ecx
test al al
sete cl
mov eax ecx
retn
sub_4b3db6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_497c60
sub_4b3f90
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b3fa7
add esp 0xc
pop ebp
retn
sub_4b4063
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_4b40aa
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4b4144
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4b508e
push 0x7080
mov ecx rw-data
call sub_49b442
push 0x1
mov ecx rw-data
call sub_49b442
push 0xfffff1f0
mov ecx rw-data
call sub_49b442
mov [ rw-data ] rw-data
xor eax eax
retn
sub_4b50c5
mov eax rw-data
retn
sub_4b50cb
mov eax rw-data
retn
sub_4b50d1
mov eax rw-data
retn
sub_4b50d7
mov eax [ rw-data ]
retn
sub_4b55b9
push 0x6
call sub_4a9821
pop ecx
retn
sub_4b5a96
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_4b5ab5
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4b5d24
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_4b5d40
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_4b5d5e
leave
retn
sub_4b5d58
movlpd xmm0 [ esp + 0x4 ]
j_sub_4b62e8
jmp sub_4b62e8
sub_4b6038
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_4b6064
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_4b6074
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4b6079
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_4b6383
fyl2x
retn
sub_4b607d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_4b6383
fyl2x
retn
j_sub_4b62e8#2
jmp sub_4b62e8
sub_4b60c9
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4b60ff
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_4b6111
or cl cl
jne r-xdata
jmp sub_4b62d6
fstp st0
fld [ r--data ]
retn
sub_4b62c8
fxch st1
fstp st0
retn
sub_4b62d6
fstp st0
fldz
retn
sub_4b62db
fstp st0
fstp st0
fldz
test ch ch
je r-xdata
retn
fchs
sub_4b62e8
fstp st0
fstp st0
fld1
retn
sub_4b62ef
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x0
retn
sub_4b631a
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_4b6383
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4b6396
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_4b63a0
fstp st0
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
or cl cl
je r-xdata
fchs
retn
fld [ r--data ]
fmulp st1
sub_4b63bd
or cl cl
je r-xdata
retn
fchs
sub_4b63d0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_4b63e5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_4b63fc
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x0
retn
mov eax 0x0
retn
sub_4b6458
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_4b6b62
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
CreateFontIndirectA
jmp [ CreateFontIndirectA@IAT ]
CreateCompatibleDC
jmp [ CreateCompatibleDC@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
DeleteDC
jmp [ DeleteDC@IAT ]
SelectObject
jmp [ SelectObject@IAT ]
GetStockObject
jmp [ GetStockObject@IAT ]
CreateSolidBrush
jmp [ CreateSolidBrush@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SetTextColor
jmp [ SetTextColor@IAT ]
SetBkColor
jmp [ SetBkColor@IAT ]
TextOutA
jmp [ TextOutA@IAT ]
DeleteObject
jmp [ DeleteObject@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
GetCaretBlinkTime
jmp [ GetCaretBlinkTime@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
GetWindowTextLengthA
jmp [ GetWindowTextLengthA@IAT ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
SetWindowPos
jmp [ SetWindowPos@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
SystemParametersInfoA
jmp [ SystemParametersInfoA@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
MapDialogRect
jmp [ MapDialogRect@IAT ]
GetDC
jmp [ GetDC@IAT ]
SetMapMode
jmp [ SetMapMode@IAT ]
GetTextExtentExPointA
jmp [ GetTextExtentExPointA@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
SendDlgItemMessageA
jmp [ SendDlgItemMessageA@IAT ]
SetWindowLongA
jmp [ SetWindowLongA@IAT ]
MessageBeep
jmp [ MessageBeep@IAT ]
RegisterWindowMessageA
jmp [ RegisterWindowMessageA@IAT ]
DrawEdge
jmp [ DrawEdge@IAT ]
IsDlgButtonChecked
jmp [ IsDlgButtonChecked@IAT ]
GetDeviceCaps
jmp [ GetDeviceCaps@IAT ]
ChooseFontA
jmp [ ChooseFontA@IAT ]
GetDlgItemTextA
jmp [ GetDlgItemTextA@IAT ]
SetDlgItemTextA
jmp [ SetDlgItemTextA@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
ChooseColorA
jmp [ ChooseColorA@IAT ]
CheckRadioButton
jmp [ CheckRadioButton@IAT ]
CheckDlgButton
jmp [ CheckDlgButton@IAT ]
CreateFontA
jmp [ CreateFontA@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
SetFocus
jmp [ SetFocus@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
ShellExecuteA
jmp [ ShellExecuteA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
CreateDialogParamA
jmp [ CreateDialogParamA@IAT ]
DefDlgProcA
jmp [ DefDlgProcA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
GetWindowLongA
jmp [ GetWindowLongA@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
GetCapture
jmp [ GetCapture@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
GetDesktopWindow
jmp [ GetDesktopWindow@IAT ]
MoveWindow
jmp [ MoveWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
CoInitialize
jmp [ CoInitialize@IAT ]
RegisterClassW
jmp [ RegisterClassW@IAT ]
CreateWindowExW
jmp [ CreateWindowExW@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateCaret
jmp [ CreateCaret@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
GetDoubleClickTime
jmp [ GetDoubleClickTime@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
AppendMenuA
jmp [ AppendMenuA@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
PeekMessageW
jmp [ PeekMessageW@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
RealizePalette
jmp [ RealizePalette@IAT ]
UpdateColors
jmp [ UpdateColors@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
DestroyCaret
jmp [ DestroyCaret@IAT ]
HideCaret
jmp [ HideCaret@IAT ]
SelectPalette
jmp [ SelectPalette@IAT ]
CreatePen
jmp [ CreatePen@IAT ]
IntersectClipRect
jmp [ IntersectClipRect@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ShowCaret
jmp [ ShowCaret@IAT ]
ImmGetContext
jmp [ ImmGetContext@IAT ]
ImmGetCompositionStringW
jmp [ ImmGetCompositionStringW@IAT ]
ImmReleaseContext
jmp [ ImmReleaseContext@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
ImmSetCompositionFontA
jmp [ ImmSetCompositionFontA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
PostMessageA
jmp [ PostMessageA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
DefWindowProcW
jmp [ DefWindowProcW@IAT ]
EnableMenuItem
jmp [ EnableMenuItem@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
ToAsciiEx
jmp [ ToAsciiEx@IAT ]
ScreenToClient
jmp [ ScreenToClient@IAT ]
GetObjectA
jmp [ GetObjectA@IAT ]
TranslateCharsetInfo
jmp [ TranslateCharsetInfo@IAT ]
CreateCompatibleBitmap
jmp [ CreateCompatibleBitmap@IAT ]
SetTextAlign
jmp [ SetTextAlign@IAT ]
SetBkMode
jmp [ SetBkMode@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
DeleteMenu
jmp [ DeleteMenu@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
InsertMenuA
jmp [ InsertMenuA@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetCursor
jmp [ SetCursor@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetCaretPos
jmp [ SetCaretPos@IAT ]
ImmSetCompositionWindow
jmp [ ImmSetCompositionWindow@IAT ]
ExtTextOutW
jmp [ ExtTextOutW@IAT ]
GetCharacterPlacementW
jmp [ GetCharacterPlacementW@IAT ]
GetBkMode
jmp [ GetBkMode@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
Polyline
jmp [ Polyline@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
GetCharWidth32W
jmp [ GetCharWidth32W@IAT ]
GetCharWidthW
jmp [ GetCharWidthW@IAT ]
GetCharWidth32A
jmp [ GetCharWidth32A@IAT ]
GetCharWidthA
jmp [ GetCharWidthA@IAT ]
SetPaletteEntries
jmp [ SetPaletteEntries@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
EmptyClipboard
jmp [ EmptyClipboard@IAT ]
SetClipboardData
jmp [ SetClipboardData@IAT ]
CloseClipboard
jmp [ CloseClipboard@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
FlashWindow
jmp [ FlashWindow@IAT ]
GetCharABCWidthsFloatA
jmp [ GetCharABCWidthsFloatA@IAT ]
RegOpenKeyA
jmp [ RegOpenKeyA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
GetUserNameA
jmp [ GetUserNameA@IAT ]
GetClipboardOwner
jmp [ GetClipboardOwner@IAT ]
GetQueueStatus
jmp [ GetQueueStatus@IAT ]
EqualSid
jmp [ EqualSid@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetLengthSid
jmp [ GetLengthSid@IAT ]
CopySid
jmp [ CopySid@IAT ]
AllocateAndInitializeSid
jmp [ AllocateAndInitializeSid@IAT ]
InitializeSecurityDescriptor
jmp [ InitializeSecurityDescriptor@IAT ]
SetSecurityDescriptorOwner
jmp [ SetSecurityDescriptorOwner@IAT ]
SetSecurityDescriptorDacl
jmp [ SetSecurityDescriptorDacl@IAT ]
RegCreateKeyA
jmp [ RegCreateKeyA@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
RegDeleteKeyA
jmp [ RegDeleteKeyA@IAT ]
RegEnumKeyA
jmp [ RegEnumKeyA@IAT ]
RegCreateKeyExA
jmp [ RegCreateKeyExA@IAT ]
RegDeleteValueA
jmp [ RegDeleteValueA@IAT ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
MessageBoxIndirectA
jmp [ MessageBoxIndirectA@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
Beep
jmp [ Beep@IAT ]
ClearCommBreak
jmp [ ClearCommBreak@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
ConnectNamedPipe
jmp [ ConnectNamedPipe@IAT ]
CreateEventA
jmp [ CreateEventA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateFileMappingA
jmp [ CreateFileMappingA@IAT ]
CreateMutexA
jmp [ CreateMutexA@IAT ]
CreateNamedPipeA
jmp [ CreateNamedPipeA@IAT ]
CreatePipe
jmp [ CreatePipe@IAT ]
CreateProcessA
jmp [ CreateProcessA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCommState
jmp [ GetCommState@IAT ]
GetCurrentDirectoryA
jmp [ GetCurrentDirectoryA@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetEnvironmentVariableA
jmp [ GetEnvironmentVariableA@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
GetOverlappedResult
jmp [ GetOverlappedResult@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetProcessTimes
jmp [ GetProcessTimes@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
GetSystemDirectoryA
jmp [ GetSystemDirectoryA@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
GetSystemTimeAdjustment
jmp [ GetSystemTimeAdjustment@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
GetThreadTimes
jmp [ GetThreadTimes@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalMemoryStatus
jmp [ GlobalMemoryStatus@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
InitializeSListHead
jmp [ InitializeSListHead@IAT ]
IsDBCSLeadByteEx
jmp [ IsDBCSLeadByteEx@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadLibraryExA
jmp [ LoadLibraryExA@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
MapViewOfFile
jmp [ MapViewOfFile@IAT ]
MulDiv
jmp [ MulDiv@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ReleaseMutex
jmp [ ReleaseMutex@IAT ]
SetCommBreak
jmp [ SetCommBreak@IAT ]
SetCommState
jmp [ SetCommState@IAT ]
SetCommTimeouts
jmp [ SetCommTimeouts@IAT ]
SetCurrentDirectoryA
jmp [ SetCurrentDirectoryA@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetHandleInformation
jmp [ SetHandleInformation@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
UnmapViewOfFile
jmp [ UnmapViewOfFile@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WaitNamedPipeA
jmp [ WaitNamedPipeA@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetModuleHandleExW
jmp [ GetModuleHandleExW@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
LoadLibraryExW
jmp [ LoadLibraryExW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetDateFormatW
jmp [ GetDateFormatW@IAT ]
GetTimeFormatW
jmp [ GetTimeFormatW@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
FindFirstFileExA
jmp [ FindFirstFileExA@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
OutputDebugStringW
jmp [ OutputDebugStringW@IAT ]
WaitForSingleObjectEx
jmp [ WaitForSingleObjectEx@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
ReadConsoleW
jmp [ ReadConsoleW@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
SetFilePointerEx
jmp [ SetFilePointerEx@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
GetTimeZoneInformation
jmp [ GetTimeZoneInformation@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
