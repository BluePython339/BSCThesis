sub_401030
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi ecx
mov [ esi + 0x4 ] 0x0
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ esi ] eax
test eax eax
je r-xdata
pop edi
mov [ esi ] edx
lea eax [ edx + 0x1 ]
pop esi
pop ebp
retn
pop edi
xor eax eax
pop esi
pop ebp
retn
mov [ esi + 0x4 ] edi
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_401080
push ecx
xor eax eax
mov edx eax
and edx 0x1
dec edx
not edx
and edx 0xedb88320
mov ecx eax
shr ecx 0x1
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov edx ecx
and edx 0x1
dec edx
shr ecx 0x1
not edx
and edx 0xedb88320
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov edx ecx
and edx 0x1
dec edx
shr ecx 0x1
not edx
and edx 0xedb88320
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov edx ecx
and edx 0x1
dec edx
shr ecx 0x1
not edx
and edx 0xedb88320
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov [ eax * 4 + rw-data ] ecx
inc eax
cmp eax 0x100
jb r-xdata
cmp eax 0x800
jae r-xdata
mov [ rw-data ] sub_401180
call sub_4058f0
mov ecx [ rw-data ]
mov edx sub_401220
test eax eax
cmove ecx edx
mov [ rw-data ] ecx
pop ecx
retn
nop
mov edx [ eax * 4 + rw-data ]
movzx ecx dl
shr edx 0x8
xor edx [ ecx * 4 + rw-data ]
inc eax
mov [ eax * 4 + rw-data ] edx
cmp eax 0x800
jb r-xdata
sub_401180
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov ebx edx
test esi esi
je r-xdata
cmp esi 0x4
jb r-xdata
test bl 0x3
je r-xdata
test esi esi
je r-xdata
mov eax esi
shr eax 0x2
mov [ ebp + 0x8 ] eax
movzx eax [ ebx ]
xor eax ecx
and eax 0xff
shr ecx 0x8
xor ecx [ edi + eax * 4 ]
inc ebx
dec esi
jne r-xdata
pop edi
pop esi
mov eax ecx
pop ebx
pop ebp
retn 0x8
mov edi edi
xor ecx [ ebx ]
sub esi 0x4
mov edx ecx
shr edx 0x8
and edx 0xff
mov eax ecx
mov edx [ edi + edx * 4 + 0x800 ]
shr eax 0x10
and eax 0xff
add ebx 0x4
xor edx [ edi + eax * 4 + 0x400 ]
movzx eax cl
shr ecx 0x18
xor edx [ edi + eax * 4 + 0xc00 ]
xor edx [ edi + ecx * 4 ]
dec [ ebp + 0x8 ]
mov ecx edx
jne r-xdata
movzx eax [ ebx ]
xor eax ecx
and eax 0xff
shr ecx 0x8
xor ecx [ edi + eax * 4 ]
lea ebx [ ebx + 0x1 ]
dec esi
jne r-xdata
sub_401230
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push eax
push [ ecx + 0x14 ]
mov edi edx
mov edx [ ecx + 0x10 ]
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x74 ] 0x0
call sub_407500
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x88 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x40000
test eax eax
ja r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ edi ]
push edi
call eax
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
push [ ebp - 0x74 ]
mov eax [ ebp - 0x90 ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x98 ] eax
lea eax [ ebp - 0x94 ]
push eax
push 0x1
lea eax [ ebp - 0x8c ]
push eax
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x84 ]
call sub_407210
mov esi eax
mov eax [ ebp - 0x8c ]
sub [ ebp - 0xc ] eax
add esp 0x10
sub ebx eax
sbb [ ebp - 0x88 ] 0x0
test esi esi
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp ebx 0x40000
jae r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
cmp ecx edx
je r-xdata
cmp edx [ ebp + 0x14 ]
jne r-xdata
test eax eax
jne r-xdata
mov esi 0x1
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ edi + 0x4 ]
push edi
call eax
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp [ ebp - 0x98 ] ecx
je r-xdata
mov eax [ ebp - 0x94 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x88 ]
jmp r-xdata
cmp eax 0x4
je r-xdata
sub_4013d0
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ecx + 0x14 ] 0x1
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi edx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x90 ] 0x0
je r-xdata
mov eax [ ecx + 0x10 ]
mov al [ eax ]
cmp al 0x28
ja r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax 0x4
jne r-xdata
movzx edx al
mov ecx edx
shr ecx 0x1
and edx 0x1
add ecx 0xb
or edx 0x2
shl edx cl
or edx 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x78 ] eax
call sub_4059a0
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xac ] eax
jmp r-xdata
mov eax edx
shr eax 0x8
mov [ ebp - 0xa6 ] al
mov eax edx
mov [ ebp - 0xa7 ] dl
shr edx 0x18
shr eax 0x10
mov [ ebp - 0xa4 ] dl
push ebx
push 0x5
lea edx [ ebp - 0xa8 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0xa8 ] 0x4
mov [ ebp - 0xa5 ] al
call sub_407500
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x40000
test eax eax
ja r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ edi ]
push edi
call eax
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
push [ ebp - 0x90 ]
mov eax [ ebp - 0xb4 ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xb8 ] eax
lea eax [ ebp - 0xa8 ]
push eax
push ecx
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp - 0xc ]
lea ecx [ ebp - 0xa0 ]
call sub_405b30
mov esi eax
mov eax [ ebp - 0xb0 ]
sub [ ebp - 0x8 ] eax
add esp 0x10
sub ebx eax
sbb [ ebp - 0xac ] 0x0
test esi esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx 0x40000
jae r-xdata
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x78 ]
cmp ecx edx
je r-xdata
cmp edx [ ebp + 0x14 ]
jne r-xdata
test eax eax
jne r-xdata
mov esi 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ edi + 0x4 ]
push edi
call eax
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp [ ebp - 0xb8 ] ecx
je r-xdata
cmp [ ebp - 0xa8 ] 0x1
je r-xdata
mov eax [ ebp - 0xac ]
jmp r-xdata
sub_4015d0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov ebx ecx
test edi edi
jne r-xdata
mov [ ebp - 0x8 ] 0x40000
test edi edi
ja r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
push ebx
call eax
add esp 0xc
test eax eax
jne r-xdata
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
cmp esi 0x40000
jae r-xdata
mov eax 0x6
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_40de40
mov eax [ ebp - 0x8 ]
add [ ebp - 0x10 ] eax
push eax
sub esi eax
mov eax [ ebx + 0x4 ]
push ebx
sbb edi 0x0
call eax
add esp 0x14
test eax eax
jne r-xdata
test edi edi
ja r-xdata
jb r-xdata
test esi esi
jne r-xdata
sub_401690
cmp [ ecx ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
cmp [ ecx + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
cmp [ ecx + 0x8 ] 0xffffffff
ja r-xdata
mov eax 0x1
retn
cmp eax 0x21
je r-xdata
cmp eax 0x30101
jne r-xdata
sub_4016d0
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax 0x1
jb r-xdata
mov eax 0x4
pop esi
retn
cmp eax 0x4
ja r-xdata
mov edx [ esi ]
cmp [ edx ] 0x1
jne r-xdata
cmp [ edx + 0x4 ] 0x1
jne r-xdata
cmp [ edx + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov ecx [ edx + 0x8 ]
test ecx ecx
je r-xdata
cmp [ edx + 0x8 ] 0xffffffff
ja r-xdata
cmp eax 0x1
jne r-xdata
cmp ecx 0x21
je r-xdata
cmp eax 0x2
jne r-xdata
cmp [ esi + 0x18 ] eax
jne r-xdata
cmp ecx 0x30101
jne r-xdata
cmp eax 0x4
jne r-xdata
cmp [ edx + 0x24 ] 0x0
ja r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
lea ecx [ edx + 0x18 ]
call sub_401690
test eax eax
je r-xdata
jb r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
lea ecx [ edx + 0x30 ]
call sub_401690
test eax eax
je r-xdata
cmp [ edx + 0x18 ] 0x1
jne r-xdata
cmp [ edx + 0x20 ] 0xffffffff
ja r-xdata
xor eax eax
pop esi
retn
cmp [ edx + 0x50 ] 0x303011b
jne r-xdata
cmp [ edx + 0x1c ] 0x1
jne r-xdata
cmp [ edx + 0x54 ] 0x0
jne r-xdata
cmp [ esi + 0x18 ] 0x1
jne r-xdata
cmp [ edx + 0x48 ] 0x4
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ edx + 0x4c ] 0x1
jne r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
cmp [ esi + 0x18 ] 0x4
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x2
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x6
jne r-xdata
mov eax [ edx + 0x20 ]
cmp eax 0x3030103
je r-xdata
cmp [ eax + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop esi
retn
cmp eax 0x3030501
jne r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x5
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x2
jne r-xdata
xor eax eax
pop esi
retn
sub_401870
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
xorps xmm0 xmm0
xor eax eax
push edi
mov [ ebp - 0x18 ] edx
mov esi ecx
movlpd [ ebp - 0x20 ] xmm0
test edx edx
je r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x20 ]
cmp edx 0x4
jb r-xdata
pop edi
pop esi
mov eax ebx
mov edx ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x20 ]
mov ecx edx
sub ecx eax
cmp ecx 0x2
jl r-xdata
mov ecx edx
and ecx 0x3
mov edi edx
sub edi ecx
xorps xmm2 xmm2
xorps xmm1 xmm1
mov ecx esi
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x10 ]
lea ecx [ edx - 0x1 ]
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x1c ]
movdqu xmm0 [ ecx ]
add eax 0x4
paddq xmm2 xmm0
movdqu xmm0 [ ecx + 0x10 ]
lea ecx [ ecx + 0x20 ]
paddq xmm1 xmm0
cmp eax edi
jb r-xdata
paddq xmm1 xmm2
movdqa xmm0 xmm1
psrldq xmm0 0x8
paddq xmm1 xmm0
movd ebx xmm1
psrldq xmm1 0x4
movd ecx xmm1
jmp r-xdata
add edi [ ebp - 0xc ]
adc ecx [ ebp - 0x14 ]
add ebx edi
adc edx ecx
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx [ esi + eax * 8 ]
adc edx [ esi + eax * 8 + 0x4 ]
add ebx [ esi + eax * 8 ]
adc edx [ esi + eax * 8 + 0x4 ]
add edi [ esi + eax * 8 + 0x8 ]
adc ecx [ esi + eax * 8 + 0xc ]
add eax 0x2
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x18 ]
jmp r-xdata
xorps xmm0 xmm0
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
movlpd [ ebp - 0x10 ] xmm0
movlpd [ ebp - 0x20 ] xmm0
cmp eax edx
jae r-xdata
cmp eax edx
mov edx [ ebp - 0x4 ]
jae r-xdata
sub_401980
push ebp
mov ebp esp
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x18 ]
push edi
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x40 ] 0x0
call sub_4016d0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x10 ]
xor ebx ebx
test edx edx
je r-xdata
xor eax eax
nop
mov eax [ ebp - 0x20 ]
mov esi [ ebp - 0x2c ]
xor ecx ecx
mov [ ebp - 0x30 ] eax
cmp edx 0x4
jne r-xdata
cmp eax 0x21
je r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ edx + ecx * 8 ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + ecx * 8 + 0x4 ]
mov edx ecx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
call sub_401870
add eax [ ebp + 0xc ]
push 0x0
adc edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] edx
call eax
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x5c ] ecx
mov eax [ eax + 0xc ]
mov [ ebp - 0x64 ] 0x3
mov edi [ eax + ebx * 8 ]
mov ecx [ eax + ebx * 8 + 0x4 ]
lea eax [ ebx * 4 ]
mov [ ebp - 0x60 ] 0x2
mov [ ebp - 0x4c ] eax
mov eax [ ebp + eax - 0x64 ]
mov [ ebp - 0x28 ] eax
cmp ebx 0x2
jae r-xdata
cmp eax 0x30101
je r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov eax ecx
or eax edx
jne r-xdata
jne r-xdata
xor eax eax
mov [ ebp - 0x30 ] edi
cmp edi edi
jne r-xdata
mov ecx eax
mov eax [ edi + 0xc ]
cmp ecx 0x303011b
jne r-xdata
cmp ecx 0x30101
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x30 ]
jne r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
test ecx ecx
ja r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
cmp eax ecx
jne r-xdata
cmp ebx 0x1
jne r-xdata
test eax eax
jne r-xdata
cmp ecx 0x21
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
test eax eax
jne r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x34 ]
push edi
push eax
mov eax [ eax ]
call eax
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp ecx 0x3030103
jne r-xdata
mov eax [ ebp - 0x38 ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0xc ]
cmp ebx 0x3
jne r-xdata
test edx edx
jne r-xdata
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x1c ]
push [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
push esi
push [ ebp - 0x28 ]
push ecx
mov ecx edi
call sub_401230
jmp r-xdata
push eax
push ecx
mov ecx [ ebp - 0x24 ]
mov edx esi
call sub_4015d0
add esp 0x8
jmp r-xdata
mov esi eax
sub esi edi
add esi [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x48 ] edi
cmp edi eax
ja r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x3c ]
neg eax
mov [ eax + ecx + 0x4 ] esi
mov [ ebp + eax - 0x54 ] edi
jmp r-xdata
test edi edi
jne r-xdata
cmp ecx 0x3030501
jne r-xdata
test eax eax
jne r-xdata
lea edx [ ebx - 0x2 ]
mov ecx eax
call sub_401870
add eax [ ebp + 0xc ]
push 0x0
adc edx [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
call eax
add esp 0xc
test eax eax
jne r-xdata
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x1c ]
push [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
push esi
push [ ebp - 0x28 ]
push ecx
mov ecx edi
call sub_4013d0
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x1c ]
test eax eax
jne r-xdata
push ecx
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x2c ]
mov edx esi
call sub_405690
add esp 0xc
jmp r-xdata
cmp esi esi
jne r-xdata
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x2c ]
sub esp 0x8
mov edx esi
call sub_405630
add esp 0x8
jmp r-xdata
mov edi [ ebp - 0x44 ]
inc ebx
mov edx [ edi + 0x10 ]
cmp ebx edx
jb r-xdata
cmp eax edi
jne r-xdata
mov eax [ edi ]
lea ecx [ ebx + ebx * 2 ]
lea edi [ eax + ecx * 8 ]
mov [ ebp - 0x1c ] edi
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
push esi
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp - 0x3c ]
add esp 0x8
mov [ ecx + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
push edi
push esi
mov edx eax
call sub_4015d0
add esp 0x8
test eax eax
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x48 ]
mov ecx [ ebp - 0x40 ]
push eax
push [ ebp - 0x2c ]
mov eax [ ebp - 0x3c ]
push esi
push [ eax + 0x8 ]
push [ ebp - 0x54 ]
push [ eax + 0x4 ]
push [ ebp - 0x58 ]
push [ eax ]
call sub_405350
add esp 0x20
jmp r-xdata
sub_401d40
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x1c ]
lea ebx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x18 ]
mov [ ebp - 0x10 ] 0x0
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x0
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x0
push esi
call sub_401980
add esp 0x1c
mov ebx eax
xor esi esi
lea ecx [ ecx ]
push [ ebp + esi * 4 - 0x10 ]
mov ecx [ edi + 0x4 ]
push edi
call ecx
inc esi
add esp 0x8
cmp esi 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
sub_401dc0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov esi [ edi ]
mov [ ebp - 0xc ] ecx
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov [ edi ] 0x0
mov edx __dos_header
lea esp [ esp ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx __dos_header
test esi esi
jne r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov eax esi
cmp esi __dos_header
cmova eax edx
push eax
push ebx
push [ ecx ]
mov [ ebp - 0x8 ] 0x0
call [ ReadFile@IAT ]
mov ecx [ ebp - 0x8 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
sub_401e60
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov esi [ edi ]
mov [ ebp - 0xc ] ecx
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov [ edi ] 0x0
mov edx __dos_header
lea esp [ esp ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx __dos_header
test esi esi
jne r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov eax esi
cmp esi __dos_header
cmova eax edx
push eax
push ebx
push [ ecx ]
mov [ ebp - 0x8 ] 0x0
call [ WriteFile@IAT ]
mov ecx [ ebp - 0x8 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
sub_401f00
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
push edi
mov edi edx
mov ebx ecx
mov esi [ edi ]
mov edx [ edi + 0x4 ]
mov eax esi
mov cl 0x20
mov [ ebp - 0x14 ] esi
call sub_415850
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
cdq
xor ecx ecx
or ecx esi
mov [ edi + 0x4 ] eax
mov [ edi ] ecx
xor eax eax
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebx ]
call [ SetFilePointer@IAT ]
mov esi eax
mov [ ebp - 0x14 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x57
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
sub_401fb0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_401dc0
add esp 0x4
neg eax
sbb eax eax
and eax 0x8
pop ebp
retn
sub_401ff0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
mov edi ecx
mov ebx edx
cmp [ edi ] 0x0
je r-xdata
push [ edi ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ edi + 0x4 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ edi + 0x8 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ edi + 0xc ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
add esp 0x20
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x18 ] 0x0
mov [ edi + 0x1c ] 0x0
mov [ edi + 0x20 ] 0x0
mov [ edi + 0x24 ] 0x0
pop edi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
jbe r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ edi ]
mov eax [ ebx + 0x4 ]
push [ esi + ecx + 0x10 ]
add esi ecx
push ebx
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
inc eax
add ecx 0x18
add esp 0x8
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
cmp eax [ edi + 0x10 ]
jb r-xdata
pop esi
sub_4020c0
push esi
push edi
mov edi ecx
xor eax eax
mov edx [ edi + 0x10 ]
xor esi esi
test edx edx
je r-xdata
pop edi
pop esi
retn
cmp edx 0x4
jb r-xdata
cmp esi edx
jae r-xdata
mov eax edx
and eax 0x3
mov ecx edx
push ebx
mov ebx [ edi ]
sub ecx eax
xorps xmm4 xmm4
xor eax eax
lea esp [ esp ]
mov edi [ edi ]
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
sub edx esi
nop
movd xmm2 [ eax + ebx + 0x4c ]
movd xmm0 [ eax + ebx + 0x34 ]
movd xmm1 [ eax + ebx + 0x1c ]
movd xmm3 [ eax + ebx + 0x4 ]
punpckldq xmm3 xmm0
punpckldq xmm1 xmm2
add esi 0x4
punpckldq xmm3 xmm1
paddd xmm4 xmm3
lea eax [ eax + 0x60 ]
cmp esi ecx
jb r-xdata
movdqa xmm0 xmm4
psrldq xmm0 0x8
pop ebx
paddd xmm4 xmm0
movdqa xmm0 xmm4
psrldq xmm0 0x4
paddd xmm4 xmm0
movd eax xmm4
add eax [ ecx + edi + 0x4 ]
lea ecx [ ecx + 0x18 ]
dec edx
jne r-xdata
sub_402160
push esi
push edi
mov edi ecx
call sub_4020c0
mov esi eax
test esi esi
je r-xdata
pop edi
xor eax eax
xor edx edx
pop esi
retn
dec esi
js r-xdata
mov edx [ edi + 0x14 ]
mov edx [ edi + 0xc ]
pop edi
mov eax [ edx + esi * 8 ]
mov edx [ edx + esi * 8 + 0x4 ]
pop esi
retn
mov eax [ edi + 0x4 ]
add eax 0x4
test ecx ecx
js r-xdata
inc ecx
add eax 0x8
cmp ecx edx
jb r-xdata
dec esi
jns r-xdata
cmp [ eax ] esi
je r-xdata
xor ecx ecx
test edx edx
je r-xdata
sub_4021b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] ebx
je r-xdata
push [ esi ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0x8 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0xc ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0x10 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
add esp 0x28
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
xor edi edi
cmp [ esi + 0x18 ] edi
jbe r-xdata
pop edi
xor ebx ebx
lea ecx [ ecx ]
mov ecx [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
add ecx ebx
call sub_401ff0
inc edi
add ebx 0x28
cmp edi [ esi + 0x18 ]
jb r-xdata
mov ebx [ ebp - 0x4 ]
sub_402260
push esi
push edi
mov edi ecx
mov esi edx
push [ edi + 0x30 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x34 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x38 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x3c ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x40 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x44 ]
mov eax [ esi + 0x4 ]
push esi
call eax
add esp 0x30
mov edx esi
mov ecx edi
mov [ edi + 0x44 ] 0x0
mov [ edi + 0x48 ] 0x0
call sub_4021b0
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x18 ] 0x0
mov [ edi + 0x1c ] 0x0
mov [ edi + 0x30 ] 0x0
mov [ edi + 0x34 ] 0x0
mov [ edi + 0x38 ] 0x0
mov [ edi + 0x3c ] 0x0
mov [ edi + 0x40 ] 0x0
mov [ edi + 0x44 ] 0x0
mov [ edi + 0x48 ] 0x0
pop edi
pop esi
retn
sub_402330
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov eax [ edi + 0x18 ]
xorps xmm0 xmm0
xor esi esi
mov [ ebp - 0x4 ] edx
movlpd [ ebp - 0x18 ] xmm0
mov [ ebp - 0x8 ] ebx
test eax eax
jne r-xdata
shl eax 0x2
push eax
mov eax [ edx ]
push edx
call eax
add esp 0x8
mov [ edi + 0x30 ] eax
test eax eax
jne r-xdata
mov [ edi + 0x30 ] ebx
mov edx [ edi + 0x18 ]
test edx edx
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x14 ]
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x30 ]
add eax 0x18
shl eax 0x3
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ edi + 0x34 ] eax
test eax eax
je r-xdata
mov [ edi + 0x34 ] esi
jmp r-xdata
mov [ ecx ] ebx
add ebx [ eax ]
lea ecx [ ecx + 0x4 ]
lea eax [ eax + 0x28 ]
dec edx
jne r-xdata
mov ebx [ edi + 0x14 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x18 ]
mov ebx [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x34 ]
mov edx [ ebp - 0x18 ]
sub ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
nop
shl eax 0x2
push eax
mov eax [ ebx ]
push ebx
call eax
add esp 0x8
mov [ edi + 0x38 ] eax
test eax eax
je r-xdata
mov [ edi + 0x38 ] eax
jmp r-xdata
mov [ esi + eax ] edx
mov [ esi + eax + 0x4 ] ecx
add edx [ eax ]
adc ecx [ eax + 0x4 ]
lea eax [ eax + 0x8 ]
dec ebx
jne r-xdata
xor esi esi
mov eax [ edi + 0x1c ]
test eax eax
jne r-xdata
shl eax 0x2
push eax
mov eax [ ebx ]
push ebx
call eax
add esp 0x8
mov [ edi + 0x3c ] eax
test eax eax
je r-xdata
mov [ edi + 0x3c ] eax
jmp r-xdata
xor edx edx
cmp [ edi + 0x1c ] edx
jbe r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x10 ]
add ecx 0x18
mov [ ebp - 0x4 ] ecx
xor ebx ebx
nop
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ edi + 0x3c ]
mov [ eax + edx * 4 ] esi
jne r-xdata
mov ebx [ edi + 0x18 ]
lea ecx [ esi + esi * 4 ]
shl ecx 0x3
jmp r-xdata
mov eax [ edi + 0x3c ]
mov [ eax + edx * 4 ] 0xffffffff
jmp r-xdata
inc edx
add ecx 0x20
mov [ ebp - 0x4 ] ecx
cmp edx [ edi + 0x1c ]
jb r-xdata
mov eax [ edi + 0xc ]
lea ecx [ esi + esi * 4 ]
inc ebx
cmp ebx [ eax + ecx * 8 + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
jb r-xdata
cmp esi ebx
jae r-xdata
xor eax eax
cmp [ ecx ] al
sete al
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
inc esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
pop edi
pop esi
mov eax 0x10
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x38 ]
mov [ eax + esi * 4 ] edx
mov eax [ edi + 0xc ]
cmp [ eax + ecx + 0x24 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
inc esi
add ecx 0x28
jmp r-xdata
sub_4024e0
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
mov esi ecx
test edx edx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x10
pop ebx
pop ebp
retn
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov al [ ecx ]
mov [ edi + ebx ] al
inc edi
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
cmp edi edx
jb r-xdata
sub_402520
push esi
push edi
mov edi edx
mov eax ecx
mov [ edi ] 0x0
xor esi esi
mov edi edi
pop edi
mov eax 0x10
pop esi
retn
dec ecx
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
inc ecx
mov dl [ ecx - 0x1 ]
movzx edx dl
mov [ eax ] ecx
mov ecx esi
shl edx cl
add esi 0x8
or [ edi ] edx
cmp esi 0x20
jl r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_402570
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi edx
mov [ ebp - 0xc ] ecx
mov bl 0x80
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x10
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
dec esi
mov bh [ eax ]
lea edx [ eax + 0x1 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
movzx eax bl
movzx ecx bh
dec eax
and eax ecx
mov ecx [ ebp - 0x8 ]
cdq
shl ecx 0x3
call sub_415830
add [ edi ] eax
adc [ edi + 0x4 ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov al [ edx ]
inc edx
movzx eax al
mov [ ecx ] edx
dec esi
mov [ ebp - 0x10 ] edx
mov [ ecx + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
cdq
call sub_415830
or [ edi ] eax
mov eax [ ebp - 0x4 ]
or [ edi + 0x4 ] edx
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add eax 0x8
shr bl 0x1
mov [ ebp - 0x4 ] eax
cmp eax 0x40
jl r-xdata
test bl bh
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_402630
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi edx
lea edx [ ebp - 0x8 ]
call sub_402570
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
mov eax 0x4
mov eax [ ebp - 0x8 ]
cmp eax 0x80000000
jae r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x4000000
jae r-xdata
mov [ esi ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_402680
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
jb r-xdata
add [ ecx ] edx
sub eax edx
mov [ ecx + 0x4 ] eax
xor eax eax
pop ebp
retn
ja r-xdata
mov eax 0x10
pop ebp
retn
cmp edx eax
jbe r-xdata
sub_4026b0
push ebp
mov ebp esp
sub esp 0x14
lea edx [ ebp - 0x8 ]
push esi
mov esi ecx
call sub_402570
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
or eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
lea edx [ ebp - 0x10 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_402570
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ esi + 0x4 ]
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
jb r-xdata
sub eax ecx
add [ esi ] ecx
mov [ esi + 0x4 ] eax
cmp ecx eax
ja r-xdata
sub_402710
push ebp
mov ebp esp
sub esp 0x14
lea edx [ ebp - 0x8 ]
push ebx
push esi
push edi
mov esi ecx
call sub_402570
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx ]
or eax ecx
je r-xdata
cmp ecx edi
je r-xdata
mov eax 0x10
lea edx [ ebp - 0x10 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
jb r-xdata
add [ esi ] ecx
sub eax ecx
mov [ esi + 0x4 ] eax
xor eax eax
ja r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_402570
test eax eax
je r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
sub_4027a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
xor bh bh
xor bl bl
mov esi ecx
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x8 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
xor edx edx
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
test bh bl
mov eax [ eax ]
setne cl
mov [ edx + eax ] cl
inc edx
shr bl 0x1
cmp edx edi
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x10
pop ebx
pop ebp
retn
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov bh [ eax - 0x1 ]
mov [ esi ] eax
mov bl 0x80
sub_402820
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
pop edi
mov eax 0x10
pop esi
pop ebp
retn
dec eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edi ] eax
test cl cl
jne r-xdata
test esi esi
jne r-xdata
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_4027a0
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
push esi
push eax
mov eax [ eax ]
call eax
mov edx [ ebp + 0x8 ]
add esp 0x8
mov [ edx ] eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] esi
xor ecx ecx
test esi esi
je r-xdata
pop edi
mov eax 0x2
pop esi
pop ebp
retn
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax [ edx ]
inc ecx
mov [ ecx + eax - 0x1 ] 0x1
cmp ecx esi
jb r-xdata
sub_4028a0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
push [ ebp + 0x8 ]
mov eax ecx
mov edi edx
mov [ ebp - 0x4 ] eax
call sub_402820
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
test edi edi
jne r-xdata
lea eax [ edi * 4 ]
push eax
mov eax [ esi ]
push esi
call eax
mov ebx [ ebp + 0xc ]
add esp 0x8
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebx ] edi
xor esi esi
test edi edi
je r-xdata
pop ebx
pop edi
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ esi + eax ] 0x0
je r-xdata
inc esi
cmp esi edi
jb r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + esi * 4 ]
call sub_402520
test eax eax
jne r-xdata
pop ebx
sub_402920
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
call sub_402570
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax 0x4
mov edi [ ebp - 0x8 ]
cmp edi 0x80000000
jae r-xdata
test eax eax
jne r-xdata
cmp edi 0x4000000
jae r-xdata
mov ebx [ ebp + 0x8 ]
push eax
push 0x9
mov ecx esi
mov [ ebx ] edi
call sub_402710
add esp 0x8
test eax eax
jne r-xdata
test edi edi
jne r-xdata
lea eax [ edi * 8 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0xc ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
mov eax ecx
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
cmp [ ebx ] edi
jbe r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
lea ecx [ ecx ]
mov edi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
inc edi
cmp edi [ ebx ]
jb r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp edx 0xa
jne r-xdata
mov eax [ eax ]
mov ecx esi
lea edx [ eax + edi * 8 ]
call sub_402570
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov esi [ ebp + 0x18 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
test ecx ecx
jne r-xdata
push eax
mov eax [ esi ]
push esi
call eax
add esp 0x8
mov [ edi ] eax
test eax eax
je r-xdata
mov [ edi ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
jb r-xdata
push [ ebp + 0x18 ]
mov edx [ ebx ]
push [ ebp + 0x14 ]
mov ecx esi
push edi
call sub_4028a0
add esp 0xc
jmp r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
add [ esi ] ecx
sub eax ecx
mov [ esi + 0x4 ] eax
xor eax eax
ja r-xdata
test eax eax
jne r-xdata
shl eax 0x2
push eax
mov eax [ esi ]
push esi
call eax
mov edx [ ebp + 0x14 ]
add esp 0x8
mov [ edx ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_402570
test eax eax
je r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
xor ecx ecx
cmp [ ebx ] ecx
jbe r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax edx
or eax ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov eax [ edi ]
inc ecx
mov [ ecx + eax - 0x1 ] 0x0
mov eax [ edx ]
mov [ eax + ecx * 4 - 0x4 ] 0x0
cmp ecx [ ebx ]
jb r-xdata
sub_402b00
mov edx ecx
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
mov eax 0x10
retn
dec eax
mov [ edx + 0x4 ] eax
mov eax [ edx ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edx ] eax
xor edx edx
mov eax 0x4
test cl cl
cmove eax edx
retn
sub_402b30
push ebp
mov ebp esp
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
xor ecx ecx
mov ebx edx
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x40 ] ecx
push edi
lea edx [ ebp - 0x54 ]
mov ecx esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x30 ] eax
call sub_402570
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x50 ]
test eax eax
jne r-xdata
mov eax 0x4
mov edi [ ebp - 0x54 ]
cmp edi 0x80000000
jae r-xdata
test eax eax
jne r-xdata
cmp edi 0x4000000
jae r-xdata
cmp edi 0x20
ja r-xdata
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
lea eax [ edi + edi * 2 ]
shl eax 0x3
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ ebx ] eax
test eax eax
jne r-xdata
mov [ ebx ] edi
test edi edi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x44 ] 0x0
test edi edi
je r-xdata
xor ecx ecx
mov edx edi
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x2c ] ecx
lea esp [ esp ]
mov eax [ ebx ]
lea ecx [ ecx + 0x18 ]
mov [ eax + ecx - 0x8 ] 0x0
mov [ eax + ecx - 0x4 ] 0x0
dec edx
jne r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ esi ]
dec ecx
mov [ esi + 0x4 ] ecx
mov bl [ eax ]
mov [ ebp - 0x19 ] bl
movzx ebx bl
lea edx [ eax + 0x1 ]
mov [ esi ] edx
mov edi 0x0
and ebx 0xf
jbe r-xdata
cmp ebx 0x8
ja r-xdata
nop
mov edi [ ebp - 0x24 ]
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
test ebx ebx
je r-xdata
dec ecx
mov [ esi + 0x4 ] ecx
mov al [ edx ]
mov [ ebp + edi - 0x18 ] al
inc edx
inc edi
mov [ esi ] edx
cmp edi ebx
jb r-xdata
mov bl [ ebp - 0x19 ]
test bl 0x10
je r-xdata
lea eax [ ebp + ebx - 0x19 ]
xor esi esi
mov [ ebp - 0x24 ] eax
test ecx ecx
je r-xdata
mov [ edi ] 0x1
mov [ edi + 0x4 ] 0x1
lea edx [ ebp - 0x64 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
movzx eax [ eax ]
cdq
mov ecx esi
call sub_415830
or [ edi + 0x8 ] eax
mov eax [ ebp - 0x24 ]
or [ edi + 0xc ] edx
dec eax
add esi 0x8
mov [ ebp - 0x24 ] eax
dec ebx
jne r-xdata
mov esi [ ebp - 0x28 ]
test bl bl
jns r-xdata
xorps xmm0 xmm0
lea edx [ ebp - 0x6c ]
mov ecx esi
movlpd [ ebp - 0x6c ] xmm0
call sub_402570
test eax eax
jne r-xdata
mov ecx [ ebp - 0x60 ]
test ecx ecx
ja r-xdata
mov eax [ ebp - 0x30 ]
add eax [ edi ]
mov edx [ ebp - 0x44 ]
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x40 ]
add eax [ edi + 0x4 ]
inc edx
add ecx 0x18
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x2c ] ecx
cmp edx [ ebp - 0x54 ]
jae r-xdata
nop
mov ebx [ ebp - 0x6c ]
mov [ edi + 0x14 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x64 ]
jb r-xdata
test eax eax
je r-xdata
mov ebx [ ebp - 0x20 ]
jmp r-xdata
mov eax [ esi ]
inc eax
dec ecx
mov [ esi + 0x4 ] ecx
mov bl [ eax - 0x1 ]
mov [ ebp - 0x24 ] eax
mov [ esi ] eax
mov al bl
and al 0xf
movzx eax al
cdq
test edx edx
ja r-xdata
mov eax [ ebp - 0x34 ]
push ebx
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ edi + 0x10 ] eax
test eax eax
je r-xdata
mov [ edi + 0x10 ] ebx
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov ecx esi
mov [ edi ] eax
call sub_402570
test eax eax
jne r-xdata
cmp eax 0x80000000
jae r-xdata
lea ebx [ eax - 0x1 ]
mov eax [ ebp - 0x20 ]
mov [ eax + 0x14 ] ebx
test ebx ebx
jne r-xdata
mov eax [ ebx ]
add eax ecx
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
test ecx ecx
je r-xdata
jb r-xdata
mov [ edi + 0x14 ] ebx
mov edx [ edi + 0x10 ]
push ebx
mov ecx esi
call sub_4024e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x70 ]
test ecx ecx
ja r-xdata
test ecx ecx
ja r-xdata
lea eax [ ebx * 8 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp - 0x20 ]
add esp 0x8
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub ecx eax
add eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
test bl 0x10
je r-xdata
cmp eax ecx
ja r-xdata
mov bl [ ebp - 0x19 ]
mov eax [ ebp - 0x74 ]
jb r-xdata
jb r-xdata
mov eax ecx
xor edi edi
test ebx ebx
je r-xdata
test bl 0x20
je r-xdata
lea edx [ ebp - 0x4c ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
cmp [ edi ] 0x20
mov [ edi + 0x4 ] eax
ja r-xdata
cmp eax 0x80000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
mov eax [ ebp - 0x30 ]
cmp eax ebx
jb r-xdata
lea ebx [ ebx ]
test bl bl
js r-xdata
xorps xmm0 xmm0
lea edx [ ebp - 0x5c ]
mov ecx esi
movlpd [ ebp - 0x5c ] xmm0
call sub_402570
test eax eax
jne r-xdata
mov eax [ ebp - 0x48 ]
test eax eax
ja r-xdata
cmp eax 0x20
jbe r-xdata
test ecx ecx
ja r-xdata
mov ebx eax
mov eax [ ebp - 0x40 ]
dec eax
sub ebx eax
mov eax [ ebp - 0x20 ]
mov [ eax + 0x18 ] ebx
jne r-xdata
mov ecx [ ebp - 0x38 ]
test ecx ecx
ja r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ esi + 0x4 ]
ja r-xdata
mov ecx [ ebp - 0x4c ]
jb r-xdata
test bl 0x20
je r-xdata
jb r-xdata
lea eax [ ebx * 4 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp - 0x20 ]
add esp 0x8
mov [ ebp - 0x28 ] edi
mov [ eax + 0x8 ] edi
test edi edi
je r-xdata
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x3c ]
jb r-xdata
mov ecx [ ebp - 0x5c ]
jb r-xdata
lea edx [ ebp - 0x3c ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
cmp ecx 0x80000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
cmp ebx 0x1
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x3c ]
lea eax [ eax + edi * 4 ]
mov ecx esi
mov [ ebp - 0x28 ] eax
call sub_402570
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x4c ]
mov [ ecx ] eax
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
cmp eax 0x80000000
jae r-xdata
sub eax ecx
add [ esi ] ecx
mov [ esi + 0x4 ] eax
cmp ecx eax
ja r-xdata
mov eax [ ebp - 0x38 ]
test eax eax
ja r-xdata
test eax eax
ja r-xdata
xor edi edi
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x30 ]
xor edx edx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x38 ]
test ecx ecx
ja r-xdata
mov ecx [ ebp - 0x48 ]
test ecx ecx
ja r-xdata
test ecx ecx
ja r-xdata
mov ecx [ ebp - 0x3c ]
jb r-xdata
jb r-xdata
cmp edx ebx
je r-xdata
mov edi eax
mov esi [ edi + 0x14 ]
mov eax [ ebp - 0x3c ]
jb r-xdata
mov eax [ ebp - 0x4c ]
jb r-xdata
jb r-xdata
cmp ecx 0x80000000
jae r-xdata
cmp ecx 0x4000000
jae r-xdata
mov [ edi ] edx
mov edi [ ebp - 0x28 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ebp - 0x28 ]
inc edi
mov [ ecx ] eax
cmp edi ebx
jae r-xdata
cmp eax 0x80000000
jae r-xdata
mov ecx [ ebp - 0x2c ]
inc edi
mov [ ecx + 0x4 ] eax
cmp edi ebx
jae r-xdata
cmp eax 0x80000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
test eax eax
ja r-xdata
test eax eax
js r-xdata
inc eax
add ecx 0x8
cmp eax esi
jb r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
test ecx ecx
ja r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
test ecx ecx
ja r-xdata
jb r-xdata
inc edx
cmp edx ebx
jb r-xdata
cmp [ ecx ] edx
je r-xdata
jmp r-xdata
jb r-xdata
mov eax [ eax + 0x4 ]
lea edx [ ebp - 0x3c ]
lea eax [ eax + edi * 8 ]
mov ecx esi
mov [ ebp - 0x2c ] eax
call sub_402570
test eax eax
jne r-xdata
jb r-xdata
cmp ecx 0x4000000
jae r-xdata
xor eax eax
test esi esi
je r-xdata
cmp eax 0x4000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
sub_403100
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push 0x0
push 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x18 ] esi
call sub_402710
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
mov eax 0x4
mov edx [ ebp - 0x20 ]
cmp edx 0x80000000
jae r-xdata
test eax eax
jne r-xdata
cmp edx 0x4000000
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ ebx ] edx
test eax eax
je r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov cl [ eax - 0x1 ]
xor edi edi
mov [ esi ] eax
test cl cl
mov eax 0x4
cmove eax edi
test eax eax
jne r-xdata
test edx edx
jne r-xdata
lea eax [ edx + edx * 4 ]
shl eax 0x3
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x8 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor ecx ecx
cmp [ ebx ] ecx
jbe r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
cmp [ ebx ] edi
jbe r-xdata
mov esi [ ebp + 0x8 ]
xor edx edx
lea esp [ esp ]
push 0x0
push 0xc
mov ecx esi
call sub_402710
add esp 0x8
test eax eax
jne r-xdata
xor ebx ebx
mov eax [ esi ]
add eax edx
inc ecx
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x18 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
add edx 0x28
cmp ecx [ ebx ]
jb r-xdata
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebx ] eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
inc edi
add ebx 0x28
cmp edi [ eax ]
jb r-xdata
lea edx [ ebp - 0x20 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov edx [ eax ]
add edx ebx
mov ecx esi
call sub_402b30
add esp 0x4
test eax eax
jne r-xdata
mov ebx eax
lea ecx [ ecx ]
shl eax 0x3
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xa
jne r-xdata
mov eax [ ebp - 0x14 ]
xor edi edi
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
test edx edx
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
inc edi
add eax 0x28
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] eax
cmp edi [ ebx ]
jb r-xdata
mov eax [ ebx + 0xc ]
mov ecx esi
lea edx [ eax + edi * 8 ]
call sub_402570
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x28 ]
jb r-xdata
mov edi [ ebx ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
add ebx eax
mov ecx ebx
call sub_4020c0
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
inc edi
cmp edi [ ebp - 0x14 ]
jb r-xdata
add [ esi ] ecx
sub eax ecx
mov [ esi + 0x4 ] eax
xor eax eax
ja r-xdata
mov ebx 0x10
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ esi ] eax
test cl cl
jne r-xdata
lea edx [ ebp - 0x20 ]
mov ecx esi
call sub_402570
test eax eax
jne r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
mov ecx esi
call sub_4027a0
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
push edi
mov eax [ ebx ]
push ebx
call eax
add esp 0x8
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov eax ecx
or eax edx
je r-xdata
test edi edi
je r-xdata
lea ebx [ eax + 0x2 ]
jmp r-xdata
xor ebx ebx
test edi edi
je r-xdata
test edi edi
jne r-xdata
push [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
push eax
mov eax [ eax + 0x4 ]
call eax
mov eax [ ebp + 0x10 ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x10
test ebx ebx
je r-xdata
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx edi
mov edi [ ebp - 0x4 ]
mov edx ecx
shr ecx 0x2
mov eax 0x1010101
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ ebp - 0x4 ]
mov edi [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
xor ebx ebx
xor edx edx
mov [ ebp - 0x14 ] ebx
cmp [ ecx ] edx
jbe r-xdata
mov edi ecx
mov ecx [ ebp - 0x14 ]
lea eax [ edi * 4 ]
push eax
mov eax [ ebx ]
push ebx
call eax
mov ebx eax
add esp 0x8
mov [ ebp - 0xc ] ebx
test ebx ebx
jne r-xdata
mov esi [ ebp - 0xc ]
xor edi edi
mov ebx ecx
inc ebx
add edi 0x4
cmp ebx ecx
jb r-xdata
mov [ edi ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
lea ebx [ eax + 0x2 ]
jmp r-xdata
movzx eax [ eax + edx ]
mov ecx [ ebp + 0x8 ]
inc edx
mov ecx [ ecx ]
lea edi [ edi + 0x28 ]
mov [ ecx + edi - 0xc ] eax
mov eax [ esi + edx * 4 - 0x4 ]
mov [ ecx + edi - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp edx [ ebx ]
jb r-xdata
mov esi [ ebp - 0x18 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebx + eax ] 0x0
je r-xdata
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ esi ] eax
movzx eax cl
mov ecx edx
shl eax cl
add edx 0x8
or [ edi ] eax
cmp edx 0x20
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
sub_403500
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
mov ebx edx
push edi
mov edi ecx
xorps xmm0 xmm0
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] edi
movlpd [ ebp - 0x28 ] xmm0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx edi
mov [ edx ] ebx
lea edx [ ebp - 0x28 ]
call sub_402570
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x24
mov ecx ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov [ eax ] 0x1
lea eax [ eax + 0x28 ]
dec ecx
jne r-xdata
mov ebx [ ebp - 0x28 ]
mov esi [ ebp - 0x24 ]
cmp ebx 0xd
jne r-xdata
cmp ebx 0xa
jne r-xdata
test esi esi
jne r-xdata
cmp ebx 0x9
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
cmp [ ebp - 0xc ] esi
jbe r-xdata
mov eax ebx
or eax esi
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x28 ]
mov ecx edi
call sub_402570
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0x24
lea edx [ ebp - 0x30 ]
mov ecx edi
call sub_402570
test eax eax
jne r-xdata
shl eax 0x3
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x10 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
test ecx ecx
ja r-xdata
cmp [ ebp - 0x2c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x30 ]
jb r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x14 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
xor eax eax
mov [ ebp - 0x20 ] eax
test ecx ecx
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x38 ]
jb r-xdata
add [ edi ] ecx
sub eax ecx
mov [ edi + 0x4 ] eax
xor eax eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
shl eax 0x2
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x18 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
je r-xdata
cmp ebx 0x9
jne r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0xc
mov [ ebp - 0x1c ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebx ] eax
add [ ecx ] eax
inc esi
add ebx 0x28
cmp esi [ ebp - 0xc ]
jb r-xdata
cmp eax 0x80000000
jae r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov edx [ edx ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x28 ] 0x9
jne r-xdata
lea edx [ ebp - 0x38 ]
mov ecx edi
call sub_402570
test eax eax
jne r-xdata
jmp r-xdata
test ecx ecx
ja r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov ecx [ ecx ]
mov esi [ esi ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov ecx edi
call sub_402570
test eax eax
jne r-xdata
mov ebx [ ebx + 0x18 ]
xorps xmm0 xmm0
movlpd [ ebp - 0x38 ] xmm0
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x28 ]
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
test esi esi
jne r-xdata
jb r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
add eax 0x1c
mov edx ecx
xor edi edi
mov [ esi + eax ] 0x0
inc eax
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
cmp eax edx
jb r-xdata
mov ebx [ ebp - 0x28 ]
xorps xmm0 xmm0
movlpd [ ebp - 0x30 ] xmm0
mov esi [ ebp - 0x30 ]
mov ecx [ ebp - 0x2c ]
dec edx
js r-xdata
cmp ebx 0x1
jbe r-xdata
cmp eax 0x4000000
jae r-xdata
or ebx eax
je r-xdata
test eax eax
jne r-xdata
add edi ecx
cmp [ eax ] 0x0
jne r-xdata
inc eax
add ebx 0x28
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ecx
jb r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x38 ]
mov esi 0x1
mov [ ebp - 0x10 ] eax
xor eax eax
lea edx [ ebp - 0x40 ]
mov ecx edi
call sub_402570
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
xor edx edx
xor ebx ebx
mov [ ebp + 0xc ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] edx
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx 0x1
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x18 ]
add eax 0x28
dec edx
jne r-xdata
mov eax [ ebx ]
mov esi [ eax + edx * 8 ]
mov ecx [ eax + edx * 8 + 0x4 ]
jmp r-xdata
mov eax [ ebx - 0x8 ]
add eax 0x4
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x40 ]
inc [ ebp - 0x8 ]
inc esi
add [ ebp - 0x10 ] edx
mov [ eax + ecx * 8 ] edx
mov ecx [ ebp - 0x3c ]
adc [ ebp - 0x14 ] ecx
mov [ eax + edi * 8 + 0x4 ] ecx
mov edi [ ebp - 0x18 ]
cmp esi ebx
jb r-xdata
cmp [ ebp - 0x3c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x40 ]
jb r-xdata
mov [ ebp - 0x8 ] 0x10
mov ebx [ ebp - 0x8 ]
jmp r-xdata
dec eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edi ] eax
test cl cl
jne r-xdata
sub esi [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ eax ]
sbb ecx [ ebp - 0x14 ]
mov [ eax + edx * 8 ] esi
mov esi [ ebp - 0x24 ]
mov [ eax + edx * 8 + 0x4 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
inc edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
test ecx ecx
js r-xdata
inc ecx
add eax 0x8
cmp ecx esi
jb r-xdata
lea edx [ ebp - 0x40 ]
mov ecx edi
call sub_402570
test eax eax
jne r-xdata
jmp r-xdata
add [ edi ] ecx
sub eax ecx
mov [ edi + 0x4 ] eax
xor eax eax
ja r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax + 0x4 ]
call eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x10
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_4027a0
mov ecx eax
add esp 0x8
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
dec edx
jns r-xdata
cmp [ eax ] edx
je r-xdata
mov ebx [ ebp - 0x1c ]
lea ecx [ ebx - 0xc ]
call sub_4020c0
mov edx eax
test edx edx
je r-xdata
lea edx [ ebp - 0x28 ]
mov ecx edi
call sub_402570
test eax eax
jne r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov edx eax
add esp 0x8
mov [ ebp + 0xc ] edx
test edx edx
jne r-xdata
xor edx edx
xor ecx ecx
mov [ ebp + 0xc ] edx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov ebx ecx
jmp r-xdata
xor ecx ecx
test esi esi
je r-xdata
mov ebx [ ebp - 0x28 ]
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x2
mov ebx [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp ebx 0xa
jne r-xdata
xor ecx ecx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx eax
mov edi edx
mov edx ecx
shr ecx 0x2
mov eax 0x1010101
[ edi ]
mov ecx edx
mov edx [ ebp + 0xc ]
and ecx 0x3
[ edi ]
mov edi [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
mov [ ebp - 0x1c ] ecx
jmp r-xdata
shl eax 0x2
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx eax
add esp 0x8
mov [ ebp - 0x10 ] ecx
test ecx ecx
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
add eax 0x1c
mov [ ebp - 0x14 ] eax
mov edi ecx
mov [ ebp - 0x20 ] ecx
cmp [ eax + edx ] bl
je r-xdata
mov edx [ ebp + 0xc ]
lea ebx [ eax + 0x2 ]
jmp r-xdata
test edx edx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
add ecx 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov [ ecx ] ebx
xor edx edx
lea esp [ esp ]
add eax 0x28
dec edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax ]
lea ecx [ eax + esi * 4 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edi eax
lea ebx [ ebx ]
mov eax [ ebp + 0x14 ]
inc esi
mov eax [ eax ]
mov [ esi + eax - 0x1 ] dl
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov [ ecx + esi * 4 - 0x4 ] eax
jmp r-xdata
mov ebx 0x10
jmp r-xdata
dec eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edi ] eax
movzx eax cl
mov ecx edx
shl eax cl
mov ecx [ ebp - 0x1c ]
add edx 0x8
or [ ecx ] eax
cmp edx 0x20
jl r-xdata
mov edx [ eax + 0x8 ]
cmp edx 0x1
jne r-xdata
mov edi [ ebp - 0x18 ]
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov al [ eax + ebx ]
mov [ edi + esi - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc ebx
mov eax [ eax + ebx * 4 - 0x4 ]
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp + 0xc ]
sub_403af0
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x4 ] edx
push edi
lea edx [ ebp - 0x10 ]
mov edi ecx
call sub_402570
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax 0x4
cmp edx [ ebp - 0xc ]
jne r-xdata
cmp ecx 0x8
ja r-xdata
jmp [ ecx * 4 + jump_table_403bc0 ]
push [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ esi + 0x14 ]
push esi
push eax
mov ecx edi
call sub_402920
add esp 0x14
jmp r-xdata
push [ ebp + 0x20 ]
lea eax [ esi + 0xc ]
push [ ebp + 0x1c ]
lea edx [ esi + 0x18 ]
push eax
mov ecx edi
call sub_403100
add esp 0xc
jmp r-xdata
push [ ebp + 0x20 ]
mov edx [ esi + 0x18 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0xc ]
call sub_403500
add esp 0x18
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edi
call sub_402570
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax ecx
cdq
cmp eax ecx
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_403bf0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor eax eax
xor esi esi
push edi
mov edi [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov [ edi + esi * 4 ] eax
xor esi esi
cmp eax edx
mov ecx 0x10
pop edi
cmove ecx esi
pop esi
mov eax ecx
pop ebx
pop ebp
retn
mov [ edi + esi * 4 ] eax
pop edi
pop esi
mov eax 0x10
pop ebx
pop ebp
retn
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
inc eax
jmp r-xdata
cmp [ ecx + eax * 2 + 0x1 ] 0x0
je r-xdata
cmp eax edx
jae r-xdata
inc esi
inc eax
cmp esi ebx
jb r-xdata
sub_403c50
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov ebx edx
push edi
mov edi ecx
lea edx [ ebp - 0x18 ]
mov ecx ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_402570
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x4
jne r-xdata
test ecx ecx
jne r-xdata
mov eax edx
or eax ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx ebx
call sub_4026b0
test eax eax
jne r-xdata
cmp edx 0x5
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x20 ]
lea edx [ edi + 0x28 ]
push [ ebp + 0x10 ]
mov ecx ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push edi
call sub_403af0
add esp 0x1c
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
mov ecx ebx
call sub_402570
test eax eax
jne r-xdata
mov eax 0x10
test ecx ecx
jne r-xdata
mov eax [ edi + 0x20 ]
add [ edi + 0x28 ] eax
mov eax [ edi + 0x24 ]
lea edx [ ebp - 0x18 ]
adc [ edi + 0x2c ] eax
mov ecx ebx
call sub_402570
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
lea edx [ ebp - 0x4 ]
mov ecx ebx
call sub_402630
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x4 ]
mov [ edi + 0x1c ] esi
test esi esi
jne r-xdata
mov eax esi
shl eax 0x5
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ edi + 0x10 ] eax
test esi esi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
mov ecx ebx
call sub_402570
test eax eax
jne r-xdata
add eax 0x19
mov ecx esi
mov edi [ ebp - 0x28 ]
mov eax edi
or eax [ ebp - 0x24 ]
je r-xdata
mov [ eax - 0x1 ] 0x1
mov [ eax + 0x3 ] 0x0
lea eax [ eax + 0x20 ]
dec ecx
jne r-xdata
xor ecx ecx
xor ebx ebx
xor edi edi
mov [ ebp - 0x10 ] ecx
test esi esi
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx ebx
call sub_402570
test eax eax
jne r-xdata
mov edx [ ebp + 0x20 ]
mov ecx [ ebp - 0xc ]
call sub_402330
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
add edx 0x18
jmp r-xdata
cmp [ ebp - 0x1c ] eax
ja r-xdata
mov eax [ ebp + 0x14 ]
mov [ edx + 0x2 ] 0x0
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jb r-xdata
cmp [ eax + edi ] 0x0
sete al
mov [ edx ] al
test al al
je r-xdata
mov [ edx ] 0x1
jmp r-xdata
mov eax edi
cdq
cmp eax edi
jne r-xdata
cmp ecx [ ebx + 0x4 ]
ja r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx + 0x1 ] 0x0
mov ecx [ eax ]
inc ebx
mov eax [ ecx + ebx * 8 - 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ecx + ebx * 8 - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov eax [ eax + ebx * 4 - 0x4 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov al [ ebx + eax - 0x1 ]
mov [ edx + 0x3 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
push ecx
cmp edx [ ebp - 0x24 ]
jne r-xdata
cmp [ eax + ecx ] 0x0
sete al
mov [ edx + 0x1 ] al
mov [ edx + 0x1 ] 0x1
jmp r-xdata
inc edi
add edx 0x20
cmp edi esi
jb r-xdata
lea edx [ ebp - 0x28 ]
mov ecx ebx
call sub_402570
test eax eax
jne r-xdata
lea eax [ edi - 0xe ]
cmp eax 0x7
ja r-xdata
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ edx - 0x10 ] 0x0
mov [ edx - 0xc ] 0x0
mov [ edx - 0x8 ] 0x0
mov [ edx + 0x3 ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_404114 ]
mov ecx ebx
call sub_402b00
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp + 0x14 ]
push edi
mov edx esi
mov ecx ebx
call sub_4027a0
add esp 0x8
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov edx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx ebx
call sub_4027a0
jmp r-xdata
push [ ebp + 0x24 ]
mov edx esi
push [ ebp + 0x1c ]
mov ecx ebx
call sub_402820
add esp 0x8
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov edx esi
push [ ebp + 0x1c ]
mov ecx ebx
call sub_402820
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
mov [ ebp - 0x14 ] eax
test al 0x1
jne r-xdata
xor edx edx
mov [ ebp - 0x10 ] edx
test esi esi
je r-xdata
add esp 0x8
test eax eax
jne r-xdata
mov ecx ebx
call sub_402b00
test eax eax
jne r-xdata
mov ecx ebx
call sub_402b00
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
push [ ebp + 0x20 ]
lea ecx [ edi + 0x44 ]
mov edx eax
call sub_401030
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi ]
lea esp [ esp ]
xor edi edi
test esi esi
je r-xdata
xor edi edi
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
test eax eax
jne r-xdata
inc eax
cmp eax esi
jb r-xdata
inc edx
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x24 ]
push [ esi ]
mov eax [ edi + 0x4 ]
push edi
call eax
add esp 0x8
mov [ esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x14
mov edi edi
mov esi [ ebp + 0x1c ]
mov eax [ ebp + 0x24 ]
push [ esi ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov [ esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x4
lea eax [ esi * 4 + 0x4 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ edi + 0x40 ] eax
test eax eax
je r-xdata
mov [ edi + 0x40 ] eax
jmp r-xdata
cmp [ ecx + eax ] 0x0
je r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
inc edi
add esi 0x20
cmp edi [ ebp - 0x4 ]
jb r-xdata
mov edx esi
mov ecx ebx
call sub_402520
test eax eax
jne r-xdata
inc edi
add esi 0x20
cmp edi [ ebp - 0x4 ]
jb r-xdata
mov ecx ebx
call sub_402520
test eax eax
jne r-xdata
mov edi [ ebp - 0x14 ]
mov esi [ ebx ]
mov eax [ ebp - 0xc ]
push edi
push esi
push [ eax + 0x44 ]
call sub_40de40
mov eax [ ebp - 0xc ]
add esp 0xc
push [ eax + 0x40 ]
mov edx edi
push [ ebp - 0x4 ]
shr edx 0x1
mov ecx esi
call sub_403bf0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
mov al [ edi + eax ]
mov [ esi + 0x9 ] al
mov [ esi ] 0x0
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea edx [ esi - 0x4 ]
mov eax [ eax ]
mov al [ edi + eax ]
mov [ esi + 0x18 ] al
mov [ esi ] 0x0
mov [ edx ] 0x0
test al al
je r-xdata
mov edx esi
mov ecx ebx
call sub_402520
test eax eax
jne r-xdata
push eax
push edi
jmp r-xdata
mov ecx ebx
call sub_402680
sub_404140
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
call sub_403c50
push [ ebp - 0x4 ]
mov ecx [ edi + 0x4 ]
push edi
mov esi eax
call ecx
push [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
push edi
call eax
push [ ebp - 0xc ]
mov eax [ edi + 0x4 ]
push edi
call eax
push [ ebp - 0x10 ]
mov eax [ edi + 0x4 ]
push edi
call eax
mov eax [ edi + 0x4 ]
add esp 0x40
push [ ebp - 0x14 ]
push edi
call eax
push [ ebp - 0x18 ]
mov eax [ edi + 0x4 ]
push edi
call eax
add esp 0x10
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4041e0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x18 ]
push edi
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x24 ]
push ecx
mov edi edx
mov edx [ ebp + 0x14 ]
push ecx
push eax
mov [ ebp - 0x20 ] edx
mov edx [ ebp + 0x1c ]
push edx
push esi
mov esi [ ebp - 0x20 ]
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x1c ] ecx
push esi
lea edx [ ebp - 0x28 ]
mov ecx edi
mov [ ebp - 0x14 ] 0x0
call sub_403af0
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x28 ]
add edi [ ebp + 0xc ]
mov eax [ ebp - 0x24 ]
adc eax [ ebp + 0x10 ]
cmp [ esi + 0x18 ] 0x1
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
mov [ ebp - 0x24 ] eax
call sub_402160
mov esi eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] edi
call eax
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov [ ebx + 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x1c ]
push esi
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ ebx ] eax
test eax eax
je r-xdata
mov [ ebx ] esi
jmp r-xdata
mov eax 0x2
mov [ ebx + 0x4 ] esi
push [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x20 ]
push esi
push [ ebx ]
mov edx [ edx ]
push [ ebp - 0x14 ]
push edi
mov edi [ ebp - 0x24 ]
push ecx
mov ecx edi
call sub_401d40
add esp 0x18
test eax eax
jne r-xdata
cmp [ edi + 0x1c ] eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
push rw-data
push esi
or ecx 0xffffffff
call [ rw-data ]
not eax
cmp eax [ edi + 0x20 ]
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
sub_404340
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
mov edi [ ebp + 0x14 ]
push edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_4041e0
mov edx edi
lea ecx [ ebp - 0x2c ]
mov esi eax
call sub_4021b0
push [ ebp - 0x4 ]
mov ecx [ edi + 0x4 ]
push edi
call ecx
push [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
push edi
call eax
push [ ebp - 0xc ]
mov eax [ edi + 0x4 ]
push edi
call eax
add esp 0x38
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4043f0
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0xc ]
push edi
mov [ ebp - 0x3c ] eax
mov ebx edx
push 0x1
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebx + 0xc ]
xorps xmm0 xmm0
push ebx
mov [ ebp - 0x5c ] ecx
movlpd [ ebp - 0x38 ] xmm0
call eax
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov esi 0x20
lea edi [ ebp - 0x24 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x8 ]
push edi
push ebx
mov [ ebp - 0x2c ] esi
call eax
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
mov eax 0x11
add edi eax
sub esi eax
jne r-xdata
xor ecx ecx
lea esp [ esp ]
inc ecx
cmp ecx 0x6
jb r-xdata
mov al [ ebp + ecx - 0x24 ]
cmp al [ ecx + rw-data ]
jne r-xdata
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x5c ]
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x34 ]
add ecx 0x20
adc eax 0x0
mov [ edx + 0x20 ] ecx
push rw-data
mov [ edx + 0x24 ] eax
push 0x14
lea edx [ ebp - 0x18 ]
or ecx 0xffffffff
mov [ ebp - 0x54 ] edi
call [ rw-data ]
not eax
cmp eax [ ebp - 0x1c ]
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp edi edi
jne r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x60 ]
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x44 ]
add edi esi
adc eax ecx
mov [ ebp - 0x60 ] eax
cmp ecx eax
ja r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
jb r-xdata
mov edx edi
add edx 0x20
adc eax 0x0
cmp ecx eax
ja r-xdata
cmp esi edi
ja r-xdata
jb r-xdata
push 0x2
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebx + 0xc ]
xorps xmm0 xmm0
push ebx
movlpd [ ebp - 0x30 ] xmm0
call eax
add esp 0xc
test eax eax
jne r-xdata
cmp esi edx
ja r-xdata
add esi [ ebp - 0x38 ]
mov ecx [ ebp - 0x44 ]
adc ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x2c ]
cmp eax ecx
jb r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x30 ]
ja r-xdata
add esi 0x20
adc ecx 0x0
cmp eax ecx
jb r-xdata
cmp edx esi
jb r-xdata
ja r-xdata
add edi [ ebp - 0x38 ]
mov eax [ ebp - 0x60 ]
adc eax [ ebp - 0x34 ]
add edi 0x20
adc eax 0x0
cmp [ ebp - 0x2c ] eax
jb r-xdata
cmp edx esi
jb r-xdata
ja r-xdata
push ecx
push esi
mov ecx ebx
call sub_4051c0
add esp 0x8
test eax eax
jne r-xdata
cmp edx edi
jb r-xdata
mov esi [ ebp - 0x54 ]
push [ ebp - 0x3c ]
mov edx esi
lea ecx [ ebp - 0x48 ]
call sub_401030
add esp 0x4
test eax eax
je r-xdata
mov edi [ ebp - 0x48 ]
push esi
mov edx edi
mov ecx ebx
call sub_405200
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
push rw-data
push [ ebp - 0x54 ]
mov edx edi
or ecx 0xffffffff
lea esi [ eax + 0x10 ]
call [ rw-data ]
not eax
cmp eax [ ebp - 0x4c ]
jne r-xdata
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] eax
call sub_402570
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x48 ]
cmp eax 0x17
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x44 ] esi
jne r-xdata
mov esi 0x4
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
push [ ebp - 0x3c ]
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x50 ]
push [ eax + 0x24 ]
mov ecx ebx
push [ eax + 0x20 ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
call sub_404340
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp - 0x3c ]
mov ecx [ ebp - 0x5c ]
push [ ebp - 0x64 ]
lea edx [ ebp - 0x50 ]
call sub_404140
add esp 0x8
mov esi eax
mov eax [ ebp - 0x3c ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x3c ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
mov eax [ ebp - 0x54 ]
mov edi [ ebp - 0x58 ]
add esp 0x8
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] eax
call sub_402570
mov esi eax
mov ebx [ ebp - 0x3c ]
push [ ebp - 0x58 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x48 ]
test esi esi
jne r-xdata
sub_404790
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov [ ebp - 0x38 ] edx
mov edx ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x48 ] eax
mov eax [ edx + 0x3c ]
mov eax [ eax + esi * 4 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x3c ]
xor ebx ebx
mov [ edi ] ebx
mov [ ecx ] ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ ecx ] ebx
je r-xdata
push [ ecx ]
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax + 0x4 ]
call eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] 0xffffffff
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov [ ecx ] ebx
mov [ eax ] ebx
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
lea ecx [ eax + eax * 4 ]
mov eax [ edx + 0xc ]
lea eax [ eax + ecx * 8 ]
mov ecx eax
mov [ ebp - 0x30 ] eax
call sub_402160
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x2c ]
mov ecx [ ebx + 0x34 ]
mov [ ebp - 0x20 ] eax
lea eax [ edx * 4 ]
mov [ ebp - 0x18 ] eax
mov edx eax
mov eax [ ebx + 0x30 ]
mov eax [ edx + eax ]
mov edx [ ecx + eax * 8 ]
add edx [ ebx + 0x28 ]
mov eax [ ecx + eax * 8 + 0x4 ]
adc eax [ ebx + 0x2c ]
xor ecx ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x44 ] edx
mov edx [ ebp - 0x2c ]
cmp eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx ] eax
je r-xdata
mov eax 0x2
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov ecx esi
shl ecx 0x5
add ecx [ edx + 0x10 ]
mov [ edi ] 0x0
mov eax [ edx + 0x38 ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
mov eax [ eax + edx * 4 ]
mov edx [ ebp - 0x1c ]
cmp eax esi
jae r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] edx
push [ ecx ]
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax + 0x4 ]
call eax
mov eax [ ebp - 0x14 ]
push 0x0
mov [ eax ] 0x0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov eax [ eax + 0xc ]
call eax
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x3c ]
mov esi [ ecx + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax ] esi
mov edi [ edi ]
lea eax [ esi + edi ]
cmp eax [ edx ]
jbe r-xdata
mov ecx eax
shl ecx 0x5
sub esi eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
test eax eax
je r-xdata
cmp [ ecx + 0x1b ] 0x0
je r-xdata
mov eax 0xb
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x10 ]
lea ecx [ ecx + 0x20 ]
mov eax [ ecx + eax - 0x18 ]
add [ edi ] eax
dec esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
push [ ebp - 0x48 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x14 ]
push [ eax ]
mov eax [ ebx + 0x30 ]
push [ ebp - 0x40 ]
mov ecx [ ecx + eax ]
push [ ebp - 0x44 ]
mov eax [ ebx ]
push edx
lea edx [ eax + ecx * 8 ]
mov ecx [ ebp - 0x30 ]
call sub_401d40
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
push rw-data
mov edx [ eax ]
add edx edi
push esi
or ecx 0xffffffff
call [ rw-data ]
mov ecx [ ebp - 0x18 ]
not eax
cmp eax [ ecx + 0x10 ]
mov edx 0x3
cmovne ebx edx
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ebx 0x2
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
push rw-data
push eax
mov eax [ ebp - 0x14 ]
or ecx 0xffffffff
mov edx [ eax ]
call [ rw-data ]
mov ecx [ ebp - 0x30 ]
not eax
cmp eax [ ecx + 0x20 ]
je r-xdata
mov ebx 0x3
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
sub_404a50
push ebp
mov ebp esp
mov eax 0x8010
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x800c ] edx
mov [ ebp - 0x8008 ] ecx
mov [ edx ] ebx
mov [ edx + 0x4 ] ebx
lea ecx [ ecx ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8010 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8008 ]
add ebx eax
cmp ebx 0x20
jbe r-xdata
mov eax 0x8000
sub eax ebx
mov [ ebp - 0x8010 ] eax
lea eax [ ebp - 0x8010 ]
lea edx [ ebp - 0x8004 ]
push eax
add edx ebx
call sub_401dc0
add esp 0x4
test eax eax
jne r-xdata
lea edi [ ebx - 0x20 ]
xor esi esi
test edi edi
je r-xdata
mov esi [ ebp - 0x800c ]
lea eax [ ebp - 0x8004 ]
add [ esi ] edi
adc [ esi + 0x4 ] 0x0
sub ebx edi
add eax edi
push ebx
push eax
lea eax [ ebp - 0x8004 ]
push eax
call sub_40a990
add esp 0xc
cmp [ esi + 0x4 ] 0x0
ja r-xdata
cmp [ ebp + esi - 0x8004 ] 0x37
je r-xdata
cmp [ esi ] __dos_header
ja r-xdata
cmp esi edi
lea ebx [ ebx ]
mov ecx [ ebp - 0x8008 ]
jmp r-xdata
mov eax [ ebp + esi - 0x8004 ]
mov ecx rw-data
cmp eax [ ecx ]
jne r-xdata
je r-xdata
inc esi
cmp [ ebp + esi - 0x8004 ] 0x37
jne r-xdata
inc esi
cmp esi edi
jb r-xdata
movzx eax [ ebp + esi - 0x8000 ]
cmp ax [ ecx + 0x4 ]
jne r-xdata
cmp esi edi
jae r-xdata
push rw-data
lea edx [ ebp - 0x7ff8 ]
push 0x14
add edx esi
or ecx 0xffffffff
call [ rw-data ]
not eax
cmp eax [ ebp + esi - 0x7ffc ]
je r-xdata
mov edx [ ebp - 0x800c ]
pop edi
add [ edx ] esi
pop esi
mov eax 0x1
adc [ edx + 0x4 ] 0x0
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
sub_404bb0
push ebp
mov ebp esp
mov eax 0x4944
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor eax eax
push 0x61a
push eax
mov [ ebp - 0x628 ] ax
lea eax [ ebp - 0x626 ]
push eax
mov esi edx
mov [ ebp - 0x48d0 ] ecx
xor edi edi
call sub_40d4a0
mov ebx esi
add esp 0xc
lea ecx [ ebx + 0x2 ]
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
push esi
lea eax [ ebp - 0x628 ]
sub ebx ecx
push 0x30e
push eax
sar ebx 0x1
call sub_40b040
add esp 0xc
cmp [ esi + ebx * 2 - 0x2 ] 0x5c
je r-xdata
call sub_401080
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push [ ebp - 0x48d0 ]
mov [ ebp - 0x8a0 ] sub_401000
mov [ ebp - 0x89c ] sub_401020
mov [ ebp - 0x8a8 ] sub_401000
mov [ ebp - 0x8a4 ] sub_401020
mov [ ebp - 0x63c ] sub_401fb0
mov [ ebp - 0x638 ] sub_401fd0
mov [ ebp - 0x48c8 ] sub_405270
mov [ ebp - 0x48c4 ] sub_4052d0
mov [ ebp - 0x48c0 ] sub_4052e0
mov [ ebp - 0x48bc ] sub_405330
call [ CreateFileW@IAT ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x634 ] eax
cmp eax 0xffffffff
jne r-xdata
push r--data
lea eax [ ebp - 0x628 ]
push 0x30e
push eax
call sub_40afd4
lea ebx [ ebp - 0x628 ]
add esp 0xc
lea ecx [ ebx + 0x2 ]
xorps xmm0 xmm0
lea edx [ ebp - 0x48e8 ]
lea ecx [ ebp - 0x634 ]
movlpd [ ebp - 0x48e8 ] xmm0
call sub_404a50
test eax eax
jne r-xdata
call esi
test eax eax
je r-xdata
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
sub ebx ecx
sar ebx 0x1
mov eax [ ebp - 0x48e4 ]
mov ecx [ ebp - 0x48e8 ]
push 0x0
mov [ ebp - 0x62c ] eax
lea eax [ ebp - 0x62c ]
push eax
push ecx
push [ ebp - 0x634 ]
mov [ ebp - 0x630 ] ecx
call [ SetFilePointer@IAT ]
mov [ ebp - 0x630 ] eax
cmp eax 0xffffffff
jne r-xdata
lea edi [ eax + 0xb ]
jmp r-xdata
mov edi 0xb
jmp r-xdata
lea eax [ ebp - 0x63c ]
mov [ ebp - 0x48b8 ] eax
mov [ ebp - 0x48b0 ] edi
mov [ ebp - 0x48b4 ] edi
call esi
test eax eax
je r-xdata
mov [ ebp - 0x4940 ] 0x0
mov [ ebp - 0x493c ] 0x0
mov [ ebp - 0x4938 ] 0x0
mov [ ebp - 0x4934 ] 0x0
mov [ ebp - 0x4930 ] 0x0
mov [ ebp - 0x492c ] 0x0
mov [ ebp - 0x4928 ] 0x0
mov [ ebp - 0x4924 ] 0x0
mov [ ebp - 0x4910 ] 0x0
mov [ ebp - 0x490c ] 0x0
mov [ ebp - 0x4908 ] 0x0
mov [ ebp - 0x4904 ] 0x0
mov [ ebp - 0x4900 ] 0x0
mov [ ebp - 0x48fc ] 0x0
mov [ ebp - 0x48f8 ] 0x0
test edi edi
jne r-xdata
lea edx [ ebp - 0x8a0 ]
lea ecx [ ebp - 0x4940 ]
call sub_402260
mov eax [ ebp - 0x634 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x8a8 ]
push eax
lea eax [ ebp - 0x8a0 ]
push eax
lea edx [ ebp - 0x48c8 ]
lea ecx [ ebp - 0x4940 ]
call sub_4043f0
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov edi 0xb
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
test edi edi
pop edi
setne al
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
xor edx edx
mov [ ebp - 0x48e4 ] 0xffffffff
mov [ ebp - 0x48dc ] 0x0
mov [ ebp - 0x62c ] 0x0
mov [ ebp - 0x48d4 ] edx
cmp [ ebp - 0x4924 ] edx
jbe r-xdata
lea edx [ ebp - 0x8a0 ]
lea ecx [ ebp - 0x4940 ]
call sub_402260
test edi edi
jne r-xdata
call esi
push [ ebp - 0x48dc ]
lea eax [ ebp - 0x8a0 ]
push eax
call [ ebp - 0x89c ]
add esp 0x8
xor ecx ecx
mov [ ebp - 0x48d0 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4930 ]
add eax ecx
mov [ ebp - 0x48d8 ] eax
mov eax [ ebp - 0x4900 ]
mov [ ebp - 0x48ec ] 0x0
mov ecx [ eax + edx * 4 ]
mov edx [ eax + edx * 4 + 0x4 ]
sub edx ecx
mov [ ebp - 0x48cc ] 0x0
cmp edx 0x104
jae r-xdata
mov edi 0xb
lea esi [ ebp - 0x628 ]
lea esi [ esi + ebx * 2 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x8a8 ]
push eax
lea eax [ ebp - 0x8a0 ]
push eax
lea eax [ ebp - 0x48cc ]
push eax
lea eax [ ebp - 0x48ec ]
push eax
lea eax [ ebp - 0x62c ]
push eax
lea eax [ ebp - 0x48dc ]
push eax
lea eax [ ebp - 0x48e4 ]
push eax
push [ ebp - 0x48d4 ]
lea edx [ ebp - 0x48c8 ]
lea ecx [ ebp - 0x4940 ]
call sub_404790
mov edi eax
add esp 0x20
mov [ ebp - 0x48e0 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x48fc ]
lea esi [ eax + ecx * 2 ]
test edx edx
je r-xdata
mov esi [ GetLastError@IAT ]
jmp r-xdata
cmp [ esi ] di
je r-xdata
lea esi [ ebp - 0x628 ]
lea esi [ esi + ebx * 2 ]
lea eax [ ebp - 0x628 ]
lea eax [ eax + ebx * 2 ]
mov ecx eax
sub esi eax
mov eax [ ebp - 0x48d8 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
lea eax [ ebp - 0x628 ]
lea eax [ eax + ebx * 2 ]
mov ax [ esi + ecx ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
dec edx
jne r-xdata
lea eax [ ebp - 0x898 ]
push eax
lea eax [ ebp - 0x628 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea eax [ ebp - 0x628 ]
push eax
call [ CreateDirectoryW@IAT ]
mov esi [ GetLastError@IAT ]
test eax eax
jne r-xdata
inc edi
cmp [ eax + edi * 2 ] 0x0
lea esi [ eax + edi * 2 ]
jne r-xdata
xor eax eax
push eax
mov [ esi ] ax
lea eax [ ebp - 0x628 ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
push eax
call [ FindClose@IAT ]
mov esi [ GetLastError@IAT ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x628 ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x48f0 ] eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp - 0x48e0 ]
call esi
cmp [ esi ] 0x2f
jne r-xdata
mov eax 0x5c
mov [ esi ] ax
lea eax [ ebp - 0x628 ]
lea eax [ eax + ebx * 2 ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x48dc ]
mov edx [ ebp - 0x48ec ]
mov esi [ ebp - 0x48cc ]
lea eax [ ebp - 0x48cc ]
lea edx [ edx + ecx ]
push eax
lea ecx [ ebp - 0x48f0 ]
mov [ ebp - 0x48cc ] esi
call sub_401e60
add esp 0x4
test eax eax
jne r-xdata
mov esi [ GetLastError@IAT ]
call esi
test eax eax
jne r-xdata
jmp r-xdata
mov edi 0xb
jmp r-xdata
cmp [ ebp - 0x48cc ] esi
je r-xdata
mov ecx [ ebp - 0x48d8 ]
mov esi [ ebp - 0x48f0 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov edi [ ebp - 0x48e0 ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ecx ]
mov [ ebp - 0x644 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x640 ] eax
lea eax [ ebp - 0x644 ]
push eax
push 0x0
push 0x0
push esi
call [ SetFileTime@IAT ]
mov esi [ GetLastError@IAT ]
xor eax eax
push esi
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov esi [ GetLastError@IAT ]
call esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x48d8 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov edx [ ebp - 0x48d4 ]
mov ecx [ ebp - 0x48d0 ]
inc edx
add ecx 0x20
mov [ ebp - 0x48d4 ] edx
mov [ ebp - 0x48d0 ] ecx
cmp edx [ ebp - 0x4924 ]
jb r-xdata
push [ eax + 0x14 ]
lea eax [ ebp - 0x628 ]
push eax
call [ SetFileAttributesW@IAT ]
jmp r-xdata
sub_4051c0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ecx + 0xc ]
push ecx
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0xc
call sub_40a8b7
mov esp ebp
pop ebp
retn
sub_405200
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi edx
mov ebx ecx
test esi esi
je r-xdata
xor eax eax
mov edi edi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x6
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
add edi eax
sub esi eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push edi
push ebx
mov [ ebp - 0x8 ] esi
call eax
add esp 0xc
test eax eax
jne r-xdata
sub_405270
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov eax [ edi + 0x18 ]
sub eax [ edi + 0x14 ]
jne r-xdata
cmp eax [ esi ]
jae r-xdata
cmp [ esi ] edx
jbe r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0x1c ]
add ecx [ edi + 0x14 ]
pop edi
mov [ eax ] ecx
mov eax edx
pop esi
pop ebp
retn
mov [ esi ] eax
mov [ edi + 0x14 ] edx
cmp [ esi ] 0x4000
jbe r-xdata
mov ecx [ edi + 0x10 ]
push esi
lea eax [ edi + 0x1c ]
push eax
mov eax [ ecx ]
push ecx
call eax
mov edx eax
mov eax [ esi ]
add esp 0xc
mov [ edi + 0x18 ] eax
mov [ esi ] 0x4000
sub_4052e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov ecx [ ebx + 0x14 ]
mov edi [ ebx + 0x18 ]
sub edi ecx
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
lea eax [ ebx + 0x1c ]
cmp edi [ esi ]
cmova edi [ esi ]
push edi
add eax ecx
push eax
push [ ebp + 0xc ]
call sub_40de40
add [ ebx + 0x14 ] edi
add esp 0xc
mov [ esi ] edi
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebx + 0x10 ]
pop edi
pop ebx
mov [ ebp + 0x8 ] eax
mov eax [ eax ]
pop ebp
jmp eax
sub_405350
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x220 ] eax
push ebx
push esi
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
push edi
mov [ ebp - 0x21c ] ecx
mov ecx 0x81
lea edi [ ebp - 0x208 ]
[ edi ]
mov eax [ ebp + 0x1c ]
mov edi [ ebp + 0x18 ]
add eax edi
mov [ ebp - 0x218 ] eax
or eax 0xffffffff
mov [ ebp - 0x224 ] edx
xor ebx ebx
xor dl dl
xor esi esi
mov [ ebp - 0x210 ] 0x0
mov [ ebp - 0x214 ] eax
xor ecx ecx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
movzx eax [ edi ]
shl esi 0x8
inc edi
inc ecx
or esi eax
mov [ ebp + 0x18 ] edi
cmp ecx 0x5
jl r-xdata
cmp edi [ ebp - 0x218 ]
je r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x224 ]
sub edi [ ebp - 0x210 ]
sub eax ebx
cmp eax edi
cmovb edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x24 ]
mov eax [ ebp - 0x210 ]
lea ecx [ ecx ]
mov ecx [ ebp + 0x24 ]
cmp ebx ecx
je r-xdata
cmp dl 0xf
jne r-xdata
pop edi
xor eax eax
cmp ebx ecx
pop esi
setne al
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x210 ]
mov ecx [ ebp - 0x21c ]
inc eax
mov cl [ ecx + eax - 0x1 ]
mov [ ebp - 0x209 ] cl
mov [ ebp - 0x210 ] eax
cmp cl 0xe8
jne r-xdata
mov eax [ ebp - 0x210 ]
inc eax
mov [ ebp - 0x210 ] eax
mov dl cl
dec edi
jne r-xdata
mov al cl
and al 0xf0
cmp al 0x80
je r-xdata
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x6 ]
cmp cl 0xe9
cmovne edx eax
movzx eax dl
lea edx [ ebp - 0x208 ]
lea edx [ edx + eax * 2 ]
jmp r-xdata
mov ecx [ ebp - 0x21c ]
inc ebx
mov cl [ ecx + eax ]
mov eax [ ebp - 0x220 ]
mov [ eax + ebx - 0x1 ] cl
mov al cl
and al 0xfe
cmp al 0xe8
je r-xdata
sub eax ecx
mov [ ebp - 0x214 ] eax
mov eax edi
shr eax 0x5
sub edi eax
mov eax [ ebp - 0x214 ]
sub esi ecx
mov [ edx ] di
cmp eax 0x1000000
jae r-xdata
mov eax 0x800
sub eax edi
shr eax 0x5
add eax edi
mov [ ebp - 0x214 ] ecx
mov [ edx ] ax
cmp ecx 0x1000000
jae r-xdata
mov eax [ ebp - 0x214 ]
movzx edi [ edx ]
mov ecx eax
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp [ ebp - 0x209 ] 0xe8
jne r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx [ ebp - 0x218 ]
je r-xdata
mov dl [ ebp - 0x209 ]
mov eax [ ebp + 0x24 ]
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx [ ebp - 0x218 ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov ecx edx
cmp eax 0x4
jb r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx edx
cmp eax 0x4
jb r-xdata
shl eax 0x8
mov [ ebp - 0x214 ] eax
movzx eax [ ecx ]
shl esi 0x8
or esi eax
inc ecx
mov [ ebp + 0x18 ] ecx
mov eax ecx
shl eax 0x8
mov [ ebp - 0x214 ] eax
movzx eax [ edx ]
shl esi 0x8
or esi eax
inc edx
mov [ ebp + 0x18 ] edx
add edx 0x4
sub eax 0x4
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
add edx 0x4
sub eax 0x4
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax edx
shr eax 0x8
mov [ ecx + ebx ] al
inc ebx
cmp ebx [ ebp + 0x24 ]
je r-xdata
movzx edx [ ecx ]
movzx eax [ ecx + 0x1 ]
shl edx 0x8
or edx eax
movzx eax [ ecx + 0x2 ]
shl edx 0x8
or edx eax
movzx eax [ ecx + 0x3 ]
mov ecx [ ebp - 0x220 ]
shl edx 0x8
or edx eax
sub edx ebx
sub edx 0x4
mov [ ecx + ebx ] dl
inc ebx
cmp ebx [ ebp + 0x24 ]
je r-xdata
mov eax edx
shr eax 0x10
mov [ ecx + ebx ] al
mov eax [ ebp + 0x24 ]
inc ebx
cmp ebx eax
je r-xdata
mov ecx eax
jmp r-xdata
shr edx 0x18
mov [ ecx + ebx ] dl
inc ebx
jmp r-xdata
sub_405630
push esi
mov esi edx
push edi
mov edi ecx
cmp esi 0x4
jae r-xdata
sub esi 0x4
xor eax eax
pop edi
xor eax eax
pop esi
retn
add eax 0x4
cmp eax esi
jbe r-xdata
movzx edx [ eax + edi + 0x2 ]
movzx ecx [ eax + edi + 0x1 ]
shl edx 0x8
or edx ecx
movzx ecx [ eax + edi ]
shl edx 0x8
or edx ecx
shl edx 0x2
sub edx eax
sub edx 0x8
shr edx 0x2
mov ecx edx
shr ecx 0x10
mov [ eax + edi + 0x2 ] cl
mov ecx edx
shr ecx 0x8
mov [ eax + edi + 0x1 ] cl
mov [ eax + edi ] dl
cmp [ eax + edi + 0x3 ] 0xeb
jne r-xdata
pop edi
pop esi
retn
sub_405690
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
push edi
mov esi [ esi ]
mov eax ecx
xor edi edi
and esi 0x7
mov [ ebp - 0x4 ] eax
cmp edx 0x5
jae r-xdata
push ebx
lea ecx [ edx - 0x4 ]
or ebx 0xffffffff
add ecx eax
mov [ ebp - 0x8 ] ecx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov edi edx
sub edi eax
cmp edx ecx
mov ecx edi
jae r-xdata
mov al [ edx ]
and al 0xfe
cmp al 0xe8
je r-xdata
sub ecx ebx
pop ebx
cmp ecx 0x3
jbe r-xdata
sub ecx ebx
cmp ecx 0x3
jbe r-xdata
mov eax [ ebp - 0x4 ]
inc edx
cmp edx ecx
jb r-xdata
mov eax [ ebp + 0xc ]
dec ecx
shl esi cl
and esi 0x7
mov [ eax ] esi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
xor esi esi
mov [ eax ] esi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
dec ecx
shl esi cl
and esi 0x7
je r-xdata
xor esi esi
mov al [ edx + 0x4 ]
mov ebx edi
mov [ ebp - 0x10 ] ebx
test al al
je r-xdata
movzx eax [ esi + r--data ]
mov ecx edx
sub ecx eax
cmp [ esi + r--data ] 0x0
mov al [ ecx + 0x4 ]
je r-xdata
movzx ecx [ edx + 0x3 ]
movzx eax al
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x2 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x1 ]
shl eax 0x8
or eax ecx
lea ebx [ ebx ]
cmp al 0xff
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
and esi 0x3
add esi esi
mov ebx edi
or esi 0x1
inc edi
jmp r-xdata
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ebx
shr eax 0x18
and al 0x1
dec al
not al
mov [ edx + 0x4 ] al
mov eax ebx
shr eax 0x10
mov [ edx + 0x3 ] al
mov eax ebx
shr eax 0x8
mov [ edx + 0x2 ] al
mov eax [ ebp - 0x4 ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
add edi 0x5
jmp r-xdata
movzx eax [ esi + r--data ]
shl eax 0x3
mov ecx 0x18
sub ecx eax
mov [ ebp - 0xc ] eax
mov eax ebx
shr eax cl
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
and esi 0x3
add esi esi
or esi 0x1
inc edi
jmp r-xdata
lea edx [ edi + eax ]
cmp edx ecx
jae r-xdata
cmp al 0xff
jne r-xdata
mov ecx 0x20
sub ecx [ ebp - 0xc ]
mov eax 0x1
shl eax cl
dec eax
xor eax ebx
jmp r-xdata
cmp al 0xff
jne r-xdata
sub eax edi
lea ebx [ eax - 0x5 ]
test esi esi
je r-xdata
sub_405810
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] 0x40000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x200000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax 0x0
cpuid
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x8 ] eax
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax 0x1
cpuid
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0x1c ] eax
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
sub_4058f0
push ebp
mov ebp esp
sub esp 0x24
lea ecx [ ebp - 0x20 ]
push ebx
push esi
push edi
call sub_405810
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x10 ]
mov edx edi
shr edx 0x8
shr edi 0x4
and edx 0xff00f
and edi 0xf00f
xor ecx ecx
mov eax rw-data
xor esi esi
add esi 0xc
inc ecx
add eax 0xc
cmp esi 0x24
jb r-xdata
mov ebx [ ebp - 0x18 ]
cmp [ eax - 0x4 ] ebx
mov ebx [ ebp - 0x14 ]
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ eax - 0x8 ] ebx
jne r-xdata
or ecx 0xffffffff
cmp [ eax ] ebx
je r-xdata
cmp edx 0x6
jb r-xdata
dec ecx
je r-xdata
sub ecx 0x0
je r-xdata
jne r-xdata
cmp edx 0x5
jb r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x100c
jne r-xdata
cmp edx 0x6
jb r-xdata
cmp edi 0x6
jb r-xdata
jne r-xdata
cmp edi 0xa
jmp r-xdata
cmp edi 0xf
jae r-xdata
je r-xdata
sub_405a00
push esi
mov esi ecx
mov eax [ esi + 0x78 ]
cmp eax 0x5
ja r-xdata
mov eax 0x9
pop esi
retn
jmp [ eax * 4 + jump_table_405b0c ]
mov [ esi + 0x7c ] dl
test dl dl
jne r-xdata
movzx eax dl
shl eax 0x8
or [ esi + 0x74 ] eax
mov eax 0x2
pop esi
retn
movzx eax dl
or eax [ esi + 0x74 ]
mov ecx 0x6
inc eax
test [ esi + 0x7c ] 0x80
mov [ esi + 0x74 ] eax
mov eax 0x3
cmove eax ecx
pop esi
retn
movzx eax dl
shl eax 0x8
mov [ esi + 0x70 ] eax
mov eax 0x4
pop esi
retn
movzx eax dl
or eax [ esi + 0x70 ]
inc eax
mov [ esi + 0x70 ] eax
mov al [ esi + 0x7c ]
and al 0x60
cmp al 0x40
jb r-xdata
cmp dl 0xe1
jae r-xdata
js r-xdata
mov eax 0x8
pop esi
retn
cmp [ esi + 0x88 ] 0x0
mov eax 0x6
mov ecx 0x9
cmovne eax ecx
pop esi
retn
mov eax 0x5
pop esi
retn
movzx eax dl
cdq
push ebx
mov ebx 0x9
idiv ebx
push edi
mov ecx 0x5
movzx eax al
mov edi edx
cdq
idiv ecx
mov [ esi + 0x8 ] eax
lea ecx [ edx + edi ]
cmp ecx 0x4
jle r-xdata
movzx eax dl
and eax 0x1f
shl eax 0x10
mov [ esi + 0x74 ] eax
mov eax 0x1
pop esi
retn
and dl 0x7f
cmp dl 0x2
jbe r-xdata
mov [ esi ] edi
pop edi
pop ebx
mov [ esi + 0x4 ] edx
mov [ esi + 0x88 ] 0x0
mov eax 0x6
pop esi
retn
pop edi
mov eax ebx
pop ebx
pop esi
retn
mov [ esi + 0x74 ] 0x0
mov eax 0x1
pop esi
retn
sub_405b30
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0xc ]
mov esi ecx
mov eax [ edx ]
cmp [ esi + 0x78 ] 0x8
mov ecx [ ebp + 0x14 ]
push edi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] eax
mov [ edx ] 0x0
mov [ ecx ] 0x0
je r-xdata
mov [ ecx ] 0x1
mov ebx [ ebp + 0x8 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x6
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ edx ]
sub ecx edi
mov edi [ ebp - 0x4 ]
sub edi edx
mov edx [ esi + 0x74 ]
mov [ ebp - 0x8 ] 0x0
cmp edx ecx
ja r-xdata
cmp eax 0x7
je r-xdata
mov dl [ esi + 0x7c ]
test dl dl
js r-xdata
mov ecx edx
mov [ ebp - 0x8 ] 0x1
mov eax [ edx ]
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x4 ]
cmp [ eax ] esi
mov esi [ ebp - 0x18 ]
mov eax [ esi + 0x78 ]
je r-xdata
pop edi
pop esi
mov [ ecx ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ edx ] eax
mov dl [ ebx ]
mov ecx esi
call sub_405a00
mov edx [ ebp + 0xc ]
mov [ esi + 0x78 ] eax
inc ebx
push [ ebp + 0x14 ]
cmp edi [ esi + 0x70 ]
push [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
cmova edi [ esi + 0x70 ]
lea eax [ ebp - 0xc ]
push eax
lea edx [ ecx + edx ]
push ebx
mov ecx esi
mov [ ebp - 0xc ] edi
call sub_407210
mov edi [ esi + 0x24 ]
mov ecx [ ebp - 0xc ]
sub edi [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
sub [ esi + 0x70 ] ecx
add [ edx ] ecx
sub [ esi + 0x74 ] edi
add esp 0x10
add ebx ecx
test eax eax
jne r-xdata
movzx eax dl
shr eax 0x5
xor edx edx
and eax 0x3
cmp eax 0x3
sete dl
mov [ ebp - 0xc ] edx
xor edx edx
test eax eax
mov eax [ ebp - 0xc ]
setg dl
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x6
jne r-xdata
mov eax [ esi + 0x78 ]
mov edi [ esi + 0x24 ]
mov [ ebp - 0x10 ] edi
cmp eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
cmp eax 0x3
je r-xdata
test edx edx
jne r-xdata
cmp [ esi + 0x80 ] eax
jne r-xdata
cmp edi ecx
cmova edi ecx
test edi edi
je r-xdata
xor eax eax
cmp dl 0x1
sete al
test eax eax
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
mov [ esi + 0x4c ] 0x1
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x58 ] 0x0
test eax eax
je r-xdata
cmp [ esi + 0x84 ] edx
jne r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x24 ]
push edi
push ebx
push eax
call sub_40de40
add [ esi + 0x24 ] edi
add esp 0xc
cmp [ esi + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x80 ] 0x0
jne r-xdata
mov [ esi + 0x84 ] 0x1
mov [ esi + 0x88 ] 0x1
jmp r-xdata
cmp eax 0x4
jne r-xdata
test edi edi
jne r-xdata
test edx edx
je r-xdata
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x50 ] 0x1
add [ esi + 0x2c ] edi
sub [ esi + 0x74 ] edi
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
add [ edx ] edi
add ebx edi
neg eax
sbb eax eax
and eax 0x7
mov [ esi + 0x78 ] eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov eax ecx
sub eax [ esi + 0x2c ]
cmp eax edi
ja r-xdata
mov [ esi + 0x80 ] 0x0
mov [ esi + 0x4c ] 0x1
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x58 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x2
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov [ esi + 0x80 ] 0x0
mov [ esi + 0x84 ] 0x0
mov [ esi + 0x78 ] 0x7
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x30 ] ecx
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x50 ] 0x1
cmp [ esi + 0x78 ] 0x8
jne r-xdata
cmp [ esi + 0x74 ] edi
jne r-xdata
cmp [ esi + 0x70 ] edi
jne r-xdata
mov [ esi + 0x78 ] edi
sub_405e00
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x38 ] edi
mov eax [ edi + 0x10 ]
mov ecx [ edi + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0x24 ] eax
mov eax [ edi + 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ edi + 0x40 ]
mov [ ebp - 0x30 ] eax
mov eax [ edi + 0x44 ]
mov [ ebp - 0x3c ] eax
mov esi [ edi + 0x34 ]
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x4 ]
mov ebx [ edi + 0x18 ]
mov [ ebp - 0x50 ] edx
dec eax
mov edx [ edi + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x24 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
dec eax
mov [ ebp - 0x58 ] eax
mov eax [ edi ]
mov [ ebp - 0x48 ] eax
mov eax [ edi + 0x14 ]
mov [ ebp - 0x34 ] eax
mov eax [ edi + 0x28 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x30 ]
mov edi [ edi + 0x1c ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x1c ] edx
mov eax [ eax + 0x20 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] ebx
lea ebx [ ebx ]
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ esi ] dx
mov esi [ ebp - 0x10 ]
movzx edx [ ecx + esi * 2 + 0x180 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi ] cx
mov esi [ ebp - 0xc ]
add esi 0xe6c
cmp [ ebp - 0x44 ] 0x0
mov [ ebp - 0x20 ] esi
jne r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x14 ]
test edx edx
mov ecx edx
cmove ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x34 ]
movzx esi [ ecx + edx - 0x1 ]
mov edx [ ebp - 0x1c ]
and edx [ ebp - 0x58 ]
mov ecx 0x8
sub cl [ ebp - 0x48 ]
shr esi cl
mov ecx [ ebp - 0x48 ]
shl edx cl
add esi edx
imul esi esi 0x600
add [ ebp - 0x20 ] esi
mov esi [ ebp - 0x20 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
cmp [ ebp - 0x44 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ecx + esi * 2 + 0x180 ] dx
jne r-xdata
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
add esi 0xc
mov [ edx + esi * 2 + 0x168 ] cx
mov [ ebp - 0x10 ] esi
add edx 0x664
jmp r-xdata
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x38 ]
sbb ecx ecx
and ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x24 ]
add ecx [ esi + 0x14 ]
cmp edx 0xa
mov esi 0x100
movzx ebx [ ecx + ebx ]
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x6
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] esi
mov edx 0x1
cmp edx 0x4
mov ecx 0x3
cmovb ecx edx
sub edx ecx
mov [ ebp - 0x10 ] edx
mov edx 0x1
lea ecx [ ecx ]
mov edx [ ebp - 0x10 ]
cmp edx 0x7
jae r-xdata
movzx esi [ ecx + esi * 2 + 0x198 ]
cmp edi 0x1000000
jae r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx esi [ edx ]
cmp edi 0x1000000
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
shl edi 0x8
or eax ecx
inc [ ebp - 0x4 ]
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov edx edi
shr edx 0xb
imul edx esi
cmp eax edx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov ecx [ ebp - 0x40 ]
lea edx [ edx * 2 + 0x1 ]
mov [ ecx ] si
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov esi [ ebp - 0x40 ]
add edx edx
mov [ esi ] cx
not ebx
jmp r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov ecx [ ebp - 0x20 ]
inc edx
mov [ edx + ecx - 0x1 ] si
mov esi ecx
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov esi [ ebp - 0x20 ]
mov [ edx + esi ] cx
jmp r-xdata
mov ecx esi
shr ecx 0x5
sub esi ecx
mov ecx [ ebp - 0x10 ]
sub edi edx
sub eax edx
mov edx [ ebp - 0xc ]
mov [ edx + ecx * 2 + 0x198 ] si
mov esi ecx
movzx edx [ edx + esi * 2 + 0x1b0 ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x10 ]
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov esi [ ebp - 0xc ]
mov edi edx
mov [ esi + ebx * 2 + 0x198 ] cx
lea ecx [ ebx + 0xf ]
shl ecx 0x4
add ecx [ ebp - 0x20 ]
lea ebx [ esi + ecx * 2 ]
movzx esi [ ebx ]
cmp edx 0x1000000
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov [ edx ] si
movzx esi [ edx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov [ edx ] cx
mov ecx [ ebp - 0x20 ]
shl ecx 0x4
add ecx 0x4
add ecx edx
mov [ ebp - 0x40 ] 0x0
mov esi 0x8
jmp r-xdata
add ebx ebx
mov [ ebp - 0x4c ] ebx
mov ebx esi
and ebx [ ebp - 0x4c ]
lea ecx [ ebx + esi ]
mov esi [ ebp - 0x20 ]
add ecx edx
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x40 ] ecx
movzx esi [ ecx ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
inc ebx
mov [ ebx + ecx - 0x1 ] dl
mov edx [ ebp - 0x1c ]
inc edx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
and esi ebx
mov ebx [ ebp - 0x4c ]
mov [ ebp - 0x8 ] esi
cmp edx 0x100
jb r-xdata
add edx edx
movzx esi [ edx + esi ]
cmp edi 0x1000000
jae r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edx 0x100
jb r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
mov edx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ edx ]
shl edi 0x8
or eax ecx
inc edx
mov [ ebp - 0x4 ] edx
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] ecx
mov edx 0x1
mov esi [ ebp - 0x10 ]
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + esi * 2 + 0x1b0 ] dx
movzx edx [ ecx + esi * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + esi * 2 + 0x1b0 ] cx
mov ecx [ ebp - 0x2c ]
jmp r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov [ ebx ] si
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov [ ebx ] cx
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp - 0x24 ]
sbb ecx ecx
and ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x24 ]
add ecx ebx
inc ebx
mov cl [ ecx + edx ]
mov [ ebx + edx - 0x1 ] cl
mov edx [ ebp - 0x1c ]
inc edx
cmp [ ebp - 0x10 ] 0x7
mov [ ebp - 0x14 ] ebx
sbb esi esi
and esi 0xfffffffe
add esi 0xb
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] esi
jmp r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov [ edx + 0x2 ] si
lea ecx [ edx + 0x204 ]
mov [ ebp - 0x40 ] 0x10
mov esi 0x100
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov [ edx + 0x2 ] cx
mov ecx [ ebp - 0x20 ]
shl ecx 0x4
add ecx 0x104
add ecx edx
mov [ ebp - 0x40 ] 0x8
mov esi 0x8
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0xc ]
cmp esi 0x7
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0xb
mov [ ebp - 0x10 ] ecx
add edx 0xa68
cmp ebx [ ebp - 0x50 ]
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + ecx ] dx
mov edx [ ebp - 0x18 ]
inc edx
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0x20 ]
mov [ ebx + edx ] cx
mov ecx edx
mov edx ebx
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x18 ] edx
mov edx ecx
mov ecx [ ebp - 0x14 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ edx + 0x1c ] edi
mov [ edx + 0x48 ] ebx
mov [ edx + 0x24 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x2c ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x30 ]
mov [ edx + 0x40 ] eax
pop edi
mov [ edx + 0x44 ] ecx
mov [ edx + 0x34 ] esi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ edx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc edx
and edx [ ebp - 0x54 ]
mov ecx esi
shl ecx 0x4
add ecx edx
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0xc ]
lea esi [ edx + ecx * 2 ]
movzx edx [ esi ]
cmp edi 0x1000000
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + esi * 2 + 0x1c8 ] dx
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + esi * 2 + 0x1c8 ] cx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
add edx edx
mov [ ebp - 0x18 ] edx
movzx edx [ edx + ecx ]
cmp edi 0x1000000
jae r-xdata
mov ecx [ ebp - 0x40 ]
sub ecx esi
add edx ecx
cmp [ ebp - 0x10 ] 0xc
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] edx
jb r-xdata
mov ebx [ ebp - 0x4 ]
cmp edx esi
jb r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edx
mov esi [ ebp - 0x14 ]
mov ecx [ ebp - 0x50 ]
add edx 0x2
mov [ ebp - 0x18 ] edx
cmp ecx esi
je r-xdata
mov ebx [ ebp - 0xc ]
cmp edx 0x4
mov ecx 0x3
cmovb ecx edx
shl ecx 0x7
add ebx 0x360
add ebx ecx
movzx edx [ ebx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
sub ecx esi
cmp ecx edx
mov ebx edx
cmovb ebx ecx
cmp esi [ ebp - 0x24 ]
sbb edx edx
and edx [ ebp - 0x28 ]
add [ ebp - 0x1c ] ebx
sub edx [ ebp - 0x24 ]
sub [ ebp - 0x18 ] ebx
add edx esi
lea ecx [ edx + ebx ]
cmp ecx [ ebp - 0x28 ]
ja r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov esi [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ esi ]
or eax ecx
shl edi 0x8
inc esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x34 ]
mov edi [ ebp - 0x28 ]
lea ebx [ ebx ]
add esi [ ebp - 0x34 ]
sub edx [ ebp - 0x14 ]
add [ ebp - 0x14 ] ebx
lea ecx [ esi + ebx ]
mov [ ebp - 0x4c ] ecx
mov ebx ecx
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x2 ] dx
mov ecx 0x3
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ ebx + 0x2 ] cx
mov ecx 0x2
jmp r-xdata
mov cl [ edx + eax ]
inc edx
mov [ esi + eax ] cl
xor ecx ecx
inc esi
cmp edx edi
cmove edx ecx
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x14 ] esi
mov cl [ edx + esi ]
mov [ esi ] cl
inc esi
cmp esi ebx
jne r-xdata
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea esi [ ecx + ecx ]
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] ecx
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x3c ] edx
test ecx ecx
jne r-xdata
mov ebx esi
mov edx esi
shr ebx 0x1
and esi 0x1
dec ebx
or esi 0x2
mov [ ebp - 0x20 ] ebx
cmp edx 0xe
jae r-xdata
sub esi 0x40
mov [ ebp - 0x20 ] edi
cmp esi 0x4
jb r-xdata
cmp esi ecx
cmp esi [ ebp - 0x1c ]
jmp r-xdata
sub ebx 0x4
mov ecx ebx
shl esi cl
mov [ ebp - 0x3c ] 0x1
mov ecx esi
sub ecx edx
mov edx [ ebp - 0xc ]
lea edx [ edx + ecx * 2 ]
add edx 0x55e
mov [ ebp - 0x8 ] edx
mov ecx 0x1
cmp [ ebp - 0x10 ] 0x13
mov edx [ ebp - 0x18 ]
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0xa
mov [ ebp - 0x10 ] ecx
jae r-xdata
shr edi 0x1
sub eax edi
mov ecx eax
shr ecx 0x1f
neg ecx
lea esi [ esi * 2 + 0x1 ]
add esi ecx
and ecx edi
add eax ecx
dec ebx
jne r-xdata
mov edx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ edx ]
shl edi 0x8
or eax ecx
inc edx
mov [ ebp - 0x4 ] edx
mov ebx [ ebp - 0x8 ]
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
shl edi 0x8
or eax ecx
inc [ ebp - 0x4 ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0xc ]
shl esi 0x4
movzx edx [ ebx + 0x646 ]
mov [ ebp - 0x8 ] eax
cmp edi 0x1000000
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0x40 ]
inc ecx
mov [ ecx + ebx - 0x1 ] dx
mov edx [ ebp - 0x3c ]
or esi edx
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0x40 ]
mov [ edx + ebx ] cx
mov ecx edx
mov edx [ ebp - 0x3c ]
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ebx ]
or eax ecx
shl edi 0x8
inc ebx
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
add ecx ecx
mov [ ebp - 0x40 ] ecx
movzx edx [ ecx + edx ]
cmp edi 0x1000000
jae r-xdata
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ebx [ ebp - 0x20 ]
add edx edx
dec ebx
mov [ ebp - 0x3c ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ebx
jne r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x646 ] dx
mov ecx 0x3
or esi 0x1
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ ebx + 0x646 ] cx
mov ecx 0x2
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ebx [ ecx + ecx ]
mov ecx [ ebp - 0xc ]
movzx edx [ ebx + ecx + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
inc ebx
mov [ ebx + ecx + 0x643 ] dx
mov [ ebp - 0x8 ] eax
or esi 0x2
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ ebx + edx + 0x644 ] cx
mov ecx edx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add ebx ebx
movzx edx [ ebx + ecx + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
inc ebx
mov [ ebx + ecx + 0x643 ] dx
mov [ ebp - 0x8 ] eax
or esi 0x4
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ ebx + edx + 0x644 ] cx
mov ecx edx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
movzx edx [ ecx + ebx * 2 + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ecx + ebx * 2 + 0x644 ] dx
or esi 0x8
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + ebx * 2 + 0x644 ] cx
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov esi [ ebp - 0x10 ]
add ebx 0x112
sub esi 0xc
jmp r-xdata
mov [ ebp - 0x20 ] edi
cmp esi 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edi 0x1000000
jae r-xdata
sub_406ab0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ecx [ esi + 0x48 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp ecx 0x112
jae r-xdata
mov eax [ esi + 0x24 ]
sub [ ebp - 0x4 ] eax
mov edx [ esi + 0x28 ]
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
push ebx
mov ebx [ esi + 0x38 ]
mov edx ecx
cmovb edx [ ebp - 0x4 ]
cmp [ esi + 0x30 ] 0x0
push edi
mov edi [ esi + 0x14 ]
jne r-xdata
add [ esi + 0x2c ] edx
sub ecx edx
mov [ esi + 0x48 ] ecx
test edx edx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx [ esi + 0x2c ]
cmp ecx edx
ja r-xdata
pop edi
mov [ esi + 0x24 ] eax
pop ebx
cmp eax ebx
sbb ecx ecx
and ecx [ ebp - 0xc ]
sub ecx ebx
add ecx eax
inc eax
mov cl [ ecx + edi ]
mov [ eax + edi - 0x1 ] cl
dec edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ esi + 0xc ]
mov [ esi + 0x30 ] ecx
sub_406b30
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax edx
push edi
mov [ ebp - 0x8 ] eax
mov esi ecx
push ebx
mov ecx esi
call sub_405e00
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x24 ]
sub ecx [ esi + 0x2c ]
sub eax edi
cmp eax ecx
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ esi + 0x2c ] eax
jb r-xdata
lea edx [ edi + ecx ]
mov edx [ esi + 0x48 ]
mov [ ebp - 0x4 ] edx
test edx edx
je r-xdata
mov [ esi + 0x30 ] eax
mov eax [ ebp - 0x8 ]
cmp [ esi + 0x24 ] eax
jae r-xdata
cmp edx 0x112
jae r-xdata
cmp [ esi + 0x48 ] 0x112
jbe r-xdata
cmp [ esi + 0x18 ] ebx
jae r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x24 ]
mov edi [ esi + 0x14 ]
mov ebx [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax ecx
cmp eax edx
cmovb edx eax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
xor eax eax
mov [ esi + 0x48 ] 0x112
cmp [ esi + 0x48 ] 0x112
jb r-xdata
mov eax [ ebp - 0x4 ]
add [ esi + 0x2c ] edx
sub eax edx
mov [ esi + 0x48 ] eax
test edx edx
je r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x2c ]
cmp eax edx
ja r-xdata
cmp [ esi + 0x30 ] 0x0
mov edx eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov [ esi + 0x24 ] ecx
cmp ecx ebx
sbb eax eax
and eax [ ebp - 0xc ]
sub eax ebx
add eax ecx
inc ecx
mov al [ eax + edi ]
mov [ ecx + edi - 0x1 ] al
dec edx
jne r-xdata
mov eax [ esi + 0xc ]
mov [ esi + 0x30 ] eax
sub_406c20
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x10 ] ebx
mov edx ecx
mov [ ebp - 0x18 ] edx
mov ecx [ edx + 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ edx + 0x34 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ edx + 0x2c ]
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x20 ]
mov ecx 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov ecx [ edx + 0x8 ]
shl [ ebp - 0x8 ] cl
mov ecx [ ebp - 0x8 ]
dec ecx
and ecx [ edx + 0x2c ]
add esi ebx
mov [ ebp - 0x8 ] ecx
mov ecx [ edx + 0x34 ]
shl ecx 0x4
add ecx [ ebp - 0x8 ]
mov ebx [ edx + 0x10 ]
movzx ecx [ ebx + ecx * 2 ]
mov edi [ edx + 0x1c ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] ecx
cmp edi 0x1000000
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x1c ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov edx [ ebp + 0x8 ]
sub edi ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
movzx edx [ edx + ecx * 2 + 0x180 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx [ edx + 0x10 ]
add ecx 0xe6c
cmp [ edx + 0x30 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
xor eax eax
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x10 ] ebx
mov ecx edi
shr ecx 0xb
imul ecx edx
mov edx [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov esi [ edx + 0x24 ]
test esi esi
jne r-xdata
cmp [ edx + 0x2c ] 0x0
je r-xdata
sub edi ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x3
movzx edx [ edx + ecx * 2 + 0x198 ]
mov [ ebp - 0x20 ] edx
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov [ ebp - 0x1c ] 0x0
add edx 0x664
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx [ ebp - 0x18 ]
mov edx [ edx ]
mov ecx [ ecx + 0x14 ]
movzx esi [ ecx + esi - 0x1 ]
mov ecx 0x8
sub cl dl
shr esi cl
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x4 ]
shl [ ebp - 0xc ] cl
mov ecx [ ebp - 0xc ]
dec ecx
and ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] ecx
mov ecx edx
mov edx [ ebp - 0xc ]
shl edx cl
mov ecx [ ebp - 0x8 ]
add esi edx
mov edx [ ebp - 0x18 ]
imul esi esi 0x600
add ecx esi
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov esi [ edx + 0x28 ]
cmp [ edx + 0x34 ] 0x7
jae r-xdata
mov edx edi
shr edx 0xb
imul edx [ ebp - 0x20 ]
cmp eax edx
jae r-xdata
cmp ebx esi
jae r-xdata
movzx ecx [ edx ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
mov ecx [ edx + 0x38 ]
cmp [ edx + 0x24 ] ecx
jae r-xdata
mov edx 0x1
lea esp [ esp ]
sub edi edx
sub eax edx
mov edx [ ebp + 0x8 ]
movzx edx [ edx + ecx * 2 + 0x1b0 ]
cmp edi 0x1000000
jae r-xdata
mov esi [ ebp + 0x8 ]
add ecx 0xf
shl ecx 0x4
add ecx [ ebp - 0x8 ]
mov edi edx
movzx ecx [ esi + ecx * 2 ]
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x20 ] ecx
cmp edx 0x1000000
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
or eax ecx
mov ecx [ ebp - 0x14 ]
shl edi 0x8
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
xor esi esi
mov esi [ edx + 0x28 ]
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
sub edi ecx
sub eax ecx
movzx ecx [ edx + 0x2 ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx [ ebp - 0x8 ]
shl ecx 0x4
add ecx 0x4
add ecx edx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
mov ecx [ edx + 0x14 ]
sub ecx [ edx + 0x38 ]
add ecx [ edx + 0x24 ]
movzx edx [ ecx + esi ]
mov ecx 0x100
mov [ ebp + 0x8 ] ecx
mov esi 0x1
sub edi ecx
sub eax ecx
inc edx
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov edx [ ebp + 0x8 ]
sub edi ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
movzx edx [ edx + ecx * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
sub edi ecx
sub eax ecx
cmp ecx 0x1000000
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov [ ebp - 0x14 ] ecx
mov edx 0x1
nop
sub edi ecx
sub eax ecx
lea esi [ esi * 2 + 0x1 ]
mov edi ecx
add esi esi
not edx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x4 ]
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
cmp edx 0x100
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0xc
add edx 0xa68
pop edi
pop esi
mov eax 0x3
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx esi
jae r-xdata
sub edi ecx
sub eax ecx
lea ecx [ edx + 0x204 ]
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0x18 ] 0x100
mov edi ecx
mov ecx [ ebp - 0x8 ]
shl ecx 0x4
add ecx 0x104
add ecx edx
mov [ ebp - 0xc ] 0x8
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and ecx edx
mov [ ebp + 0x8 ] ecx
cmp esi 0x100
jae r-xdata
cmp edi 0x1000000
jae r-xdata
add edx edx
movzx ecx [ edx + ecx ]
mov [ ebp + 0x8 ] ecx
cmp edi 0x1000000
jae r-xdata
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
sub edi ecx
sub eax ecx
inc edx
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ebx [ ebp - 0x8 ]
add edx edx
mov [ ebp - 0x18 ] edx
mov edx ecx
and edx [ ebp - 0x18 ]
lea ecx [ edx + esi ]
add ecx [ ebp + 0x8 ]
movzx ecx [ ebx + ecx * 2 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx esi
jb r-xdata
sub [ ebp - 0xc ] ecx
add edx [ ebp - 0xc ]
cmp [ ebp - 0x1c ] 0x4
jae r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp edx ecx
jae r-xdata
mov eax [ ebp - 0x10 ]
cmp edx 0x4
mov ecx 0x3
cmovb ecx edx
mov edx [ ebp + 0x8 ]
shl ecx 0x7
add edx 0x360
add ecx edx
mov [ ebp - 0x20 ] ecx
mov esi 0x1
jmp r-xdata
add edx edx
movzx ecx [ edx + ecx ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
add esi esi
movzx edx [ esi + ecx ]
cmp edi 0x1000000
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
sub edi ecx
sub eax ecx
inc esi
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
sub esi 0x40
cmp esi 0x4
jb r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
cmp esi 0x40
jae r-xdata
mov esi [ ebp - 0x4 ]
mov ecx esi
shr ecx 0x1
dec ecx
mov [ ebp - 0x18 ] ecx
cmp esi 0xe
jae r-xdata
sub ecx 0x4
mov [ ebp - 0x18 ] ecx
mov edx ecx
mov edx esi
and edx 0x1
or edx 0x2
shl edx cl
mov ecx [ ebp + 0x8 ]
sub edx esi
lea ecx [ ecx + edx * 2 ]
mov edx [ ebp - 0x18 ]
add ecx 0x55e
jmp r-xdata
shr edi 0x1
mov ecx eax
sub ecx edi
shr ecx 0x1f
dec ecx
and ecx edi
sub eax ecx
dec edx
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
mov [ ebp + 0x8 ] ecx
mov esi 0x1
cmp edi 0x1000000
jae r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x644
mov edx 0x4
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
sub edi ecx
sub eax ecx
inc esi
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx [ ebp + 0x8 ]
jmp r-xdata
dec edx
je r-xdata
add esi esi
movzx ecx [ esi + ecx ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
sub_407210
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ eax ]
mov [ ebp - 0xc ] edx
mov esi ecx
mov [ ebp - 0x4 ] edi
mov [ eax ] 0x0
call sub_406ab0
cmp [ esi + 0x48 ] 0x112
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebx ]
pop edi
xor eax eax
test ecx ecx
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
mov [ edx ] 0x1
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x0
cmp [ esi + 0x24 ] eax
jb r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
lea ebx [ ebx ]
mov edi [ esi + 0x58 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov eax 0x300
shl eax cl
add eax 0x736
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x20 ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edi
mov al [ ebx ]
mov [ ecx + esi + 0x5c ] al
mov eax [ ebp + 0xc ]
inc [ esi + 0x58 ]
inc [ eax ]
inc ebx
dec edi
jne r-xdata
xor edx edx
mov [ ebp - 0x10 ] edx
cmp edi 0x14
jae r-xdata
mov edi [ ebp - 0x4 ]
cmp edi 0x14
jb r-xdata
mov [ esi + 0x44 ] 0x1
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x50 ] 0x0
mov edi [ esi + 0x10 ]
mov ecx eax
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x2
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x4
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ esi + 0x5d ]
movzx eax [ esi + 0x5e ]
shl ecx 0x8
or ecx eax
movzx eax [ esi + 0x5f ]
shl ecx 0x8
or ecx eax
movzx eax [ esi + 0x60 ]
shl ecx 0x8
or ecx eax
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x58 ] 0x0
mov ecx [ esi + 0x58 ]
cmp ecx 0x5
jae r-xdata
mov [ esi + 0x58 ] edi
cmp edi 0x14
jb r-xdata
mov ecx [ ebp - 0x4 ]
nop
push edi
mov edx ebx
mov ecx esi
call sub_406c20
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x2
mov [ ebp - 0x8 ] 0x1
lea edx [ esi + 0x5c ]
push edi
mov ecx esi
call sub_406c20
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] edx
mov al [ edx + ebx ]
mov [ esi + edi + 0x5c ] al
inc edi
inc edx
cmp edi 0x14
jb r-xdata
push edi
lea eax [ esi + 0x5c ]
push ebx
push eax
call sub_40de40
mov eax [ ebp + 0xc ]
add esp 0xc
add [ eax ] edi
mov [ esi + 0x58 ] edi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ edi - 0x14 ]
add eax ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
add [ eax ] ecx
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
lea eax [ esi + 0x5c ]
push eax
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_406b30
test eax eax
jne r-xdata
cmp edx ecx
jae r-xdata
mov eax ebx
cmp eax 0x2
jne r-xdata
mov edx [ ebp - 0xc ]
push eax
mov ecx esi
mov [ esi + 0x18 ] ebx
call sub_406b30
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x10 ]
sub eax edi
mov edi [ ebp - 0x4 ]
sub eax esi
add ecx 0xffffffa4
add eax ecx
mov [ esi + 0x58 ] 0x0
mov eax [ esi + 0x18 ]
sub eax ebx
jmp r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
sub edi eax
add [ ecx ] eax
add ebx eax
cmp [ esi + 0x48 ] 0x112
mov [ ebp - 0x4 ] edi
jne r-xdata
sub_407500
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x5
push ebx
push esi
push edi
mov edi ecx
jb r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ edx + 0x4 ]
movzx eax [ edx + 0x3 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x2 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x1 ]
shl esi 0x8
or esi eax
mov eax 0x1000
cmp esi eax
cmovb esi eax
mov al [ edx ]
mov [ ebp - 0x4 ] esi
cmp al 0xe1
jae r-xdata
movzx eax al
cdq
mov ecx 0x9
idiv ecx
mov esi 0x5
mov ebx 0x300
movzx eax al
mov ecx edx
cdq
idiv esi
mov [ ebp - 0x10 ] ecx
add ecx edx
shl ebx cl
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] edx
add ebx 0x736
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push esi
call eax
lea eax [ ebx + ebx ]
push eax
mov [ edi + 0x10 ] 0x0
mov eax [ esi ]
push esi
call eax
add esp 0x10
mov [ edi + 0x10 ] eax
mov [ edi + 0x54 ] ebx
test eax eax
jne r-xdata
cmp ebx [ edi + 0x54 ]
je r-xdata
movq xmm0 [ ebp - 0x10 ]
movq [ edi ] xmm0
movq xmm0 [ ebp - 0x8 ]
movq [ edi + 0x8 ] xmm0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4075f0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40a8c6
add esp 0x4
sub_407640
push ebp
mov ebp esp
mov eax [ ecx ]
sub esp 0x8
lea edx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push edx
call [ eax + 0xc ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor al al
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ edx ]
jne r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn 0x8
sub_407680
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor al al
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov al 0x1
pop ebp
retn 0x8
sub_4076b0
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_4144d1
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_407a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_407a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_407730
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
cmp eax 0x1
jne r-xdata
push eax
push esi
call sub_4076b0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x15
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push r--data
mov ecx esi
mov [ esi ] 0x0
call sub_407a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_407790
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_4144fb
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_407a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_407a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_407800
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4144d1
add esp 0x4
test eax eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
je r-xdata
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
sub_407870
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ edx ] ax
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_407b90
mov eax esi
pop esi
pop ebp
retn 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
pop edi
push ecx
push edx
mov ecx esi
call sub_407b90
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4078d0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi ] ax
pop esi
retn
push [ esi ]
call j_sub_40a8c6
add esp 0x4
sub_407900
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_4145f9
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
add eax eax
push eax
lea eax [ ebx + edx * 2 ]
push eax
push ebx
call sub_40a990
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx * 2 ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4079b0
push ebp
mov ebp esp
sub esp 0x10
mov edx ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
push ebx
mov ebx [ edx + 0x10 ]
push esi
push edi
test ebx ebx
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp ecx ebx
ja r-xdata
mov eax 0x1
sub eax ecx
add ebx eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
cmp eax 0x8
jb r-xdata
mov eax edx
mov [ ebp - 0x4 ] edx
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
mov ecx ebx
test ebx ebx
je r-xdata
mov edi ecx
mov edx r--data
mov esi eax
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
jmp r-xdata
add eax 0x2
dec ecx
jne r-xdata
cmp [ ebp - 0xc ] 0x8
mov ecx [ ebp - 0x8 ]
jb r-xdata
mov cx [ esi ]
cmp cx [ edx ]
jne r-xdata
test eax eax
je r-xdata
cmp [ eax ] 0x2d
je r-xdata
mov ecx [ ebp + 0x10 ]
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
movzx ecx [ esi ]
cmp cx [ edx ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
je r-xdata
add esi 0x2
add edx 0x2
dec edi
jne r-xdata
mov edx eax
sub edx [ ebp - 0x4 ]
or ecx 0xffffffff
sar edx 0x1
sub ecx edx
add ebx ecx
mov ecx [ ebp + 0x10 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_407a90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_408050
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
push ebx
push eax
call sub_40de40
add esp 0xc
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov eax esi
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_407ca0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
push [ ebp + 0xc ]
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_407ca0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_407b90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_4081a0
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ edi + edi ]
push eax
push ebx
push ecx
call sub_40de40
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub ebx eax
sar ebx 0x1
push ebx
push esi
mov ecx esi
call sub_407dd0
pop esi
pop ebx
pop ebp
retn 0x8
sub_407ca0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp edi ecx
jb r-xdata
push r--data
call sub_4145f9
sub edi ecx
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
cmp edi 0xfffffffe
ja r-xdata
lea eax [ edi + ecx ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4145f9
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_408050
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
push ecx
mov edx esi
push 0x0
mov ecx esi
mov [ eax + edx ] 0x0
call sub_407fb0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi ]
push ecx
push 0x0
mov ecx esi
mov [ eax + edx ] 0x0
call sub_407fb0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
lea eax [ ebx + ecx ]
push eax
push edx
call sub_40de40
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_407dd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp edi ecx
jb r-xdata
push r--data
call sub_4145f9
sub edi ecx
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
cmp edi 0x7ffffffe
ja r-xdata
lea eax [ edi + ecx ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4145f9
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_4081a0
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
xor edi edi
push ecx
push edi
mov ecx esi
mov [ edx + eax * 2 ] di
call sub_407900
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ edi + edi ]
push eax
lea eax [ ebx + ecx * 2 ]
push eax
push edx
call sub_40de40
add esp 0xc
test edi edi
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_407ef0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_4081a0
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
push ebx
mov ebx [ esi + 0x10 ]
cmp edi ebx
cmovb ebx edi
cmp eax 0x8
jb r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
xor eax eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] 0x7
mov [ esi + ebx * 2 ] ax
cmp eax edi
pop ebx
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
test ebx ebx
je r-xdata
push ecx
call j_sub_40a8c6
add esp 0x4
lea eax [ ebx + ebx ]
push eax
push ecx
push esi
call sub_40de40
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_407fb0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_4145f9
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
mov [ eax + ecx ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
push eax
lea eax [ ebx + edx ]
push eax
push ebx
call sub_40a990
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_408050
push ebp
mov ebp esp
push 0xffffffff
push sub_415890
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov eax 0xaaaaaaab
mul edi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
lea ecx [ edi + 0x1 ]
xor eax eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov eax 0xfffffffe
sub eax ecx
lea edi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov edi 0xfffffffe
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
call sub_41459a
push ecx
call sub_40bc04
add esp 0x4
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] 0x0
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_40a8c6
add esp 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ esi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
push ebx
push ecx
push eax
call sub_40de40
add esp 0xc
test ebx ebx
je r-xdata
sub_408122
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_40f88e
mov ecx esi
test ebx ebx
je r-xdata
push [ esi ]
call j_sub_40a8c6
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
push ecx
push eax
call sub_40de40
add esp 0xc
mov eax [ ebp - 0x14 ]
mov [ esi ] 0x0
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_40a8c6
add esp 0x4
mov [ esi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
sub_4081a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4158b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov eax 0xaaaaaaab
mul edi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
lea eax [ edi + 0x1 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] ecx
test eax eax
je r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea edi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov edi 0x7ffffffe
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
call sub_41459a
add eax eax
push eax
call sub_40bc04
mov ecx eax
add esp 0x4
mov [ ebp - 0x14 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jb r-xdata
push [ esi ]
call j_sub_40a8c6
add esp 0x4
mov edx esi
mov edx [ esi ]
jmp r-xdata
xor eax eax
mov [ esi + ebx * 2 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
lea eax [ ebx + ebx ]
push eax
push edx
push ecx
call sub_40de40
add esp 0xc
test ebx ebx
je r-xdata
sub_408278
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor eax eax
push eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] ax
call sub_40f88e
mov edx esi
test ebx ebx
je r-xdata
push [ esi ]
call j_sub_40a8c6
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ ebx + ebx ]
push eax
push edx
push ecx
call sub_40de40
add esp 0xc
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jb r-xdata
push [ esi ]
call j_sub_40a8c6
add esp 0x4
xor eax eax
mov [ esi + ebx * 2 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
sub_408300
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0xffffffff
ja r-xdata
call sub_41459a
push eax
call sub_40bc04
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
sub_408330
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0x7fffffff
ja r-xdata
call sub_41459a
add eax eax
push eax
call sub_40bc04
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
sub_408370
push ebp
mov ebp esp
mov eax 0x4004
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov edi ecx
push edi
push 0x4000
lea eax [ ebp - 0x4004 ]
push 0x1
push eax
xor ebx ebx
call sub_40b399
mov edx eax
add esp 0x10
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn
push esi
jmp r-xdata
lea esi [ ebp - 0x4004 ]
not ebx
test edx edx
je r-xdata
push edi
push 0x4000
lea eax [ ebp - 0x4004 ]
push 0x1
push eax
not ebx
call sub_40b399
mov edx eax
add esp 0x10
test edx edx
jne r-xdata
lea esp [ esp ]
pop esi
movzx eax [ esi ]
movzx ecx bl
xor ecx eax
shr ebx 0x8
xor ebx [ ecx * 4 + rw-data ]
lea esi [ esi + 0x1 ]
dec edx
jne r-xdata
sub_408410
push ebp
mov ebp esp
push 0xffffffff
push sub_4158e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x240
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
sub esp 0x8
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_4079b0
cmp eax 0xffffffff
je r-xdata
xor eax eax
push 0x206
push eax
mov [ ebp - 0x218 ] ax
lea eax [ ebp - 0x216 ]
push eax
call sub_40d4a0
add esp 0xc
lea eax [ ebp - 0x218 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
mov edi [ ebp + 0x18 ]
xor eax eax
push eax
push r--data
lea ecx [ ebp - 0x230 ]
mov [ ebp - 0x21c ] 0x7
mov [ ebp - 0x220 ] 0x0
mov [ ebp - 0x230 ] ax
call sub_407b90
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
xor esi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x218 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
xor eax eax
cmp [ rw-data ] eax
setne al
test eax eax
je r-xdata
nop
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x218 ]
push eax
mov ecx rw-data
call sub_407b90
lea eax [ ebp - 0x248 ]
push eax
call sub_408ae0
push eax
call sub_4087f0
cmp [ ebp - 0x234 ] 0x8
jb r-xdata
cmp [ ebp - 0x21c ] 0x8
jb r-xdata
xor eax eax
cmp [ rw-data ] eax
setne al
test eax eax
je r-xdata
inc esi
cmp esi edi
jl r-xdata
inc esi
cmp esi edi
jge r-xdata
push 0x0
push ecx
push [ rw-data ]
push ecx
mov ecx rw-data
call sub_408950
test eax eax
je r-xdata
push [ ebp - 0x248 ]
call j_sub_40a8c6
add esp 0x4
xor eax eax
mov [ ebp - 0x21c ] 0x7
mov [ ebp - 0x220 ] 0x0
mov [ ebp - 0x230 ] ax
cmp edx 0x8
jb r-xdata
push [ ebp - 0x230 ]
call j_sub_40a8c6
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
add esp 0x4
cmp [ ebp - 0x21c ] 0x8
jb r-xdata
cmp edx 0x8
lea eax [ ebp + 0x8 ]
cmovae eax ecx
cmp [ eax + esi * 2 ] 0x28
jne r-xdata
jmp r-xdata
xor eax eax
cmp [ rw-data ] eax
push 0xffffffff
setne al
push 0x0
test eax eax
lea eax [ ebp - 0x230 ]
push eax
jne r-xdata
lea esp [ esp ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0x0
push ecx
push [ rw-data ]
push ecx
mov ecx rw-data
call sub_408950
test eax eax
je r-xdata
mov eax 0x3
push ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0x21c ] 0x7
mov [ ebp - 0x220 ] 0x0
mov [ ebp - 0x230 ] ax
cmp edx 0x8
jb r-xdata
push [ ebp - 0x230 ]
call j_sub_40a8c6
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
add esp 0x4
mov ecx rw-data
call sub_407dd0
push 0x0
push r--data
lea ecx [ ebp - 0x230 ]
call sub_407b90
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
mov ecx rw-data
call sub_407dd0
push 0x0
push r--data
lea ecx [ ebp - 0x230 ]
call sub_407b90
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
cmp edx 0x8
lea eax [ ebp + 0x8 ]
cmovae eax ecx
cmp [ eax + esi * 2 ] 0x20
je r-xdata
push [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call j_sub_40a8c6
add esp 0x4
mov eax 0x1
jmp r-xdata
push ecx
call j_sub_40a8c6
add esp 0x4
inc esi
cmp esi edi
jl r-xdata
cmp edx 0x8
lea eax [ ebp + 0x8 ]
cmovae eax ecx
movzx eax [ eax + esi * 2 ]
push eax
push ecx
lea ecx [ ebp - 0x230 ]
call sub_408890
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
mov eax 0x2
jmp r-xdata
push [ ebp + 0x8 ]
call j_sub_40a8c6
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn
cmp edx 0x8
lea eax [ ebp + 0x8 ]
cmovae eax ecx
cmp [ eax + esi * 2 ] 0x29
je r-xdata
sub_408740
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4 ] eax
push esi
mov esi [ ebp + 0x10 ]
push edi
sub esp 0x18
mov edx esp
xor eax eax
mov [ edx + 0x14 ] 0x7
mov [ edx + 0x10 ] 0x0
mov [ edx ] ax
cmp [ esi ] ax
jne r-xdata
mov ecx esi
lea edi [ ecx + 0x2 ]
nop
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
push esi
mov ecx edx
call sub_407b90
call sub_408410
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
sub esp 0x8
call sub_409680
xor eax eax
pop edi
pop esi
mov ecx [ esp + 0x4 ]
xor ecx esp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0xc ]
pop edi
pop esi
xor ecx esp
xor eax eax
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x10
sub esp 0xc
call sub_409d30
sub_4087f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi rw-data
je r-xdata
mov eax rw-data
pop esi
pop ebp
retn 0x4
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
cmp [ esi + 0x14 ] 0x8
jae r-xdata
push [ rw-data ]
call j_sub_40a8c6
add esp 0x4
mov eax [ esi ]
mov [ rw-data ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ rw-data ] eax
mov eax [ esi + 0x14 ]
mov [ rw-data ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add eax eax
push eax
push esi
push rw-data
call sub_40a990
add esp 0xc
jmp r-xdata
sub_408890
push ebp
mov ebp esp
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
sub eax ecx
push edi
cmp eax 0x1
jbe r-xdata
push r--data
call sub_4145cb
lea edi [ ecx + 0x1 ]
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_4081a0
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov edx [ esi + 0x10 ]
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ax [ ebp + 0xc ]
mov [ ecx + edx * 2 ] ax
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_408950
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp [ ecx + 0x10 ] edi
cmovb edi [ ecx + 0x10 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebp + 0x14 ]
cmp edi ebx
mov esi ebx
cmovb esi edi
test esi esi
je r-xdata
mov ecx [ ecx ]
xor eax eax
mov edx r--data
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp edi ebx
jae r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
xor eax eax
cmp edi ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x10
movzx eax [ ecx ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
test eax eax
jne r-xdata
sub_4089d0
push ebp
mov ebp esp
push 0xffffffff
push sub_415a88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x30 ] eax
test eax eax
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_40a470
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
push ebx
push eax
push [ ebp - 0x30 ]
push edi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_40a400
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov edi [ edi ]
push [ ebp - 0x2c ]
call j_sub_40a8c6
add esp 0x4
sub_408ae0
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0x206
push eax
mov [ ebp - 0x414 ] ax
lea eax [ ebp - 0x412 ]
push eax
mov [ ebp - 0x418 ] 0x0
call sub_40d4a0
add esp 0xc
lea eax [ ebp - 0x414 ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40d4a0
add esp 0xc
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call [ CreateDirectoryW@IAT ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ ebp - 0x20c ] ax
je r-xdata
push eax
lea eax [ ebp - 0x20c ]
push eax
mov ecx esi
call sub_407b90
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
sub_408bf0
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push 0x208
lea eax [ ebp - 0x414 ]
push 0x0
push eax
mov [ ebp - 0x418 ] 0x0
call sub_40d4a0
add esp 0xc
lea eax [ ebp - 0x414 ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40d4a0
add esp 0xc
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ GetTempFileNameW@IAT ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ ebp - 0x20c ] ax
jne r-xdata
lea ecx [ ebp - 0x20c ]
lea edx [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
lea eax [ ebp - 0x20c ]
push eax
mov ecx esi
call sub_407b90
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
sub ecx edx
sar ecx 0x1
sub_408ce0
push ebp
mov ebp esp
mov eax 0x103c
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push esi
push edi
mov edi [ ebp + 0xc ]
push ecx
push rw-data
lea eax [ ebp - 0x103c ]
push eax
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
add esp 0x8
cmp [ ebp - 0x1028 ] 0x10
mov esi eax
jb r-xdata
mov eax [ eax ]
push ecx
push edi
lea eax [ ebp - 0x1024 ]
push eax
mov [ ebp - 0x1028 ] 0xf
mov [ ebp - 0x102c ] 0x0
mov [ ebp - 0x103c ] 0x0
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x103c ]
call j_sub_40a8c6
add esp 0x4
push r--data
push eax
call sub_40bd3c
add esp 0x8
cmp [ ebp - 0x1010 ] 0x10
mov edi eax
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x1010 ] 0xf
mov [ ebp - 0x1014 ] 0x0
mov [ ebp - 0x1024 ] 0x0
test esi esi
je r-xdata
push [ ebp - 0x1024 ]
call j_sub_40a8c6
add esp 0x4
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
xor al al
pop esi
call sub_40a8b7
mov esp ebp
pop ebp
retn 0xc
test edi edi
je r-xdata
push esi
call sub_40bd51
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_40bb67
add esp 0x4
push edi
call sub_40bb67
add esp 0x4
mov al 0x1
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ecx ]
push edi
push eax
lea eax [ ebp - 0x100c ]
push 0x1
push eax
call sub_40b5cb
push esi
call sub_40bd51
add esp 0x14
test eax eax
je r-xdata
lea ecx [ ecx ]
push esi
push 0x1000
lea eax [ ebp - 0x100c ]
push 0x1
push eax
call sub_40b399
add esp 0x10
xor edx edx
test eax eax
jle r-xdata
inc edx
cmp edx eax
jl r-xdata
cmp cl 0x5b
je r-xdata
mov cl [ ebp + edx - 0x100c ]
test cl cl
je r-xdata
xor cl 0x5b
mov [ ebp + edx - 0x100c ] cl
sub_408e70
push ebp
mov ebp esp
mov eax 0x203c
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2024 ] eax
xor eax eax
push 0x1006
push eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] ax
mov [ ebp - 0x1018 ] al
lea eax [ ebp - 0x1017 ]
push eax
mov [ ebp - 0xc ] 0x0
call sub_40d4a0
xor eax eax
add esp 0x8
mov [ ebp - 0x201c ] eax
push esi
lea eax [ ebp - 0x203c ]
push eax
xor edi edi
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
mov esi eax
add esp 0x8
test esi esi
setne bl
cmp [ ebp - 0x2028 ] 0x10
mov [ ebp - 0x2020 ] esi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x2028 ] 0xf
mov [ ebp - 0x202c ] edi
mov [ ebp - 0x203c ] 0x0
test bl bl
je r-xdata
push [ ebp - 0x203c ]
call j_sub_40a8c6
add esp 0x4
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_40bd51
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_40bb67
add esp 0x4
nop
cmp ebx 0x7
jl r-xdata
jmp r-xdata
mov esi [ ebp - 0x2020 ]
add [ ebp - 0x201c ] ebx
push esi
call sub_40bd51
add esp 0x4
test eax eax
je r-xdata
lea edx [ ebx - 0x7 ]
cmp edx ebx
jge r-xdata
movzx ecx [ ebp + esi - 0x1018 ]
test ecx ecx
js r-xdata
push esi
push 0x1000
lea eax [ ebp - 0x2018 ]
push 0x1
push eax
call sub_40b399
mov ecx [ ebp - 0xc ]
mov ebx eax
mov [ ebp - 0x1018 ] ecx
mov cx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x2018 ]
push eax
mov [ ebp - 0x1014 ] cx
mov cl [ ebp - 0x6 ]
lea eax [ ebp - 0x1011 ]
push eax
mov [ ebp - 0x1012 ] cl
call sub_40de40
lea ecx [ ebx + 0x6 ]
add esp 0x1c
xor eax eax
xor esi esi
test ecx ecx
jle r-xdata
mov eax ebx
sub eax edx
push eax
lea ecx [ ebp - 0x2018 ]
add ecx edx
push ecx
lea eax [ ebp - 0xc ]
push eax
call sub_40de40
add esp 0xc
xor eax eax
movzx edx [ ebp + esi - 0x1017 ]
add ecx 0x7
add ecx eax
cmp ecx edx
jne r-xdata
mov eax [ ebp - 0x201c ]
mov ecx [ ebp - 0x2024 ]
push [ ebp - 0x2020 ]
add eax 0xfffffff3
add eax esi
mov [ ecx ] eax
call sub_40bb67
mov ecx [ ebp - 0x4 ]
add esp 0x4
xor ecx ebp
pop edi
pop esi
mov al 0x1
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x8
inc esi
lea ecx [ ebx + 0x6 ]
cmp esi ecx
jl r-xdata
inc eax
jmp r-xdata
cmp edi eax
cmovl edi eax
cmp eax 0x7
je r-xdata
sub_409070
push ebp
mov ebp esp
mov eax 0x1024
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push ecx
push rw-data
lea eax [ ebp - 0x1024 ]
push eax
xor edi edi
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
mov ebx eax
add esp 0x8
test ebx ebx
setne al
cmp [ ebp - 0x1010 ] 0x10
mov [ ebp - 0x1009 ] al
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x1010 ] 0xf
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1024 ] 0x0
test al al
je r-xdata
push [ ebp - 0x1024 ]
call j_sub_40a8c6
mov al [ ebp - 0x1009 ]
add esp 0x4
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x8
push 0x0
push [ esi ]
push ebx
call sub_40ba31
add esp 0xc
push ebx
call sub_40bd51
add esp 0x4
test eax eax
jne r-xdata
push ebx
call sub_40bb67
add esp 0x4
lea ebx [ ebx ]
test esi esi
jle r-xdata
mov esi 0x80010
sub esi edi
add edi esi
push ebx
cmp edi 0x80010
je r-xdata
push esi
lea ecx [ ebp - 0x1008 ]
lea eax [ edi + rw-data ]
push ecx
push eax
call sub_40de40
add esp 0xc
call sub_40bb67
mov ecx [ ebp - 0x4 ]
add esp 0x4
xor ecx ebp
pop edi
pop esi
mov al 0x1
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x8
call sub_40bd51
add esp 0x4
test eax eax
je r-xdata
push ebx
push 0x1000
lea eax [ ebp - 0x1008 ]
push 0x1
push eax
call sub_40b399
mov esi eax
add esp 0x10
lea ecx [ edi + esi ]
cmp ecx 0x80010
jle r-xdata
sub_4091c0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
mov [ ebp - 0x10 ] 0x0
call sub_40bd77
push eax
call sub_40bde9
add esp 0x8
call sub_40bdc6
cdq
mov ecx 0x96
idiv ecx
mov eax 0x1
test edx edx
cmove edx eax
mov [ ebp - 0x10 ] dl
lea edx [ ebp - 0x10 ]
mov cl [ edx + eax - 0x1 ]
add cl 0x6
add cl al
mov [ ebp + eax - 0x10 ] cl
inc eax
cmp eax 0x8
jl r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov al 0x1
call sub_40a8b7
mov esp ebp
pop ebp
retn
push ecx
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_40de40
add esp 0xc
sub_409250
push ebp
mov ebp esp
sub esp 0x274
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push esi
push edi
push 0x24c
lea eax [ ebp - 0x258 ]
push 0x0
push eax
mov [ ebp - 0x25c ] 0x0
call sub_40d4a0
add esp 0xc
cmp [ rw-data ] 0x8
lea ecx [ ebp - 0x25c ]
mov eax rw-data
cmovae eax [ rw-data ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
xor ecx ecx
mov eax [ ebp - 0x23c ]
jl r-xdata
xor al al
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
push ecx
mov [ rw-data ] eax
push rw-data
lea eax [ ebp - 0x274 ]
push eax
call sub_4089d0
xor esi esi
cmp [ eax + 0x14 ] 0x10
jb r-xdata
jg r-xdata
push r--data
push eax
call sub_40bd3c
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov eax [ eax ]
cmp eax 0x80000
ja r-xdata
cmp [ ebp - 0x260 ] 0x10
mov [ rw-data ] esi
jb r-xdata
mov ecx edi
call sub_408370
push edi
mov esi eax
call sub_40bb67
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x274 ]
call j_sub_40a8c6
mov esi [ rw-data ]
add esp 0x4
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
test esi esi
je r-xdata
cmp eax 0x80000
ja r-xdata
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
sub_409380
push ebp
mov ebp esp
mov eax 0x1028
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push ecx
push eax
lea eax [ ebp - 0x1028 ]
push eax
xor edi edi
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
mov ebx eax
add esp 0x8
test ebx ebx
setne al
cmp [ ebp - 0x1014 ] 0x10
mov [ ebp - 0x100d ] al
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x1014 ] 0xf
mov [ ebp - 0x1018 ] edi
mov [ ebp - 0x1028 ] 0x0
test al al
je r-xdata
push [ ebp - 0x1028 ]
call j_sub_40a8c6
mov al [ ebp - 0x100d ]
add esp 0x4
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
push ebx
call sub_40bd51
add esp 0x4
test eax eax
jne r-xdata
push 0x0
call sub_40bd77
add esp 0x4
push eax
call sub_40bde9
add edi 0x10
add esp 0x4
cmp edi 0x80000
jg r-xdata
lea esp [ esp ]
push ebx
call sub_40bb67
add esp 0x4
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
lea esi [ edi + rw-data ]
mov edi 0x64
lea esp [ esp ]
push ebx
add edi esi
call sub_40bd51
add esp 0x4
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x100c ]
lea ecx [ edi + rw-data ]
push eax
push ecx
call sub_40de40
add esp 0xc
call sub_40bdc6
cdq
idiv edi
inc esi
mov [ esi - 0x1 ] dl
cmp esi rw-data
jle r-xdata
push ebx
push 0x1000
lea eax [ ebp - 0x100c ]
push 0x1
push eax
call sub_40b399
mov esi eax
add esp 0x10
test esi esi
jle r-xdata
sub_4094e0
push ebp
mov ebp esp
mov eax 0x1134
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x103
lea eax [ ebp - 0x10f ]
push 0x0
push eax
mov [ ebp - 0x110 ] 0x0
call sub_40d4a0
add esp 0xc
lea eax [ ebp - 0x110 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_40bd3c
add esp 0x4
mov ebx eax
push rw-data
lea eax [ ebp - 0x1130 ]
push eax
mov [ ebp - 0x1118 ] ebx
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
add esp 0x8
cmp [ ebp - 0x111c ] 0x10
mov [ ebp - 0x1114 ] eax
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x111c ] 0xf
mov [ ebp - 0x1120 ] 0x0
mov [ ebp - 0x1130 ] 0x0
test ebx ebx
je r-xdata
push [ ebp - 0x1130 ]
call j_sub_40a8c6
mov eax [ ebp - 0x1114 ]
add esp 0x4
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x8
test eax eax
je r-xdata
push ebx
xor esi esi
xor edi edi
call sub_40bd51
add esp 0x4
test eax eax
jne r-xdata
push ebx
call sub_40bb67
add esp 0x4
push [ ebp - 0x1114 ]
call sub_40bb67
add esp 0x4
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ecx ]
push [ ebp - 0x1114 ]
lea eax [ ebp - 0x1110 ]
push ebx
push 0x1
push eax
call sub_40b5cb
mov ebx [ ebp - 0x1118 ]
push ebx
call sub_40bd51
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
push ebx
push 0x1000
lea eax [ ebp - 0x1110 ]
push 0x1
push eax
call sub_40b399
mov ebx eax
add esp 0x10
xor ecx ecx
test ebx ebx
jle r-xdata
inc ecx
inc esi
cmp ecx ebx
jl r-xdata
lea eax [ edx + 0x80010 ]
cmp esi eax
jge r-xdata
cmp esi edx
jl r-xdata
mov al [ edi + rw-data ]
mov [ ebp + ecx - 0x1110 ] al
inc edi
sub_409680
push ebp
mov ebp esp
push 0xffffffff
push sub_415a16
mov eax [ fs : 0x0 ]
push eax
sub esp 0x244
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
push 0x206
push eax
mov [ ebp - 0x218 ] ax
lea eax [ ebp - 0x216 ]
push eax
call sub_40d4a0
add esp 0xc
lea eax [ ebp - 0x218 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
xor eax eax
mov [ ebp - 0x234 ] 0x0
mov [ ebp - 0x238 ] 0x7
mov [ ebp - 0x23c ] 0x0
mov [ ebp - 0x24c ] ax
cmp [ ebp - 0x218 ] ax
jne r-xdata
lea ecx [ ebp - 0x218 ]
lea edx [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x24c ]
call sub_407b90
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_408e70
test al al
sete bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x238 ] 0x8
jb r-xdata
sub ecx edx
sar ecx 0x1
test bl bl
je r-xdata
push [ ebp - 0x24c ]
call j_sub_40a8c6
add esp 0x4
call sub_4091c0
push ecx
call sub_409250
test al al
je r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x230 ]
push eax
call sub_408bf0
push ecx
lea eax [ ebp - 0x230 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_408ce0
test al al
lea eax [ ebp - 0x230 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x8
push eax
call sub_409380
test al al
lea eax [ ebp - 0x230 ]
jne r-xdata
cmp [ ebp - 0x21c ] 0x8
cmovae eax [ ebp - 0x230 ]
push eax
call [ DeleteFileW@IAT ]
xor bl bl
jmp r-xdata
cmp [ ebp - 0x21c ] 0x8
cmovae eax [ ebp - 0x230 ]
push eax
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x234 ]
push eax
push ecx
call sub_4094e0
test al al
jne r-xdata
cmp [ ebp - 0x21c ] 0x8
cmovae eax [ ebp - 0x230 ]
push eax
call [ DeleteFileW@IAT ]
xor bl bl
jmp r-xdata
cmp [ ebp - 0x21c ] 0x8
jb r-xdata
mov bl 0x1
xor bl bl
jmp r-xdata
mov al bl
push [ ebp - 0x230 ]
call j_sub_40a8c6
add esp 0x4
sub_409870
mov eax 0x10
mov cl [ eax + rw-data ]
test cl cl
je r-xdata
cmp cl 0x5b
je r-xdata
mov cl [ eax + rw-data ]
test cl cl
je r-xdata
cmp cl 0x5b
je r-xdata
xor cl 0x5b
mov [ eax + rw-data ] cl
mov cl [ eax + rw-data ]
test cl cl
je r-xdata
cmp cl 0x5b
je r-xdata
xor cl 0x5b
mov [ eax + rw-data ] cl
add eax 0x4
cmp eax 0x80010
jl r-xdata
cmp cl 0x5b
je r-xdata
xor cl 0x5b
mov [ eax + rw-data ] cl
mov cl [ eax + rw-data ]
test cl cl
je r-xdata
mov al 0x1
retn 0x4
xor cl 0x5b
mov [ eax + rw-data ] cl
sub_4098f0
push ebp
mov ebp esp
mov eax 0x1278
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
cmp [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x1260 ] eax
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
push ecx
push eax
lea eax [ ebp - 0x1278 ]
push eax
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
add esp 0x8
cmp [ ebp - 0x1264 ] 0x10
mov ebx eax
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x1264 ] 0xf
mov [ ebp - 0x1268 ] 0x0
mov [ ebp - 0x1278 ] 0x0
test ebx ebx
je r-xdata
push [ ebp - 0x1278 ]
call j_sub_40a8c6
add esp 0x4
xor ecx ecx
xor edi edi
mov esi 0x10
jmp r-xdata
mov al [ esi + rw-data ]
mov [ ebp + ecx - 0x100c ] al
inc ecx
inc edi
cmp ecx 0x1000
jne r-xdata
cmp edi [ rw-data ]
je r-xdata
push ebx
push ecx
lea eax [ ebp - 0x100c ]
push 0x1
push eax
call sub_40b5cb
add esp 0x10
xor ecx ecx
test ecx ecx
je r-xdata
inc esi
cmp esi 0x80010
jl r-xdata
push ebx
call sub_40bb67
add esp 0x4
lea eax [ ebp - 0x1258 ]
push 0x24c
push 0x0
push eax
mov [ ebp - 0x125c ] 0x0
call sub_40d4a0
mov ebx [ ebp - 0x1260 ]
add esp 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
push ebx
push ecx
lea eax [ ebp - 0x100c ]
push 0x1
push eax
call sub_40b5cb
add esp 0x10
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x123c ]
jne r-xdata
lea ecx [ ebp - 0x125c ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push ecx
push ebx
lea eax [ ebp - 0x1278 ]
push eax
call sub_4089d0
xor edi edi
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ eax ]
cmp [ rw-data ] edi
setne bl
cmp [ ebp - 0x1264 ] 0x10
jb r-xdata
mov ecx esi
call sub_408370
push esi
mov edi eax
call sub_40bb67
add esp 0x4
test bl bl
sete al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x1278 ]
call j_sub_40a8c6
add esp 0x4
sub_409ae0
push ebp
mov ebp esp
push 0xffffffff
push sub_415a4b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push 0x40
lea eax [ ebp - 0x70 ]
push 0x0
push eax
mov [ ebp - 0x74 ] 0x44
call sub_40d4a0
xor eax eax
add esp 0xc
mov [ ebp - 0x48 ] 0x1
mov [ ebp - 0x44 ] ax
cmp [ ebp + 0x10 ] al
je r-xdata
push ecx
mov edx esi
lea ecx [ ebp - 0x9c ]
call sub_40a550
push edi
mov edx eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_40a600
add esp 0x8
cmp [ ebp - 0x88 ] 0x8
jb r-xdata
mov eax 0x5
mov [ ebp - 0x44 ] ax
cmp [ ebp - 0x18 ] 0x8
lea ecx [ ebp - 0x84 ]
push ecx
lea ecx [ ebp - 0x74 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push 0x0
push eax
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
setne bl
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
push [ ebp - 0x9c ]
call j_sub_40a8c6
add esp 0x4
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0xc
push [ ebp - 0x2c ]
call j_sub_40a8c6
add esp 0x4
sub_409bf0
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push ecx
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_40bd3c
add esp 0x8
cmp [ ebp - 0x94 ] 0x10
mov ebx eax
mov [ ebp - 0x90 ] ebx
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x94 ] 0xf
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0xa8 ] 0x0
test ebx ebx
jne r-xdata
push [ ebp - 0xa8 ]
call j_sub_40a8c6
add esp 0x4
push 0x2
push 0x0
push ebx
call sub_40ba31
add esp 0xc
lea eax [ ebp - 0x8b ]
push 0x7f
push 0x0
push eax
mov [ ebp - 0x8c ] 0x0
call sub_40d4a0
add esp 0xc
push 0x0
call sub_40bd77
add esp 0x4
push eax
call sub_40bde9
add esp 0x4
call sub_40bdc6
mov esi eax
and esi 0x8000007f
jns r-xdata
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
cmp esi 0xa
jge r-xdata
dec esi
or esi 0xffffff80
inc esi
xor edi edi
test esi esi
jle r-xdata
add esi 0xa
push ebx
push 0x1
lea eax [ ebp - 0x8c ]
push esi
push eax
call sub_40b5cb
push ebx
call sub_40bb67
mov ecx [ ebp - 0x8 ]
add esp 0x14
xor ecx ebp
pop edi
pop esi
mov al 0x1
pop ebx
call sub_40a8b7
mov esp ebp
pop ebp
retn 0x4
lea ebx [ edi + 0x64 ]
nop
call sub_40bdc6
cdq
idiv ebx
inc edi
mov [ ebp + edi - 0x8d ] dl
cmp edi esi
jl r-xdata
mov ebx [ ebp - 0x90 ]
sub_409d30
push ebp
mov ebp esp
push 0xffffffff
push sub_4159c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x670
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x678 ]
push eax
push rw-data
mov [ ebp - 0x678 ] 0x0
call sub_408e70
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40a8b7
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x678 ]
push eax
push ecx
call sub_409070
push ecx
call sub_409870
lea eax [ ebp - 0x644 ]
push eax
call sub_408bf0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x630 ] 0x8
mov edi [ DeleteFileW@IAT ]
lea eax [ ebp - 0x644 ]
cmovae eax [ ebp - 0x644 ]
push eax
call edi
lea eax [ ebp - 0x644 ]
push eax
call sub_4098f0
test al al
jne r-xdata
cmp [ rw-data ] 0x8
mov edx rw-data
cmovae edx [ rw-data ]
cmp [ ebp - 0x630 ] 0x8
lea ecx [ ebp - 0x644 ]
cmovae ecx [ ebp - 0x644 ]
call sub_404bb0
cmp [ ebp - 0x630 ] 0x8
lea ecx [ ebp - 0x644 ]
cmovae ecx [ ebp - 0x644 ]
push ecx
mov esi eax
call edi
test esi esi
jne r-xdata
cmp [ ebp - 0x630 ] 0x8
lea eax [ ebp - 0x644 ]
cmovae eax [ ebp - 0x644 ]
push eax
call edi
xor bl bl
xor eax eax
push 0x206
push eax
mov [ ebp - 0x21c ] ax
lea eax [ ebp - 0x21a ]
push eax
call sub_40d4a0
add esp 0xc
xor eax eax
push 0x206
push eax
mov [ ebp - 0x424 ] ax
lea eax [ ebp - 0x422 ]
push eax
call sub_40d4a0
add esp 0xc
xor eax eax
push 0x206
push eax
mov [ ebp - 0x62c ] ax
lea eax [ ebp - 0x62a ]
push eax
call sub_40d4a0
mov edi [ rw-data ]
add esp 0xc
xor ecx ecx
test edi edi
jle r-xdata
mov al bl
push [ ebp - 0x644 ]
call j_sub_40a8c6
add esp 0x4
mov esi [ PathAppendW@IAT ]
push r--data
lea eax [ ebp - 0x21c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x424 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x62c ]
push eax
call esi
xor eax eax
mov [ ebp - 0x648 ] 0x7
mov [ ebp - 0x64c ] 0x0
mov [ ebp - 0x65c ] ax
cmp [ ebp - 0x424 ] ax
jne r-xdata
mov edx [ rw-data ]
mov esi [ rw-data ]
lea ecx [ ebp - 0x424 ]
lea edx [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
cmp edx 0x8
mov eax rw-data
cmovae eax esi
movzx eax [ eax + ecx * 2 ]
mov [ ebp + ecx * 2 - 0x21c ] ax
mov eax rw-data
cmovae eax esi
movzx eax [ eax + ecx * 2 ]
mov [ ebp + ecx * 2 - 0x424 ] ax
mov eax rw-data
cmovae eax esi
inc ecx
movzx eax [ eax + ecx * 2 - 0x2 ]
mov [ ebp + ecx * 2 - 0x62e ] ax
cmp ecx edi
jl r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
lea eax [ ebp - 0x424 ]
push eax
lea ecx [ ebp - 0x65c ]
call sub_407b90
push ecx
lea eax [ ebp - 0x65c ]
push eax
lea eax [ ebp - 0x674 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
sub ecx edx
sar ecx 0x1
mov esi [ GetFileAttributesA@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
xor bl bl
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x648 ] 0x8
mov [ ebp - 0x660 ] 0xf
mov [ ebp - 0x664 ] 0x0
mov [ ebp - 0x674 ] 0x0
jb r-xdata
push [ ebp - 0x674 ]
call j_sub_40a8c6
add esp 0x4
push eax
call esi
cmp eax 0xffffffff
setne bl
jmp r-xdata
test bl bl
je r-xdata
push [ ebp - 0x65c ]
call j_sub_40a8c6
add esp 0x4
cmp [ ebp - 0x660 ] 0x10
jb r-xdata
xor eax eax
mov [ ebp - 0x648 ] 0x7
mov [ ebp - 0x64c ] 0x0
mov [ ebp - 0x65c ] ax
cmp [ ebp - 0x62c ] ax
jne r-xdata
push r--data
lea ecx [ ebp - 0x674 ]
call sub_407870
lea eax [ ebp - 0x424 ]
push eax
lea ecx [ ebp - 0x65c ]
mov [ ebp - 0x4 ] 0x2
call sub_407870
push 0x1
lea eax [ ebp - 0x674 ]
push eax
lea eax [ ebp - 0x65c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_409ae0
cmp [ ebp - 0x648 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x62c ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] al
cmp [ ebp - 0x660 ] 0x8
mov [ ebp - 0x648 ] 0x7
mov [ ebp - 0x64c ] 0x0
mov [ ebp - 0x65c ] ax
jb r-xdata
push [ ebp - 0x65c ]
call j_sub_40a8c6
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x62c ]
push eax
lea ecx [ ebp - 0x65c ]
call sub_407b90
push ecx
lea eax [ ebp - 0x65c ]
push eax
lea eax [ ebp - 0x674 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x674 ]
call j_sub_40a8c6
add esp 0x4
test eax eax
je r-xdata
mov eax [ eax ]
xor bl bl
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x648 ] 0x8
mov [ ebp - 0x660 ] 0xf
mov [ ebp - 0x664 ] 0x0
mov [ ebp - 0x674 ] 0x0
jb r-xdata
push [ ebp - 0x674 ]
call j_sub_40a8c6
add esp 0x4
push eax
call esi
cmp eax 0xffffffff
setne bl
jmp r-xdata
test bl bl
je r-xdata
push [ ebp - 0x65c ]
call j_sub_40a8c6
add esp 0x4
cmp [ ebp - 0x660 ] 0x10
jb r-xdata
xor eax eax
mov [ ebp - 0x648 ] 0x7
mov [ ebp - 0x64c ] 0x0
mov [ ebp - 0x65c ] ax
cmp [ ebp - 0x21c ] ax
jne r-xdata
push r--data
lea ecx [ ebp - 0x674 ]
call sub_407870
lea eax [ ebp - 0x62c ]
push eax
lea ecx [ ebp - 0x65c ]
mov [ ebp - 0x4 ] 0x5
call sub_407870
push 0x1
lea eax [ ebp - 0x674 ]
push eax
lea eax [ ebp - 0x65c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_409ae0
cmp [ ebp - 0x648 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x21c ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] al
cmp [ ebp - 0x660 ] 0x8
mov [ ebp - 0x648 ] 0x7
mov [ ebp - 0x64c ] 0x0
mov [ ebp - 0x65c ] ax
jb r-xdata
push [ ebp - 0x65c ]
call j_sub_40a8c6
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x65c ]
call sub_407b90
push ecx
lea eax [ ebp - 0x65c ]
push eax
lea eax [ ebp - 0x674 ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_4089d0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x674 ]
call j_sub_40a8c6
add esp 0x4
test eax eax
je r-xdata
mov eax [ eax ]
xor bl bl
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x648 ] 0x8
mov [ ebp - 0x660 ] 0xf
mov [ ebp - 0x664 ] 0x0
mov [ ebp - 0x674 ] 0x0
jb r-xdata
push [ ebp - 0x674 ]
call j_sub_40a8c6
add esp 0x4
push eax
call esi
cmp eax 0xffffffff
setne bl
jmp r-xdata
test bl bl
je r-xdata
push [ ebp - 0x65c ]
call j_sub_40a8c6
add esp 0x4
cmp [ ebp - 0x660 ] 0x10
jb r-xdata
mov bl 0x1
jmp r-xdata
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x674 ]
call sub_407870
lea eax [ ebp - 0x674 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_409bf0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x660 ] 0x8
jb r-xdata
cmp [ ebp - 0x630 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x674 ]
call sub_407870
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x65c ]
mov [ ebp - 0x4 ] 0x9
call sub_407870
push 0x0
lea eax [ ebp - 0x674 ]
push eax
lea eax [ ebp - 0x65c ]
push eax
mov [ ebp - 0x4 ] 0xa
call sub_409ae0
test al al
sete bl
cmp [ ebp - 0x648 ] 0x8
jb r-xdata
push [ ebp - 0x674 ]
call j_sub_40a8c6
add esp 0x4
xor eax eax
cmp [ ebp - 0x660 ] 0x8
mov [ ebp - 0x648 ] 0x7
mov [ ebp - 0x64c ] 0x0
mov [ ebp - 0x65c ] ax
jb r-xdata
push [ ebp - 0x65c ]
call j_sub_40a8c6
add esp 0x4
test bl bl
jne r-xdata
push [ ebp - 0x674 ]
call j_sub_40a8c6
add esp 0x4
sub_40a400
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov eax edi
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x4
push eax
push esi
push edi
call sub_40a990
add esp 0xc
jmp r-xdata
sub_40a470
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_4145cb
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + ebx ]
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_408050
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ebx 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
jmp r-xdata
mov eax [ esi ]
mov [ eax + ecx ] 0x0
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push ebx
add eax ecx
push 0x0
push eax
call sub_40d4a0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_40a550
push ebp
mov ebp esp
push 0xffffffff
push sub_415929
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax 0x2
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_40a680
push 0x2
push ecx
mov ecx esi
call sub_40a790
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_407ef0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_40a600
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov edi ecx
mov ecx edx
mov [ ebp - 0x4 ] 0x0
call sub_40a680
mov esi eax
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
add eax eax
push eax
push esi
push edi
call sub_40a990
add esp 0xc
jmp r-xdata
sub_40a680
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
cmp eax edx
jb r-xdata
push r--data
call sub_4145f9
mov ebx [ ebp + 0x10 ]
sub eax edx
mov edx [ esi + 0x10 ]
cmp eax ebx
cmovb ebx eax
or eax 0xffffffff
sub eax edx
cmp eax ebx
jbe r-xdata
push r--data
call sub_4145cb
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ edx + ebx ]
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_4145cb
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_4081a0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ ebx + ebx ]
push eax
mov eax [ ebp + 0xc ]
lea eax [ ecx + eax * 2 ]
push eax
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
push eax
call sub_40de40
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_40a790
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub eax edx
cmp eax ebx
jbe r-xdata
cmp ecx 0x8
jb r-xdata
cmp eax r--data
ja r-xdata
push r--data
call sub_4145cb
test ebx ebx
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ edx + ebx ]
cmp edi 0x7ffffffe
ja r-xdata
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax r--data
jbe r-xdata
push r--data
call sub_4145cb
cmp ecx edi
jae r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_4081a0
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov eax r--data
sub eax ecx
sar eax 0x1
push eax
push esi
mov ecx esi
call sub_40a680
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop ebx
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
xor ecx ecx
mov [ eax ] cx
pop ebx
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ ebx + ebx ]
push eax
mov eax [ esi + 0x10 ]
push r--data
lea eax [ ecx + eax * 2 ]
push eax
call sub_40de40
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
pop ebx
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40a8c6
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40c0e7
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40c0fa
pop ecx
mov [ esi ] eax
pop esi
sub_40a8fe
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_40c150
pop ecx
call sub_40c0e7
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_40c525
push 0x1e
call sub_40c582
push 0xff
call sub_40c265
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_40c0e7
mov [ eax ] ebx
push esi
call sub_40c150
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_40c0e7
mov [ eax ] ebx
sub_40a990
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_40ae64 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40ad68 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae64 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40abdc ]
jmp [ ecx * 4 + jump_table_40ac5c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40acc8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ae64 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40acc8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae64 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae64 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae64 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40acc8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40acc8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40acc8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_40acc8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40afd4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_40c0e7
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_40c0e7
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
sub_40b040
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40c0e7
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40c0e7
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
sub_40b09c
push esi
push 0x4
push 0x20
call sub_40d1f8
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40b0cb
push 0xc
push r--data
call sub_40cca0
call sub_40c3d0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40b10b
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b105
mov eax esi
call sub_40cce5
retn
sub_40b10b
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_40d1c7
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_40d28b
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_40d28b
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40b1d6
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_40d4a0
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_40d2d7
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_40c0e7
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_40d4a0
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_40d3f8
pop ecx
push eax
call sub_40d638
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_40d41c
mov eax [ ebp - 0x10 ]
sub [ esi + 0x4 ] eax
add esp 0x10
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_40c9d1
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_40b3b4
push 0xc
push r--data
call sub_40cca0
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_40caac
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b1d6
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b43d
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_40cce5
retn
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40d4a0
add esp 0xc
sub_40b474
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_40cff2
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_40edd6
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_40de40
mov eax [ ebp - 0x8 ]
sub [ esi + 0x4 ] eax
add [ esi ] eax
add esp 0xc
sub ebx eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_40d3f8
pop ecx
push eax
call sub_40e484
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_40b5cb
push 0xc
push r--data
call sub_40cca0
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_40caac
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b474
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b641
mov eax edi
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
call sub_40cce5
retn
sub_40b649
push ebp
mov ebp esp
mov eax 0x1020
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x1020 ] ebx
test ebx ebx
jne r-xdata
push esi
push ebx
call sub_40d3f8
mov esi eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] eax
jge r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
push esi
call sub_40ef27
mov ecx eax
add esp 0xc
mov [ ebp - 0x1008 ] ecx
test ecx ecx
jns r-xdata
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40a8b7
leave
retn
mov edx esi
sar edx 0x5
mov [ ebp - 0x1010 ] edx
mov edx [ edx * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x101c ] eax
mov dl [ eax + edx + 0x24 ]
add dl dl
sar dl 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1009 ] dl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebx ]
push edi
mov edi esi
sub edi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
mov [ ebp - 0x1014 ] edi
je r-xdata
sub ecx [ ebx + 0x4 ]
mov eax ecx
jmp r-xdata
pop esi
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp dl 0x1
jne r-xdata
test ecx ecx
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
cmp [ eax + ecx + 0x30 ] 0x0
mov ecx [ ebp - 0x1008 ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x1014 ] ecx
cmp ecx esi
mov ecx [ ebp - 0x1008 ]
jae r-xdata
shr edi 0x1
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop edi
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
mov ebx [ ebp - 0x1018 ]
mov ecx [ edx * 4 + rw-data ]
push 0x0
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_40f07b
mov ecx [ ebp - 0x101c ]
mov esi eax
mov eax [ ebp - 0x1010 ]
add esp 0x10
mov eax [ eax * 4 + rw-data ]
cmp esi [ ecx + eax + 0x28 ]
jne r-xdata
mov eax ecx
jmp r-xdata
lea eax [ edi + ecx ]
shr edi 0x1
sub esi [ ebx + 0x8 ]
add esi [ ebx + 0x4 ]
mov ebx [ ebp - 0x1010 ]
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1020 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
xor edi edi
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
inc edi
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
sub ecx esi
push 0x2
push 0x0
push [ ebp - 0x1018 ]
call sub_40ef27
mov ecx [ ebp - 0x1008 ]
add esp 0xc
cmp eax ecx
jne r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x101c ]
push 0x0
lea edx [ ebp - 0x1014 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
push ecx
push [ ebp - 0x1018 ]
call sub_40ef27
add esp 0xc
test eax eax
jns r-xdata
mov eax [ ebx + 0x8 ]
lea edx [ eax + esi ]
jmp r-xdata
push 0x0
push [ ebp - 0x1008 ]
push ebx
call sub_40ef27
add esp 0xc
test eax eax
js r-xdata
mov eax 0x200
cmp esi eax
ja r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x1014 ]
cmp edi eax
ja r-xdata
mov esi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
test edi edi
je r-xdata
mov dl [ ebp - 0x1009 ]
cmp dl 0x1
jne r-xdata
inc esi
test [ ebx + 0xc ] 0x400
mov esi eax
je r-xdata
inc eax
inc esi
je r-xdata
lea eax [ ebp - 0x1004 ]
sub esi eax
lea eax [ ecx + esi ]
jmp r-xdata
mov edx ecx
add edx eax
shr esi 0x1
mov eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x101c ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x4
mov ecx [ ebp - 0x1008 ]
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec edi
cmp ecx edx
jae r-xdata
inc ecx
test edi edi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_40b9a2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
and eax 0xffffffef
push edi
mov [ esi + 0xc ] eax
cmp ebx 0x1
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_40b649
mov edi [ ebp + 0xc ]
add edi eax
pop ecx
xor ebx ebx
jmp r-xdata
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
call sub_40edd6
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push ebx
push edi
push esi
call sub_40d3f8
pop ecx
push eax
call sub_40ef27
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop edi
pop ebx
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_40ba31
push 0xc
push r--data
call sub_40cca0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40caac
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0xc ]
push esi
call sub_40b9a2
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40baa8
mov eax edi
cmp edi 0x1
je r-xdata
call sub_40cce5
retn
cmp edi 0x2
jne r-xdata
sub_40babe
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_40f4d0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40badc
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bab0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40a8c6
pop ecx
sub_40bafb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40edd6
push esi
mov edi eax
call sub_40f731
push esi
call sub_40d3f8
push eax
call sub_40f5cd
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_40a8c6
and [ esi + 0x1c ] 0x0
pop ecx
sub_40bb67
push 0xc
push r--data
call sub_40cca0
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
push esi
call sub_40caac
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40bafb
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bbd6
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_40cce5
retn
sub_40bc04
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40a8fe
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40c150
pop ecx
test eax eax
je r-xdata
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_40f786
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40f88e
int3
sub_40bc53
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40f7c4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40a8c6
pop ecx
sub_40bc78
push 0xc
push r--data
call sub_40cca0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
xor eax eax
cmp [ ebx ] al
setne al
test eax eax
je r-xdata
call sub_40cce5
retn
call sub_40cb82
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_40f8e9
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bd34
mov eax edi
call sub_40c0e7
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_40cea0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40bd51
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
xor eax eax
pop ebp
retn
sub_40bd77
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push 0x0
add ecx 0x2ac18000
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_40fb70
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_40bdf9
push 0x14
push r--data
call sub_40cca0
call sub_4105a1
movzx esi ax
push 0x2
call sub_4103a1
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_40c13b
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40fe49
test eax eax
jne r-xdata
push 0x1c
call sub_40bf49
cmp [ eax + r--data ] ebx
setne bl
call sub_410488
and [ ebp - 0x4 ] 0x0
call sub_40f21b
test eax eax
jns r-xdata
push 0x10
call sub_40bf49
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_4104c8
mov [ rw-data ] eax
call sub_410086
test eax eax
jns r-xdata
push 0x1b
call sub_40bf49
call sub_4102bf
test eax eax
jns r-xdata
push 0x8
call sub_40c27b
push 0x1
call sub_40c2b5
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_40c27b
call sub_410878
push esi
push eax
push 0x0
push __dos_header
call sub_408740
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_40c27b
call sub_40c2a6
jmp sub_40bf3a
push esi
call sub_40c511
sub_40bf7a
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_4108c5
push [ ebp + 0x8 ]
call sub_410862
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_41084d
pop ecx
pop ebp
retn
push 0x1
call sub_4108c5
pop ecx
sub_40bfba
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_40bf7a
leave
retn
push 0x2
pop ecx
int 0x29
sub_40c0c6
push ebp
mov ebp esp
push esi
call sub_40c0b3
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40c0fa
pop ecx
mov esi eax
call sub_40c0e7
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40c0fa
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40c150
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40c183
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_40c0e7
push 0x16
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
jmp r-xdata
call sub_4105c2
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call [ AreFileApisANSI@IAT ]
test eax eax
jne r-xdata
add eax eax
push eax
call sub_40d242
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40c0c6
xor ebx ebx
inc ebx
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call [ GetLastError@IAT ]
push eax
call sub_40c0c6
push [ esi ]
call sub_40a8c6
and [ esi ] 0x0
pop ecx
jmp r-xdata
pop ecx
sub_40c233
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40c2b5
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_410b91
push r--data
push r--data
call sub_40c3ae
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_410aa0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_4104a8
call sub_40b1c1
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_410aa0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_40c35a
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_40c176
push esi
call sub_40c999
push esi
call sub_40de29
push esi
call sub_410c40
push esi
call sub_410c5a
push esi
call sub_410c2f
add esp 0x18
pop esi
jmp sub_410600
sub_40c392
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_40c3ae
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40c3e2
push 0x1c
push r--data
call sub_40cca0
push 0x8
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c4fc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40cce5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_410a31
pop ecx
push [ ebp + 0x8 ]
call sub_40c265
push r--data
push r--data
call sub_40c392
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_40c392
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_40c525
push 0x3
call sub_4103ae
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40c582
push 0xff
call sub_40c582
pop ecx
pop ecx
push 0x3
call sub_4103ae
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40c55e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40c582
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40c55e
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40a8b7
leave
retn
push ebx
push 0x3
call sub_4103ae
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_4103ae
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_40b040
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_411570
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40c9e1
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_4115fb
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_40b040
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_40afd4
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_4115fb
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_411614
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_40afd4
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_4116d2
add esp 0xc
jmp r-xdata
sub_40c73d
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_40c876
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_40d4a0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_410862
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4108c5
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40a8b7
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_4108c5
pop ecx
sub_40c9a6
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c9e1
int3
pop ebp
jmp eax
sub_40c9e1
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40c876
push esi
call sub_41084d
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_40ca0c
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40d1f8
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40d1f8
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_40caac
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4108cd
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40caeb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4108cd
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_40cb1b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_410a31
pop ecx
pop ebp
retn
sub_40cb55
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_410a31
pop ecx
pop ebp
retn
sub_40cb82
push 0x10
push r--data
call sub_40cca0
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_4108cd
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cc91
mov eax esi
call sub_40cce5
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_40d242
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_40caeb
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_410955
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_40cb55
pop ecx
pop ecx
sub_40cca0
push sub_40cd00
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40cd00
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40a8b7
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40a8b7
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_40cfdb
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_40a8b7
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40a8b7
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_40cf92
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40cfc2
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_40cfdb
mov eax [ ebp + 0xc ]
push r--data
call sub_410aa0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40a8b7
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_40cfa9
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40a8b7
sub_40cea0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40cf30
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_412255
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_412274
jmp r-xdata
sub_40cf30
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40a8b7
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40cea0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40cf92
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40cfc2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40cff2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_40d3f8
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_40c0e7
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_40c0e7
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_40caa6
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_40e484
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_412277
pop ecx
test eax eax
jne r-xdata
call sub_40caa6
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_40e484
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_4122cb
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_40f07b
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_40d13f
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40fd0f
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_412596
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_411122
mov [ esi + 0x4 ] eax
sub_40d1c7
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax 0xffffffff
pop ebp
retn
sub_40d1f8
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4128f0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40d242
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_40a8fe
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_40d28b
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412845
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40d2d7
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_4122cb
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_40d3f8
pop ecx
push eax
call sub_40d530
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_40d3f8
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_40d3f8
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_40d3f8
mov esi eax
push edi
sar esi 0x5
call sub_40d3f8
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_40d3f8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax 0xffffffff
pop ebp
retn
sub_40d41c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_40c0e7
push 0x16
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_40d4a0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_40c0e7
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_40de40
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_40c0e7
push 0x22
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
jmp r-xdata
pop edi
sub_40d4a0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_40d530
push 0x10
push r--data
call sub_40cca0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push esi
call sub_412a32
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x16
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40d638
add esp 0xc
mov edi eax
jmp r-xdata
call sub_40c9d1
call sub_40cce5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d60f
mov eax edi
jmp r-xdata
sub_40d638
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_40c0b3
mov [ eax ] edi
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0b3
mov [ eax ] edi
call sub_40c0e7
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ebx eax
mov edx [ ecx * 4 + rw-data ]
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov al [ edx + ebx + 0x4 ]
mov [ ebp - 0x24 ] ebx
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_40c0b3
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_40c9d1
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_40c0b3
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_40d242
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
test [ edx + ebx + 0x4 ] 0x48
mov [ ebp - 0x1c ] eax
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40f177
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_40c0e7
mov [ eax ] 0xc
call sub_40c0b3
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_412277
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
mov eax [ ecx * 4 + rw-data ]
inc edi
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_40c0c6
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
shr esi 0x1
mov eax [ eax * 4 + rw-data ]
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
inc edx
push 0x2
dec esi
cmp [ ebp + 0x13 ] 0x1
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_40a8c6
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi esi
mov ecx esi
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
pop edi
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
push 0xa
inc edx
pop ecx
mov [ ebp - 0x1c ] edx
dec esi
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
push 0xa
add ecx 0x2
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
inc edi
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
add edi 0x2
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
sub esi edi
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
inc esi
mov edi eax
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov eax [ eax * 4 + rw-data ]
cmp edi esi
setne cl
add edi edi
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_40f177
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40f177
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
inc esi
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_40f177
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
push 0xa
pop ecx
add esi 0x2
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
inc esi
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x26 ] al
inc esi
sub_40dde6
call sub_410c4d
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_410c76
pop ecx
push 0x3
call sub_40c346
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_40c876
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_40de40
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_40e314 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40e218 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e314 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40e08c ]
jmp [ ecx * 4 + jump_table_40e10c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e178 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e314 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e178 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e314 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e314 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e314 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e178 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e178 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e178 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_40e178 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40e484
push 0x10
push r--data
call sub_40cca0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c9d1
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_412a32
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40e566
add esp 0xc
mov edi eax
jmp r-xdata
call sub_40cce5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e53d
mov eax edi
jmp r-xdata
sub_40e566
push ebp
mov ebp esp
mov eax 0x1af0
call sub_40f1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_40c0b3
and [ eax ] edi
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40a8b7
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_40c0b3
and [ eax ] edi
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_412277
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_40f177
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_40fd0f
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_40c0e7
mov [ eax ] 0x1c
call sub_40c0b3
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_40c0c6
pop ecx
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_412693
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_412f48
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_412797
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_412797
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_412f48
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_40ed90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40edd6
pop ecx
test eax eax
je r-xdata
push esi
call sub_40ee43
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40d3f8
push eax
call sub_412f89
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40edd6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_40d3f8
pop ecx
push eax
call sub_40e484
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40ee43
push 0x14
push r--data
call sub_40cca0
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ef1e
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_40cce5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_40caeb
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40eeeb
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_40ed90
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_40ed90
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40ef27
push 0x10
push r--data
call sub_40cca0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c9d1
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_412a32
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f009
add esp 0xc
mov edi eax
jmp r-xdata
call sub_40cce5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40efe0
mov eax edi
jmp r-xdata
sub_40f009
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_412ce9
pop ecx
cmp eax 0xffffffff
jne r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
xor edi edi
push edi
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax ebx
push edi
call sub_40c0c6
pop ecx
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebx
sub_40f07b
push 0x18
push r--data
call sub_40cca0
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c9d1
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_412a32
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40f177
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_40cce5
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f14d
mov edx ebx
jmp r-xdata
sub_40f177
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_412ce9
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_40c0e7
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_40c0c6
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_40f1f0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40f21b
push 0x64
push r--data
call sub_40cca0
push 0xb
call sub_4108cd
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_40d1f8
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_40cea0
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_40cce5
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f4c0
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_40d1f8
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_40f4d0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_40f55c
push 0xc
push r--data
call sub_40cca0
push 0xe
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f5c4
call sub_40cce5
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40a8c6
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_40a8c6
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_40f5cd
push 0x10
push r--data
call sub_40cca0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c9d1
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_412a32
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_40c0e7
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_40f697
pop ecx
mov edi eax
jmp r-xdata
call sub_40cce5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f66e
mov eax edi
jmp r-xdata
sub_40f697
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_412ce9
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_40c0c6
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_412ce9
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_412ce9
push 0x1
mov esi eax
call sub_412ce9
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_412c63
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_40f731
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40a8c6
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40f761
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_40f827
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f7a1
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_40f7cf
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f7cf
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40f865
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_40f827
jmp r-xdata
sub_40f802
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40f865
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40a8c6
pop ecx
sub_40f827
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_411570
lea edi [ eax + 0x1 ]
push edi
call sub_40a8fe
pop ecx
pop ecx
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_4130f6
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_40f88e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test [ eax ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov eax [ ecx ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] 0x1994000
sub_40f8e9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor edx edx
and [ ebp - 0x4 ] edx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov [ ebp + 0xc ] 0x1000
xor ebx ebx
or edi 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_41325e
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
push 0x3
push esi
push r--data
call sub_41327c
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] al
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_4133a9
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_4133a9
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_4133a9
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_40fb70
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40fbd8
push 0x8
push r--data
call sub_40cca0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40cce5
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_40a8c6
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_40a8c6
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_40a8c6
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_40a8c6
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_40a8c6
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_40a8c6
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_40a8c6
pop ecx
push 0xd
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_40a8c6
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fcfa
push 0xc
call sub_4108cd
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fd06
push esi
call sub_40a8c6
pop ecx
push edi
call sub_4124fb
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40a8c6
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_4123a1
pop ecx
sub_40fd27
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_410560
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_40d1f8
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_41057f
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_40a8c6
pop ecx
xor esi esi
push 0x0
push esi
call sub_40fd96
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40fd96
push 0x8
push r--data
call sub_40cca0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fe37
push 0xc
call sub_4108cd
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_412311
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fe40
call sub_40cce5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_40fe49
call sub_40c35a
call sub_4109fc
test eax eax
jne r-xdata
push sub_40fbd8
call sub_410523
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_40febf
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_40d1f8
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_40febf
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_41057f
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_40fd96
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_40fedc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_410be8
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_40ff2b
push ebp
mov ebp esp
push esi
call sub_40fd27
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_410086
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
push ebx
xor eax eax
xor edi edi
push edi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_410132
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add ecx ecx
add eax eax
cmp ecx eax
jb r-xdata
push ecx
call sub_40d242
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_410132
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_410132
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
sete al
push 0x22
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
inc [ eax ]
pop esi
pop ebx
leave
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_4102bf
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_40d1f8
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_4115fb
lea esi [ esi + eax * 2 ]
pop ecx
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_40a8c6
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_4115fb
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_40d1f8
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_40a8c6
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40b040
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40c9e1
int3
add edi 0x4
sub_4103ae
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_4103ee
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_410488
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_4104a8
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_4104c8
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_40d242
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_40de40
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_41057f
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_4105a1
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
leave
retn
movzx eax [ ebp - 0x14 ]
leave
retn
sub_4105c2
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_410600
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_410878
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_4108cd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_410955
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40c27b
sub_410901
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_40a8c6
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_410955
push 0x8
push r--data
call sub_40cca0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_40c525
push 0x1e
call sub_40c582
push 0xff
call sub_40c265
xor eax eax
inc eax
push 0x18
call sub_40d242
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_40c0e7
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_40a8c6
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_40cce5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4109f3
sub_4109fc
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_410a50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_410aa0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40cd00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_410b60
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_410a50
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410b60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_410c76
push 0x24
push r--data
call sub_40cca0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_40fd27
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_410e2b
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_40c346
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_40cce5
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_4108cd
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410df1
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_410e2b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_410e85
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_410ebf
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_40d13f
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_410f2b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_40d4a0
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_410f94
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_41389f
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_41376f
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_41376f
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_411122
push 0xc
push r--data
call sub_40cca0
call sub_40fd0f
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4111be
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40cce5
retn
push 0x20
call sub_40c27b
cmp esi rw-data
je r-xdata
push esi
call sub_40a8c6
pop ecx
sub_4111c7
push 0x10
push r--data
call sub_40cca0
or edi 0xffffffff
call sub_40fd0f
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_411122
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_410ebf
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_40d242
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_40cce5
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_411375
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40a8c6
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_40a8c6
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_4108cd
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41133f
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_40a8c6
pop ecx
sub_411375
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_410ebf
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_410f2b
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40d4a0
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_410e85
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_410f94
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40d4a0
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_410f2b
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_410e85
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_411570
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_411614
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_40c0e7
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_40c0e7
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
sub_4116d2
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_4105c2
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40a8b7
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_4118b4
push 0x10
push r--data
call sub_40cca0
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411948
mov eax edi
call sub_40cce5
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_40bb67
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40a8c6
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_411951
push ebp
mov ebp esp
sub esp 0x1c
push esi
call sub_4105c2
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1c ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
call sub_4105c2
test eax eax
mov eax [ ebp + 0x1c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_4119e2
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40c9e1
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_413a91
pop ecx
test eax eax
jne r-xdata
mov eax ecx
and eax 0x3
mov edx 0xc0000000
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_40c0b3
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_40c0e7
push 0x16
pop ebx
mov [ eax ] ebx
call sub_40c9d1
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
and eax 0x700
mov esi 0x400
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
leave
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
or [ ebp - 0xc ] 0x4
mov eax 0x4000000
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_40c0b3
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_40c0e7
push 0x16
pop ebx
mov [ eax ] ebx
call sub_40c9d1
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_412abe
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
mov [ eax ] 0x1
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_411951
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_40c0b3
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_40c0e7
mov [ eax ] 0x18
call sub_40c0e7
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_40c0c6
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_40c0c6
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_40c0e7
mov ebx [ eax ]
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and ecx 0x7fffffff
push esi
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp + 0x10 ]
call sub_411951
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_412d50
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or dl 0x1
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
mov [ ebp - 0x1 ] dl
and [ eax + ecx + 0x24 ] 0x80
mov ecx [ ebp + 0x14 ]
mov al dl
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
mov ecx [ eax * 4 + rw-data ]
shl edx 0x6
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov ecx [ ebp + 0x14 ]
mov eax esi
sar eax 0x5
and esi 0x1f
mov edx [ eax * 4 + rw-data ]
shl esi 0x6
shr ecx 0x10
mov al [ edx + esi + 0x24 ]
shl cl 0x7
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_40f177
mov ecx eax
and ecx edx
add esp 0x10
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] edx
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
mov [ ebp - 0x24 ] ebx
call sub_40d638
add esp 0xc
test eax eax
jne r-xdata
call sub_40c0b3
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and esi 0x7fffffff
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_411951
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_40f177
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_40f697
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edx 0x6
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_40c0c6
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_412c63
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_4138dd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_40d638
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_40f177
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_40f177
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_40f697
pop ecx
call sub_40c0e7
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_40e484
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_40f177
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_40f177
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_40f177
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_412140
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412160
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40a8b7
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4121a5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4121a5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_412160
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_412255
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_412274
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41224c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_412255
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_412277
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c9d1
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_4122cb
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_40d242
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_412311
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_4123a1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_40a8c6
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_40a8c6
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_40a8c6
push [ esi + 0x88 ]
call sub_40a8c6
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_413ceb
push [ esi + 0x9c ]
call sub_40a8c6
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40a8c6
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40a8c6
push [ ebx ]
call sub_40a8c6
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_40a8c6
push [ esi + 0x84 ]
call sub_40a8c6
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40a8c6
push [ esi + 0x84 ]
call sub_413b88
pop ecx
pop ecx
push eax
call sub_40a8c6
pop ecx
push eax
call sub_40a8c6
push [ esi + 0x84 ]
call sub_413c84
pop ecx
pop ecx
sub_4124fb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_412596
push 0xc
push r--data
call sub_40cca0
call sub_40fd0f
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_412612
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412609
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40fd0f
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40cce5
retn
push 0x20
call sub_40c27b
sub_412612
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_412311
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_4124fb
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_4123a1
pop ecx
sub_41265d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40d13f
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4126a4
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40d13f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41265d
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40c0e7
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_4127b0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_412845
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40a8fe
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40a8c6
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40c150
pop ecx
call sub_40c0e7
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_40c0e7
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40c0fa
pop ecx
mov [ esi ] eax
push esi
call sub_40c150
pop ecx
test eax eax
je r-xdata
call sub_40c0e7
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40c0fa
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_4128f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40c0e7
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_40c150
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_412a32
push 0x8
push r--data
call sub_40cca0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_40cce5
retn
push 0xa
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412ab5
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_412abe
push 0x18
push r--data
call sub_40cca0
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_410955
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412c5a
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_40cce5
retn
push 0x40
push 0x20
call sub_40d1f8
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_412a32
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_4108cd
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_412b92
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_412c63
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_412ce9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0b3
and [ eax ] 0x0
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c9d1
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_412d50
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c0b3
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
sar ebx 0x5
mov edi ecx
mov eax [ ebx * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_412dd2
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_412df8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40a8c6
pop ecx
sub_412e16
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_412eda
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_412e64
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_412e16
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_412e8e
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412e64
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_412eda
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_412f48
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_4140b3
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_412f89
push 0x14
push r--data
call sub_40cca0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_40c0e7
mov [ eax ] 0x9
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x9
call sub_40c9d1
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_412a32
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_40c0e7
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_412ce9
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_40cce5
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41304e
mov eax esi
jmp r-xdata
call sub_40c0b3
mov [ eax ] esi
sub_413070
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4130a4
push 0x8
push r--data
call sub_40cca0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_40cce5
retn
push 0xc
call sub_4108cd
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_412612
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4130ed
sub_4130f6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40c0e7
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_40c0e7
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
sub_41314b
push 0x14
push r--data
call sub_40cca0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_40c0e7
push 0x16
pop esi
mov [ eax ] esi
call sub_40c9d1
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_40cce5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_413212
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4131e6
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_4131e6
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_412dd2
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_413212
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_40c183
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4119e2
push [ ebp - 0x4 ]
mov esi eax
call sub_40a8c6
add esp 0x20
mov eax esi
pop esi
leave
retn
or eax 0xffffffff
leave
retn
sub_413294
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_40d13f
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ eax + 0x8 ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4140e0
add esp 0xc
mov edx eax
jmp r-xdata
pop esi
leave
retn
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
mov edx 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
pop edi
pop ebx
je r-xdata
movzx ecx [ ebx ]
mov edx [ ebp - 0x10 ]
dec esi
mov eax ecx
inc ebx
test [ eax + edx + 0x19 ] 0x4
push 0x0
mov [ ebp - 0x4 ] ebx
pop edx
je r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
movzx ebx [ edi ]
mov edx [ ebp - 0x10 ]
mov eax ebx
inc edi
test [ eax + edx + 0x19 ] 0x4
push 0x0
pop edx
je r-xdata
test esi esi
jne r-xdata
cmp bx cx
jne r-xdata
test esi esi
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ edi ]
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ eax + ebx + 0x19 ] 0x4
jne r-xdata
sbb edx edx
and edx 0x2
dec edx
test cx cx
je r-xdata
mov al [ edi ]
dec esi
test al al
je r-xdata
mov ebx edx
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
inc ebx
movzx ecx cx
mov [ ebp - 0x4 ] ebx
mov ecx edx
jmp r-xdata
mov al [ edi ]
movzx ebx al
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test esi esi
jne r-xdata
shl ebx 0x8
movzx eax al
or bx ax
movzx ebx bx
inc edi
jmp r-xdata
sub_4133c1
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_40d13f
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414158
add esp 0xc
mov edx eax
jmp r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
mov edx 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
movzx eax al
dec edi
inc esi
test [ eax + ecx + 0x19 ] 0x4
mov [ ebp - 0x8 ] esi
je r-xdata
mov si [ ebp - 0x4 ]
movzx eax si
test [ eax + ecx + 0x19 ] 0x10
je r-xdata
test edi edi
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
movzx eax al
inc ebx
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
movzx eax [ eax + ecx + 0x119 ]
mov [ ebp - 0x4 ] eax
mov al [ esi ]
test al al
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] edx
test [ eax + ecx + 0x19 ] 0x4
jne r-xdata
mov ax [ ebp + 0x10 ]
movzx edx ax
push 0x0
test [ edx + ecx + 0x19 ] 0x10
mov [ ebp + 0x10 ] edx
pop edx
je r-xdata
test edi edi
jne r-xdata
shl [ ebp + 0x10 ] 0x8
movzx eax al
or [ ebp + 0x10 ] ax
mov eax [ ebp + 0x10 ]
movzx eax ax
inc esi
mov [ ebp - 0x8 ] esi
mov si ax
mov [ ebp - 0x4 ] eax
cmp si [ ecx + 0xc ]
jb r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov al [ ebx ]
movzx eax al
mov si dx
jmp r-xdata
cmp ax si
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax + ecx + 0x119 ]
mov al [ ebx ]
dec edi
test al al
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp si [ ecx + 0x12 ]
jb r-xdata
cmp si [ ecx + 0xe ]
ja r-xdata
mov si [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
sbb edx edx
and edx 0x2
dec edx
test si si
je r-xdata
shl [ ebp - 0x4 ] 0x8
movzx eax al
or [ ebp - 0x4 ] ax
mov eax [ ebp - 0x4 ]
movzx eax ax
inc ebx
mov [ ebp + 0x10 ] eax
cmp ax [ ecx + 0xc ]
jb r-xdata
mov ax [ ebp + 0x10 ]
cmp si [ ecx + 0x14 ]
ja r-xdata
add si [ ecx + 0x10 ]
jmp r-xdata
mov esi [ ebp - 0x8 ]
test edi edi
jne r-xdata
cmp ax [ ecx + 0x12 ]
jb r-xdata
cmp ax [ ecx + 0xe ]
ja r-xdata
add si [ ecx + 0x16 ]
jmp r-xdata
jmp r-xdata
cmp ax [ ecx + 0x14 ]
ja r-xdata
add ax [ ecx + 0x10 ]
jmp r-xdata
add ax [ ecx + 0x16 ]
jmp r-xdata
sub_413586
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_412df8
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_412e8e
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_40a8fe
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_414070
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_412e8e
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_412e8e
add esp 0x18
jmp r-xdata
push esi
call sub_412df8
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_40a8fe
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_414070
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41376f
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d13f
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_413586
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4137b3
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40a8b7
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_40d4a0
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_412df8
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_40a8fe
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_414070
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41389f
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40d13f
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4137b3
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4138dd
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_40f177
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
add esp 0x10
mov [ ebp - 0x14 ] ecx
cmp eax 0xffffffff
je r-xdata
call sub_40c0e7
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_40f177
mov ecx eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_40f177
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40f177
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_413abb
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_40c0e7
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_412ce9
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
and ecx eax
mov [ ebp - 0x8 ] eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_40c0e7
mov [ eax ] 0xd
call sub_40c0b3
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_40c0b3
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_40c0e7
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_413abb
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_40e566
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_413a91
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
push 0x16
pop eax
pop ebp
retn
sub_413abb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_413b88
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
push eax
call sub_40a8c6
pop ecx
sub_413c84
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40a8c6
pop ecx
push eax
call sub_40a8c6
pop ecx
sub_413ceb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40a8c6
push [ esi + 0x8 ]
call sub_40a8c6
push [ esi + 0xc ]
call sub_40a8c6
push [ esi + 0x10 ]
call sub_40a8c6
push [ esi + 0x14 ]
call sub_40a8c6
push [ esi + 0x18 ]
call sub_40a8c6
push [ esi ]
call sub_40a8c6
push [ esi + 0x20 ]
call sub_40a8c6
push [ esi + 0x24 ]
call sub_40a8c6
push [ esi + 0x28 ]
call sub_40a8c6
push [ esi + 0x2c ]
call sub_40a8c6
push [ esi + 0x30 ]
call sub_40a8c6
push [ esi + 0x34 ]
call sub_40a8c6
push [ esi + 0x1c ]
call sub_40a8c6
push [ esi + 0x38 ]
call sub_40a8c6
push [ esi + 0x3c ]
call sub_40a8c6
add esp 0x40
push [ esi + 0x40 ]
call sub_40a8c6
push [ esi + 0x44 ]
call sub_40a8c6
push [ esi + 0x48 ]
call sub_40a8c6
push [ esi + 0x4c ]
call sub_40a8c6
push [ esi + 0x50 ]
call sub_40a8c6
push [ esi + 0x54 ]
call sub_40a8c6
push [ esi + 0x58 ]
call sub_40a8c6
push [ esi + 0x5c ]
call sub_40a8c6
push [ esi + 0x60 ]
call sub_40a8c6
push [ esi + 0x64 ]
call sub_40a8c6
push [ esi + 0x68 ]
call sub_40a8c6
push [ esi + 0x6c ]
call sub_40a8c6
push [ esi + 0x70 ]
call sub_40a8c6
push [ esi + 0x74 ]
call sub_40a8c6
push [ esi + 0x78 ]
call sub_40a8c6
push [ esi + 0x7c ]
call sub_40a8c6
add esp 0x40
push [ esi + 0x80 ]
call sub_40a8c6
push [ esi + 0x84 ]
call sub_40a8c6
push [ esi + 0x88 ]
call sub_40a8c6
push [ esi + 0x8c ]
call sub_40a8c6
push [ esi + 0x90 ]
call sub_40a8c6
push [ esi + 0x94 ]
call sub_40a8c6
push [ esi + 0x98 ]
call sub_40a8c6
push [ esi + 0x9c ]
call sub_40a8c6
push [ esi + 0xa0 ]
call sub_40a8c6
push [ esi + 0xa4 ]
call sub_40a8c6
push [ esi + 0xa8 ]
call sub_40a8c6
push [ esi + 0xb8 ]
call sub_40a8c6
push [ esi + 0xbc ]
call sub_40a8c6
push [ esi + 0xc0 ]
call sub_40a8c6
push [ esi + 0xc4 ]
call sub_40a8c6
push [ esi + 0xc8 ]
call sub_40a8c6
add esp 0x40
push [ esi + 0xcc ]
call sub_40a8c6
push [ esi + 0xb4 ]
call sub_40a8c6
push [ esi + 0xd4 ]
call sub_40a8c6
push [ esi + 0xd8 ]
call sub_40a8c6
push [ esi + 0xdc ]
call sub_40a8c6
push [ esi + 0xe0 ]
call sub_40a8c6
push [ esi + 0xe4 ]
call sub_40a8c6
push [ esi + 0xe8 ]
call sub_40a8c6
push [ esi + 0xd0 ]
call sub_40a8c6
push [ esi + 0xec ]
call sub_40a8c6
push [ esi + 0xf0 ]
call sub_40a8c6
push [ esi + 0xf4 ]
call sub_40a8c6
push [ esi + 0xf8 ]
call sub_40a8c6
push [ esi + 0xfc ]
call sub_40a8c6
push [ esi + 0x100 ]
call sub_40a8c6
push [ esi + 0x104 ]
call sub_40a8c6
add esp 0x40
push [ esi + 0x108 ]
call sub_40a8c6
push [ esi + 0x10c ]
call sub_40a8c6
push [ esi + 0x110 ]
call sub_40a8c6
push [ esi + 0x114 ]
call sub_40a8c6
push [ esi + 0x118 ]
call sub_40a8c6
push [ esi + 0x11c ]
call sub_40a8c6
push [ esi + 0x120 ]
call sub_40a8c6
push [ esi + 0x124 ]
call sub_40a8c6
push [ esi + 0x128 ]
call sub_40a8c6
push [ esi + 0x12c ]
call sub_40a8c6
push [ esi + 0x130 ]
call sub_40a8c6
push [ esi + 0x134 ]
call sub_40a8c6
push [ esi + 0x138 ]
call sub_40a8c6
push [ esi + 0x13c ]
call sub_40a8c6
push [ esi + 0x140 ]
call sub_40a8c6
push [ esi + 0x144 ]
call sub_40a8c6
add esp 0x40
push [ esi + 0x148 ]
call sub_40a8c6
push [ esi + 0x14c ]
call sub_40a8c6
push [ esi + 0x150 ]
call sub_40a8c6
push [ esi + 0x154 ]
call sub_40a8c6
push [ esi + 0x158 ]
call sub_40a8c6
push [ esi + 0x15c ]
call sub_40a8c6
push [ esi + 0x160 ]
call sub_40a8c6
add esp 0x1c
sub_4140e0
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_414158
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4141c3
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_414280
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
mov eax esi
jmp r-xdata
sub_4141c3
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40d13f
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_40c0e7
mov [ eax ] 0x16
call sub_40c9d1
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
sub edi ebx
push ecx
push ebx
push edi
call sub_414280
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4142e1
mov esi eax
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4142e1
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_414280
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4142e1
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_40d13f
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_40c0e7
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_41265d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_414422
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41376f
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_414422
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_40d13f
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_41265d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41389f
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4144d1
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_4144fb
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_41457b
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f7c4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40a8c6
pop ecx
sub_41459a
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_40f786
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40f88e
int3
sub_4145cb
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40f761
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40f88e
int3
sub_4145f9
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40f761
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40f88e
int3
sub_414634
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41466a
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40a8b7
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_4156e2
add esp 0x20
pop esi
pop ebp
retn
sub_41469b
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40a8b7
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4156e2
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41479d
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_414921
pop ebx
leave
retn
sub_414738
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41466a
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_414a50
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41479d
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_41469b
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_40fd0f
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
sub_414872
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push esi
mov esi [ eax + 0xc ]
push edi
mov [ ebp - 0x8 ] ecx
mov edi esi
mov [ ebp - 0x4 ] esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_410bb0
cmp esi edi
jbe r-xdata
dec esi
mov eax esi
imul eax eax 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_410bb0
imul esi esi 0x14
pop edi
lea eax [ ecx + esi ]
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_4148f1
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_414921
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_414974
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_40fd0f
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_40fd0f
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_41499e
push ebp
mov ebp esp
push esi
call sub_40fd0f
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40fd0f
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_40fd0f
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_410bb0
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_4149ee
push ebp
mov ebp esp
call sub_40fd0f
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_414a17
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4156e2
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_414a50
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41224c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41224c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_414a9c
push 0x8
push r--data
call sub_40cca0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_40cce5
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_414796
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_414b4d
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40f7c4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40a8c6
pop ecx
sub_414b72
push 0x30
push r--data
call sub_40cca0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_414974
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_40fd0f
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_40fd0f
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_40fd0f
mov [ eax + 0x88 ] esi
call sub_40fd0f
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_414738
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_414cc1
mov eax edi
call sub_40cce5
retn
sub_414c11
mov esp [ ebp - 0x18 ]
call sub_40fd0f
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push edx
push ebx
push edi
call sub_415609
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_414cc1
mov eax edi
call sub_40cce5
retn
mov esi eax
imul esi esi 0x14
mov edi [ edx + 0x10 ]
cmp ecx [ esi + edi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov eax ebx
mov [ ebp - 0x24 ] eax
cmp [ edx + 0xc ] eax
jbe r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov edx [ ebp + 0x18 ]
cmp ecx [ esi + edx + 0x8 ]
mov edx [ ebp + 0x14 ]
jg r-xdata
imul eax eax 0x14
mov ecx [ edx + 0x10 ]
mov eax [ eax + ecx + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov ecx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
sub_414cc1
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_41499e
pop ecx
call sub_40fd0f
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_40fd0f
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_4149ee
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_414a9c
pop ecx
pop ecx
jmp r-xdata
sub_414d80
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_4153a8
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_4148f1
call sub_414921
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_415609
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_414b72
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_414dfb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40fd0f
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_414e48
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
cmp [ edi + 0x4 ] 0x80
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_410bb0
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40fd0f
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_410bb0
call sub_410be8
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_4151e3
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40fd0f
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_40fd0f
mov esi [ eax + 0x88 ]
call sub_40fd0f
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x24 ] 0x1
call sub_41581e
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_410bb0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_414872
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_40fd0f
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_414a9c
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_40fd0f
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_40fd0f
push [ ebp - 0x14 ]
mov [ eax + 0x94 ] ebx
push esi
call sub_4152fd
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
mov [ ebp - 0x20 ] edi
test edi edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_410bb0
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_4152fd
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_414a9c
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp + 0x18 ] r--data
call sub_40f761
push r--data
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x3c ] r--data
call sub_40f88e
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_40fd0f
call sub_40fd0f
call sub_40fd0f
mov [ eax + 0x88 ] esi
call sub_40fd0f
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_40babe
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_4157c1
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
add ecx 0x10
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
test eax eax
jg r-xdata
call sub_414921
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_415609
add esp 0x10
push [ edi + 0x1c ]
call sub_414d40
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_414d80
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
dec eax
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_4151e3
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
leave
retn
push ebx
push esi
call sub_40fd0f
cmp [ eax + 0x80 ] 0x0
mov ebx [ ebp + 0x18 ]
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_40fd0f
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_414872
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add esp 0x14
cmp ecx edx
jae r-xdata
call sub_410bb0
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41479d
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_414d80
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add esp 0x2c
sub_4152fd
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_410bb0
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_4157c1
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_415383
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_4153a8
push 0x8
push r--data
call sub_40cca0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_415383
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_414796
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_415436
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cce5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_415383
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_414796
jmp r-xdata
sub_415436
push 0xc
push r--data
call sub_40cca0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov edi [ ebp + 0xc ]
test edx edx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
push 0x1
test dl 0x8
je r-xdata
add edi 0xc
add edi ecx
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410bb0
push 0x1
push edi
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov [ edi ] ecx
mov eax [ ebp + 0x14 ]
add eax 0x8
push eax
push ecx
push 0x1
push edi
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41581e
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_40a990
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
push [ esi + 0x18 ]
call sub_41581e
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_415383
pop ecx
pop ecx
push eax
push edi
call sub_40a990
add esp 0xc
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
call sub_40cce5
retn
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_415383
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_4155bb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_40fd0f
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40fd0f
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_40fd0f
and [ eax + 0x90 ] 0x0
jmp sub_410be8
sub_415609
push 0x10
push r--data
call sub_40cca0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4156c8
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40fd0f
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_40cce5
retn
call sub_410bb0
call sub_410bb0
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_414a50
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4156e2
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40fd0f
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
xor esi esi
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_414e48
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_415609
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4157c1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_40f4d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_415830
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_415850
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_415b90
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_407c90
push ecx
call sub_408360
lea ecx [ ebp - 0x1 ]
call sub_407c90
push esi
call j_sub_40a8c6
add esp 0x4
pop esi
sub_415bf0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_407c90
push ecx
call sub_408360
lea ecx [ ebp - 0x1 ]
call sub_407c90
push esi
call j_sub_40a8c6
add esp 0x4
pop esi
sub_415c50
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_407c90
push ecx
call sub_408360
lea ecx [ ebp - 0x1 ]
call sub_407c90
push esi
call j_sub_40a8c6
add esp 0x4
pop esi
sub_415cb0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_407c90
push ecx
call sub_408360
lea ecx [ ebp - 0x1 ]
call sub_407c90
push esi
call j_sub_40a8c6
add esp 0x4
pop esi
sub_401220
push ebp
mov ebp esp
pop ebp
jmp sub_401180
sub_401fd0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_401f00
add esp 0x4
pop ebp
retn
sub_4052d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add [ ecx + 0x14 ] eax
xor eax eax
pop ebp
retn
sub_405330
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov [ eax + 0x14 ] 0x0
mov eax [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x4 ]
pop ebp
jmp eax
sub_4059a0
mov [ ecx + 0x78 ] 0x0
mov [ ecx + 0x80 ] 0x1
mov [ ecx + 0x84 ] 0x1
mov [ ecx + 0x88 ] 0x1
mov [ ecx + 0x24 ] 0x0
mov [ ecx + 0x4c ] 0x1
mov [ ecx + 0x48 ] 0x0
mov [ ecx + 0x58 ] 0x0
mov [ ecx + 0x2c ] 0x0
mov [ ecx + 0x30 ] 0x0
mov [ ecx + 0x50 ] 0x1
retn
sub_407620
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4076a0
mov eax r--data
retn
sub_407720
mov eax r--data
retn
sub_407780
mov eax r--data
retn
sub_407840
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
push [ esi ]
call j_sub_40a8c6
add esp 0x4
sub_408360
retn 0x4
sub_40b105
call sub_40c3d9
retn
sub_40b1c1
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40b0cb
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40b399
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40b3b4
add esp 0x14
pop ebp
retn
sub_40b43d
push esi
call sub_40cb1b
pop ecx
retn
sub_40b445
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_40c582
push 0x1
push 0x0
call sub_40ddc7
add esp 0xc
jmp sub_40dde6
call eax
j_sub_40a8c6
jmp sub_40a8c6
sub_40b641
push esi
call sub_40cb1b
pop ecx
retn
sub_40baa8
push esi
call sub_40cb1b
pop ecx
retn
sub_40bab0
push ecx
mov [ ecx ] r--data
call sub_40f55c
pop ecx
retn
sub_40bbd6
push esi
call sub_40cb1b
pop ecx
retn
sub_40bbde
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f7a1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40bbf9
mov [ ecx ] r--data
jmp sub_40f7c4
sub_40bd34
push esi
call sub_40cb1b
pop ecx
retn
sub_40bd3c
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bc78
add esp 0xc
pop ebp
retn
sub_40bdc6
call sub_40fd0f
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_40bde9
push ebp
mov ebp esp
call sub_40fd0f
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_40bf0c
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_40ff2b
pop ecx
pop ecx
retn
sub_40bf20
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40c297
push esi
call sub_40c346
sub_40bf3a
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_40cce5
retn
sub_40bf49
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_40c582
push 0xff
call sub_40c265
call sub_40c525
_start
call sub_4103ee
jmp sub_40bdf9
sub_40c13b
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_40c176
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c265
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40c233
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40c27b
push ebp
mov ebp esp
call sub_40c525
push [ ebp + 0x8 ]
call sub_40c582
pop ecx
push 0xff
call sub_40c346
int3
sub_40c297
push 0x1
push 0x1
push 0x0
call sub_40c3e2
add esp 0xc
retn
sub_40c2a6
push 0x1
push 0x0
push 0x0
call sub_40c3e2
add esp 0xc
retn
sub_40c346
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40c3e2
add esp 0xc
pop ebp
retn
sub_40c3d0
push 0x8
call sub_4108cd
pop ecx
retn
sub_40c3d9
push 0x8
call sub_410a31
pop ecx
retn
sub_40c4fc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_410a31
pop ecx
sub_40c511
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40c3e2
add esp 0xc
pop ebp
retn
sub_40c999
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40ca7f
call sub_40ee3a
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_40a8c6
and [ rw-data ] 0x0
pop ecx
retn
call sub_4118b4
sub_40cc91
push 0x1
call sub_410a31
pop ecx
retn
sub_40cce5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40cf76
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40cea0
add esp 0xc
pop ebp
retn 0x4
sub_40cfa9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_412255
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40cfdb
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40cea0
add esp 0xc
pop ebp
retn 0x8
sub_40d60f
push esi
call sub_412dd2
pop ecx
retn
sub_40ddc7
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_40de29
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40e53d
push esi
call sub_412dd2
pop ecx
retn
sub_40ee3a
push 0x1
call sub_40ee43
pop ecx
retn
sub_40eeeb
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40cb55
pop ecx
pop ecx
retn
sub_40ef1e
push 0x1
call sub_410a31
pop ecx
retn
sub_40efe0
push esi
call sub_412dd2
pop ecx
retn
sub_40f14d
push edi
call sub_412dd2
pop ecx
retn
sub_40f4c0
push 0xb
call sub_410a31
pop ecx
retn
sub_40f5c4
push 0xe
call sub_410a31
pop ecx
retn
sub_40f66e
push esi
call sub_412dd2
pop ecx
retn
sub_40f786
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x0
mov eax ecx
pop ebp
retn 0x8
sub_40f7c4
mov [ ecx ] r--data
jmp sub_40f865
sub_40f865
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_40a8c6
pop ecx
sub_40f881
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40fcfa
push 0xd
call sub_410a31
pop ecx
retn
sub_40fd06
push 0xc
call sub_410a31
pop ecx
retn
sub_40fe37
push 0xd
call sub_410a31
pop ecx
retn
sub_40fe40
push 0xc
call sub_410a31
pop ecx
retn
sub_40febf
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_410901
push eax
call sub_410541
or [ rw-data ] 0xffffffff
pop ecx
sub_40ff1d
push sub_40fedc
call sub_41083f
pop ecx
xor eax eax
retn
sub_4103a1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_410523
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_410541
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_410560
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41083f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_41084d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_410862
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_4108c5
and [ rw-data ] 0x0
retn
sub_4109f3
push 0xa
call sub_410a31
pop ecx
retn
sub_410a31
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_410b29
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_410b91
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_410bd4
xor eax eax
inc eax
retn
sub_410be8
push 0x8
push r--data
call sub_40cca0
call sub_40fd0f
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40dde6
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_410c08
xor eax eax
inc eax
retn
sub_410c1c
call sub_40fd0f
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_410be8
call eax
sub_410c2f
push sub_410be8
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_410c40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_410c4d
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_410c5a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_410df1
test ebx ebx
je r-xdata
retn
push 0x0
call sub_410a31
pop ecx
sub_410e67
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4111c7
pop ecx
mov [ rw-data ] 0x1
sub_4111be
push 0xd
call sub_410a31
pop ecx
retn
sub_41133f
push 0xd
call sub_410a31
pop ecx
retn
sub_4115fb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_411948
push 0x1
call sub_410a31
pop ecx
retn
sub_412229
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_412160
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_412274
call eax
retn
sub_412609
push 0xc
call sub_410a31
pop ecx
retn
sub_412693
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41265d
pop ecx
pop ecx
pop ebp
retn
sub_412797
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4126a4
add esp 0x10
pop ebp
retn
sub_412ab5
push 0xa
call sub_410a31
pop ecx
retn
sub_412b92
push 0xa
call sub_410a31
pop ecx
retn
sub_412c5a
push 0xb
call sub_410a31
pop ecx
retn
sub_41304e
push edi
call sub_412dd2
pop ecx
retn
sub_4130ed
push 0xc
call sub_410a31
pop ecx
retn
sub_41325e
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41314b
add esp 0x18
pop ebp
retn
sub_41327c
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413294
add esp 0x10
pop ebp
retn
sub_4133a9
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4133c1
add esp 0x10
pop ebp
retn
sub_41357d
push 0x2
call sub_40c27b
sub_414070
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40f1f0
sub_414086
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40f1f0
sub_41409c
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4140b3
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_414525
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f7a1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_414540
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f7a1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41455b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f7a1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
j_sub_40f7c4
jmp sub_40f7c4
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_414afc
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_414b05
mov esp [ ebp - 0x18 ]
call sub_410be8
sub_414b27
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40f7a1
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_414b42
mov [ ecx ] r--data
jmp sub_40f7c4
sub_414c07
push [ ebp - 0x14 ]
call sub_414dfb
pop ecx
retn
sub_414d40
push 0x4
mov eax sub_415870
call sub_414634
call sub_40fd0f
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_410c1c
call sub_410bb0
sub_415429
xor eax eax
inc eax
retn
sub_41542d
mov esp [ ebp - 0x18 ]
call sub_410be8
sub_4155a7
xor eax eax
inc eax
retn
sub_4155ab
mov esp [ ebp - 0x18 ]
call sub_410be8
sub_41568a
push [ ebp - 0x14 ]
call sub_4155bb
pop ecx
retn
sub_4156c8
call sub_40fd0f
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40fd0f
dec [ eax + 0x90 ]
sub_41581e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_415870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_415890
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_4158b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_4158d0
lea ecx [ ebp + 0x8 ]
jmp sub_4078d0
sub_4158d8
lea ecx [ ebp - 0x230 ]
jmp sub_4078d0
sub_4158e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_40a8b7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_415910
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_4078d0
sub_415929
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_415950
lea ecx [ ebp - 0x644 ]
jmp sub_4078d0
sub_41595b
lea ecx [ ebp - 0x65c ]
jmp sub_4078d0
sub_415966
lea ecx [ ebp - 0x674 ]
jmp sub_4078d0
sub_415971
lea ecx [ ebp - 0x65c ]
jmp sub_4078d0
sub_41597c
lea ecx [ ebp - 0x65c ]
jmp sub_4078d0
sub_415987
lea ecx [ ebp - 0x674 ]
jmp sub_4078d0
sub_415992
lea ecx [ ebp - 0x65c ]
jmp sub_4078d0
sub_41599d
lea ecx [ ebp - 0x65c ]
jmp sub_4078d0
sub_4159a8
lea ecx [ ebp - 0x674 ]
jmp sub_4078d0
sub_4159b3
lea ecx [ ebp - 0x674 ]
jmp sub_4078d0
sub_4159be
lea ecx [ ebp - 0x65c ]
jmp sub_4078d0
sub_4159c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x680 ]
xor ecx eax
call sub_40a8b7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_415a00
lea ecx [ ebp - 0x24c ]
jmp sub_4078d0
sub_415a0b
lea ecx [ ebp - 0x230 ]
jmp sub_4078d0
sub_415a16
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_40a8b7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_415a40
lea ecx [ ebp - 0x9c ]
jmp sub_4078d0
sub_415a4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_40a8b7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_415a80
lea ecx [ ebp - 0x2c ]
jmp sub_407840
sub_415a88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40a8b7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40a8b7
mov eax r--data
jmp sub_414a17
sub_415ab0
push sub_415b80
call sub_40b1c1
pop ecx
retn
sub_415ac0
push sub_415b70
call sub_40b1c1
pop ecx
retn
sub_415ad0
push sub_415b60
call sub_40b1c1
pop ecx
retn
sub_415ae0
push 0x0
push r--data
mov ecx rw-data
call sub_407b90
push sub_415b90
call sub_40b1c1
pop ecx
retn
sub_415b00
push 0x0
push r--data
mov ecx rw-data
call sub_407b90
push sub_415bf0
call sub_40b1c1
pop ecx
retn
sub_415b20
push 0x0
push r--data
mov ecx rw-data
call sub_407b90
push sub_415c50
call sub_40b1c1
pop ecx
retn
sub_415b40
push 0x0
push r--data
mov ecx rw-data
call sub_407b90
push sub_415cb0
call sub_40b1c1
pop ecx
retn
sub_415b60
mov [ rw-data ] r--data
retn
sub_415b70
mov [ rw-data ] r--data
retn
sub_415b80
mov [ rw-data ] r--data
retn
