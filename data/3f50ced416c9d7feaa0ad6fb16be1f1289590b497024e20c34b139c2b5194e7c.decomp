sub_1010f59a
pushfd
lea esp [ esp + 0x30 ]
jae rwxdata
dec bl
inc ecx
clc
jmp rwxdata
mov esi edi
test si cx
bt dx 0x9
sub esi eax
jmp sub_101d00e1
jmp rwxdata
test al ah
cmp ah 0x5
jmp rwxdata
pushfd
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
dec bl
xchg ebp eax
lahf
mov eax ebp
mov bl dh
shr bl 0x4
mov bl 0x1
cmc
stc
push esi
shrd esi edx cl
jmp rwxdata
pushad
pushfd
cmp eax 0x7f
mov [ esp ] dx
pushad
call sub_1012aee3
sub_1010f660
je rwxdata
cmp ah cl
pushfd
or ah ah
push ebx
pushad
push 0xd2a60b1a
pushfd
lea esp [ esp + 0x30 ]
je rwxdata
test dl bh
cmp al ah
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
stc
push edi
mov [ esp ] 0xe530312d
cmp ah 0x2e
lea esp [ esp + 0x4 ]
pushad
call sub_1020016c
cmc
shl al cl
mov al 0x2e
cmp ecx 0x5a055bff
stc
pushad
stc
[ edi ]
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x4 ] 0xc2
lea esp [ esp + 0x44 ]
jne rwxdata
call sub_101ff997
bt si 0x7
add dl dl
call sub_10123afb
movzx eax bl
push esp
jmp rwxdata
mov [ edi - 0x1 ] 0x0
push edx
movsx ax bl
movsx eax al
lahf
mov [ esp + 0x4 ] ebx
movzx ax al
lea eax [ rwxdata ]
mov [ esp ] 0x15
mov [ esp ] rwxdata
pushad
pushfd
push edi
call sub_101d1384
movsb [ edi ] [ esi ]
int1
scasb [ edi ]
cdq
out 0x8 al
inc edi
or eax [ edx + 0x5290b89b ]
lodsb [ esi ]
jecxz rwxdata
out 0xf8 eax
jbe rwxdata
sbb eax 0x6c32d321
adc eax [ edx - 0x2fc2bec4 ]
aas
jno rwxdata
stosb [ edi ]
xchg ebp eax
push ecx
lea esi [ 0x5a891589 ]
int1
insd
mov eax [ 0x1665fa7d ]
mov [ ebx - 0x66 ] ebp
out dx al
cld
and ah [ ebx - 0x53 ]
cmp ebx [ ecx + 0x15ef12c ]
arpl [ ebp - 0xed366c5 ] bp
pop esi
add eax esi
adc eax 0xc495d469
push ss
aad 0xba
push esp
dec ebx
sub_1010f9f9
call sub_1011255b
xchg esp eax
xchg ebp eax
stosb [ edi ]
clc
out 0xf8 al
inc esi
fwait
imul edx [ ebp + 0x37fb4d85 ] 0x49312e88
xor eax 0x910d3d21
jge rwxdata
salc
ror [ ebx - 0x2a ] cl
or al 0xbd
xchg edi eax
sbb [ cs : ebp + 0x50 ] eax
mov ss [ ecx - 0x46592e13 ]
dec esi
xchg ecx eax
or eax 0xd67dc291
imul ecx [ ebx - 0x6ba4486 ] 0xb5f204d
dec esi
sbb edx 0x43
add [ ecx ] dl
xor ch [ eax + 0x5a8832b0 ]
stosd [ edi ]
add [ edx ] al
add al [ ebx ]
adc al 0xba
test al bl
push esp
sub cl [ ecx ]
cmp bl [ edx + 0x33 ]
dec ebx
xchg [ edx ] ah
salc
mov esp 0xb9e257d3
stosb [ edi ]
0x985f1f0d 0xccaf
sub_10110513
sub al 0x30
push 0xecd941e1
bt esi 0xd
stc
bt edi ecx
cmp al 0x9
lea esp [ esp + 0x8 ]
jpe rwxdata
call sub_10127644
lds eax [ eax - 0x21 ]
mov esi 0xd897a747
popad
rol [ ebx ] cl
adc [ eax ] bh
pushfd
and ebx [ edi + 0x42cc731f ]
fmul [ ecx - 0x6b ]
in eax 0x99
fiadd [ ecx - 0x3e223e03 ]
push ecx
or eax 0x1986f56a
ror [ ebp - 0x18 ] cl
push esi
inc esi
cmp [ edx + 0x21 ] edi
pushfd
mov [ esp ] 0x51c67f03
lea esp [ esp + 0x4 ]
ja rwxdata
0x6178
movsb [ edi ] [ esi ]
sbb al 0xda
cmp al 0x37
pop es
sbb ah ah
adc eax 0x6e1ea33a
adc [ esi + 0x65 ] esp
jpe rwxdata
call sub_101ff997
bt si 0x7
add dl dl
call sub_10123afb
clc
jmp rwxdata
call 0x49637305
jpe rwxdata
mov edx 0xb7255b44
cld
cmp [ edx - 0x63 ] ebp
adc [ ebx + 0x3011f510 ] 0xc5
mov [ ebx - 0x74 ] ecx
push edx
daa
imul edx edx 0xa
push 0x7d250cd9
call sub_1012bd04
sub [ esi ] dl
push edi
mov ecx 0x5ae3746b
adc cl bl
popfd
inc ecx
push ss
inc ebp
pop edx
imul ecx ebp 0x7f
mov al [ 0xffffffffc8b7e8f4 ]
fidiv [ esi - 0x46 ]
mov esp 0x130c3622
push esp
sub eax 0x3509c5b1
jbe rwxdata
adc [ eax ] esi
lds ecx [ ecx + 0x27528c4b ]
jle rwxdata
bound edi [ edi + ecx + 0x20 ]
iretd
mov esp 0xea954ad0
scasb [ edi ]
xor [ edi + edx - 0x78 ] al
fsubr [ ecx - 0x2b ]
sub ch [ ebx ]
adc dl cl
adc al 0x28
stosb [ edi ]
cmc
scasd [ edi ]
xchg esi eax
test al 0xe9
pop esp
xlat
mov esp 0x25193622
bound edi [ ss : edi + ecx + 0x20 ]
sub_101108bc
pushfd
jmp rwxdata
mov [ esp ] 0x96
and ebx 0xfff
jmp rwxdata
test dx ax
add [ ebx + edi ] dx
mov [ esp ] ch
push 0x8a19afd
lea esp [ esp + 0xc ]
jmp rwxdata
push edx
test si sp
add esi 0x2
pushad
dec ecx
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
shr bh 0x7
btr bx bp
or bh dl
mov bx [ esi ]
push 0xe34678d9
shr ebx 0xc
cmp esp 0x6ccd04e3
call sub_101fc5b3
bsf cx dx
rcr ch cl
movzx cx dl
mov ecx [ ebp - 0x4 ]
clc
stc
pushad
call sub_10114c57
lea esp [ esp + 0x28 ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_101131cc
sub_10110ba7
pushad
lea esp [ esp + 0x28 ]
je rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
pushfd
jmp rwxdata
push 0x887f9b47
push [ esp + 0x4 ]
mov [ ebp - 0x4 ] eax
push 0xca97c537
mov [ esp + 0xc ] eax
movsx ax bl
movzx ax cl
lea eax [ esp - 0xd97795b ]
mov [ esp + 0x8 ] 0x0
bswap ax
lea eax [ LocalAlloc@IAT ]
pushfd
mov [ esp + 0x8 ] rwxdata
jmp rwxdata
push [ eax ]
pop [ esp + 0x4 ]
pushad
pushad
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_10110dfc
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_1010f9f9
jmp rwxdata
mov esp esi
push eax
pushfd
push ecx
lea esp [ esp + 0xc ]
jmp rwxdata
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
sub_10110e0c
add [ ebx + edi ] ax
push [ esp + 0x4 ]
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
push edx
test si sp
add esi 0x2
pushad
dec ecx
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
shr bh 0x7
btr bx bp
or bh dl
mov bx [ esi ]
push 0xe34678d9
shr ebx 0xc
cmp esp 0x6ccd04e3
call sub_101fc5b3
bsf cx dx
rcr ch cl
movzx cx dl
mov ecx [ ebp - 0x4 ]
clc
stc
pushad
call sub_10114c57
lea esp [ esp + 0x28 ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_101131cc
sub_10110eb6
cmp ecx [ ebp - 0x4 ]
mov [ esp + 0x4 ] 0x46a9b071
pushfd
lea esp [ esp + 0x2c ]
jae rwxdata
call sub_101146c3
jpe rwxdata
call j_sub_1010f9e7
sub edi ebx
pop edi
inc eax
jg rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
loopne rwxdata
xlat
sub al 0xd9
insb
push ss
cmp edi esp
popad
mov edi 0xc515e960
mov edx 0xe6789a05
xchg esp eax
0x2a742a94 0x3ae4
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
jae rwxdata
xor ax 0x6329
fstp st5
cdq
add eax 0x7b0ffec0
in al 0xf5
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
popad
ficom [ edi - 0x10 ]
push edx
jae rwxdata
mov ecx 0x79e1fda5
and eax 0x9de155ea
0x6914
adc al 0x69
loop rwxdata
insb
jbe rwxdata
sbb bh [ edx - 0x3f7bd1fc ]
call 0x6656a90b
out dx eax
jbe rwxdata
dec esi
push es
dec ecx
push esp
mov ecx 0xd44a7665
in eax 0x5e
jge rwxdata
dec edi
add [ ebp + 0x68 ] bh
jb rwxdata
add eax 0x2312ccd9
aad 0x9
popfd
fidivr [ ecx + esi * 2 - 0x25 ]
and al 0x76
dec eax
pop ecx
fcomp st4
loop rwxdata
mov al ch
mov ebx 0x5189d6a4
in eax dx
popad
arpl [ eax + 0x65 ] bp
add [ edx - 0x47394bd6 ] dl
jecxz rwxdata
or ecx [ esi - 0x5e ]
fnsave [ esi ]
jns rwxdata
pop ecx
sbb al 0x7b
popad
push ds
in al dx
adc ah [ 0xffffffffb4ca4b3a ]
push ss
cdq
add [ edx + 0x57 ] al
test [ ecx - 0x66 ] ebx
shr [ ebp + 0x69 ] 0xf
dec ecx
jecxz rwxdata
out dx al
sub dh bl
or ecx [ esi - 0x5e ]
cmpsb [ esi ] [ edi ]
shl [ esi - 0x32 ] cl
adc al 0xea
pushad
call [ ebx - 0x2a06d9f4 ]
dec ecx
xor al 0x4a
cmovg esi [ ebp - 0x70 ]
test eax 0xd91cdb2
sbb [ esi ] esp
add ebx [ ebx + 0x6c ]
jno rwxdata
xor [ edi + ebx * 8 + 0x2a ] dh
xchg ecx esp
jle rwxdata
cdq
inc ebp
push esi
or edi [ 0xffffffffda64ced1 ]
aas
test al 0x1a
imul esp esi 0x6c
adc ah bh
leave
cmc
push es
outsb
push eax
shr [ eax + 0xebd4e7 ] cl
add [ esi + ebp * 2 + 0x73 ] al
inc esi
insb
jne rwxdata
push 0x6f736552
sub_1011146e
lea esp [ esp + 0x4 ]
jle rwxdata
call sub_101d1bb4
retn
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

bswap ax
jmp rwxdata
setns al
mov ah 0xf8
mov eax [ edx + 0x8 ]
pushfd
mov [ esp ] 0x95
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_10111ac7
lea esp [ esp + 0x44 ]
jbe rwxdata
stc
test bp 0x544a
sub ecx [ edx + 0x10 ]
cmc
cmp ecx [ edx + 0x14 ]
push esi
pushfd
pushfd
lea esp [ esp + 0xc ]
jae rwxdata
xchg bx di
sub di si
mov edi [ edx + 0x24 ]
bts bx 0x1
add edi eax
shl bh cl
shl cl 0x6
mov ebx [ edx + 0x20 ]
bswap cx
btc ecx 0xf
dec ch
add ebx eax
sbb cx sp
mov [ ebp - 0x8 ] 0x0
and cl 0x4a
jmp sub_101fc860
call sub_101146c3
jpe rwxdata
push 0x228d4a21
lea esp [ esp + 0x4 ]
jmp rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
add di di
shl di 0xd
clc
sbb di 0xbde5
mov edi [ edx + 0x1c ]
stc
pushfd
bt bp 0xa
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
add edi eax
call sub_101d8293
fld [ eax ]
fist [ ebx - 0x15 ]
push ebx
sbb eax 0xa0be3322
loop rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
mov al 0x42
je rwxdata
je rwxdata
jmp rwxdata
sbb al 0x39
jno rwxdata
pop [ edx + 0x5d ]
cmc
sbb edx [ ebp - 0x24 ]
inc ecx
dec ebx
xor al 0x88
sbb al 0x75
and [ edx + 0x58 ] 0xec
push ebx
aaa
push 0x6c334857
add ecx [ edx ]
out dx eax
stosb [ edi ]
adc [ ebp + 0x49 ] 0xe2
xor [ eax + esi * 4 + 0x42 ] esi
cmp ecx [ ebp + eax * 8 - 0x5f ]
sahf
scasd [ edi ]
pop ds
and al 0x3b
and ecx [ edx ]
cmpsd [ esi ] [ edi ]
or bl [ ebx + 0x69d28c0b ]
fcomp st4
imul ecx edi 0x65
pop ds
sbb [ ebx + 0x34 ] 0x58
lodsd [ esi ]
push ebx
bound edx [ edi + 0x4c ]
cld
and al 0xfb
pop ss
inc edi
adc ecx [ ebx - 0x405f7ca5 ]
cli
test [ edx + 0x4f940a94 ] cl
jo rwxdata
in ax dx
push es
inc edx
aam 0x6b
iretd
xchg esp eax
dec eax
inc edi
js rwxdata
leave
neg [ ecx + 0x4c0b5426 ]
adc [ ebp + 0x6dc94c5c ] ebp
jne rwxdata
pop edx
pop ecx
outsb
xchg esp eax
mov ebp [ edx - 0x1a8ed16c ]
push eax
mov edx 0x7e806625
or esp [ esi ]
out 0x80 eax
daa
jae rwxdata
js rwxdata
mov eax [ 0xffffffff85070929 ]
test al 0x51
lea ecx [ eax ]
mov dh 0xc4
fwait
lodsb [ esi ]
clc
push ebx
scasd [ edi ]
and [ edx ] ah
scasb [ di ]
arpl [ ebx - 0x54 ] bx
mov [ 0x20f18dad ] eax
xchg [ edx + 0x62813d85 ] bl
pop ebp
stosb [ edi ]
xor eax 0x455a65da
adc [ ebp + 0x4e ] ecx
xor [ ecx ] eax
cmp eax 0x5d422916
inc ebp
cdq
rwxdata
imul esi [ ecx + 0x6e ] 0x94aa8b94
push eax
mov ds [ edi + 0x40d98559 ]
sti
fild [ eax + 0x5eacf29d ]
mov al [ 0xb5668b1 ]
pop esp
pop esi
popfd
popad
mov ch 0xb7
frstor [ ecx + 0x3d ]
jle rwxdata
dec esi
jmp rwxdata
shl [ esi - 0x13 ] 0x6
sub_10111dbe
mov [ esp ] 0xb7
lea esp [ esp + 0x28 ]
ja rwxdata
call sub_10112838
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
jb rwxdata
jmp sub_1011262c
pushfd
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp sub_10200147
movsx edi bl
mov edi [ edx + 0x24 ]
cmc
add edi eax
pushad
test bx 0x9677
movzx ecx [ edi + ecx * 2 ]
lea esp [ esp + 0x20 ]
add di di
shl di 0xd
clc
sbb di 0xbde5
mov edi [ edx + 0x1c ]
stc
pushfd
bt bp 0xa
jmp rwxdata
add edi eax
call sub_101d8293
fld [ eax ]
fist [ ebx - 0x15 ]
push ebx
sbb eax 0xa0be3322
loop rwxdata
mov al 0x42
je rwxdata
je rwxdata
jmp rwxdata
sbb al 0x39
jno rwxdata
pop [ edx + 0x5d ]
cmc
sbb edx [ ebp - 0x24 ]
inc ecx
dec ebx
xor al 0x88
sbb al 0x75
and [ edx + 0x58 ] 0xec
push ebx
aaa
push 0x6c334857
add ecx [ edx ]
out dx eax
stosb [ edi ]
adc [ ebp + 0x49 ] 0xe2
xor [ eax + esi * 4 + 0x42 ] esi
cmp ecx [ ebp + eax * 8 - 0x5f ]
sahf
scasd [ edi ]
pop ds
and al 0x3b
and ecx [ edx ]
cmpsd [ esi ] [ edi ]
or bl [ ebx + 0x69d28c0b ]
fcomp st4
imul ecx edi 0x65
pop ds
sbb [ ebx + 0x34 ] 0x58
lodsd [ esi ]
push ebx
bound edx [ edi + 0x4c ]
cld
and al 0xfb
pop ss
inc edi
adc ecx [ ebx - 0x405f7ca5 ]
cli
test [ edx + 0x4f940a94 ] cl
jo rwxdata
in ax dx
push es
inc edx
aam 0x6b
iretd
xchg esp eax
dec eax
inc edi
js rwxdata
leave
neg [ ecx + 0x4c0b5426 ]
adc [ ebp + 0x6dc94c5c ] ebp
jne rwxdata
pop edx
pop ecx
outsb
xchg esp eax
mov ebp [ edx - 0x1a8ed16c ]
push eax
mov edx 0x7e806625
or esp [ esi ]
out 0x80 eax
daa
jae rwxdata
js rwxdata
mov eax [ 0xffffffff85070929 ]
test al 0x51
lea ecx [ eax ]
mov dh 0xc4
fwait
lodsb [ esi ]
clc
push ebx
scasd [ edi ]
and [ edx ] ah
scasb [ di ]
arpl [ ebx - 0x54 ] bx
mov [ 0x20f18dad ] eax
xchg [ edx + 0x62813d85 ] bl
pop ebp
stosb [ edi ]
xor eax 0x455a65da
adc [ ebp + 0x4e ] ecx
xor [ ecx ] eax
cmp eax 0x5d422916
inc ebp
cdq
rwxdata
imul esi [ ecx + 0x6e ] 0x94aa8b94
push eax
mov ds [ edi + 0x40d98559 ]
sti
fild [ eax + 0x5eacf29d ]
mov al [ 0xb5668b1 ]
pop esp
pop esi
popfd
popad
mov ch 0xb7
frstor [ ecx + 0x3d ]
jle rwxdata
dec esi
jmp rwxdata
shl [ esi - 0x13 ] 0x6
sub_10111dfb
pushfd
neg dl
push 0xfae400bc
not dl
push 0x18aa3ae9
call sub_101fc67f
jmp rwxdata
lea esp [ esp + 0x48 ]
jne rwxdata
call sub_101ff997
bt si 0x7
add dl dl
call sub_10123afb
lahf
pushad
mov [ edi - 0x1 ] 0x0
lea eax [ ecx + 0x230bf6a9 ]
mov [ esp + 0x8 ] ch
pop eax
mov [ esp + 0x18 ] ebx
call sub_101d70ad
mov [ esp + 0x8 ] ebp
xchg [ esp + 0x24 ] eax
pushad
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x4 ] 0x35
lea eax [ LocalAlloc@IAT ]
pushfd
mov [ esp + 0x40 ] rwxdata
call sub_10129d80
pushad
mov [ esp ] 0xb3
mov [ esp ] dl
push 0x89476c00
lea esp [ esp + 0x24 ]
call sub_10110704
sub_10111ee4
push [ esp ]
call sub_101fc018
add [ eax ] al
inc ebx
outsd
insd
insd
popad
outsb
dec esp
imul ebp [ esi + 0x65 ] 0x72416f54
jbe rwxdata
arpl [ ss : edx - 0x3a ] ax
fcomp [ ebp + 0x133ccbd4 ]
pop edx
and [ ebx - 0x58e92934 ] ebp
pop esi
inc eax
faddp st0
fidivr [ ecx + 0x6 ]
add [ eax + 0x9 ] ch
jbe rwxdata
movsb [ edi ] [ esi ]
or al 0x93
cmp esp [ eax + 0x1a24c07f ]
out dx eax
int1
xor edx [ 0x188738cd ]
imul [ eax ]
out 0x58 eax
enter 0x8036 0x7e
clc
out dx al
pop edx
push 0xe72c6bc4
movsb [ edi ] [ esi ]
out 0xa eax
cmp bh ah
stosd [ edi ]
hlt
jo rwxdata
test al 0x9f
frstor [ ebp - 0x69a5b82d ]
fcmovnb st4
sub esp [ eax ]
jo rwxdata
cwde
out 0x28 eax
dec edi
xor [ ecx - 0x16 ] al
inc cl
dec esi
iretd
push es
push eax
jb rwxdata
movsb [ edi ] [ esi ]
lds ebx [ ecx - 0x46f0bb56 ]
out 0xfa al
outsd
out dx eax
add [ ecx - 0xb ] ch
add eax 0x58cc6a59
xchg [ eax - 0x7e253927 ] ebx
push ds
jno rwxdata
sbb [ esi ] al
mov ecx 0xbac3dce6
les esi [ eax ]
aad 0x84
fcmove st4
adc ah [ ebx + ebx + 0x6d1248f7 ]
je rwxdata
sbb al 0x62
scasb [ edi ]
jbe rwxdata
test [ eax - 0x32bafbe6 ] edx
xchg edx eax
pop eax
inc edi
js rwxdata
cmp [ edi - 0x18d709e8 ] al
pop eax
mov ebx 0xca481e7
xchg ebx eax
dec esi
test eax 0xab792875
cwde
ja rwxdata
or [ esi - 0x77 ] dl
sbb al 0x24
push [ esp + 0x10 ]
retn 0x24
mov dh 0xcb
fistp [ edi ]
pushad
jne rwxdata
sbb [ eax - 0x309d09d8 ] bh
and eax 0x20f32e4c
aas
sahf
pushad
jno rwxdata
or edi [ edx + 0xd ]

jecxz sub_10111dfb
push ss
push sp
stosd [ edi ]
jae rwxdata
xchg esi eax
cmpsd [ esi ] [ edi ]
adc al 0x4e
idiv cl
in eax 0x61
jle rwxdata
cmpsb [ esi ] [ edi ]
out dx al
jno rwxdata
xchg esp eax
cwde
mov ebx 0x3aef805f
and eax 0x1a9085c2
add al 0x45
int 0x92
mov ebp 0x2750b58b
cmp dh al
adc bl al
and [ ebp + 0x49 ] cl
fisub [ ebx + ebx * 2 + 0x44 ]
mov edx 0x59059ae5
xchg esp eax
push cs
push esi
xchg edi esp
sub_10111fdb
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
jmp sub_10200147
add di 0x65eb
test ch ah
mov edi [ edx + 0x24 ]
cmp bh dh
clc
pushfd
cmp dl 0x48
add edi eax
pushfd
pushfd
jmp rwxdata
pushfd
movzx ecx [ edi + ecx * 2 ]
sar di cl
mov [ esp + 0x4 ] 0x8e05
adc di 0xc558
test cl ch
mov edi [ edx + 0x1c ]
cmp dh 0xe9
bt si bp
add edi eax
call sub_1012282f
cmc
pushfd
mov eax [ ebp - 0x8 ]
cmc
test bp si
add esp 0x24
ja rwxdata
pushad
shl eax 0x1
pushad
lea esp [ esp + 0x40 ]
je rwxdata
shl eax 0x1
jmp rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
call sub_10129831
je rwxdata
push 0x2a7d244f
mov [ ebp - 0x4 ] eax
mov [ esp ] dh
jmp sub_101d00db
sub_10112316
lea esp [ esp + 0x4c ]
call sub_101d761e
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

lahf
setge ah
mov eax [ edx + 0x8 ]
push ecx
mov [ esp ] esi
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_1011255b
das
pushad
mov [ esp + 0x20 ] ebp
jmp rwxdata
aaa
shl ebp cl
push 0x5149827a
lea ebp [ esp + 0x24 ]
sub ax ax
jmp rwxdata
sub esp 0xfffffff4
and al 0xcf
shl ax cl
sub eax edi
push esi
bsf ax bp
or al ch
push edi
call sub_101224ef
and bh [ ebx - 0x188f11dc ]
cwde
in al dx
xchg ebp eax
dec ecx
or ebp [ edx ]
lodsb [ esi ]
mov al 0x98
mov bh 0x78
cmpsd [ esi ] [ edi ]
ror [ edi - 0x64fb445c ] 0x1
push esi
scasd [ edi ]
pop ebx
mov [ 0xffffffffcff0f34b ] eax
ror [ ebx ] cl
xchg ebx eax
or edi [ eax + 0x65247a27 ]
jle rwxdata
jecxz rwxdata
jb rwxdata
pop es
xchg ecx eax
dec ebp
or bl dh
mov ecx 0x2f8f0bf6
in eax dx
jb rwxdata
frstor [ ecx - 0x3a6566bb ]
salc
cmp al 0x9
stosb [ edi ]
std
mov eax [ 0xffffffffb28c7966 ]
movsb [ edi ] [ esi ]
fwait
salc
enter 0xd92c 0x38
out 0x43 al
int1
cmp [ edx - 0x72 ] bl
sub eax 0xa5514d51
mov ecx 0x4ebc6fc
out 0x99 al
fidiv [ 0xfffffffffb91227c ]
or bh [ esi ]
or al 0x53
or ebp [ ebx - 0x63 ]
mov ebp 0xd1eecd6c
test eax 0x5d1d61d5
and ebx edi
sbb ebp [ eax + 0x2a0f10f7 ]
sub ah al
dec edx
mov dh [ 0xfffffffff387768f ]
pushfd
or eax 0x3c42298a
hlt
cdq
0xf9fed6c5 0x29a1
pop ds
stosd [ edi ]
or [ edi - 0x471c6301 ] bl
test eax 0x6df276ac
into
jns rwxdata
arpl [ edi + 0x46ee6a71 ] si
dec ecx
dec esi
push ecx
shl [ ebp - 0x49 ] cl
sub edx ebx
xchg [ edi ] edx
imul edx esp 0xffffff9a
and al 0xb6
leave
in al 0x21
test [ eax ] 0xbf
shl [ edx ] 0x1
out dx eax
das
jo rwxdata
mov esp 0xe9f16d79
xchg esi eax
sbb ebp esp
cmp [ edi + 0x67 ] edx
js rwxdata
js rwxdata
sar [ ecx ] 0x1
and eax 0x46ba0099
add cl [ 0xffffffffb02f2c17 ]
adc [ edi ] esp
imul esp [ esi - 0x3cdbdce8 ] 0xffffffb4
cmp al 0xe9
mov cl 0x43
lldt bx
sahf
loope rwxdata
mov dl 0x4f
je rwxdata
mov [ esp + 0x1c ] 0x9cf8ca9b
mov [ esp ] al
mov [ esp + 0x18 ] 0x734e5319
pushfd
pushad
lea esp [ esp + 0x3c ]
jmp rwxdata
sar [ ebp + 0x4a454201 ] 0xab
mov ebp 0xa0924c8b
sahf
xchg ebp eax
0xead5
sbb eax [ edi + 0x6c394538 ]
jb rwxdata
inc ebx
xchg [ esi + 0x76de89f6 ] edx
into
outsd
das
mov edx [ edi - 0x59 ]
call 0xffffffffc8b743fa
pop ebp
arpl sp bx
movsd [ edi ] [ esi ]
xchg edi ecx
mov [ 0xffffffffcefbd764 ] al
dec edi
scasd [ edi ]
xor eax 0xa55f633c
push ebx
daa
stosd [ edi ]
sub [ esi - 0x502f31d0 ] edx
mov bh dl
test bl bh
push 0x91552ce4
push [ esp ]
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
sub_1011262c
clc
cmp ecx [ ebp - 0x8 ]
push ebp
push [ esp ]
pushfd
mov [ esp + 0x4 ] 0xadb3f401
lea esp [ esp + 0xc ]
jbe rwxdata
call sub_101146c3
jpe rwxdata
or di dx
sub ecx 0x1
xchg di si
cmp si 0x2d52
mov [ ebp - 0x4 ] ecx
sbb cx bx
add cl bl
shl ch cl
movsx cx dl
mov ecx [ ebp - 0x8 ]
xor di sp
mov esi 0x84fe400b
clc
shrd di bx 0xc
add ecx [ ebp - 0x4 ]
sub di 0x781d
shr ecx 0x1
rcr si cl
bsr si di
ror di 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
rcl si 0x8
cmp dx 0x8c48
add edi eax
movzx si bl
push ebx
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
pushad
jmp sub_10200147
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_10112754
inc ecx
rcl bl cl
shl bl 0x6
cmp dh 0x7e
dec bl
xchg ebp eax
xchg bl al
pushfd
mov eax ebp
sub bl ah
pushad
sete bl
sar bl 0x5
mov bl 0x1
pushfd
push [ esp + 0x4 ]
test bh dl
test al ah
mov [ esp + 0x2c ] esi
xor si cx
shld si dx cl
sbb esi 0xb03fe730
jmp rwxdata
mov esi edi
test bl 0x12
stc
call sub_101ff976
sub_10112b16
mov [ esp + 0x4 ] 0xbe
lea esp [ esp + 0x38 ]
call sub_101d761e
pushfd
push ebp
call sub_101264b6
lea esp [ esp + 0xc ]
jae rwxdata
push 0x5c54e14
lea esp [ esp + 0x4 ]
call sub_101119b1
jmp rwxdata
jne rwxdata
cmc
stc
push esi
shrd esi edx cl
jmp rwxdata
pushfd
stosb [ edi ]
pushfd
mov [ esp + 0x4 ] ecx
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
jmp rwxdata
mov esi edi
test si cx
bt dx 0x9
sub esi eax
jmp sub_101d00e1
pushfd
lea esp [ esp + 0x4 ]
call sub_101119b1
sub_10113869
pushad
lea esp [ esp + 0x2c ]
call sub_101d761e
jmp rwxdata
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

movzx ax dl
mov eax [ edx + 0x8 ]
push ecx
push [ esp ]
push [ esp ]
push edi
lea esp [ esp + 0x10 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_101138c1
push 0xba97fc41
inc esi
call sub_10112626
xchg ecx eax
je rwxdata
pop ds
lahf
pushad
lea esp [ esp + 0x24 ]
call sub_101119b1
pushad
pushad
jno rwxdata
scasd [ edi ]
fld [ esi + 0x5f ]
xor al 0x6e
xor ebp edx
adc al 0x66
stc
cmp bh bl
mov al 0xf4
mov ebp esp
jae rwxdata
xchg edi eax
push es
or [ edx ] edx
cmp al 0x4d
cmp ebp esi
jo rwxdata
out dx eax
mov [ 0xfffffffff9465c38 ] al
rcr [ ebp + 0x6d ] 0xb1
leave
xchg esi eax
cmpsd [ esi ] [ edi ]
or dl [ edx + 0x766153c0 ]
push 0x69b55ca2
pop ecx
inc esi
adc ecx [ ebx - 0x59 ]
xchg edi eax
pop es
js rwxdata
inc ebp
and [ edx ] eax
xor dl 0x23
inc esi
pop edi
lahf
xchg esp eax
mov esp 0xfd08ec33
test al 0x36
pop edi
and [ esi + 0x59 ] 0x9b
push 0xffffffab
jno rwxdata
out 0x28 eax
mov ecx 0x46bfce66
mov ch 0x15
or bl [ esi ]
shr [ esi - 0x51 ] 0x1
xchg ebx eax
mov [ esi - 0x14 ] fs
test eax 0xc37c2669
stc
shl eax 0x1
call sub_101ff139
add [ eax ] al
inc ebp
js rwxdata
0xf688
outsd
dec eax
enter 0x548d 0xcb
cmpsd [ esi ] [ edi ]
in al dx
je rwxdata
movsb [ edi ] [ esi ]
jpo rwxdata
jb rwxdata
mov ah 0x53
jg rwxdata
daa
cmp dh [ edx - 0x4271468d ]
xchg ecx eax
daa
pop eax
dec ecx
jmp rwxdata
arpl [ ebp + 0x73 ] sp
jae rwxdata
fisub [ ecx - 0x4b ]
scasb [ edi ]
jb rwxdata
push ds
arpl [ ecx - 0x27 ] sp
movsd [ edi ] [ esi ]
scasb [ edi ]
xchg ecx eax
shl ch cl
pop edi
inc ebx
push ss
xor bl [ edx + 0x25 ]
mov ecx 0xd575aa85
leave
cmp [ esi + 0x65 ] 0x5a

0xf383
dec esi
insb
fsub [ edi + 0x78 ]
adc [ esi + 0x23 ] ecx
loope rwxdata
pushfd
pop edx
stosb [ edi ]
or al 0x5a
in eax 0x26
sub_101145f9
mov [ esp + 0x8 ] ax
push 0x2dd9dce
cmc
cmp ecx 0xffff
jmp rwxdata
push [ esp ]
call sub_10111ac7
mov [ 0xffffffffd40bb887 ] al
enter 0xa009 0x7e
adc al 0xb1
mov esp 0x843a79cf
sbb esp ebp
inc edi
sbb dl bh
aaa
dec eax
xor cl [ edx - 0x3 ]
pop ecx
add eax 0xf12de1de
add [ 0xffffffffeb53b28d ] al
sub al 0xe2
pop esp
popfd
ffree st1
mov dh 0x6a
mov ebx 0x56e822fb
ffree st4
call 0x2bd456a6
pop esp
push ds
sbb dl 0xc4
aad 0xfb
les ebx [ edx + 0x55 ]
mov eax 0xe0989674
sbb cl [ edx ]
sub eax 0x471f0ef0
clc
or [ edx - 0x7ee02200 ] eax
add [ edx - 0x11f5becc ] 0xffffffa7
and ah bl
push eax
jmp 0xffffffffb68c15cd
sub_101146c3
xor ebx edi
xor eax eax
lea esp [ esp + 0x4 ]
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
sub_10114c57
cmp [ ebp + 0x14 ] ecx
call sub_101cfcd2
mov [ edi - 0x37ce6fb3 ] cl
nop
popad
cwde
mov ch 0xc0
mov [ 0xffffffffa8cc41a0 ] al
adc eax ebp
mov eax [ 0xdc8c2b0 ]
mov eax 0xc0bae091
cdq
enter 0xd025 0x61
sub_10121606
cmc
mov edi [ edi + ecx * 4 ]
call sub_101fd1dd
inc ebp
rcr [ edi + 0x43 ] 0x9b
loopne rwxdata
cmp eax 0x28d6f00e
jpe rwxdata
shl [ edi - 0x19 ] 0x1
[ edi ]
pushad
pushad
test [ eax - 0x2bce3fc2 ] 0x201fe05e
cmpsb [ esi ] [ edi ]
pop eax
inc [ eax - 0x3fa0734e ]
std
and dh [ ebx ]
imul edx [ ebx - 0x59 ] 0xfffffff5
0x186e
0x96ecef30 0x4a1d
xchg ebx eax
push 0xdb930b96
movsb [ edi ] [ esi ]
int1
int 0x59
out 0x24 al
mov ebx 0xc955bcc2
sbb esi 0xcf9fb24
or [ ebp + 0x1 ] edx
lodsd [ esi ]
jno rwxdata
fwait
adc eax 0x5e891589
int3
sub_10121e31
lea esp [ esp + 0x48 ]
ja rwxdata
call sub_10112838
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
jb rwxdata
jmp sub_1011262c
push eax
cmp [ edi - 0x1 ] 0x0
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
jmp sub_10200147
add di sp
and edi edi
dec di
mov edi [ edx + 0x24 ]
jmp rwxdata
push eax
test bl ch
add edi eax
push [ esp ]
cmc
movzx ecx [ edi + ecx * 2 ]
bsr di si
dec edi
or di 0x260f
mov edi [ edx + 0x1c ]
cmp di 0x3b86
mov [ esp ] 0x969b
pushfd
stc
add edi eax
mov [ esp + 0x8 ] 0x8
bt cx bp
call sub_10121606
mov [ esp + 0x1c ] 0xa690c05b
pushfd
mov [ esp ] 0x6
mov [ esp + 0x4 ] 0x1b
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x4 ] edx
push [ esp ]
push 0x278841c6
pushfd
lea esp [ esp + 0x10 ]
jmp sub_1020372e
sub_1012227e
call sub_101138c1
add dl [ ebx + 0x1a603e0c ]
mov ecx 0x7d951bea
adc eax 0x6e516ade
jo rwxdata
xor cl [ edx + eax * 4 - 0x64 ]
dec ebp
xchg ecx eax
xor edx edx
frstor [ ecx ]
bound esi [ ecx + 0x69 ]
rcr [ ebx + 0x39e3bcf4 ] 0xd0
pushfd
jmp rwxdata
test eax 0xd4bea0b6
or dh [ eax + 0x778a556e ]
inc edi
fsetpm287_nop
xchg esi eax
call 0x28995ab0
cmp [ edx - 0x79 ] cx
sbb [ ebp + 0x78 ] ch
or cl [ ecx - 0x23 ]
mov al [ 0x1c7f ]
arpl [ edi + 0x65bfff90 ] si
scasb [ edi ]
rol [ eax + 0x1 ] 0x1
push ds
int 0x52
arpl di ax
0x4b5
call sub_10200430
sub_101224ef
sbb ah 0x52
mov [ esp ] ebx
cmp ax 0x1278
shrd ax ax 0x5
neg al
push edx
rol ax 0x7
rcl ah 0x5
rol ah cl
mov eax [ ebp + 0x8 ]
cmc
clc
test eax eax
call sub_101fbdde
mov [ esp + 0x4 ] 0x70
dec al
clc
cmc
clc
jmp rwxdata
rol al 0x7
mov [ esp ] ah
pushad
test bl cl
cmp al [ edi ]
pop eax
pop eax
push [ esp + 0x4 ]
lea edi [ edi + 0x1 ]
pop eax
pop eax
movzx eax al
mov eax [ esp + 0x1c ]
push 0x4a33fe90
jmp rwxdata
call sub_10111dbe
pop ecx
sbb [ edi + 0x7 ] ah
mov bh 0x7b
retn
sub_1012282f
mov edi [ edi + ecx * 4 ]
pushfd
clc
pushad
test edi edi
pushfd
call sub_10111ee4
xchg ebx eax
jb rwxdata
movzx di dl
movzx esi [ edx + 0x1a ]
not di
bswap edi
bswap di
lea esi [ esi + edx + 0x1c ]
lea edi [ esi + 0x213e54e9 ]
mov edi [ ebp + 0x8 ]
jmp rwxdata
popad
mov ebp 0x2f6915f0
scasd [ edi ]
mov edi 0xaa9ea9a3
in eax 0xb9
0xf6813ea5 0x1569
test eax 0xa955b589
sbb [ ebp - 0x1adf829e ] esp
add ebp ebx
push edx
int 0xf5
stosb [ edi ]
mov ebx 0x6111bd48
pop esp
cmpsd [ esi ] [ edi ]
jle rwxdata
push 0xd24c6716
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_101d761e
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
add [ eax + 0x16 ] ch
dec esp
rcr [ esp + ebx * 4 + 0xc24648d ] cl
sbb al 0x62
or al 0x13
push esp
mov [ esi - 0x2ff4502d ] dh
mov edx [ 0xffffffff8271ae9e ]
cmp [ edi + esi * 2 + 0x2718d7cc ] 0x53
dec ebp
retn 0x284b
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

call sub_10112c99
sub_10122b14
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
xor di 0x208e
setns bh
rcl bl 0x1
mov ebx eax
clc
bts cx 0x9
mov edi eax
call sub_101d01a5
cmc
jg rwxdata
inc edx
cwde
out 0x73 eax
sub eax [ edi ]
sbb [ ecx ] ch
fadd [ edi + 0x58 ]
hlt
out dx eax
das
jecxz rwxdata
or dh [ esp + ebx * 4 - 0x5af5ccde ]
pop ecx
movsd [ edi ] [ esi ]
and eax 0xaac09f16
cmp ch cl
and al 0xe1
rcr dh 0xef
test [ ecx ] edi
salc
aam 0xd5
0x3364
sub_10123799
push [ esp ]
pushfd
lea esp [ esp + 0x50 ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_10127cf8
xchg esp eax
mov ecx 0x31fe07a6
out dx al
push esi
xor ah [ edx + 0x5ae55fe9 ]
dec eax
xchg esi eax
pop eax
out 0x2c al
xor al [ ecx + 0x28a2fc5e ]
not al
sbb esp ebx
neg esi
loopne rwxdata
fsub [ edx + 0x76 ]
and [ ebp + 0x6e ] ebx
xchg esp eax
add eax 0xdd055439
cmc
sub [ ebx ] edx
cmp al 0x4d
hlt
sub_10123b08
mov [ ebp - 0x8 ] ecx
pushad
lea esp [ esp + 0x38 ]
jmp rwxdata
sbb cx bx
add cl bl
shl ch cl
movsx cx dl
mov ecx [ ebp - 0x8 ]
xor di sp
mov esi 0x84fe400b
clc
shrd di bx 0xc
add ecx [ ebp - 0x4 ]
sub di 0x781d
shr ecx 0x1
rcr si cl
bsr si di
ror di 0x1
shl si cl
mov edi [ ebx + ecx * 4 ]
rcl si 0x8
cmp dx 0x8c48
add edi eax
movzx si bl
push ebx
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
pushad
jmp sub_10200147
sub_10123b81
dec al
pushfd
mov [ esp ] 0x4b2f8214
bt ebp 0x11
rol al 0x7
test al cl
cmp si 0x304c
cmp al [ edi ]
lahf
lea edi [ edi + 0x1 ]
movzx ax bl
jmp rwxdata
mov eax [ esp + 0x4c ]
mov [ esp ] 0x179e5b25
mov [ esp + 0x18 ] 0xae2767ab
mov [ esp ] bh
lea esp [ esp + 0x50 ]
ja rwxdata
call sub_10112838
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
jb rwxdata
jmp sub_1011262c
jmp rwxdata
cmp esp 0xb646cb60
test edx ecx
cmp [ edi - 0x1 ] 0x0
push 0x81191f10
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp sub_10200147
mov di sp
shl edi cl
movsx di cl
btr di si
mov edi [ edx + 0x24 ]
bt ebx 0x13
add edi eax
cmp bh 0xd6
movzx ecx [ edi + ecx * 2 ]
xor di di
cmp al bh
call sub_101d7e82
sub_101245f0
cmp bx 0xaa48
and bl cl
mov bx [ esi ]
call sub_1012949f
cmpsd [ esi ] [ edi ]
cmp [ ebp - 0x5ac6528e ] 0xb6
push 0x6c
push [ edx ]
push ss
mov esi 0xe9493501
push ebp
cdq
movsd [ edi ] [ esi ]
mov dl 0xcd
and eax 0x322b1a44
mov [ edi - 0x6772ed68 ] gs
dec ebx
push edi
pop ecx
inc esi
enter 0x9b56 0x6a
pop ecx
xchg [ edx + eax * 4 ] bh
sub_10124adb
push [ esp ]
lea esp [ esp + 0x1c ]
je rwxdata
call sub_101146c3
jpe rwxdata
dec cl
add edx eax
cmc
mov ecx [ esi + 0x7c ]
pushad
add ecx edx
bt dx si
bt sp sp
clc
mov [ esp + 0x8 ] cl
mov [ ebp - 0x10 ] ecx
bts cx 0x7
cmp cl dh
movsx cx cl
dec ch
mov ecx [ ebp + 0xc ]
test bx cx
pushad
cmp ecx 0xffff
pushfd
lea esp [ esp + 0x44 ]
jbe rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
stc
test bp 0x544a
sub ecx [ edx + 0x10 ]
cmc
cmp ecx [ edx + 0x14 ]
push esi
pushfd
pushfd
lea esp [ esp + 0xc ]
jae rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push 0x228d4a21
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_1012aad8
arpl [ 0xffffffffba9d6889 ] si
vrcpss xmm1 xmm5 [ edi + ebx ]
add bh [ ebp + ebp * 8 + 0x5b ]
xchg [ edi - 0x65 ] esi
retn
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
add di di
shl di 0xd
clc
sbb di 0xbde5
mov edi [ edx + 0x1c ]
stc
pushfd
bt bp 0xa
jmp rwxdata
add edi eax
call sub_101d8293
fld [ eax ]
fist [ ebx - 0x15 ]
push ebx
sbb eax 0xa0be3322
loop rwxdata
mov al 0x42
je rwxdata
je rwxdata
jmp rwxdata
sbb al 0x39
jno rwxdata
pop [ edx + 0x5d ]
cmc
sbb edx [ ebp - 0x24 ]
inc ecx
dec ebx
xor al 0x88
sbb al 0x75
and [ edx + 0x58 ] 0xec
push ebx
aaa
push 0x6c334857
add ecx [ edx ]
out dx eax
stosb [ edi ]
adc [ ebp + 0x49 ] 0xe2
xor [ eax + esi * 4 + 0x42 ] esi
cmp ecx [ ebp + eax * 8 - 0x5f ]
sahf
scasd [ edi ]
pop ds
and al 0x3b
and ecx [ edx ]
cmpsd [ esi ] [ edi ]
or bl [ ebx + 0x69d28c0b ]
fcomp st4
imul ecx edi 0x65
pop ds
sbb [ ebx + 0x34 ] 0x58
lodsd [ esi ]
push ebx
bound edx [ edi + 0x4c ]
cld
and al 0xfb
pop ss
inc edi
adc ecx [ ebx - 0x405f7ca5 ]
cli
test [ edx + 0x4f940a94 ] cl
jo rwxdata
in ax dx
push es
inc edx
aam 0x6b
iretd
xchg esp eax
dec eax
inc edi
js rwxdata
leave
neg [ ecx + 0x4c0b5426 ]
adc [ ebp + 0x6dc94c5c ] ebp
jne rwxdata
pop edx
pop ecx
outsb
xchg esp eax
mov ebp [ edx - 0x1a8ed16c ]
push eax
mov edx 0x7e806625
or esp [ esi ]
out 0x80 eax
daa
jae rwxdata
js rwxdata
mov eax [ 0xffffffff85070929 ]
test al 0x51
lea ecx [ eax ]
mov dh 0xc4
fwait
lodsb [ esi ]
clc
push ebx
scasd [ edi ]
and [ edx ] ah
scasb [ di ]
arpl [ ebx - 0x54 ] bx
mov [ 0x20f18dad ] eax
xchg [ edx + 0x62813d85 ] bl
pop ebp
stosb [ edi ]
xor eax 0x455a65da
adc [ ebp + 0x4e ] ecx
xor [ ecx ] eax
cmp eax 0x5d422916
inc ebp
cdq
rwxdata
imul esi [ ecx + 0x6e ] 0x94aa8b94
push eax
mov ds [ edi + 0x40d98559 ]
sti
fild [ eax + 0x5eacf29d ]
mov al [ 0xb5668b1 ]
pop esp
pop esi
popfd
popad
mov ch 0xb7
frstor [ ecx + 0x3d ]
jle rwxdata
dec esi
jmp rwxdata
shl [ esi - 0x13 ] 0x6
sub_10124e98
push [ esp + 0x4 ]
cmp edi ebx
mov [ esp + 0x4 ] 0x449ad7d9
lea esp [ esp + 0x2c ]
ja rwxdata
pushfd
sub edi 0x4
call sub_101d025c
shl al cl
shl al 0x2
ror al 0x6
sub ebx edi
dec di
bsf di sp
shrd di sp cl
shl di 0xd
add ebx esp
sub al 0x2
cmc
mov edi ebx
jmp rwxdata
seta al
cmp edi esi
mov al 0x2e
pushfd
clc
cmp esi 0xe4b15eaa
[ edi ]
mov [ esp ] 0xe387f710
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_101ff997
bt si 0x7
add dl dl
call sub_10123afb
pushad
mov [ edi - 0x1 ] 0x0
jmp rwxdata
mov [ esp + 0x1c ] ebx
movsx ax al
lea eax [ esi - 0x3486ecde ]
pop es
inc esp
mov edx 0x97a8ae50
test al 0x81
dec eax
mov dh 0xe7
push ds
xor bl [ edx + 0x344cfff6 ]
sub edi [ edi ]
mov bh 0x8
pop ebp
mov ch 0xaa
dec ebp
cli
lea ebp [ ecx - 0x755a85eb ]
or edx [ ebp - 0x64 ]
add ch bl
mov bl 0xcb
jmp rwxdata
and dl [ ebx ]
jns rwxdata
faddp st0
inc edx
fld [ edi + 0x4811ad18 ]
push ss
test [ ecx + 0x5b ] esi
pop eax
lea eax [ rwxdata ]
pushad
call sub_101fb904
mov edi 0xb5ead56a
sub [ 0xffffffffe8a93e56 ] edx
test eax 0x8886599f
xchg esi eax
loope rwxdata
_TLS_Entry_0
push edx
jmp rwxdata
mov [ esp ] bh
mov [ esp ] 0xbbd9ca98
push 0x2edcbd38
mov [ esp ] 0xec61d8f9
push 0x4918fb2e
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
push ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1020372e
sub_10125ad6
pushad
lea esp [ esp + 0x24 ]
jge rwxdata
jmp rwxdata
[ edi ] [ esi ]
jmp rwxdata
pushad
pushad
push 0x98fa0841
[ edi ] [ esi ]
not si
mov esi [ esp + 0x44 ]
push [ esp ]
push esp
lea esp [ esp + 0x50 ]
jmp rwxdata
call sub_10125e9d
pushfd
lea esp [ esp + 0x4 ]
call sub_101119b1
sub_101264b6
lea esp [ esp + 0xc ]
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

lea eax [ esi - 0x13676900 ]
mov eax ebx
mov eax [ edx + 0x8 ]
push 0xc409e88b
mov [ esp ] dh
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_101264df
[ edi ] [ esi ]
pushfd
mov si 0xddf0
movsx si dl
mov esi [ esp + 0x3c ]
mov [ esp ] 0x8da0
mov [ esp ] 0xdd
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_101119b1
sub_10126a30
test edx edx
push edi
lea esp [ esp + 0xc ]
je rwxdata
call sub_101146c3
jpe rwxdata
shl cl cl
cmp ah 0x94
pushfd
rcl cl cl
add edx eax
setge ch
mov ecx [ esi + 0x7c ]
push 0xb0ddc68
stc
push 0xa593d90a
call sub_10113887
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_10126e7f
shl al 0x7
test bh bh
xor al bh
sub al 0x59
add edi 0x1
clc
bt ecx 0xf
dec al
mov al [ edi ]
stc
test al al
jmp rwxdata
pushfd
mov [ esp ] 0x3a
lea esp [ esp + 0x4 ]
je rwxdata
movzx di dl
clc
cmc
stc
mov edi edx
btc cx bx
pushad
mov ecx edi
lea esp [ esp + 0x20 ]
stc
mov al [ ecx ]
jmp sub_101ffdc9
call sub_10110513
mov [ eax - 0x3a ] ds
pop ss
xchg [ edi - 0x68e1cee0 ] edi
scasd [ edi ]
mov bh 0x91
and bl [ ebp + edx * 2 + 0x45bc82b0 ]
jns rwxdata
adc [ ebp + 0x72 ] esi
xchg ebx eax
dec esp
imul ebx
cmpsb [ esi ] [ edi ]
pop edi
mov al [ gs : 0x54136ce1 ]
sub edx [ edi - 0x647d8b5 ]
insb
rol [ eax + 0x1c0bd3bf ] cl
and ebp [ edi + 0x2615c988 ]
sub [ esi + 0x22 ] cl
pop esp
or al 0xf5
cwde
cmpsd [ esi ] [ edi ]
mov eax 0xd2ac6e2b
dec ebp
xchg ecx eax
rol [ ebp - 0x76 ] cl
test al 0x1d
loope rwxdata
pop ecx
mov [ ss : edx - 0x43 ] esp
mov edx 0xbd9965a5
mov eax [ 0x5d427d42 ]
insd
mov cl 0xcc
mov dl 0xc3
push esi
mov [ edx - 0x7d863fe2 ] ebx
dec edx
js rwxdata
pushfd
0x922b6747 0x17b2
cmpsb [ esi ] [ edi ]
cmp [ edx + esi + 0x68f6334b ] ecx
int 0x71
xchg ecx eax
mov ss [ eax ]
outsd
test [ eax + 0x71aa99a6 ] eax
imul edi [ edx ] 0x74aa3c53
push eax
bt cx 0x9
call sub_101d0087
sti
sbb eax 0x7fff6c60
nop
xchg edx eax
cmpsd [ esi ] [ edi ]
xor eax 0xb7f5e9a9
sub [ edx + 0x16b12d8c ] dl
leave
or ch [ ebp - 0x730cbcce ]
popfd
fisub [ eax - 0x7edc2879 ]
dec [ edi ]
sub [ esi + 0x67 ] dl
pushfd
sub_10127649
test dh 0x47
jmp rwxdata
cmp dh bh
[ edi ]
push [ esp + 0x8 ]
pushad
jmp rwxdata
lea esp [ esp + 0x30 ]
jne rwxdata
call sub_101146c3
jpe rwxdata
shl si cl
dec si
add si bx
mov ecx edi
pushfd
sub ecx ebx
neg esi
sub si bx
clc
pop esi
mov esi esp
pushfd
sub edi 0x4
call sub_101d025c
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_10127cf8
pushad
pushad
inc esi
mov [ esp ] 0xb8a
call sub_10111577
sub al 0x0
pop esi
pop ebx
and edi [ eax + 0x7 ]
sbb [ 0x61e79e9e ] dh
jle rwxdata
push esi
xchg edx eax
pop ebx
scasd [ edi ]
sbb ch dh
nop
mov cl 0x81
mov esp 0x6ef06955
jg rwxdata
test eax 0xe712ac55
cmpxchg [ eax + esi * 2 ] al
dec esi
sub al 0x1b
cmp edi esp
add esp 0xffffffb0
push cs
and eax 0x8935291e
inc ebx
stosd [ edi ]
push ebx
add al 0xdb
arpl [ ebx - 0x7d28b88d ] bp
fcomp [ 0x35c6e578 ]
jecxz rwxdata
fisub [ esp + edi * 8 - 0x6d0f2041 ]
iretd
add ch ah
pop esi
adc [ esi - 0x2e ] ch
inc ebx
mov bh 0x76
sub ch [ edx ]
add eax 0x21fe207d
or esi [ ebx - 0x74 ]
mov edi 0xa7a65a3d
ja rwxdata
sub ebx edx
iretd
xor dl bl
in al 0xd0
push cs
mov [ 0xffffffffde4b8a90 ] eax
cmp bl cl
pop eax
aam 0x10
js rwxdata
dec esp
rol [ ebx + eax * 2 ] cl
inc eax
push edx
cmp ecx edx
push ds
jns rwxdata
fcomip st0
xchg edx eax
int 0x9d
ror ch 0xb1
shr ebp 0x1
sub_101280a6
call j_sub_101fe66c
add bh [ edx + 0x1a2c3224 ]
lds ebx [ edx ]
mov bh 0xe5
xchg ecx eax
in eax 0x63
sub al 0x72
sub [ esi + 0x49 ] edx
jbe rwxdata
push 0x57cbca96
call sub_101d15ba
bound ebp [ eax - 0x4a ]
rcr [ esi - 0x4d12716f ] 0x55
mov ah ah
fcmove st0
push ss
cmp eax 0xbfae402
xor eax [ edx + edx + 0x6c ]
rcr [ edx + 0x59 ] 0x9e
nop
fild [ edx + 0x7c ]
bound esi [ ebx - 0x80 ]
clc
mov esp 0x26dfead0
aaa
scasd [ edi ]
dec edi
mov ebx 0xf37b8343
mov [ ebp + 0x50b5748a ] ds
add edx esp
jmp rwxdata
imul edx edi 0x5b4a34e2
lodsd [ esi ]
mov cl 0xee
div eax
insb
cld
sub [ edi - 0x320213e7 ] dl
push edx
aad 0xd2
scasb [ edi ]
mov cl 0xc9
mov ch 0x9
inc ecx
push esi
cmpsd [ esi ] [ edi ]
cmp dl dl
sub al 0x81
xor al 0x85
pushad
movsd [ edi ] [ esi ]
mov dh 0xf8
or eax 0x61fe79c5
jpe rwxdata
0x9a417e59 0x601
call 0x3e973d93
cmp edi [ ebp - 0x79df6b68 ]
hlt
sub_101292f0
push ecx
pushad
not al
pushfd
push esi
dec al
cmc
pushfd
rol al 0x7
cmc
stc
clc
cmp al [ edi ]
bswap eax
lea edi [ edi + 0x1 ]
cwde
bswap eax
lea eax [ eax * 8 + 0x6ce4efd6 ]
call sub_101fc76d
sub_1012949f
mov [ esp + 0x4 ] 0x5c
clc
and ebx 0xfff
test cx cx
cmp cl 0xb0
bt cx si
add [ ebx + edi ] edx
lea esp [ esp + 0x8 ]
push edx
test si sp
add esi 0x2
pushad
dec ecx
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
shr bh 0x7
btr bx bp
or bh dl
mov bx [ esi ]
push 0xe34678d9
shr ebx 0xc
cmp esp 0x6ccd04e3
call sub_101fc5b3
bsf cx dx
rcr ch cl
movzx cx dl
mov ecx [ ebp - 0x4 ]
clc
stc
pushad
call sub_10114c57
lea esp [ esp + 0x28 ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_101131cc
sub_10129831
push 0xfd14c916
mov [ ebp - 0x4 ] eax
pushad
jmp rwxdata
mov [ esp + 0x8 ] ebp
xchg [ esp + 0x24 ] eax
pushad
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x4 ] 0x35
lea eax [ LocalAlloc@IAT ]
pushfd
mov [ esp + 0x40 ] rwxdata
call sub_10129d80
pushad
mov [ esp ] 0xb3
mov [ esp ] dl
push 0x89476c00
lea esp [ esp + 0x24 ]
call sub_10110704
sub_1012aad8
mov edi [ edx + 0x24 ]
btc bx dx
add edi eax
call sub_101d07e9
outsb
jno rwxdata
mov [ esi - 0x1d5e8230 ] ch
rcl [ 0x634206ab ] 0x1
sti
jbe rwxdata
jo rwxdata
test esi ecx
jno rwxdata
jno rwxdata
and edi esp
mov [ 0x26e47bfc ] al
fsubr [ esi + 0x71 ]
add [ ebp - 0x5e618e32 ] 0xcd
push edx
cmc
mov dh cl
pop edx
in al 0xf5
adc ecx [ ebx - 0x47 ]
xchg ebx eax
dec ecx
cli
pop ecx
js rwxdata
scasb [ edi ]
popad
jb rwxdata
mov eax [ 0xffffffff8af552cd ]
int1
push ecx
into
inc ecx
fdivr [ eax ]
stosd [ edi ]
jpo rwxdata
cmp [ ebx + 0x35bec ] ah
add [ ebp + 0x72 ] dl
insd
lds esp [ ebp + 0x2c ]
push ebp
fidivr [ eax + 0x6 ]
xor [ edx - 0x5c ] eax
push es
sbb [ edx + ecx * 4 + 0x35 ] ch
jbe rwxdata
xchg ebp eax
sub ebx ecx
cmp bl [ ebx ]
dec esi
push eax
dec esi
xor [ ebp - 0x3ce877c6 ] eax
sbb al 0x85
sbb [ edx + 0x71 ] ebx
imul edi [ eax ] 0x35beca3
add [ eax ] al
push esp
jb rwxdata
pop es
idiv [ esi ]
add [ edx ] dh
in eax dx
jle rwxdata
pop ebp
or al [ eax ]
xchg esi eax
int1
add eax 0x94cf5466
shr [ 0x4cf3a11e ] cl
mov edx 0x1fe837e9
xor [ ebp + 0x2085afc0 ] dh
faddp st1
shr [ eax + eax * 8 ] cl
mov ebx 0x1ba360bd
pushad
aas
push eax
push esp
sbb ah bh
popad
add [ fs : ebx + 0xf66247a ] cl
mov ebx 0xe8c701d3
add ebx [ ebp + 0xa ]
add [ esi + 0x17 ] bh
dec ebp
imul ebp [ esi + 0x61 ] 0x68546574
jb rwxdata

sub_1012aee3
lea esp [ esp + 0x48 ]
ja rwxdata
dec bl
xchg ebp eax
lahf
mov eax ebp
mov bl dh
shr bl 0x4
mov bl 0x1
cmc
stc
push esi
shrd esi edx cl
jmp rwxdata
jmp rwxdata
mov esi edi
test si cx
bt dx 0x9
sub esi eax
jmp sub_101d00e1
call sub_101fda44
sub_1012b516
lea esp [ esp + 0x8 ]
ja rwxdata
call sub_101ff997
bt si 0x7
add dl dl
call sub_10123afb
stc
imul edx edx 0xa
cmp ch cl
bt sp 0x1
cmc
test ecx 0xd0f77131
add edx eax
pushfd
mov [ esp ] bh
mov [ esp ] dx
push 0xa8dec542
lea esp [ esp + 0x8 ]
jmp sub_10126e7f
sub_1012c04e
shr eax 0x1
push esi
mov [ esp ] ah
push ecx
jmp rwxdata
lea esp [ esp + 0x50 ]
je rwxdata
pushfd
xchg ebx edi
pop ebp
pushfd
mov ebx [ esp + 0x4 ]
xchg si bp
pushad
mov edi [ esp + 0x28 ]
mov bp 0xf3ee
mov esi [ esp + 0x2c ]
mov ebp [ esp + 0x4 ]
lea ebp [ edi - 0x59937cf4 ]
mov ebp [ esp + 0x30 ]
push eax
pushfd
pushfd
push [ esp + 0x40 ]
retn 0x4c
pushad
pushfd
adc ecx ecx
pushfd
mov [ esp ] 0x2e6d6cac
pushfd
push 0x238ba284
lea esp [ esp + 0x30 ]
jmp rwxdata
dec bl
inc ecx
pushad
inc ecx
lea esp [ esp + 0x20 ]
dec bl
xchg ebp eax
lahf
mov eax ebp
mov bl dh
shr bl 0x4
mov bl 0x1
cmc
stc
push esi
shrd esi edx cl
jmp rwxdata
mov esi edi
test si cx
bt dx 0x9
sub esi eax
jmp sub_101d00e1
sub_1012c1f1
movzx esi [ edx + 0x1a ]
pop edi
not di
movzx di al
lea esi [ esi + edx + 0x1c ]
push ebp
bswap di
mov edi [ ebp + 0x8 ]
push 0xe8be55d5
lea esp [ esp + 0x8 ]
call sub_101d761e
call sub_1011146e
fmul [ eax ]
idiv [ eax - 0x59 ]
push 0x99c52cd7
pop edx
push edx
push edx
jo rwxdata
dec ebx
inc [ edi ]
xchg esp eax
jmp rwxdata
inc [ edi ]
sub_1012c68a
push esp
lea esp [ esp + 0x4 ]
jb rwxdata
jpe rwxdata
clc
cmp ah 0x5a
pushfd
pushfd
call sub_101fbfcf
xor eax 0x487bc48f
xchg edi eax
test al 0x6a
cmc
inc esi
int 0x5f
pop eax
bt cx dx
stc
push 0x77e3754
cmc
or al al
lea esp [ esp + 0x4 ]
ja rwxdata
bt bx 0x7
bt edi esp
cmc
or al al
jmp sub_1010f660
push 0xb8956fd8
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
push 0x1a8526e
lea esp [ esp + 0x4 ]
je rwxdata
cmp ah cl
pushfd
or ah ah
push ebx
pushad
push 0xd2a60b1a
pushfd
lea esp [ esp + 0x30 ]
je rwxdata
push 0x77d0f8ce
stc
cmp al ah
jmp sub_10123af6
pushfd
stc
pushad
stc
cmp al ah
pushad
call sub_10123799
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
stc
push edi
mov [ esp ] 0xe530312d
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_101ccecc
lea esp [ esp + 0x4 ]
je rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
bswap di
lea esi [ ebx - 0x4dcf60d4 ]
call sub_101fd1cc
mov bl 0x2
inc al
not al
mov al bl
inc ecx
mov al ch
jmp rwxdata
mov al 0xc1
call sub_101d725e
sub_101ccef4
lea esp [ esp + 0x8 ]
jne rwxdata
cmc
stc
push esi
shrd esi edx cl
jmp rwxdata
call sub_101d0543
mov esi edi
test si cx
bt dx 0x9
sub esi eax
jmp sub_101d00e1
sub_101ccfde
lea esp [ esp + 0xc ]
je rwxdata
call sub_101146c3
jpe rwxdata
stc
clc
cmp di sp
add eax edi
pushad
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
call sub_10122276
cwde
mov eax 0x9902dcc6
out 0xf7 al
pop ecx
inc ebp
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_101cfcd2
lea esp [ esp + 0x28 ]
ja rwxdata
movsx ecx dl
test bp 0x5ba2
adc cx ax
mov ecx [ esi + 0x4 ]
pushad
or ecx ecx
mov [ esp ] ah
jmp rwxdata
setbe bl
pop esi
jmp rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
mov bx 0x90d8
movzx di bl
pushfd
btr edi 0x19
jmp rwxdata
pop edi
popad
jbe rwxdata
push edi
into
adc [ eax - 0x62 ] bh
loopne rwxdata
shr di 0x8
add [ ebp - 0x4 ] ecx
lea edi [ ecx + 0x2c472062 ]
lea edi [ esp + 0x2f05837a ]
xchg di bx
xchg di bx
sub ecx 0x8
rcl di 0x1
bsr di sp
cmc
shr ecx 0x1
rol di cl
push esi
setpe bh
mov edi [ esi ]
bswap bx
sar bx 0xd
adc bl bl
btc bx 0x3
add edi [ ebp + 0x10 ]
cmc
sar bl 0x1
seta bh
movsx bx dl
add esi 0x8
add esp 0x8
shr bh 0x7
btr bx bp
or bh dl
mov bx [ esi ]
push 0xe34678d9
shr ebx 0xc
cmp esp 0x6ccd04e3
call sub_101fc5b3
cmp [ ebx ] dl
sub [ ecx + ebp * 8 ] eax
fnsave [ esi - 0xe611d93 ]
inc esp
call 0xfffffffffaf2d6da
insb
jge rwxdata
mul [ edi - 0x1cb04909 ]
pop ebx
cmp [ ebx ] 0x10
jpe rwxdata
mov dh 0x4f
jecxz rwxdata
pop edx
enter 0xa7f7 0xf7
pop ecx
xor al 0x8e
adc eax edi
mov [ 0xffffffffe7580dfc ] eax
in al dx
push ds
xchg edx eax
jecxz rwxdata
inc ecx
jle rwxdata
imul [ ebp + 0x20bc4332 ]
jg rwxdata
and [ edi - 0x70 ] bh
bound eax [ edx + ebx * 2 - 0x8580838 ]
jg rwxdata
inc ebp
jns rwxdata
test eax 0xe618f549
pop ds
shr [ ecx - 0x5b ] cl
push 0x7b
enter 0xbb03 0x55
push ecx
rwxdata
xor al 0xf9
pushfd
and ebp [ eax ]
daa
xlat
sbb eax 0x5e76b2a0
popad
popad
ror [ edx + edi ] 0x1
test [ ecx ] ebx
cmp al 0x64
jpe rwxdata
pop ss
adc cl [ edx + ebx * 2 - 0x7c ]
bound ebx [ ebp + 0x6e ]
jno rwxdata
add bl [ edi + esi * 2 + 0x49a9d6c8 ]
cmc
sbb dh ah
sbb ebx [ eax + 0x4076d126 ]
lea edi [ eax + 0x31aac4ad ]
pop edi
not ch
not ecx
seta cl
pop ebx
mov ch 0xe3
pop ecx
call j_sub_10111e14
xchg [ ebp - 0x3f ] ebx
push ecx
or eax 0xbf22116d
pushad
xchg edi eax
daa
in eax dx
pop ebx
mov al [ 0x1d7e415e ]
xor cl [ edi + 0x66089700 ]
mov ebx 0xf6690d8
mov dh 0xfb
loopne rwxdata
mov ecx 0xaa6eb87a
mov bl 0xb
cwde
shl [ es : esi + 0x40 ] 0x1
xchg [ eax ] edi
inc ebp
cmp [ edx - 0x45 ] ecx
test bh dh
mov al 0xd0
mov dl [ 0xffffffff8e9ab594 ]
scasb [ edi ]
dec edx
xchg ebp eax
mov cl 0x35
mov bl [ ebx - 0x579b3788 ]
mov eax 0x647bcbb3
cmpsb [ esi ] [ edi ]
cmp [ ecx ] edx
dec esi
sbb eax 0xc23e200
adc esp [ ebx + ecx * 4 ]
aam 0x4d
fstp st3
loopne rwxdata
mov eax 0xbb3aa6e
lds edi [ ecx - 0x41425dc ]
add edx [ ecx + eax * 8 ]
std
push ecx
0xa778
sub_101cfce5
mov [ esp + 0x4 ] 0xee
mov [ esp + 0x44 ] 0xa4f42dfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
push esp
push 0x20ba6e1d
mov [ esp + 0x4 ] edx
pushfd
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp sub_1020372e
sub_101d0087
test al dl
or eax eax
mov [ esp + 0x4 ] 0xeb
pushfd
lea esp [ esp + 0xc ]
je rwxdata
test ecx 0xd70059c
xor eax eax
push 0x5e05843f
pushfd
mov ebx eax
call sub_1012b509
pushfd
mov [ esp + 0x4 ] 0xe9
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

not eax
lea eax [ edi * 8 + 0x6c205cf ]
mov eax [ edx + 0x8 ]
push 0xb556bc0d
push [ esp ]
push 0x2ab203cc
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_101d00db
pushad
jmp rwxdata
xchg [ esp + 0x20 ] eax
not eax
pushfd
mov [ esp + 0x20 ] 0x0
push ss
or [ ecx + 0x35 ] ch
mov cl 0xe
dec ebx
adc eax [ ebx - 0x4 ]
adc ebp ebp
xchg edx eax
or eax 0xff06ee91
adc al 0xca
mov al 0xaf
inc edx
cld
dec esi
adc [ edx ] esp
jno rwxdata
nop
xor ebp [ esi + ebx * 2 - 0x1aa68a60 ]
enter 0x8b77 0x79
mov ebp cs
inc esi
push 0x92ad5817
cmpsb [ esi ] [ edi ]
dec ecx
neg [ eax - 0x717a41f3 ]
xchg esi eax
lodsd [ esi ]
push 0xffffffc7
and dl al
int3
jbe rwxdata
pop eax
cwde
cwde
lea eax [ LocalAlloc@IAT ]
call sub_101fc5d2
shl [ 0x681649ea ] 0x1
push esi
xchg ecx eax
cmp eax 0xd07813cd
fwait
jecxz rwxdata
and ebx ebx
mov ah 0xb7
mov [ edi - 0x8dfdbbc ] 0x44c79cd0
and al 0x20
add [ eax ] al
add [ eax ] al
dec ebx
imul esp [ edx - 0x5d ] 0xffffff87
sbb [ edx + 0x37647a6c ] dh
fnsave [ edx + 0x34 ]
add [ ebx + 0x6b ] cl
bound esp [ ebx + 0x6cb21887 ]
jpe rwxdata
loopne rwxdata
dec eax
adc cl [ ebx + esi - 0x789b8594 ]
cwde
0x90ae9685 0x6ce4
pop edx
imul [ ebx - 0x4e ]
xchg ebp eax
leave
movsd [ edi ] [ esi ]
sbb [ eax - 0x44dd4a6d ] ecx
push [ edx + ecx * 8 - 0x25 ]
aaa
js rwxdata
jo rwxdata
push edi
pop es
or edx [ ebx + 0x64 ]
and al 0x7a
dec edx
nop
and bh [ ebx - 0x24358b01 ]
scasd [ edi ]
sbb al 0x2c
popfd
push 0xc12a816
dec esi
push eax
mov edx 0xff247b44
pushad
mov edx [ esi + ecx - 0x592b5530 ]
fmul [ ebx ]
mov ah 0x2
mov ebp 0x35f46afe
aaa
mov edi 0xa7a85500
lea esi [ ecx ]
and bh [ ebp - 0x48 ]
sbb cl [ eax - 0x53 ]
push ebp
fwait
inc ebx
jae rwxdata
enter 0xc758 0xd8
out 0xf8 eax
inc ecx
mov [ 0x49af0bd9 ] al
xchg esi eax
xlat
fldenv [ edi + 0x604bf728 ]
mov eax 0x55ad481a
dec ecx
xchg esi eax
cmpsd [ esi ] [ edi ]
jno rwxdata
sub [ eax ] bh
inc esi
push ebx
fnstcw [ edx + 0x37086577 ]
cld
push ds
rcl edx 0xa2
sbb al 0x27
and al 0x9d
lahf
test [ esi ] esi
pop eax
xchg esp eax
mov eax 0x4b1ebc67
adc eax [ edx + 0x1edae4fb ]

sub bh dh
dec ebx
pushad
and [ ebp + 0x22 ] ch
inc esi
sbb [ edi - 0x64 ] eax
lea esp [ esp + 0x4c ]
jmp sub_101d761e
sub_101d025c
push [ edi ]
pop [ esp + 0x4 ]
cmp ebx ebp
push [ esp ]
jmp rwxdata
mov [ esp + 0x4 ] 0xb9
cmp edi ebx
push esi
lea esp [ esp + 0xc ]
ja rwxdata
pushfd
sub edi 0x4
call sub_101d025c
neg al
rcr al 0x6
cmc
and al cl
sub ebx edi
pushfd
shl di cl
test bl 0x0
lea esp [ esp + 0x4 ]
add ebx esp
pushad
pushad
dec edi
mov edi ebx
rcl al cl
test si 0x98e9
mov al 0x2e
clc
[ edi ]
push [ esp ]
push 0xa001750d
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x48 ]
jne rwxdata
call sub_101ff997
bt si 0x7
add dl dl
call sub_10123afb
lahf
pushad
mov [ edi - 0x1 ] 0x0
lea eax [ ecx + 0x230bf6a9 ]
mov [ esp + 0x8 ] ch
pop eax
mov [ esp + 0x18 ] ebx
call sub_101d70ad
mov [ esp + 0x8 ] ebp
xchg [ esp + 0x24 ] eax
pushad
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x4 ] 0x35
lea eax [ LocalAlloc@IAT ]
pushfd
mov [ esp + 0x40 ] rwxdata
call sub_10129d80
pushad
mov [ esp ] 0xb3
mov [ esp ] dl
push 0x89476c00
lea esp [ esp + 0x24 ]
call sub_10110704
sub_101d07e9
pop ebx
rcl ebx 0x15
pushfd
mov ebx [ edx + 0x20 ]
bt cx 0x1
setg ch
cmc
add ebx eax
neg cl
mov [ ebp - 0x8 ] 0x0
btr cx 0x1
mov ecx [ edx + 0x18 ]
mov [ esp + 0x4 ] 0xd0
cmp ecx [ ebp - 0x8 ]
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
call sub_101146c3
jpe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
mov [ esp + 0x4 ] ah
jmp rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
sub_101d17ec
cmp ah 0x5a
pushfd
pushfd
lea esp [ esp + 0xc ]
ja rwxdata
jpe rwxdata
push esi
pushad
cmc
add ah 0x20
add esp 0x24
bt cx dx
stc
push 0x77e3754
cmc
or al al
lea esp [ esp + 0x4 ]
ja rwxdata
bt bx 0x7
bt edi esp
cmc
or al al
jmp sub_1010f660
push 0xb8956fd8
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
push 0x1a8526e
lea esp [ esp + 0x4 ]
je rwxdata
cmp ah cl
pushfd
or ah ah
push ebx
pushad
push 0xd2a60b1a
pushfd
lea esp [ esp + 0x30 ]
je rwxdata
push 0x77d0f8ce
stc
cmp al ah
jmp sub_10123af6
pushfd
stc
pushad
stc
cmp al ah
pushad
call sub_10123799
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
stc
push edi
mov [ esp ] 0xe530312d
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_101d18d0
pushad
[ edi ]
push 0x4979f17e
mov [ esp ] 0x59
mov [ esp + 0x8 ] 0x47
lea esp [ esp + 0x28 ]
jne rwxdata
call sub_101146c3
jpe rwxdata
jmp rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
setl ch
shl esi 0x1
mov ecx edi
inc si
push ebx
movzx si al
shl si 0xe
sub ecx ebx
mov [ esp ] si
bt sp 0x5
lea esi [ esp + 0x4 ]
clc
test dl dh
pushfd
cmp bh 0x66
sub edi 0x4
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
clc
push [ edi ]
pop [ esp + 0x4 ]
pushad
cmp edi ebx
pushfd
lea esp [ esp + 0x28 ]
ja rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
pushfd
sub edi 0x4
call sub_101d025c
mov al ch
shr al cl
sete al
sub ebx edi
test ch ch
add ebx esp
pushad
cmc
mov edi ebx
jmp rwxdata
cmc
shl al cl
mov al 0x2e
cmp ecx 0x5a055bff
stc
pushad
stc
[ edi ]
jmp rwxdata
pushfd
jmp rwxdata
mov [ esp + 0x4 ] 0xc2
lea esp [ esp + 0x44 ]
jne rwxdata
call sub_101ff997
bt si 0x7
add dl dl
call sub_10123afb
movzx eax bl
push esp
jmp rwxdata
mov [ edi - 0x1 ] 0x0
push edx
movsx ax bl
movsx eax al
lahf
mov [ esp + 0x4 ] ebx
movzx ax al
lea eax [ rwxdata ]
mov [ esp ] 0x15
mov [ esp ] rwxdata
pushad
pushfd
push edi
call sub_101d1384
movsb [ edi ] [ esi ]
int1
scasb [ edi ]
cdq
out 0x8 al
inc edi
or eax [ edx + 0x5290b89b ]
lodsb [ esi ]
jecxz rwxdata
out 0xf8 eax
jbe rwxdata
sbb eax 0x6c32d321
adc eax [ edx - 0x2fc2bec4 ]
aas
jno rwxdata
stosb [ edi ]
xchg ebp eax
push ecx
lea esi [ 0x5a891589 ]
int1
insd
mov eax [ 0x1665fa7d ]
mov [ ebx - 0x66 ] ebp
out dx al
cld
and ah [ ebx - 0x53 ]
cmp ebx [ ecx + 0x15ef12c ]
arpl [ ebp - 0xed366c5 ] bp
pop esi
add eax esi
adc eax 0xc495d469
push ss
aad 0xba
push esp
dec ebx
sub_101d1bb4
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

lahf
cwde
lahf
movsx ax bl
mov eax [ edx + 0x8 ]
pushfd
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_101d1c62
mov eax [ esp + 0x40 ]
call j_sub_10121e31
pushad
pushad
lea esp [ esp + 0x44 ]
jne rwxdata
cmc
stc
push esi
shrd esi edx cl
jmp rwxdata
push ebx
mov [ esp ] bx
pushfd
stosb [ edi ]
pushad
push 0x8022353e
push [ esp ]
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
mov esi edi
test si cx
bt dx 0x9
sub esi eax
jmp sub_101d00e1
pushfd
lea esp [ esp + 0x4 ]
call sub_101119b1
sub_101d1d7a
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
test ecx 0xd70059c
xor eax eax
test edi ecx
push ebx
add edx 0x11c
pushfd
mov [ esp ] 0xfb
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
pop edi
movzx si bl
pushad
movzx esi [ edx + 0x1a ]
mov di dx
lea esi [ esi + edx + 0x1c ]
lea edi [ ecx * 8 - 0x1faf83d3 ]
not di
mov edi [ ebp + 0x8 ]
pushfd
pushad
lea esp [ esp + 0x44 ]
call sub_101d761e
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

mov ah dl
mov eax [ edx + 0x8 ]
pushad
mov [ esp + 0x4 ] al
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_101d6a76
mov esi [ ebp + 0xc ]
pushfd
pushfd
push edx
mov [ esp + 0x18 ] eax
mov al [ esp + 0x8 ]
jmp rwxdata
pushad
jmp rwxdata
lodsb [ esi ]
cmc
jmp rwxdata
push 0x24c9f407
call sub_1012b374
push [ eax ]
pop [ esp + 0x2c ]
push [ esp + 0x4 ]
pushfd
push [ esp + 0x34 ]
retn 0x38
sub_101d6ce9
lodsb [ esi ]
lea esp [ esp + 0x30 ]
jge rwxdata
push edi
clc
stc
rol al 0x1
clc
clc
neg al
stc
jmp rwxdata
pushfd
mov [ esp ] dx
bt sp sp
rol al 0x1
call sub_10123b00
stc
not al
call sub_1012b715
sub_101d70ad
movzx eax bl
seta al
lea eax [ rwxdata ]
pushad
push [ esp + 0x8 ]
call sub_101d2045
call sub_1012b54d
cmp ch 0x9f
or eax eax
push 0x2e0597e1
lea esp [ esp + 0x4 ]
jne rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
or ecx ebp
pushad
mov ecx [ ebx ]
mov [ esp ] 0xa4c68a89
or ecx ecx
lea esp [ esp + 0x20 ]
jge rwxdata
call sub_101fd8b5
sbb eax 0x4bb357c7
je rwxdata
pushfd
bswap si
jmp rwxdata
lea edx [ ebx + 0x4 ]
push [ esp ]
push [ esp + 0x4 ]
movzx esi [ edx + 0x1a ]
movsx di bl
lea esi [ esi + edx + 0x1c ]
pushfd
mov di [ esp + 0x8 ]
bswap edi
not di
mov edi [ ebp + 0x8 ]
pushad
call sub_101d1b79
sub_101d761e
clc
mov al bh
mov al [ edi ]
push 0x898812e0
cmp al 0x41
jmp rwxdata
push [ esp ]
lea esp [ esp + 0x8 ]
jb rwxdata
bt di bx
not ah
and ah 0xc
rcr ah cl
mov ah [ esi ]
clc
pushfd
jmp rwxdata
bt bx 0x1
pushad
push edi
cmp al 0x5a
push esi
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
cmc
cmp ah 0x41
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
shr ah cl
pushad
ror ah 0x1
add al 0x20
add esp 0x20
jmp sub_1012c68a
jb rwxdata
jpe rwxdata
call sub_101d17ec
pushad
jmp rwxdata
bt cx dx
stc
push 0x77e3754
cmc
or al al
lea esp [ esp + 0x4 ]
ja rwxdata
bt bx 0x7
bt edi esp
cmc
or al al
jmp sub_1010f660
cmc
pushfd
mov eax [ ebp - 0x8 ]
cmc
test bp si
add esp 0x24
ja rwxdata
push 0xb8956fd8
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
push 0x1a8526e
lea esp [ esp + 0x4 ]
je rwxdata
pushad
shl eax 0x1
pushad
lea esp [ esp + 0x40 ]
je rwxdata
shl eax 0x1
jmp rwxdata
cmp ah cl
pushfd
or ah ah
push ebx
pushad
push 0xd2a60b1a
pushfd
lea esp [ esp + 0x30 ]
je rwxdata
push 0x77d0f8ce
stc
cmp al ah
jmp sub_10123af6
pushfd
stc
pushad
stc
cmp al ah
pushad
call sub_10123799
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
call sub_10129831
je rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
stc
push edi
mov [ esp ] 0xe530312d
cmp ah 0x2e
lea esp [ esp + 0x4 ]
push 0x2a7d244f
mov [ ebp - 0x4 ] eax
mov [ esp ] dh
jmp sub_101d00db
sub_101d7caf
lea esp [ esp + 0x2c ]
jae rwxdata
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
movzx bx bl
movzx bx dl
movzx bx al
mov ebx eax
mov di dx
push ebx
mov edi eax
setno cl
or ecx 0x2c5b8b58
rcr ch cl
shld ecx esp 0x3
mov ecx 0x104
push ecx
xor al al
call sub_10127649
sub_101d7e8c
pushad
pushad
lea esp [ esp + 0x44 ]
je rwxdata
push ecx
jmp sub_10112619
bswap si
lea esi [ edi * 8 - 0x322541d7 ]
mov esi eax
pushad
mov [ esp + 0x1c ] ebx
bswap ax
lea eax [ LocalFree@IAT ]
jmp rwxdata
call sub_10201fc6
sub_101d8293
mov edi [ edi + ecx * 4 ]
stc
pushad
mov [ esp ] ebx
test edi edi
jmp rwxdata
mov [ esp ] bh
lea esp [ esp + 0x28 ]
je rwxdata
call sub_101146c3
jpe rwxdata
clc
pushad
bt sp bx
test bl 0x3d
add eax edi
sub esp 0xffffffe0
call sub_10122276
cwde
mov eax 0x9902dcc6
out 0xf7 al
pop ecx
inc ebp
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_101fbdde
lea esp [ esp + 0x4 ]
jno rwxdata
push 0xfccbcd44
call sub_10202aab
xor eax 0x3f80631b
in al 0x7b
mov esp 0x4772e2fd
sti
imul ebx ebp 0xffffffe1
std
vminpd xmm0 xmm0 [ ecx ]
leave
push ebp
fld [ edx ]
xor [ esi - 0x25 ] ch
and esi [ ebx + ecx * 2 ]
in al 0x3b
0x95a19ef4 0x7be9
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
call sub_101146c3
jpe rwxdata
mov edx 0x63debe8d
mov esi [ eax + 0x3c ]
dec dx
add esi eax
bswap edx
shld dx di 0x5
xor dl 0x26
rol dl 0x1
mov edx [ esi + 0x78 ]
pushfd
mov [ esp ] 0xd1
call sub_10126a30
pushfd
jmp rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushfd
lea esp [ esp + 0x28 ]
jae rwxdata
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
clc
btr edi ecx
sbb ch cl
bts di 0x3
mov ebx eax
test dx bp
mov edi eax
and cl dh
mov ecx 0x104
call sub_101ffbb7
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_101fbfb1
shl si 0xd
lea esi [ esp + 0x24 ]
test sp 0x1051
sub edi 0x4
pushfd
stc
push [ edi ]
pop [ esp + 0x24 ]
clc
jmp rwxdata
call sub_10124e98
sub [ eax ] ch
push esi
lodsb [ esi ]
mov dl 0xf0
out dx al
jmp edx
sub_101fbfcf
lea esp [ esp + 0xc ]
ja rwxdata
jpe rwxdata
push 0x12e94fa
push 0x9338bf14
push ecx
add ah 0x20
cmp ecx 0x4773bc42
bt di cx
or al al
pushad
lea esp [ esp + 0x2c ]
je rwxdata
bt cx dx
stc
push 0x77e3754
cmc
or al al
lea esp [ esp + 0x4 ]
ja rwxdata
bt bx 0x7
bt edi esp
cmc
or al al
jmp sub_1010f660
cmp ah cl
pushfd
or ah ah
push ebx
pushad
push 0xd2a60b1a
pushfd
lea esp [ esp + 0x30 ]
je rwxdata
call sub_101fec8c
je rwxdata
push 0xb8956fd8
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
push 0x1a8526e
lea esp [ esp + 0x4 ]
je rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
stc
push edi
mov [ esp ] 0xe530312d
cmp ah 0x2e
lea esp [ esp + 0x4 ]
call sub_101fd200
push 0x99feca98
call sub_101d06e7
push 0x77d0f8ce
stc
cmp al ah
jmp sub_10123af6
pushfd
stc
pushad
stc
cmp al ah
pushad
call sub_10123799
sub_101fc018
lea esp [ esp + 0x48 ]
je rwxdata
call sub_101146c3
jpe rwxdata
bt ebx 0x9
clc
test sp dx
pushad
add eax edi
cmc
cmp eax edx
pushad
mov [ esp + 0x8 ] 0xe0
lea esp [ esp + 0x40 ]
jb rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
pushad
cmp eax [ ebp - 0x10 ]
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
pushfd
jmp rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
pushfd
lea esp [ esp + 0x28 ]
jae rwxdata
clc
btr edi ecx
sbb ch cl
bts di 0x3
mov ebx eax
test dx bp
mov edi eax
and cl dh
mov ecx 0x104
call sub_101ffbb7
sub_101fc5b3
cmp ebx 0x1
pushfd
push 0x95beb2cb
push esp
lea esp [ esp + 0x14 ]
je rwxdata
mov bx cx
shrd bx bx cl
mov bx [ esi ]
clc
pushfd
and ebx 0xfff
call sub_10110e0c
imul edx [ ebx - 0x75 ] 0x6cb32897
jge rwxdata
cmp sp si
cmp ebx 0x2
jmp rwxdata

push es
in eax dx
add dh 0xd1
into
test eax 0x9922db6
jbe rwxdata
jmp rwxdata
cmp al 0x4d
in al dx
mov dl 0xbd
fbld [ edx + 0x10 ]
sbb al 0xc6
aas
mov dl 0x53
mov ss [ eax - 0x1493962f ]
mov bh 0x56
mov ebx 0x130b03
aas
fwait
inc esp
mov [ 0xfffffffffb12cc1d ] al
dec esi
in al 0x5a
and al 0x9a
je rwxdata
pushad
lea esp [ esp + 0x20 ]
je rwxdata
add edx [ ebx ]
dec ebx
jmp [ eax - 0x5 ]
adc bh bl
movq mm4 [ ebx - 0x28203f45 ]
daa
add bl 0xb4
sbb bh 0xc1
mov bx [ esi ]
call sub_101108bc
bt dx dx
pushfd
test bl 0xe9
call sub_10116f0e
sub_101fc67f
ror dl 0x4
lea esp [ esp + 0x42 ]
jbe rwxdata
bt eax 0xa
test dl dh
clc
clc
popf
pushad
push 0x33cb6971
pushad
inc esi
push [ esp ]
jmp rwxdata
test dl bh
popf
push eax
inc esi
lea esp [ esp + 0x4 ]
jge rwxdata
push ecx
adc dl dl
mov [ esp ] 0xb4
push 0xa7a31485
mov [ esp ] 0xf7
push [ esp + 0x50 ]
retn 0x54
call sub_1012b54d
cmp ch 0x9f
or eax eax
push 0x2e0597e1
lea esp [ esp + 0x4 ]
jne rwxdata
push 0x6438acaf
adc dl dl
lea esp [ esp + 0x4 ]
pushfd
call sub_1012c2dd
in al dx
sbb bl [ fs : ebp + 0x2 ]
or al 0x12
and eax [ eax + 0x6cdc5476 ]
imul esi [ ebx - 0x1d ] 0x7b
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
or ecx ebp
pushad
mov ecx [ ebx ]
mov [ esp ] 0xa4c68a89
or ecx ecx
lea esp [ esp + 0x20 ]
jge rwxdata
call sub_101fd8b5
sbb eax 0x4bb357c7
je rwxdata
pushfd
bswap si
jmp rwxdata
lea edx [ ebx + 0x4 ]
push [ esp ]
push [ esp + 0x4 ]
movzx esi [ edx + 0x1a ]
movsx di bl
lea esi [ esi + edx + 0x1c ]
pushfd
mov di [ esp + 0x8 ]
bswap edi
not di
mov edi [ ebp + 0x8 ]
pushad
call sub_101d1b79
sub_101fc76d
mov eax [ esp + 0x38 ]
call sub_10112838
call sub_10125520
jo rwxdata
mov [ esp ] 0x23
lea esp [ esp + 0x3c ]
ja rwxdata
sub dl [ 0xffffffffef1b5c71 ]
mov al [ 0x448b97c8 ]
and al 0x38
cmp al 0x86
ror [ esi + 0x18afd39f ] 0x1
dec ecx
inc [ ebp - 0x6 ]
int3
sub_101fcfe8
pushad
push edx
xchg [ esp + 0x34 ] eax
jmp rwxdata
push [ ebp - 0x4 ]
pop [ esp + 0x30 ]
bswap eax
mov [ esp + 0x2c ] ebx
cwde
cwde
mov [ esp + 0x28 ] 0xb
mov ah 0xb6
movzx ax al
movsx ax al
lea eax [ rwxdata ]
pushfd
call j_sub_1012bbf1
cmpsd [ esi ] [ edi ]
test ecx ebx
mov dh 0x9
add ebp edi
push cs
ror [ esi + ecx * 2 - 0x4f ] cl
cmp [ ebp - 0x2a8d9275 ] bh
stosb [ edi ]
cmp al 0xa2
nop
scasb [ edi ]
sub_101fcffd
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
pushfd
call sub_1012c2dd
in al dx
sbb bl [ fs : ebp + 0x2 ]
or al 0x12
and eax [ eax + 0x6cdc5476 ]
imul esi [ ebx - 0x1d ] 0x7b
mov dl 0x98
push 0xdb9aafb9
pushf
pop [ esp + 0x2 ]
bt si si
rcl dl 0x2
mov dl [ esi ]
mov [ esp ] 0x61
pushfd
pushad
pushfd
rol dl 0x1
cmp sp cx
call sub_1020259b
sub_101fd1dd
stc
bt bx dx
push [ esp ]
test edi edi
pushfd
lea esp [ esp + 0x1c ]
je rwxdata
call sub_101146c3
jpe rwxdata
clc
test ebp 0x9bc1a6d6
test bh bl
call sub_102006f6
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_101fd8b5
lea esp [ esp + 0x4 ]
je rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sete dl
lea edx [ ebx + 0x4 ]
jmp rwxdata
movzx di dl
movzx esi [ edx + 0x1a ]
not di
bswap edi
bswap di
lea esi [ esi + edx + 0x1c ]
lea edi [ esi + 0x213e54e9 ]
mov edi [ ebp + 0x8 ]
jmp rwxdata
push 0xd24c6716
pushfd
pushfd
lea esp [ esp + 0xc ]
call sub_101d761e
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
call sub_10201973
xor al 0xa9
adc al 0x8a
xor dh ch
inc ebx
pop ss
mov bh cl
inc eax
sbb al [ ecx + 0x118ed0c7 ]
scasb [ edi ]
leave
xchg esi eax
sar [ esi + 0x619d233 ] 0x78
inc esi
test al 0x96
push eax
mov fs [ ecx - 0x2bcc3482 ]
or esi [ edx + 0xc ]
dec esi
xor [ ebx - 0x3150908e ] edx
mov al 0xf1
in al 0xfb
cmp al 0x9c
inc edx
or [ eax ] edi
mov edx 0x99e6b58a
in eax dx
pop es
scasd [ edi ]
push ds
sub eax 0xc9b827b8

call sub_10112c99
sub_101fdaf8
mov esi [ esp + 0x2c ]
pushfd
mov ebx [ esp + 0x34 ]
push [ esp + 0x4 ]
mov esp ebp
push esi
pop ebp
pushad
bswap ebp
mov ebp [ esp + 0x20 ]
pushad
push 0x15c7c089
mov [ esp + 0x4 ] eax
pushfd
push [ esp + 0x4c ]
retn 0x54
sub_101fde6d
lea esp [ esp + 0x4 ]
jno rwxdata
call sub_101292f0
push 0xc634a9cf
not al
push [ esp ]
mov [ esp ] 0xadf2
jmp rwxdata
mov [ esp + 0x4 ] 0x70
dec al
clc
cmc
clc
jmp rwxdata
rol al 0x7
mov [ esp ] ah
pushad
test bl cl
cmp al [ edi ]
pop eax
pop eax
push [ esp + 0x4 ]
lea edi [ edi + 0x1 ]
pop eax
pop eax
movzx eax al
mov eax [ esp + 0x1c ]
push 0x4a33fe90
jmp rwxdata
call sub_10111dbe
pop ecx
sbb [ edi + 0x7 ] ah
mov bh 0x7b
retn
sub_101fde8c
mov [ esp ] 0x7d
pushfd
push 0xd11b693a
mov [ esp + 0x44 ] rwxdata
call sub_101d7230
mov ch 0x9b
jecxz rwxdata
lodsd [ esi ]
jmp rwxdata
fild [ ebx ]
shl esp cl
and edx [ esi ]
push ss
add al 0x44
push ebx
dec esp
xchg edi eax
sub cl cl
cmp al 0xc6
cwde
dec esi
nop
lahf
xor [ edx - 0x17685f74 ] 0xf9
cld
dec edi
xchg esi eax
outsd
mov [ esp + 0x4 ] 0x70
dec al
clc
cmc
clc
jmp rwxdata
rol al 0x7
mov [ esp ] ah
pushad
test bl cl
cmp al [ edi ]
pop eax
pop eax
push [ esp + 0x4 ]
lea edi [ edi + 0x1 ]
pop eax
pop eax
movzx eax al
mov eax [ esp + 0x1c ]
push 0x4a33fe90
jmp rwxdata
call sub_10111dbe
pop ecx
sbb [ edi + 0x7 ] ah
mov bh 0x7b
retn
sub_101fe40d
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
btc cx bx
pushad
mov ecx edi
lea esp [ esp + 0x20 ]
stc
mov al [ ecx ]
jmp sub_101ffdc9
lahf
bt ax 0xe
movsx eax al
sub edx edx
mov ah bl
mov eax edx
pushad
push 0x2a5719b0
push [ esp + 0x8 ]
lea esp [ esp + 0x28 ]
jmp sub_10126e7f
sub_101fe66c
lea esp [ esp + 0x34 ]
jne rwxdata
stc
mov al [ ecx ]
jmp sub_101ffdc9
pushad
mov [ esp + 0x1c ] edi
push [ esp ]
mov [ esp ] al
mov [ esp + 0x1c ] ebx
lea esp [ esp + 0x1c ]
jns rwxdata
call sub_10110dfc
push 0x6bfd71d7
lea esp [ esp + 0x4 ]
call sub_1010f9f9
pushad
mov [ esp + 0x8 ] al
pushfd
push [ esp + 0x10 ]
mov esp esi
push eax
lea esp [ esp + 0x4 ]
jmp rwxdata
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
sub_101fec8c
clc
pushfd
jmp rwxdata
cmp al ah
pushad
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x2c ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_1012227e
sub_101ff21b
jmp rwxdata
pushfd
mov edi [ ebp + 0x8 ]
call sub_10113869
xor eax [ ecx + 0x5d ]
sbb al [ ebp + 0x7a ]
and eax 0x4e295f36
mov dl 0x96
and [ ds : ebp - 0x4eea3627 ] 0x22a17d4d
mov ebp 0x9fcf58a
cdq
inc ebp
adc ebp 0x425add89
retn 0x9426
dec esi
jno rwxdata
dec esp
xor edi [ edi + 0x52b8267f ]
lea edi [ ebp + 0x62 ]
shl [ ecx + 0x5b ] 0x1
out dx eax
inc ebx
dec esp
retn 0x9cdd
jge rwxdata
retn
rwxdata
push cs
jecxz rwxdata
jge rwxdata
insd
inc esp
pop edx
imul eax [ edx - 0x374bd53b ] 0x2a
xor al 0x89
add dh bh
out 0xae eax
dec ebp
hlt
sub_101ff983
call sub_10110ba7
add [ eax ] al
inc esp
insb
je rwxdata
mov al [ 0x3bd24df4 ]
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x60 ] si
pushad
pushfd
mov esp esi
pushfd
mov [ esp ] 0xa8
lea esp [ esp + 0x4 ]
jmp rwxdata
xchg ebp eax
push es
jns rwxdata
scasd [ edi ]
aaa
mov ah bl
imul ecx [ edx + 0x39 ] 0xb59ac45
nop
inc ebp
movsb [ edi ] [ esi ]
xchg ecx eax
dec esi
clc
out 0xab eax
hlt
call sub_101146c3
jpe rwxdata
fsubr st1
sub [ esi ] esi
dec edx
dec edx
adc eax 0xef980dc4
mov eax [ 0xfffffffff332d96a ]
aad 0xf
cdq
stosb [ edi ]
mov esp 0xd8c79483
jmp 0x5a6a3007
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
add [ ebx ] ah
mov bl 0x94
in al dx
jae rwxdata
fnstenv [ edx ]
aad 0xf
push esp
arpl [ ebx - 0x3589b68e ] bp
bound ebp [ esi + 0x16813990 ]
mov [ edx - 0x439c8759 ] ebx
std
popad
dec ecx
inc ebx
std
test al 0x84
cmp eax [ ebx - 0x7cc2bfd ]
xchg [ eax ] edi
jns rwxdata
imul [ esi ]
into
fbld [ eax + 0x3bd24df4 ]
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_101ff997
pushad
pushad
pushfd
mov esp esi
pushfd
mov [ esp ] 0xa8
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_101146c3
jpe rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_101ffbb7
cmp di si
pushad
mov [ esp + 0x4 ] 0xe9
sub al al
push 0x7ae2c657
cmp bh 0xae
[ edi ]
jmp rwxdata
jmp rwxdata
push [ esp + 0x8 ]
lea esp [ esp + 0x2c ]
jne rwxdata
call sub_101146c3
jpe rwxdata
pushad
bts ecx 0xe
mov ecx edi
inc esi
dec si
sub ecx ebx
call sub_101fbfb1
mov [ esp ] 0x96
and ebx 0xfff
jmp rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
test dx ax
add [ ebx + edi ] dx
mov [ esp ] ch
push 0x8a19afd
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push edx
test si sp
add esi 0x2
pushad
dec ecx
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
shr bh 0x7
btr bx bp
or bh dl
mov bx [ esi ]
push 0xe34678d9
shr ebx 0xc
cmp esp 0x6ccd04e3
call sub_101fc5b3
bsf cx dx
rcr ch cl
movzx cx dl
mov ecx [ ebp - 0x4 ]
clc
stc
pushad
call sub_10114c57
lea esp [ esp + 0x28 ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_101131cc
sub_101ffcd6
call sub_101d1d7a
adc [ eax + 0x1f ] esp
push es
fcomp st6
adc [ edx + 0x56180f16 ] 0x59f12ef2
inc ebp
test [ ecx + 0x116dc9f6 ] ebx
mov [ 0xffffffffb57dc23d ] al
mov [ ecx - 0x23 ] eax
loop rwxdata
and al 0x2c
jb rwxdata
call sub_10204542
jmp rwxdata
push edx
mov ebp 0x9c9cb88b
pushad
push 0xb268fd88
lea esp [ esp + 0x2c ]
xor [ 0x2d91f18e ] ecx
0x64b7d364 0x178
popfd
cli
cmpsb [ fs : esi ] [ edi ]
pop eax
cdq
sbb cl [ edx + 0x7c4aef2c ]
jecxz rwxdata
xchg esp eax
movsd [ edi ] [ esi ]
dec edx
and al [ 0xffffffff807e6d52 ]
xor [ 0xfffffffffe60f668 ] ebp
xchg ebp eax
sbb ch 0xf8
or eax 0x728e71e
js rwxdata
push 0x7b
cmc
0x82db
sub_10200147
pushad
mov [ esp + 0x3c ] eax
pushfd
pushfd
lodsb [ esi ]
stc
lea esp [ esp + 0x44 ]
jne rwxdata
pushfd
rol al 0x7
mov [ esp ] dh
pushfd
push [ esp ]
pushfd
not al
push esi
call sub_10110340
rol al 0x7
call sub_101fde6d
pushad
ror al 0x4
clc
call sub_1012c04e
sub_1020016c
inc esi
pushad
call sub_101fc2ac
jmp rwxdata
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x30 ]
jne rwxdata
btc cx bx
pushad
mov ecx edi
lea esp [ esp + 0x20 ]
stc
mov al [ ecx ]
jmp sub_101ffdc9
add al ch
not ah
or ax 0xf658
shrd ax dx cl
xor edx edx
clc
mov eax edx
or al cl
shr al 0x1
bt bp dx
bt edx 0x1
add edi 0x1
mov al 0xf2
call sub_1020287f
sub_10200430
lea esp [ esp + 0xc ]
jb rwxdata
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
pushad
cmc
cmp eax [ ebp - 0x10 ]
call sub_101228f7
inc edi
push [ esp ]
mov [ esp + 0x4 ] al
lea esp [ esp + 0x4c ]
jmp sub_101d761e
sub_102016c2
call sub_101fbaa4
pop ebx
into
jno rwxdata
retn 0xca81
push ecx
add eax 0xd812c859
xor al 0x20
sub al dl
psubq mmx0 [ ebx ]
sub al 0xf3
test bl bl
push edi
out 0xb7 eax
out 0xdb eax
jecxz rwxdata
xchg ecx eax
out 0xff eax
fistp [ ebx + eax * 8 + 0x3be4f728 ]
aam 0x6b
out dx al
jo rwxdata
test ebx 0x45ffbe81
xor dl [ edx + ecx * 4 - 0x1e ]
xchg ecx eax
int 0xde
in al dx
xor ecx [ eax ]
aas
and [ eax + ebp * 4 ] edi
test [ edi + 0x70 ] esp
outsb
pop ebp
add [ ebp - 0x47 ] 0x2e7001fd
aas
or dl [ edx ]
mov [ 0xfffffffffcc311c6 ] al
retn
jge rwxdata
pop edi
call [ esp + esi * 4 - 0x6f ]
xor bh bl
and dh [ ebp + 0x1605ba29 ]
fucomi st3
pop esi
pop edx
push ss
pop ss
js rwxdata
cmp al ah
pushad
pushfd
jmp rwxdata
inc ebp
jns rwxdata
or eax 0xfb88b74e
mov al 0xd0
arpl [ edi + 0x6a ] bp
jpe rwxdata
push eax
jmp rwxdata
push ss
mov al 0x4e
inc eax
in eax 0x52
js rwxdata
lea esp [ esp + 0x2c ]
jne rwxdata
mov ch 0x12
int 0x91
mov ah 0x50
xor al 0x6a
stosd [ edi ]
arpl bx bx
push edi
out 0x28 eax
mov [ edi ] fs
jpe rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_1012227e
rcr [ esi - 0x73 ] 0x92
cmpsb [ esi ] [ edi ]
push eax
outsd
jge rwxdata
mov bl [ ebx - 0x2b89f7aa ]
add [ cs : edi + 0x21 ] eax
leave
stc
mov [ ecx - 0x33fdc284 ] 0x72
xor [ esi ] 0xffffffa9
0x9e32e7b1 0xb96f
cmc
sub_10201973
stc
cmc
add ecx 0xffffffff
call sub_101ffcd6
in al dx
clc
mov al [ es : 0xffffffff8f7e415e ]
pop edi
loopne rwxdata
sbb cl [ edx ]
imul [ ecx - 0x358a4e53 ]
push es
nop [ edi ] ebp
inc esp
cmp esp [ edx - 0x5d ]
sbb al 0x83
lodsb [ esi ]
jae rwxdata
add eax 0xba05e1de
sti
push edx
sub eax 0xec3ab030
and al 0x23
cmp edi edx
inc esp
popfd
or [ ecx + 0x6c960856 ] 0x3007feb3
das
mov dl [ esi + eax + 0x79 ]
sar [ ebp - 0x243c21e0 ] 0x2f
adc [ edx ] ah
sbb al 0x3e
pushad
push ds
mov al [ 0xffffffffd48a7867 ]
jg rwxdata
or eax 0xb53035b
leave
into
shr edi 0xb0
push esp
push es
jns rwxdata
pop es
push edi
and [ ebx + 0x2b ] esi
pop esi
push es
js rwxdata
or dl [ edx + ebx * 4 ]
or edx [ ebx - 0x5b22635e ]
cmp dh cl
dec esp
mov [ 0xffffffffbee03d3b ] eax
rcl cl 0xf
packsswb mm6 [ ebx + 0x57 ]
das
adc eax 0x7e90ce79
mov al [ 0x640f73b1 ]
test eax 0xdccb2a0
pop ebx
add edx [ ebx + 0xb ]
test eax 0x83dc9e40
xor ecx [ edx + ebp + 0x7ce3a695 ]
lea esi [ ebx ]
adc edi edi
mov dh 0x29
cmp dl bh
inc esp
test [ esi + edx * 4 + 0x7aee0a5f ] edi
in eax 0x26
sub [ 0xffffffff9d019d01 ] bh
push edi
scasb [ edi ]
sbb esi eax
int3
push ebp
jge rwxdata
jno rwxdata
mov ebp 0xdbc3de20
das
pop esi
and [ edx + 0x66603e1c ] ah
cwde
push es
cwde
cli
in al 0xba
push ds
daa
shl [ ebp + edx * 2 - 0x3185bbe6 ] cl
xchg esp eax
inc ecx
rcr [ edx ] cl
or dh dh
test eax 0xca75b1ad
sub_10201fc6
pushad
mov [ esp + 0x3c ] rwxdata
mov [ esp ] 0xff
pushfd
call sub_101fbed2
pushfd
pushfd
push ecx
lea esp [ esp + 0xc ]
jne rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sar ch 0x5
bswap cx
bts ecx 0x1f
mov ecx [ ebx ]
cmc
test dl 0xa5
clc
pushad
or ecx ecx
call sub_1011104e
push 0x23936870
cmc
or eax eax
pushfd
lea esp [ esp + 0x8 ]
jo rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
jne rwxdata
shr cl 0x1
shl ch cl
stc
inc ecx
mov ecx [ ebx ]
cmp al 0x53
or ecx ecx
call sub_101ccecc
jmp sub_101104f0
and cx 0x458f
mov ecx [ ebx ]
pushfd
or ecx ecx
pushad
pushad
pushfd
mov [ esp + 0x4 ] 0xf0be796f
lea esp [ esp + 0x48 ]
je rwxdata
jmp rwxdata
mov dl 0x12
lea edx [ edx - 0x138f69d6 ]
seto dl
lea edx [ ebx + 0x4 ]
pushfd
movsx esi dl
movzx esi [ edx + 0x1a ]
pushad
pop edi
lea esi [ esi + edx + 0x1c ]
pushfd
mov di bx
pushad
mov edi [ ebp + 0x8 ]
push [ esp ]
call sub_10112316
sub_102022cc
mov [ esp ] 0x64
pushfd
cmp eax edx
pushfd
push 0xb2bce314
lea esp [ esp + 0x10 ]
jb rwxdata
lea edi [ ecx * 8 + 0x3a1daa9c ]
pop edx
bswap bx
xchg di bx
movzx bx bl
pop ebx
movzx esi bl
bswap si
not di
pop edi
mov si 0x32dd
movzx si al
pop esi
pushad
mov esp ebp
lea ebp [ esi * 2 + 0x38060f00 ]
push 0xa7d2a641
not ebp
mov ebp [ esp + 0x4 ]
mov [ esp + 0x4 ] esp
pushad
push 0xad171f7e
pushfd
push [ esp + 0x30 ]
retn 0x3c
pushfd
cmp di 0x9c4
bt cx 0x8
cmc
cmp eax [ ebp - 0x10 ]
jmp sub_10122b14
sub_1020287f
mov al [ edi ]
pushad
pushfd
mov [ esp ] eax
mov [ esp + 0x4 ] 0x85d9c43
lea esp [ esp + 0x28 ]
jmp rwxdata
stc
test al al
jmp rwxdata
pushfd
mov [ esp ] 0x3a
lea esp [ esp + 0x4 ]
je rwxdata
movzx di dl
clc
cmc
stc
mov edi edx
btc cx bx
pushad
mov ecx edi
lea esp [ esp + 0x20 ]
stc
mov al [ ecx ]
jmp sub_101ffdc9
call sub_10110513
mov [ eax - 0x3a ] ds
pop ss
xchg [ edi - 0x68e1cee0 ] edi
scasd [ edi ]
mov bh 0x91
and bl [ ebp + edx * 2 + 0x45bc82b0 ]
jns rwxdata
adc [ ebp + 0x72 ] esi
xchg ebx eax
dec esp
imul ebx
cmpsb [ esi ] [ edi ]
pop edi
mov al [ gs : 0x54136ce1 ]
sub edx [ edi - 0x647d8b5 ]
insb
rol [ eax + 0x1c0bd3bf ] cl
and ebp [ edi + 0x2615c988 ]
sub [ esi + 0x22 ] cl
pop esp
or al 0xf5
cwde
cmpsd [ esi ] [ edi ]
mov eax 0xd2ac6e2b
dec ebp
xchg ecx eax
rol [ ebp - 0x76 ] cl
test al 0x1d
loope rwxdata
pop ecx
mov [ ss : edx - 0x43 ] esp
mov edx 0xbd9965a5
mov eax [ 0x5d427d42 ]
insd
mov cl 0xcc
mov dl 0xc3
push esi
mov [ edx - 0x7d863fe2 ] ebx
dec edx
js rwxdata
pushfd
0x922b6747 0x17b2
cmpsb [ esi ] [ edi ]
cmp [ edx + esi + 0x68f6334b ] ecx
int 0x71
xchg ecx eax
mov ss [ eax ]
outsd
test [ eax + 0x71aa99a6 ] eax
imul edi [ edx ] 0x74aa3c53
push eax
bt cx 0x9
call sub_101d0087
sti
sbb eax 0x7fff6c60
nop
xchg edx eax
cmpsd [ esi ] [ edi ]
xor eax 0xb7f5e9a9
sub [ edx + 0x16b12d8c ] dl
leave
or ch [ ebp - 0x730cbcce ]
popfd
fisub [ eax - 0x7edc2879 ]
dec [ edi ]
sub [ esi + 0x67 ] dl
pushfd
sub_10202aab
pushad
lea esp [ esp + 0x28 ]
je rwxdata
call sub_101146c3
jpe rwxdata
pushfd
push edi
mov esi [ eax + 0x3c ]
cmp dl 0x39
setb dh
mov [ esp ] al
push esp
add esi eax
shld dx ax 0x5
not dh
mov edx [ esi + 0x78 ]
clc
bt bx sp
test edx edx
push [ esp + 0x4 ]
call sub_101cf8cb
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
sub_10202b58
pushfd
lea esp [ esp + 0x14 ]
je rwxdata
call sub_101245f0
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
into
inc ecx
dec ebx
jpo rwxdata
and al 0x1b
in al dx
[ edi ]
das
add [ edi ] bl
pop es
ja rwxdata
push edx
test si sp
add esi 0x2
pushad
dec ecx
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
cmpsb [ esi ] [ edi ]
mov bh 0xb9
jns rwxdata
push 0x65e2f4b8
sub dl [ ebp + 0x34 ]
cmpsb [ esi ] [ edi ]
and cl cl
push ebp
fistp [ ebx - 0x7 ]
mov edx [ edi + ecx ]
inc eax
inc eax
pop eax
popfd
jne rwxdata
push esp
adc eax 0xb8665a49
or dh [ esp + ebx * 4 - 0x5af5ccde ]
pop ecx
movsd [ edi ] [ esi ]
and eax 0xaac09f16
cmp ch cl
and al 0xe1
rcr dh 0xef
test [ ecx ] edi
salc
aam 0xd5
0x3364
xchg [ eax ] edi
fwait
retn
shr bh 0x7
btr bx bp
or bh dl
mov bx [ esi ]
push 0xe34678d9
shr ebx 0xc
cmp esp 0x6ccd04e3
call sub_101fc5b3
bsf cx dx
rcr ch cl
movzx cx dl
mov ecx [ ebp - 0x4 ]
clc
stc
pushad
call sub_10114c57
lea esp [ esp + 0x28 ]
jne rwxdata
int3
xchg edi eax
push ss
out dx eax
cli
mov [ 0x6c35f7a9 ] al
inc edi
mov esi 0x5c19a5cf
clc
pop edi
sar [ eax + edx * 8 + 0x1f015af ] 0x34
ja rwxdata
or al 0x32
jae rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_101131cc
jle rwxdata
pop cx
shl [ edx + edi * 8 + 0x322d4a74 ] 0x1
inc ebx
cmp bl [ ebx ]
and [ ebp + 0x3bcfafa3 ] 0xffffffc3
test bl bh
jo rwxdata
mov [ 0xffffffffecb64fb4 ] eax
mov bl 0xf
pop ecx
xchg [ ebp - 0x17 ] dh
dec esp
imul esi [ ebx ] 0xffffffff
and [ 0x57469851 ] ch
jno rwxdata
inc edx
jge rwxdata
imul esi [ esi - 0xb35165a ] 0x78e99dcc
sub [ eax ] al
add [ eax ] al
pushad
and [ eax ] al
cmp dh bh
[ edi ]
push [ esp + 0x8 ]
pushad
jmp rwxdata
push esp
or ebx [ edi - 0xf ]
lodsd [ esi ]
mov ecx edx
push ss
les esi [ esi ]
sahf
and ebx edx
xor ah cl
pop esi
scasd [ edi ]
dec edi
retn 0x5d5c
lds ebp [ esi ]
adc [ ecx + 0x35f424be ] eax
mov dh 0xa6
jmp 0xffffffffaddf2196
jg rwxdata
pop eax
aam 0xb7
inc edx
add bl 0x32
lea ebx [ esi + 0x417ae91 ]
pushfd
push cs
pextrw edi mm2 0xb
pop esi
enter 0x8238 0x52
insd
scasb [ edi ]
mov al 0xc5
adc [ cs : ecx + 0x35f424be ] eax
lea esp [ esp + 0x30 ]
jne rwxdata
jne rwxdata
setae bh
in al dx
mov dl 0x47
sub al 0xdc
cmp esi [ bx + 0x7f ]
inc eax
xchg ebp eax
movsb [ edi ] [ esi ]
cli
mov ebp edx
mov esp 0x352a4172
mov dl [ 0x6d62bef3 ]
cmpsb [ esi ] [ edi ]
adc eax 0x773401f0
js rwxdata
mov ebx 0x47dfdfe3
xchg [ edi + 0xe2d71c8 ] esi
cmp esp ecx
jl rwxdata
call sub_101146c3
jpe rwxdata
shl si cl
dec si
add si bx
mov ecx edi
pushfd
sub ecx ebx
neg esi
sub si bx
clc
pop esi
mov esi esp
pushfd
sub edi 0x4
call sub_101d025c
sub ebp [ edi + 0x1ea15590 ]
pop edi
fcmovb st4
outsd
aam 0x2a
jpo rwxdata
pushfd
loope rwxdata
popfd
xchg ebp eax
mov al al
lahf
sbb al ah
add bl ch
xor dh cl
mov [ edi + 0x3c420bfa ] dh
sbb eax 0x69715241
mov ch 0xab
in al 0xcc
rcl eax cl
jge rwxdata
dec esi
mov bh 0x34
jmp rwxdata
int3
inc esi
jns rwxdata
pop ecx
jmp [ eax ]
jb rwxdata
dec edx
sbb dh al
inc esp
and al 0x4
sar [ ebx ] 0x1
dec ebp
clc
mov [ esp + 0x4 ] ah
jmp rwxdata
mov dh 0xc9
in eax dx
adc [ ecx - 0xe1629f3 ] esi
mov gs sp
xchg edx eax
mov al [ 0xffffffffa57e219e ]
mov edx 0xbf608b93
rcl dl 0x1
or eax 0xbb527a8f
push edi
outsd
aad 0xbc
jb rwxdata
jo rwxdata
mov eax [ 0xffffffff82dc7d42 ]
retn
fld [ 0x45c0312e ]
pop ecx
inc ebp
0x7e6d1235 0x42a1
pushad
lea esp [ esp + 0x28 ]
jbe rwxdata
push ebp
mov esp ebx
pop ecx
pop es
or al 0xf3
mov esi eax
scasd [ edi ]
pop ebx
mov [ 0x6cd29f1f ] eax
cmpsb [ esi ] [ edi ]
mov eax 0xadf20c12
loop rwxdata
pop ebp
popad
or eax 0x6c2b33b1
cdq
cmpsb [ esi ] [ edi ]
cmp al 0xa7
fst [ eax + 0x5 ]
push ds
and [ ebx - 0x7eb2cdc4 ] al
sub dh [ 0xffffffffbef3158a ]
bound ebp [ ebp - 0x5a ]
aas
push eax
and [ esi - 0x3b ] edi
xchg ah bh
cmp esp [ eax + 0x7a ]
mov gs [ ebp - 0x6f ]
movsd [ edi ] [ esi ]
dec edx
cmc
push es
shl [ edi - 0xb ] 0x1
stosb [ edi ]
xor eax 0x9a0496f3
mov ebp 0x6c620d32
xlat
fadd st3
push ebx
sub ecx 0x1
pushfd
rcl si cl
push ebp
sbb di si
mov [ ebp - 0x4 ] ecx
xadd cx si
pop ecx
sar si cl
dec ecx
mov ecx [ ebp - 0x8 ]
xchg di si
ror esi cl
add ecx [ ebp - 0x4 ]
xor si ax
xchg si di
clc
shr ecx 0x1
lea edi [ ebx - 0x3bd492b0 ]
rcr di 0xd
test bh bl
add di si
mov edi [ ebx + ecx * 4 ]
adc si di
clc
rcl si 0x1
add edi eax
movzx esi cl
lea esi [ edx * 8 - 0x318dff31 ]
pushfd
call sub_101d6a76
int3
jpe rwxdata
fwait
push ecx
or eax 0x9bc4b6a9
sub_10202eeb
lea esp [ esp + 0x28 ]
jne rwxdata
not bh
movzx bx bl
call sub_10204b78
bswap bx
ror bl cl
xor [ ebp + 0xc ] 0x20
movsx bx al
movsx bx dl
pop ebx
push 0xf593dac4
push edx
push 0x8241305a
lea esp [ esp + 0xc ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_10203094
ror bl cl
neg di
sub esp 0x98
shl al 0x2
adc al dl
xor di si
shl edi 0x1
mov edi esp
pushad
test dh bh
dec bl
jmp rwxdata
mov ebx esi
sbb al cl
bsr edx eax
add esi [ ebp ]
add esp 0x20
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub_102030ed
push [ esp + 0x38 ]
pop [ ebp ]
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x44 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_102032cd
clc
rdtsc
stc
sub ebp 0x8
push ecx
mov [ esp + 0x8 ] ecx
jmp rwxdata
mov [ ebp ] edx
pushad
mov [ ebp + 0x4 ] eax
pushfd
pushfd
push [ esp ]
lea esp [ esp + 0x38 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_102033d4
pushfd
mov [ esp ] bh
mov [ ebp + 0x6 ] ax
jmp rwxdata
jmp rwxdata
mov [ esp + 0x8 ] bh
push ebp
pushfd
pop [ esp + 0x34 ]
pushfd
mov [ esp + 0x4 ] bx
jmp rwxdata
push [ esp + 0x38 ]
pop [ ebp ]
push esi
mov [ esp ] ebp
push 0x9f5f9a25
lea esp [ esp + 0x44 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_10203416
add ebp 0x8
lea esp [ esp + 0x8 ]
jle rwxdata
pushad
mov [ fs : eax ] edx
push [ esp + 0x8 ]
mov [ esp + 0x10 ] 0x89
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
mov [ fs : eax ] edx
push esp
lea esp [ esp + 0x4 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub_10203676
push [ esp + 0x3c ]
pop [ ebp ]
push 0x9b7a1902
mov [ esp + 0xc ] 0x9
mov [ esp + 0x8 ] 0x2d4a
push 0x8778e362
lea esp [ esp + 0x48 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_102037fd
pushfd
mov [ ebp ] ax
push 0x9aa3ad73
lea esp [ esp + 0x3c ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_102038cf
push ecx
btr si bx
push 0x59f5add0
btr si dx
mov [ esp ] ebx
movzx dx cl
push edi
jmp rwxdata
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_10204931
sub_102039f6
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp ] 0x712
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_10203ea3
setns dh
movzx eax al
pushad
mov edx [ eax * 4 + rwxdata ]
bt sp sp
rol edx 0x13
test bh ah
add edx 0x0
pushad
mov [ esp ] dx
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] al
mov [ esp ] eax
push edi
push [ esp + 0x44 ]
retn 0x48
sub_10203ff3
mov [ esp ] esp
dec esi
push ebp
mov [ esp ] 0x6f
push 0x29b0ed31
push 0xc7280666
lea esp [ esp + 0x38 ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_1020428b
rol dh cl
movzx eax al
setle dh
btr dx 0x1
mov edx [ eax * 4 + rwxdata ]
push 0x652cd922
cmc
rol edx 0x13
cmp dl 0x3e
sub esp 0xfffffff8
jg rwxdata
pushfd
push 0x35031213
add edx 0x0
mov [ esp + 0x4 ] ah
call j_sub_1020363c
pushad
mov [ esp + 0x8 ] 0xc3
pushfd
pop [ esp + 0x34 ]
call sub_102043a1
push 0x71caeb6e
add edx 0x0
jmp sub_102040e5
sub_1020432e
push [ esp + 0x4c ]
popfd
mov [ esp ] 0xbc
mov [ esp + 0x4 ] 0xdf
mov [ esp ] bl
lea esp [ esp + 0x50 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub_1020470e
mov [ ebp + 0x4 ] edx
push [ esp ]
pushad
jmp rwxdata
push [ esp ]
mov [ ebp + 0x8 ] eax
pushfd
pushfd
pushfd
pop [ esp + 0x38 ]
push ecx
push 0xc3bf0e99
pushfd
push [ esp + 0x44 ]
pop [ ebp ]
push 0x2c9e4a86
lea esp [ esp + 0x4c ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_10204931
push 0x3a7e193
ror esi 0x10
lea ebp [ ebx - 0x2f18a944 ]
pop ebp
dec esi
pushad
rol bp cl
xor esi 0xda89bbcd
or bh bl
bswap bp
lea ebp [ esp + 0x24 ]
shr bx cl
call sub_10203094
sub_10204a75
mov esp eax
pushad
pushfd
pop [ esp + 0x1c ]
bswap di
mov [ esp + 0x18 ] esi
bswap edi
pushad
mov esi edx
lea edi [ esi + 0x4501885d ]
lea edi [ edx * 8 - 0x833b192 ]
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
push [ esp + 0xc ]
pushfd
mov [ esp + 0x3c ] edi
mov edi [ esp ]
std
bswap di
bswap di
mov edi eax
mov [ esp + 0x4 ] 0x2a
jmp rwxdata
cld
push 0x2d3807c7
push ebp
jmp rwxdata
pushfd
[ edi ] [ esi ]
bswap si
rol esi cl
neg di
cld
mov edi [ esp + 0x48 ]
pop esi
shl si cl
std
pop esi
mov esi [ esp + 0x44 ]
stc
mov [ esp ] 0xc
call sub_1020432e
sub_10204b40
clc
lea esp [ esp + 0x4 ]
jno rwxdata
clc
and ebx 0xff0
jmp rwxdata
and ebx 0xff0
stc
jne rwxdata
pushad
pushfd
cmp ebx 0xfe0
pushad
pushfd
jmp rwxdata
clc
pushad
jmp rwxdata
cmp ebx 0xfe0
jmp rwxdata
lea esp [ esp + 0x48 ]
jne rwxdata
cmp ebx 0xfe0
pushfd
call sub_10202eeb
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
not bh
movzx bx bl
call sub_10204b78
clc
shl bl cl
bts bx si
xor [ ebp + 0xc ] 0x20
pushad
setbe bh
movsx bx dl
bswap bx
mov ebx [ esp + 0x20 ]
push ecx
push ebp
push [ esp ]
mov [ esp + 0x4 ] 0x2c
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
sar bh 0x2
xor [ ebp + 0xc ] 0x20
lea esp [ esp + 0x20 ]
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_10204b78
mov ebx [ esp + 0x4 ]
push esi
pushad
mov [ esp ] edx
lea esp [ esp + 0x2c ]
jmp rwxdata
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102031de
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp rwxdata
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp rwxdata
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp rwxdata
call sub_10204a75
sub_1010f9e7
bt esi 0x15
push 0xcc79e89a
add ecx 0x1
push esp
call sub_10201fc0
sub_1011001a
lea esp [ esp + 0x4 ]
call sub_101106ff
sub_101101f1
lea eax [ ebp - 0x2f79c924 ]
jmp sub_101d1c62
sub_10110340
pushad
dec al
stc
push 0x1f20fa10
cmc
call sub_101ff6f9
sub_1011043e
call sub_1020052c
j_sub_101d20a3
jmp sub_101d20a3
sub_101104f0
push 0x96ab80c6
push 0xe99dbbcf
pushad
mov [ esp + 0x4 ] ax
lea esp [ esp + 0x24 ]
jmp j_sub_1020419a
sub_101106ff
cmp dh 0x78
xor ecx ecx
sub_10110704
push 0xce2f5a82
call sub_101256d3
sub_1011104e
mov [ esp + 0x8 ] cl
lea esp [ esp + 0x24 ]
je rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
call sub_10200524
sub_10111577
jmp rwxdata
inc edi
push [ esp ]
mov [ esp + 0x4 ] al
lea esp [ esp + 0x4c ]
jmp sub_101d761e
j_sub_10111e14
jmp sub_10111e14
sub_10111c96
mov [ esp + 0x4 ] 0x63
pushfd
jmp rwxdata
mov [ ecx ] al
cmp di bx
clc
call sub_101134c3
bound esi [ esi ]
mov [ esi - 0x18 ] dl
sub_10111e14
mov [ esp ] al
mov esp ebp
push 0x495303fc
pushfd
mov ebp [ esp + 0x8 ]
push esp
mov [ esp ] bx
push [ esp + 0x10 ]
retn 0x24
sub_10112619
setg bh
pushad
mov edi [ esp + 0x24 ]
call sub_101fdaf8
sub_10112626
pushfd
jmp rwxdata
mov [ esp + 0x8 ] al
inc edi
mov [ esp + 0xc ] ax
pushad
mov [ esp + 0x4 ] al
pushfd
lea esp [ esp + 0x38 ]
jmp sub_101d761e
sub_10112838
test dh bh
pushad
call sub_10110eb6
mov esi edi
test si cx
bt dx 0x9
sub esi eax
jmp sub_101d00e1
j_sub_1012a442
jmp sub_1012a442
sub_10112c99
lahf
bswap ax
mov eax [ edx + 0x8 ]
push 0x2057b6af
push esp
pushfd
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
sub_101131cc
pushfd
mov [ esp ] 0x5e
jmp rwxdata
inc esi
push edi
pushad
inc edi
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jmp sub_101d761e
sub_101134c3
clc
add ecx 0x1
bt ax dx
test ah ah
jmp sub_101280a6
sub_10113878
bt sp 0x9
pushfd
stc
ror al 0x4
jmp rwxdata
push edi
mov [ esp ] 0x1d
lea esp [ esp + 0x14 ]
call sub_101106ff
sub_10113887
add ecx edx
push [ esp + 0x4 ]
mov [ ebp - 0x10 ] ecx
not cl
mov cx dx
pushad
test ch ah
mov ecx [ ebp + 0xc ]
call sub_101145f9
sub_101138a0
adc ecx ecx
lea esp [ esp + 0xc ]
je rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_101119b1
push 0x9f1f561d
pushad
lea esp [ esp + 0x24 ]
call sub_101119b1
j_sub_1012bbf1
jmp sub_1012bbf1
sub_10116f0e
cmp ebx 0x3
call sub_10124b2d
sub_10121ba9
push 0x40b8ca99
push 0x38ad06ec
pushfd
jmp rwxdata
mov [ esp + 0x4 ] 0xb1a0320b
mov [ esp ] 0xfa5a
lea esp [ esp + 0x4 ]
jmp j_sub_1020419a
sub_10122276
cmp eax edx
pushfd
jmp rwxdata
call sub_10200430
sub_101228f7
push 0xd5302a72
jmp rwxdata
call sub_101d7caf
sub [ edi + 0xf277847 ] esi
outsd
sub_101233d8
push ebx
lea esp [ esp + 0x14 ]
call sub_101106ff
sub_10123790
cmp [ edi - 0x1 ] 0x0
jmp sub_10111fdb
sub_10123af6
call sub_1012c5a5
sub_10123afb
call sub_101fcffd
sub_10123b00
neg al
clc
jmp sub_101fc458
sub_101241fd
test cl dl
add edi eax
jmp sub_1012a459
sub_10124b2d
call sub_10202b58
mov [ esp + 0xc ] 0xf8
xchg [ esp + 0x28 ] eax
not ah
lea eax [ eax - 0x23563858 ]
push [ ebp - 0x4 ]
pop [ esp + 0x24 ]
lahf
mov [ esp ] 0xc
mov [ esp + 0x20 ] ebx
call sub_10202577
sub_10125520
pushad
pushad
lea esp [ esp + 0x44 ]
jb rwxdata
jmp sub_1011262c
stc
call sub_10123790
sub_10125532
push [ eax ]
pop [ esp + 0x28 ]
pushfd
mov [ esp + 0x4 ] 0x63
mov [ esp ] 0xde
push [ esp + 0x2c ]
retn 0x30
sub_101256d3
inc ecx
lea esp [ esp + 0x8 ]
pushfd
pushad
mov [ esp + 0xc ] bl
lea esp [ esp + 0x24 ]
call sub_101119b1
j_sub_101fe66c
jmp sub_101fe66c
sub_10125abb
ror al 0x7
push esi
pushad
inc al
push [ esp + 0x4 ]
stc
not al
mov [ esp + 0x18 ] 0x6c
ror al 0x7
jmp sub_10111c96
sub_10125d86
call sub_101233d8
sub_10125e9d
pushad
pop esi
mov esi [ esp + 0x20 ]
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_101119b1
sub_10127281
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
pushad
mov [ esp + 0xc ] bl
lea esp [ esp + 0x24 ]
call sub_101119b1
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_10127644
call sub_1012b516
j_sub_1010f9e7
jmp sub_1010f9e7
sub_101294f4
push [ eax ]
pop [ esp + 0x1c ]
pushad
push [ esp + 0x3c ]
retn 0x40
sub_10129d80
mov [ esp + 0x4 ] sp
mov [ esp + 0x4 ] 0xc66e
push [ eax ]
pop [ esp + 0x40 ]
mov [ esp ] 0x64821389
push [ esp + 0x40 ]
retn 0x44
sub_1012a442
push ecx
dec eax
clc
cmp cl 0x6c
mov [ esp ] bl
clc
shl eax 0x8
mov [ esp ] 0xc9
pushad
call sub_101d6ce9
sub_1012a459
mov edi [ edi + ecx * 4 ]
test eax 0xcaf61a42
mov [ esp + 0x4 ] dx
test ah bl
test edi edi
jmp sub_1012c5b6
sub_1012accc
mov [ esp + 0x8 ] 0x99feca98
pushfd
call sub_101fcfcd
sub_1012b374
rol al 0x7
pushfd
mov [ esp + 0x4 ] 0xd8
not al
call sub_10123b81
add [ eax - 0x4ecd4f9 ] edi
and esi [ edi + ebp * 2 ]
xchg esi eax
sub_1012b509
lea eax [ ebp - 0x8 ]
push 0x3c1ae4fc
call sub_101fcfe8
sub_1012b54d
push eax
pushfd
adc dl dl
pushfd
pushad
push [ esp + 0x30 ]
retn 0x34
sub_1012b715
ror al 0x4
call sub_10125d86
sub_1012bbf1
mov [ esp + 0x2c ] rwxdata
jmp sub_102016c2
sub_1012bd04
add edx eax
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
jmp sub_10126e7f
sub_1012bd13
movzx esi [ edx + 0x1a ]
push esi
movzx edi dl
lea esi [ esi + edx + 0x1c ]
pop edi
jmp sub_101ff21b
sub_1012c2dd
pushad
push [ esp + 0x28 ]
retn 0x2c
sub_1012c5a5
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
push edi
push edx
push [ esp + 0x8 ]
retn 0xc
call sub_101131cc
sub_1012c5b6
call sub_101ccfde
push 0xb2aa4d72
call j_sub_101ccef4
sub_1012c987
push esi
mov [ esp + 0x4 ] 0xc2
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
call sub_1011001a
push 0xc92ff609
push 0x4b7c7e41
xchg ecx eax
jmp j_sub_1012a442
sub_101cf8cb
call sub_10124adb
pushad
push esi
pushfd
mov [ esp + 0x24 ] 0x6caca9b
pushad
call sub_101cfce5
sub_101d00e1
call sub_10125ad6
sub_101d01a5
inc cl
mov ecx 0x104
mov [ esp ] 0x9b
stc
xor al al
jmp sub_101d18d0
sub_101d0543
push esi
mov [ esp ] 0xbb
jmp rwxdata
stosb [ edi ]
pushad
mov [ esp + 0x8 ] 0x4d
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_101119b1
sub_101d06e7
mov [ esp ] 0x8287e705
pushad
lea esp [ esp + 0x20 ]
jmp sub_102032af
sub_101d1384
mov [ esp + 0x28 ] eax
pushfd
push ebp
push [ esp + 0x4 ]
push [ esp + 0x34 ]
retn 0x38
sub_101d15ba
push 0xd8ad055f
mov [ esp ] ebx
mov [ esp + 0x4 ] 0x28e402d8
push ecx
push 0xf1fe4cc7
push 0x4a0f9640
lea esp [ esp + 0x10 ]
jmp j_sub_10203f02
sub_101d1b79
call sub_10112b16
sub_101d2045
mov [ esp + 0x8 ] 0x5f
mov [ esp + 0x40 ] rwxdata
mov [ esp + 0x4 ] 0x96
mov [ esp + 0x3c ] eax
push ecx
push [ esp + 0x40 ]
retn 0x44
sub_101d20a3
mov al 0x10
lea esp [ esp + 0x48 ]
push 0x5c54e14
lea esp [ esp + 0x4 ]
call sub_101119b1
j_sub_101ccef4
jmp sub_101ccef4
sub_101d7230
push 0x16b052e1
push [ eax ]
pop [ esp + 0x48 ]
push [ esp + 0x4 ]
push [ esp + 0x4c ]
retn 0x50
sub_101d725e
mov al 0x10
pushad
mov [ esp + 0x4 ] dx
lea esp [ esp + 0x24 ]
call sub_101119b1
sub_101d7ce9
mov [ esp ] 0xa550
mov [ esp ] 0xae1e4334
mov [ esp + 0xc ] 0xd63ffd4c
pushad
mov [ esp ] al
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_102032af
sub_101d7e82
not edi
mov edi [ edx + 0x1c ]
call sub_101241fd
sub_101d7f74
mov [ esp + 0x44 ] eax
lahf
mov [ esp + 0x40 ] 0x0
lea eax [ ebx * 8 + 0x5b134316 ]
not eax
cwde
lahf
lea eax [ LocalAlloc@IAT ]
jmp sub_101fde8c
sub_101fb904
mov [ esp ] eax
mov [ esp + 0x38 ] rwxdata
mov [ esp ] 0x15
push 0xd013728
push [ esp ]
mov [ esp + 0x3c ] eax
push 0x8af3d936
mov [ esp ] edi
mov [ esp ] 0xe0
push 0x55289838
push [ esp + 0x44 ]
retn 0x48
sub_101fbaa4
push [ eax ]
pop [ esp + 0x2c ]
pushfd
mov [ esp ] cl
push 0xc3d0d3a4
mov [ esp ] 0x71
push [ esp + 0x34 ]
retn 0x38
sub_101fbed2
push [ eax ]
pop [ esp + 0x40 ]
pushfd
pushfd
mov [ esp ] 0xa7e6
push [ esp + 0x48 ]
retn 0x4c
_start
jmp sub_10121ba9
sub_101fc2ac
inc edi
pushfd
lea esp [ esp + 0x4c ]
jmp sub_101d761e
sub_101fc458
not al
call sub_10113878
sub_101fc5d2
mov [ esp ] si
mov [ esp + 0x1c ] rwxdata
call sub_101294f4
fldcw [ edi ]
sub_101fc860
push ecx
sub ch 0x8
mov ecx [ edx + 0x18 ]
sub esp 0xfffffffc
jmp sub_1011262c
sub_101fcfcd
pushad
mov [ esp + 0x2c ] 0x8287e705
mov [ esp ] ah
pushfd
mov [ esp ] 0xc8
pushfd
lea esp [ esp + 0x34 ]
jmp sub_102032af
sub_101fcff3
pushad
mov [ ebp - 0x4 ] eax
pushad
call sub_101d7f74
sub_101fd1cc
lea edi [ ebx - 0x5727cd5 ]
lea edx [ ebx + 0x4 ]
mov di dx
jmp sub_1012bd13
sub_101fd200
call sub_10202a90
sub_101fda44
inc bl
inc ecx
jmp sub_10112754
sub_101ff139
lea esp [ esp + 0x48 ]
jb rwxdata
call sub_101ff983
je rwxdata
test ecx 0xd70059c
xor eax eax
push 0xe8b2d5e3
or ebx ebx
jmp sub_101d7e8c
jmp rwxdata
call sub_101fcff3
j_sub_10121e31
jmp sub_10121e31
sub_101ff6f9
rol al 0x7
stc
bt dx 0x1
cmp al [ edi ]
bswap ax
lea eax [ edi + 0x1a26f66a ]
lea edi [ edi + 0x1 ]
jmp sub_101101f1
sub_101ff976
test esp 0x1ed72b11
sub esi eax
call sub_10200370
sub_101ffdc9
clc
mov ah al
cmc
jmp sub_10125abb
sub_10200370
call sub_101264df
sub_10200524
lea edx [ ebx + 0x4 ]
jmp sub_1012c1f1
sub_1020052c
call sub_1020091d
sub_102006f6
add eax edi
jmp sub_102022cc
sub_1020091d
mov [ esp + 0x8 ] 0x4247ca95
push ecx
call sub_101d7ce9
sub_10201fc0
push edx
call sub_10123b08
sub_10202577
mov [ esp + 0x20 ] 0xb
bswap eax
movzx ax dl
lea eax [ rwxdata ]
pushfd
mov [ esp + 0x20 ] rwxdata
pushfd
pushfd
call sub_10125532
sub_1020259b
call sub_10111dfb
sub_10202a90
mov [ esp + 0x4 ] 0x59
call sub_1012accc
sub_10202a9a
call sub_1011043e
sub_10202e00
push [ esp ]
push [ esp ]
jmp rwxdata
mov [ esp + 0x8 ] edx
mov [ esp ] 0xa0
pushad
lea esp [ esp + 0x28 ]
jmp sub_1020372e
sub_10202f27
push 0xa5098e08
call sub_102037fd
sub_10203102
rol bp 0xa
mov [ esp ] esi
seto dh
stc
jmp sub_102038cf
sub_102031de
lea esi [ esi - 0x1 ]
lea esp [ esp + 0x28 ]
jo rwxdata
bts dx 0x5
sub bl al
call sub_10203ea3
rol dh cl
sub bl al
call sub_1020428b
call sub_10204105
sub_1020326a
lea esp [ esp + 0x40 ]
jne rwxdata
not bh
movzx bx bl
call sub_10204b78
movsx bx al
clc
mov ebx eax
call sub_10204b40
j_sub_1020419a
jmp sub_1020419a
sub_102032af
call sub_10202e00
sub_1020363c
pushfd
mov [ esp + 0xc ] edx
pushad
mov [ esp + 0x10 ] 0x6d5002e3
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_1020372e
lea edx [ eax - 0x778e0c21 ]
movzx dx al
bswap dx
push ebp
pushfd
pop [ esp ]
bts dx dx
push ebp
rcr dh cl
call sub_10203102
sub_102039a9
mov [ esp + 0x4 ] 0x4f6f
jmp sub_102039f6
sub_10203f02
pushfd
mov [ esp ] edx
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp sub_1020372e
sub_10204064
push [ esp ]
call sub_10204b8f
sub_102040e5
push 0x8df4db9e
mov [ esp + 0x4 ] bx
mov [ esp + 0x4 ] edx
push 0xe6df80e7
push [ esp + 0x4 ]
pushad
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_10204105
and al dl
mov [ esp + 0x4 ] 0xe49
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0xc3
pushfd
pop [ esp + 0x34 ]
call sub_102043a1
sub_1020419a
pushad
mov [ esp + 0x1c ] edx
push 0xb3210dfc
pushad
lea esp [ esp + 0x40 ]
jmp sub_1020372e
sub_10204214
call sub_10204c8a
sub_102043a1
call sub_10203676
sub_10204406
call sub_1020470e
sub_10204542
pushfd
lea esp [ esp + 0x8 ]
jpo rwxdata
call sub_10204a9b
push edx
pushad
push [ esp + 0x4 ]
push edx
lea esp [ esp + 0x28 ]
jmp sub_1020372e
sub_1020463a
pushad
pushfd
pop [ esp + 0x28 ]
call sub_102039a9
j_sub_10203f02
jmp sub_10203f02
j_sub_102033d4
jmp sub_102033d4
j_sub_1020363c
jmp sub_1020363c
sub_102047b8
mov [ ebp + 0x4 ] dx
call j_sub_102033d4
sub_1020483b
mov [ ebp + 0xc ] eax
push [ esp ]
jmp rwxdata
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_102048c6
sub_102048c6
push ecx
mov [ ebp ] edx
call sub_1020326a
sub_10204a9b
mov [ esp ] edx
pushad
lea esp [ esp + 0x20 ]
jmp sub_1020372e
sub_10204b8f
mov [ ebp ] edx
jmp sub_10203ff3
sub_10204c8a
pushfd
pop [ esp + 0x38 ]
jmp sub_102030ed
