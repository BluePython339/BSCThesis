sub_1023c
push 0xffc3
xor [ bx + si ] dl
inc bp
test [ di - 0x7c02 ] 0xb6d1
fmul [ bp + si - 0x46 ]
sub [ di - 0x363c ] ah
mov [ 0x658f ] al
sbb bp [ bx + si - 0x6 ]
add [ bp + si + 0x7634 ] cx
inc sp
cmc
inc dx
push dx
pop si
jg 0x1023e
push cx
pushf
cbw
push dx
pushf
sbb [ bp + si + 0x6364 ] bl
nop
into
mov bp 0x9077
movsw [ di ] [ si ]
shl [ si - 0x5d ] 0x1
push bp
mov dh 0x2
pop ds
movsb [ di ] [ si ]
xor ax 0x1925
push ss
add dx [ bp + si - 0x1e7f ]
push si
dec ax
push bx
xchg di ax
in al 0x6b
not [ bp - 0x6dc1 ]
sub al 0x44
add al 0x53
salc
inc ax
dec cx
mov dh 0x10
enter 0x7c64 0x7b
xor bx [ bp + si + 0x1d6d ]
test [ si ] cl
imul dx [ bp + di ] 0xb24a
mov cl dl
cmp ax 0x1a51
clc
add dh [ si ]
or ax [ di + 0x6075 ]
mov al 0x52
pop cx
scasw [ di ]
pop cx
les sp [ di - 0x5651 ]
arpl sp di
fwait
aad 0x40
out dx ax
pop es
add [ bx ] 0xffca
lodsw [ si ]
mov [ bx + si + 0x62 ] sp
push ds
xchg bx ax
push es
sbb [ bx - 0x5fa2 ] cx
bound cx [ bp + di + 0x15 ]
mov bl 0xd7
or ax 0x376e
dec cx
pushf
test ax 0xf649
fdivr st4
and ax 0x92ab
dec ax
popf
clc
mov ah 0x4f
cmp cx [ bx + di ]
rcl [ di + 0x27 ] 0x1
mov cl 0xc9
push bx
movsw [ di ] [ si ]
fwait
int1
mov al [ 0x1fc2 ]
mov [ bx + di ] bh
cmpsw [ si ] [ di ]
and al 0x67
adc bx bp
sbb sp [ si - 0x20be ]
sbb [ bp + di - 0x47d5 ] bx
jl 0x102f4
les bx [ bx - 0xda7 ]
std
sbb al 0x5
xchg dx ax
mov bx 0xb09e
nop
fsub [ cs : bx + di - 0x3d ]
adc [ bx + 0x3954 ] ax
outsb
mov al 0xe7
[ si - 0x6fec ] bh
dec bp
cwd
je 0x1035e
adc bx bp
push si
mov dx 0x4437
mov ds [ di + 0x29cc ]
dec bx
in al dx
pushf
jpe 0x10367
les di [ bp + di + 0xe ]
int 0x77
js 0x103e9
mov [ bp - 0x46 ] ss
aaa
inc sp
add bh [ bp - 0x1e5 ]
pop ds
arpl [ bx ] bx
scasb [ di ]
insb
mov [ 0x1c73 ] al
fadd [ bx + di - 0xd71 ]
hlt
sub_10319
out dx ax
dec sp
arpl [ bx ] dx
pop bp
pop bx
das
test al 0xb0
jl 0x102cd
adc ax 0xd7b3
or ax 0x376e
dec cx
pushf
test ax 0xf649
fdivr st4
and ax 0x92ab
dec ax
popf
clc
mov ah 0x4f
cmp cx [ bx + di ]
rcl [ di + 0x27 ] 0x1
mov cl 0xc9
push bx
movsw [ di ] [ si ]
fwait
int1
mov al [ 0x1fc2 ]
mov [ bx + di ] bh
cmpsw [ si ] [ di ]
and al 0x67
adc bx bp
xchg cx ax
sub al 0x4e

sbb sp [ si - 0x20be ]
sbb [ bp + di - 0x47d5 ] bx
jl 0x102f4
les bx [ bx - 0xda7 ]
std
sbb al 0x5
xchg dx ax
mov bx 0xb09e
nop
fsub [ cs : bx + di - 0x3d ]
adc [ bx + 0x3954 ] ax
outsb
mov al 0xe7
[ si - 0x6fec ] bh
dec bp
cwd
je 0x1035e
adc bx bp
push si
mov dx 0x4437
mov ds [ di + 0x29cc ]
dec bx
in al dx
pushf
jpe 0x10367
les di [ bp + di + 0xe ]
int 0x77
js 0x103e9
mov [ bp - 0x46 ] ss
aaa
inc sp
add bh [ bp - 0x1e5 ]
pop ds
arpl [ bx ] bx
scasb [ di ]
insb
mov [ 0x1c73 ] al
fadd [ bx + di - 0xd71 ]
hlt
sub_10697
mov sp 0xead1
jpe 0x1063f
push es
xchg cx ax
clc
mov [ bx + si - 0x3f33 ] bl
adc sp bp
sub al [ si - 0xa ]
in ax 0xa7
or bp [ bx + di + 0x22 ]
sub di cx
aam 0x63
and al 0xb3
mov [ 0x719e ] ax
push bp
xlat
neg [ bx + si + 0x337e ]
mov al [ 0x3199 ]
aad 0xd6
push 0x48
pop bx
jpo 0x10670
mov di 0xc5a7
mov [ di + 0x92c ] ax
mov ax [ 0xffffffffffff8909 ]
das
sti
jl 0x10710
into
sbb [ bp + 0xa ] di
stosb [ di ]
cmp ax 0xbe45
xchg [ di ] bl
mov dx 0x19ce
jle 0x1067e
pop sp
adc bl [ bp + si - 0x2 ]
out 0x8a ax
out 0x19 al
aas
out dx ax
and [ bx + di - 0x4c ] bx
pop di
loope 0x1072a
mov dl 0x5d
les dx [ si - 0x16 ]
xchg bx ax
mov ax 0x8d32
push 0x29
cmc
sub al 0x1a
insb
xor [ bx ] ch
and ax 0x919c
bound bp [ si + 0x1a0a ]
aas
mov cl 0x97
xor bp [ di ]
nop
pop dx
fidiv [ bp + si - 0x3ba3 ]
push sp
0xffffb893 0x8d32
sbb bx [ si + 0x415d ]
add [ bx + si ] ax
add bh bh
inc [ bp + di ]
add [ bx + si + 0x4b ] dl
add ax [ si ]
adc al 0x0
push es
add [ bx + si ] cl
add [ bx + si ] al
add [ bx + di ] ah
add [ bp + di ] dh
0xfffffbc5 0x143
sub_10e37
push si
and ax [ bx + si ]
add [ bx + si ] al
add [ bp + di + 0x52 ] si
inc di
inc dx
add [ bp + 0x1cce ] ch
jmp 0x10e48
add [ si ] al
inc cx
dec bp
inc cx
add [ bx + si ] al
mov cl 0x8f
or di sp
popa
add ax 0x0
add [ bx + di ] cl
jo 0x10ea4
popf
in al 0xc6
cbw
mov [ 0xffffffffffff922d ] al
mov dh 0x48
je 0x10f02
pop cx
jae 0x10e5f
xlat
add al 0xd8
je 0x10ec3
add [ 0xc3 ] cl
add [ 0x1c3 ] cl
sti
inc sp
cwd
insb
inc si
fstp [ bx + 0x6164 ]
inc si
fwait
adc al 0x87
salc
pop bp
xor ax 0x8bab
pop sp
adc di bp
neg [ bx ]
fwait
fisubr [ bp + 0x52 ]
sbb esp [ si - 0x2996 ]
daa
dec sp
adc si [ si ]
jmp 0x10ef5
mov ax 0x3eea
fwait
push bp
cmpsb [ si ] [ di ]
sar [ bp + si + 0x47 ] 0x1
sbb [ bx - 0x28eb ] ch
mov [ 0x4ad5 ] ax
hlt
push bp
adc al 0x35
inc ax
or ah dl
test [ bp + si - 0x11 ] di
or ax 0xf2f5
sti
pushf
cmp [ bp + di - 0x2a5d ] di
dec dx
sub_11520
push di
mov esp 0x579362b0
and [ bp + di ] bl
push ss
daa
mov cl 0x1e
jbe 0x114e3
jcxz 0x114e1
mov dl 0x1d
mov ch dl
iret
out 0x20 ax
aas
sbb ax 0x83a1
pop dx
dec dx
je 0x11546
arpl [ di ] dx
push bp
inc si
mov cx 0x943d
shl [ bp + 0x72 ] cl
mov [ si ] dh
inc cx
mov bl 0x4e
test al 0x49
mov si 0xcfea
aam 0x27
jpe 0x1155b
mov ah 0x2e
jmp 0x114bd
iret
pop es
jns 0x115ce
push si
mov [ fs : 0xffffffffffffa0f9 ] al
call 0x124b8
sti
out 0x86 ax
jbe 0x115d1
mov ah [ bx + si + 0x2759 ]
aam 0xdd
jmp 0x115e4
push 0x17
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si - 0x1e8a ] 0x1
add bp cx
push 0x17
sub_11535
or [ di ] si
and ax 0xe1d4
scasw [ di ]
imul ax cx 0x5b
in ax dx
and bl bl
and eax 0x6350e991
adc ax 0x3655
inc si
mov cx 0x943d
shl [ bp + 0x72 ] cl
mov [ si ] dh
inc cx
mov bl 0x4e
test al 0x49
mov si 0xcfea
aam 0x27
jpe 0x1155b
iret
pop es
jns 0x115ce
jbe 0x115d1
mov ah [ bx + si + 0x2759 ]
aam 0xdd
jmp 0x115e4
push 0x17
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si + 0x176 ] 0x1
int 0x6a
pop ss
shr [ si - 0x1e8a ] 0x1
add bp cx
push 0x17
sub_11cbb
sub bp [ ss : bx + di + 0x4a ]
sub dh 0x9b
test [ bp + di - 0x1d ] dh
mov di 0x3f99
and [ 0x42d3 ] si
and al 0x6a
xchg si ax
or [ bp + si + 0x4275 ] bx
std
in al dx
mov ch 0xef
mov dl 0x8b
jmp 0x11d54
sub_11d54
fiadd [ di ]
xor al 0xab
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
inc ax
mov bl 0xda
add ax 0xab34
pop bp
pusha
int 0x6a
sahf
dec sp
or [ bp + si + 0xc ] bh
test [ bx + si - 0x7b ] sp
sbb al 0x46
or dh dl
jpo 0x11dc6
xor al 0xab
adc al 0x89
xchg bx ax
push es
sub_1297f
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x129bc
push si
loopne 0x129ef
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a22
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a55
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a88
and [ bx + si - 0x7f ] bl
retn
cmp ax 0xa442
ficomp [ bp + di + 0x28a6 ]
mov ch 0x36
sub ax dx
retn
and [ bx + si - 0x7f ] bl
retn
sub_12990
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x129cd
push si
loopne 0x12a00
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a33
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a66
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a99
and [ bx + si - 0x7f ] bl
retn
xor al 0xbb
fisub [ bp + di + 0x2215 ]
cmc
and [ bx + si - 0x7f ] bl
retn
sub_129a1
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x129de
push si
loopne 0x12a11
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a44
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a77
and [ bx + si - 0x7f ] bl
retn
adc ax 0xc72
and [ bp + si + 0x21 ] dx
and [ bx + si - 0x7f ] bl
retn
sub_129b2
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x129ef
push si
loopne 0x12a22
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a55
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a88
and [ bx + si - 0x7f ] bl
retn
cmp ax 0xa442
ficomp [ bp + di + 0x28a6 ]
mov ch 0x36
sub ax dx
retn
and [ bx + si - 0x7f ] bl
retn
sub_129c3
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x12a00
push si
loopne 0x12a33
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a66
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a99
and [ bx + si - 0x7f ] bl
retn
xor al 0xbb
fisub [ bp + di + 0x2215 ]
cmc
and [ bx + si - 0x7f ] bl
retn
sub_129d4
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x12a11
push si
loopne 0x12a44
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a77
and [ bx + si - 0x7f ] bl
retn
adc ax 0xc72
and [ bp + si + 0x21 ] dx
and [ bx + si - 0x7f ] bl
retn
sub_129e5
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x12a22
push si
loopne 0x12a55
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a88
and [ bx + si - 0x7f ] bl
retn
cmp ax 0xa442
ficomp [ bp + di + 0x28a6 ]
mov ch 0x36
sub ax dx
retn
and [ bx + si - 0x7f ] bl
retn
sub_129f6
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x12a33
push si
loopne 0x12a66
and [ bx + si - 0x7f ] bl
retn
push si
loopne 0x12a99
and [ bx + si - 0x7f ] bl
retn
xor al 0xbb
fisub [ bp + di + 0x2215 ]
cmc
and [ bx + si - 0x7f ] bl
retn
sub_12a07
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x12a44
push si
loopne 0x12a77
and [ bx + si - 0x7f ] bl
retn
adc ax 0xc72
and [ bp + si + 0x21 ] dx
and [ bx + si - 0x7f ] bl
retn
sub_12a18
and [ bx + si + 0x5 ] 0xe
add ax [ bp + si + 0x3815 ]
or al 0x8
push si
loopne 0x12a55
push si
loopne 0x12a88
and [ bx + si - 0x7f ] bl
retn
cmp ax 0xa442
ficomp [ bp + di + 0x28a6 ]
mov ch 0x36
sub ax dx
retn
and [ bx + si - 0x7f ] bl
retn
sub_14017
xor ax [ bp + si + 0x7de3 ]
mov [ 0xffffffffffffa64c ] al
std
pop cx
push bp
cmc
sbb ax 0xbfe3
cld
imul dx [ bp + di + 0x7edf ] 0xff9a
jb 0x14088
push sp
loopne 0x140a3
aaa
retn 0x77b7
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x140c5
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x140b4
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x140e7
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x140d6
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x14109
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x140f8
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1412b
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1411a
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1414d
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1413c
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1416f
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1415e
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x14191
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x14180
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x141b3
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x141a2
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x141d5
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x141c4
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x141f7
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x141e6
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x14219
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x14208
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1423b
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1422a
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1425d
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1424c
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1427f
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x1426e
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x142a1
and [ bp + si - 0x7f ] dl
mov es [ bx + di ]
and dl [ di ]
cmp [ 0x5488 ] al
loopne 0x14290
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
jo 0x142f8
mov al 0x48
popf
in al dx
scasw [ di ]
and [ bx + si ] 0x8
sbb [ 0x705c ] 0x55
or [ bp + si + 0x5c1e ] al
jo 0x142eb
and [ bp + si - 0x7f ] dl
arpl [ bx + si + 0x548 ] ax
je 0x142b3
call 0x167e4
or si [ bp + di ]
cmp [ bx + 0x6f ] al
0xffffd4ac 0xa4da
inc bx
salc
xchg dx ax
pop dx
jo 0x14343
or [ bp + si + 0x2920 ] al
add ax 0x8557
and [ bx + si ] cl
xchg dx ax
push dx
test [ bx + di ] bx
insw
push dx
mov al [ 0x5e27 ]
jo 0x14311
stosb [ di ]
dec sp
test ax 0x2995
mov ah 0x2e
jb 0x142d0
pop si
jle 0x1437d
enter 0x9abe 0xe6
mov bx 0xa7fe
imul dx [ bp + si - 0x59 ] 0xffc0
jl 0x1426a
push ds
lahf
daa
retn 0x2158
enter 0xf461 0xe0
xchg [ bp + 0x10 ] sp
hlt
push cx
xchg sp ax
add ch bl
int3
push si
sub al 0x8f
xchg di ax
mov al 0xe1
cbw
rcl [ bp + di ] 0x1
and ax di
jbe 0x14374
arpl [ bx + si + 0x548 ] ax
cmpsw [ si ] [ di ]
inc si
jo 0x14322
or ax [ 0x5f79 ]
aaa
movsw [ di ] [ si ]
salc
push bp
jo 0x1436e
leave
retn 0xf41f
or [ bp + si + 0x51a0 ] al
je 0x143e4
push cx
xchg sp ax
cmp [ bp + di ] dh
and al 0xde
cmp ax dx
adc al 0xb0
xor ch cl
pop di
sbb bp [ bx ]
cld
cbw
push dx
cbw
pop di
salc
push sp
fstp st4
aad 0xdb
aaa
dec ax
mov di [ bx + di ]
push bx
jbe 0x14369
in ax 0x96
xor al 0x54
xor ax 0x7474
or ax 0xb0f
push es
jns 0x143d7
mov bx 0xae03
or al [ bx + di - 0x70 ]
mov ah 0x22
arpl [ bx + di + 0x20 ] di
push di
jne 0x14438
rcl [ di + 0x21 ] 0x8
xchg dx ax
sub ax 0xb582
mov sp 0xb582
sahf
stosb [ di ]
and sp di
shr [ bp - 0x68b2 ] cl
fcmovnu st6
0x15ee 0x9a61
adc ax 0x2638
in ax 0xf6
xchg dx ax
sub [ si + 0x526b ] si

0x795e 0xcb77
sub_167e4
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x1685e
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x1682f
dec dx
loopne 0x1680b
add [ bx + si ] al
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x16800
dec dx
loopne 0x167dc
add [ bx + si ] al
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x168bc
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
add [ bx + si ] al
and [ di ] ah
jo 0x1688d
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
dec dx
loopne 0x166f1
add [ bx + si ] al
and [ di ] ah
jo 0x167d1
dec dx
loopne 0x167ad
add [ bx + si ] al
dec dx
loopne 0x16869
add [ bx + si ] al
dec dx
loopne 0x1683a
add [ bx + si ] al
nop
or bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
dec dx
loopne 0x166c2
add [ bx + si ] al
and [ di ] ah
jo 0x167a2
dec dx
loopne 0x1677e
add [ bx + si ] al
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x1691a
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x168eb
add al 0x49
sub [ bx + si + 0x42a ] di
inc cx
nop
xchg sp ax
sub [ bp + di + 0x1042 ] 0x4
dec cx
sub [ bx + si + 0x42a ] di
inc cx
nop
xchg sp ax
sub [ bp + di + 0x1042 ] 0x4
dec cx
sub [ bx + si + 0x42a ] di
inc cx
nop
xchg sp ax
sub [ bp + di + 0x1042 ] 0x4
dec cx
sub [ bp + di + 0x2ab ] si
add [ bx + si ] al
add [ bx + si ] al
and [ di ] ah
jo 0x16773
dec dx
loopne 0x1674f
add [ bx + si ] al
dec dx
loopne 0x168c7
add [ bx + si ] al
dec dx
loopne 0x16898
add [ bx + si ] al
dec dx
loopne 0x16720
add [ bx + si ] al
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x16978
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x16949
dec dx
loopne 0x16925
add [ bx + si ] al
dec dx
loopne 0x168f6
add [ bx + si ] al
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x169d6
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x169a7
adc bp [ si ]
adc ax 0x2082
dec ax
add [ bx + si ] al
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
dec dx
loopne 0x16954
add [ bx + si ] al
and ax 0x5570
dec sp
cmc
pop bp
outsw
fwait
push cs
inc cx
dec di
mov bp 0xa960
sar ch 0x1
or [ di + 0x854 ] bh
0xffffb050 0xc854
pop si
and bl bl
jne 0x16a80
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si + 0x2 ] dl
push di
add ax 0x0
sub [ bx + di + 0x2ab ] ax
add [ bx + si - 0x3f6c ] al
push bp
add [ bx + si ] ax
inc ax
add [ bx + si ] al
and [ di ] ah
jo 0x16a05
mov di 0x820e
and [ bx + si ] cl
jpe 0x16a40
test [ bx + si + 0x4fc7 ] ah
mov al 0x54
enter 0x8431 0xfb
pop bx
and [ bx + 0x2c10 ] ax
adc ax 0x2082
dec ax
xor bh [ di ]
sub ax 0xea96
cmpsb [ si ] [ di ]
aam 0xca
xchg sp ax
pop dx
push di
test si ax
inc bp
scasb [ di ]
jno 0x16ab3
mov dx 0x1645
outsb
mov ah 0x49
xchg [ bx + si + 0x5827 ] sp
mov al 0x54
enter 0xa9e 0x88
mov ch 0x4d
and [ bx + si + 0x58c7 ] 0xde0f
add ax [ bx + si + 0x42a5 ]
pop [ bx + si + 0x38 ]
outsw
add [ di ] bh
sahf
and [ di + 0xe42 ] 0x28
loope 0x16a36
jg 0x169ad
add [ bx + si ] al
nop
adc bh [ bx + si + 0x2a ]
add [ bx + si + 0x9 ] cl
pop sp
adc ax 0x0
movsb [ di ] [ si ]
add al 0xae
or al [ bx + si ]
add [ bp + si - 0x3e ] dl
pop sp
jne 0x1697b
cmp [ bx ] ch
cmp ax 0x829e
movsw [ di ] [ si ]
inc dx
push cs
sub cl ah
0xfffffd16 0x4db7
xor al cl
push dx
and [ bx + si ] cx
and [ si ] 0x13
sub al 0x15
and [ bx + si ] 0x48
xor al cl
push dx
and [ bx + si ] cx
and [ si ] 0x13
sub al 0x15
mov dx 0x4d1f
push cx
push 0x6d
push dx
and [ bx + si ] cl
and al cl
push dx
mov ax [ 0xffffffffffff977b ]
push dx
sti
jg 0x169ad
rcl [ bp + si + 0x21 ] 0x8
and [ si ] 0x13
sub al 0x15
and [ bx + si ] 0x48
aas
mov ax [ 0x4927 ]
dec di
cmpsb [ si ] [ di ]
movsw [ di ] [ si ]
xor al [ bp + di ]
push bp
push 0xe55d
sbb bl [ bp + si ]
sahf
sbb [ bp + si ] bx
out dx ax
adc bp [ bx + di - 0x76 ]
cld
out dx ax
pop ds
[ bp + si - 0x6cc1 ]
mov dh bl
push ss
std
mov bh 0x4d
xchg [ bx + si ] sp
sub_1aeb4
fdivr [ di ]
mov bl 0xfc
inc si
scasb [ di ]
cmp [ bx + di - 0x5a ] dx
lds bx [ bx ]
out dx ax
shl [ bp + di - 0x60 ] 0xd0
sbb ax 0x7385
sub [ bx + si - 0x614b ] dx
scasb [ di ]
pop si
0xffff893d 0x607d
sub_2229d
cmpsb [ si ] [ di ]
jl 0x22309
or [ bp + si + 0x2884 ] al
clc
push sp
in ax dx
sub al 0xfd
test ax 0x88bf
rcl dx 0xa0
xor [ bp - 0x3e7e ] dh
fild [ 0x3dfe ]
cld
mov gs [ si ]
test cl 0xb1
stosw [ di ]
mov cx 0x6764
jae 0x22288
or [ bp + si + 0x820 ] al
and [ bx + si ] 0x48
mov [ bp + si - 0x7ab1 ] al
and [ bx + si ] cl
jpe 0x222e7
mov bp bp
in al dx
bound di [ si + 0x2c ]
add al 0x41
shl [ bp + di + 0x3e09 ] 0x1
adc ax 0xa082
out 0x21 ax
clc
push sp
or [ bp + si + 0x820 ] al
and [ bx + si ] 0x48
mov [ bp + si - 0x7ab1 ] al
and [ bx + si ] cl
and [ bx + si ] 0x8
add [ si - 0x7d8 ] 0x54
test [ di + 0x2018 ] ah
or [ bp + si - 0x7dde ] bl
dec di
test [ bx + si ] sp
or [ bp + si + 0x79 ] bh
test [ di + 0x216d ] ah
or [ bp + si - 0x7db6 ] bl
dec di
test [ bx + si ] sp
or [ bp + si - 0x37 ] bh
test cl dh
push sp
or [ bp + si - 0x775a ] al
loopne 0x22396
and [ bx + si ] cx
and [ bx + si + 0x537f ] 0x6c
test al 0xc5
sub ax 0x99f4
cmp dx [ si ]
jb 0x222c4
push ds
xchg cx ax
sub dx bp
push di
jno 0x22319
push bx
and [ bx + si ] cx
and [ bx + si ] 0x8
and [ bx + si ] 0x21
or bh [ 0xffffffffffff8215 ]
and [ bx + si ] cl
and [ bx + si ] 0x8
adc ah [ bp + si + 0x53e0 ]
and [ bx + si ] cx
and [ bx + si ] 0x8
and [ bx + si ] 0x21
push 0xffcc
cmpsw [ si ] [ di ]
add al [ bx + si ]
add [ bx + si ] al
add [ bx + si ] al
and [ bx + si ] ch
loopne 0x22414
and [ bx + si ] cx
and [ bx + si ] 0x8
and [ bx + si ] 0x21
or bh [ 0xffffffffffff8215 ]
and [ bx + si ] cl
and [ bx + si ] 0x8
adc ah [ bp + si + 0x53e0 ]
and [ bx + si ] cx
and [ bx + si ] 0x8
and [ bx + si ] 0x21
or bh [ 0xffffffffffff8215 ]
and [ bx + si ] cl
and [ bx + si ] 0x8
adc ah [ bp + si + 0x53e0 ]
and [ bx + si ] cx
and [ bx + si ] 0x8
and [ bx + si ] 0x21
or bh [ 0xffffffffffff8215 ]
and [ bx + si ] cl
and [ bx + si ] 0x8
adc ah [ bp + si + 0x53e0 ]
and [ bx + si ] cx
and [ bx + si ] 0x8
and [ bx + si ] 0x21
or bh [ 0xffffffffffff8215 ]
and [ bx + si ] cl
and [ bx + si ] 0x8
adc ah [ bp + si + 0x53e0 ]

test [ bx + si ] sp
or [ bp + si - 0x37 ] bh
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22483
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22439
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x224f2
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x224a8
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2245e
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22561
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22517
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x224cd
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x225d0
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22586
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2253c
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2263f
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x225f5
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x225ab
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x226ae
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22664
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2261a
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2271d
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x226d3
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22689
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2278c
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22742
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x226f8
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x227fb
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x227b1
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22767
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2286a
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22820
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x227d6
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x228d9
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2288f
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22845
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22948
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x228fe
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x228b4
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x229b7
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x2296d
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22923
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22a26
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x229dc
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22992
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22a95
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22a4b
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22a01
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22b04
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22aba
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22a70
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22b73
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22b29
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22adf
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22be2
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22b98
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22b4e
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22c51
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22c07
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22bbd
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22cc0
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22c76
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22c2c
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
push ss
add [ bx + si ] al
add [ bx + si ] al
dec cx
inc bp
dec si
inc sp
scasb [ di ]
inc dx
pusha
adc [ bx + si + 0x4b ] 0x3
add al 0x14
add [ 0x800 ] al
add [ bx + si ] al
add [ bx + di ] ah
add [ bx + si ] dh
or dl al
push bp
dec bp
adc [ bx + si ] al
add [ bx + si + 0x9b ] dh
add [ di ] dl
add [ bx + si ] al
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
inc sp
loopne 0x22c9b
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
pop dx
and bp [ bx + si - 0x2a ]
inc sp
xlat
sti
mov bx 0xce73
jpo 0x22d12
das
insw
imul sp [ fs : bx + di + 0x2f ] 0x6d69
popa
xor ch [ gs : esi ]
insw
in al dx
popf
jge 0x22c90
add [ bx + 0x6f ] dh
jb 0x22d53
add [ bx + si ] al
adc ax 0x0
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
add ax 0x0
add [ bx + si ] al
add [ bp + si + 0x4 ] al
adc ax 0x0
add [ bx + si ] al
add [ bx + si ] cl
adc ax di
push sp
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] ah
cmp al 0x46
inc di
add [ bx + si ] ax
add [ bx + si ] al
add [ bx + si - 0x7ef0 ] al
dec di
inc dx
dec cx
jcxz 0x22d9c
loopne 0x22ce5
pop bx
inc ax
insw
movsb [ di ] [ si ]
jg 0x22d0b
pop bp
inc bp
shr [ bp - 0x5f ] cl
pop ax
sub ah [ di + 0x4942 ]
shr ax 0x1
and cl [ bx ]
mov ax [ 0xffffffffffffb122 ]
xor ax 0xc5b5
cmpsb [ si ] [ di ]
push si
sub [ bx + si + 0x4a ] dl
retn 0xb197
sbb [ bp + di ] bx
sub dh bh
mov bl 0x58
in al 0xf1
mov [ 0xffffffffffffb238 ] al
xchg si ax
hlt
fld [ 0xffffffffffffe9be ]
push ss
jpe 0x22db7
mov [ 0xffffffffffffee98 ] ax
sbb ax 0x46b5
dec bp
mov gs [ bx ]
0xffffe2f5 0xa9e8
jb 0x22d03
adc ax 0xcfc0
fcmovnu st5
mov [ di + 0x45 ] ds
cmp [ bp + di ] si
out 0xfe al
out dx al
mov bp 0xcee7
jpo 0x22de8
mov si 0x6b52
sahf
mov bp 0x31ac
mov bh 0xd5
xlat
xlat
nop
push si
std
sbb [ bx + di ] cl
cmc
arpl [ bp + di - 0x475d ] cx
fdiv [ bp + si - 0x74 ]
dec cx
mov di 0x43ea
inc di
mov bl ah
pop bp
fadd [ bx + 0x45f5 ]
jge 0x22e89
div ah
push cx
adc dx [ bx + di - 0x5a95 ]
sub ax 0xceaf
pop ss
sbb [ bx + di ] di
mov dx 0xdfad
rcl [ bx + si ] cl
pop cx
mov sp 0x6441
jmp 0x1e378
outsw
push ss
jle 0x22efb
lea bp [ bp + di ]
pop ss
mov cx 0x7277
jb 0x22e48
jns 0x1e3e2
xor [ 0xffffffffffffbfe9 ] bl
sub ch [ 0xfffffffffffff7ae ]
test al 0xf6
cmp ax si
cbw
jpo 0x22e94
inc dx
push es
out dx al
pop sp
mov ch 0x79
dec si
pushf
mov si 0x7d19
imul sp [ bx + di + 0x52bf ] 0xc5e8
and ax 0xbe4d
mov ah 0x8b
dec [ bx + di ]
pop cx
cmp [ bp + si - 0x32 ] bh
fisubr [ si - 0x1f81 ]
movsb [ di ] [ si ]
pop bx
0xdfb8
xor dl [ di + 0x7add ]
popf
push cx
xor ah [ bx - 0x63 ]
mov bl 0xc8
imul si [ bp + si - 0x4d ] 0xfffe
outsw
adc ax 0x7db0
sub cl bh
aas
jge 0x1e3be
cmp al 0x28
push cx
fistp [ bp - 0x2c ]
das
sub cl [ bp - 0x2893 ]
pop es
xchg di ax
cmp bl [ bx + di - 0x3e ]
mov bl 0x61
test al 0x57
jbe 0x22efa
mov bx 0xe8f1
imul [ bp + di ]
test ax 0xb3fa
shr [ bp + di ] 0x1
sbb bp si
movsb [ di ] [ si ]
cmpsw [ si ] [ di ]
add al 0x6e
cmp [ si - 0x19 ] bp
mov dl 0x45
out 0x54 ax
pop ax
shl [ bx + si ] 0x1
push ds
jmp 0x259bf
iret
sub_248c4
sub sp [ di + 0x3c54 ]
cli
ja 0x24923
push dx
mov si 0xd4c9
xor [ si - 0xd ] sp
jns 0x24941
inc bx
mov al [ 0xfffffffffffff1ee ]
loope 0x24928
or dh bl
out dx ax
sldt [ bx + si ]
add bh bh
inc [ bp + di ]
add [ bx + si + 0x4b ] dl
add ax [ si ]
adc al 0x0
push es
add [ bx + si ] cl
add [ bx + si ] al
add [ bx + di ] ah
add bh dh
sahf
jpo 0x24940
jae 0x248fc
add ch dh
add al [ bx + si ]
add [ bx + di ] dl
add [ bx + si ] cl
add [ si + 0x6f ] sp
arpl [ bx + si + 0x72 ] dx
outsw
jo 0x24980
add [ bx + si ] al
cmc
das
arpl [ bx + 0x72 ] bp
0x24982
insb
and [ bp + si + 0x104 ] ah
sub [ bx + si + 0x100 ] ah
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
add [ bx + si ] al
mov [ bp + si + 0x6f4b ] ss
retn 0xc30
sub_10239
mov ah 0x94

sub_114fd
xor cx [ bx + di - 0x57 ]
cmpsw [ si ] [ di ]
retn
sub_11502
fsubr [ bx ]
push bp
int1
iret
sub_1156c
xchg cx ax
pop bp
push ax
fwait
dec si
or bx [ bp + si + 0x3cf8 ]
out dx al
retn
sub_11577
xlat
iret
sub_11cae
out dx al
int 0xba
[ si - 0x5f ]
sub_124b8
je 0x1252a
mov al [ 0xffffffffffffa701 ]
inc ax
arpl sp bx
0x9e04
sub_13fd8
push 0x65
dec bp
push bx
out 0x44 ax
scasw [ di ]
mov cx 0x3603
inc dx
mov bh 0x93
push dx

sub_16661
mov dh 0xee
mov gs si
mov si 0xb0fb
fsub [ bx ]
rcl [ di + 0x1f ] 0x1
in al dx
sub sp 0x38
test [ bx + si + 0x1407 ] ah
sbb [ bp + di - 0x479d ] cx
0xffffca5d 0x7cda
sub_1ae58
retn 0x93b9
sub_1aead
mov bx [ bx - 0xb ]
xor dh [ bx + 0x66 ]
retn
sub_22276
mov ch 0x74
mov dl 0xb3
dec bp
inc si
mov bx [ bx + si ]
dec sp
fmulp st6
retn 0x42a7
sub_248b9
push di
inc cx
and al 0x89
movsb [ di ] [ si ]
sub dl ch
retn
