sub_401000
cmp cl 0x40
jae r-xdata
sar edx 0x1f
mov eax edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
sar edx 0x1f
and cl 0x1f
sar eax cl
retn
shrd eax edx cl
sar edx cl
retn
sub_401030
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_401070
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_401120
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_401200
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4012c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4012eb
push ebp
mov ebp esp
sub esp 0x128
lea eax [ ebp - 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x128 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
push esi
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] 0x41
call [ SHBrowseForFolderA@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor al al
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
call [ SHGetPathFromIDListA@IAT ]
mov edi eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
xor eax eax
test edi edi
setne al
pop edi
xor al al
jmp r-xdata
leave
retn 0xc
pop esi
sub_401367
push ebp
mov ebp esp
push esi
push 0x0
push [ ebp + 0xc ]
call sub_407049
mov ecx [ ebp + 0x8 ]
mov esi eax
call sub_40bfbf
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40c24e
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push esi
push 0x0
push eax
call sub_407049
push eax
call sub_406b9a
test al al
jne r-xdata
xor al al
mov al 0x1
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_4013b9
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4acc ]
xor ebp ebp
cmp edi ebp
je r-xdata
mov edi [ esi + 0x4ad0 ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_40c07f
push edi
call sub_409008
pop ecx
mov edi [ esi + 0x4ad4 ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_40c07f
push edi
call sub_409008
pop ecx
mov edi [ esi + 0x4adc ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_40c07f
push edi
call sub_409008
pop ecx
lea edi [ esi + 0x4ad8 ]
mov ebx [ edi ]
cmp ebx ebp
je r-xdata
mov ecx edi
call sub_40c07f
push edi
call sub_409008
pop ecx
mov [ edi ] ebp
pop edi
mov [ esi + 0x4adc ] ebp
mov [ esi + 0x4ad4 ] ebp
mov [ esi + 0x4ad0 ] ebp
mov [ esi + 0x4acc ] ebp
lea ecx [ esi + 0x28d8 ]
pop esi
pop ebp
pop ebx
jmp sub_40c00f
mov ecx ebx
call sub_40c07f
push ebx
call sub_409008
pop ecx
sub_401464
push esi
push 0x5
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
push [ esi + 0x4ad0 ]
call sub_401367
test al al
je r-xdata
xor ecx ecx
cmp [ esp + 0x10 ] cl
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
mov eax [ esi + 0x4ad4 ]
cmp [ eax + 0x30 ] ecx
je r-xdata
pop esi
retn 0xc
push 0x5
push ecx
push [ esp + 0x10 ]
mov ecx esi
push eax
call sub_401367
neg al
sbb al al
inc al
jmp r-xdata
sub_4014b4
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
lea eax [ ebx + 0x30 ]
push edi
push eax
mov esi ecx
mov [ ebp + 0x8 ] eax
call sub_408d31
mov edi 0x400
cmp eax edi
jae r-xdata
xor eax eax
add ebx 0x430
push ebx
call sub_40ca1b
cmp eax edi
jae r-xdata
xor edi edi
inc edi
push edi
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_401464
test al al
jne r-xdata
mov ecx [ esi + 0x4acc ]
call sub_40bfbf
jmp r-xdata
mov ecx [ esi + 0x4acc ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_40c14d
test al al
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_406b9a
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
inc edi
mov eax edi
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call j_sub_40be6b
neg eax
sbb al al
inc al
mov [ esi ] al
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_401568
push esi
push edi
mov esi ecx
call sub_4013b9
xor eax eax
mov edi 0xf8
push edi
mov [ esi + 0x329b ] 0x0
mov [ esi + 0x3ecc ] 0x0
mov [ esi + 0x42cc ] ax
mov [ esi + 0x3298 ] al
mov [ esi + 0x3299 ] al
call sub_409015
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_40c1ca
jmp r-xdata
xor eax eax
mov ecx eax
call sub_40c1ca
jmp r-xdata
push edi
mov [ esi + 0x4acc ] eax
call sub_409015
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_40c1ca
jmp r-xdata
push edi
mov [ esi + 0x4ad0 ] eax
call sub_409015
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_40c1ca
jmp r-xdata
push edi
mov [ esi + 0x4ad4 ] eax
call sub_409015
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_40c1ca
jmp r-xdata
push edi
mov [ esi + 0x4adc ] eax
call sub_409015
pop ecx
test eax eax
je r-xdata
pop edi
mov [ esi + 0x4ad8 ] eax
pop esi
retn
sub_401628
push esi
mov esi ecx
call sub_406da7
xor eax eax
mov ecx esi
mov [ esi + 0x4ad8 ] eax
mov [ esi + 0x4adc ] eax
mov [ esi + 0x4ad4 ] eax
mov [ esi + 0x4ad0 ] eax
mov [ esi + 0x4acc ] eax
call sub_401568
mov eax esi
pop esi
retn
sub_401660
xor ecx ecx
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov [ ecx * 4 + rw-data ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
dec edx
jne r-xdata
push 0x8
mov eax ecx
pop edx
retn
sub_40168a
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
call sub_401660
cmp esi 0x8
jb r-xdata
test cl 0x7
je r-xdata
xor edx edx
test esi esi
jbe r-xdata
mov edi esi
shr edi 0x3
movzx edx [ ecx ]
movzx edi al
xor edx edi
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec esi
inc ecx
jmp r-xdata
pop edi
pop esi
retn 0xc
push ebx
xor eax [ ecx ]
add ecx 0x8
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
sub esi 0x8
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
mov edx eax
movzx eax dl
mov eax [ eax * 4 + rw-data ]
xor eax [ ecx - 0x4 ]
shr edx 0x8
xor eax edx
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
movzx edx al
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec edi
jne r-xdata
test esi esi
jbe r-xdata
movzx edi [ edx + ecx ]
movzx ebx al
xor edi ebx
shr eax 0x8
xor eax [ edi * 4 + rw-data ]
inc edx
cmp edx esi
jb r-xdata
pop ebx
sub_40178c
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x30
je r-xdata
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40862c
cmp [ ebp + 0xc ] 0x110
jne r-xdata
pop ebp
retn 0x1c
mov al [ ebp + 0x20 ]
and al 0x1
movzx eax al
push eax
push [ ebp + 0x18 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_40880e
jmp r-xdata
sub_4017e1
mov edx [ esp + 0x4 ]
mov eax edx
dec eax
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
dec eax
je r-xdata
inc [ ecx + 0x4 ]
retn 0x4
mov [ ecx ] edx
mov eax [ ecx ]
test eax eax
je r-xdata
sub eax 0xfd
jne r-xdata
mov [ ecx ] 0x2
jmp r-xdata
cmp eax 0x1
jne r-xdata
sub_401814
push esi
mov esi [ esp + 0x8 ]
cmp esi 0xff
jne r-xdata
push esi
mov ecx rw-data
call sub_4017e1
call sub_40337b
call sub_40a1fe
push esi
call sub_408fad
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop esi
retn 0x4
sub_40185b
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x2
mov ecx esi
call sub_401814
pop esi
retn 0x4
push [ esp + 0x8 ]
push 0x76
call sub_4089f7
push eax
push 0x0
call sub_409c10
add esp 0xc
sub_40188a
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x2
mov ecx esi
call sub_401814
pop esi
retn 0x4
push [ esp + 0x8 ]
push 0x204
call sub_4089f7
push eax
push 0x0
call sub_409c10
add esp 0xc
sub_4018cb
mov eax [ esp + 0x4 ]
push esi
test eax eax
je r-xdata
xor esi esi
cmp [ eax ] 0x0
je r-xdata
mov esi eax
jmp r-xdata
push [ esp + 0xc ]
push 0x6d
call sub_4089f7
push eax
push esi
call sub_409c10
add esp 0xc
pop esi
retn 0x8
sub_4018f8
mov eax [ esp + 0x4 ]
push esi
test eax eax
je r-xdata
xor esi esi
cmp [ eax ] 0x0
je r-xdata
mov esi eax
jmp r-xdata
push [ esp + 0xc ]
push 0x6e
call sub_4089f7
push eax
push esi
call sub_409c10
add esp 0xc
pop esi
retn 0x8
sub_401989
mov eax [ rw-data ]
mov ecx [ rw-data ]
xor ecx [ eax + 0x28 ]
xor edx edx
and ecx 0x1
xor [ eax + 0x28 ] ecx
mov cl [ rw-data ]
mov eax [ rw-data ]
and cl 0x8
cmp cl 0x8
sete dl
add edx edx
xor edx [ eax + 0x28 ]
and edx 0x2
xor [ eax + 0x28 ] edx
movzx ecx [ rw-data ]
mov eax [ rw-data ]
shl ecx 0x2
xor ecx [ eax + 0x28 ]
and ecx 0x4
xor [ eax + 0x28 ] ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0xc ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x14 ] eax
cmp [ rw-data ] 0x2
jne r-xdata
mov ax [ rw-data ]
cmp ax 0x2
jb r-xdata
cmp [ rw-data ] 0x2a
ja r-xdata
cmp ax 0x7
je r-xdata
cmp ax 0x5
jbe r-xdata
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
cmp ax 0x9
ja r-xdata
xor eax eax
retn
push rw-data
push 0x6c
call sub_4089f7
push eax
push rw-data
call sub_409c10
add esp 0xc
call sub_40ccab
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
xor eax eax
inc eax
retn
sub_401a97
push ecx
or [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
xor ebp ebp
push edi
xor edi edi
inc ebp
cmp [ rw-data ] 0x0
mov [ esp + 0x10 ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] ebp
jne r-xdata
call sub_403b2b
mov cx [ rw-data ]
movzx eax cx
cmp eax edi
je r-xdata
call sub_4042b7
test eax eax
je r-xdata
mov esi rw-data
mov [ rw-data ] edi
xor ebp ebp
mov ebx 0x10000
add eax 0xfffffff8
cmp eax ebp
ja r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
push rw-data
mov esi rw-data
push esi
call sub_40379f
call sub_4042b7
test eax eax
je r-xdata
call sub_403d36
jg r-xdata
push rw-data
push 0x6c
call sub_4089f7
push eax
push rw-data
call sub_409c10
add esp 0xc
call sub_403aa3
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
cmp cx 0x9
sete al
push eax
call sub_406858
cmp eax edi
je r-xdata
mov esi [ rw-data ]
mov ebx [ rw-data ]
push edi
push 0x800
push esi
push ebx
call sub_401070
cmp edx [ rw-data ]
jg r-xdata
push esi
push rw-data
mov ecx rw-data
call sub_4018f8
push 0x34
pop eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
mov eax ebp
jmp r-xdata
call sub_40cc09
push rw-data
push rw-data
call sub_403655
mov cl [ rw-data ]
xor bl bl
cmp [ rw-data ] 0x0
je r-xdata
xor ecx ecx
cmp eax 0x3
sete cl
lea ecx [ ecx * 4 + 0x2 ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor ebp ebp
inc ebp
push 0x0
push eax
push esi
call sub_4043be
mov ecx [ rw-data ]
mov [ ecx ] al
inc [ rw-data ]
inc [ rw-data ]
cmp [ rw-data ] ebx
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi rw-data
test eax eax
je r-xdata
test cl cl
jne r-xdata
cmp esi edi
jl r-xdata
cmp eax [ rw-data ]
jae r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
push [ rw-data ]
mov eax [ rw-data ]
push [ rw-data ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add edi ebx
adc ebp 0x0
add ecx edi
adc eax ebp
push eax
push ecx
push [ rw-data ]
push [ rw-data ]
push ebp
push edi
call sub_409c6c
call sub_409194
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x6
jne r-xdata
cmp eax ebp
jle r-xdata
inc bl
push edi
push [ rw-data ]
push [ rw-data ]
call sub_408c41
push [ rw-data ]
call sub_40372f
push eax
call [ SetEndOfFile@IAT ]
push edi
push edi
push [ rw-data ]
call sub_408c41
jg r-xdata
push 0x0
push [ rw-data ]
push esi
call sub_4043be
and [ rw-data ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx rw-data
call sub_4018bc
mov [ esp + 0x10 ] ebp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
call sub_403425
cmp edx [ rw-data ]
jl r-xdata
cmp ebx 0x5f5e100
jbe r-xdata
mov [ rw-data ] esi
mov eax [ rw-data ]
not eax
cmp eax [ rw-data ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
push esi
mov ecx rw-data
call sub_401940
mov [ esp + 0x10 ] 0x32
jmp r-xdata
test cl cl
jne r-xdata
jg r-xdata
cmp [ esp + 0x10 ] ebp
push 0x2
pop edi
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov bl 0x1
cmp eax [ rw-data ]
jbe r-xdata
mov eax [ rw-data ]
test [ eax + 0x28 ] 0x1
push rw-data
je r-xdata
cmp [ esp + 0x10 ] edi
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
push 0x71
push 0x70
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
call sub_40372f
push eax
call [ SetEndOfFile@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x10 ] edi
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4089f7
push eax
push esi
call sub_409c10
add esp 0xc
test bl bl
je r-xdata
call sub_40cc09
mov bl 0x1
call sub_403aa3
mov eax [ esp + 0x10 ]
push rw-data
push rw-data
call sub_403655
sub_401e44
push esi
mov esi [ esp + 0xc ]
cmp esi [ rw-data ]
jbe r-xdata
push esi
push [ esp + 0xc ]
push [ rw-data ]
call sub_408cb4
add [ rw-data ] esi
sub [ rw-data ] esi
add [ rw-data ] esi
xor eax eax
push 0x32
pop eax
jmp r-xdata
pop esi
retn 0x8
sub_401e7e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0xc
cmp eax 0x63
jl r-xdata
inc eax
push eax
push r--data
inc eax
push eax
push r--data
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_408fbd
add esp 0xc
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40723a
leave
retn 0x8
sub_401eb8
push esi
push edi
mov edi [ esp + 0xc ]
mov eax edi
imul eax eax 0x30
push eax
mov esi ecx
call sub_408a70
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
pop edi
mov eax esi
pop esi
retn 0x4
test edi edi
je r-xdata
mov ecx rw-data
call sub_40195b
sub_401eec
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
mov eax edi
imul eax eax 0x30
push eax
push [ esi ]
call sub_408aa8
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_40195b
sub_401f35
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi ]
call sub_408aa8
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_40195b
sub_401fce
push esi
mov esi ecx
xor ecx ecx
lea eax [ esi + 0xc30 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea ecx [ esi + 0xc44 ]
call sub_40c370
lea ecx [ esi + 0xc68 ]
call sub_40c370
lea ecx [ esi + 0xc8c ]
call sub_40c370
lea ecx [ esi + 0xcb0 ]
call sub_40c370
mov eax esi
pop esi
retn
sub_402011
mov eax 0x1368
call sub_4012c0
or [ esp + 0x14 ] 0xffffffff
push ebx
push ebp
push esi
xor esi esi
push edi
push 0x40
lea ecx [ esp + 0x48 ]
mov [ esp + 0x3c ] esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] esi
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x1c ] esi
call sub_401eb8
lea ecx [ esp + 0x198 ]
call sub_40c1ca
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x54 ] esi
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] esi
call sub_40c1ca
mov eax [ esp + 0x44 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
mov ebx rw-data
mov ebx 0x400
push ebx
lea eax [ esp + 0x694 ]
push eax
lea eax [ esp + 0x298 ]
push eax
lea ecx [ esp + 0xac ]
call sub_40c200
xor ebp ebp
test al al
je r-xdata
xor edi edi
mov [ esp + 0x1c ] esi
inc edi
mov ebp rw-data
cmp [ rw-data ] ebp
jne r-xdata
mov esi [ esp + 0x54 ]
cmp eax [ esp + 0x48 ]
jl r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edi [ esp + 0x10 ]
cmp [ esp + 0x60 ] ebp
je r-xdata
mov edi [ esi ]
lea ecx [ esp + 0x7c ]
call sub_40c370
push edi
lea ecx [ esp + 0x80 ]
call sub_40c2f6
push ebp
push ebp
lea eax [ esp + 0x84 ]
push eax
lea eax [ esp + 0x69c ]
push eax
lea eax [ esp + 0x2a0 ]
push eax
call sub_4038fd
push ebx
lea eax [ esp + 0x694 ]
push eax
lea eax [ esp + 0x298 ]
push eax
lea ecx [ esp + 0xac ]
add esi 0x4
call sub_40c200
test al al
jne r-xdata
mov eax [ esp + 0x44 ]
push 0x4
add eax esi
push ebp
mov [ rw-data ] eax
call sub_403c66
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
inc eax
push eax
lea ecx [ esp + 0x48 ]
call sub_401f99
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
mov [ esp + 0x74 ] eax
mov eax [ rw-data ]
mov [ esp + 0x78 ] eax
mov eax [ rw-data ]
mov [ esp + 0x68 ] eax
mov eax [ rw-data ]
mov [ esp + 0x6c ] eax
mov eax [ rw-data ]
mov [ esp + 0x70 ] eax
je r-xdata
cmp ebx ebp
jne r-xdata
cmp [ rw-data ] 0x49
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x10 ] 0x33
jmp r-xdata
push 0x4
push rw-data
push ebp
call sub_408eea
test eax eax
jne r-xdata
and [ esp + 0x2c ] 0x0
cmp [ esp + 0x1c ] 0x0
jle r-xdata
and [ rw-data ] 0x0
push r--data
push rw-data
call sub_40723a
mov ecx [ rw-data ]
xor eax eax
mov [ rw-data ] ax
test ecx ecx
je r-xdata
cmp ebx esi
jne r-xdata
cmp edi 0x1
jg r-xdata
push 0x343
call sub_4089f7
push eax
push rw-data
call sub_409c10
pop ecx
pop ecx
push 0xa0
call sub_4089f7
push eax
push rw-data
call sub_409c10
mov edi [ esp + 0x18 ]
pop ecx
pop ecx
cmp edi ebp
jne r-xdata
mov [ esp + 0x18 ] edi
mov ecx [ rw-data ]
mov eax ecx
xor eax [ esp + 0x3c ]
mov esi 0xffff
and eax esi
xor edx edx
or eax edx
je r-xdata
call sub_408256
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push [ esp + 0x7c ]
push [ esp + 0x7c ]
call sub_4033f6
mov ecx [ rw-data ]
call sub_402f5d
push 0x2000
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_403bb6
mov eax [ esp + 0x68 ]
inc [ esp + 0x38 ]
cmp [ esp + 0x18 ] 0x0
mov [ rw-data ] eax
mov eax [ esp + 0x6c ]
mov [ rw-data ] eax
mov eax [ esp + 0x70 ]
mov [ rw-data ] eax
je r-xdata
mov eax [ esp + 0x38 ]
shl eax 0x6
mov [ esp + 0x64 ] eax
jmp r-xdata
and [ rw-data ] 0x0
call sub_403a4d
mov eax [ ecx ]
push edi
call [ eax ]
cmp [ esp + 0x28 ] bp
jbe r-xdata
cmp edi 0x1
jg r-xdata
xor ax ax
cmp ax [ esp + 0x28 ]
sbb edi edi
and edi 0x46
add edi 0xb
jmp r-xdata
mov ebx [ esp + 0x24 ]
movzx esi [ esp + 0x20 ]
inc ebx
cmp ebx esi
jne r-xdata
xor edi edi
inc edi
jmp r-xdata
push 0x4
push rw-data
push ebp
call sub_408eea
neg eax
sbb eax eax
neg eax
mov [ esp + 0x60 ] eax
jmp r-xdata
cmp ecx esi
jne r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push 0x2
push eax
call sub_404024
test eax eax
je r-xdata
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov ecx [ esp + 0x2c ]
add eax ecx
imul ecx ecx 0x30
add ecx [ esp + 0x44 ]
mov [ esp + 0x24 ] eax
mov [ rw-data ] ecx
lea ecx [ esp + 0x198 ]
call sub_40c24e
cmp [ rw-data ] 0x0
mov [ esp + 0x50 ] eax
je r-xdata
cmp [ esp + 0x20 ] bp
jbe r-xdata
cmp edi 0x1
jg r-xdata
push 0x52
jmp r-xdata
lea ecx [ esp + 0xa0 ]
call sub_40c07f
cmp [ esp + 0x54 ] ebp
je r-xdata
push 0xa0
call sub_4089f7
push eax
push rw-data
call sub_409c10
pop ecx
pop ecx
mov [ esp + 0x10 ] 0x3
jmp r-xdata
cmp [ rw-data ] edx
je r-xdata
movzx eax [ rw-data ]
push 0x0
push 0x3
push eax
call sub_404024
test eax eax
je r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
mov eax [ rw-data ]
mov edi [ eax ]
add edi [ rw-data ]
mov esi [ eax + 0x4 ]
adc esi [ rw-data ]
push 0x0
push 0x2000
push esi
push edi
call sub_401200
mov ebp eax
mov eax edi
sub eax ebp
mov ecx esi
sbb ecx edx
test esi esi
jg r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
cmp edi ebp
jne r-xdata
push 0x51
pop edi
jmp r-xdata
lea ecx [ esp + 0x198 ]
call sub_40c07f
cmp [ esp + 0x44 ] ebp
je r-xdata
push [ esp + 0x54 ]
call sub_408a89
movzx eax [ rw-data ]
push rw-data
push eax
push [ rw-data ]
call sub_40c421
movzx eax [ rw-data ]
push 0x0
push 0x0
push eax
call sub_404024
test eax eax
je r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
cmp eax edi
jg r-xdata
mov [ esp + 0x10 ] eax
cmp eax [ rw-data ]
jne r-xdata
jl r-xdata
movzx ecx [ rw-data ]
cmp eax ecx
jne r-xdata
xor edi edi
inc edi
mov eax edi
push [ esp + 0x44 ]
call sub_408a89
test [ rw-data ] 0x10
je r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
cmp eax edi
jg r-xdata
mov [ esp + 0x10 ] eax
push ebx
push 0x68
call sub_4089f7
push eax
push rw-data
call sub_409c10
add esp 0xc
push 0x0
push ecx
mov ecx [ rw-data ]
push eax
call sub_4033f6
mov ecx [ rw-data ]
call sub_402f5d
push 0x2000
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_403bb6
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
test edx edx
jg r-xdata
cmp ecx [ rw-data ]
jne r-xdata
push 0xa0
call sub_4089f7
push eax
push rw-data
call sub_409c10
cmp [ esp + 0x2c ] 0x0
pop ecx
pop ecx
mov [ esp + 0x10 ] 0x2
jne r-xdata
test edi edi
jae r-xdata
push eax
push rw-data
call sub_401e7e
push r--data
push rw-data
call sub_40723a
jmp r-xdata
lea ecx [ esp + 0x690 ]
call sub_401fce
push 0xce8
push 0x0
lea eax [ esp + 0x698 ]
push eax
call sub_408c87
push ebx
lea eax [ esp + 0x6c4 ]
push eax
call sub_408e24
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
shl eax 0x10
or eax ecx
mov [ esp + 0x6ac ] eax
mov eax [ rw-data ]
mov [ esp + 0x1370 ] eax
mov eax [ rw-data ]
mov [ esp + 0x1374 ] eax
mov eax [ rw-data ]
shr eax 0xb
test al 0x1
je r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
cmp eax edi
jg r-xdata
mov [ esp + 0x10 ] eax
mov eax [ rw-data ]
add eax ebp
mov [ rw-data ] eax
mov eax ebp
cdq
sub [ rw-data ] eax
sbb [ rw-data ] edx
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx eax
or edx ecx
je r-xdata
and [ rw-data ] 0x0
call sub_403a4d
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
push 0x5
push 0x0
lea eax [ esp + 0x698 ]
push eax
mov ecx rw-data
call sub_4014b4
test eax eax
setne [ esp + 0x17 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x200
or [ esp + 0x698 ] ax
push 0x400
lea eax [ esp + 0xac4 ]
push eax
push ebx
call sub_40c8d5
xor eax eax
mov [ esp + 0x12be ] ax
push 0x3ff
lea eax [ esp + 0x6c4 ]
push eax
lea eax [ esp + 0xac8 ]
push eax
call sub_40c87f
mov [ esp + 0xabf ] 0x0
push ebx
call sub_40702d
cmp [ eax ] 0x5c
je r-xdata
cmp eax 0xb
jne r-xdata
push 0xa0
push 0x4
push rw-data
push esi
call sub_408eea
mov edi 0xa0
test eax eax
je r-xdata
test eax eax
jbe r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
sub eax ebp
sub eax ecx
cdq
add [ rw-data ] eax
adc [ rw-data ] edx
add ebp ecx
mov [ rw-data ] ebp
jmp r-xdata
inc [ esp + 0x2c ]
mov eax [ esp + 0x2c ]
cmp eax [ esp + 0x1c ]
jl r-xdata
mov [ esp + 0x34 ] ecx
xor ecx ecx
push ecx
mov [ esp + 0x34 ] eax
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov esi [ eax + 0x4 ]
mov edi [ eax ]
push 0x2000
push esi
push edi
call sub_401200
mov ebp eax
mov eax edi
sub eax ebp
mov ecx esi
sbb ecx edx
test esi esi
jg r-xdata
cmp [ esp + 0x17 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push r--data
push ebx
call sub_408f8f
call sub_407d69
mov esi eax
xor ebp ebp
cmp esi ebp
je r-xdata
push edi
call sub_4089f7
push eax
push rw-data
call sub_409c10
mov eax [ rw-data ]
pop ecx
xor edx edx
pop ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] 0x2
cmp [ esp + 0x24 ] edx
jne r-xdata
push 0x4
mov esi rw-data
push esi
call sub_403c66
test eax eax
je r-xdata
mov eax [ esp + 0x64 ]
jl r-xdata
add [ esp + 0x3c ] edi
lea ecx [ esp + 0x12c0 ]
adc [ esp + 0x40 ] 0x0
call sub_40c02b
jmp r-xdata
call sub_401989
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
mov eax rw-data
je r-xdata
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push 0x2
push eax
call sub_404024
cmp eax ebp
je r-xdata
push edi
call sub_4089f7
push eax
push rw-data
call sub_409c10
pop ecx
pop ecx
mov [ esp + 0x10 ] esi
jmp r-xdata
or eax ecx
jne r-xdata
mov ebp eax
or ebp ecx
jne r-xdata
test edi edi
jae r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0x40
jl r-xdata
inc [ esp + 0x28 ]
push ebx
lea ecx [ esp + 0x19c ]
call sub_40c1f2
inc [ esp + 0x1c ]
add esi 0x30
jmp r-xdata
cmp [ eax ] 0x3a
jne r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
mov eax [ esp + 0x30 ]
or eax [ esp + 0x34 ]
je r-xdata
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] ecx
mov [ rw-data ] edx
mov [ rw-data ] edx
jmp r-xdata
push eax
call sub_401f7e
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x5f
movzx eax [ rw-data ]
push ebp
push 0x3
push eax
call sub_404024
cmp eax ebp
je r-xdata
push eax
call sub_408a89
mov [ rw-data ] ebp
cmp eax 0x1
jle r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x30 ]
mov [ rw-data ] eax
mov eax [ esp + 0x34 ]
mov [ rw-data ] eax
mov esi rw-data
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
call sub_403e50
test eax eax
jne r-xdata
movzx eax [ rw-data ]
push rw-data
push eax
push [ rw-data ]
call sub_40c421
cmp [ esp + 0x50 ] ebp
je r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
push ebx
push 0x68
push edi
jmp r-xdata
push 0x4
push esi
call sub_403c66
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ esp + 0x50 ]
push ebx
call sub_408e24
cmp eax 0x1
jg r-xdata
mov [ esp + 0x10 ] eax
call sub_4089f7
push eax
push rw-data
call sub_409c10
pop ecx
pop ecx
push 0x4
push rw-data
push esi
call sub_408eea
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x5
je r-xdata
push ebx
call sub_40702d
cmp [ eax ] 0x5c
sete [ esp + 0x17 ]
cmp [ esp + 0x17 ] 0x0
je r-xdata
push ebx
call sub_406f9a
mov esi eax
push esi
call sub_408d31
inc eax
push eax
push esi
push ebx
call sub_408ce6
mov edi rw-data
push edi
call sub_408d31
mov esi eax
cmp esi ebp
jbe r-xdata
push ebx
push ebx
call sub_407049
cmp [ rw-data ] 0x5
jne r-xdata
mov [ eax ] 0x0
push esi
push ebx
push edi
call sub_40be8c
test eax eax
jne r-xdata
push ebx
mov ebp rw-data
push ebp
call sub_408e24
xor eax eax
mov [ rw-data ] ax
mov eax [ rw-data ]
shr eax 0xb
test al 0x1
je r-xdata
cmp [ rw-data ] 0x5f
jne r-xdata
lea esi [ esi + rw-data ]
mov eax [ rw-data ]
test [ eax + 0x24 ] 0x10
je r-xdata
mov esi 0x400
push esi
mov edi rw-data
push edi
push ebx
call sub_40c8d5
push esi
push ebp
xor eax eax
push edi
mov [ rw-data ] ax
call sub_40c87f
mov [ rw-data ] 0x0
movsx eax [ rw-data ]
push eax
call sub_406e18
test al al
je r-xdata
inc esi
jmp r-xdata
cmp al 0x2f
jne r-xdata
xor esi esi
cmp [ rw-data ] 0x49
push esi
sete al
movzx eax al
push eax
movzx eax [ rw-data ]
push eax
push esi
push ebx
call sub_40a4dd
test al al
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov [ rw-data ] 0x3a
mov al [ esi ]
cmp al 0x5c
je r-xdata
push esi
call sub_408d31
inc eax
push eax
push esi
push ebx
call sub_408ce6
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x17 ] 0x1
cmp eax 0xb
jne r-xdata
mov eax [ rw-data ]
test [ eax + 0x28 ] 0x1
je r-xdata
cmp [ esp + 0x17 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
call sub_401a97
test eax eax
je r-xdata
call sub_40c86c
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
push ebx
call sub_403f99
cmp eax 0xffffffff
je r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jg r-xdata
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x10 ]
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x1c ]
xor esi esi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0xa0 ]
call sub_40c07f
cmp [ esp + 0x54 ] 0x0
je r-xdata
push rw-data
push 0x73
jmp r-xdata
mov [ esp + 0x10 ] eax
inc [ esp + 0x20 ]
jmp r-xdata
push rw-data
push 0x73
call sub_4089f7
push eax
push rw-data
call sub_409c10
add esp 0xc
mov esi [ eax + 0x24 ]
cmp ecx 0xb
jne r-xdata
jmp r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
lea ecx [ esp + 0x198 ]
call sub_40c07f
cmp [ esp + 0x44 ] 0x0
je r-xdata
push [ esp + 0x54 ]
call sub_408a89
call sub_4089f7
push eax
push rw-data
call sub_409c10
add esp 0xc
jmp r-xdata
movzx esi [ rw-data ]
movzx eax [ rw-data ]
shl esi 0x10
lea ecx [ esp + 0x7c ]
or esi eax
call sub_40c370
push esi
lea ecx [ esp + 0x80 ]
call sub_40c2f6
push 0x0
push 0x0
lea eax [ esp + 0x84 ]
push eax
push edi
push ebx
call sub_4038fd
push edi
push ebx
lea ecx [ esp + 0xa8 ]
call sub_40c0ca
push esi
lea ecx [ esp + 0x58 ]
call sub_401fb3
jmp r-xdata
cmp [ rw-data ] al
push esi
sete al
movzx eax al
push eax
push edi
push ebx
call sub_403738
test eax eax
je r-xdata
mov edi rw-data
push edi
push ebx
call sub_403525
test al al
jne r-xdata
push rw-data
lea eax [ esp + 0x294 ]
push eax
call sub_408e24
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push 0x0
shl eax 0x10
add eax ecx
push eax
push [ rw-data ]
lea eax [ esp + 0x29c ]
push [ rw-data ]
push eax
push rw-data
call sub_40a511
mov al [ rw-data ]
cmp al 0x43
je r-xdata
cmp eax 0x3
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x10 ]
jmp r-xdata
push [ esp + 0x44 ]
call sub_408a89
push 0x1
push edi
push ebx
call sub_40379f
cmp [ rw-data ] 0x0
push esi
sete al
movzx eax al
push eax
push edi
push ebx
call sub_403738
test eax eax
je r-xdata
cmp al 0x41
je r-xdata
test esi esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1368
retn
push rw-data
push 0x6f
call sub_4089f7
push eax
push rw-data
call sub_409c10
add esp 0xc
mov ecx rw-data
call sub_401846
jmp r-xdata
mov [ rw-data ] 0x1
cmp al 0x4e
je r-xdata
je r-xdata
cmp al 0x52
je r-xdata
lea eax [ esp + 0x290 ]
push eax
push ebx
call sub_408e24
push ebx
call sub_408d31
cmp [ eax + rw-data ] 0xa
jne r-xdata
cmp al 0x59
je r-xdata
test eax eax
je r-xdata
dec eax
mov [ eax + rw-data ] 0x0
cmp al 0x72
je r-xdata
xor esi esi
inc esi
jmp r-xdata
cmp al 0x79
jne r-xdata
jmp r-xdata
sub_402e44
mov eax ecx
or [ eax + 0x4 ] 0xffffffff
xor ecx ecx
xor edx edx
mov [ eax ] r--data
mov [ eax + 0x17 ] cl
mov [ eax + 0x418 ] dx
mov [ eax + 0x12 ] cl
mov [ eax + 0x8 ] cl
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x11 ] cl
mov [ eax + 0xc18 ] ecx
mov [ eax + 0x16 ] cl
mov [ eax + 0x13 ] 0x1
mov [ eax + 0xc1c ] ecx
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x15 ] cl
retn
sub_402eaf
push ebx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
mov bl 0x1
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
inc [ esi + 0xc1c ]
pop esi
mov al bl
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xffffffff
test bl bl
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov ebx eax
dec ebx
neg ebx
sbb bl bl
inc bl
jne r-xdata
cmp [ esi + 0x14 ] bl
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ esi + 0x17 ]
push eax
mov ecx rw-data
call sub_40185b
and [ eax * 4 + rw-data ] 0x0
inc eax
cmp eax 0x100
jb r-xdata
cmp [ eax * 4 + rw-data ] esi
je r-xdata
jmp r-xdata
sub_402f2d
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
xor al al
pop esi
retn
cmp [ esi + 0x13 ] 0x0
je r-xdata
call sub_402eaf
lea eax [ esi + 0x418 ]
push eax
add esi 0x17
push esi
call sub_403655
pop esi
retn
sub_402f5d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push edi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
push 0x0
push [ esi + 0x4 ]
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x1
cdq
push 0x0
push edx
push eax
call sub_401030
xor ecx ecx
add eax edi
adc edx ecx
call [ GetLastError@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax edx
jmp r-xdata
add esi 0x17
push esi
mov ecx rw-data
call sub_40188a
pop edi
pop esi
leave
retn
sub_402fbf
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ GetFileType@IAT ]
cmp eax 0x2
je r-xdata
xor al al
retn
xor eax eax
inc eax
retn
cmp eax 0x3
je r-xdata
xor eax eax
retn
sub_403005
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ esi + 0xc18 ] ebx
cmp [ esi + 0x16 ] bl
je r-xdata
mov [ ebp - 0x4 ] 0x80000000
cmp [ ebp + 0x14 ] bl
je r-xdata
mov [ ebp + 0x10 ] 0x1
mov [ ebp + 0x14 ] 0x1
cmp [ ebp + 0x10 ] bl
je r-xdata
mov [ ebp - 0x4 ] 0xc0000000
xor eax eax
cmp [ esi + 0x15 ] bl
setne al
dec eax
and eax 0x8000000
mov edi eax
call sub_4069f0
test eax eax
je r-xdata
mov [ ebp + 0x14 ] 0x3
push ebx
push edi
push 0x3
push ebx
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp edi 0xffffffff
setne [ ebp + 0x13 ]
mov [ esi + 0x12 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
cmp [ ebp + 0x13 ] bl
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
cmp [ eax ] bx
je r-xdata
mov al [ ebp + 0x13 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
mov [ esi + 0x4 ] edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ esi + 0xc18 ] 0x1
push ebx
push edi
push 0x3
push ebx
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push eax
call [ CreateFileW@IAT ]
jmp r-xdata
xor eax eax
mov [ esi + 0x418 ] ax
push [ ebp + 0xc ]
lea eax [ esi + 0x418 ]
push eax
call sub_40ca32
jmp r-xdata
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x1000000
push eax
push [ ebp + 0xc ]
call sub_40c87f
push [ ebp + 0x8 ]
push eax
call sub_408e24
jmp r-xdata
lea eax [ esi + 0x17 ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_402e88
sub_40311a
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ ebp + 0x10 ] bl
jne r-xdata
mov [ ebp + 0x10 ] 0x1
mov [ ebp + 0x10 ] ebx
cmp [ esi + 0x16 ] bl
je r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0x10 ]
push 0xc0000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
cmp edi ebx
je r-xdata
call sub_4069f0
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x418 ] ax
push edi
lea eax [ esi + 0x418 ]
push eax
call sub_40ca32
jmp r-xdata
cmp [ edi ] bx
je r-xdata
push 0x1000000
push eax
push edi
call sub_40c87f
push [ ebp + 0x8 ]
push eax
call sub_408e24
jmp r-xdata
lea eax [ esi + 0x17 ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0x10 ]
push 0xc0000000
push edi
call [ CreateFileW@IAT ]
jmp r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_402e88
xor eax eax
cmp [ esi + 0x4 ] 0xffffffff
pop edi
pop esi
setne al
pop ebx
pop ebp
retn 0xc
mov [ esi + 0x4 ] eax
mov [ esi + 0x12 ] 0x1
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
cmp edi ebx
je r-xdata
sub_4031db
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
cmp [ edi + 0xc ] 0x1
mov esi 0x4e20
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx edi
call sub_402fbf
test al al
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ edi + 0x4 ] eax
mov [ ebp + 0xc ] esi
cmp [ edi + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0xc ] esi
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x6d
jne r-xdata
push esi
push [ ebp + 0x8 ]
mov ecx edi
call sub_4031db
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
xor eax eax
jmp r-xdata
sub_40325a
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0xffffffff
je r-xdata
mov al 0x1
push esi
mov esi [ ebp + 0xc ]
test esi esi
jg r-xdata
push [ ebp + 0x10 ]
mov eax esi
sar eax 0x1f
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push [ edi + 0x4 ]
call [ SetFilePointer@IAT ]
pop esi
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
pop edi
leave
retn 0xc
call sub_403425
call sub_402f5d
jmp r-xdata
add [ ebp + 0x8 ] eax
adc esi edx
and [ ebp + 0x10 ] 0x0
sub_4032ce
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx eax
je r-xdata
mov [ ebp + 0xb ] al
mov [ ebp + 0xb ] 0x1
cmp [ ecx ] eax
jne r-xdata
mov [ ebp + 0xf ] al
mov [ ebp + 0xf ] 0x1
cmp [ edi ] eax
jne r-xdata
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp edi eax
je r-xdata
xor bl bl
cmp [ esi ] eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40c262
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_40c262
cmp [ ebp + 0xb ] al
je r-xdata
movzx eax [ ebp + 0xb ]
neg eax
sbb eax eax
lea ecx [ ebp - 0xc ]
and eax ecx
push eax
movzx eax bl
neg eax
sbb eax eax
lea ecx [ ebp - 0x14 ]
and eax ecx
push eax
movzx eax [ ebp + 0xf ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
and eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
call [ SetFileTime@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40c262
sub_40337b
push ebp
mov ebp esp
push ecx
inc [ rw-data ]
push esi
mov [ ebp - 0x1 ] 0x1
xor esi esi
add esi 0x4
cmp esi 0x400
jb r-xdata
mov [ eax + 0x14 ] 0x0
mov ecx [ esi + rw-data ]
cmp [ ecx + 0x12 ] 0x0
je r-xdata
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
dec [ rw-data ]
mov al [ ebp - 0x1 ]
pop esi
leave
retn
call sub_402eaf
call sub_402f2d
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
and [ esi + rw-data ] 0x0
jmp r-xdata
test al al
je r-xdata
sub_4033f6
push esi
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40325a
test al al
jne r-xdata
pop esi
retn 0xc
cmp [ esi + 0x14 ] al
je r-xdata
add esi 0x17
push esi
mov ecx rw-data
call sub_40188a
sub_403425
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
push edi
push esi
lea ecx [ ebp - 0x18 ]
call sub_409150
push 0x2
push 0x0
push 0x0
mov ecx esi
call sub_4033f6
mov ecx esi
call sub_402f5d
lea ecx [ ebp - 0x18 ]
mov esi eax
mov edi edx
call sub_409177
mov edx edi
pop edi
mov eax esi
pop esi
leave
retn
sub_403460
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
cmp [ edi + 0x11 ] bl
je r-xdata
mov esi rw-data
call sub_402f5d
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ edi + 0xc18 ] 0x2
cmp [ edi + 0x14 ] bl
je r-xdata
cmp [ edi + 0x11 ] bl
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ edi + 0xc ] ebx
jne r-xdata
mov esi 0x200
add edi 0x17
push edi
mov ecx esi
call sub_40196e
lea eax [ edi + 0x17 ]
push eax
mov ecx esi
call sub_4017dc
test al al
jne r-xdata
push eax
push [ ebp + 0x8 ]
mov ecx edi
call sub_4031db
cmp eax 0xffffffff
jne r-xdata
mov eax esi
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_4031db
mov [ ebp - 0x4 ] eax
cmp eax 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] eax
add ebx esi
cmp ebx [ ebp + 0xc ]
jb r-xdata
mov eax esi
xor ecx ecx
mov eax ebx
add eax [ ebp - 0xc ]
push 0x0
adc ecx [ ebp - 0x8 ]
push ecx
push eax
mov ecx edi
call sub_4033f6
mov eax [ ebp + 0xc ]
sub eax ebx
cmp eax esi
jb r-xdata
jmp r-xdata
sub_403525
call sub_4069f0
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
call [ GetFileAttributesW@IAT ]
jmp r-xdata
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
retn 0x8
sub_4035aa
call sub_4069f0
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
call [ GetFileAttributesW@IAT ]
jmp r-xdata
retn 0x8
sub_4035d7
call sub_4069f0
test eax eax
je r-xdata
push [ esp + 0xc ]
push [ esp + 0x8 ]
call [ SetFileAttributesA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push [ esp + 0xc ]
push eax
call [ SetFileAttributesW@IAT ]
jmp r-xdata
test eax eax
setne al
retn 0xc
sub_403611
push ebp
mov ebp esp
sub esp 0x400
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
push 0x400
push esi
call [ GetFullPathNameA@IAT ]
test eax eax
je r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
lea eax [ ebp - 0x400 ]
push eax
jmp r-xdata
pop esi
leave
retn 0x8
push esi
push [ ebp + 0xc ]
call sub_408e24
sub_403655
call sub_4069f0
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
call [ DeleteFileW@IAT ]
jmp r-xdata
test eax eax
setne al
retn 0x8
sub_403687
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor ebx ebx
cmp [ eax ] 0x72
push edi
jne r-xdata
xor edi edi
mov esi 0x40000000
inc edi
mov [ ebp + 0x14 ] 0x2
xor ecx ecx
cmp [ eax + 0x1 ] 0x2b
setne cl
xor eax eax
dec ecx
and ecx 0x40000000
add ecx 0x80000000
cmp [ ebp + 0x14 ] bl
mov esi ecx
setne al
mov [ ebp + 0x14 ] 0x3
lea eax [ eax + eax + 0x1 ]
mov edi eax
jmp r-xdata
push ebx
push 0x8000000
push [ ebp + 0x14 ]
push ebx
push edi
push esi
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
call sub_4069f0
test eax eax
je r-xdata
push 0x4
call sub_408a70
mov [ eax ] esi
xor eax eax
jmp r-xdata
cmp [ eax ] bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push ebx
push 0x8000000
push [ ebp + 0x14 ]
push ebx
push edi
push esi
push eax
call [ CreateFileW@IAT ]
jmp r-xdata
mov esi eax
cmp esi 0xffffffff
jne r-xdata
sub_403738
push ebp
mov ebp esp
push esi
call sub_4069f0
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call [ CreateDirectoryA@IAT ]
test esi esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x2
pop eax
cmp eax 0x3
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x8 ]
call sub_4035d7
push 0x0
push esi
call [ CreateDirectoryW@IAT ]
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x10
test eax eax
je r-xdata
sub_40379f
push ebp
mov ebp esp
sub esp 0xc10
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov [ ebp - 0x2 ] 0x0
cmp [ edi ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x1
mov eax esi
sub eax [ ebp + 0x8 ]
cmp eax 0x400
jge r-xdata
call sub_40ca18
mov [ ebp - 0x2 ] 0x1
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x400
jge r-xdata
cmp [ esi ] 0x0
jne r-xdata
and [ ebp - 0x8 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea ebx [ ebp - 0xc10 ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x3 ] 0x1
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
sub ebx edi
cmp [ esi ] 0x5c
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
pop esi
pop ebx
jne r-xdata
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
test ax ax
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
push esi
call sub_401f7e
mov [ ebp - 0x10 ] eax
mov esi eax
xor edi edi
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al [ ebp - 0x3 ]
pop edi
leave
retn 0xc
push [ ebp + 0x8 ]
call sub_40702d
movsx eax [ eax ]
push eax
call sub_406e18
test al al
jne r-xdata
cmp ax 0x5c
je r-xdata
test esi esi
je r-xdata
cmp [ ebp - 0x1 ] 0x0
lea eax [ ebp - 0x410 ]
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc10 ]
push [ ebp + 0xc ]
push eax
call sub_40ca4f
mov ecx [ ebp - 0xc ]
xor eax eax
mov [ ebx + ecx ] ax
lea edi [ ebp - 0xc10 ]
push 0x0
push 0x1
push edi
push [ ebp + 0x8 ]
call sub_403738
test eax eax
je r-xdata
jmp r-xdata
sub esi [ ebp + 0x8 ]
push esi
push [ ebp + 0x8 ]
push eax
call sub_408e58
mov [ ebp + esi - 0x410 ] 0x0
mov esi [ ebp - 0x10 ]
push 0x1000000
push eax
push edi
call sub_40c87f
jmp r-xdata
mov [ ebp - 0x3 ] 0x0
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ ebp - 0x3 ] 0x0
push 0x0
push 0x1
push edi
lea eax [ ebp - 0x410 ]
push eax
call sub_403738
test eax eax
je r-xdata
inc [ ebp - 0x8 ]
add [ ebp - 0xc ] 0x2
mov edi [ ebp + 0xc ]
jmp r-xdata
sub_4038fd
push ebp
mov ebp esp
sub esp 0x820
call sub_4069f0
test eax eax
je r-xdata
leave
retn 0x14
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x2 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x3 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x1 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
je r-xdata
mov [ ebp + 0xf ] bl
jmp r-xdata
test al 0x1
je r-xdata
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_4035aa
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
push esi
lea eax [ ebp - 0x820 ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_406f33
push ebx
push 0x2000000
push 0x3
push ebx
push 0x3
push 0x40000000
lea eax [ ebp - 0x820 ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
mov [ ebp + 0xf ] 0x1
call sub_4035d7
pop esi
pop edi
pop ebx
cmp [ ebp - 0x2 ] bl
je r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40c262
cmp [ ebp - 0x1 ] bl
je r-xdata
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40c262
movzx eax [ ebp - 0x2 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x20 ]
and eax ecx
push eax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x10 ]
and eax ecx
push eax
movzx eax [ ebp - 0x3 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x18 ]
and eax ecx
push eax
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ ebp + 0xf ] bl
je r-xdata
mov ecx [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40c262
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x8 ]
call sub_4035d7
sub_403a4d
push 0xc20
call sub_409015
pop ecx
test eax eax
je r-xdata
xor ecx ecx
mov ecx eax
call sub_402e44
mov ecx eax
jmp r-xdata
xor eax eax
pop esi
retn
push esi
push esi
mov ecx rw-data
call sub_4018cb
xor eax eax
inc eax
pop esi
retn
movzx eax [ rw-data ]
push esi
push 0x0
push eax
push rw-data
mov esi rw-data
push esi
mov [ rw-data ] ecx
call sub_403005
test al al
jne r-xdata
sub_403aa3
mov eax [ rw-data ]
mov edx [ rw-data ]
test eax eax
jl r-xdata
push esi
mov esi [ rw-data ]
test esi esi
jl r-xdata
jg r-xdata
test eax eax
jg r-xdata
mov ecx [ rw-data ]
jg r-xdata
add [ rw-data ] edx
adc [ rw-data ] eax
test edx edx
jbe r-xdata
pop esi
retn
jl r-xdata
push ebx
mov ebx [ rw-data ]
mov eax ebx
cdq
add eax ecx
adc edx esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
sub eax ebx
and [ rw-data ] 0x0
pop ebx
mov [ rw-data ] edx
mov [ rw-data ] eax
pop esi
retn
test ecx ecx
jbe r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
test edx edx
jae r-xdata
sub_403b2b
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
mov eax esi
push edi
mov edi [ rw-data ]
cdq
cmp edx edi
jl r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
jg r-xdata
test edi edi
jg r-xdata
cmp eax ecx
jbe r-xdata
mov eax [ rw-data ]
add eax ecx
mov [ rw-data ] eax
mov eax ecx
cdq
push ebx
mov ebx [ rw-data ]
sub esi eax
sbb ebx edx
mov [ rw-data ] esi
mov esi eax
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edx
pop ebx
jmp r-xdata
jl r-xdata
sub ecx esi
sbb edi [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] edi
pop edi
pop esi
retn
xor ecx ecx
xor edi edi
test ecx ecx
jae r-xdata
sub_403bb6
mov ecx [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
push ebx
call sub_403460
cmp [ rw-data ] 0x0
mov edi eax
je r-xdata
mov eax edi
cmp edi esi
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
movzx ecx [ rw-data ]
cmp eax ecx
jge r-xdata
inc eax
mov [ rw-data ] eax
cmp eax ecx
jne r-xdata
push eax
push rw-data
call sub_401e7e
push r--data
push rw-data
call sub_40723a
jmp r-xdata
and [ rw-data ] 0x0
call sub_403a4d
test eax eax
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
sub esi edi
push esi
lea eax [ edi + ebx ]
push eax
call sub_403460
test eax eax
jge r-xdata
add edi eax
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub_403c66
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
mov ebp edi
test edi edi
je r-xdata
mov eax ebp
mov eax [ rw-data ]
mov ebx 0x2000
mov esi edi
cmp edi eax
jb r-xdata
jl r-xdata
push esi
push [ rw-data ]
push [ esp + 0x1c ]
call sub_408cb4
mov eax [ rw-data ]
add [ esp + 0x14 ] esi
add [ rw-data ] esi
sub eax esi
sbb [ rw-data ] 0x0
sub edi esi
mov [ rw-data ] eax
jne r-xdata
mov esi eax
push ebx
push [ rw-data ]
call sub_403bb6
cdq
mov ecx eax
or ecx edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
test eax eax
ja r-xdata
cmp [ rw-data ] 0x0
jg r-xdata
mov eax ebp
sub eax edi
jmp r-xdata
test edx edx
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push rw-data
push rw-data
mov ecx rw-data
call sub_401925
xor eax eax
jmp r-xdata
jg r-xdata
add [ rw-data ] ebx
mov ecx [ rw-data ]
mov [ rw-data ] ecx
adc [ rw-data ] 0x0
test eax eax
jb r-xdata
sub_403d36
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
jg r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ rw-data ] edi
push esi
jg r-xdata
jl r-xdata
mov eax [ rw-data ]
test [ eax + 0x28 ] 0x1
je r-xdata
jl r-xdata
add [ rw-data ] 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
adc [ rw-data ] 0xffffffff
jmp r-xdata
cmp [ rw-data ] edi
ja r-xdata
add [ rw-data ] 0xffffffff
mov eax [ rw-data ]
adc [ rw-data ] 0xffffffff
movzx eax [ eax ]
inc [ rw-data ]
mov edi [ rw-data ]
mov esi [ rw-data ]
push ebx
mov ebx [ rw-data ]
jmp r-xdata
mov esi 0x2000
push esi
push [ rw-data ]
call sub_403bb6
cdq
mov ecx eax
mov [ rw-data ] eax
and eax edx
or ecx edx
mov [ rw-data ] edx
je r-xdata
cmp [ rw-data ] edi
ja r-xdata
mov eax edi
or eax ebx
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0xffffffff
je r-xdata
add edi 0xffffffff
adc ebx 0xffffffff
call sub_40c502
xor [ esi ] al
movzx eax [ esi ]
push eax
call sub_40c522
inc esi
pop ebx
mov [ rw-data ] edi
mov [ rw-data ] edi
or eax 0xffffffff
jmp r-xdata
mov eax rw-data
push eax
push eax
mov ecx rw-data
call sub_401925
add [ rw-data ] esi
mov eax [ rw-data ]
mov [ rw-data ] eax
adc [ rw-data ] edi
call sub_403b2b
pop esi
pop edi
retn
sub_403e50
push ebp
mov ebp esp
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
add edi [ ebp + 0x8 ]
push 0x0
adc esi [ ebp + 0xc ]
mov ebx 0x2000
push ebx
push esi
push edi
call sub_401200
mov [ ebp + 0x8 ] eax
mov eax edi
sub eax [ ebp + 0x8 ]
mov ecx esi
sbb ecx edx
test esi esi
jg r-xdata
cmp eax [ rw-data ]
jne r-xdata
jl r-xdata
push 0x0
push ecx
mov ecx [ rw-data ]
push eax
call sub_4033f6
mov ecx [ rw-data ]
call sub_402f5d
mov ecx [ rw-data ]
push ebx
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_403460
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
test edx edx
jg r-xdata
cmp ecx [ rw-data ]
je r-xdata
push 0x3
test edi edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax ecx
cdq
sub [ rw-data ] eax
mov eax [ rw-data ]
sbb [ rw-data ] edx
add eax ecx
mov [ rw-data ] eax
jmp r-xdata
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
sub eax ecx
sub eax esi
cdq
add [ rw-data ] eax
adc [ rw-data ] edx
add ecx esi
mov [ rw-data ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
xor eax eax
push 0x33
jmp r-xdata
test eax eax
ja r-xdata
pop eax
jmp r-xdata
sub_403f57
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
push esi
push edi
xor edi edi
test eax eax
jne r-xdata
dec eax
mov [ ecx ] eax
mov [ ecx ] 0x2
jmp r-xdata
push 0xfffffffe
pop edi
cmp [ esi ] 0x0
jne r-xdata
mov esi [ esp + 0x14 ]
push 0x80
push esi
push rw-data
push 0x1
call j_sub_40a5e1
test al al
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x18
sub_403f99
push ebp
mov ebp esp
mov eax 0x1ca0
call sub_4012c0
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
call sub_4071db
push esi
lea eax [ ebp - 0xc00 ]
push eax
push [ ebp + 0xc ]
call sub_406e30
lea ecx [ ebp - 0x1ca0 ]
call sub_40355c
push 0x0
lea eax [ ebp - 0x1ca0 ]
push eax
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_4048c7
pop esi
test al al
jne r-xdata
lea ecx [ ebp - 0x108c ]
call sub_40c2ce
movzx ecx [ rw-data ]
movzx edx [ rw-data ]
shl ecx 0x10
or ecx edx
cmp eax ecx
sbb eax eax
inc eax
or eax 0xffffffff
jmp r-xdata
leave
retn 0x8
sub_404024
push ecx
push ebx
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
mov [ esp + 0x8 ] ebx
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x14 ]
sub eax ebx
push ebp
push edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
sub eax [ rw-data ]
cdq
sub eax [ rw-data ]
sbb edx [ rw-data ]
xor ecx ecx
add eax esi
adc edx ecx
add eax [ rw-data ]
adc edx [ rw-data ]
push edx
push eax
call sub_403e50
dec eax
dec eax
je r-xdata
pop esi
pop ebx
pop ecx
retn 0xc
mov ebp 0x400
cmp esi ebp
jb r-xdata
dec eax
jne r-xdata
push esi
mov edi rw-data
push edi
call sub_403c66
test eax eax
jne r-xdata
add esi 0xfffffc01
movzx ebx si
mov [ esp + 0x10 ] 0x1
lea esi [ ebp - 0x1 ]
mov eax [ esp + 0x10 ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
test [ esp + 0x20 ] 0x800
mov [ esi + rw-data ] 0x0
jne r-xdata
push 0x33
pop eax
jmp r-xdata
push esi
call sub_408a70
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_408a89
push ebp
push 0x0
push edi
call sub_4071db
cmp [ rw-data ] 0x2
jne r-xdata
movzx eax [ rw-data ]
push eax
mov eax [ rw-data ]
push [ eax + 0x1c ]
call sub_40ce0a
test al al
je r-xdata
pop edi
pop ebp
push esi
push eax
call sub_403c66
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax [ rw-data ]
cdq
sub eax [ rw-data ]
sbb edx [ rw-data ]
xor ecx ecx
add eax esi
adc edx ecx
add eax [ rw-data ]
adc edx [ rw-data ]
push edx
push eax
call sub_403e50
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push edi
call sub_40be49
push edi
push edi
call OemToCharA
push esi
push [ rw-data ]
call sub_407c0d
jmp r-xdata
mov eax [ rw-data ]
test [ eax + 0x28 ] 0x8
je r-xdata
push edi
call sub_40be5a
push edi
push rw-data
call sub_408e24
test bx bx
je r-xdata
cmp esi 0x8
jbe r-xdata
movzx esi bx
cmp [ rw-data ] 0x2e
jne r-xdata
mov eax rw-data
inc eax
mov cl [ eax ]
mov [ eax - 0x1 ] cl
test cl cl
jne r-xdata
sub_4041c7
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
movzx eax [ esi + 0x7 ]
push edi
xor ebx ebx
push ebx
cdq
mov edi 0x100
push edi
push edx
push eax
call sub_401030
mov ecx eax
movzx eax [ esi + 0x6 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x5 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x4 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x3 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x2 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x1 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi ]
mov edi edx
cdq
add ecx eax
adc edi edx
mov edx edi
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
retn 0x4
sub_4042b7
push ebp
mov ebp esp
mov eax 0x1ca0
call sub_4012c0
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
push rw-data
call sub_4071db
xor eax eax
mov [ ebp - 0xc00 ] ax
mov eax [ rw-data ]
shr eax 0xb
test al 0x1
je r-xdata
lea ecx [ ebp - 0x1ca0 ]
call sub_40355c
push 0x0
lea eax [ ebp - 0x1ca0 ]
push eax
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_4048c7
pop esi
test al al
je r-xdata
push esi
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_40c8d5
xor eax eax
mov [ ebp - 0x402 ] ax
push 0x3ff
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0xc00 ]
push eax
call sub_40c87f
mov [ ebp - 0x1 ] 0x0
push 0x0
push r--data
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_403687
xor ecx ecx
test eax eax
sete cl
mov [ rw-data ] eax
mov eax ecx
leave
retn
push [ ebp - 0x1098 ]
call sub_40359c
test al al
jne r-xdata
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_403655
test al al
jne r-xdata
lea eax [ ebp - 0xc00 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_403a3b
xor eax eax
inc eax
leave
retn
sub_4043be
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
push [ rw-data ]
call sub_40168a
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
xor eax eax
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
push esi
push 0x1
push [ esp + 0x14 ]
call sub_408bbb
cmp eax esi
je r-xdata
push 0x32
pop eax
jmp r-xdata
push rw-data
push rw-data
mov ecx rw-data
call sub_401940
mov [ rw-data ] 0x2
jmp r-xdata
pop esi
retn 0xc
sub_40445f
push esi
push [ esp + 0x8 ]
mov esi ecx
push esi
call sub_408e24
lea eax [ esi + 0x400 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ esi + 0xc00 ] 0x1
pop esi
retn 0x4
push 0x1000000
push eax
push [ esp + 0x10 ]
call sub_40c8ae
sub_404492
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0xa50
push ebx
push esi
push edi
call sub_4069f0
mov edi 0x1000000
test eax eax
je r-xdata
mov eax [ ebp + 0x74 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x78 ]
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x5e8 ]
push eax
push [ ebp + 0x78 ]
call sub_40c87f
cmp [ eax ] 0x0
je r-xdata
push edi
lea eax [ ebp - 0x9e8 ]
push eax
push [ ebp + 0x74 ]
call sub_40c8ae
cmp [ eax ] 0x0
je r-xdata
push [ ebp + 0x70 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x5e8 ]
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp + 0x70 ] eax
cmp eax ebx
jne r-xdata
push eax
lea eax [ ebp - 0x5e8 ]
push eax
call sub_408e24
jmp r-xdata
push [ ebp + 0x70 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x9e8 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x70 ] eax
cmp eax ebx
jne r-xdata
push eax
lea eax [ ebp - 0x9e8 ]
push eax
call sub_40ca32
jmp r-xdata
cmp [ ebp + 0x70 ] ebx
je r-xdata
mov [ ebp + 0x70 ] ebx
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ esi + 0x109c ] al
lea eax [ ebp - 0x5e8 ]
push eax
push esi
call sub_408e24
lea eax [ ebp - 0xac ]
push eax
push esi
call sub_406f9a
push eax
call sub_408e24
push edi
lea ebx [ esi + 0x400 ]
push ebx
push esi
call sub_40c8ae
push 0x1
push 0x0
push 0x0
push [ ebp - 0xbc ]
call sub_401030
mov ecx [ ebp - 0xb8 ]
xor edi edi
add eax ecx
mov [ esi + 0xc00 ] eax
mov eax [ ebp - 0xd8 ]
mov [ esi + 0xc08 ] eax
lea eax [ ebp + 0x58 ]
push eax
lea eax [ esi + 0xc80 ]
adc edx edi
push eax
mov [ esi + 0xc04 ] edx
call sub_408e24
mov eax [ ebp - 0xd4 ]
mov [ esi + 0x1080 ] eax
mov eax [ ebp - 0xd0 ]
mov [ esi + 0x1084 ] eax
mov eax [ ebp - 0xcc ]
mov [ esi + 0x1088 ] eax
mov eax [ ebp - 0xc8 ]
mov [ esi + 0x108c ] eax
mov eax [ ebp - 0xc4 ]
mov [ esi + 0x1090 ] eax
mov eax [ ebp - 0xc0 ]
mov [ esi + 0x1094 ] eax
lea eax [ ebp - 0xc4 ]
lea edi [ esi + 0xc14 ]
push eax
mov ecx edi
call sub_40c376
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ esi + 0xc38 ]
call sub_40c376
lea eax [ ebp - 0xcc ]
push eax
lea ecx [ esi + 0xc5c ]
call sub_40c376
mov ecx edi
call sub_40c2ce
push esi
mov [ esi + 0xc0c ] eax
call sub_40bef4
test al al
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
mov esi [ ebp + 0x7c ]
or ebx 0xffffffff
lea eax [ ebp - 0xd8 ]
push eax
cmp [ ebp + 0x70 ] ebx
jne r-xdata
cmp [ ebp + 0x70 ] ebx
je r-xdata
mov [ ebp + 0x70 ] ebx
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ esi + 0x109c ] al
lea eax [ ebp - 0x9e8 ]
push eax
lea ebx [ esi + 0x400 ]
push ebx
call sub_40ca32
lea eax [ ebp - 0x1bc ]
push eax
push ebx
call sub_406ff1
push eax
call sub_40ca32
push edi
push esi
push ebx
call sub_40c87f
push 0x1
push 0x0
push 0x0
push [ ebp - 0x1cc ]
call sub_401030
mov ecx [ ebp - 0x1c8 ]
xor ebx ebx
add eax ecx
mov [ esi + 0xc00 ] eax
mov eax [ ebp - 0x1e8 ]
mov [ esi + 0xc08 ] eax
push edi
lea eax [ esi + 0xc80 ]
push eax
lea eax [ ebp + 0x4c ]
adc edx ebx
push eax
mov [ esi + 0xc04 ] edx
call sub_40c87f
mov eax [ ebp - 0x1e4 ]
mov [ esi + 0x1080 ] eax
mov eax [ ebp - 0x1e0 ]
mov [ esi + 0x1084 ] eax
mov eax [ ebp - 0x1dc ]
mov [ esi + 0x1088 ] eax
mov eax [ ebp - 0x1d8 ]
mov [ esi + 0x108c ] eax
mov eax [ ebp - 0x1d4 ]
mov [ esi + 0x1090 ] eax
mov eax [ ebp - 0x1d0 ]
mov [ esi + 0x1094 ] eax
lea eax [ ebp - 0x1d4 ]
lea edi [ esi + 0xc14 ]
push eax
mov ecx edi
call sub_40c376
lea eax [ ebp - 0x1e4 ]
push eax
lea ecx [ esi + 0xc38 ]
call sub_40c376
lea eax [ ebp - 0x1dc ]
push eax
lea ecx [ esi + 0xc5c ]
call sub_40c376
mov ecx edi
call sub_40c2ce
lea edi [ esi + 0x400 ]
push edi
mov [ esi + 0xc0c ] eax
call sub_40bf12
test al al
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
mov esi [ ebp + 0x7c ]
or ebx 0xffffffff
lea eax [ ebp - 0x1e8 ]
push eax
cmp [ ebp + 0x70 ] ebx
jne r-xdata
and [ esi + 0x1098 ] 0x0
mov eax [ ebp + 0x70 ]
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn 0x10
xor eax eax
mov [ ebx ] ax
xor eax eax
cmp eax 0x3
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp eax 0x3
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x12
jmp r-xdata
mov [ esi + 0x109c ] al
jmp r-xdata
je r-xdata
sub_40482f
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
xor ebx ebx
jmp r-xdata
mov [ edi + 0x109c ] bl
cmp [ esi ] bl
jne r-xdata
push edi
lea eax [ esi + 0x400 ]
push eax
push esi
cmp [ esi + 0xc00 ] bl
je r-xdata
xor al al
jmp r-xdata
push [ esi + 0xc04 ]
call sub_404492
push 0xffffffff
call sub_404492
mov [ esi + 0xc04 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push [ edi + 0xc08 ]
mov [ edi + 0x1098 ] ebx
call sub_403584
mov [ edi + 0xc10 ] al
push edi
mov [ esi + 0xc00 ] bl
call sub_406f9a
mov ebp eax
push r--data
push ebp
call sub_408e96
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push r--data
push ebp
call sub_408e96
test eax eax
jne r-xdata
mov al 0x1
sub_4048c7
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov [ esi + 0x109c ] 0x0
call sub_406ddb
test al al
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xffffffff
call sub_404492
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
push eax
call [ FindClose@IAT ]
push [ esi + 0xc08 ]
and [ esi + 0x1098 ] 0x0
call sub_403584
mov [ esi + 0xc10 ] al
mov al 0x1
pop esi
pop ebp
retn 0x10
sub_404921
push esi
push 0x11e38
push 0x0
mov esi rw-data
push esi
call sub_408c87
and [ rw-data ] 0x0
mov eax esi
mov [ rw-data ] rw-data
mov [ rw-data ] 0x1
mov [ rw-data ] sub_403f46
mov [ rw-data ] sub_403f4b
mov [ rw-data ] sub_403f57
pop esi
retn
sub_404971
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
sub_4049bf
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x8
sub_404a02
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi - 0x4 ]
xor ebx ebx
push edi
test eax eax
je r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x10 ]
call [ GetClientRect@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0xc ] ecx
call [ CopyRect@IAT ]
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x14
mov [ eax + 0x4 ] ebx
mov ecx [ esi + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x18
sub_404ab5
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
mov edi ecx
call [ CLSIDFromString@IAT ]
lea esi [ edi + 0x18 ]
push esi
push r--data
push 0x5
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call [ CoCreateInstance@IAT ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov esi [ esi ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push esi
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404b3b
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
pop esi
leave
retn
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404bbb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0x1c ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x28 ] eax
mov ecx [ ecx + 0x18 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
push esi
push eax
call [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404c0b
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp [ ebp + 0x8 ] edi
je r-xdata
push edi
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffd
push eax
call [ ecx + 0x2c ]
push ebx
lea ebx [ esi + 0x1c ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffb
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xffffffff
push eax
call [ ecx + 0x2c ]
pop ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404c7b
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ esi + 0x1c ]
push edx
push [ esi + 0x14 ]
push 0x0
push esi
push 0x0
push 0xfffffffc
push eax
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_404cc7
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
mov eax [ esi + 0x18 ]
pop esi
retn
xor eax eax
pop esi
retn
sub_404d1c
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0xc ] 0x0
pop esi
retn
call sub_404b3b
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_404d66
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ GetTickCount@IAT ]
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call esi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
call esi
sub eax [ ebp - 0xc ]
cmp eax 0x2710
ja r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x28 ]
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x8
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
call [ eax + 0x48 ]
test eax eax
jl r-xdata
push ebx
push ebx
push ebx
lea eax [ ebp - 0x28 ]
push eax
call [ GetMessageA@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ DispatchMessageA@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
setge bl
sub_404e22
mov eax [ esp + 0x4 ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x3c
jne r-xdata
xor al al
inc eax
cmp [ eax + 0x1 ] 0x2f
jne r-xdata
push 0x2
pop ecx
mov al 0x1
jmp r-xdata
inc ecx
cmp ecx 0x14
jl r-xdata
retn 0x4
cmp [ ecx + eax ] 0x3e
je r-xdata
sub_404e52
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_408d31
imul eax eax 0x6
add eax 0x100
push eax
call sub_408a70
mov edi eax
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push ebx
push r--data
push edi
call sub_408e24
push edi
call sub_408d31
mov ebx eax
mov eax esi
cmp [ eax ] 0x0
je r-xdata
mov [ ebx + edi ] 0x0
inc ebx
push ebx
push edi
push [ ebp + 0x8 ]
call sub_408cb4
push edi
call sub_408a89
pop ebx
push 0x4
push r--data
push esi
call sub_408eea
test eax eax
je r-xdata
lea edi [ esi + 0x2 ]
cmp [ edi ] 0xd
je r-xdata
cmp esi [ ebp + 0x8 ]
jbe r-xdata
cmp [ esi + 0x3 ] 0xa
jne r-xdata
mov edi [ ebp - 0x4 ]
inc esi
jmp r-xdata
mov al [ esi ]
mov [ ebx + edi ] al
inc ebx
cmp [ esi ] 0x20
jne r-xdata
mov eax [ ebp - 0x4 ]
push r--data
add eax ebx
push eax
call sub_408e24
add ebx 0x4
mov esi edi
inc esi
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi - 0x1 ] 0x20
jne r-xdata
push r--data
lea eax [ ebx + edi ]
push eax
call sub_408e24
add ebx 0x6
jmp r-xdata
sub_404f1c
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
call esi
mov [ ebp - 0x4 ] eax
call esi
sub eax [ ebp - 0x4 ]
xor ebx ebx
mov edi 0x2710
jmp r-xdata
cmp eax edi
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push eax
call [ ecx + 0xe0 ]
cmp [ ebp - 0xc ] 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
push 0x3
pop eax
push ebx
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] ax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
push 0x2
push 0x3f
mov [ ebp - 0x14 ] 0x96
mov ecx [ eax ]
push eax
call [ ecx + 0xd8 ]
pop edi
pop esi
pop ebx
leave
retn
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
call esi
sub eax [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x38 ]
push eax
call [ DispatchMessageA@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ GetMessageA@IAT ]
sub_404ffd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
push r--data
push edi
call sub_4049e8
test eax eax
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
push r--data
push edi
call sub_4049e8
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
pop edi
push r--data
push edi
call sub_4049e8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push edi
call sub_4049e8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
push r--data
push edi
call sub_4049e8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
and [ esi ] 0x0
mov eax 0x80004002
lea ecx [ eax + 0xc ]
jmp r-xdata
sub_4050a8
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_404971
push esi
call sub_409008
pop ecx
xor eax eax
sub_4050c9
push ebp
lea ebp [ esp - 0x74 ]
sub esp 0xac
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
xor ebx ebx
mov [ ebp + 0x60 ] esi
cmp eax ebx
je r-xdata
pop esi
pop ebx
add ebp 0x74
leave
retn 0x4
push edi
push ebx
push ebx
push ebx
push ebx
push r--data
mov [ ebp + 0x64 ] ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
push [ ebp + 0x7c ]
mov ecx esi
call sub_404e22
push [ ebp + 0x7c ]
mov [ ebp + 0x6b ] al
call [ lstrlenA@IAT ]
mov esi eax
imul esi esi 0x6
add esi 0x100
push esi
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
pop edi
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x38 ] 0x94
call [ GetVersionExA@IAT ]
cmp [ ebp - 0x28 ] 0x1
jne r-xdata
mov [ ebp + 0x73 ] 0x1
movzx eax [ ebp - 0x2c ]
mov [ ebp + 0x73 ] bl
cmp eax 0x7ce
jb r-xdata
mov eax [ ebp + 0x7c ]
mov [ ebp + 0x6c ] eax
jmp r-xdata
push r--data
push edi
call sub_408f8f
push edi
call sub_408d31
push r--data
add eax edi
push edi
mov [ ebp + 0x5c ] eax
call sub_408f8f
push r--data
push edi
call sub_408e24
cmp [ ebp + 0x73 ] bl
je r-xdata
cmp [ eax ] 0x20
je r-xdata
inc [ ebp + 0x6c ]
mov eax [ ebp + 0x6c ]
push 0x6
push r--data
push [ ebp + 0x6c ]
call sub_408f6a
neg eax
sbb al al
inc al
mov [ ebp + 0x6a ] al
je r-xdata
mov eax [ ebp + 0x7c ]
mov eax [ ebp + 0x6c ]
add eax 0x6
jmp r-xdata
cmp [ ebp + 0x6b ] bl
jne r-xdata
push r--data
push edi
call sub_408f8f
push eax
push edi
call sub_408f8f
cmp [ ebp + 0x6a ] bl
jne r-xdata
cmp [ ebp + 0x73 ] bl
je r-xdata
mov ecx [ ebp + 0x60 ]
push edi
call sub_404e52
lea eax [ ebp + 0x64 ]
push eax
push 0x1
push edi
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
jl r-xdata
lea eax [ esi + esi ]
push eax
call sub_408a70
mov [ ebp + 0x6c ] eax
cmp eax ebx
je r-xdata
push [ ebp + 0x64 ]
mov esi [ ebp + 0x60 ]
push [ esi + 0xc ]
call sub_404d66
mov [ esi + 0x15 ] al
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push esi
push eax
push 0xffffffff
push edi
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
push ebx
push ebx
push esi
test eax eax
lea eax [ edi + 0x3 ]
push eax
push 0xffffffff
push [ ebp + 0x6c ]
setne [ ebp + 0x7f ]
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x6c ]
call sub_408a89
cmp [ ebp + 0x7f ] bl
je r-xdata
mov [ ebp + 0x7f ] bl
mov eax [ ebp + 0x5c ]
mov [ eax ] 0x5f
mov [ edi ] 0xef
mov [ edi + 0x1 ] 0xbb
mov [ edi + 0x2 ] 0xbf
jmp r-xdata
sub_405282
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
push esi
mov edi ecx
call sub_408d31
inc eax
push eax
call sub_408a70
mov ebp eax
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push esi
mov ecx edi
call sub_404e22
mov [ esp + 0x10 ] al
mov al [ esi ]
mov edi ebp
test al al
je r-xdata
mov eax ebp
push ebx
jmp r-xdata
test al al
jne r-xdata
cmp al 0x3c
je r-xdata
push 0x4
push r--data
push esi
call sub_408f6a
mov ebx eax
neg ebx
sbb bl bl
inc bl
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov [ edi ] 0xd
inc edi
mov [ edi ] 0xa
inc edi
test bl bl
je r-xdata
push 0x4
push r--data
push esi
call sub_408f6a
test eax eax
jne r-xdata
xor bl bl
cmp [ esp + 0x14 ] bl
je r-xdata
cmp al 0xd
je r-xdata
push 0x7
push r--data
push esi
mov [ edi ] 0x0
call sub_408f6a
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ edi ] 0xa
inc edi
mov al [ esi ]
test al al
je r-xdata
cmp al 0x26
jne r-xdata
cmp edi ebp
je r-xdata
cmp al 0xa
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp [ esi ] al
je r-xdata
cmp al 0x20
jne r-xdata
xor edx edx
mov [ edi ] 0x20
jmp r-xdata
cmp [ edi - 0x1 ] 0x20
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x3e
jne r-xdata
pop ebx
push 0x8
push r--data
push esi
call sub_408f6a
inc esi
test eax eax
je r-xdata
mov [ edi ] al
cmp edi ebp
je r-xdata
test bl bl
jne r-xdata
cmp cl 0x3b
jne r-xdata
inc edi
inc esi
inc esi
inc esi
mov al [ esi ]
test al al
jne r-xdata
add esi 0x7
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ edi - 0x1 ] al
je r-xdata
mov al [ esi ]
inc edx
cmp edx 0x14
jl r-xdata
lea esi [ eax + 0x1 ]
mov bl 0x1
jmp r-xdata
lea eax [ edx + esi ]
mov cl [ eax ]
test cl cl
je r-xdata
sub_4053f8
push esi
mov esi ecx
xor eax eax
push 0x10
push eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x1c ]
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] 0x1
call sub_408c87
mov eax esi
pop esi
retn
sub_405435
push esi
mov esi ecx
call sub_4069f0
test eax eax
jle r-xdata
push edi
mov edi [ esp + 0xc ]
push 0x2c
mov [ esi + 0x4 ] edi
call sub_409015
pop ecx
test eax eax
je r-xdata
cmp eax 0x5
jl r-xdata
xor eax eax
mov ecx eax
call sub_4053f8
jmp r-xdata
pop esi
retn 0x4
pop edi
mov [ eax + 0x14 ] edi
mov ecx [ esi + 0x8 ]
push r--data
call sub_404ab5
mov ecx [ esi + 0x8 ]
push 0x1
call sub_404c0b
mov ecx [ esi + 0x8 ]
push 0x1
call sub_404c7b
mov ecx [ esi + 0x8 ]
call sub_404cc7
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push [ esi + 0x10 ]
mov ecx esi
call sub_4050c9
mov eax [ edi ]
push ebx
lea ebx [ esi + 0xc ]
push ebx
push r--data
push edi
call [ eax ]
test eax eax
jl r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
pop ebx
mov eax [ ebx ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0xe8 ]
sub_4054d8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
je r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
push esi
mov ecx eax
call sub_405435
dec eax
je r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov ecx eax
call sub_404d1c
jmp r-xdata
sub eax 0x3
je r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov ecx edi
shr ecx 0x10
push ecx
movzx ecx di
push ecx
mov ecx eax
call sub_404d4b
jmp r-xdata
sub eax 0x7c
jne r-xdata
push [ edi ]
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_405556
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push 0x7f00
push edi
mov ebx ecx
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x828
mov [ ebp - 0x28 ] sub_4054d8
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] edi
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] edi
call [ RegisterClassExA@IAT ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn 0x4
sub_4055bd
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
push edi
jne r-xdata
mov ebx [ ShowWindow@IAT ]
push 0x0
push [ ebp + 0xc ]
mov [ esi + 0x15 ] 0x0
call ebx
push [ ebp + 0x8 ]
mov ecx esi
call sub_405556
mov eax [ ebp + 0x10 ]
mov [ esi + 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call [ GetWindowRect@IAT ]
mov edi [ GetParent@IAT ]
push 0x2
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call edi
push eax
push 0x0
call [ MapWindowPoints@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x0
call [ OleInitialize@IAT ]
call [ InitCommonControls@IAT ]
mov [ esi + 0x14 ] 0x1
push esi
push [ esi ]
push 0x0
push [ ebp + 0xc ]
call edi
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
xor edi edi
push eax
mov eax [ ebp - 0x10 ]
sub ecx eax
dec ecx
dec ecx
push ecx
push [ ebp - 0xc ]
inc eax
push eax
push 0x40000000
push edi
push r--data
push edi
call [ CreateWindowExA@IAT ]
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
push eax
call [ DestroyWindow@IAT ]
cmp [ esi + 0x15 ] 0x0
je r-xdata
push 0x5
push eax
call ebx
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
cmp [ esi + 0x18 ] 0x64
jbe r-xdata
push 0x5
push [ ebp + 0xc ]
call ebx
push [ ebp + 0x10 ]
call sub_408d31
imul eax eax 0x6
add eax 0x100
push eax
call sub_408a70
push [ ebp + 0x10 ]
mov ebx eax
push ebx
call sub_408e24
push ebx
mov ecx esi
call sub_404e22
test al al
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_404f1c
jmp r-xdata
push ebx
mov ecx esi
call sub_405282
push ebx
mov esi eax
call sub_408a89
cmp esi edi
je r-xdata
push ebx
mov ecx esi
call sub_404e52
push esi
push [ ebp + 0xc ]
call [ SetWindowTextA@IAT ]
push esi
call sub_408a89
sub_40570e
sub esp 0x1c
mov eax [ rw-data ]
and [ esp + 0xc ] 0x0
and [ esp + 0x8 ] 0x0
mov [ esp ] eax
mov eax [ esp + 0x28 ]
movzx eax [ eax * 2 + r--data ]
push ebx
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x30 ]
movzx eax [ eax * 2 + r--data ]
push ebp
mov ebp [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
mov [ esp + 0x28 ] eax
jmp r-xdata
cmp esi [ esp + 0x38 ]
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x30 ]
jmp r-xdata
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
and eax ebp
lea edi [ ecx + eax * 8 ]
movzx ecx [ edi + 0x1 ]
movzx ebx [ edi ]
shr ebp cl
sub esi ecx
mov [ esp + 0x14 ] ebp
cmp ebx 0x20
jne r-xdata
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x1f
jb r-xdata
mov ecx [ esp + 0x10 ]
inc [ esp + 0x10 ]
cmp [ esp + 0x10 ] 0x10000
mov al [ edi + 0x4 ]
mov [ ecx + rw-data ] al
jne r-xdata
cmp esi ebx
jb r-xdata
je r-xdata
cmp [ esp + 0x18 ] 0x0
mov ebp [ esp + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov [ rw-data ] ebp
mov [ rw-data ] esi
cmp ebx 0x63
je r-xdata
push 0x0
push 0x10000
push rw-data
call sub_4043be
push 0x10000
push rw-data
call sub_401e44
jmp r-xdata
call sub_403d36
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
movzx ecx [ edi + 0x4 ]
and eax ebp
add eax ecx
mov ecx ebx
shr ebp cl
mov [ esp + 0x20 ] eax
sub esi ebx
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
and ebx 0x1f
jmp r-xdata
mov eax [ esp + 0x1c ]
and [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp esi [ esp + 0x3c ]
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
cmp esi ebx
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x34 ]
jmp r-xdata
call sub_403d36
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
and eax ebp
lea edi [ ecx + eax * 8 ]
movzx ecx [ edi + 0x1 ]
movzx ebx [ edi ]
shr ebp cl
sub esi ecx
mov [ esp + 0x14 ] ebp
cmp ebx 0x20
jae r-xdata
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x63
je r-xdata
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
and ebx 0x1f
jmp r-xdata
cmp esi ebx
jb r-xdata
cmp esi ebx
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
and eax [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
sub ebp eax
movzx eax [ edi + 0x4 ]
mov ecx ebx
shr [ esp + 0x14 ] cl
sub ebp eax
sub esi ebx
call sub_403d36
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
mov [ esp + 0x14 ] ebp
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
mov edi 0x10000
sub edi eax
cmp edi [ esp + 0x20 ]
jbe r-xdata
mov eax ecx
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp eax 0xffffffff
je r-xdata
sub [ esp + 0x20 ] edi
mov eax ecx
sub eax ebp
cmp eax edi
jb r-xdata
mov edi [ esp + 0x20 ]
cmp eax 0xffffffff
je r-xdata
mov al [ ebp + rw-data ]
mov [ ecx + rw-data ] al
inc ecx
inc ebp
dec edi
jne r-xdata
push edi
lea eax [ ebp + rw-data ]
push eax
mov eax [ esp + 0x18 ]
lea eax [ eax + rw-data ]
push eax
call sub_408cb4
add [ esp + 0x10 ] edi
add ebp edi
jmp r-xdata
mov [ esp + 0x10 ] ecx
cmp [ esp + 0x10 ] 0x10000
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
and ebp 0xffff
mov eax ebp
cmp ebp ecx
ja r-xdata
push 0x0
push 0x10000
push rw-data
call sub_4043be
push 0x10000
push rw-data
call sub_401e44
jmp r-xdata
and [ esp + 0x10 ] eax
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
sub_405b34
sub esp 0xc
and [ esp + 0x8 ] 0x0
and [ esp + 0x4 ] 0x0
push ebx
mov ebx [ rw-data ]
push ebp
mov ebp [ rw-data ]
push esi
mov esi [ rw-data ]
mov ecx esi
push edi
and ecx 0x7
push 0x10
shr ebx cl
sub esi ecx
pop edi
jmp r-xdata
cmp esi edi
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
movzx eax bx
shr ebx 0x10
mov [ esp + 0x10 ] eax
sub esi edi
jmp r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp esi edi
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov eax ebx
not eax
and eax 0xffff
cmp [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
shr ebx 0x10
sub esi edi
cmp [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov edi 0x10000
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
jmp r-xdata
cmp esi 0x8
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov [ ebp + rw-data ] bl
inc ebp
cmp ebp edi
jne r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
shr ebx 0x8
sub esi 0x8
cmp [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ esp + 0x10 ]
cmp [ esp + 0x14 ] 0x0
jne r-xdata
push 0x0
push edi
push rw-data
call sub_4043be
push edi
push rw-data
call sub_401e44
jmp r-xdata
mov eax [ esp + 0x18 ]
xor ebp ebp
mov [ esp + 0x18 ] eax
cmp eax ebp
jne r-xdata
sub_405cfc
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn 0x4
push esi
mov esi [ eax - 0x4 ]
sub eax 0x8
push eax
call sub_408a89
mov eax esi
test esi esi
jne r-xdata
pop esi
sub_405d4d
push ebp
lea ebp [ esp - 0x5c ]
sub esp 0x5c8
push ebx
push esi
push edi
mov edi [ ebp + 0x68 ]
push 0x10
pop esi
cmp edi 0x100
jbe r-xdata
mov [ ebp + 0x44 ] esi
mov eax [ ebp + 0x64 ]
mov eax [ eax + 0x400 ]
mov [ ebp + 0x44 ] eax
jmp r-xdata
mov eax [ ecx ]
lea eax [ ebp + eax * 4 - 0x24 ]
inc [ eax ]
add ecx 0x4
dec edx
jne r-xdata
cmp [ ebp - 0x24 ] edi
jne r-xdata
push 0x44
xor ebx ebx
push ebx
lea eax [ ebp - 0x24 ]
push eax
call sub_408c87
mov ecx [ ebp + 0x64 ]
mov edx edi
xor edi edi
inc edi
mov ecx edi
mov eax [ ebp + 0x78 ]
mov [ eax ] ebx
mov eax [ ebp + 0x7c ]
mov [ eax ] ebx
jmp r-xdata
mov edx [ ebp + 0x7c ]
mov [ ebp + 0x58 ] ecx
cmp [ edx ] ecx
jae r-xdata
inc ecx
cmp ecx esi
jbe r-xdata
xor eax eax
mov eax esi
mov [ edx ] ecx
cmp [ ebp + ecx * 4 - 0x24 ] ebx
jne r-xdata
mov [ ebp + 0x40 ] eax
cmp [ edx ] eax
jbe r-xdata
dec eax
jne r-xdata
shl edi cl
jmp r-xdata
mov [ edx ] eax
cmp [ ebp + eax * 4 - 0x24 ] ebx
jne r-xdata
cmp ecx eax
jb r-xdata
sub edi [ ebp + ecx * 4 - 0x24 ]
js r-xdata
mov esi eax
shl esi 0x2
lea ecx [ ebp + esi - 0x24 ]
mov edx [ ecx ]
sub edi edx
mov [ ebp + 0x28 ] edi
js r-xdata
push 0x2
inc ecx
add edi edi
add edx edi
mov [ ecx ] edx
xor ecx ecx
dec eax
mov [ ebp - 0x64 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
add ebp 0x5c
leave
retn 0x1c
push 0x480
push ebx
lea eax [ ebp - 0x56c ]
push eax
call sub_408c87
mov ebx [ ebp + 0x64 ]
xor ecx ecx
xor edx edx
xor edx edx
inc edx
cmp edx [ ebp + 0x68 ]
jb r-xdata
lea eax [ ebp + eax * 4 - 0x68 ]
mov ecx [ eax ]
mov [ ebp + ecx * 4 - 0x56c ] edx
inc ecx
mov [ eax ] ecx
xor ecx ecx
add ecx [ ebp + edx - 0x20 ]
add edx 0x4
dec eax
mov [ ebp + edx - 0x64 ] ecx
jne r-xdata
mov eax [ ebx ]
add ebx 0x4
cmp eax ecx
je r-xdata
mov eax [ ebp + esi - 0x68 ]
mov [ ebp + 0x68 ] eax
lea eax [ ebp - 0x56c ]
mov [ ebp + 0x50 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0xac ] ecx
mov [ ebp - 0xec ] ecx
mov [ ebp + 0x24 ] ecx
mov [ ebp + 0x2c ] ecx
mov ecx [ ebp + 0x58 ]
mov [ ebp + 0x64 ] eax
or eax 0xffffffff
xor ebx ebx
cmp ecx [ ebp + 0x40 ]
mov [ ebp + 0x54 ] eax
jg r-xdata
mov eax [ ebp - 0xa8 ]
mov ecx [ ebp + 0x7c ]
mov [ ecx ] eax
test edi edi
je r-xdata
lea edx [ ecx - 0x1 ]
lea ecx [ ebp + ecx * 4 - 0x24 ]
mov [ ebp + 0x34 ] edx
mov [ ebp + 0x30 ] ecx
xor eax eax
inc eax
cmp [ ebp + 0x40 ] eax
jne r-xdata
inc [ ebp + 0x58 ]
mov ecx [ ebp + 0x30 ]
mov edx [ ebp + 0x58 ]
add ecx 0x4
inc [ ebp + 0x34 ]
cmp edx [ ebp + 0x40 ]
mov [ ebp + 0x30 ] ecx
jle r-xdata
mov eax [ ebp + eax * 4 - 0xa8 ]
dec [ ebp + 0x3c ]
add eax ebx
cmp [ ebp + 0x58 ] eax
jle r-xdata
mov ecx [ ecx ]
mov [ ebp + 0x3c ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x58 ]
mov al cl
sub al bl
mov [ ebp + 0x49 ] al
mov eax [ ebp + 0x68 ]
lea eax [ ebp + eax * 4 - 0x56c ]
cmp [ ebp + 0x64 ] eax
jb r-xdata
lea ecx [ ebp - 0xec ]
sub ecx 0x4
mov [ ebp + 0x20 ] ecx
mov eax [ ebp + 0x64 ]
mov eax [ eax ]
cmp eax [ ebp + 0x6c ]
jae r-xdata
mov [ ebp + 0x48 ] 0x63
jmp r-xdata
mov ebx [ ebp + 0x58 ]
mov esi [ ebp + 0x3c ]
xor eax eax
sub ebx edi
inc eax
mov ecx ebx
shl eax cl
lea ecx [ esi + 0x1 ]
cmp eax ecx
jbe r-xdata
mov edx eax
sub eax [ ebp + 0x6c ]
mov edx [ ebp + 0x74 ]
mov dl [ eax + edx ]
mov [ ebp + 0x48 ] dl
mov edx [ ebp + 0x70 ]
mov ax [ edx + eax * 2 ]
cmp eax 0x100
setb al
add al 0x1f
mov [ ebp + 0x48 ] al
mov eax [ ebp + 0x64 ]
mov ax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x50 ]
xor edx edx
sub ecx ebx
inc edx
shl edx cl
mov ecx ebx
shr eax cl
cmp eax [ ebp + 0x2c ]
jae r-xdata
lea eax [ edi + ebx ]
cmp eax [ ebp + 0x44 ]
jbe r-xdata
or ecx 0xffffffff
sub ecx esi
mov esi [ ebp + 0x30 ]
add eax ecx
jmp r-xdata
mov ecx [ ebp + 0x34 ]
mov edx [ ebp + 0x50 ]
xor eax eax
inc eax
shl eax cl
jmp r-xdata
mov ecx [ ebp + 0x24 ]
mov esi edx
shl esi 0x3
lea ecx [ ecx + eax * 8 ]
add [ ebp + 0x64 ] 0x4
mov [ ebp + 0x4c ] ax
mov esi [ ebp + 0x54 ]
xor eax eax
inc eax
mov ecx ebx
shl eax cl
shl esi 0x2
lea edi [ ebp + esi - 0xa8 ]
mov [ edi ] ebx
mov [ ebp + 0x2c ] eax
lea eax [ eax * 8 + 0x8 ]
push eax
call sub_408a70
test eax eax
je r-xdata
cmp edi [ ebp + 0x44 ]
jae r-xdata
inc ebx
cmp ebx edx
jb r-xdata
test edx eax
jne r-xdata
mov edi [ ebp + 0x48 ]
mov [ ecx ] edi
mov edi [ ebp + 0x4c ]
mov [ ecx + 0x4 ] edi
add eax edx
add ecx esi
cmp eax [ ebp + 0x2c ]
jb r-xdata
mov edi [ ebp + 0x28 ]
cmp [ ebp + 0x54 ] 0x0
je r-xdata
mov edx [ ebp + 0x78 ]
lea ecx [ eax + 0x8 ]
add eax 0x4
mov [ edx ] ecx
and [ eax ] 0x0
cmp [ ebp + 0x54 ] 0x0
mov [ ebp + 0x78 ] eax
mov [ ebp + 0x24 ] ecx
mov [ ebp + esi - 0xec ] ecx
je r-xdata
mov ebx [ ebp + 0x44 ]
sub ebx edi
add esi 0x4
mov ecx [ esi ]
add eax eax
cmp eax ecx
jbe r-xdata
xor edx eax
shr eax 0x1
xor esi esi
inc esi
mov ecx ebx
shl esi cl
xor edx eax
mov eax [ ebp + 0x54 ]
mov [ ebp + 0x50 ] edx
dec esi
and esi edx
cmp esi [ ebp + eax * 4 - 0x68 ]
je r-xdata
push 0x3
jmp r-xdata
push [ ebp - 0xec ]
call sub_405cfc
mov eax [ edi ]
mov ecx [ ebp + 0x38 ]
add eax ecx
cmp [ ebp + 0x58 ] eax
jg r-xdata
mov eax [ ebp + 0x50 ]
mov [ ebp + esi - 0x68 ] eax
lea edx [ ebp + esi - 0xac ]
mov al [ edx ]
mov [ ebp + 0x49 ] al
add bl 0x20
xor eax eax
mov [ ebp + 0x48 ] bl
mov ebx ecx
mov ecx [ ebp + 0x38 ]
inc eax
shl eax cl
sub ecx [ edx ]
mov [ ebp + 0x4c ] ebx
dec eax
and eax [ ebp + 0x50 ]
shr eax cl
mov ecx [ ebp + 0x20 ]
mov esi [ esi + ecx ]
mov ecx [ ebp + 0x48 ]
mov [ esi + eax * 8 ] ecx
mov [ esi + eax * 8 + 0x4 ] ebx
sub eax ecx
cmp [ ebp + 0x3c ] 0x0
jne r-xdata
sub ebx [ ebp + eax * 4 - 0xac ]
dec eax
xor esi esi
inc esi
mov ecx ebx
shl esi cl
dec esi
and esi edx
cmp esi [ ebp + eax * 4 - 0x68 ]
jne r-xdata
pop eax
jmp r-xdata
mov edx [ ebp + 0x40 ]
inc [ ebp + 0x54 ]
mov edi eax
mov eax [ ebp + 0x7c ]
mov eax [ eax ]
sub edx edi
mov [ ebp + 0x38 ] edi
cmp edx eax
jbe r-xdata
mov edi [ ebp + 0x28 ]
mov ebx ecx
mov [ ebp + 0x54 ] eax
sub_406115
push ebp
mov ebp esp
sub esp 0x480
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_40570e
push 0x8
pop eax
push 0x70
mov ecx 0x90
lea edi [ ebp - 0x480 ]
[ edi ]
pop ecx
push 0x9
pop eax
push 0x18
lea edi [ ebp - 0x240 ]
[ edi ]
pop ecx
push 0x7
pop edx
push 0x8
mov eax edx
lea edi [ ebp - 0x80 ]
[ edi ]
pop ecx
push ecx
pop eax
push rw-data
push rw-data
push [ rw-data ]
lea edi [ ebp - 0x20 ]
push [ rw-data ]
[ edi ]
push 0x101
push 0x120
lea eax [ ebp - 0x480 ]
push eax
mov [ rw-data ] edx
call sub_405d4d
cmp eax ebx
je r-xdata
push 0x20
pop ecx
push 0x5
pop eax
push rw-data
push rw-data
push [ rw-data ]
lea edi [ ebp - 0x480 ]
push r--data
push ebx
[ edi ]
mov [ rw-data ] eax
push 0x20
lea eax [ ebp - 0x480 ]
push eax
call sub_405d4d
mov esi eax
cmp esi 0x1
jle r-xdata
mov [ rw-data ] ebx
jmp r-xdata
push [ rw-data ]
call sub_405cfc
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40621d
push ebp
mov ebp esp
sub esp 0x524
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
push 0x500
push 0x0
lea eax [ ebp - 0x524 ]
push eax
call sub_408c87
mov ebx [ rw-data ]
mov esi [ rw-data ]
push 0x5
pop edi
jmp r-xdata
cmp esi edi
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov eax ebx
and eax 0x1f
add eax 0x101
shr ebx 0x5
mov [ ebp - 0x1c ] eax
sub esi edi
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp esi edi
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov edi ebx
and edi 0x1f
inc edi
shr ebx 0x5
mov [ ebp - 0x20 ] edi
sub esi 0x5
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
mov [ ebp - 0x4 ] ebx
cmp esi 0x4
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov ebx [ ebp - 0x4 ]
shr [ ebp - 0x4 ] 0x4
and ebx 0xf
add ebx 0x4
sub esi 0x4
cmp [ ebp - 0x1c ] 0x120
ja r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
xor eax eax
inc eax
cmp edi 0x20
ja r-xdata
cmp eax 0xffffffff
je r-xdata
xor edi edi
test ebx ebx
jbe r-xdata
mov eax [ edi * 4 + r--data ]
and [ ebp + eax * 4 - 0x524 ] 0x0
inc edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
xor ebx ebx
push ebx
push ebx
push 0x13
push 0x13
lea eax [ ebp - 0x524 ]
push eax
mov [ ebp - 0xc ] 0x7
call sub_405d4d
mov ecx [ ebp - 0xc ]
mov edi eax
cmp ecx ebx
jne r-xdata
cmp edi 0x13
jb r-xdata
jmp r-xdata
cmp edi ebx
je r-xdata
xor edi edi
inc edi
cmp esi 0x3
jb r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
movzx ecx [ ecx * 2 + r--data ]
add eax edx
xor edi edi
mov [ ebp - 0x18 ] ebx
cmp eax ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] ecx
jbe r-xdata
cmp edi 0x1
jne r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
push [ ebp - 0x10 ]
call sub_405cfc
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ rw-data ]
mov [ rw-data ] esi
push [ rw-data ]
mov esi 0x101
push esi
push [ ebp - 0x1c ]
lea eax [ ebp - 0x524 ]
push eax
mov [ rw-data ] ebx
mov [ ebp - 0xc ] 0x9
call sub_405d4d
cmp [ ebp - 0xc ] 0x0
mov edi eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax edi
jmp r-xdata
push [ ebp - 0x10 ]
call sub_405cfc
call sub_403d36
jg r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ edi * 4 + r--data ]
shr [ ebp - 0x4 ] 0x3
and eax 0x7
sub esi 0x3
inc edi
mov [ ebp + ecx * 4 - 0x524 ] eax
cmp edi ebx
jb r-xdata
test edi edi
jne r-xdata
xor edi edi
inc edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or [ ebp - 0x4 ] eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
jmp r-xdata
mov ebx [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
lea eax [ ebp + ebx * 4 - 0x524 ]
push r--data
push edi
push [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x6
push eax
call sub_405d4d
mov edi eax
cmp edi 0x1
jne r-xdata
cmp esi [ ebp - 0xc ]
jb r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edi edi
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
test edi edi
je r-xdata
cmp ebx esi
jbe r-xdata
call sub_403d36
jg r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
and eax ebx
lea eax [ ecx + eax * 8 ]
movzx ecx [ eax + 0x1 ]
mov [ ebp - 0x4 ] eax
movzx eax [ eax + 0x4 ]
shr ebx cl
sub esi ecx
cmp eax 0x10
jae r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
call sub_40570e
push [ ebp - 0x10 ]
mov esi eax
call sub_405cfc
push [ ebp - 0x4 ]
call sub_405cfc
mov eax esi
jmp r-xdata
cmp edi 0x1
jne r-xdata
xor edi edi
inc edi
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
je r-xdata
mov [ ebp + edi * 4 - 0x524 ] eax
mov [ ebp - 0x18 ] eax
inc edi
jmp r-xdata
push [ ebp - 0x4 ]
call sub_405cfc
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp esi 0x2
jb r-xdata
cmp eax 0x11
jne r-xdata
cmp edi [ ebp - 0x14 ]
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
cmp esi 0x7
jb r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov ecx ebx
and ecx 0x3
add ecx 0x3
shr ebx 0x2
dec esi
lea edx [ edi + ecx ]
dec esi
cmp edx [ ebp - 0x14 ]
ja r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
cmp esi 0x3
jb r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
test ecx ecx
je r-xdata
call sub_403d36
jg r-xdata
mov ecx ebx
and ecx 0x7f
add ecx 0xb
shr ebx 0x7
sub esi 0x7
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x18 ]
lea edi [ ebp + edi * 4 - 0x524 ]
[ edi ]
mov edi edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
test ecx ecx
je r-xdata
call sub_403d36
jg r-xdata
mov ecx ebx
and ecx 0x7
add ecx 0x3
shr ebx 0x3
sub esi 0x3
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x18 ] 0x0
lea edi [ ebp + edi * 4 - 0x524 ]
xor eax eax
[ edi ]
mov edi edx
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
lea edx [ edi + ecx ]
cmp edx [ ebp - 0x14 ]
ja r-xdata
cmp eax 0xffffffff
je r-xdata
sub_40675f
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
xor ebx ebx
jmp r-xdata
cmp esi 0x1
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov ecx [ esp + 0x10 ]
mov eax edi
and eax 0x1
shr edi 0x1
mov [ ecx ] eax
dec esi
jmp r-xdata
xor ebx ebx
inc ebx
mov ecx esi
shl eax cl
or edi eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
jb r-xdata
cmp esi 0x2
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_403d36
jg r-xdata
mov eax edi
and eax 0x3
test ebx ebx
jne r-xdata
xor ebx ebx
inc ebx
mov ecx esi
shl eax cl
or edi eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
push 0x2
pop eax
shr edi 0x2
add esi 0xfffffffe
mov [ rw-data ] edi
mov [ rw-data ] esi
cmp eax 0x2
jne r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
call sub_40621d
jmp r-xdata
cmp eax 0x1
jne r-xdata
call sub_405b34
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
call sub_406115
jmp r-xdata
sub_406858
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ rw-data ] esi
jne r-xdata
mov [ rw-data ] eax
xor eax eax
inc eax
jmp r-xdata
push [ rw-data ]
mov eax [ rw-data ]
push [ rw-data ]
mov ebx [ eax ]
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx edi
sub ecx [ rw-data ]
sbb edx [ rw-data ]
add ebx ecx
adc eax edx
push eax
push ebx
push [ ebp - 0x8 ]
push edi
push edx
push ecx
call sub_409c6c
cmp [ ebp - 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_40675f
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
push esi
push [ rw-data ]
push rw-data
call sub_4043be
push [ rw-data ]
push rw-data
call sub_401e44
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
sub_4069f0
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x94
cmp eax 0xffffffff
jne r-xdata
dec eax
dec eax
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
leave
retn
lea eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x94 ] 0x94
call [ GetVersionExA@IAT ]
mov eax [ ebp - 0x84 ]
mov ecx [ ebp - 0x90 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
sub_406a98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
test bl bl
sete al
cmp al 0x2a
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp al 0x3f
je r-xdata
cmp al 0x2e
jne r-xdata
mov al 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp al bl
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea ebx [ edi + 0x1 ]
cmp [ ebx ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor al al
jmp r-xdata
inc esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp al 0x2e
jne r-xdata
push [ ebp + 0x10 ]
push esi
push edi
call sub_406a98
inc esi
test al al
jne r-xdata
jmp r-xdata
push 0x2e
push esi
call sub_408d5a
cmp [ ebx ] 0x0
mov esi eax
jne r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
push eax
call sub_406a41
push [ ebp + 0x10 ]
mov bl al
movzx eax [ edi ]
push eax
call sub_406a41
inc edi
test al al
je r-xdata
test bl bl
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp bl 0x5c
je r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
push r--data
push edi
mov [ ebp + 0xc ] esi
call sub_408dc3
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp bl al
je r-xdata
push 0x2e
inc esi
push esi
call sub_408d5a
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push esi
push ebx
call sub_406a57
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_406b9a
push ebp
mov ebp esp
sub esp 0x800
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
shr eax 0x1f
and al 0x1
and edi 0xffff
mov [ ebp + 0x10 ] al
je r-xdata
push ebx
call sub_406f9a
push [ ebp + 0xc ]
mov ebx eax
call sub_406f9a
push 0x6
mov esi eax
push esi
push r--data
call sub_40be8c
test eax eax
je r-xdata
push ebx
call sub_408d31
mov esi eax
cmp edi 0x2
je r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x10 ]
push esi
cmp edi 0x2
jne r-xdata
mov esi 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
push ebx
call sub_40717e
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_40717e
cmp edi 0x2
je r-xdata
cmp edi 0x3
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push ebx
call sub_406a98
push ebx
call sub_406a57
neg eax
sbb eax eax
inc eax
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_406a57
test eax eax
jne r-xdata
cmp edi 0x3
jne r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_406a76
test eax eax
jne r-xdata
cmp edi 0x4
je r-xdata
mov eax [ ebp + 0xc ]
mov al [ esi + eax ]
cmp al 0x5c
je r-xdata
push 0x0
lea eax [ ebp - 0x400 ]
push eax
call sub_406ddb
test al al
je r-xdata
cmp edi 0x5
jne r-xdata
mov al 0x1
jmp r-xdata
cmp al 0x2f
je r-xdata
cmp edi 0x4
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
test al al
je r-xdata
cmp [ ebp - 0x400 ] 0x0
je r-xdata
push 0x0
push ebx
call sub_406ddb
test al al
jne r-xdata
cmp edi 0x1
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x400 ]
push eax
call sub_408d31
push eax
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_406a76
push [ ebp + 0x10 ]
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_406a57
jmp r-xdata
test eax eax
jne r-xdata
sub_406d1f
push esi
push edi
push 0x3298
xor edi edi
mov esi ecx
push edi
push esi
call sub_408c87
mov eax 0x7fffffff
mov [ esi + 0x28a4 ] edi
mov [ esi + 0x289c ] edi
mov [ esi + 0x28f0 ] edi
mov [ esi + 0x28e4 ] edi
pop edi
mov [ esi + 0xc ] __pe_WINRAR_export_address_table
mov [ esi + 0x28a8 ] 0x3
mov [ esi + 0x2956 ] 0x1
mov [ esi + 0x2e84 ] 0x4
mov [ esi + 0x29a8 ] eax
mov [ esi + 0x29ac ] eax
mov [ esi + 0x29b0 ] eax
mov [ esi + 0x29b4 ] eax
pop esi
retn
sub_406da7
push esi
mov esi ecx
xor ecx ecx
lea eax [ esi + 0x28d8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea ecx [ esi + 0x295c ]
call sub_40c370
lea ecx [ esi + 0x2980 ]
call sub_40c370
mov ecx esi
call sub_406d1f
mov eax esi
pop esi
retn
sub_406ddb
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
push r--data
push [ esp + 0x8 ]
call sub_408dc3
xor eax eax
jmp r-xdata
push r--data
push eax
call sub_40ca95
jmp r-xdata
retn 0x8
neg eax
sbb eax eax
neg eax
sub_406e30
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
je r-xdata
cmp [ edi ] 0x0
mov eax edi
je r-xdata
cmp esi edi
je r-xdata
mov eax edi
test esi esi
je r-xdata
xor ecx ecx
push ebx
push edi
call sub_40ca1b
cmp eax [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
retn 0xc
mov eax esi
inc eax
inc eax
inc ecx
inc ecx
cmp [ eax ] 0x0
jne r-xdata
push 0x5c
test esi esi
jne r-xdata
push edi
push esi
call sub_40ca32
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ eax ] 0x2f
jne r-xdata
pop ebx
mov edx ecx
sar edx 0x1
pop ebx
mov [ esi + edx * 2 ] bx
pop edx
mov [ eax ] dx
jmp r-xdata
sub_406e9a
push esi
mov esi [ esp + 0x8 ]
movzx eax [ esi ]
push eax
call sub_40beb1
sub al 0x41
cmp al 0x19
ja r-xdata
xor eax eax
cmp [ esi + 0x1 ] 0x3a
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x4
sub_406ebf
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
mov [ edi ] 0x0
call sub_406e9a
test al al
je r-xdata
cmp [ esi ] 0x5c
jne r-xdata
movsx eax [ esi ]
push eax
push r--data
push edi
call sub_408fbd
add esp 0xc
jmp r-xdata
pop edi
pop esi
retn 0x8
cmp [ esi + 0x1 ] 0x5c
jne r-xdata
push 0x5c
lea eax [ esi + 0x2 ]
push eax
call sub_408d5a
test eax eax
je r-xdata
push 0x5c
inc eax
push eax
call sub_408d5a
test eax eax
je r-xdata
push esi
call sub_408d31
sub eax esi
inc eax
jmp r-xdata
mov edi eax
push edi
push esi
mov esi [ esp + 0x18 ]
push esi
call sub_408e58
mov [ edi + esi ] 0x0
sub_406f33
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x1000000
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40c8ae
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn 0xc
push eax
push [ ebp + 0x10 ]
call sub_40ca32
jmp r-xdata
sub_406f9a
push esi
mov esi [ esp + 0x8 ]
mov al [ esi ]
push edi
xor edi edi
mov ecx esi
test al al
je r-xdata
mov eax esi
movsx eax al
push eax
call sub_406e18
test al al
je r-xdata
push ecx
call sub_401f7e
mov ecx eax
mov al [ ecx ]
test al al
jne r-xdata
lea edi [ ecx + 0x1 ]
test edi edi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax edi
jmp r-xdata
lea edi [ esi + 0x1 ]
cmp [ edi ] 0x3a
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
call sub_401f7e
cmp eax edi
lea eax [ esi + 0x2 ]
je r-xdata
sub_406ff1
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40ca1b
mov ecx eax
jmp r-xdata
dec ecx
jns r-xdata
movzx eax [ esi + ecx * 2 ]
push eax
call sub_406e18
test al al
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + ecx * 2 + 0x2 ]
jmp r-xdata
mov eax esi
cmp [ esi + 0x2 ] 0x3a
lea eax [ esi + 0x4 ]
je r-xdata
pop esi
retn 0x4
sub_407049
push ebp
mov ebp esp
sub esp 0x400
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi ]
test al al
je r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ esi + 0x2 ]
cmp [ esi ] 0x2e
jne r-xdata
push edi
mov al [ ecx - 0x1 ]
inc ecx
test al al
jne r-xdata
cmp [ ecx - 0x1 ] 0x2e
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x2e
jne r-xdata
cmp al 0x5c
jne r-xdata
cmp [ esi + 0x1 ] 0x3a
jne r-xdata
movsx eax al
push eax
call sub_406e18
test al al
je r-xdata
cmp [ ecx ] 0x2e
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
call sub_40bf47
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0xc ]
call sub_408e24
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x0
jne r-xdata
mov al [ edi ]
mov ecx edi
test al al
je r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
lea edi [ esi + 0x2 ]
jmp r-xdata
movsx eax [ ecx + 0x1 ]
push eax
call sub_406e18
test al al
je r-xdata
mov esi eax
cmp edi esi
je r-xdata
mov dl al
push 0x5c
lea eax [ esi + 0x2 ]
push eax
call sub_408d5a
test eax eax
je r-xdata
lea esi [ ecx + 0x2 ]
pop edi
cmp [ edi ] 0x0
mov esi edi
jne r-xdata
cmp dl 0x2e
jne r-xdata
lea edi [ ecx + 0x1 ]
jmp r-xdata
push 0x5c
inc eax
push eax
call sub_408d5a
test eax eax
je r-xdata
mov al [ esi ]
mov edi esi
test al al
je r-xdata
inc ecx
mov dl [ ecx ]
test dl dl
jne r-xdata
lea edi [ eax + 0x1 ]
movsx eax dl
push eax
call sub_406e18
test al al
je r-xdata
sub_40717e
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
push edi
dec esi
call sub_406f9a
sub eax edi
cmp esi eax
jl r-xdata
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
call sub_408e58
mov [ esi + edi ] 0x0
pop edi
pop esi
retn 0xc
push edi
call sub_406f9a
mov esi eax
sub esi edi
sub_4071b4
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_406f9a
lea ecx [ esi + 0x2 ]
cmp eax ecx
jb r-xdata
mov [ eax ] 0x0
pop esi
retn 0x4
cmp [ esi + 0x1 ] 0x3a
jne r-xdata
dec eax
add esi 0x4
cmp eax esi
jb r-xdata
sub_4071db
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
je r-xdata
cmp [ edi ] 0x0
mov eax edi
je r-xdata
cmp esi edi
je r-xdata
mov eax edi
test esi esi
je r-xdata
cmp [ eax ] 0x2f
jne r-xdata
push edi
call sub_408d31
cmp eax [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
retn 0xc
mov eax esi
push eax
call sub_401f7e
cmp [ eax ] 0x0
jne r-xdata
test esi esi
jne r-xdata
push edi
push esi
call sub_408e24
mov [ esi ] 0x0
jmp r-xdata
mov ecx eax
sub ecx edi
mov [ ecx + esi ] 0x5c
mov [ eax ] 0x5c
jmp r-xdata
sub_40723a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_407148
cmp [ ebp + 0xc ] 0x0
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
push [ ebp + 0xc ]
inc eax
push eax
call sub_408e24
push r--data
push [ ebp + 0x8 ]
call sub_408f8f
pop ebp
jmp sub_408f8f
pop ebp
retn 0x8
mov [ eax ] 0x0
jmp r-xdata
sub_407279
call sub_405d1d
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_408a89
and [ rw-data ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_408a89
and [ rw-data ] 0x0
and [ rw-data ] 0x0
retn
push eax
call sub_408a89
sub_4072c1
push ecx
and [ esp ] 0x0
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
push 0x0
push 0x2000
push esi
push edi
call sub_401200
mov ebx eax
mov eax [ esp + 0x24 ]
mov ebp edx
cdq
cmp ebp edx
jl r-xdata
sub edi ebx
sbb esi ebp
mov [ rw-data ] edi
mov [ rw-data ] esi
jg r-xdata
xor eax eax
cmp edi [ esp + 0x24 ]
jg r-xdata
mov ecx [ rw-data ]
sub edi ebx
push 0x0
sbb esi ebp
push esi
push edi
call sub_4033f6
mov ecx [ rw-data ]
call sub_402f5d
mov ecx [ rw-data ]
push ebx
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_403460
cdq
mov ecx eax
mov esi edx
mov eax ebx
cdq
mov [ rw-data ] ecx
mov [ rw-data ] esi
cmp ecx eax
jne r-xdata
cmp ebx eax
jbe r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
add [ rw-data ] 0xffffe000
mov ecx [ rw-data ]
push ebx
adc [ rw-data ] 0xffffffff
push [ rw-data ]
push [ rw-data ]
call sub_4033f6
mov ecx [ rw-data ]
push esi
push [ rw-data ]
call sub_403460
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
cmp eax esi
jne r-xdata
push 0x2
pop eax
jmp r-xdata
cmp esi edx
jne r-xdata
cmp edx ebx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx [ rw-data ]
mov eax ecx
sub eax [ esp + 0x24 ]
lea eax [ eax + ebx - 0x4 ]
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1fff ]
jmp r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
dec eax
push 0x4
push [ esp + 0x24 ]
push eax
call sub_408eea
mov ecx [ rw-data ]
test eax eax
mov eax [ rw-data ]
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_408cb4
jmp r-xdata
dec eax
push 0x4
push [ esp + 0x24 ]
push eax
call sub_408eea
mov ecx [ rw-data ]
test eax eax
mov eax [ rw-data ]
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_408cb4
inc edi
cmp [ esp + 0x10 ] ebx
je r-xdata
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push 0x0
sub eax ebx
pop ebx
sbb ecx ebp
push ebx
add eax 0x1fff
mov esi 0x2000
push esi
adc ecx ebx
push ecx
push eax
call sub_401070
xor edi edi
inc edi
mov [ esp + 0x24 ] eax
cmp [ esp + 0x10 ] ebx
jne r-xdata
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
sub_4074e0
mov eax 0xffff
mov ecx eax
cmp [ rw-data ] cx
je r-xdata
xor eax eax
inc eax
retn
cmp [ rw-data ] cx
je r-xdata
xor ecx ecx
cmp [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] ecx
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] ecx
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
retn
cmp [ rw-data ] ecx
je r-xdata
sub_407544
push ebp
mov ebp esp
sub esp 0x3c
push 0x38
push rw-data
push [ ebp + 0xc ]
mov [ rw-data ] 0x6
push [ ebp + 0x8 ]
call sub_4072c1
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
sub eax [ rw-data ]
push 0x3c
cdq
add eax [ rw-data ]
adc edx [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x3c ]
push eax
mov [ rw-data ] edx
call sub_403c66
test eax eax
jne r-xdata
push eax
push esi
mov esi 0xffff
mov eax esi
cmp [ rw-data ] ax
jne r-xdata
push 0x33
jmp r-xdata
leave
retn 0x8
mov eax esi
cmp [ rw-data ] ax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
call sub_404292
mov [ rw-data ] ax
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_404292
mov [ rw-data ] ax
cmp [ rw-data ] esi
pop esi
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4041c7
mov [ rw-data ] eax
mov [ rw-data ] edx
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_4041c7
mov [ rw-data ] eax
mov [ rw-data ] edx
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_4041c7
mov [ rw-data ] eax
mov [ rw-data ] edx
lea eax [ ebp - 0xc ]
push eax
call sub_4041c7
mov [ rw-data ] eax
mov [ rw-data ] edx
sub_40767c
sub esp 0x24
push ebx
push ebp
push esi
mov esi [ rw-data ]
xor ebp ebp
cmp esi ebp
push edi
mov edi [ rw-data ]
mov [ esp + 0x10 ] ebp
jg r-xdata
push ebp
push 0x2000
push esi
push edi
call sub_401200
mov ebx eax
cmp ebx 0x12
cdq
mov ebp eax
mov [ esp + 0x18 ] edx
jle r-xdata
jl r-xdata
sub edi ebp
sbb esi edx
mov [ rw-data ] edi
mov [ rw-data ] esi
mov ecx [ rw-data ]
sub edi ebp
push 0x0
sbb esi edx
push esi
push edi
call sub_4033f6
mov ecx [ rw-data ]
call sub_402f5d
push ebx
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_403bb6
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
cmp eax ebp
jne r-xdata
mov ecx [ rw-data ]
push ebp
push ebp
push ebp
call sub_4033f6
push [ rw-data ]
push [ rw-data ]
call sub_403bb6
mov esi [ rw-data ]
cdq
mov ecx eax
mov edi edx
mov eax esi
cdq
mov [ rw-data ] ecx
mov [ rw-data ] edi
cmp ecx eax
jne r-xdata
cmp edi 0x2000
ja r-xdata
xor ebp ebp
mov eax [ esp + 0x14 ]
cmp [ esp + 0x38 ] eax
jg r-xdata
push 0x78
call sub_4089f7
push eax
push rw-data
call sub_409c10
pop ecx
pop ecx
push 0x2
cmp edx [ esp + 0x18 ]
jne r-xdata
cmp edi edx
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ esp + 0x22 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ esp + 0x24 ]
push eax
call sub_40427f
movzx eax ax
cdq
mov [ rw-data ] eax
lea eax [ esp + 0x26 ]
push eax
mov [ rw-data ] edx
call sub_40427f
movzx eax ax
cdq
mov [ rw-data ] eax
lea eax [ esp + 0x28 ]
push eax
mov [ rw-data ] edx
call sub_404292
mov [ rw-data ] eax
lea eax [ esp + 0x2c ]
push eax
mov [ rw-data ] ebp
call sub_404292
mov [ rw-data ] eax
lea eax [ esp + 0x30 ]
push eax
mov [ rw-data ] ebp
call sub_40427f
mov [ rw-data ] ax
call sub_4074e0
test eax eax
je r-xdata
push 0x33
jmp r-xdata
cmp [ esp + 0x10 ] ebp
jne r-xdata
add [ rw-data ] 0xffffe000
mov ecx [ rw-data ]
push ebp
adc [ rw-data ] 0xffffffff
push [ rw-data ]
push [ rw-data ]
call sub_4033f6
push esi
push [ rw-data ]
call sub_403bb6
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
cmp eax esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x8
mov ecx [ rw-data ]
lea ebx [ ecx + ebx - 0x16 ]
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ esi + ecx - 0x16 ]
jmp r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
mov ecx [ rw-data ]
adc ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
xor eax eax
add ebx 0x4c
adc edi ebp
push edi
push ebx
call sub_407544
cmp eax ebp
jne r-xdata
pop eax
jmp r-xdata
cmp edx ebp
jne r-xdata
mov [ rw-data ] ebx
cmp ebx ecx
jae r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
mov [ rw-data ] 0x1
mov ecx [ rw-data ]
lea eax [ ecx + 0x1fff ]
jmp r-xdata
cmp [ ebx ] 0x50
jne r-xdata
jmp r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
dec ebx
push 0x4
push rw-data
push ebx
call sub_408eea
mov ecx [ rw-data ]
test eax eax
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_408e58
jmp r-xdata
dec eax
push 0x4
push rw-data
push eax
call sub_408eea
test eax eax
mov eax [ rw-data ]
je r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
mov ebx [ rw-data ]
mov ebx [ esp + 0x38 ]
mov edi [ esp + 0x3c ]
push 0x0
mov eax ebx
sub eax ebp
pop ebp
mov ecx edi
sbb ecx [ esp + 0x18 ]
push ebp
add eax 0x1fff
mov esi 0x2000
push esi
adc ecx ebp
push ecx
push eax
call sub_401070
mov [ esp + 0x14 ] eax
mov [ esp + 0x38 ] 0x1
cmp [ esp + 0x10 ] ebp
jne r-xdata
sub eax [ rw-data ]
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x38 ]
cdq
sub [ rw-data ] eax
sbb [ rw-data ] edx
jmp r-xdata
mov ecx [ rw-data ]
dec eax
push 0x4
push rw-data
push eax
call sub_408eea
mov ecx [ rw-data ]
test eax eax
mov eax [ rw-data ]
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_408e58
inc [ esp + 0x38 ]
cmp [ esp + 0x10 ] ebp
je r-xdata
mov eax [ rw-data ]
sub eax [ rw-data ]
push 0x16
cdq
add eax [ rw-data ]
adc edx [ rw-data ]
mov [ rw-data ] eax
lea eax [ esp + 0x20 ]
push eax
mov [ rw-data ] edx
call sub_403c66
test eax eax
jne r-xdata
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
xor ebp ebp
sub_407a75
mov cx [ rw-data ]
push esi
xor edx edx
xor esi esi
cmp cx dx
je r-xdata
mov eax esi
pop esi
retn
mov eax [ rw-data ]
cmp eax edx
jg r-xdata
push edx
movzx eax cx
push edx
push eax
call sub_404024
test eax eax
je r-xdata
jne r-xdata
push 0x6a
call sub_4089f7
push eax
push rw-data
call sub_409c10
pop ecx
xor esi esi
pop ecx
inc esi
cmp [ rw-data ] edx
jne r-xdata
sub_407ac3
push ebp
mov ebp esp
sub esp 0x2c
push 0x2a
lea eax [ ebp - 0x2c ]
push eax
call sub_403c66
test eax eax
jne r-xdata
mov al [ ebp - 0x2c ]
mov [ rw-data ] al
mov al [ ebp - 0x2b ]
mov [ rw-data ] al
mov al [ ebp - 0x2a ]
mov [ rw-data ] al
mov al [ ebp - 0x29 ]
mov [ rw-data ] al
push esi
lea eax [ ebp - 0x28 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x26 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x24 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x22 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x20 ]
push eax
call sub_404292
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_404292
mov [ rw-data ] eax
lea eax [ ebp - 0x18 ]
xor esi esi
push eax
mov [ rw-data ] esi
call sub_404292
mov [ rw-data ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ rw-data ] esi
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x12 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0xe ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0xa ]
push eax
call sub_404292
mov [ rw-data ] eax
lea eax [ ebp - 0x6 ]
push eax
call sub_404292
cmp [ rw-data ] 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
jne r-xdata
push 0x33
pop eax
leave
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
xor eax eax
pop esi
leave
retn
cmp [ rw-data ] esi
jne r-xdata
mov [ rw-data ] 0x1
sub_407c0d
push ebp
mov ebp [ esp + 0xc ]
push esi
test ebp ebp
je r-xdata
pop esi
xor eax eax
pop ebp
retn 0x8
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
cmp ebp 0x4
jb r-xdata
push ebx
push edi
pop edi
pop ebx
cmp edi 0x1
jne r-xdata
push 0xfffffffc
pop eax
sub eax ebx
add ebp eax
lea esi [ esi + ebx + 0x4 ]
cmp ebp 0x4
jae r-xdata
cmp [ rw-data ] 0xffffffff
push 0x4
mov [ rw-data ] 0x1
pop edi
jne r-xdata
push esi
call sub_40427f
movzx edi ax
lea eax [ esi + 0x2 ]
push eax
call sub_40427f
movzx ebx ax
lea eax [ ebp - 0x4 ]
cmp ebx eax
ja r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ esi + 0x4 ]
push eax
call sub_4041c7
push 0xc
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
pop edi
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ edi + esi ]
push eax
call sub_4041c7
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
add edi 0x8
mov eax 0xffff
cmp [ rw-data ] ax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add edi esi
push edi
call sub_404292
mov [ rw-data ] ax
lea eax [ edi + esi ]
push eax
call sub_4041c7
mov [ rw-data ] eax
mov [ rw-data ] edx
add edi 0x8
sub_407d69
push ebp
mov ebp esp
sub esp 0x1c
push 0x1a
lea eax [ ebp - 0x1c ]
push eax
call sub_403c66
test eax eax
jne r-xdata
mov al [ ebp - 0x1c ]
mov [ rw-data ] al
mov al [ ebp - 0x1b ]
mov [ rw-data ] al
lea eax [ ebp - 0x1a ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x18 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x16 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x14 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x12 ]
push eax
call sub_404292
mov [ rw-data ] eax
lea eax [ ebp - 0xe ]
push eax
call sub_404292
and [ rw-data ] 0x0
mov [ rw-data ] eax
lea eax [ ebp - 0xa ]
push eax
call sub_404292
and [ rw-data ] 0x0
mov [ rw-data ] eax
lea eax [ ebp - 0x6 ]
push eax
call sub_40427f
mov [ rw-data ] ax
lea eax [ ebp - 0x4 ]
push eax
call sub_40427f
test [ rw-data ] 0x8
mov [ rw-data ] ax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
je r-xdata
push 0x33
pop eax
leave
retn
xor eax eax
leave
retn
mov eax [ rw-data ]
mov ecx [ eax + 0x18 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov edx [ eax + 0xc ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov ecx [ eax + 0x10 ]
mov [ rw-data ] ecx
mov eax [ eax + 0x14 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] eax
sub_407ea2
mov eax 0x10a0
call sub_4012c0
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x10 ]
call sub_40355c
xor ebx ebx
push ebx
lea eax [ esp + 0x14 ]
push eax
push rw-data
mov esi rw-data
push esi
call sub_4048c7
test al al
je r-xdata
push esi
push esi
mov ecx rw-data
call sub_4018cb
xor eax eax
cmp [ esp + 0xc20 ] al
sete al
dec eax
and eax 0x43
add eax 0x9
cmp [ esp + 0xc20 ] bl
jne r-xdata
mov eax [ esp + 0xc10 ]
mov [ rw-data ] eax
mov eax [ esp + 0xc14 ]
mov [ rw-data ] eax
call sub_403a4d
test eax eax
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov edx 0x101d0
jg r-xdata
push 0x9
mov eax edx
xor ecx ecx
mov eax [ rw-data ]
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10a0
retn 0x4
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
call sub_407a75
mov ebp eax
cmp ebp 0x1
jg r-xdata
push ecx
push eax
call sub_40767c
mov ebp eax
cmp ebp ebx
jne r-xdata
cmp eax edx
jb r-xdata
mov [ rw-data ] ebx
cmp [ esp + 0x10b4 ] ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ rw-data ] ebx
mov cx [ rw-data ]
jle r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov eax ebp
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] bl
mov [ rw-data ] 0x1
cmp cx bx
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov eax [ rw-data ]
sbb eax [ rw-data ]
mov [ rw-data ] ecx
cmp eax ebx
mov [ rw-data ] eax
mov edi 0xa0
jg r-xdata
mov ax [ rw-data ]
cmp cx ax
je r-xdata
or [ rw-data ] 0xffffffff
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
jl r-xdata
jbe r-xdata
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
or eax [ rw-data ]
je r-xdata
push edi
call sub_4089f7
push eax
push esi
call sub_409c10
jmp r-xdata
cmp ecx ebx
jae r-xdata
push 0x7c
call sub_4089f7
push eax
push esi
call sub_409c10
pop ecx
xor ebp ebp
pop ecx
inc ebp
push 0x78
call sub_4089f7
push eax
push esi
call sub_409c10
pop ecx
pop ecx
push 0xb
pop ebp
jmp r-xdata
push [ rw-data ]
push [ rw-data ]
call sub_403e50
cmp eax 0x3
jne r-xdata
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
push edi
call sub_4089f7
push eax
push esi
call sub_409c10
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop ecx
pop ecx
push 0x2
pop ebp
cmp eax ebx
jl r-xdata
push 0x4
mov ebx rw-data
push ebx
call sub_403c66
test eax eax
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
cmp ebp ebx
je r-xdata
jg r-xdata
push [ rw-data ]
and [ rw-data ] 0x0
push [ rw-data ]
and [ rw-data ] 0x0
call sub_403e50
mov ebp eax
test ebp ebp
jne r-xdata
push 0x4
push rw-data
push ebx
call sub_408eea
test eax eax
je r-xdata
push 0x3
pop ebp
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
push edi
call sub_4089f7
push eax
push esi
call sub_409c10
pop ecx
pop ecx
cmp ecx ebx
jbe r-xdata
push edi
call sub_4089f7
push eax
push esi
call sub_409c10
pop ecx
pop ecx
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x4
push ebx
call sub_403c66
test eax eax
je r-xdata
push [ rw-data ]
push [ rw-data ]
call sub_403e50
mov esi eax
test esi esi
je r-xdata
xor eax eax
inc eax
cmp ebp eax
mov [ rw-data ] ebx
jle r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ rw-data ] 0x0
test ebp ebp
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x4
push rw-data
push ebx
call sub_408eea
test eax eax
jne r-xdata
call sub_402011
xor ebx ebx
cmp eax ebp
jle r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
jmp r-xdata
push 0x3
jmp r-xdata
push edi
call sub_4089f7
push eax
push esi
call sub_409c10
pop ecx
pop ecx
push 0x2
pop ebp
mov ebp eax
jmp r-xdata
mov ebp esi
xor ebx ebx
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
pop eax
jmp r-xdata
sub_408256
call sub_407ac3
test eax eax
jne r-xdata
retn
mov al [ rw-data ]
cmp al 0x12
jae r-xdata
push 0x12
pop eax
movzx eax al
jmp r-xdata
and [ eax + 0x28 ] 0xfffffff7
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov [ ecx + 0x1c ] eax
movzx eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x20 ] eax
test [ rw-data ] 0x8
mov eax [ rw-data ]
je r-xdata
or [ eax + 0x28 ] 0x8
jmp r-xdata
cmp ecx 0x6
je r-xdata
xor eax eax
cmp ecx 0xb
je r-xdata
cmp ecx 0x5
jne r-xdata
sub_4082ba
push esi
push 0x2004
xor esi esi
call sub_408a70
push 0x20001
mov [ rw-data ] eax
call sub_408a70
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp ecx esi
je r-xdata
mov ecx rw-data
call sub_4018bc
push 0x4
pop eax
pop esi
retn
cmp eax esi
je r-xdata
push r--data
add ecx 0x2000
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] 0x50
mov [ rw-data ] 0x50
mov [ rw-data ] 0x50
mov [ rw-data ] 0x4b
mov [ rw-data ] 0x4b
mov [ rw-data ] 0x4b
call sub_408e24
push r--data
push rw-data
call sub_408e24
push r--data
push rw-data
call sub_408e24
push esi
call sub_407ea2
cmp eax 0x4c
je r-xdata
call sub_407279
mov eax esi
pop esi
retn
cmp eax esi
jle r-xdata
mov esi eax
sub_408393
push ebp
mov ebp esp
mov eax 0x302c
call sub_4012c0
push esi
push 0x5c
push [ ebp + 0x8 ]
mov esi ecx
call sub_408d5a
test eax eax
lea eax [ ebp - 0x40c ]
jne r-xdata
push [ ebp + 0x8 ]
push eax
call sub_408e24
push edi
lea ecx [ ebp - 0x102c ]
call sub_402e44
xor edi edi
push edi
push 0x1
push edi
lea eax [ ebp - 0x40c ]
push eax
lea ecx [ ebp - 0x102c ]
call sub_403005
test al al
jne r-xdata
push 0x400
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x5c
lea eax [ ebp - 0x40c ]
push eax
call sub_408d86
test eax eax
je r-xdata
or [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] edi
push ebx
lea ecx [ ebp - 0x102c ]
call sub_402fe2
jmp r-xdata
pop esi
leave
retn 0x4
inc eax
mov eax [ ebp + 0x8 ]
cdq
xor ebx ebx
push ebx
push edx
push eax
lea ecx [ ebp - 0x102c ]
mov [ esi + 0x4 ] 0x20000
call sub_4033f6
mov eax [ esi + 0x4 ]
add eax 0x400
push eax
call sub_408a70
mov [ esi ] eax
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x102c ]
call sub_402f5d
mov [ ebp - 0x8 ] eax
push 0x2000
lea eax [ ebp - 0x302c ]
push eax
lea ecx [ ebp - 0x102c ]
call sub_403460
mov [ ebp - 0xc ] eax
cmp eax 0x10
jb r-xdata
pop edi
lea ecx [ ebp - 0x102c ]
call sub_402fe2
pop ebx
mov ecx [ esi + 0x4 ]
mov [ eax + ecx ] bl
push [ esi + 0x4 ]
lea ecx [ ebp - 0x102c ]
push [ esi ]
call sub_403460
xor ecx ecx
cmp eax ebx
mov [ esi + 0x4 ] eax
jle r-xdata
xor edi edi
mov eax [ esi ]
mov [ ecx + eax ] 0x0
mov [ esi + 0x4 ] ecx
mov eax [ esi ]
movsx edx [ eax + ebx ]
inc ebx
test edx edx
je r-xdata
cmp [ ebx ] 0x52
jne r-xdata
cmp [ ebp + edi - 0x302b ] 0x2a
jne r-xdata
cmp edx 0x5c
jne r-xdata
mov eax [ ebp - 0xc ]
inc edi
add eax 0xfffffff0
cmp edi eax
jbe r-xdata
cmp [ ebp + edi - 0x302b ] 0x61
jne r-xdata
push 0xb
push r--data
lea eax [ ebp + edi - 0x302a ]
push eax
call sub_408eea
test eax eax
je r-xdata
cmp edx 0xd
je r-xdata
movsx edi [ eax + ebx ]
sub edi 0x22
je r-xdata
lea ebx [ ebp + edi - 0x302c ]
cmp [ ebx ] 0x2a
jne r-xdata
jmp r-xdata
push 0x4
push r--data
lea eax [ ebp + edi - 0x302a ]
push eax
call sub_408eea
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
add edi eax
mov [ ebp + 0x8 ] edi
push 0xc
pop edx
cmp edx 0xa
jne r-xdata
mov [ eax + ecx ] 0x22
sub edi 0x3a
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push 0x0
lea eax [ eax + ecx - 0x10 ]
push 0x0
push eax
lea ecx [ ebp - 0x102c ]
call sub_4033f6
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x40
jl r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov [ eax + ecx ] dl
inc ecx
cmp ebx [ esi + 0x4 ]
jl r-xdata
mov [ eax + ecx ] 0x5c
jmp r-xdata
sub edi 0x12
je r-xdata
inc ebx
jmp r-xdata
mov [ eax + ecx ] 0xa
jmp r-xdata
sub edi 0x4
je r-xdata
mov [ eax + ecx ] 0xd
jmp r-xdata
dec edi
dec edi
jne r-xdata
mov [ eax + ecx ] 0x9
jmp r-xdata
sub_4085d7
push esi
mov esi [ ecx ]
mov al [ esi ]
push edi
test al al
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
mov al [ esi ]
test al al
jne r-xdata
push 0x7
lea eax [ edi + 0x1 ]
push eax
lea eax [ esi + 0x1 ]
push eax
call sub_408eea
test eax eax
jne r-xdata
cmp al 0xc
je r-xdata
jmp r-xdata
cmp [ esi + 0x8 ] 0x3d
jne r-xdata
inc esi
inc esi
cmp [ esi ] 0xc
je r-xdata
cmp [ esi + 0x9 ] 0x22
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax esi
jmp r-xdata
cmp al [ edi ]
jne r-xdata
pop edi
pop esi
retn 0x4
sub_408653
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
je r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax 0x0
mov ecx r--data
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push ebx
push [ ebp + 0xc ]
call sub_408e24
mov ecx r--data
dec eax
je r-xdata
push ebx
call sub_408d31
push eax
push ebx
push esi
call sub_40168a
not eax
push eax
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_408fbd
add esp 0xc
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_4085d7
test eax eax
je r-xdata
push [ ebp + 0x14 ]
call sub_408d31
push eax
push [ ebp + 0x14 ]
push esi
call sub_40168a
mov esi eax
mov ecx r--data
jmp r-xdata
dec eax
jne r-xdata
lea esi [ eax + 0xa ]
push 0xc
push esi
call sub_408d5a
test eax eax
je r-xdata
push 0x1
push ecx
push 0xffffffff
call sub_40168a
cmp [ ebp + 0x14 ] 0x0
mov esi eax
je r-xdata
mov ecx r--data
jmp r-xdata
mov edi 0xff
sub eax esi
inc eax
mov edi eax
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_408e58
push 0x22
push esi
mov [ edi + esi ] 0x0
call sub_408d86
test eax eax
je r-xdata
sub_408737
push ebp
mov ebp esp
sub esp 0x200
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x200 ]
push 0x1
push eax
push r--data
call sub_408653
push 0x2a
lea eax [ ebp - 0x200 ]
push eax
call sub_408d5a
mov edi eax
push 0x64
pop ebx
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ ecx ] ebx
mov [ esi ] ebx
lea eax [ ebp - 0x200 ]
push eax
call sub_409022
mov esi [ ebp + 0xc ]
inc edi
push edi
mov [ esi ] eax
call sub_409022
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ecx ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_4087af
push ebp
mov ebp esp
sub esp 0x400
push esi
push edi
push 0x0
mov edi ecx
call [ GetModuleHandleA@IAT ]
push 0x5
mov esi r--data
push esi
push eax
call [ FindResourceA@IAT ]
test eax eax
je r-xdata
mov eax r--data
push eax
push 0x1
lea ecx [ ebp - 0x400 ]
push ecx
push eax
mov ecx edi
call sub_408653
push esi
lea eax [ ebp - 0x400 ]
push eax
call sub_408e96
neg eax
sbb al al
inc al
mov [ edi + 0x10 ] al
mov [ edi + 0x10 ] 0x1
jmp r-xdata
pop edi
pop esi
leave
retn
sub_40880e
push ebp
mov ebp esp
sub esp 0x444
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
call sub_408737
mov ebx [ GetWindowRect@IAT ]
mov [ ebp - 0x1 ] al
lea eax [ ebp - 0x24 ]
push eax
push [ ebp + 0x8 ]
call ebx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x8 ]
call [ GetClientRect@IAT ]
mov edi [ ebp - 0x1c ]
sub edi [ ebp - 0x3c ]
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x38 ]
sub edi [ ebp - 0x24 ]
sub esi eax
sub esi [ ebp - 0x20 ]
inc edi
inc esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x8
call [ GetSystemMetrics@IAT ]
push 0x5
push [ ebp + 0x8 ]
sub esi eax
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0x400
lea eax [ ebp - 0x444 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
push [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
push 0x1
lea eax [ ebp - 0x444 ]
push eax
push eax
call sub_408653
lea eax [ ebp - 0x444 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
imul eax [ ebp - 0x8 ]
push 0x206
cdq
push 0x64
pop ecx
idiv ecx
add eax esi
push eax
mov eax [ ebp - 0x3c ]
imul eax [ ebp - 0xc ]
cdq
idiv ecx
add eax edi
push eax
xor eax eax
push eax
push eax
push eax
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x400
lea eax [ ebp - 0x444 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowTextA@IAT ]
cmp [ ebp - 0x444 ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
push 0x1
lea eax [ ebp - 0x444 ]
push eax
push eax
call sub_408653
lea eax [ ebp - 0x444 ]
push eax
push [ ebp + 0x10 ]
call [ SetWindowTextA@IAT ]
push 0x2
push [ ebp + 0x10 ]
call [ GetWindow@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax [ ebp - 0x14 ]
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x10 ]
call ebx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
push 0x204
inc eax
imul eax [ ebp - 0x8 ]
cdq
push 0x64
pop ecx
idiv ecx
push eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
inc eax
imul eax [ ebp - 0xc ]
cdq
idiv ecx
push eax
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x20 ]
sub eax esi
imul eax [ ebp - 0x8 ]
cdq
idiv ecx
push eax
mov eax edi
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x34 ]
sar ecx 0x1
sub eax ecx
sub eax [ ebp - 0x24 ]
push 0x64
imul eax [ ebp - 0xc ]
pop ecx
cdq
idiv ecx
push eax
push 0x0
push [ ebp + 0x10 ]
call [ SetWindowPos@IAT ]
inc [ ebp + 0x8 ]
sub_4089f7
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax 0x8
jb r-xdata
push ebx
push ebp
shl eax 0x9
push esi
add eax rw-data
mov esi eax
mov ebx rw-data
push edi
mov ecx ebx
mov [ esi ] 0x0
call sub_4085cf
mov edi [ LoadStringA@IAT ]
mov ebp 0x200
test al al
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push ebp
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call edi
push ebp
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call edi
test eax eax
jne r-xdata
push 0x0
push 0x0
push esi
push esi
mov ecx ebx
call sub_408653
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_408aa8
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp + 0xc ]
call sub_408a70
jmp r-xdata
pop ebp
retn 0x8
sub_408ad4
push ebp
mov ebp esp
push ecx
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call [ OemToCharBuffA@IAT ]
movzx eax [ ebp + 0x8 ]
push eax
call [ CharUpperA@IAT ]
mov [ ebp - 0x4 ] eax
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ CharToOemBuffA@IAT ]
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_408b0d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
cmp eax 0x72
jne r-xdata
mov [ ebp - 0xc ] 0x40000000
mov eax [ ebp + 0xc ]
movsx eax [ eax + 0x1 ]
cmp eax 0x2b
je r-xdata
push 0x4
call sub_408a70
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov [ ebp - 0xc ] 0x80000000
jmp r-xdata
leave
retn 0x8
push 0x0
push 0x8000000
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
xor ecx ecx
cmp eax 0x77
setne cl
inc ecx
inc ecx
push ecx
push 0x0
push 0x1
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
sub_408b88
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ CloseHandle@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_408a89
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
leave
retn 0x4
sub_408bbb
push ebp
mov ebp esp
sub esp 0xc
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ WriteFile@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
leave
retn 0x10
sub_408bfe
push ebp
mov ebp esp
sub esp 0xc
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ ReadFile@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
leave
retn 0x10
sub_408c41
push ebp
mov ebp esp
push ecx
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetFilePointer@IAT ]
mov [ ebp - 0x4 ] eax
xor eax eax
cmp [ ebp - 0x4 ] 0xffffffff
sete al
leave
retn 0xc
sub_408c68
push ebp
mov ebp esp
push ecx
push 0x1
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetFilePointer@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_408c87
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_408cb4
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_408ce6
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408cb4
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
sub_408d31
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
sub_408d5a
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x8
sub_408d86
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
call sub_408d31
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
leave
retn 0x8
sub_408dc3
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
test eax eax
je r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
movsx eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
leave
retn 0x8
sub_408e24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
test eax eax
je r-xdata
sub_408e58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jbe r-xdata
sub_408e96
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
inc eax
je r-xdata
sub_408eea
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jbe r-xdata
sub_408f47
push ebp
mov ebp esp
push 0xffffffff
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
pop ebp
retn 0x8
sub_408f6a
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
pop ebp
retn 0xc
sub_408fbd
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ wvsprintfA@IAT ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_408d31
leave
retn
sub_408fe4
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x30
jl r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x39
jg r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_409022
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
imul eax eax 0xa
mov ecx [ ebp + 0x8 ]
movsx ecx [ ecx ]
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call sub_408fe4
test eax eax
je r-xdata
sub_409062
push ebp
mov ebp esp
sub esp 0x20
push rw-data
push 0x101
call sub_40905d
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40cb71
mov [ ebp - 0x14 ] eax
jmp r-xdata
and [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_401847
mov [ ebp - 0x18 ] eax
jmp r-xdata
push rw-data
push 0xc
call sub_40905d
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
call sub_40837e
mov [ ebp - 0x1c ] eax
jmp r-xdata
push rw-data
push 0x14
call sub_40905d
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
and [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_401628
mov [ ebp - 0x20 ] eax
jmp r-xdata
push rw-data
push 0x4ae0
call sub_40905d
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
leave
retn
sub_409113
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
pop ebp
retn
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
inc eax
inc ecx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_409150
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx edi
mov [ esi ] edi
call sub_402f5d
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0xc1c ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_409194
push ebp
mov ebp esp
sub esp 0x1c
push esi
xor esi esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageA@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
sub_4091f2
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bf6f
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push edi
push esi
push rw-data
lea eax [ ebp - 0x34 ]
push eax
push ebx
push 0x400
mov [ esi ] bl
call [ GetNumberFormatA@IAT ]
mov [ esi + edi - 0x1 ] bl
pop edi
pop esi
pop ebx
leave
retn 0x10
call sub_4091d3
mov [ rw-data ] al
mov [ rw-data ] bl
mov [ rw-data ] rw-data
sub_409258
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xf4240
jbe r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
shr eax 0x8
shr [ ebp + 0xc ] 0x8
cmp [ ebp + 0xc ] eax
jae r-xdata
xor eax eax
jmp r-xdata
imul eax eax 0x64
xor edx edx
div [ ebp + 0xc ]
push 0x64
pop eax
jmp r-xdata
pop ebp
retn 0x8
sub_40928c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
xor eax eax
mov al [ esi ]
test al al
je r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
xor dl dl
mov al [ esi ]
cmp al 0x2c
jne r-xdata
lea ecx [ esi + 0x1 ]
cmp [ ecx ] al
jne r-xdata
mov [ edi ] al
test dl dl
je r-xdata
mov bl dl
test dl dl
je r-xdata
test dl dl
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ edi ] al
jmp r-xdata
mov [ edi ] 0x0
push 0x22
push ecx
call sub_408d5a
test eax eax
setne dl
xor dl dl
jmp r-xdata
mov esi ecx
mov [ edi ] 0x22
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov eax esi
jmp r-xdata
inc esi
movsx eax [ esi ]
push eax
call sub_40bedc
test al al
jne r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp bl dl
jne r-xdata
inc edi
mov al [ esi + 0x2 ]
cmp al 0x2c
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
test al al
je r-xdata
sub_409324
push ebp
mov ebp esp
sub esp 0x610
push ebx
xor ebx ebx
push ebx
call [ OleInitialize@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
call [ OleUninitialize@IAT ]
mov al bl
pop ebx
leave
retn 0x14
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
push [ ebp + 0x14 ]
push eax
call [ ecx + 0x44 ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x610 ]
push eax
call sub_408e24
lea eax [ ebp - 0x610 ]
push eax
call sub_4071b4
cmp [ ebp - 0x610 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x610 ]
push edx
push eax
call [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push 0x104
lea eax [ ebp - 0x210 ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x1
lea edx [ ebp - 0x210 ]
push edx
push eax
call [ ecx + 0x18 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov bl 0x1
sub_409429
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ SHGetMalloc@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListA@IAT ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
leave
retn 0x8
sub_409463
push ebp
mov ebp esp
sub esp 0x50
call sub_4069f0
cmp eax 0x5
jl r-xdata
leave
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push 0x50
lea eax [ ebp - 0x50 ]
push eax
push edi
call [ GetClassNameA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test edi edi
je r-xdata
push esi
mov esi r--data
push esi
lea eax [ ebp - 0x50 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
pop edi
push 0x10
push edi
call [ rw-data ]
pop esi
push 0x0
push esi
push 0x0
push edi
call [ FindWindowExA@IAT ]
mov edi eax
mov eax [ rw-data ]
test eax eax
setne cl
mov [ rw-data ] cl
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_409508
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov [ eax ] 0x0
retn 0x4
push ebx
mov [ eax ] dl
inc eax
inc ecx
mov bl [ ecx + 0x1 ]
cmp bl dl
jne r-xdata
mov dl [ ecx ]
cmp dl 0x5c
jne r-xdata
pop ebx
cmp bl 0x6e
jne r-xdata
mov [ eax ] dl
mov [ eax ] 0xa
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
inc eax
inc ecx
inc ecx
jmp r-xdata
sub_409543
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
xor edi edi
push edi
call [ GetDC@IAT ]
mov esi [ CreateCompatibleDC@IAT ]
push eax
mov [ ebp - 0x8 ] eax
call esi
push [ ebp - 0x8 ]
mov ebx eax
call esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push 0x18
push [ ebp + 0x8 ]
call [ GetObjectA@IAT ]
mov eax [ ebp - 0x20 ]
imul eax [ ebp + 0xc ]
cdq
idiv [ ebp - 0x24 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ CreateCompatibleBitmap@IAT ]
push [ ebp + 0x8 ]
mov esi [ SelectObject@IAT ]
push ebx
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
push [ ebp - 0x4 ]
call esi
push 0xcc0020
push [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x24 ]
push edi
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push edi
push [ ebp - 0x4 ]
call [ StretchBlt@IAT ]
push [ ebp + 0x8 ]
push ebx
call esi
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call esi
mov esi [ DeleteDC@IAT ]
push ebx
call esi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
push edi
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebp + 0x10 ] eax
sub_409608
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_40964b
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_40968e
push 0x64
call sub_409608
cmp eax 0x7d
jge r-xdata
xor eax eax
inc eax
retn
push 0x64
call sub_40964b
cmp eax 0x7d
jge r-xdata
xor eax eax
retn
sub_4096ad
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0x67
push [ rw-data ]
call [ GetDlgItem@IAT ]
cmp [ rw-data ] 0x0
mov esi [ SendMessageA@IAT ]
mov edi eax
mov [ ebp - 0x4 ] edi
mov ebx 0xb1
jne r-xdata
mov edi 0x5f5e100
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x43a
push [ ebp - 0x4 ]
mov [ ebp - 0x40 ] 0x3c
call esi
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov [ ebp - 0x3c ] eax
je r-xdata
mov ecx [ rw-data ]
call sub_404d05
push 0x5
push edi
call [ ShowWindow@IAT ]
push 0xffffffff
push 0x0
push ebx
push edi
call esi
push r--data
push 0x0
push 0xc2
push edi
call esi
mov [ rw-data ] 0x1
lea ecx [ ebp - 0x40 ]
push ecx
push eax
push 0x444
push [ ebp - 0x4 ]
call esi
push [ ebp + 0xc ]
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x38 ]
and ecx 0xbfffffff
or ecx eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x2c ] 0xa0
mov [ ebp - 0x3c ] 0x40000001
push r--data
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x38 ]
and eax 0xfffffffe
or eax 0x40000000
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0x1
push 0x444
push [ ebp - 0x4 ]
call esi
sub_4097c1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x400
test eax eax
je r-xdata
inc [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
leave
retn
lea ecx [ ebp + 0xc ]
push ecx
push eax
lea eax [ ebp - 0x400 ]
push eax
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x400 ]
push eax
push 0x1
call sub_4096ad
sub_4097fe
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x95c
push ebx
push esi
push edi
mov edi [ ebp + 0x70 ]
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x7c ]
push [ ebp + 0x78 ]
push [ ebp + 0x74 ]
push edi
call sub_40178c
mov eax [ ebp + 0x74 ]
sub eax 0x110
je r-xdata
push 0x3ff
push [ ebp + 0x7c ]
lea eax [ ebp - 0x8f4 ]
push eax
call sub_408e58
mov esi 0x400
push esi
push ebx
lea eax [ ebp - 0x8f4 ]
push eax
mov [ ebp - 0x4f5 ] bl
call sub_4071db
lea eax [ ebp - 0x8f4 ]
push eax
push 0x65
push edi
mov edi [ SetDlgItemTextA@IAT ]
call edi
push 0x100
push 0x160
lea eax [ ebp - 0x4f4 ]
push eax
push ebx
lea eax [ ebp - 0x8f4 ]
push eax
call [ SHGetFileInfoA@IAT ]
push ebx
push [ ebp - 0x4f4 ]
push 0x170
push 0x66
push [ ebp + 0x70 ]
call [ SendDlgItemMessageA@IAT ]
lea eax [ ebp - 0x194 ]
push eax
lea eax [ ebp - 0x8f4 ]
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp + 0x74 ] eax
cmp eax 0xffffffff
je r-xdata
dec eax
jne r-xdata
xor eax eax
inc eax
lea eax [ ebp + 0x48 ]
push eax
lea eax [ ebp - 0x180 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x48 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x20 ]
push eax
push ebx
lea eax [ ebp + 0x58 ]
push eax
push 0x2
push esi
call [ GetTimeFormatA@IAT ]
push 0x32
lea eax [ ebp + 0x14 ]
push eax
push ebx
lea eax [ ebp + 0x58 ]
push eax
push ebx
push esi
call [ GetDateFormatA@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
push 0x81
call sub_4089f7
mov ebx [ wsprintfA@IAT ]
push eax
lea eax [ ebp - 0x394 ]
push r--data
push eax
call ebx
add esp 0x14
lea eax [ ebp - 0x394 ]
push eax
push 0x6a
push [ ebp + 0x70 ]
call edi
push [ ebp + 0x74 ]
call [ FindClose@IAT ]
test [ ebp - 0x194 ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x78 ]
push 0x2
pop esi
sub eax esi
je r-xdata
push 0x0
push [ ebp - 0x4f4 ]
push 0x170
push 0x67
push [ ebp + 0x70 ]
call [ SendDlgItemMessageA@IAT ]
lea eax [ ebp + 0x50 ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
call [ DosDateTimeToFileTime@IAT ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x50 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x20 ]
push eax
push 0x0
lea eax [ ebp + 0x58 ]
push eax
push 0x2
push esi
call [ GetTimeFormatA@IAT ]
push 0x32
lea eax [ ebp + 0x14 ]
push eax
push 0x0
lea eax [ ebp + 0x58 ]
push eax
push 0x0
push esi
call [ GetDateFormatA@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
push 0x81
call sub_4089f7
push eax
lea eax [ ebp - 0x394 ]
push r--data
push eax
call ebx
add esp 0x14
lea eax [ ebp - 0x394 ]
push eax
push 0x6b
push [ ebp + 0x70 ]
call edi
test [ ebp - 0x194 ] 0x10
mov eax [ rw-data ]
mov ecx [ rw-data ]
je r-xdata
push 0x32
lea eax [ ebp - 0x54 ]
push eax
push 0x0
push [ ebp - 0x174 ]
call sub_4091f2
push 0x80
call sub_4089f7
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x394 ]
push r--data
push eax
call ebx
add esp 0x10
lea eax [ ebp - 0x394 ]
push eax
push 0x68
push [ ebp + 0x70 ]
call edi
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn 0x10
push 0x5
sub eax 0x6a
je r-xdata
push 0x32
lea edx [ ebp - 0x54 ]
push edx
push eax
push ecx
call sub_4091f2
push 0x80
call sub_4089f7
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x394 ]
push r--data
push eax
call ebx
add esp 0x10
lea eax [ ebp - 0x394 ]
push eax
push 0x69
push [ ebp + 0x70 ]
call edi
mov edx ecx
or edx eax
je r-xdata
push esi
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push eax
call [ DestroyIcon@IAT ]
xor esi esi
inc esi
jmp r-xdata
dec eax
je r-xdata
push ebx
push ebx
push 0x171
push 0x66
push edi
call [ SendDlgItemMessageA@IAT ]
cmp eax ebx
je r-xdata
dec eax
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
pop esi
push 0x3
jmp r-xdata
dec eax
je r-xdata
push 0x6
jmp r-xdata
dec eax
je r-xdata
sub_409afa
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
xor esi esi
push esi
push esi
push r--data
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40178c
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov esi [ SetDlgItemTextA@IAT ]
push edi
push 0x65
push ebx
mov [ rw-data ] edi
call esi
push edi
push 0x66
push ebx
call esi
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push [ rw-data ]
push 0x50
push 0xd
push 0x66
push ebx
call [ SendDlgItemMessageA@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push ebx
call [ EndDialog@IAT ]
jmp r-xdata
push esi
xor eax eax
inc eax
sub_409b7a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40178c
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push [ ebp + 0x14 ]
push 0x66
push esi
call [ SetDlgItemTextA@IAT ]
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop esi
pop ebp
retn 0x10
push 0x80
push rw-data
push 0x65
push esi
call [ GetDlgItemTextA@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push esi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
xor eax eax
inc eax
sub_409c10
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
push esi
call [ GetLastError@IAT ]
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x1000 ]
push eax
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x1000 ]
push eax
push r--data
call sub_4097c1
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
push esi
call [ SetLastError@IAT ]
sub_409c89
call sub_40be1e
push r--data
push rw-data
call sub_408e24
mov ecx [ rw-data ]
push r--data
call sub_40c1f2
push [ esp + 0x4 ]
push rw-data
call sub_408e24
push [ esp + 0x8 ]
call sub_40be2d
push eax
push rw-data
call sub_40ca32
push [ esp + 0x8 ]
mov ecx rw-data
push [ esp + 0x8 ]
call sub_4013ae
push 0x4
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov al [ rw-data ]
mov [ rw-data ] al
mov al [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] al
call sub_40cbbd
retn 0x8
sub_409d16
push ebp
mov ebp esp
push edi
push r--data
push [ ebp + 0x8 ]
call sub_408b0d
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
pop edi
pop ebp
retn 0x10
push ebx
push esi
mov esi 0x8000
push esi
call sub_408a70
mov ebx eax
test ebx ebx
jne r-xdata
push 0x2
push 0x0
push edi
call sub_408c41
push edi
call sub_408c68
push 0x0
cmp eax esi
jae r-xdata
push edi
call sub_408b88
jmp r-xdata
add eax 0xffff8000
push eax
push 0x0
jmp r-xdata
pop esi
pop ebx
test esi esi
jg r-xdata
push edi
call sub_408c41
push edi
push esi
push 0x1
push ebx
call sub_408bfe
push [ ebp + 0x8 ]
mov edi eax
call sub_408b88
lea esi [ edi - 0x4 ]
jmp r-xdata
cmp [ esi + ebx ] 0x50
jne r-xdata
jmp r-xdata
dec esi
cmp [ esi + ebx + 0x1 ] 0x4b
jne r-xdata
push ebx
call sub_408a89
cmp [ esi + ebx + 0x2 ] 0x5
jne r-xdata
cmp [ esi + ebx + 0x3 ] 0x6
jne r-xdata
lea eax [ edi - 0x16 ]
cmp esi eax
jge r-xdata
movzx eax [ esi + ebx + 0x14 ]
test eax eax
jg r-xdata
sub edi esi
lea ecx [ edi - 0x16 ]
cmp eax ecx
jl r-xdata
mov edi [ ebp + 0x14 ]
mov [ edi ] eax
inc eax
push eax
call sub_408a70
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax ecx
push [ edi ]
lea ecx [ esi + ebx + 0x16 ]
push ecx
push eax
call sub_408cb4
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov ecx [ edi ]
mov [ eax + ecx ] 0x0
and [ edi ] eax
jmp r-xdata
sub_409e0c
push ebp
mov ebp esp
sub esp 0x404
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_40bedc
test al al
jne r-xdata
inc esi
mov al [ esi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
xor edi edi
xor bl bl
cmp edi 0x3ff
jae r-xdata
movsx eax al
push eax
call sub_40bedc
test al al
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x1
mov [ ebp + edi - 0x404 ] 0x0
je r-xdata
mov al [ esi ]
cmp al 0x22
jne r-xdata
cmp [ ebp - 0x404 ] 0x2f
je r-xdata
mov [ ebp + edi - 0x404 ] al
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
movsx eax [ ebp - 0x403 ]
push eax
call sub_408ad4
sub eax 0x44
je r-xdata
cmp [ ebp - 0x404 ] 0x2d
jne r-xdata
test bl bl
jne r-xdata
test bl bl
cmp [ esi + 0x2 ] 0x22
jne r-xdata
push 0x400
lea eax [ ebp - 0x402 ]
push eax
push rw-data
dec eax
je r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov [ ebp + edi - 0x404 ] 0x22
mov esi eax
jmp r-xdata
test bl bl
je r-xdata
movsx eax [ ebp - 0x402 ]
push eax
call sub_408ad4
cmp eax 0x4c
jne r-xdata
sub eax 0xb
je r-xdata
inc edi
sete bl
jmp r-xdata
cmp [ ebp - 0x401 ] 0x0
jne r-xdata
push 0x80
lea eax [ ebp - 0x402 ]
push eax
push rw-data
jmp r-xdata
sub eax 0x3
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call sub_408e58
jmp r-xdata
movsx eax [ ebp - 0x402 ]
push eax
call sub_408ad4
sub eax 0x0
je r-xdata
mov [ rw-data ] 0x1
sub eax 0x31
je r-xdata
dec eax
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
sub eax 0x1e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x400
lea eax [ ebp - 0x401 ]
push eax
push rw-data
jmp r-xdata
sub_409f9a
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] bl
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ ecx ] bl
xor eax eax
mov al [ eax ]
cmp al bl
je r-xdata
push esi
xor esi esi
xor ecx ecx
cmp al 0xd
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
inc [ ebp + 0x8 ]
cmp al 0xa
je r-xdata
mov edx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ edx ] al
lea eax [ edi - 0x2 ]
cmp ecx eax
jg r-xdata
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
jmp r-xdata
mov [ eax ] bl
cmp esi ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] bl
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
inc ecx
cmp al bl
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
pop ebx
leave
retn 0x14
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
push esi
call [ ExpandEnvironmentStringsA@IAT ]
lea eax [ edi - 0x1 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x10 ]
call sub_408e58
mov eax [ ebp + 0x10 ]
mov [ eax + edi - 0x1 ] bl
mov [ esi ] bl
inc [ ebp + 0x8 ]
cmp al 0x3d
jne r-xdata
jmp r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov [ eax ] 0x1
sub_40a071
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ WaitForSingleObject@IAT ]
push edi
push 0xa
push [ ebp + 0x8 ]
call esi
mov edi 0x102
jmp r-xdata
cmp eax edi
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageA@IAT ]
push 0xa
push [ ebp + 0x8 ]
call esi
pop edi
pop esi
leave
retn 0x4
sub_40a0b0
push ebp
mov ebp esp
sub esp 0x420
lea eax [ ebp - 0x420 ]
push eax
push 0x400
call [ GetCurrentDirectoryA@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
push 0x6
push [ rw-data ]
lea eax [ ebp - 0x420 ]
push eax
call sub_406f9a
push eax
call sub_408f6a
test eax eax
jne r-xdata
push r--data
call [ SetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x420 ]
push eax
call sub_408d31
push 0x1e
mov [ ebp + eax - 0x41f ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call sub_408c87
push 0x14
pop eax
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x420 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x3
call [ SHFileOperationA@IAT ]
sub_40a141
push ebp
mov ebp esp
mov eax 0x1008
call sub_4012c0
push ebx
push edi
push 0x10000
call sub_408a70
mov ebx eax
xor eax eax
lea ecx [ ebp - 0x1 ]
push ecx
push eax
mov [ ebx ] 0x0
mov [ ebp - 0x8 ] eax
push eax
mov edi 0x1000
jmp r-xdata
lea eax [ ebp - 0x1008 ]
push eax
push [ esi ]
call sub_409f9a
mov [ esi ] eax
test eax eax
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
pop edi
mov eax ebx
pop ebx
leave
retn
cmp [ ebp - 0x1008 ] 0x7d
je r-xdata
cmp [ ebp - 0x1008 ] 0x7b
je r-xdata
lea eax [ ebp - 0x1008 ]
push eax
call sub_408d31
add eax [ ebp - 0x8 ]
cmp eax 0xfffb
ja r-xdata
lea eax [ ebp - 0x1 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1008 ]
push eax
push ebx
call sub_408f8f
push ebx
call sub_408d31
mov [ ebp - 0x8 ] eax
test eax eax
jbe r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebx + eax - 0x1 ] 0x20
jne r-xdata
push r--data
add eax ebx
push eax
call sub_408e24
dec eax
mov [ ebp - 0x8 ] eax
jne r-xdata
sub_40a1fe
push ebx
push esi
xor esi esi
inc esi
xor ebx ebx
mov [ rw-data ] esi
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
push 0x7d
call sub_4089f7
push eax
push esi
push [ rw-data ]
call [ SetDlgItemTextA@IAT ]
cmp [ rw-data ] bl
pop esi
pop ebx
je r-xdata
push esi
push eax
call [ ShowWindow@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
retn
jmp sub_40a0b0
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
call sub_409194
push ebx
push esi
push 0x111
push [ rw-data ]
call [ SendMessageA@IAT ]
jmp r-xdata
sub_40a288
push [ esp + 0x4 ]
push esi
call sub_408e24
cmp [ esi ] 0x0
je r-xdata
retn 0x4
mov eax esi
mov [ eax ] 0x25
cmp cl 0x5c
je r-xdata
mov cl [ eax ]
cmp cl 0x3a
je r-xdata
cmp cl 0x2f
jne r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_40a2b6
push ebp
mov ebp esp
sub esp 0x408
push ebx
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
pop ebx
leave
retn 0x4
cmp [ rw-data ] bl
je r-xdata
push esi
push rw-data
lea esi [ ebp - 0x408 ]
call sub_40a288
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x20006
push ebx
push ebx
push ebx
push r--data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
pop esi
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_408d31
inc eax
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x408 ]
push 0x1
push ebx
push eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40a337
push ebp
mov ebp esp
sub esp 0x80c
cmp [ rw-data ] 0x0
je r-xdata
leave
retn 0x4
push esi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x40c ]
call sub_40a288
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
pop esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x80c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x40c ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x400
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x80c ]
push eax
push [ ebp + 0x8 ]
call sub_408e24
sub_40a3bd
push ebp
mov ebp esp
sub esp 0x41c
call sub_40968e
test al al
je r-xdata
leave
retn 0x4
push edi
push 0x5
push [ ebp + 0x8 ]
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov edi eax
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
pop edi
push ebx
mov ebx [ SendMessageA@IAT ]
push esi
pop esi
pop ebx
push 0x400
lea eax [ ebp - 0x41c ]
push eax
push edi
call [ GetClassNameA@IAT ]
push r--data
lea eax [ ebp - 0x41c ]
push eax
call sub_40be6b
test eax eax
jne r-xdata
push 0x2
push edi
call [ GetWindow@IAT ]
mov edi eax
cmp edi [ ebp - 0x4 ]
je r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
and eax 0x1f
cmp al 0xe
jne r-xdata
inc [ ebp + 0x8 ]
test edi edi
jne r-xdata
push 0x0
push 0x0
push 0x173
push edi
call ebx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x18
push esi
call [ GetObjectA@IAT ]
push [ ebp - 0x14 ]
call sub_40964b
push eax
push [ ebp - 0x18 ]
call sub_409608
push eax
push esi
call sub_409543
push eax
push 0x0
push 0x172
push edi
call ebx
cmp esi [ rw-data ]
je r-xdata
push esi
call [ DeleteObject@IAT ]
sub_40a4b0
push ebp
mov ebp esp
sub esp 0x400
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push eax
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x400 ]
push eax
push 0x0
call sub_4096ad
leave
retn
sub_40a4dd
cmp [ esp + 0x14 ] 0x0
push [ esp + 0x4 ]
je r-xdata
push 0x65
push 0x66
jmp r-xdata
call sub_4089f7
push eax
push 0x0
call sub_40a4b0
add esp 0xc
call sub_409194
xor eax eax
cmp [ rw-data ] eax
sete al
retn 0x14
sub_40a511
push ebp
mov ebp esp
push esi
mov esi [ DialogBoxParamA@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0xc ]
push sub_4097fe
push [ rw-data ]
push r--data
push [ rw-data ]
call esi
push 0x2
pop eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0xc ]
mov [ eax ] 0x59
call [ SetFileAttributesA@IAT ]
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x4e
jmp r-xdata
dec eax
je r-xdata
pop esi
pop ebp
retn 0x18
mov [ rw-data ] 0x1
dec eax
jne r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
push sub_409afa
push [ rw-data ]
push r--data
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
mov [ eax ] 0x43
jmp r-xdata
dec eax
jne r-xdata
cmp [ rw-data ] 0x0
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x52
jmp r-xdata
mov [ rw-data ] 0x1
sub_40a5e1
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
cmp [ rw-data ] bl
je r-xdata
cmp [ ebp + 0x8 ] 0x2
mov eax [ rw-data ]
mov esi eax
jne r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push rw-data
push esi
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
call sub_408e58
mov esi [ ebp + 0x10 ]
push rw-data
push esi
call sub_408e24
push [ ebp + 0xc ]
push sub_409b7a
push esi
push r--data
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
test eax eax
jne r-xdata
xor esi esi
xor eax eax
cmp [ esi ] bl
pop esi
setne al
pop ebx
pop ebp
retn 0x10
push 0x80
push esi
push rw-data
mov esi [ ebp + 0x10 ]
mov [ esi ] bl
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ esi ] bl
je r-xdata
sub_40a67e
push ebp
mov ebp esp
sub esp 0x844
push esi
mov esi eax
push esi
call sub_408d31
cmp eax 0x3f6
jae r-xdata
pop esi
leave
retn 0x4
push ebx
push edi
push 0x3c
pop edi
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x44 ]
push eax
call sub_408c87
mov cl [ esi ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] 0x5c0
cmp cl 0x22
jne r-xdata
mov [ ebp - 0x34 ] esi
lea eax [ esi + 0x1 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] bl
jne r-xdata
mov ecx esi
xor eax eax
cmp cl bl
je r-xdata
push [ ebp - 0x34 ]
mov [ ebp - 0x28 ] 0x1
call sub_407148
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ eax + esi ] 0x20
je r-xdata
jmp r-xdata
push ebx
push [ ebp - 0x34 ]
call sub_403525
mov [ ebp - 0x1 ] al
cmp al bl
je r-xdata
push r--data
push eax
call sub_408f47
test eax eax
jne r-xdata
mov [ ebp - 0x30 ] rw-data
add eax esi
cmp [ eax ] 0x20
jne r-xdata
cmp [ eax + esi + 0x1 ] 0x2f
je r-xdata
inc eax
cmp [ eax + esi ] bl
jne r-xdata
cmp [ ebp + 0x8 ] bl
je r-xdata
lea eax [ ebp - 0x844 ]
push eax
push [ ebp - 0x34 ]
call sub_403611
lea eax [ ebp - 0x844 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] r--data
inc eax
mov [ ebp - 0x30 ] eax
mov [ eax ] bl
inc eax
lea ecx [ eax + esi ]
cmp [ ecx ] bl
jne r-xdata
cmp [ eax + esi ] 0x22
je r-xdata
jmp r-xdata
mov edi [ ShellExecuteExA@IAT ]
lea eax [ ebp - 0x44 ]
push eax
call edi
test eax eax
setne al
cmp al bl
jne r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ ecx ] 0x22
jne r-xdata
jmp r-xdata
mov [ eax + esi ] 0x20
mov esi [ ShowWindow@IAT ]
mov [ ebp - 0x1 ] bl
cmp [ rw-data ] bl
jne r-xdata
and [ ebp - 0x40 ] 0xfffffbff
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x34 ] esi
call edi
test eax eax
setne al
cmp al bl
je r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x444 ]
push eax
call sub_408e24
push r--data
lea eax [ ebp - 0x444 ]
push eax
call sub_408f8f
push ebx
lea eax [ ebp - 0x444 ]
push eax
call sub_403525
test al al
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x8 ] bl
je r-xdata
pop edi
pop ebx
push 0x7d0
push [ ebp - 0xc ]
call [ WaitForInputIdle@IAT ]
push [ ebp - 0xc ]
call sub_40a071
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
push r--data
push [ ebp - 0x8 ]
call sub_408f47
test eax eax
je r-xdata
push ebx
push [ rw-data ]
call esi
mov [ ebp - 0x1 ] 0x1
xor eax eax
cmp [ ebp + 0x8 ] bl
sete al
dec eax
and eax 0xfffffce0
add eax 0x3e8
push eax
cmp [ ebp + 0x8 ] bl
jne r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
push 0x1
push [ rw-data ]
call esi
push 0x1b58
jmp r-xdata
call [ Sleep@IAT ]
sub_40a897
push ebp
mov ebp esp
mov eax 0xb4dc
call sub_4012c0
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0xc
push edi
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x5 ]
push eax
lea eax [ ebp - 0x1c34 ]
push eax
lea eax [ ebp - 0x54dc ]
push eax
push [ ebp + 0xc ]
mov edi 0x1000
call sub_409f9a
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
pop edi
push ebx
push esi
push [ ebp - 0x4 ]
push eax
call sub_40928c
add [ ebp - 0x4 ] 0x1000
dec [ ebp - 0xc ]
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] 0xc
ja r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xd
jb r-xdata
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x5 ]
push eax
lea eax [ ebp - 0x1c34 ]
push eax
lea eax [ ebp - 0x54dc ]
push eax
push [ ebp + 0xc ]
mov edi 0x1000
call sub_409f9a
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp [ eax * 4 + jump_table_40b367 ]
mov eax [ ebp - 0x4 ]
push [ eax * 4 + rw-data ]
lea eax [ ebp - 0x54dc ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov esi [ GetFileAttributesA@IAT ]
mov edi [ wsprintfA@IAT ]
lea ecx [ ebp - 0xb4dc ]
mov ebx rw-data
lea eax [ ebp - 0x1c34 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] 0x6
pop esi
pop ebx
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
movsx eax [ ebp - 0x1c34 ]
sub eax 0x0
je r-xdata
movsx eax [ ebp - 0x1c34 ]
push eax
call sub_408ad4
cmp eax 0x46
je r-xdata
cmp [ ebp + 0x10 ] 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x3
jne r-xdata
cmp [ ebp + 0x10 ] 0x5
jne r-xdata
cmp [ ebp + 0x10 ] 0x6
jne r-xdata
cmp [ ebp + 0x10 ] 0x7
jne r-xdata
lea eax [ ebp - 0x434 ]
push eax
push 0x400
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0xc34 ]
push eax
call sub_408e24
lea eax [ ebp - 0xc34 ]
push eax
call sub_40715c
lea eax [ ebp - 0x1c34 ]
push eax
lea eax [ ebp - 0xc34 ]
push eax
call sub_408f8f
lea ecx [ ebp - 0x40dc ]
call sub_40442f
lea eax [ ebp - 0xc34 ]
push eax
lea ecx [ ebp - 0x40dc ]
call sub_40445f
lea ecx [ ebp - 0x30d4 ]
call sub_40355c
push 0x0
lea eax [ ebp - 0x30d4 ]
push eax
lea ecx [ ebp - 0x40dc ]
call sub_40482f
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x1c34 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movsx eax [ ebp - 0x1c34 ]
push eax
call sub_40beca
test al al
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
sub eax 0x30
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp eax 0x55
je r-xdata
push 0x0
cmp [ ebp + 0x10 ] 0x7
jne r-xdata
lea eax [ ebp - 0xc34 ]
push eax
push 0x400
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0xc34 ]
push eax
call sub_40715c
and [ ebp - 0x4 ] 0x0
push 0x0
mov ebx r--data
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x1c34 ] 0x0
je r-xdata
push 0x1
jmp r-xdata
movsx eax [ ebp - 0xb4dc ]
push eax
call sub_408ad4
sub eax 0x50
je r-xdata
mov [ rw-data ] 0x1
lea ecx [ ebp - 0x40dc ]
call sub_40444c
jmp r-xdata
mov ebx r--data
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push r--data
push eax
call sub_408f8f
cmp [ ebp - 0x1c34 ] 0x22
lea esi [ ebp - 0x1c34 ]
mov [ ebp - 0x434 ] 0x0
jne r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
movsx eax [ ebp - 0x1c34 ]
sub eax 0x30
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x0
dec eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0xc34 ]
push eax
lea eax [ ebp - 0x834 ]
push ebx
push eax
call edi
add esp 0x14
lea eax [ ebp - 0x834 ]
push eax
call esi
cmp eax 0xffffffff
jne r-xdata
lea esi [ ebp + 0xc ]
call sub_40a141
mov [ rw-data ] eax
lea eax [ ebp - 0x1c34 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
lea eax [ ebp - 0x1c34 ]
call sub_40a67e
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x30d4 ]
push eax
call esi
cmp eax 0xffffffff
je r-xdata
call sub_4069f0
cmp eax 0x4
je r-xdata
lea esi [ ebp + 0xc ]
call sub_40a141
mov edi eax
lea edi [ ebp - 0x1c34 ]
jmp r-xdata
push esi
call sub_408d31
cmp eax 0x400
jae r-xdata
lea esi [ ebp - 0x1c33 ]
dec eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x2
inc [ ebp - 0x4 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x834 ]
push eax
push 0x65
push [ ebp + 0x8 ]
call [ SetDlgItemTextA@IAT ]
cmp [ ebp - 0x1c34 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xc34 ]
push eax
call sub_403525
test al al
jne r-xdata
lea eax [ ebp - 0xa4db ]
push eax
lea eax [ ebp - 0xc34 ]
push eax
call sub_408e24
push 0x22
lea eax [ ebp - 0xc33 ]
push eax
call sub_406f6a
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xb
jmp r-xdata
dec eax
je r-xdata
push 0x0
lea eax [ ebp - 0x30d4 ]
push eax
lea ecx [ ebp - 0x40dc ]
call sub_40482f
test al al
jne r-xdata
lea eax [ ebp - 0x30d4 ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2034 ]
push eax
lea eax [ ebp - 0x434 ]
push eax
call sub_406ebf
lea eax [ ebp - 0x2034 ]
push eax
call sub_40715c
lea eax [ ebp - 0x434 ]
push eax
call sub_408d31
mov [ ebp - 0xc ] eax
cmp eax 0x4
jb r-xdata
push [ rw-data ]
call sub_408d31
mov esi eax
xor esi esi
jmp r-xdata
test bl bl
je r-xdata
mov al [ esi ]
cmp al 0x2e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x64dc ] 0x0
je r-xdata
xor edi edi
cmp [ ebp - 0xc34 ] 0x0
lea esi [ ebp - 0xc34 ]
je r-xdata
mov [ eax ] 0x0
inc eax
push eax
lea eax [ ebp - 0x834 ]
push eax
call sub_408e24
jmp r-xdata
lea eax [ ebp - 0xa4dc ]
push eax
lea eax [ ebp - 0xc34 ]
push eax
mov [ ebp - 0x2034 ] 0x0
mov [ ebp - 0x834 ] 0x0
call sub_408e24
cmp [ ebp - 0xc34 ] 0x22
jne r-xdata
mov [ ebp - 0x4 ] 0x7
jmp r-xdata
mov [ ebp - 0x4 ] 0x10
jmp r-xdata
push 0x0
lea eax [ ebp - 0x30d4 ]
push eax
call [ SetFileAttributesA@IAT ]
cmp [ ebp - 0x24c4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
push eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1c34 ]
push eax
call sub_406ddb
test al al
jne r-xdata
lea eax [ ebp - 0x2034 ]
push eax
call sub_408d31
cmp [ ebp - 0xc ] eax
ja r-xdata
push edi
push eax
call sub_408f8f
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov [ eax ] 0x0
push edi
call sub_408d31
lea eax [ eax + esi + 0x5 ]
push eax
push [ rw-data ]
call sub_408aa8
mov [ rw-data ] eax
test bl bl
je r-xdata
cmp al 0x5c
je r-xdata
cmp [ esi + 0x1 ] 0x5c
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push 0x2c
lea eax [ ebp - 0x1c34 ]
push eax
mov [ ebp - 0x234 ] 0x0
call sub_408d5a
test eax eax
jne r-xdata
lea eax [ ebp - 0x44dc ]
push eax
lea eax [ ebp - 0xc34 ]
push eax
call sub_403611
push [ ebp - 0x4 ]
lea eax [ ebp - 0x434 ]
push eax
call sub_409429
lea eax [ ebp - 0x434 ]
push eax
call sub_40715c
cmp [ ebp - 0x94dc ] 0x0
je r-xdata
lea eax [ ebp - 0x2034 ]
push eax
lea eax [ ebp - 0x64dc ]
push eax
call sub_403611
mov bl [ esi ]
cmp bl 0x20
je r-xdata
lea eax [ ebp - 0x30d4 ]
push eax
lea eax [ ebp - 0x834 ]
push ebx
push eax
call edi
add esp 0x10
lea eax [ ebp - 0x834 ]
push eax
call esi
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x30d4 ]
push eax
call sub_408d31
push 0x1e
mov [ ebp + eax - 0x30d3 ] 0x0
push 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_408c87
push 0x14
pop eax
mov [ ebp - 0x24 ] ax
lea eax [ ebp - 0x30d4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x30 ] 0x3
call [ SHFileOperationA@IAT ]
push edi
call sub_408a89
jmp r-xdata
push esi
lea eax [ ebp - 0x434 ]
push eax
call sub_408e24
test al al
je r-xdata
add esi 0x2
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x234 ] 0x0
jne r-xdata
xor esi esi
cmp [ ebp - 0x1c34 ] 0x0
je r-xdata
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x34d4 ]
push eax
call sub_408e24
cmp [ ebp - 0x74dc ] 0x0
lea eax [ ebp - 0x74dc ]
jne r-xdata
lea eax [ ebp - 0x94dc ]
push eax
lea eax [ ebp - 0x434 ]
push eax
call sub_408f8f
lea eax [ ebp - 0x434 ]
push eax
call sub_40715c
push 0x0
lea eax [ ebp - 0xc34 ]
push eax
mov [ esi ] 0x0
call sub_403525
test al al
je r-xdata
cmp bl 0x2f
jne r-xdata
inc [ ebp - 0x4 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x834 ]
push eax
lea eax [ ebp - 0x30d4 ]
push eax
call [ MoveFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x434 ]
push eax
push ebx
call sub_408e24
lea eax [ ebp - 0x434 ]
push eax
call sub_40a337
push 0x65
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov esi eax
lea eax [ ebp - 0x434 ]
push eax
push esi
call [ SetWindowTextA@IAT ]
push ebx
push 0x0
push 0x143
push esi
call [ SendMessageA@IAT ]
lea eax [ ebp - 0x434 ]
push eax
push ebx
call sub_408e96
test eax eax
je r-xdata
cmp [ eax + 0x1 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ esi + 0x1 ] 0x3a
je r-xdata
lea eax [ ebp - 0x1c34 ]
push eax
call sub_409508
push 0x24
lea eax [ ebp - 0x234 ]
push eax
lea eax [ ebp - 0x1c34 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x1434 ] 0x0
call [ MessageBoxA@IAT ]
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0xb4dc ]
push eax
lea eax [ ebp - 0x1c34 ]
push eax
call sub_408e24
lea eax [ ebp - 0xa4dc ]
push eax
lea eax [ ebp - 0x234 ]
push eax
call sub_408e24
cmp [ ebp + esi - 0x1c34 ] 0x40
je r-xdata
push eax
call sub_406f9a
push eax
lea eax [ ebp - 0x434 ]
push eax
call sub_408f8f
lea eax [ ebp - 0x434 ]
push eax
call sub_407148
test eax eax
je r-xdata
lea eax [ ebp - 0xa4dc ]
mov [ esi ] bl
mov edi esi
cmp bl 0x2f
jne r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
call sub_4069f0
test eax eax
je r-xdata
lea eax [ ebp - 0x434 ]
push eax
push 0x0
push 0x143
push esi
call [ SendMessageA@IAT ]
jmp r-xdata
mov [ eax ] 0x0
cmp [ ebp - 0x434 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push r--data
push [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x400
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x10 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
push eax
push [ ebp + 0x8 ]
mov [ rw-data ] 0x1
mov [ rw-data ] eax
call [ EndDialog@IAT ]
lea eax [ ebp + esi - 0x1c33 ]
push eax
lea eax [ ebp - 0x234 ]
push eax
call sub_408e24
mov [ ebp + esi - 0x1c34 ] 0x0
inc esi
cmp [ ebp + esi - 0x1c34 ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x434 ]
push eax
call sub_408f8f
push r--data
push eax
call sub_408f47
test eax eax
je r-xdata
test edi edi
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
lea eax [ esi + 0x1 ]
push eax
mov [ ebp - 0x834 ] bl
lea eax [ ebp - 0x833 ]
jmp r-xdata
push 0x4
push 0x0
lea eax [ ebp - 0x834 ]
push eax
call [ MoveFileExA@IAT ]
push esi
call sub_408d31
mov edi eax
lea eax [ ebp - 0x434 ]
push eax
call sub_408d31
add edi eax
cmp edi 0x3ff
jae r-xdata
lea eax [ ebp - 0x434 ]
push eax
call sub_408d31
lea ecx [ ebp - 0x434 ]
dec ecx
cmp [ eax + ecx ] 0x5c
je r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x34d4 ]
push eax
push 0x1
push 0x1000
call [ SHChangeNotify@IAT ]
jmp r-xdata
push 0x1
push 0x0
lea eax [ ebp - 0x434 ]
push eax
call sub_40379f
movsx eax [ ebp - 0x834 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x834 ]
and eax ecx
push eax
movsx eax [ ebp - 0x2034 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x2034 ]
and eax ecx
push eax
movsx eax [ ebp - 0x84dc ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x84dc ]
and eax ecx
push eax
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x44dc ]
push eax
call sub_409324
cmp [ ebp - 0x34d4 ] 0x0
je r-xdata
mov [ edi ] 0x0
push esi
lea eax [ ebp - 0x834 ]
push eax
call sub_408e24
mov [ edi ] bl
jmp r-xdata
push 0x22
lea eax [ ebp - 0x434 ]
push eax
call sub_408d86
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x434 ]
push eax
call sub_408f8f
jmp r-xdata
push r--data
lea eax [ ebp - 0x434 ]
push eax
call sub_408f8f
sub_40b39b
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40178c
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax [ rw-data ]
push esi
mov esi [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
push 0x1
push 0x80
push edi
call esi
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
push edi
call sub_40a3bd
push 0x65
push edi
call [ GetDlgItem@IAT ]
push 0x10000
push 0x0
mov ebx eax
push 0x435
push ebx
call esi
push 0xf
call [ GetSysColor@IAT ]
push eax
push 0x0
push 0x443
push ebx
call esi
push 0x3
push [ rw-data ]
push edi
call sub_40a897
mov eax [ rw-data ]
pop esi
test eax eax
je r-xdata
push eax
push ebx
push 0x172
push 0x66
push edi
call [ SendDlgItemMessageA@IAT ]
pop edi
pop ebx
pop ebp
retn 0x10
push 0x1
dec eax
je r-xdata
mov ecx [ rw-data ]
push eax
push ebx
push [ rw-data ]
call sub_4055bd
push [ rw-data ]
call sub_408a89
jmp r-xdata
push ebx
jmp r-xdata
xor eax eax
inc eax
push edi
call [ EndDialog@IAT ]
sub_40b494
push ebp
mov ebp esp
mov eax 0x366c
call sub_4012c0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40178c
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] esi
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
push 0x1
push 0x80
push esi
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
push esi
call sub_40a3bd
push 0x67
push esi
call [ GetDlgItem@IAT ]
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call [ GetWindowRect@IAT ]
push 0x2
lea eax [ ebp - 0x10 ]
push eax
push esi
push ebx
call [ MapWindowPoints@IAT ]
mov edi [ SetMenu@IAT ]
push ebx
push [ ebp + 0xc ]
call edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push ebx
push [ rw-data ]
inc eax
push 0x67
push esi
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
inc eax
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push 0x50a10844
push r--data
push r--data
push ebx
call [ CreateWindowExA@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax ebx
jne r-xdata
push eax
push ebx
push 0x172
push 0x69
push esi
call [ SendDlgItemMessageA@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x400
lea eax [ ebp - 0x44c ]
push eax
push 0x65
push esi
call [ GetDlgItemTextA@IAT ]
cmp [ rw-data ] ebx
je r-xdata
dec eax
je r-xdata
mov edi [ ebp + 0x10 ]
push 0x203
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
push edi
call [ SetWindowPos@IAT ]
push [ ebp + 0xc ]
call [ DestroyWindow@IAT ]
push ebx
push ebx
push 0x31
push esi
mov [ ebp + 0xc ] edi
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
push 0x67
push [ ebp + 0xc ]
call edi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub eax 0x64
je r-xdata
push __pe_WINRAR_export_address_table
push ebx
push 0x435
push edi
call [ SendMessageA@IAT ]
push ebx
push eax
push 0x30
push edi
call [ SendMessageA@IAT ]
lea eax [ ebp - 0x84c ]
push eax
push 0x400
call [ GetCurrentDirectoryA@IAT ]
push 0x65
push esi
call [ GetDlgItem@IAT ]
mov [ ebp + 0x10 ] eax
mov eax rw-data
cmp [ rw-data ] bl
jne r-xdata
push 0x67
push esi
call [ GetDlgItem@IAT ]
mov [ ebp + 0xc ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
push 0x1
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
jmp r-xdata
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push 0x64
call sub_4089f7
push eax
push esi
call sub_4012eb
test al al
je r-xdata
push eax
push [ ebp + 0x10 ]
call [ SetWindowTextA@IAT ]
push [ ebp + 0x10 ]
call sub_409463
push rw-data
push rw-data
push rw-data
push rw-data
mov [ rw-data ] bl
call sub_409d16
cmp [ rw-data ] ebx
jbe r-xdata
lea eax [ ebp - 0x84c ]
push [ ebp + 0xc ]
call [ SetFocus@IAT ]
push ebx
push ebx
lea eax [ ebp - 0x44c ]
push eax
mov [ ebp + 0xf ] bl
call sub_40379f
mov edi [ GetLastError@IAT ]
test al al
jne r-xdata
mov edi [ SendMessageA@IAT ]
push 0xffffffff
push ebx
push 0xb1
push eax
call edi
push r--data
push ebx
push 0xc2
push [ ebp + 0xc ]
call edi
cmp [ rw-data ] ebx
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
push ebx
jmp r-xdata
lea eax [ ebp - 0x44c ]
push eax
push 0x65
push esi
call [ SetDlgItemTextA@IAT ]
cmp [ rw-data ] bl
jne r-xdata
push 0x7
push [ rw-data ]
push esi
call sub_40a897
lea eax [ ebp - 0x44c ]
push eax
call [ SetCurrentDirectoryA@IAT ]
test eax eax
setne [ ebp + 0x13 ]
cmp [ ebp + 0x13 ] bl
jne r-xdata
call edi
cmp eax 0x5
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push esi
call [ EndDialog@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jbe r-xdata
mov [ ebp - 0x366c ] bl
mov edi 0x96
call sub_4069f0
test eax eax
je r-xdata
call edi
cmp eax 0x5
jne r-xdata
mov [ ebp + 0xf ] 0x1
cmp eax 0x3
jne r-xdata
xor edi edi
inc edi
push 0x7d
mov [ rw-data ] edi
call sub_4089f7
push eax
push edi
push esi
call [ SetDlgItemTextA@IAT ]
mov eax [ rw-data ]
cmp eax 0x9
jne r-xdata
xor edi edi
inc edi
push ebx
push [ rw-data ]
push esi
call sub_40a897
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
lea eax [ ebp - 0x366c ]
push eax
call sub_408f8f
push edi
call sub_4089f7
push eax
lea eax [ ebp - 0x366c ]
push eax
call sub_408f8f
inc edi
cmp edi 0x9b
jle r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x13 ] bl
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov [ ebp + 0xf ] 0x1
xor ecx ecx
cmp eax 0x3
setne cl
dec ecx
and ecx 0x5
add ecx 0x7f
mov edi ecx
lea edi [ eax + 0x7a ]
jmp r-xdata
cmp [ rw-data ] bl
je r-xdata
push ebx
push [ ebp + 0x10 ]
call [ EnableWindow@IAT ]
xor edi edi
inc edi
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0x366c ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call sub_4055bd
lea eax [ ebp - 0x44c ]
push eax
call sub_40a2b6
push ebx
xor edi edi
push 0x66
inc edi
push esi
mov [ rw-data ] edi
call sub_40176e
push ebx
push 0x65
push esi
call sub_40176e
push ebx
push edi
push esi
call sub_40176e
push 0x5
push [ rw-data ]
push esi
call sub_40a897
push 0x2
push [ rw-data ]
push esi
call sub_40a897
push rw-data
push rw-data
call sub_409c89
push 0x6
push [ rw-data ]
push esi
call sub_40a897
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ ebp + 0x13 ] bl
je r-xdata
push 0x30
push 0x7e
call sub_4089f7
push eax
push edi
call sub_4089f7
push eax
push esi
call [ MessageBoxA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push 0x66
push esi
call sub_40176e
push ebx
push 0x65
push esi
call sub_40176e
push edi
push [ rw-data ]
push esi
call sub_40a897
jmp r-xdata
push ebx
push sub_40b39b
push ebx
push r--data
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push eax
push [ ebp + 0xc ]
push [ rw-data ]
call sub_4055bd
push [ rw-data ]
call sub_408a89
push edi
push edi
push esi
call sub_40176e
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0xf ] bl
sete [ ebp + 0xf ]
cmp [ ebp + 0xf ] bl
jne r-xdata
mov [ ebp + 0xf ] bl
call [ GetTickCount@IAT ]
push eax
lea eax [ ebp - 0x84c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ ebp - 0x166c ]
call sub_402e44
push 0x1
push ebx
lea eax [ ebp - 0x84c ]
push eax
lea ecx [ ebp - 0x166c ]
call sub_40311a
mov [ ebp + 0x13 ] al
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
push edi
push esi
mov [ rw-data ] edi
call [ EndDialog@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push 0x82
call sub_4089f7
push eax
lea eax [ ebp - 0x44c ]
push eax
lea eax [ ebp - 0xa4c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push 0x1
mov ecx rw-data
call sub_4017e1
push 0x30
push 0x7e
call sub_4089f7
push eax
lea eax [ ebp - 0xa4c ]
push eax
push esi
call [ MessageBoxA@IAT ]
inc [ rw-data ]
push 0x400
lea eax [ ebp - 0x84c ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push rw-data
push rw-data
lea eax [ ebp - 0x44c ]
push eax
lea eax [ ebp - 0x14d8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
push r--data
mov edi 0x10000
push edi
push ebx
push 0x8000004
lea eax [ ebp - 0x84c ]
mov [ ebp - 0x3c ] eax
push ebx
lea eax [ ebp - 0x14d8 ]
push 0xffffffff
mov [ ebp - 0x4c ] 0x3c
mov [ ebp - 0x48 ] 0x40
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r--data
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x2c ] ebx
call [ CreateFileMappingA@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x166c ]
call sub_402fe2
call edi
cmp eax 0x5
jne r-xdata
mov eax edi
push 0x7d
call sub_4089f7
push eax
push edi
push esi
call [ SetDlgItemTextA@IAT ]
push ebx
push edi
push 0x111
push esi
cmp eax edi
jne r-xdata
push 0x4
push [ rw-data ]
push ebx
call sub_40a897
lea eax [ ebp - 0x4c ]
push eax
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push 0x2
push eax
call [ MapViewOfFile@IAT ]
mov [ ebp + 0x14 ] eax
call [ GetCommandLineA@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp + 0xf ] 0x1
call [ PostMessageA@IAT ]
call [ SendMessageA@IAT ]
jmp r-xdata
mov [ ebp + 0xf ] 0x1
push 0x2710
push [ ebp - 0x14 ]
call [ WaitForInputIdle@IAT ]
push 0x1f4
call [ Sleep@IAT ]
mov eax [ ebp - 0x14 ]
mov [ rw-data ] eax
jmp r-xdata
push [ ebp + 0x14 ]
call [ UnmapViewOfFile@IAT ]
push edi
push eax
push [ ebp + 0x14 ]
call sub_40bf47
cmp [ ebp + 0xf ] bl
je r-xdata
push [ ebp + 0x10 ]
call [ CloseHandle@IAT ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
sub_40bc0e
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
xor ebx ebx
push ebx
call [ OleInitialize@IAT ]
mov ecx rw-data
call sub_40cabf
call [ GetCommandLineA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov edi 0x400
push edi
mov esi rw-data
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
push esi
push r--data
call [ SetEnvironmentVariableA@IAT ]
call sub_4069f0
test eax eax
je r-xdata
push esi
call sub_409e0c
cmp [ rw-data ] bl
je r-xdata
xor eax eax
mov [ rw-data ] ax
push edi
push rw-data
push ebx
call [ GetModuleFileNameW@IAT ]
jmp r-xdata
push esi
push r--data
call [ SetEnvironmentVariableA@IAT ]
push r--data
push ebx
push 0x4
call [ OpenFileMappingA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push 0x80
push ebx
push rw-data
call sub_408c87
cmp [ rw-data ] ebx
jbe r-xdata
call sub_40a0b0
push ebx
call [ GetModuleHandleA@IAT ]
mov edi eax
push 0x64
push edi
mov [ rw-data ] edi
call [ LoadIconA@IAT ]
push 0x65
push [ rw-data ]
mov [ rw-data ] eax
call [ LoadBitmapA@IAT ]
lea ecx [ ebp - 0x8 ]
mov [ rw-data ] eax
call sub_40cd05
push esi
mov ecx rw-data
call sub_4089e0
lea ecx [ ebp - 0x40 ]
call sub_404ce2
lea ecx [ ebp - 0x24 ]
call sub_404ce2
push 0x64
call sub_409608
push 0x64
mov [ ebp - 0x28 ] eax
call sub_409608
push ebx
push sub_40b494
mov [ ebp - 0xc ] eax
push ebx
lea eax [ ebp - 0x40 ]
mov [ rw-data ] eax
push r--data
lea eax [ ebp - 0x24 ]
push edi
mov [ rw-data ] eax
call [ DialogBoxParamA@IAT ]
lea ecx [ ebp - 0x24 ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_404cf8
lea ecx [ ebp - 0x40 ]
call sub_404cf8
lea ecx [ ebp - 0x8 ]
call sub_40cd7d
cmp [ rw-data ] bl
je r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x10000
push ebx
push ebx
push 0x4
push edi
call [ MapViewOfFile@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push [ rw-data ]
mov esi [ DeleteObject@IAT ]
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ rw-data ]
call sub_408a89
push esi
call [ UnmapViewOfFile@IAT ]
push esi
push r--data
call [ SetEnvironmentVariableA@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] 0x2
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
call [ OleUninitialize@IAT ]
push [ rw-data ]
call [ ExitProcess@IAT ]
int3
push eax
call sub_40a071
push 0xff
mov ecx rw-data
call sub_4017e1
sub_40bef4
mov ecx [ esp + 0x4 ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x20
jb r-xdata
inc al
xor al al
jmp r-xdata
cmp al 0x7f
ja r-xdata
retn 0x4
inc ecx
sub_40bf12
mov edx [ esp + 0x4 ]
movzx eax [ edx ]
xor ecx ecx
test ax ax
je r-xdata
mov al 0x1
movzx eax ax
xor al al
jmp r-xdata
cmp ax 0x7f
ja r-xdata
retn 0x4
inc ecx
movzx eax [ edx + ecx * 2 ]
test ax ax
jne r-xdata
cmp ax 0x20
jb r-xdata
sub_40bf47
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
lea eax [ esi - 0x1 ]
push eax
push [ esp + 0x14 ]
push edi
call sub_408e58
mov [ edi + esi - 0x1 ] 0x0
sub_40bf6f
push ebp
mov ebp esp
sub esp 0x3c
push esi
push edi
xor esi esi
push ebx
push 0x0
push 0xa
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401120
add cl 0x30
mov [ ebp + esi - 0x3c ] cl
inc esi
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0xc ] edx
jne r-xdata
mov edi [ ebp + 0x10 ]
pop ebx
test esi esi
jbe r-xdata
mov [ esi + edi ] 0x0
pop edi
pop esi
leave
retn 0xc
lea ecx [ ebp + esi - 0x3d ]
mov dl [ ecx ]
mov [ eax + edi ] dl
inc eax
dec ecx
cmp eax esi
jb r-xdata
sub_40bfcb
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
push edi
push [ esi ]
call sub_408aa8
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_40195b
sub_40c038
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
lea eax [ edi + edi ]
push eax
push [ esi ]
call sub_408aa8
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_40195b
sub_40c09a
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi + 0xc ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x2c ] edi
call sub_40c00f
lea ecx [ esi + 0x10 ]
call sub_40c00f
lea ecx [ esi + 0x20 ]
call sub_40c00f
mov [ esi + 0x30 ] edi
mov [ esi + 0xf4 ] edi
pop edi
pop esi
retn
sub_40c0ca
push ebp
mov ebp esp
push ecx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
mov edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] edi
call sub_408d31
inc eax
push eax
mov ecx esi
call sub_40bfcb
mov eax [ esi ]
push [ ebp + 0x8 ]
add eax edi
push eax
call sub_408e24
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
inc [ esi + 0x30 ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
leave
retn 0x8
cmp [ eax ] 0x0
je r-xdata
push ebx
mov ebx [ esi + 0x24 ]
lea edi [ esi + 0x20 ]
push 0x1
mov ecx edi
call sub_401f35
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov [ eax + ebx * 4 ] ecx
mov ebx [ esi + 0x14 ]
lea edi [ esi + 0x10 ]
call sub_40ca1b
inc eax
push eax
mov ecx edi
call sub_40c038
mov eax [ edi ]
push [ ebp + 0xc ]
lea eax [ eax + ebx * 2 ]
push eax
call sub_40ca32
pop ebx
sub_40c14d
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x4 ]
jb r-xdata
mov ecx [ esi ]
add ecx eax
push edi
mov edi [ esp + 0xc ]
mov [ edi ] ecx
mov eax [ esi + 0x2c ]
cmp eax [ esi + 0x24 ]
jae r-xdata
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
xor al al
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov ecx [ ecx + eax * 4 ]
cmp ecx [ esi + 0xc ]
jne r-xdata
pop esi
retn 0x8
push [ edi ]
call sub_408d31
inc eax
add [ esi + 0xc ] eax
mov al 0x1
pop edi
and [ eax ] 0x0
inc eax
mov [ esi + 0x2c ] eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_40ca1b
inc eax
add [ esi + 0x1c ] eax
jmp r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x10 ]
lea ecx [ edx + ecx * 2 ]
mov [ eax ] ecx
sub_40c1ca
xor eax eax
push esi
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
call sub_40c09a
mov eax esi
pop esi
retn
sub_40c200
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_40c14d
test al al
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_408e58
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call sub_40be2d
push eax
push [ ebp + 0xc ]
call sub_40ca4f
leave
retn 0xc
sub_40c262
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
mov ax [ esi ]
mov [ ebp - 0x18 ] ax
mov ax [ esi + 0x4 ]
mov [ ebp - 0x16 ] ax
mov ax [ esi + 0x8 ]
mov [ ebp - 0x12 ] ax
mov ax [ esi + 0xc ]
mov [ ebp - 0x10 ] ax
mov ax [ esi + 0x10 ]
mov [ ebp - 0xe ] ax
mov ax [ esi + 0x14 ]
mov [ ebp - 0xc ] ax
xor eax eax
mov [ ebp - 0xa ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov esi [ esi + 0x18 ]
add [ ebp - 0x8 ] esi
cmp [ ebp - 0x8 ] esi
pop esi
jae r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
leave
retn 0x4
inc [ ebp - 0x4 ]
sub_40c2ce
mov eax [ ecx ]
sub eax 0x3c
shl eax 0x4
or eax [ ecx + 0x4 ]
shl eax 0x5
or eax [ ecx + 0x8 ]
shl eax 0x5
or eax [ ecx + 0xc ]
shl eax 0x6
or eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x14 ]
shl eax 0x5
shr ecx 0x1
or eax ecx
retn
sub_40c2f6
mov eax [ esp + 0x4 ]
mov edx eax
and edx 0x1f
add edx edx
mov [ ecx + 0x14 ] edx
and [ ecx + 0x18 ] 0x0
mov edx eax
shr edx 0x5
and edx 0x3f
mov [ ecx + 0x10 ] edx
mov edx eax
shr edx 0xb
and edx 0x1f
mov [ ecx + 0xc ] edx
mov edx eax
shr edx 0x10
and edx 0x1f
mov [ ecx + 0x8 ] edx
mov edx eax
shr edx 0x15
shr eax 0x19
and edx 0xf
add eax 0x7bc
mov [ ecx + 0x4 ] edx
mov [ ecx ] eax
retn 0x4
sub_40c341
mov ecx [ esp + 0x4 ]
test cl 0x3
jne r-xdata
xor eax eax
push esi
mov eax ecx
push 0x64
cdq
pop esi
idiv esi
pop esi
test edx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax ecx
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
retn 0x4
sub_40c376
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov esi ecx
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx edi [ ebp - 0x18 ]
movzx eax [ ebp - 0x1a ]
movzx ecx [ ebp - 0x1e ]
movzx edx [ ebp - 0x20 ]
mov [ esi + 0xc ] edi
movzx edi [ ebp - 0x16 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] edi
movzx edi [ ebp - 0x14 ]
dec eax
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x14 ] edi
movzx edi [ ebp - 0x1c ]
inc eax
mov [ esi ] edx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x1c ] edi
cmp ecx eax
jbe r-xdata
cmp ecx 0x2
jbe r-xdata
mov edi rw-data
push ebx
xor eax eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
pop edi
mov [ esi + 0x18 ] eax
mov eax esi
pop esi
leave
retn 0x4
push edx
call sub_40c341
test al al
je r-xdata
mov ebx [ edi ]
add [ esi + 0x20 ] ebx
inc eax
add edi 0x4
cmp eax ecx
jb r-xdata
pop ebx
inc [ esi + 0x20 ]
sub_40c421
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov [ rw-data ] 0x0
je r-xdata
xor al al
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ eax ] 0x63
jne r-xdata
cmp [ ebp + 0xc ] 0x4
jb r-xdata
mov al [ rw-data ]
jmp r-xdata
push ebx
push edi
pop esi
pop ebp
retn 0xc
pop edi
pop ebx
cmp ebx 0x9901
jne r-xdata
push 0xfffffffc
pop eax
sub eax edi
add [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x4
lea esi [ esi + edi + 0x4 ]
jae r-xdata
cmp edi 0x7
jb r-xdata
push esi
call sub_40427f
movzx ebx ax
lea eax [ esi + 0x2 ]
push eax
call sub_40427f
movzx edi ax
mov eax [ ebp + 0xc ]
add eax 0xfffffffc
cmp edi eax
ja r-xdata
lea eax [ esi + 0x6 ]
push eax
call sub_40427f
mov ecx 0x4541
cmp ax cx
jne r-xdata
lea eax [ esi + 0x4 ]
push eax
call sub_40427f
dec ax
neg ax
sbb al al
inc al
mov [ rw-data ] al
movzx eax [ esi + 0x8 ]
mov [ rw-data ] eax
cmp eax 0x3
ja r-xdata
lea eax [ esi + 0x9 ]
push eax
call sub_40427f
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ rw-data ] 0x1
sub_40c522
mov eax [ rw-data ]
mov ecx eax
xor ecx [ esp + 0x4 ]
shr eax 0x8
mov edx 0xff
and ecx edx
xor eax [ ecx * 4 + rw-data ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
movzx eax al
add eax [ rw-data ]
imul eax eax 0x8088405
inc eax
mov [ rw-data ] eax
shr eax 0x18
xor eax ecx
and eax edx
shr ecx 0x8
xor ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x4 ]
mov [ rw-data ] ecx
retn 0x4
sub_40c57c
push esi
mov esi [ esp + 0x8 ]
mov [ rw-data ] 0x12345678
mov [ rw-data ] 0x23456789
mov [ rw-data ] 0x34567890
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
movsx eax al
push eax
call sub_40c522
inc esi
pop esi
retn 0x4
sub_40c5b5
push ebp
mov ebp esp
sub esp 0xc
push esi
push [ ebp + 0xc ]
call sub_40c57c
push 0xc
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_408cb4
xor esi esi
lea edx [ ebp + esi - 0xc ]
call sub_40c502
xor [ edx ] al
movzx eax [ edx ]
push eax
call sub_40c522
inc esi
cmp esi 0xc
jl r-xdata
movzx ax [ ebp - 0x1 ]
movzx ecx ax
mov eax [ rw-data ]
test [ eax + 0x28 ] 0x2
movzx eax [ rw-data ]
jne r-xdata
movzx ecx cx
cmp ecx eax
je r-xdata
movzx eax [ rw-data ]
mov ecx [ rw-data ]
mov eax ecx
cdq
cmp edx [ rw-data ]
push edi
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov edi ecx
mov edx [ rw-data ]
jg r-xdata
pop esi
leave
retn 0x8
test edi edi
jne r-xdata
mov edi edx
jmp r-xdata
cmp eax edx
jbe r-xdata
dec edi
call sub_40c502
xor [ esi ] al
movzx eax [ esi ]
push eax
call sub_40c522
inc esi
xor eax eax
pop edi
mov esi [ rw-data ]
jmp r-xdata
sub_40c665
push esi
push edi
push [ rw-data ]
push ebx
call sub_40c5b5
mov edi eax
test edi edi
je r-xdata
mov eax edi
push [ rw-data ]
call sub_408d31
inc eax
push eax
call sub_408a70
mov esi eax
test esi esi
jne r-xdata
push esi
push [ rw-data ]
call CharToOemA
push esi
push ebx
call sub_40c5b5
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_408a89
push esi
push [ rw-data ]
call OemToCharA
push esi
push ebx
call sub_40c5b5
mov edi eax
pop edi
pop esi
retn
sub_40c6cf
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
inc edi
cmp [ rw-data ] bl
jne r-xdata
mov esi 0x81
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
and [ eax + 0x28 ] 0xfffffffe
call sub_403b2b
mov [ ebp - 0x4 ] ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] bl
je r-xdata
call sub_403d36
jg r-xdata
push esi
call sub_408a70
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
call sub_403aa3
mov eax [ rw-data ]
or [ eax + 0x28 ] edi
mov eax [ rw-data ]
movzx ax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
jb r-xdata
push rw-data
push rw-data
push esi
push [ rw-data ]
lea eax [ ebp - 0x4 ]
push eax
push rw-data
mov [ ebp - 0x4 ] ebx
call [ rw-data ]
mov esi eax
cmp esi 0x5
jne r-xdata
jmp r-xdata
xor eax eax
lea ebx [ ebp - 0x10 ]
call sub_40c665
test eax eax
je r-xdata
push eax
call sub_408a89
mov [ rw-data ] ebx
push esi
call sub_408a70
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xc
movzx eax ax
mov [ ebp + ecx - 0x10 ] al
jl r-xdata
cmp esi ebx
je r-xdata
push [ rw-data ]
call sub_408a89
mov [ rw-data ] ebx
jmp r-xdata
push 0x5
pop eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x80
push rw-data
push eax
call sub_408e58
mov [ rw-data ] edi
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] bl
mov [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
mov eax edi
jmp r-xdata
xor ebx ebx
lea ebx [ ebp - 0x10 ]
call sub_40c665
test eax eax
je r-xdata
cmp esi 0xfffffffe
jne r-xdata
mov [ rw-data ] edi
sub_40c87f
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push ebx
push ebx
push [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop ebx
leave
retn 0xc
mov [ ebp - 0x1 ] bl
sub_40c8ae
push ebx
push [ esp + 0x10 ]
mov bl 0x1
push [ esp + 0x10 ]
push 0xffffffff
push [ esp + 0x14 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov al bl
pop ebx
retn 0xc
xor bl bl
sub_40c8d5
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
dec eax
push ebx
mov [ ebp + 0x10 ] eax
mov al [ edx ]
push esi
push edi
mov edi [ ebp + 0xc ]
test al al
je r-xdata
xor eax eax
mov [ edi ] ax
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x3f
pop esi
dec [ ebp + 0x10 ]
js r-xdata
and eax 0xffffffe0
cmp eax 0xc0
jne r-xdata
cmp eax 0xffff
jbe r-xdata
mov eax ecx
and eax 0xfffffff0
cmp eax 0xe0
jne r-xdata
mov al [ edx ]
mov bl al
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov [ edi ] ax
mov al [ edx ]
inc edi
inc edi
test al al
jne r-xdata
dec [ ebp + 0x10 ]
js r-xdata
mov eax ecx
and eax 0xfffffff8
cmp eax 0xf0
jne r-xdata
mov al [ edx ]
and al 0xc0
cmp al 0x80
jne r-xdata
movsx eax al
and ecx 0x1f
and eax esi
shl ecx 0x6
or eax ecx
inc edx
jmp r-xdata
movzx ecx al
inc edx
mov eax ecx
cmp ecx 0x80
jb r-xdata
cmp eax 0x10ffff
ja r-xdata
mov al [ edx ]
and al 0xc0
cmp al 0x80
jne r-xdata
mov bl [ edx + 0x1 ]
mov al bl
and al 0xc0
cmp al 0x80
jne r-xdata
lea ecx [ eax - 0x10000 ]
shr ecx 0xa
sub ecx 0x2800
mov [ edi ] cx
inc edi
and eax 0x3ff
inc edi
sub eax 0x2400
mov al [ edx + 0x1 ]
and al 0xc0
cmp al 0x80
jne r-xdata
movsx eax [ edx ]
and ecx 0xf
and eax esi
shl ecx 0x6
or eax ecx
movsx ecx bl
shl eax 0x6
and ecx esi
or eax ecx
inc edx
inc edx
jmp r-xdata
mov bl [ edx + 0x2 ]
mov al bl
and al 0xc0
cmp al 0x80
jne r-xdata
movsx eax [ edx ]
and ecx 0x7
and eax esi
shl ecx 0x6
or eax ecx
movsx ecx [ edx + 0x1 ]
shl eax 0x6
and ecx esi
or eax ecx
movsx ecx bl
shl eax 0x6
and ecx esi
or eax ecx
add edx 0x3
sub_40ca4f
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
retn 0xc
dec [ esp + 0xc ]
cmp [ esp + 0xc ] 0x0
jg r-xdata
mov dx [ ecx ]
mov [ eax ] dx
mov dx [ ecx ]
inc eax
inc eax
inc ecx
inc ecx
test dx dx
je r-xdata
sub_40ca95
mov edx [ esp + 0x4 ]
jmp r-xdata
movzx eax [ edx ]
test ax ax
jne r-xdata
movzx eax ax
push eax
push [ esp + 0xc ]
call sub_40ca77
test eax eax
jne r-xdata
xor eax eax
mov eax edx
jmp r-xdata
inc edx
inc edx
retn 0x8
sub_40cabf
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
mov edi ecx
call [ GetCPInfo@IAT ]
cmp [ ebp - 0x14 ] 0x1
seta al
mov [ edi + 0x100 ] al
push esi
call [ IsDBCSLeadByte@IAT ]
test eax eax
setne al
mov [ esi + edi ] al
inc esi
cmp esi 0x100
jb r-xdata
pop edi
pop esi
leave
retn
sub_40cb15
mov eax [ esp + 0x4 ]
push esi
jmp r-xdata
mov dl [ eax ]
test dl dl
jne r-xdata
movzx esi dl
cmp [ esi + ecx ] 0x0
je r-xdata
xor eax eax
movsx edx dl
cmp edx [ esp + 0xc ]
je r-xdata
inc eax
inc eax
jmp r-xdata
pop esi
retn 0x8
inc eax
sub_40cb3f
push esi
mov esi [ esp + 0x8 ]
mov dl [ esi ]
xor eax eax
test dl dl
je r-xdata
pop esi
retn 0x8
push edi
movsx edx dl
cmp edx [ esp + 0x10 ]
jne r-xdata
inc esi
inc esi
jmp r-xdata
inc esi
mov eax esi
mov dl [ esi ]
test dl dl
jne r-xdata
movzx edi dl
cmp [ edi + ecx ] 0x0
je r-xdata
pop edi
sub_40cb7d
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
sub eax 0x32
je r-xdata
cmp eax 0xc
jae r-xdata
push 0x5
dec eax
je r-xdata
mov eax [ eax * 4 + rw-data ]
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
dec eax
je r-xdata
retn 0x4
push 0x9
jmp r-xdata
sub eax 0x1c
je r-xdata
pop eax
mov eax 0xff
jmp r-xdata
dec eax
je r-xdata
dec eax
sub_40cbbd
push esi
call sub_404921
call sub_4082ba
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push eax
call sub_408a89
and [ rw-data ] 0x0
push esi
call sub_40cb7d
test eax eax
je r-xdata
mov eax 0xff
jmp r-xdata
mov eax esi
pop esi
retn
push eax
mov ecx rw-data
call sub_4017e1
sub_40cc09
push ebp
mov ebp esp
sub esp 0x800
push esi
push [ rw-data ]
call sub_408b88
xor eax eax
mov [ ebp - 0x800 ] ax
mov eax [ rw-data ]
shr eax 0xb
mov esi rw-data
test al 0x1
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push esi
call sub_40c8d5
xor eax eax
mov [ ebp - 0x2 ] ax
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x24 ]
je r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
shl eax 0x10
or eax ecx
push eax
lea eax [ ebp - 0x800 ]
push eax
push esi
call sub_40cda8
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0xffffffdf
pop esi
leave
retn
and eax 0x7f
push eax
lea eax [ ebp - 0x800 ]
push eax
push esi
call sub_4035d7
sub_40ccab
movzx eax [ rw-data ]
test eax eax
je r-xdata
movzx eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x24 ] eax
cmp eax 0xb
je r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0xe
je r-xdata
push rw-data
call sub_40702d
mov al [ eax ]
cmp al 0x5c
je r-xdata
mov eax [ rw-data ]
and [ eax + 0x24 ] 0x0
jmp r-xdata
cmp al 0x2f
je r-xdata
xor eax eax
retn
mov eax [ rw-data ]
mov [ eax + 0x24 ] 0x20
jmp r-xdata
sub_40cd05
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ LoadLibraryA@IAT ]
mov esi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
push r--data
call edi
push r--data
mov [ esi ] eax
call edi
mov [ esi + 0x4 ] eax
call [ InitCommonControls@IAT ]
push r--data
mov [ ebp - 0x8 ] 0x8
mov [ ebp - 0x4 ] 0x7ff
call edi
mov edi eax
test edi edi
je r-xdata
push rw-data
call [ SHGetMalloc@IAT ]
pop edi
mov eax esi
pop esi
leave
retn
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
call eax
sub_40cd7d
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ FreeLibrary@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call edi
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
retn
push esi
call edi
sub_40cda8
push ebp
mov ebp esp
sub esp 0xc44
lea ecx [ ebp - 0xc44 ]
call sub_402e44
push 0x1
push 0x0
push [ ebp + 0xc ]
lea ecx [ ebp - 0xc44 ]
push [ ebp + 0x8 ]
call sub_403005
test al al
je r-xdata
lea ecx [ ebp - 0xc44 ]
call sub_402fe2
leave
retn 0xc
lea ecx [ ebp - 0x24 ]
call sub_40c370
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x24 ]
call sub_40c2f6
push 0x0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc44 ]
call sub_4032ce
sub_40ce0a
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax 0xff
and ecx eax
add ecx 0xffffffeb
and edx eax
cmp ecx 0x6
ja r-xdata
mov al 0x1
cmp edx 0xa
je r-xdata
xor al al
jmp r-xdata
cmp edx 0xb
je r-xdata
retn 0x8
cmp edx 0x3
jne r-xdata
sub_4013ae
mov ecx [ ecx + 0x4ad8 ]
jmp sub_40c0ca
sub_401558
push esi
mov esi ecx
call sub_4013b9
mov ecx esi
pop esi
jmp sub_406d8b
j_sub_40a5e1
jmp sub_40a5e1
sub_4017ca
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x1
mov [ ecx + 0x9 ] al
mov [ ecx + 0xa ] al
retn
sub_4017dc
xor al al
retn 0x4
sub_401846
retn
sub_401847
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x9 ] cl
mov [ eax + 0xa ] cl
retn
sub_4018bc
push 0x6b
call sub_4089f7
push eax
call sub_4097c1
pop ecx
retn
sub_401925
push [ esp + 0x8 ]
push 0x75
call sub_4089f7
push eax
push [ esp + 0xc ]
call sub_409c10
add esp 0xc
retn 0x8
sub_401940
push [ esp + 0x8 ]
push 0x74
call sub_4089f7
push eax
push [ esp + 0xc ]
call sub_409c10
add esp 0xc
retn 0x8
sub_40195b
push esi
mov esi ecx
call sub_4018bc
push 0x8
mov ecx esi
call sub_401814
pop esi
retn
sub_40196e
push esi
push [ esp + 0x8 ]
mov esi ecx
push 0x0
call sub_401925
push 0x2
mov ecx esi
call sub_401814
pop esi
retn 0x4
sub_401f99
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x8 ]
jbe r-xdata
mov [ ecx + 0x4 ] eax
sub eax [ ecx + 0x4 ]
push eax
call sub_401eec
jmp r-xdata
retn 0x4
sub_401fb3
push esi
push 0x1
mov esi ecx
call sub_401f35
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ esp + 0x8 ]
mov [ ecx + eax * 4 - 0x4 ] edx
pop esi
retn 0x4
sub_402e88
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
retn 0x4
xor eax eax
mov [ eax * 4 + rw-data ] ecx
inc eax
cmp eax 0x100
jb r-xdata
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
jmp r-xdata
sub_4033da
push esi
mov esi ecx
call sub_402fe2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409008
pop ecx
sub_40355c
push esi
mov esi ecx
lea ecx [ esi + 0xc14 ]
call sub_40c370
lea ecx [ esi + 0xc38 ]
call sub_40c370
lea ecx [ esi + 0xc5c ]
call sub_40c370
mov eax esi
pop esi
retn
sub_403584
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
xor eax eax
test [ esp + 0x4 ] 0x10
je r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_40359c
test [ esp + 0x4 ] 0x7
push 0x0
pop eax
sete al
retn 0x4
sub_40372f
mov eax [ esp + 0x4 ]
mov eax [ eax ]
retn 0x4
sub_403a3b
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4035d7
retn 0x8
sub_403f46
xor eax eax
retn 0x10
sub_403f4b
mov eax [ esp + 0xc ]
and [ eax ] 0x0
xor eax eax
retn 0x10
sub_40442f
mov eax ecx
or [ eax + 0xc04 ] 0xffffffff
xor ecx ecx
mov [ eax ] 0x0
mov [ eax + 0x400 ] cx
mov [ eax + 0xc00 ] 0x1
retn
sub_40444c
mov eax [ ecx + 0xc04 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FindClose@IAT ]
sub_4049a2
mov eax [ esp + 0x4 ]
inc [ eax + 0x10 ]
mov eax [ eax + 0x10 ]
retn 0x4
sub_4049af
mov eax 0x80004001
retn 0x4
sub_4049b7
mov eax 0x80004002
retn 0x8
sub_4049e3
xor eax eax
retn 0x4
sub_404a7c
mov eax 0x80004001
retn 0xc
sub_404a84
xor eax eax
retn 0x8
sub_404a89
mov eax 0x80004001
retn 0x8
sub_404a91
xor eax eax
retn 0xc
sub_404a96
mov eax [ esp + 0x18 ]
or [ eax ] 0xffffffff
mov eax 0x80020006
retn 0x18
sub_404aa5
mov eax 0x80004001
retn 0x10
sub_404aad
mov eax 0x80020003
retn 0x24
sub_404d05
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ DestroyWindow@IAT ]
and [ esi + 0x4 ] 0x0
sub_404d4b
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x0
push 0x0
call sub_404bbb
sub_404fcb
sub [ esp + 0x4 ] 0x4
jmp sub_404a89
sub_404fd5
sub [ esp + 0x4 ] 0x4
jmp sub_4049bf
sub_404fdf
sub [ esp + 0x4 ] 0x4
jmp sub_4049a2
sub_404fe9
sub [ esp + 0x4 ] 0x8
jmp sub_4049a2
sub_404ff3
sub [ esp + 0x4 ] 0xc
jmp sub_4049a2
sub_4053bc
sub [ esp + 0x4 ] 0xc
jmp sub_404ffd
sub_4053c6
sub [ esp + 0x4 ] 0x4
jmp sub_4050a8
sub_4053d0
sub [ esp + 0x4 ] 0x8
jmp sub_4050a8
sub_4053da
sub [ esp + 0x4 ] 0xc
jmp sub_4050a8
sub_4053e4
sub [ esp + 0x4 ] 0x4
jmp sub_404ffd
sub_4053ee
sub [ esp + 0x4 ] 0x8
jmp sub_404ffd
sub_405d1d
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push [ rw-data ]
call sub_405cfc
push [ rw-data ]
call sub_405cfc
and [ rw-data ] 0x0
and [ rw-data ] 0x0
sub_406d8b
push esi
push 0x3298
mov esi ecx
push 0x0
push esi
call sub_408c87
lea ecx [ esi + 0x28d8 ]
pop esi
jmp sub_40c02b
sub_406f6a
cmp [ rw-data ] 0x0
je r-xdata
jmp sub_408d5a
mov ecx rw-data
jmp sub_40cb15
sub_406f82
cmp [ rw-data ] 0x0
je r-xdata
jmp sub_408d86
mov ecx rw-data
jmp sub_40cb3f
sub_40702d
mov eax [ esp + 0x4 ]
push esi
mov esi eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
mov esi eax
call sub_401f7e
mov eax esi
pop esi
retn 0x4
sub_407148
push 0x2e
push [ esp + 0x8 ]
call sub_406f9a
push eax
call sub_406f82
retn 0x4
sub_40837e
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] cl
retn
sub_40838b
push [ ecx ]
call sub_408a89
retn
sub_4085cf
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40862c
cmp [ ecx + 0x10 ] 0x0
je r-xdata
retn 0x4
push 0xffffffec
push [ esp + 0x8 ]
call [ GetWindowLongA@IAT ]
or eax __pe_WINRAR_export_address_table
push eax
push 0xffffffec
push [ esp + 0xc ]
call [ SetWindowLongA@IAT ]
sub_4089e0
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_408393
mov ecx esi
call sub_4087af
pop esi
retn 0x4
sub_408fad
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_409008
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_408a89
pop ebp
retn
sub_409015
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_408a70
pop ebp
retn
sub_409110
xor eax eax
retn
_start
call sub_409062
xor eax eax
push eax
push eax
push eax
push eax
call sub_40bc0e
sub_409177
mov eax ecx
mov ecx [ eax ]
mov edx [ eax + 0x10 ]
cmp edx [ ecx + 0xc1c ]
jne r-xdata
retn
push 0x0
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4033f6
sub_4091d3
push ebp
mov ebp esp
sub esp 0x64
push 0x64
lea eax [ ebp - 0x64 ]
push eax
push 0xf
push 0x400
call [ GetLocaleInfoA@IAT ]
movsx eax [ ebp - 0x64 ]
leave
retn
sub_409bea
push 0x0
push [ esp + 0x10 ]
push [ esp + 0xc ]
call sub_409258
push eax
push 0x402
push 0x68
push [ rw-data ]
call [ SendDlgItemMessageA@IAT ]
retn 0x10
sub_409c6c
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call sub_409bea
call sub_409194
retn 0x20
sub_40be1e
call sub_401660
mov ecx rw-data
jmp sub_4017ca
sub_40be2d
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
retn 0x4
mov eax r--data
CharToOemA
jmp [ CharToOemA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
sub_40be49
push [ esp + 0x4 ]
call [ CharLowerA@IAT ]
mov eax [ esp + 0x4 ]
retn 0x4
sub_40be5a
push [ esp + 0x4 ]
call [ CharUpperA@IAT ]
mov eax [ esp + 0x4 ]
retn 0x4
sub_40be6b
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
retn 0x8
sub_40be8c
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0x14 ]
push [ esp + 0x10 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
retn 0xc
sub_40beb1
cmp [ esp + 0x4 ] 0x69
jne r-xdata
movzx eax [ esp + 0x4 ]
push eax
call sub_408ad4
mov al 0x49
jmp r-xdata
retn 0x4
sub_40beca
mov eax [ esp + 0x4 ]
add eax 0xffffffd0
push 0x9
pop ecx
cmp ecx eax
sbb eax eax
inc eax
retn 0x4
sub_40bedc
cmp [ esp + 0x4 ] 0x20
je r-xdata
xor eax eax
inc eax
cmp [ esp + 0x4 ] 0x9
je r-xdata
xor eax eax
jmp r-xdata
retn 0x4
j_sub_40be6b
jmp sub_40be6b
sub_40bfbf
xor eax eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x2c ] eax
retn
sub_40c02b
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call sub_408a89
sub_40c07f
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
call sub_40c02b
lea ecx [ esi + 0x10 ]
call sub_40c02b
mov ecx esi
pop esi
jmp sub_40c02b
sub_40c1f2
push 0x0
push [ esp + 0x8 ]
call sub_40c0ca
retn 0x4
sub_40c24e
push ebp
mov ebp esp
push ecx
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call sub_40c14d
mov eax [ ebp - 0x4 ]
leave
retn
sub_40c86c
call sub_40c6cf
cmp [ rw-data ] 0x0
je r-xdata
retn
test eax eax
jne r-xdata
sub_40ca18
mov al 0x1
retn
sub_40ca1b
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx ] ax
je r-xdata
retn 0x4
inc ecx
inc ecx
inc eax
cmp [ ecx ] 0x0
jne r-xdata
sub_40ca32
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov dx [ ecx ]
mov [ eax ] dx
mov dx [ ecx ]
inc eax
inc eax
inc ecx
inc ecx
test dx dx
jne r-xdata
retn 0x8
sub_40ca77
mov eax [ esp + 0x4 ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
movzx ecx cx
cmp ecx [ esp + 0x8 ]
je r-xdata
xor eax eax
retn 0x8
inc eax
inc eax
sub_40caff
mov eax [ esp + 0x4 ]
movzx edx [ eax ]
cmp [ edx + ecx ] 0x0
je r-xdata
inc eax
add eax 0x2
jmp r-xdata
retn 0x4
sub_40cb71
push esi
mov esi ecx
call sub_40cabf
mov eax esi
pop esi
retn
sub_40ce3b
mov ecx rw-data
jmp sub_401847
sub_40ce45
mov ecx rw-data
call sub_40837e
push sub_40ce7b
call sub_409110
pop ecx
retn
sub_40ce5b
mov ecx rw-data
call sub_401628
push sub_40ce85
call sub_409110
pop ecx
retn
sub_40ce71
mov ecx rw-data
jmp sub_40cabf
sub_40ce7b
mov ecx rw-data
jmp sub_40838b
sub_40ce85
mov ecx rw-data
jmp sub_401558
