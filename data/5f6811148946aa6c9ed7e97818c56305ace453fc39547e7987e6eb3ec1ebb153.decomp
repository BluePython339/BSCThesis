sub_4010d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44073 ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ edi ] al
add [ eax ] cl
add [ ebx - 0x28ffb95f ] dh
mov eax [ 0xffffffffa1bb0046 ]
inc esi
add bh bh
and eax __vbaChkstk@IAT
jmp [ __vbaExceptHandler@IAT ]
inc esi
add [ eax ] al
pushfd
sub eax 0x47
_start
push r-xdata
call Ordinal_MSVBVM60_100
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
cmp [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x2ccaafa9
pop ds
push edx
inc edx
mov dl 0xc6
sbb ecx eax
sub eax [ edx ]
sub eax 0x5c
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + 0x54 ] bh
and [ eax ] al
add [ eax + 0x69746172 ] al
outsd
add [ edx + 0x65 ] dh
add [ eax ] al
add [ eax ] al
dec esp
xor [ eax ] eax
add [ edi + eax + 0x2a ] dl
push ebx
ja r-xdata
inc eax
add al ch
stosd [ edi ]
dec edi
mov ch 0x8
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bl
bound eax [ eax ]
add dl bl
bound eax [ eax ]
add [ eax ] al
adc [ eax ] eax
bound esp [ ebp + 0x73 ]
insb
jne r-xdata
or al 0x34
test [ edi + 0x10 ] ebx
fcom [ eax + 0x1116dc8e ]
dec edi
and [ eax ] ah
add [ eax ] al
add [ eax ] eax
or [ eax ] al
test al 0x8
add [ eax ] al
mov dh 0x19
add [ eax ] al
adc [ eax ] dl
add [ eax ] al
add [ eax ] eax
or [ eax ] al
push 0x5e000005
outsb
imul ebp [ esi + 0x67 ] 0x67796473
je r-xdata
and al [ eax ]
add [ eax ] dh
xor [ eax ] al
add [ ecx ] al
add [ eax ] ah
add [ eax - 0x39ffffdb ] ch
daa
add [ eax ] al
and [ eax ] ah
add [ eax ] al
add [ eax ] eax
and [ eax ] al
test al 0x10
add [ eax ] al
outsb
dec ebp
add [ eax ] al
adc [ eax ] dl
add [ eax ] al
add [ eax ] eax
and [ eax ] al
push 0x16000004
pop esi
add [ eax ] al
sub [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
pushad
add [ eax ] al
add [ ecx ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ 0xffffffffe2e2e21d ]
jmp 0xffffffffe2a2f6df
add [ eax ] ah
and [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ eax - 0x49fffff8 ] ch
add [ di ] cl
add [ ecx ] ecx
add [ ebx + 0x69 ] dh
insd
jo r-xdata
sbb [ eax ] eax
add [ eax ] dl
adc [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ eax + 0x5 ] ch
add [ eax ] al
pop esi
imul esp [ ebx + 0x69 ] 0x1190061
add [ edx ] al
and al [ ecx ]
and eax [ esi + 0x6c000062 ]
je r-xdata
add [ esi + 0x62 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ eax ] eax
xor [ eax ] dh
adc [ eax ] al
add [ eax ] eax
add al 0x0
push 0x96000006
add [ eax ] al
add [ eax ] ah
and [ eax ] dl
add [ ecx ] al
add [ eax + eax ] al
call 0xfffffffffe401359
push es
add [ eax ] al
adc [ eax ] dl
adc [ eax ] al
add [ eax ] eax
add al 0x0
sub [ ecx ] al
add [ eax ] al
out 0x9 al
add [ eax ] al
xor [ eax ] dh
add [ eax ] al
add [ eax ] eax
or [ eax ] al
test al 0xe
add [ eax ] al
push cs
or eax [ eax ]
sub_4015d8
push 0x1d
aaa
xchg ebp eax
push 0x57
std
sbb eax 0x3f11dc9
std
sbb eax 0x1afdf34f
0x6a6a65d1 0x956a
insd
adc esp [ ebp + 0x23 ]
push 0xffffffdd
rcr [ 0x1d1d1d1d ] 0x1d
sbb eax 0x34f73f1a
xchg ebp eax
push 0xffffff95
push 0x1b
0xfaf3f31d 0x8d78
sub_401751
mul ebp
popfd
push 0x68
sbb eax 0x9a65941a
cli
sbb eax 0x1de5621d
jo r-xdata
sbb dl [ ebx ]
sbb eax 0xddf4f3eb
std
test [ ebp + 0x621d1da3 ] ch
xchg ebp eax
popfd
sbb eax 0x1d1d1d1d
sbb eax 0x6d616a1d
shl [ ebx - 0xd ] cl
0x1d636afa 0x659d
sbb eax 0x1dd3131d
adc eax 0xa06b1d9d
pushad
sbb eax 0x3237e51d
add [ 0x1d9ac61a ] ebx
sbb eax 0x1dce1d1d
std
sbb eax 0xeb1d131a
hlt
sub_4017a6
mov ebx 0x371d1d95
sbb eax 0x1d1d1dfd
std
sbb eax 0xf3161a1d
push 0x61
adc ebp [ edx + 0x6a ]
sbb dl [ ebp + 0x1d1d9d95 ]
push es
sbb eax 0xefdf1db6
sbb eax 0x1d1e1d1d
adc [ ebp + 0x1d7a1dbe ] edx
sbb bl [ 0x661d1d71 ]
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d5444
sbb eax 0x1d651d1d
dec esp
sbb eax 0x1dfd1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x7f1dce0f
sbb eax 0x1d1db8a8
sbb eax 0x87a21d2b
sbb eax 0x1d1d1d1d
sbb eax 0x1d1e1d1d
sbb eax 0x1d1d1d77
dec esi
dec ecx
pop ss
pop esp
sbb eax 0x591d1d1d
sbb eax 0x1d1dd11d
0x5e1d821d 0x1d1d
sbb eax 0x1d131d1d
std
sbb eax 0x1d92569d
sbb eax 0x1d1d1313
sbb eax 0x1d1d1d40
neg [ 0x1d1d1d1d ]
adc ebx [ 0x7e1d131d ]
adc cl dl
pop es
push 0x1deec71d
sbb eax 0x1d9f1db7
sbb eax 0x1d1df81d
adc [ 0xffffffffba1d131d ] ebx
adc ebx [ 0x1d1dd3af ]
sbb eax 0x1d481d1d
sbb eax 0x1d471d1d
sbb eax 0x1328131d
sbb eax 0xfdfd13f3
sbb eax 0x1d581d86
sbb eax 0x3f1d1d1d
loop r-xdata
sbb eax 0xe2e2b41c
loop r-xdata
adc ah dl
and ah dl
sbb eax 0xe51d1d1d
sbb eax 0x1d1dbc1d
sbb eax 0x1d1d1d1d
sahf
loop r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d9e
sbb eax 0xfd131de5
fucom st2
sbb eax 0x1d1d1d1d
sbb eax 0x1df31d1d
sbb eax 0x1d1d38d0
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
aas
loop r-xdata
add ah dl
loop r-xdata
sbb eax 0x1d1d1d01
sbb eax 0x1d1d701d
sbb al 0xb4
loop r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d9e1d
sbb eax 0x131de51d
std
loop r-xdata
loop r-xdata
std
add bh [ edi - 0x1d1dbfde ]
sbb eax 0x11dfd13
sbb eax 0x1d1d1d1d
sbb al 0xe2
adc dl [ edi - 0x1e ]
loop r-xdata
add bl [ eax - 0x1d1d1dfe ]
loop r-xdata
sbb eax 0x1d1d1dbc
sbb eax 0x9e1d1d1d
loope r-xdata
sbb eax 0x1de51d1d
adc edi ebp
and ah dl
and ah dl
loop r-xdata
cwde
add ah dl
loop r-xdata
loop r-xdata
and ah dl
and ah dl
loop r-xdata
jo r-xdata
loop r-xdata
sbb eax 0xe2b41c1d
loop r-xdata
loop r-xdata
loop r-xdata
in eax 0x12
test ebp ebp
and ah dl
and ah dl
loop r-xdata
mov edi 0xe2e24022
loope r-xdata
cmpsb [ esi ] [ edi ]
and dl [ edx - 0x1e ]
int3
loop r-xdata
push esp
loop r-xdata
loop r-xdata
jecxz r-xdata
loop r-xdata
loop r-xdata
bound ebp [ esi + esi * 4 ]
loop r-xdata
in eax dx
adc ah dl
sbb al 0xe2
loop r-xdata
fsubrp st2
loop r-xdata
mov ecx 0xe222e222
loop r-xdata
in eax dx
sub al 0xb6
push esp
sbb eax 0xe26f1dbe
add ebx [ 0xffffffffe2621d22 ]
mov dh 0xed
loop r-xdata
and ah dl
add bh [ edi - 0x1e ]
loop r-xdata
loop r-xdata
jecxz r-xdata
in eax dx
pushad
xchg [ edx + 0x1d ] esp
loop r-xdata
loop r-xdata
loop r-xdata
in eax 0x22
mov [ 0xffffffffe2e2e2e2 ] dl
in eax dx
add ch [ esi - 0x1d1d1de6 ]
pop esp
loop r-xdata
sbb ah dl
sbb eax 0xe230e262
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
popad
loop r-xdata
sbb eax 0xe2621d62
in eax dx
loop r-xdata
xchg ebx eax
jecxz r-xdata
cwde
loop r-xdata
loop r-xdata
loop r-xdata
mov esp 0x8262dcef
loop r-xdata
loope r-xdata
loop r-xdata
0x62e3e2e2 0x62e2
mov [ 0xffffffffbce2e2e2 ] eax
out dx eax
fsub [ edx - 0x7e ]
test [ 0x5e1d021d ] bl
daa
sbb eax 0xfee2e271
in eax 0x8c
bound esi [ ebp - 0x1de01d3b ]
in eax dx
inc eax
and dl [ edx + eax - 0x621d1d1e ]
loop r-xdata
and ebx [ 0xffffffffe2621d22 ]
loop r-xdata
loop r-xdata
loop r-xdata
jpe r-xdata
loop r-xdata
and ah dl
loop r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
in eax 0x1a
loop r-xdata
outsb
loop r-xdata
sbb eax 0x258f61d
sbb eax 0x5e1d021d
adc ebp ebp
add ebx [ 0xffffffffe2621d62 ]
sbb eax 0xe2621d22
punpcklbw mmx0 [ edi - 0x1dafe29e ]
loop r-xdata
in eax 0xe2
jecxz r-xdata
or [ edx ] ah
sbb eax 0xede2e262
loope r-xdata
loop r-xdata
in eax 0x3
sbb eax 0xe21b1d62
bound ebx [ 0xffffffffedb62c62 ]
jecxz r-xdata
loope r-xdata
sub dl 0xe2
jg r-xdata
mov eax 0xa71dfdde
sbb eax 0x21d0245
loop r-xdata
loop r-xdata
add ebx [ 0xffffffffe2229162 ]
loop r-xdata
loop r-xdata
xchg esi eax
and ah dl
loop r-xdata
sbb esp edx
loop r-xdata
push edi
in eax dx
jne r-xdata
sbb eax 0xe2e61d02
loop r-xdata
loop r-xdata
inc eax
loop r-xdata
jecxz r-xdata
sbb eax 0xb80258f6
fdivp st5
sbb eax 0x28f02a7
loop r-xdata
in eax dx
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
outsd
sbb eax 0x61d021d
pop ss
std
add cl [ edi - 0x21d1dfe ]
cmpsd [ esi ] [ edi ]
in eax dx
sbb eax 0x21d021d
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0x17061d02
push 0x1d027b1d
adc ah dl
loop r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
sbb eax 0xe21e1dc4
dec edi
fstp [ eax + 0x1d ]
adc ch [ eax ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
loop r-xdata
sbb eax 0x2a7021d
loop r-xdata
inc ebp
add bl [ 0xffffffffede2e202 ]
std
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sub_401a7e
loop r-xdata
sbb eax 0x40461d1d
nop [ 0x1d1d1d1d ] ebx
sbb eax 0x1ded1d1d
and bl [ 0x1d686a1f ]
sbb eax 0xe21d55e2
loop r-xdata
loop r-xdata
sbb eax 0xe21de23c
loop r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x6d1a1d1d
bound edx [ ebx + 0x1d1d1d1d ]
push ebp
sbb ax 0x1d1d
sbb eax 0x35501d1d
xchg ebp eax
fstp [ 0xffffffff861d9f1d ]
fisubr [ ebp + 0x24 ]
sbb eax 0xfd1a1d1d
punpckhdq mm5 [ ebp + 0x1d ]
cmp eax 0xddfa1d1d
xchg ebp eax
insd
sbb ch [ edx + 0x66 ]
sbb ah [ ecx + 0x65 ]
push 0x6d
sbb eax 0x131d981d
push 0x70
hlt
sbb eax 0x2a1d1d0a
sbb eax 0x1d1d1d7f
sbb eax 0x1d1d1d1d
sbb eax 0x1d6faf1d
sbb eax 0xf40461d
sbb eax 0x1d1d1d1d
sbb eax 0xed1d1d1d
sbb eax 0x6a1f1d22
push 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x11171d1d
insd
aaa
loop r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x1d1dd81d
sbb eax 0x1de01d1d
sbb eax 0x1d121d1d
sbb eax 0x1d1d1d07
ja r-xdata
sbb eax 0x1d1d1de2
sbb eax 0xeee21de2
call 0x1d5dd354
sbb eax 0x381df81d
sbb eax 0x1d3b1d1d
sbb eax 0x1d1d5e1d
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1dd8
sbb eax 0x1d1de01d
sbb eax 0x1d1d121d
pop es
add [ eax ] al
add [ eax ] dl
bound ecx [ esi + 0x446262e2 ]
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x376d1117
sbb eax 0x1d1d1d1d
sbb eax 0x221ded1d
sbb eax 0x1d686a1f
mov al [ 0x1d0a1db0 ]
sbb eax 0x1d7f1d2a
sbb eax 0x1d1d1d1d
sbb eax 0xaf1d1d1d
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
js r-xdata
sbb eax 0xe262e2e2
loop r-xdata
sbb eax 0x1d771d1d
mov bh 0x70
lodsb [ esi ]
bound esp [ edx - 0x1e ]
sub_402008
push ss
pop ebx
loop r-xdata
sbb eax 0x1d48fde2
mov bh 0xfd
dec eax
push 0x48
std
dec eax
cmc
sbb eax 0xe2651afd
popfd
sbb eax 0xd09d1d58
dec eax
sbb eax 0x1d819d99
pop ebp
sbb eax 0x1d48e2e2
mov bh 0xe2
dec eax
sbb eax 0xda91559c
sbb eax 0xe21d48e2
std
dec eax
sbb eax 0x6a48fdb7
dec eax
loop r-xdata
dec eax
sbb eax 0x1d48bdb7
dec eax
mov ebp 0xbd1d1605
dec eax
inc esp
loop r-xdata
jno r-xdata
sbb eax 0x1d9d3de2
dec eax
sbb eax 0x1d489db7
sbb [ ebp - 0x62c9e2b8 ] 0x48
sbb eax 0x1d4817e2
mov bh 0x7d
dec eax
sbb eax 0x47487548
sbb eax 0xe21d487d
dec eax
sbb eax 0x1d485db7
dec eax
pop ebp
dec eax
sbb eax 0x1d48bf1d
loop r-xdata
popfd
0x6a9d3d76 0x474d
cmp eax 0x1cb71d9d
sar [ ebp - 0x63 ] 0x1
push 0x48
jge r-xdata
fisttp [ eax + 0x1d ]
mov bh 0xdd
dec eax
sbb eax 0xdd3c57f5
fcomp st5
dec eax
cmpsb [ esi ] [ edi ]
loop r-xdata
std
sbb ah [ ebp - 0x1e ]
dec eax
sbb eax 0x13483db7
dec eax
cmp eax 0x881d0fbc
dec eax
std
loop r-xdata
dec eax
sbb eax 0x1d1d95b7
mov bh 0xd3
loop r-xdata
0xcd0e7d1d 0x7ee2
popfd
cmpsd [ esi ] [ edi ]
mov bh 0x5d
popfd
xchg ecx eax
sub bl [ ebp - 0x63 ]
xchg [ fs : ebp - 0x63 ] bl
mov ch 0xe2
bound si [ ss : edi + 0x486236fd ]
std
bound ebx [ ss : 0xffffffffe26e36fd ]
fnsave [ esi ]
bound esi [ ebx - 0x23 ]
bound ecx [ ss : eax - 0x23 ]
pop ebp
sbb eax 0x2f3536dd
std
xchg esp eax
mov bh 0xbd
xor dl [ edi ]
dec eax
mov ebp 0xbd1c0236
and al 0x12
loop r-xdata
dec eax
sbb eax 0x67481db7
iretd
mov bh 0x3d
mov bh 0xe5
dec eax
cmp eax 0x361de5b7
mov bh 0x33
loop r-xdata
popfd
sbb eax 0x929d79b7
dec eax
loop r-xdata
in eax 0x48
push ds
mov bh 0x9d
push ds
dec eax
popfd
test [ ss : 0xffffffffe21e369d ] bh
jpo r-xdata
mov bh 0x1d
mov bh 0x1d
mov bh 0x92
mov bh 0x1c
xchg ebp eax
sbb eax 0xaadd8ce2
std
neg [ 0xffffffffe5ecfdb7 ]
dec eax
std
popfd
xchg ebp eax
sbb eax 0xe26a9dfd
fstp [ ebp - 0x62224802 ]
0x92f4dd89 0xdda5
sbb eax 0xe21d1ddd
mov ebp 0x85b71d1d
sbb eax 0x1d3b481d
std
sbb eax 0xe29a1dbd
popfd
sbb eax 0x569db76a
xchg ebp eax
cmp edx esi
sbb eax 0x1dfdb7d5
sbb eax 0x1d1d1648
sbb eax 0xe21d1dfd
frstor [ ebx + 0x1dddb721 ]
xchg ebp eax
sbb eax 0x1d1ee536
mov ebx 0x951de2b7
push ds
mov bh 0x7d
sbb al 0x48
jge r-xdata
loop r-xdata
mov bh 0x7d
sbb eax 0x3e7d486d
loop r-xdata
push ds
stosd [ edi ]
push 0x36
sbb al 0xe2
inc edx
cmp al 0xb
mov bh 0x5d
sbb al 0x48
adc esp edx
jge r-xdata
sbb eax 0xc31d1d4b
test [ 0xffffffffe57b1d8c ] bl
mov esp 0xe2652e1d
sbb eax 0x1d3db7fa
sbb eax 0x1dd46c48
sbb eax 0xb71d1d3d
sbb eax 0x1d1d4b48
sbb eax 0xe2331d9d
sbb eax 0x1d9de29a
push 0xffffffb7
popfd
mov bh 0x9d
xchg ebx eax
bound ebx [ 0x1ddd1d9a ]
sbb eax 0x1d1dbde2
mov bh 0x85
dec eax
loop r-xdata
xchg ebp eax
pop ebp
dec esp
sbb al 0x1d
pop ebp
sbb al 0x29
cmp eax 0x52b71c31
sbb al 0xc3
cmp eax 0x3d1dfcec
dec edx
loop r-xdata
or esi [ edi + 0x481c365d ]
sbb eax 0x1db7cb36
in eax 0x48
retn
popfd
pop ebp
sbb eax 0x1d5db71d
sbb eax 0xfd1d5d48
sbb eax 0xe2648d5d
cmp eax 0x3db7fa1d
sbb eax 0xd46c481d
sbb eax 0x1d1d3d1d
mov bh 0x1d
sbb eax 0x1d1da71a
aad 0xfb
lds ebx [ cs : 0x1d1d1d2e ]
ficomp [ 0xffffffffe21d1d7d ]
in eax 0xd3
loop r-xdata
loop r-xdata
sbb eax 0x9de2652e
adc edi esi
jge r-xdata
sbb eax 0xf31d1d1d
loop r-xdata
loopne r-xdata
popfd
sbb ah dl
pop ebp
loop r-xdata
loop r-xdata
sbb eax 0x1d1d1d3a
sbb eax 0xe2e293e2
sbb eax 0x331d9d1d
loop r-xdata
loop r-xdata
sbb eax 0x1d486ded
loop r-xdata
mov bh 0x5d
loop r-xdata
dec eax
sbb eax 0xe21de21d
sbb eax 0x1d1d1de2
sbb eax 0x1df0e2f3
cmp bl [ 0xffffffffe21d1d1d ]
xchg ebx eax
sbb eax 0x121212c4
adc dl [ edx ]
int3
sbb eax 0x1d1d1d1d
or [ 0x12127b1d ] ebx
loop r-xdata
sbb eax 0x1d7db765
insd
dec eax
jge r-xdata
sbb eax 0xdde25db7
loop r-xdata
sbb eax 0x1d843d1d
mov [ 0x486ded1d ] al
loop r-xdata
loop r-xdata
popfd
mov [ ebp - 0x1e ] ebx
adc ebx [ 0xffffffffe2f2e25d ]
bound esp [ edx + 0x62 ]
sbb ah dl
loop r-xdata
loop r-xdata
sbb eax 0x3d1dbc1a
inc esi
pop ebx
inc edx
0x1a626262 0xe2e2
loop r-xdata
sbb eax 0x1dbce57b
loop r-xdata
ficomp [ 0xffffffffe21d1d7d ]
loop r-xdata
sbb eax 0xe2e2f3e2
dec eax
cmp eax 0x3d1d1d60
test [ 0x6ded1da2 ] bl
dec eax
loop r-xdata
sbb eax 0x93e21d1d
loop r-xdata
std
enter 0x1d6a 0xfd
enter 0xe29d 0xdd
enter 0x2a1d 0xdd
movsb [ edi ] [ esi ]
sbb eax 0x1dc8fde2
mov bh 0xda
inc ebx
push 0x48
enter 0xb71d 0xda
cmp eax 0x3db7ade2
sbb eax 0xe2f2e25d
enter 0xb163 0xe2
enter 0x4895 0xe2
sti
sbb eax 0x1dc8e21d
loop r-xdata
adc ah [ ebx + 0x12 ]
adc bl [ 0x1dea1d1d ]
sbb eax 0x1d1df71d
sbb eax 0x1d1d1d1d
les edx [ edx ]
adc dl [ edx ]
sbb eax 0x7b1d1d09
adc dl [ edx ]
sbb eax 0x1de21de2
loop r-xdata
sbb eax 0x1da71a1d
sbb eax 0x2e2efbd5
lds ebx [ 0x1d1d1d2e ]
jno r-xdata
mov bh 0x3d
push esi
0x6a1d9de2 0x9db7
jge r-xdata
mov bh 0x7d
mov ah 0x7a
dec eax
jge r-xdata
sbb eax 0xe2f31d1d
sub_4020a3
sbb eax 0x1dac1d48
dec eax
sbb eax 0x2236e2e2
or ah dl
add al [ ss : edx ]
and bl [ ss : 0xffffffffe2b5364a ]
bound si [ ss : edi + 0x486236fd ]
std
bound ebx [ ss : 0xffffffffe26e36fd ]
fnsave [ esi ]
bound esi [ ebx - 0x23 ]
bound ecx [ ss : eax - 0x23 ]
pop ebp
sbb eax 0x2f3536dd
std
xchg esp eax
mov bh 0xbd
xor dl [ edi ]
dec eax
mov ebp 0xbd1c0236
and al 0x12
loop r-xdata
in eax 0x48
push ds
mov bh 0x9d
push ds
dec eax
popfd
test [ ss : 0xffffffffe21e369d ] bh
jpo r-xdata
sbb eax 0xe21d1ddd
mov ebp 0x85b71d1d
sbb eax 0x1d3b481d
std
sbb eax 0xe29a1dbd
popfd
sbb eax 0x569db76a
xchg ebp eax
cmp edx esi
sbb eax 0x1dfdb7d5
sbb eax 0x1d1d1648
sbb eax 0xe21d1dfd
frstor [ ebx + 0x1dddb721 ]
xchg ebp eax
sbb eax 0x1d1ee536
mov ebx 0x951de2b7
push ds
mov bh 0x7d
sbb al 0x48
jge r-xdata
loop r-xdata
mov bh 0x7d
sbb eax 0x3e7d486d
loop r-xdata
push ds
stosd [ edi ]
push 0x36
sbb al 0xe2
inc edx
cmp al 0xb
mov bh 0x5d
sbb al 0x48
adc esp edx
jge r-xdata
sbb eax 0xc31d1d4b
test [ 0xffffffffe57b1d8c ] bl
mov esp 0xe2652e1d
sbb eax 0x1d3db7fa
sbb eax 0x1dd46c48
sbb eax 0xb71d1d3d
sbb eax 0x1d1d4b48
sbb eax 0xe2331d9d
sbb eax 0x1d9de29a
push 0xffffffb7
popfd
mov bh 0x9d
xchg ebx eax
bound ebx [ 0x1ddd1d9a ]
sbb eax 0x1d1dbde2
mov bh 0x85
dec eax
loop r-xdata
xchg ebp eax
pop ebp
dec esp
sbb al 0x1d
pop ebp
sbb al 0x29
cmp eax 0x52b71c31
sbb al 0xc3
cmp eax 0x3d1dfcec
dec edx
loop r-xdata
or esi [ edi + 0x481c365d ]
sbb eax 0x1db7cb36
in eax 0x48
retn
popfd
pop ebp
sbb eax 0x1d5db71d
sbb eax 0xfd1d5d48
sbb eax 0xe2648d5d
cmp eax 0x3db7fa1d
sbb eax 0xd46c481d
sbb eax 0x1d1d3d1d
mov bh 0x1d
sbb eax 0x1d1da71a
aad 0xfb
lds ebx [ cs : 0x1d1d1d2e ]
ficomp [ 0xffffffffe21d1d7d ]
in eax 0xd3
loop r-xdata
loop r-xdata
sbb eax 0x9de2652e
adc edi esi
jge r-xdata
sbb eax 0xf31d1d1d
loop r-xdata
loopne r-xdata
popfd
sbb ah dl
pop ebp
loop r-xdata
loop r-xdata
sbb eax 0x1d1d1d3a
sbb eax 0xe2e293e2
sbb eax 0x331d9d1d
loop r-xdata
loop r-xdata
sbb eax 0x1d486ded
loop r-xdata
mov bh 0x5d
loop r-xdata
dec eax
sbb eax 0xe21de21d
sbb eax 0x1d1d1de2
sbb eax 0x1df0e2f3
cmp bl [ 0xffffffffe21d1d1d ]
xchg ebx eax
sbb eax 0x121212c4
adc dl [ edx ]
int3
sbb eax 0x1d1d1d1d
or [ 0x12127b1d ] ebx
loop r-xdata
sbb eax 0x1d7db765
insd
dec eax
jge r-xdata
sbb eax 0xdde25db7
loop r-xdata
sbb eax 0x1d843d1d
mov [ 0x486ded1d ] al
loop r-xdata
loop r-xdata
popfd
mov [ ebp - 0x1e ] ebx
adc ebx [ 0xffffffffe2f2e25d ]
bound esp [ edx + 0x62 ]
sbb ah dl
loop r-xdata
loop r-xdata
sbb eax 0x3d1dbc1a
inc esi
pop ebx
inc edx
0x1a626262 0xe2e2
loop r-xdata
sbb eax 0x1dbce57b
loop r-xdata
ficomp [ 0xffffffffe21d1d7d ]
loop r-xdata
sbb eax 0xe2e2f3e2
dec eax
cmp eax 0x3d1d1d60
test [ 0x6ded1da2 ] bl
dec eax
loop r-xdata
sbb eax 0x93e21d1d
loop r-xdata
std
enter 0x1d6a 0xfd
enter 0xe29d 0xdd
enter 0x2a1d 0xdd
movsb [ edi ] [ esi ]
sbb eax 0x1dc8fde2
mov bh 0xda
inc ebx
push 0x48
enter 0xb71d 0xda
cmp eax 0x3db7ade2
sbb eax 0xe2f2e25d
enter 0xb163 0xe2
enter 0x4895 0xe2
sti
sbb eax 0x1dc8e21d
loop r-xdata
adc ah [ ebx + 0x12 ]
adc bl [ 0x1dea1d1d ]
sbb eax 0x1d1df71d
sbb eax 0x1d1d1d1d
les edx [ edx ]
adc dl [ edx ]
sbb eax 0x7b1d1d09
adc dl [ edx ]
sbb eax 0x1de21de2
loop r-xdata
sbb eax 0x1da71a1d
sbb eax 0x2e2efbd5
lds ebx [ 0x1d1d1d2e ]
jno r-xdata
mov bh 0x3d
push esi
0x6a1d9de2 0x9db7
jge r-xdata
mov bh 0x7d
mov ah 0x7a
dec eax
jge r-xdata
sbb eax 0xe2f31d1d
sub_40253f
pop ss
xor al [ edi + 0x2f ]
fwait
js r-xdata
je r-xdata
dec eax
arpl [ edi + 0x1d1dcf9f ] bx
adc bh [ ebx - 0x2cd81aeb ]
iretd
rcl ebx cl
iretd
clc
adc cl bh
enter 0xcfcf 0xe9
or [ ebx - 0x7f ] ebx
adc dl [ edi ]
dec ebx
iretd
sub_402554
inc edi
pop ss
adc ah ch
in eax 0xe5
rcl [ edi ] cl
mov eax [ 0xffffffffe5601544 ]
in eax 0x9b
into
adc dl [ edx ]
adc dl [ edx ]
arpl [ ebp + 0x1d ] bx
pop ss
pop ss
pop ss
adc dl [ edi ]
adc ah [ eax + 0x48 ]
mov edi 0x4a9f9f44
inc esp
push edx
adc dl [ edx ]
mov ebx 0xd7d7f015
in eax 0xe5
pushad
in eax 0x64
rcl [ edx ] cl
adc bl [ ecx ]
adc dl ah
mov ecx 0xe5e56044
mov esi 0x12cfcf9b
iretd
sub_402598
test al 0x1d
sbb eax 0xd3d37f17
rcl [ ebx ] cl
adc bl bh
inc esp
xchg edi eax
fwait
mov bl 0xb3
fcom [ edx ]
rcl [ 0x646fea67 ] cl
nop
rcl edi cl
pushad
adc eax 0x121de515
iretd
sub_4025d7
push edi
sbb eax 0x54e5ead7
adc eax 0xe560cbe5
in eax 0xe5
mov ebx 0x6059157c
sbb eax 0x449fcf17
pushad
in eax 0xe5
cwde
push ecx
lea edx [ edx ]
adc dl [ edi ]
pop ss
sbb eax 0x171d1d1d
pop ss
pop ss
pop ss
pop ss
iretd
sub_4026a7
loop r-xdata
pushad
0x602a4de2 0xc7ea
dec ebp
loop r-xdata
pop ss
rcl [ edi ] cl
into
fwait
adc dl [ edi ]
pop ss
push ss
pop ss
xor [ ebx ] ch
stc
jg r-xdata
mov bh 0xea
loop r-xdata
mov bh 0x90
loop r-xdata
rcl ebx cl
adc dl [ cs : ebx ]
sbb eax 0x1d181d1d
and [ edi + 0x1d1d1d41 ] dl
pop ss
pop ss
adc dl bl
loop r-xdata
0x4de5b2b7 0xe2ea
sub_40270a
loop r-xdata
or [ 0xffffffffea9155cf ] edx
adc dl [ edx ]
iretd
loop r-xdata
loop r-xdata
sbb [ 0x1d419720 ] bl
fsub st2
loop r-xdata
sbb eax 0x811d9a1d
sbb eax 0xcf1d1d5e
pushad
clc
in eax 0x9f
pushad
0x602a4de2 0xc7ea
pushad
adc ebx [ 0x1d751d1d ]
inc edi
sbb eax 0x1d1d1d1d
das
loop r-xdata
cmp [ edi - 0x1d1d1d16 ] esi
loop r-xdata
sbb eax 0xe22f1d1d
adc eax 0x444460b7
loop r-xdata
rcr [ 0x17484d17 ] cl
pushad
adc eax 0x4bd3e560
das
sbb eax 0x9a1d1dd0
sbb eax 0x1d5e1d81
sbb eax 0x9f860cf
adc eax 0xea9155cf
dec ebp
dec eax
dec eax
arpl [ edx + edi + 0x48 ] ax
dec eax
dec eax
dec eax
inc edi
inc edi
dec eax
mov bh 0x60
inc esp
inc esp
sbb eax 0x1217171d
shl edx cl
loop r-xdata
sbb eax 0x1d419720
mov bh 0xb2
in eax 0x4d
0xe2d8e2e2 0x76e2
jg r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0xeae51d89
0x1d1d1dbb 0x1d1d
mov [ 0xffffffffbbeaeae5 ] ebx
sbb eax 0x1d1d1d1d
sbb eax 0x671d1d1d
ja r-xdata
into
mov al [ 0xfffffffff4cee5b7 ]
dec eax
dec eax
inc esp
lahf
jae r-xdata
dec eax
mov ebp 0x9fb3a5b3
inc esp
add [ edi + 0x1d1d124d ] dh
sbb eax 0x1d1dc01d
mov ch 0xea
loop r-xdata
sbb eax 0x1d4f1d1d
sbb eax 0x1dde671d
sbb eax 0x9bcf2e60
in eax 0x63
into
adc ah ch
mov eax 0x485ecfcf
dec eax
arpl [ edi - 0x35084748 ] si
fwait
lahf
lahf
loop r-xdata
inc esp
arpl [ edi - 0x3f ] bp
out 0x48 eax
dec esp
mov cl 0x60
cwde
dec eax
dec eax
dec eax
aaa
dec eax
dec eax
inc esp
inc esp
inc esp
fwait
0x1d1d1de2 0x1da8
loop r-xdata
sbb eax 0xd61d1d1d
sbb eax 0xeae2eae5
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d9f
scasb [ edi ]
fwait
0xb79fb264 0x3be5
pushad
loop r-xdata
lahf
in eax 0x44
sub_402729
inc esp
inc esp
arpl dx bp
push ss
pushad
lahf
inc edi
inc esp
inc esp
lahf
adc eax 0x9f444444
dec eax
and dl 0xea
sbb eax 0x1d1d1d37
sbb eax 0xea64e5e5
pushad
adc ebx [ 0x1d751d1d ]
inc edi
sbb eax 0x1d1d1d1d
das
loop r-xdata
dec ebp
mov bh 0x60
inc esp
inc esp
dec eax
dec eax
arpl [ edx + edi + 0x48 ] ax
dec eax
dec eax
dec eax
inc edi
inc edi
dec eax
jg r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0xeae51d89
0x1d1d1dbb 0x1d1d
mov [ 0xffffffffbbeaeae5 ] ebx
sbb eax 0x1d1d1d1d
sbb eax 0x671d1d1d
ja r-xdata
into
mov al [ 0xfffffffff4cee5b7 ]
dec eax
dec eax
inc esp
lahf
jae r-xdata
dec eax
mov ebp 0x9fb3a5b3
inc esp
add [ edi + 0x1d1d124d ] dh
sbb eax 0x1d1dc01d
mov ch 0xea
loop r-xdata
sbb eax 0x1d4f1d1d
sbb eax 0x1dde671d
sbb eax 0x9bcf2e60
in eax 0x63
into
adc ah ch
mov eax 0x485ecfcf
dec eax
arpl [ edi - 0x35084748 ] si
fwait
lahf
lahf
loop r-xdata
inc esp
arpl [ edi - 0x3f ] bp
out 0x48 eax
dec esp
mov cl 0x60
cwde
dec eax
dec eax
dec eax
aaa
dec eax
dec eax
inc esp
inc esp
inc esp
fwait
0x1d1d1de2 0x1da8
loop r-xdata
sbb eax 0xd61d1d1d
sbb eax 0xeae2eae5
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d9f
scasb [ edi ]
fwait
0xb79fb264 0x3be5
pushad
loop r-xdata
lahf
in eax 0x44
sub_40285f
sbb eax 0x1d1d1d1d
sbb eax 0x64e2e2d3
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0xed482e1d
mov esp 0xeae51212
mov esp 0x7650fd4b
arpl [ edx ] si
aas
aam 0xbc
rcr [ 0x4464b704 ] cl
adc bl [ 0x1d1d1d1d ]
sbb eax 0xe2dc6017
adc eax 0xe51d1d1d
sbb eax 0x171d1d1d
sbb eax 0xb7480cca
into
sbb eax 0x65eae2d3
adc ah [ ebx + 0x2a ]
and [ cs : ebx + 0x1d ] ecx
adc dh [ esi - 0x2c2cc544 ]
inc esp
cmp eax 0x1d1d1db7
mov esp 0xe22ecf1d
loop r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0xcf1d1d1d
rcl ebx cl
push cs
rcl ebx cl
iretd
sbb eax 0x1d1d1d1d
xchg esi eax
sbb eax 0x1d1d1d1d
sahf
fwait
iretd
sub_4028d6
sbb eax 0x153bcf12
les edx [ edx ]
sbb eax 0x8e727b63
jbe r-xdata
rcl ebx cl
rcl ebx cl
mov ebx 0xd32517cc
adc eax 0x1564ea46
adc eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
xchg edi eax
push esi
sbb eax 0xcf2d1d1d
iretd
sbb eax 0xe2c71217
sub al 0xce
inc ebx
mov bl 0x47
sbb eax 0x78171d1d
loop r-xdata
iretd
insd
pushad
sbb eax 0x1d1d1d1d
dec edx
pop edx
sbb eax 0x1da31d1d
0xcfca
sub_4029ab
ror edx cl
or al 0x1d
mov esp 0x1df5e51d
sbb eax 0x1d1d251d
sbb eax 0x1d1d1dc4
sbb eax 0x1d1d1dca
sbb eax 0x12b4121d
adc dl [ edx ]
mov edx [ edx ]
adc dl [ edx ]
adc bl [ 0x121d67ea ]
adc dl [ edx ]
adc cl dl
movlps xmm2 [ edx ]
adc cl bh
jpo r-xdata
adc ch [ ebp + 0x12 ]
adc dl [ edx ]
inc esp
aas
push cs
sbb eax 0xca1212a4
dec edi
adc dl [ edx ]
adc bl [ 0x341d2c1d ]
sbb eax 0x1d1d551d
sbb eax 0x1d1d1d1d
sbb eax 0x1d4d931d
sbb eax 0x121d1d1d
adc dl [ edx ]
into
adc dl [ edx ]
adc dl [ edx ]
0x1212
sbb eax 0x1d1d1d9b
sbb eax 0x1d1d1d1d
sbb eax 0x221d1d1d
sbb eax 0x1d7e1d1d
sbb eax 0x1283121d
adc dl [ edx ]
adc dl [ edx ]
sub_402b23
adc dl [ edx ]
adc dl [ edx ]
adc cl dh
into
adc cl dl
into
sbb bl [ 0x1d1d3b1d ]
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0xcecece12
into
adc dl [ edx ]
adc cl dh
into
into
into
iretd
sub_402beb
loop r-xdata
jecxz r-xdata
inc esi
sub esp ebx
fwait
push 0xffffffe2
in eax dx
loop r-xdata
loop r-xdata
add ebx [ 0xffffffffe2621d22 ]
loop r-xdata
loop r-xdata
and al bl
loop r-xdata
shl dl 0x1
in eax dx
add ebx [ 0xffffffffe2621b62 ]
loop r-xdata
arpl [ 0xffffffffd0621d62 ] bx
jecxz r-xdata
loop r-xdata
pop ecx
loop r-xdata
retn
sbb al 0xe2
sbb eax 0xede26a9b
loop r-xdata
add ebx [ 0xffffffffe2a71d62 ]
and ah dl
add ah dl
loop r-xdata
loop r-xdata
bound edx [ ecx - 0x73 ]
loop r-xdata
loop r-xdata
jecxz r-xdata
loop r-xdata

shl edx cl
add ah dl
inc ecx
stc
loop r-xdata
bound ebx [ 0xffffffffede2e222 ]
add eax eax
bound ebx [ 0xffffffffede2e262 ]
in eax dx
loop r-xdata
xor esp edx
in eax 0x3
add ebx [ 0xffffffffe2221d62 ]
loop r-xdata
int3
in eax 0x22
loop r-xdata
sbb ah dl
sbb eax 0xe2e2e262
adc esp [ edx - 0x1e ]
loop r-xdata
loop r-xdata
push ecx
in eax dx
adc ah dl
push ds
loop r-xdata
loop r-xdata
loop r-xdata
popad
sbb eax 0xe2621d22
loop r-xdata
loop r-xdata
and ebx [ 0xffffffffe2621d22 ]
loop r-xdata
in eax 0x22
loop r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
loop r-xdata
shl [ edx + 0x1d ] 0x62
loop r-xdata
in eax dx
loop r-xdata
xor [ 0xffffffffe2221d62 ] bl
and ebp ebp
sbb eax 0xe2621d22
loop r-xdata
in eax 0x3
sbb eax 0xe2a71d62
add ebx [ 0x33626162 ]
loop r-xdata
sbb eax 0x33626162
loop r-xdata
loop r-xdata
jecxz r-xdata
loop r-xdata
in eax 0x1a
loop r-xdata
jecxz r-xdata
in eax dx
in eax dx
loop r-xdata
in eax 0x63
jae r-xdata
loop r-xdata
loop r-xdata
jecxz r-xdata
dec ecx
inc esp
loop r-xdata
jecxz r-xdata
loop r-xdata
sbb eax 0xe2021d02
outsb
loop r-xdata
loop r-xdata
in eax 0xc0
jpo r-xdata
loop r-xdata
dec esp
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0xe2021d02
loop r-xdata
std
in eax dx
loop r-xdata
mov eax [ ebx + 0x62 ]
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
loop r-xdata
and ah dl
and ah dl
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
push edx
std
sbb eax 0x21d021d
sbb eax 0x7b1d021d
sbb eax 0x347b1d02
loop r-xdata
in eax dx
and al 0xdc
sbb [ 0xffffffffeddae202 ] ebx
loop r-xdata
sbb eax 0x5b1d021d
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add bh bh
sbb eax 0xe2e21d3a
mov ebp 0xac021de3
loop r-xdata
adc ah dl
loop r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
jecxz r-xdata
sbb eax 0xe2221d62
std
xor al 0xe2
std
rcr [ 0xffffffffe2021d02 ] 0x1
sbb eax 0xe2021d02
loop r-xdata
sbb eax 0x2c9021d
loop r-xdata
fcomp [ ecx ]
sbb eax 0xeddae202
std
sbb eax 0xe202c902
loop r-xdata
fnsave [ ebx - 0x16 ]
xchg esp eax
sub [ eax ] al
add [ eax ] al
and [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ eax ] al
popfd
adc cl dh
loop r-xdata
aaa
push es
loop r-xdata
loope r-xdata
sbb eax 0xe2621b62
in eax dx
popad
bound esi [ ebx ]
loop r-xdata
loop r-xdata
sbb eax 0x21d021d
loop r-xdata
sbb eax 0x21d0c1d
and edx 0xffffffed
dec ebp
sbb eax 0xe2121d02
loop r-xdata
loop r-xdata
into
into
into
iretd
into
loop r-xdata
sbb bl [ 0x1d1d3b1d ]
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0xcecece12
into
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
inc edi
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0x481c1de2
loop r-xdata
adc dl [ edx ]
pushfd
loop r-xdata
sbb eax 0x1212ca12
xchg ebx eax
loop r-xdata
into
jmp r-xdata
loop r-xdata
adc dl [ edx ]
adc cl dh
into
adc cl dl
into
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb al 0xe2
adc ah dl
loop r-xdata
loop r-xdata
jge r-xdata
add ah dl
add ah dl
loop r-xdata
loop r-xdata
pushad
loop r-xdata
sbb al 0x48
sub_402dc6
mov bh 0xdd
mov bh 0xb7
dec eax
fnsave [ edi - 0x4822e2b8 ]
sbb eax 0xe2b7bde2
mov bh 0xbd
mov bh 0xb7
cmpsd [ esi ] [ edi ]
mov [ 0xffffffffbd1d4871 ] al
mov bh 0x1d
loop r-xdata
mov bh 0x9c
mov bh 0x36
mov bh 0x9d
mov bh 0xb7
popfd
fimul [ eax + 0x1d ]
popfd
sub bl [ 0xffffffffe2b77de2 ]
mov bh 0x7d
mov [ edi + 0x48b77d5a ] dh
enter 0x4884 0x61
enter 0x1d48 0x1d
enter 0xe21d 0xe2
mov bh 0x9f
pop eax
xchg esp eax
mov bh 0xb7
dec eax
loop r-xdata
enter 0xb7e2 0x7d
enter 0x48b7 0x7d
enter 0xd648 0x8f
enter 0xe21d 0x5d
enter 0xb7e2 0x5d
enter 0x48ad 0x5d
enter 0xf448 0x5d
enter 0xe21d 0x10
enter 0xb7e2 0x3d
dec eax
mov bh 0xcf
and bh [ 0xffffffffb411489b ]
mov bh 0x1d
aad 0x53
mov bh 0xe2
mov bh 0x1d
mov bh 0xb7
dec eax
sbb eax 0x1d1d48b7
mov bh 0x1d
loop r-xdata
mov bh 0x3d
popfd
loop r-xdata
sbb eax 0xe21d2a9d
jge r-xdata
0x3248e89d 0x489d
sbb eax 0xe21db7e2
std
mov bh 0x48
loop r-xdata
jge r-xdata
enter 0x487f 0x3d
enter 0x1d48 0x3d
enter 0xe21d 0x1d
enter 0xb7e2 0x9c
sbb eax 0xe2c810e2
mov bh 0x3d
mov bh 0x5a
jge r-xdata
mov bh 0xe2
mov bh 0xfd
mov bh 0xb7
dec eax
sbb eax 0xfd1d48b7
mov bh 0x1d
imul ebx ebp 0xffffffb7
sbb eax 0xe2f3b77d
pop ebp
mov bh 0xe2
mov bh 0x5d
mov bh 0xb7
dec eax
pop ebp
sar [ edx ] cl
sbb eax 0xe21db75d
cmp eax 0x3db7e2b7
dec eax
sub_402edf
std
neg [ 0xffffffffe248dda8 ]
mov bh 0xdd
dec eax
mov bh 0x48
fisttp [ eax + 0x48 ]
sbb eax 0x331d48dd
mov ebp 0x64b7e248
dec eax
mov bh 0x59
mov ebp 0xbd1d4877
sbb eax 0xe2489db8
mov bh 0x9d
dec eax
mov bh 0x15
popfd
dec eax
dec eax
dec eax
sbb eax 0xe21d9de2
std
mov dh 0xe9
salc
std
jl r-xdata
add al al
jge r-xdata
sbb eax 0xf41d481d
loop r-xdata
dec eax
std
dec eax
sbb eax 0xe21d36fd
fnsave [ esi ]
loop r-xdata
dec eax
mov bh 0x9a
stosd [ edi ]
dec eax
dec eax
sbb eax 0x11f0487d
arpl [ ecx + 0x4852b7e2 ] cx
mov bh 0x48
pop ebp
dec eax
dec eax
mov ebp 0xbd1d4836
sbb eax 0x66369de2
loop r-xdata
xchg esp eax
pop ebp
dec eax
sbb eax 0xe2483de2
mov bh 0x3d
dec eax
mov bh 0x48
cmp eax 0x3d1d480a
dec eax
sbb eax 0xe2481de2
mov bh 0x1d
dec eax
mov bh 0x48
sbb eax 0x1d1d4848
dec eax
sbb eax 0xe236e2f4
mov bh 0xe2
mov bh 0x48
fnsave [ esi ]
mov bh 0x2
fnsave [ esi ]
dec eax
sbb eax 0xe2de36dd
mov ebp 0xbdb78de0
pop ecx
mov bh 0x9d
sbb eax 0x66369de2
mov al [ 0xffffffff9d1d4636 ]
sbb eax 0xe2367de2
mov bh 0x79
mov bh 0x48
jge r-xdata
jg r-xdata
popfd
sbb eax 0xe21d489d
jge r-xdata
loop r-xdata
or al 0x1d
mov bh 0x48
loop r-xdata
or [ edi ] 0x7d
sbb eax 0xa8365de2
mov bh 0x14
mov bh 0x48
pop ebp
dec eax
push esi
pop ebp
mov ds [ 0xffffffffe2363de2 ]
mov bh 0x3d
mov bh 0xac
cmp eax 0xf31d4836
sbb eax 0xe20f1de2
mov bh 0x1d
mov bh 0x7e
sbb eax 0x1d1d4876
sbb eax 0xb71d0c7f
dec eax
mov bh 0x9d
mov ebp 0x9de21d36
loop r-xdata
mov bh 0x48
sbb eax 0xe21d1ddd
dec eax
loop r-xdata
sbb eax 0x1d1dd11d
sbb eax 0x1d1d1d9f
jbe r-xdata
aad 0xfc
mov ebp 0xbdb7e21d
sbb eax 0x1dbd57b7
dec esp
sbb eax 0xefc81dbd
popfd
sbb eax 0x1da0b7b8
mov bh 0x48
sbb eax 0x1d9d1d48
sbb eax 0x1dfdb7e2
mov bh 0x48
std
sbb eax 0x1dfd9be2
sbb eax 0xe21ddde2
mov bh 0xdd
sbb eax 0x1ddd48b7
cmp ebx [ 0xffffffffe21d1ddd ]
jge r-xdata
sbb eax 0xe2d51d1d
popfd
jae r-xdata
sbb eax 0x9de2d51d
mov esp 0x1de27d1d
rcr [ ebp - 0x1e ] 0xe2
mov bh 0x5d
loop r-xdata
sub eax 0xafca1d48
sbb eax 0xb51d2e1d
rcr [ ebp - 0x62a2481e ] cl
cmp eax 0x3d48c51d
cld
dec eax
pop ebp
loop r-xdata
in eax dx
mov bh 0x7d
loop r-xdata
sbb eax 0xe21d7de2
mov bh 0x7d
sbb eax 0x1d7d48cd
dec eax
sbb eax 0xe21d1d4e
add eax 0x5db7e21d
sbb eax 0xe21de25d
loop r-xdata
mov bh 0x3d
loop r-xdata
dec eax
jge r-xdata
loop r-xdata
sbb al 0x48
dec eax
cmp eax 0x721d6ae2
loop r-xdata
sbb eax 0x1d1d1d76
sbb eax 0x739de2d5
loop r-xdata
sbb eax 0x1db51d2e
sbb eax 0x1d1d1dd1
lahf
sbb eax 0x1d761d1d
cmp eax 0x3d48dfe2
loop r-xdata
std
xchg ebx eax
lds ecx [ eax + 0x3d ]
popfd
loop r-xdata
xor bl [ 0x1d1d1d7c ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
adc bh [ eax - 0x61 ]
adc dl [ esi ]
push 0x8b121212
sbb eax 0x12f512a9
pop ss
adc ch bl
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
sbb eax 0x1d1d1d1d
sbb eax 0x121212fd
adc cl [ ecx - 0x5bed0cee ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
mov esi 0x12241212
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
outsd
sbb eax 0x1212651d
adc dl [ edx ]
adc dl [ edx ]
inc edx
push edx
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc cl [ edx + 0x12 ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
pop ss
sbb eax 0x12121d1d
ja r-xdata
sbb eax 0x1d48b7e2
mov dh 0xc6
loop r-xdata
sbb eax 0x931de272
enter 0xb739 0xb0
xchg ebp eax
mov bh 0x48
loop r-xdata
sbb eax 0x1d5d48b7
dec eax
sbb eax 0x15d8205d
jbe r-xdata
sbb eax 0xe21d05e2
mov bh 0x5d
dec ax
sbb eax 0xe21d0486
jge r-xdata
pop ebp
popfd
adc dl [ edx ]
adc bl [ 0x1212161d ]
adc dl [ edx ]
adc al [ esi ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc ah [ ebx ]
adc dl [ edx ]
inc esp
rcl ebx cl
adc bl [ 0x12121212 ]
adc al [ ebx + 0x171d1d3c ]
pop ss
jpe r-xdata
sti
adc dl [ edx ]

enter 0x5fb7 0x6f
enter 0x1d6a 0x3c
enter 0xb967 0xdf
enter 0xa8e2 0xdd
nop
mov bh 0x12
sbb [ 0x42424612 ] ebx
inc esi
dec eax
sbb eax 0xe22cc8e2
std
enter 0xb7e2 0xfd
mov bh 0x12
adc dl [ edi ]
adc cl [ edi + edx + 0x13 ]
sbb eax 0x1228171d
xor [ edi ] dl
adc edx [ ecx + 0x17 ]
pop ss
retn
adc dl [ edx ]
push ss
adc dl [ edx ]
adc dl [ edx ]
pop ss
pop ss
stosb [ edi ]
push 0x12
adc dl [ edx ]
inc ecx
cmp ecx [ edx ]
iretd
sub_403055
sbb eax 0xb71da73d
sbb eax 0x1d48b71d
jge r-xdata
sbb eax 0xe2d51d1d
popfd
jae r-xdata
sbb eax 0x9de2d51d
mov esp 0x1de27d1d
rcr [ ebp - 0x1e ] 0xe2
mov bh 0x5d
loop r-xdata
sub eax 0xafca1d48
sbb eax 0xb51d2e1d
rcr [ ebp - 0x62a2481e ] cl
cld
dec eax
pop ebp
loop r-xdata
sbb eax 0x1d1dd11d
sbb eax 0x1d1d1d9f
jbe r-xdata
in eax dx
mov bh 0x7d
loop r-xdata
sbb eax 0xe21d7de2
mov bh 0x7d
sbb eax 0x1d7d48cd
dec eax
sbb eax 0xe21d1d4e
add eax 0x5db7e21d
sbb eax 0xe21de25d
loop r-xdata
mov bh 0x3d
loop r-xdata
dec eax
cmp eax 0x3d48c51d
aad 0xfc
jge r-xdata
loop r-xdata
sbb al 0x48
dec eax
cmp eax 0x721d6ae2
loop r-xdata
sbb eax 0x1d1d1d76
sbb eax 0x739de2d5
loop r-xdata
sbb eax 0x1db51d2e
sbb eax 0x1d1d1dd1
lahf
sbb eax 0x1d761d1d
cmp eax 0x3d48dfe2
loop r-xdata
std
xchg ebx eax
lds ecx [ eax + 0x3d ]
popfd
loop r-xdata
xor bl [ 0x1d1d1d7c ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
adc bh [ eax - 0x61 ]
adc dl [ esi ]
push 0x8b121212
sbb eax 0x12f512a9
pop ss
adc ch bl
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
sbb eax 0x1d1d1d1d
sbb eax 0x121212fd
adc cl [ ecx - 0x5bed0cee ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
mov esi 0x12241212
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
outsd
sbb eax 0x1212651d
adc dl [ edx ]
adc dl [ edx ]
inc edx
push edx
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc cl [ edx + 0x12 ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
pop ss
sbb eax 0x12121d1d
ja r-xdata
sbb eax 0x1d48b7e2
mov dh 0xc6
loop r-xdata
sbb eax 0x931de272
enter 0xb739 0xb0
xchg ebp eax
mov bh 0x48
loop r-xdata
sbb eax 0x1d5d48b7
dec eax
sbb eax 0x15d8205d
jbe r-xdata
sbb eax 0xe21d05e2
mov bh 0x5d
dec ax
sbb eax 0xe21d0486
jge r-xdata
pop ebp
popfd
adc dl [ edx ]
adc bl [ 0x1212161d ]
adc dl [ edx ]
adc al [ esi ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc ah [ ebx ]
adc dl [ edx ]
inc esp
rcl ebx cl
adc bl [ 0x12121212 ]
adc al [ ebx + 0x171d1d3c ]
pop ss
jpe r-xdata
sti
adc dl [ edx ]

enter 0x5fb7 0x6f
enter 0x1d6a 0x3c
enter 0xb967 0xdf
enter 0xa8e2 0xdd
nop
mov bh 0x12
sbb [ 0x42424612 ] ebx
inc esi
dec eax
sbb eax 0xe22cc8e2
std
enter 0xb7e2 0xfd
mov bh 0x12
adc dl [ edi ]
adc cl [ edi + edx + 0x13 ]
sbb eax 0x1228171d
xor [ edi ] dl
adc edx [ ecx + 0x17 ]
pop ss
retn
adc dl [ edx ]
push ss
adc dl [ edx ]
adc dl [ edx ]
pop ss
pop ss
stosb [ edi ]
push 0x12
adc dl [ edx ]
inc ecx
cmp ecx [ edx ]
iretd
sub_403105
sbb eax 0x1d1de21d
sbb eax 0xe21de21d
loop r-xdata
shl [ edx + 0x62 ] cl
loop r-xdata
loop r-xdata
pop edi
outsd
enter 0x1d6a 0x3c
enter 0xb967 0xdf
enter 0xa8e2 0xdd
nop
mov bh 0x12
sbb [ 0x42424612 ] ebx
sbb eax 0xe21de24e
loop r-xdata
sbb eax 0x1d1d1d1d
sbb eax 0x129f7812
push ss
sbb eax 0x1d1d1d1d
adc dl [ edx ]
adc dl [ edx ]
adc bl [ 0x1d321d35 ]
jl r-xdata
inc esi
mov ecx 0xa8e2c8df
fst [ eax + 0x1d1912b7 ]
adc al [ esi + 0x42 ]
inc edx
sbb eax 0xe21de23e
hlt
adc dl [ edx ]
adc bl [ 0x1212161d ]
adc dl [ edx ]
adc al [ esi ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc ah [ ebx ]
adc dl [ edx ]
inc esp
rcl ebx cl
adc bl [ 0x12121212 ]
adc al [ ebx + 0x171d1d3c ]
pop ss
jpe r-xdata
sti
adc dl [ edx ]

adc ch bl
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
sbb eax 0x1d1d1d1d
sbb eax 0x121212fd
adc cl [ ecx - 0x5bed0cee ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
mov esi 0x12241212
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
outsd
sbb eax 0x1212651d
adc dl [ edx ]
adc dl [ edx ]
inc edx
push edx
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc cl [ edx + 0x12 ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
pop ss
sbb eax 0x12121d1d
ja r-xdata
test eax 0x1712f512
push 0x8b121212
sbb eax 0x12f512a9
pop ss
sbb eax 0x1212121d
adc dl [ edx ]
adc bl [ 0x1d1d1d1d ]
sbb eax 0x1d1d1d1d
adc bh [ eax - 0x61 ]
adc dl [ esi ]
mov bh 0x12
adc dl [ edi ]
adc cl [ edi + edx + 0x13 ]
sbb eax 0x1228171d
xor [ edi ] dl
adc edx [ ecx + 0x17 ]
pop ss
retn
adc dl [ edx ]
push ss
adc dl [ edx ]
adc dl [ edx ]
pop ss
pop ss
stosb [ edi ]
push 0x12
adc dl [ edx ]
inc ecx
cmp ecx [ edx ]
iretd
sub_40319b
adc dl [ edx ]
in al dx
or eax 0x1217855e
dec esi
adc dl bl
rcl [ edx ] cl
adc dl [ edx ]
adc dl [ edx ]
pop ss
adc edx [ edx ]
adc dl [ edx ]
sbb eax 0x1212161d
adc dl [ edx ]
adc al [ esi ]
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
adc ah [ ebx ]
adc dl [ edx ]
inc esp
rcl ebx cl
adc bl [ 0x12121212 ]
adc al [ ebx + 0x171d1d3c ]
pop ss
jpe r-xdata
mov bh 0x12
adc dl [ edi ]
adc cl [ edi + edx + 0x13 ]
sbb eax 0x1228171d
xor [ edi ] dl
adc edx [ ecx + 0x17 ]
pop ss
retn
adc dl [ edx ]
push ss
adc dl [ edx ]
adc dl [ edx ]
pop ss
pop ss
stosb [ edi ]
push 0x12
adc dl [ edx ]
inc ecx
cmp ecx [ edx ]
iretd
sub_403259
lahf
dec eax
inc esp
push edx
sbb eax 0x7b60d35a
ror edi cl
pop ss
shl ebp cl
shl ebp cl
dec eax
pushad
mov edx 0x17ccaf73
pop ss
sbb eax 0xcf91171d
adc esi [ ebx - 0x606460b9 ]
iretd
sub_40336f
loop r-xdata
mov bh 0x9f
adc eax 0xc11d6201
out 0xe5 eax
loop r-xdata
sbb eax 0x1d1d1d1d
cmp bl [ 0xffffffff9ff0e21d ]
pushad
iretd
and [ ebx + 0x48 ] 0xe2e23748
sbb eax 0x1d1d1d1d
pushad
0x761d7bd3 0x481d
sbb eax 0x1d1d1d98
sbb eax 0x9bea9fca
fwait
in eax 0xb4
pop ss
out dx eax
test eax 0xcfd3d3b7
in eax 0x9b
adc eax 0x1d1db09b
sbb eax 0x9beae2bb
sbb eax 0x1d721d1d
sbb eax 0xe5d1191d
0xe56f
sub_40342a
ror [ edx + ebp * 8 + 0x1d1d1564 ] cl
sbb eax 0x1d1d1d1d
mov edi 0xcfcf191d
cmp dl [ edx ]
adc ah [ edi - 0x73 ]
lahf
jg r-xdata
add dl cl
mov al 0xce
fxch st6
into
into
adc dl [ edx ]
sbb [ edx ] dl
sar [ eax + 0x1d1d12ce ] cl
mov ebp 0x1d1d1d1d
sbb eax 0x1d1da81d
sbb eax 0xce121d7f
iretd
adc dl [ edx ]
adc dl [ esi ]
ror edi cl
cwde
0x1d1d6464 0x1d1d
sub_403451
sbb eax 0x1d1d1d1d
sbb eax 0x12121d1d
adc dl [ edx ]
adc dh [ ecx ]
sbb eax 0x1278482e
adc dl [ edx ]
adc dl [ edx ]
adc bl [ 0x1d1d1d1d ]
sbb eax 0x471d1d26
sbb eax 0x1d1d1d1d
sbb eax 0x1212a012
adc dl [ edx ]
xchg edi eax
adc dh [ ebp + 0x121202ce ]
adc dh dh
adc bl [ 0x1d1d1d1d ]
sbb eax 0x1d1d1d10
or bl [ 0xffffffff941d1d1d ]
adc al [ eax ]
0xceb0
sub_40352b
loop r-xdata
sbb eax 0xe2951d1d
loop r-xdata
jecxz r-xdata
sbb eax 0x12121d1d
cmpsd [ esi ] [ edi ]
into
lodsd [ esi ]
sbb eax 0x28
loop r-xdata
loope r-xdata
into
adc ah [ edi + 0x4612cece ]
into
loope r-xdata
loop r-xdata
jecxz r-xdata
adc cl dh
iretd
loopne r-xdata
jecxz r-xdata
je r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
loop r-xdata
add [ eax ] al
loop r-xdata
into
adc al [ esi - 0x32 ]
sbb eax 0xcea71212
loope r-xdata
jecxz r-xdata
loop r-xdata
jecxz r-xdata
loop r-xdata
and ah dl
pop esi
loop r-xdata
sbb eax 0x1d1db71d
sbb eax 0x951d1d1d
adc cl dh
sbb eax 0xdde2e262
add [ eax ] al
loop r-xdata
mov esi 0x12ceca12
into
loope r-xdata
in eax dx
xchg edi eax
loop r-xdata
xchg [ edx - 0x1e ] esp
push eax
loop r-xdata
jecxz r-xdata
sbb eax 0x1de2e21c
sbb eax 0x281de3e2
add [ eax ] al
loope r-xdata
bound edx [ esi + 0x6262e2e2 ]
mov bh 0x1d
sbb eax 0x1d1d1d1d
xchg ebp eax
frstor [ edx - 0x1e ]
loop r-xdata
adc ebx [ esi ]
loop r-xdata
insd
popad
loop r-xdata
sbb eax 0xe1e2e295
loop r-xdata
add ebx [ edx ]
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add bh bh
sbb eax 0xe28e1d1d
loope r-xdata
loop r-xdata
std
sbb al 0xaf
jecxz r-xdata
jecxz r-xdata
sbb al 0x9e
adc ebx [ esi ]
loop r-xdata
add [ eax ] al
add [ ecx ] al
sbb al 0xe2
jecxz r-xdata
in eax 0x1c
loop r-xdata
loop r-xdata
adc ebx [ esi ]
pop es
loop r-xdata
add [ eax ] cl
sbb al 0xe2
loop r-xdata
loop r-xdata
adc ebx [ esi ]
sbb al 0xe2
loop r-xdata
add [ eax ] al
sbb al 0xe2
loop r-xdata
adc [ eax ] al
add [ eax ] al
and [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ 0xffffffffe28e1d1d ]
sbb eax 0x1de3e21d
sub [ eax ] al
add [ eax ] al
sbb eax 0x1de3e21c
loop r-xdata
push ds
sbb eax 0x1d1d26e2
loop r-xdata
sub_4035c1
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add bh bh
sbb eax 0xe28e1d1d
bound edx [ esi + 0x6262e2e2 ]
sub_40363d
loop r-xdata
sbb eax 0xe21dc8bd
popfd
sbb eax 0xc848b7c8
jne r-xdata
enter 0xb7e2 0x9d
xor [ edi + 0x48c89d48 ] esi
sbb eax 0xe21dc89d
jge r-xdata
bound esp [ edx + 0x62 ]
bound esp [ edx + 0x22 ]
and ah [ edx ]
adc ch [ eax ]
inc esp
adc cl [ eax - 0x78 ]
enter 0x1d48 0xdd
enter 0xe21d 0xbd
enter 0x67e2 0xcf
enter 0x48b7 0xbd
enter 0x1d48 0xbd
enter 0xe21d 0x9d
ja r-xdata
mov bh 0x9d
fcom [ esi + 0x48 ]
out 0xb7 al
dec eax
sbb eax 0xe21db79d
jge r-xdata
mov ch 0x1d
enter 0xe21d 0xe2
mov bh 0xe2
mov bh 0xc6
pop esp
or [ eax - 0x1e ] 0x4c
loop r-xdata
cld
enter 0x48b7 0x7d
enter 0x1da8 0x7d
enter 0xe21d 0x5d
enter 0xb7e2 0x5d
enter 0x48b7 0xd0
enter 0x1d48 0x64
enter 0xe21d 0x3d
dec eax
dec esp
loop r-xdata
loop r-xdata
sbb eax 0xe21db7e2
std
jge r-xdata
fnsave [ edi - 0x4822e2b8 ]
aad 0x3e
mov ebp 0xbdb7e2b7
mov bh 0xb7
dec eax
mov ebp 0xbd1d48b7
and eax 0x159d9f1d
mov bh 0xb7
popfd
sbb eax 0xe2b7dde2
neg ch
mov bh 0xb7
dec eax
enter 0xb7e2 0x7f
enter 0x9fb7 0x3d
enter 0x1d48 0x3d
jmp 0xffffffffc85e185a
mov bh 0x1d
loop r-xdata
mov bh 0x86
adc al 0xb7
dec eax
sbb eax 0xe21db77d
pop ebp
mov bh 0xe2
mov bh 0x5d
mov bh 0xe4
fild [ esi + 0x5d1d48b7 ]
mov bh 0x1d
out dx eax
cmp eax 0x3db7e22f
mov bh 0xb7
aam 0x3d
push ebp
dec eax
sbb eax 0xe21db73d
sbb eax 0x1db7e2b7
mov bh 0xb7
iretd
std
mov bh 0x48
sbb eax 0xe21db75d
fnsave [ edi - 0x4822091e ]
mov bh 0x48
sbb eax 0xe22dfde2
mov bh 0xfd
mov bh 0xb7
dec eax
sub eax 0xb7fdb7e2
mov bh 0x48
sub_403817
std
sbb eax 0xe26ddd65
mov bh 0x8e
or al 0xb7
dec eax
fnsave [ esi ]
dec eax
sbb eax 0xe286364d
mov ebp 0xbdb7e236
mov bh 0x48
mov ebp 0xbd1d48c9
sbb eax 0xe236b3e2
mov bh 0x8a
mov bh 0x48
popfd
0x1d369d1d 0x7de2
sub_40384c
push cs
mov bh 0x7d
mov bh 0x7a
jge r-xdata
loop r-xdata
fwait
sbb eax 0xe21d367d
pop ebp
loop r-xdata
adc ebp ebx
sbb eax 0x3cdd1d48
mov bh 0x48
loop r-xdata
fst [ ebx + 0x365d48b7 ]
dec eax
sbb eax 0xe21d365d
cmp eax 0x3db7e236
mov bh 0x48
insd
dec eax
sbb eax 0xe20d3e44
mov [ 0x4fb7e236 ] eax
mov bh 0x48
sbb eax 0x331d2b36
sbb eax 0xb71de254
sbb eax 0xe2f43cdd
mov ebp 0xbdb7e21d
sbb eax 0x1dbd48b7
dec eax
sbb eax 0xe21d1dbd
popad
sbb eax 0xfb9dd2e2
dec eax
loop r-xdata
loop r-xdata
loop r-xdata
hlt
xchg ebx eax
dec esp
mov bh 0xfd
sbb eax 0x1dfd48b7
dec eax
sbb eax 0xe21d1d6a
fstp [ 0x1dddb7e2 ]
mov bh 0x11
fstp [ 0x3cdd1d48 ]
sbb eax 0xe2e24de2
sbb eax 0x1d3db7e2
mov bh 0x48
cmp eax 0x3d1d481d
mov [ 0x1d1db771 ] al
mov bh 0x48
sbb eax 0x2e1d48b3
sbb eax 0x1d1d2e1d
sbb eax 0x1d1dd1da
sbb eax 0x1d1d1d84
jpo r-xdata
dec eax
jge r-xdata
jge r-xdata
sbb eax 0x5a1d2e65
mov bh 0x3d
sbb eax 0x1d3d48b7
dec eax
sub eax 0x481d7d48
sbb eax 0xe21d1d7d
pop ebp
sbb eax 0xe2e29d5a
dec eax
sbb eax 0xe21de27d
pop ebp
loop r-xdata
mov bl 0x48
sbb eax 0x1d1d2e2e
sbb eax 0xd1da1d1d
sbb eax 0x1d841d1d
sbb eax 0x1d1d7b1d
mov bh 0x9d
loop r-xdata
popfd
loop r-xdata
sbb eax 0x1d2e651d
pop edx
dec eax
popfd
loop r-xdata
loop r-xdata
mov bh 0x5d
loop r-xdata
sbb eax 0xe21dc8e2
test eax 0xc1b7e2c8
sbb eax 0xe21de29d
sbb eax 0x9ce25de2
sbb eax 0x1d6cb7e2
dec eax
pop ebp
sbb eax 0x1d251d48
sbb eax 0xe21d3de2
sbb eax 0xb771a23d
sbb eax 0x1d48b71d
dec eax
pop ebp
aad 0x48
jpo r-xdata
test [ 0x1d7b1d1d ] bl
lds edi [ ebp - 0x1e ]
dec ebp
loop r-xdata
loop r-xdata
hlt
fwait
loop r-xdata
mov bh 0xc4
push cs
sbb eax 0x42424612
inc esi
0xe2626262 0x1d98
loop r-xdata
loop r-xdata
mov bh 0x3d
loop r-xdata
or eax 0x95599d48
sbb eax 0xe21ddb9d
jge r-xdata
sti
dec eax
sbb eax 0x1dd1da1d
sbb eax 0x1d1d841d
sbb eax 0x651d1d7b
sbb eax 0xe2e29d5a
enter 0x48b7 0xe2
enter 0x1d48 0xe2
enter 0xe21d 0xa9
enter 0xb7e2 0xc1
dec eax
cmp eax 0x3d1d48e2
inc ebp
sbb eax 0xb7e21db7
dec eax
sbb eax 0xe25a48e2
enter 0xccd2 0x9b
sub_4039a1
loop r-xdata
dec eax
sbb eax 0xe21dc8fd
fnstsw [ edx - 0x48372249 ]
les ecx [ esi ]
sbb eax 0x1de2e2e2
sbb eax 0xe2e21de2
sbb [ 0x1d1d1de2 ] 0x1d
loop r-xdata
adc dl [ edx ]
adc dl [ edx ]
adc al [ ecx ]
adc [ edx ] edx
adc dl [ edx ]
inc eax
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
rcl [ edx ] cl
jpo r-xdata
loop r-xdata
inc edx
iretd
adc dl [ edx ]
xor dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
pop ss
adc dl [ edx ]
pop ss
shl [ edi + 0x127112e5 ] cl
pop ebp
aad 0x48
jpo r-xdata
loop r-xdata
dec ebp
loop r-xdata
loop r-xdata
bound esp [ edx - 0x1e ]
cwde
sbb eax 0xe21de2e2
loop r-xdata
sbb eax 0x5812121d
push 0x121d1d1d
adc dl [ edx ]
push ebx
aaa
sbb eax 0x1212121d
mov [ 0x12128912 ] al
adc dl [ edx ]
adc dl [ edx ]
adc dl [ edx ]
add [ ecx ] edx
adc dl [ edx ]
adc al [ eax + 0x12 ]
adc dl [ edx ]
adc dl [ edx ]
adc dl bl
adc bh [ ebx + 0x12 ]
test [ 0x1d7b1d1d ] bl
lds edi [ ebp - 0x1e ]
fwait
loop r-xdata
sbb eax 0x42424612
inc esi
0xe2626262 0x1d98
sbb eax 0xe2bcdde2
mov bh 0xdd
enter 0xc4b7 0xe
sbb eax 0xe21de21d
loop r-xdata
mov bl 0x48
sbb eax 0x1d1d2e2e
sbb eax 0xd1da1d1d
sbb eax 0x1d841d1d
sbb eax 0x1d1d7b1d
mov bh 0x9d
loop r-xdata
mov bh 0xc4
push cs
loop r-xdata
sbb eax 0xe21de29d
sbb eax 0x1d1d1de2
sbb eax 0x93e21de2
popfd
loop r-xdata
sbb eax 0x1d2e651d
pop edx
dec eax
popfd
loop r-xdata
loop r-xdata
mov bh 0x3d
loop r-xdata
hlt
sbb eax 0xe21dc8e2
test eax 0xc1b7e2c8
sti
dec eax
sbb eax 0x1dd1da1d
sbb eax 0x1d1d841d
sbb eax 0x651d1d7b
sbb eax 0xe2e29d5a
enter 0x48b7 0xe2
enter 0x1d48 0xe2
enter 0xe21d 0xa9
enter 0xb7e2 0xc1
dec eax
cmp eax 0x3d1d48e2
inc ebp
sbb eax 0xb7e21db7
dec eax
sbb eax 0xe25a48e2
enter 0xccd2 0x9b
loop r-xdata
loop r-xdata
sbb eax 0xe2e29d5a
dec eax
sbb eax 0xe21de27d
pop ebp
loop r-xdata
sbb eax 0xe2e24de2
sbb eax 0x1d3db7e2
mov bh 0x48
cmp eax 0x3d1d481d
mov [ 0x1d1db771 ] al
mov bh 0x48
sbb eax 0x2e1d48b3
sbb eax 0x1d1d2e1d
sbb eax 0x1d1dd1da
sbb eax 0x1d1d1d84
jpo r-xdata
dec eax
loop r-xdata
jge r-xdata
loop r-xdata
mov bh 0x5d
loop r-xdata
jge r-xdata
sbb eax 0x5a1d2e65
or eax 0x95599d48
sbb eax 0xe21ddb9d
jge r-xdata
sbb eax 0xe2f43cdd
mov ebp 0xbdb7e21d
sbb eax 0x1dbd48b7
dec eax
sbb eax 0xe21d1dbd
popad
sbb eax 0xfb9dd2e2
dec eax
loop r-xdata
mov bh 0x3d
sbb eax 0x1d3d48b7
dec eax
sub eax 0x481d7d48
sbb eax 0xe21d1d7d
pop ebp
sbb eax 0x9ce25de2
sbb eax 0x1d6cb7e2
dec eax
pop ebp
sbb eax 0x1d251d48
sbb eax 0xe21d3de2
sbb eax 0xb771a23d
sbb eax 0x1d48b71d
dec eax
xchg ebx eax
dec esp
mov bh 0xfd
sbb eax 0x1dfd48b7
dec eax
sbb eax 0xe21d1d6a
fstp [ 0x1dddb7e2 ]
mov bh 0x11
fstp [ 0x3cdd1d48 ]
hlt
sub_403a10
fldenv [ eax - 0x2d ]
push 0xffffffa6
les ecx [ eax - 0x61 ]
adc dl [ edi ]
pop ss
mov [ edi ] dl
adc dl bl
aas
adc eax 0xcfd3ea15
fwait
mov bl 0x12
pop ss
sbb eax 0xe2e55acf
dec edi
0xf2ccea64 0xcf17
sub_403a37
mov esp 0x1d1da3cf
adc al [ edx + 0x60 ]
inc esp
loop r-xdata
pushad
0x1d1d8264 0x12a3
dec eax
dec eax
loop r-xdata
sbb eax 0xd3e56012
xor ebp ebx
mov bh 0x17
mov bh 0x60
0xd31d
adc bh [ ebx + 0x1d1db364 ]
sbb eax 0x91e59fea
inc esp
dec eax
lahf
test eax 0xe51d1ddc
0x60121d08 0xd3e5
sub_403add
loop r-xdata
add [ eax ] ah
add [ eax ] al
add [ eax ] eax
and [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x22 al
loop r-xdata
iretd
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
sbb eax 0x1d1d1de2
loop r-xdata
add [ ecx ] al
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x22 al
out 0x2 al
loop r-xdata
add [ eax ] al
loop r-xdata
loop r-xdata
mov edx 0xe202e3bb
add bh bl
add bh [ ebx ]
add ch ch
add bh [ 0x6102ed02 ]
sub [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
pushad
add [ eax ] al
add [ eax ] al
add bh bh
loop r-xdata
sbb eax 0x1de3621d
bound edx [ edx - 0x1ddd1d1e ]
[ 0x1d1fe21d ]
jecxz r-xdata
stosd [ edi ]
sbb eax 0x591d1d1d
sbb eax 0xcececa12
loop r-xdata
sbb eax 0x1d1d1fe2
loop r-xdata
in al 0xed
adc cl dh
sbb eax 0x1d591d1d
adc cl dl
loop r-xdata
call 0xffffffffd00a0404
nop
clc
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
into
sbb eax 0xca121d59
and ah dl
loop r-xdata
shr [ edi + 0x3b ] 0xf1
imul [ ecx - 0xd ]
sbb eax 0xe2e2e21d
loop r-xdata
0xcece
loop r-xdata
add [ eax ] al
jecxz r-xdata
into
loop r-xdata
sbb eax 0x1d1fe21d
jecxz r-xdata
0xcace
into
loop r-xdata
pop ds
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
in al dx
in eax dx
hlt
in eax dx
adc ah [ eax - 0x1b ]
shl [ ebx ] cl
jmp r-xdata
loop r-xdata
cmp cl al
clc
sbb eax 0x1d1de21d
sbb eax 0xe2e2e2e2
pop ss
mov [ edi ] dl
adc dl bl
aas
adc eax 0xcfd3ea15
fwait
mov bl 0x12
pop ss
sbb eax 0xe2e55acf
dec edi
0xf2ccea64 0xcf17
sbb eax 0x621d1daa
jecxz r-xdata
retn
and ah dl
sbb eax 0xe362e2e2
loop r-xdata
sub_403bb9
pushfd
rol cl 0xc4
mov cl 0xeb
xor ecx ebp
stosd [ edi ]
jecxz r-xdata
loop r-xdata
retn
in al 0x47
call 0x28915d39
out dx eax
in eax dx
dec ecx
rol esi 0xba
or esp ebx
iretd
sbb eax 0x1d1de21d
sbb eax 0xe2e2e2e2
adc dl ah
loop r-xdata
loop r-xdata
sti
loopne r-xdata
mul edx
sbb eax 0xf91d1de2
loop r-xdata
push 0xffffffb2
int1
loop r-xdata
loop r-xdata
neg [ ebx - 0x3a ]
push esp
sbb eax 0x1d1d411d
sbb eax 0x1d1d5de2
loop r-xdata
mul edx
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
cld
sbb eax 0x1dc7cbc0
sbb eax 0xe2e2e21d
loop r-xdata
int1
mul dl
jecxz r-xdata
jo r-xdata
imul [ ecx - 0xd ]
enter 0xcfc9 0x90
xlat
les esi [ eax - 0x6 ]
loop r-xdata
retn
loop r-xdata
pop ds
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
in eax dx
mov cl 0xe2
loop r-xdata
clc
loop r-xdata
mov bh 0xc8
leave
pop eax
jle r-xdata
sbb eax 0x1de21d1d
cmp bl 0xe0
loopne r-xdata
cmp cl al
clc
sbb eax 0x1d1de21d
sbb eax 0xe2e2e2e2
out dx eax
movsb [ edi ] [ esi ]
loopne r-xdata
loopne r-xdata
loopne r-xdata
loop r-xdata
rol edi 0x1d
les ebx [ edi - 0x4236 ]
std
cmp ch bh
inc bl
sbb eax 0x1dcfc8cb
inc eax
int1
mov dl 0xf1
[ 0x1d1fe21d ]
jecxz r-xdata
in eax dx
loopne r-xdata
shr [ edi + 0x3b ] 0xf1
cmp cl al
loop r-xdata
sbb eax 0x1d1d1de2
loop r-xdata
clc
loop r-xdata
iretd
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
sbb eax 0x1d1d1fe2
loop r-xdata
in al dx
in al 0xed
in eax dx
loop r-xdata
loop r-xdata
sbb eax 0x1d1de2f9
sbb eax 0x1d1d1d41
loop r-xdata
sbb eax 0x1d1d1de2
loop r-xdata
add [ eax ] al
loop r-xdata
call 0xffffffffd00a0404
nop
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
cmp esi ecx
loop r-xdata
loope r-xdata
add [ eax ] al
add bh bh
loop r-xdata
sbb eax 0xe2e2e21d
loop r-xdata
loop r-xdata
loope r-xdata
add [ eax ] al
jecxz r-xdata
loopne r-xdata
aam 0xec
in al dx
mov dh 0xf0
sbb eax 0x1d1fe21d
hlt
cmc
sub_403d3c
std
cmp [ ebp - 0x1de2e2e3 ] 0x9f1d1d1d
loop r-xdata
sbb eax 0x1dfdffff
div dh
mov [ 0x1df9f859 ] bl
mov bh 0x41
sbb eax 0x1ddad4d1
cli
cmc
cli
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0x1d88f6f6
pop ecx
clc
stc
sbb eax 0x1d41c7c6
rcl esp 0x1
ficomp [ 0x65faf5fa ]
loop r-xdata
sbb eax 0xe6e21d1d
sbb eax 0x2c7e21d
0xcfd2
dec ecx
sbb eax 0x1d1dbd81
sbb eax 0x1d1d1de2
lahf
sub_40402d
push eax
cli
cmc
cli
sbb eax 0x1dc0c0fd
mov ebp 0xcec91dca
int 0x1d
xlat
aam 0xd2
sbb eax 0x1d04cf06
leave
clc
iretd
sub_404049
sbb eax 0xecfff9ff
out 0xb6 eax
int1
sbb eax 0x1df8fbfb
test esi 0x1d1d9037
sbb eax 0x1d1d1d68
cld
sbb eax 0x1de21d1d
sbb eax 0xcdcce21d
sar [ edi - 0x2a ] cl
clc
clc
sbb eax 0x1ddefff9
stc
stc
stc
adc esp edx
aam 0x6
sbb eax 0x1ddcded8
retn 0xc1c2
sub_404550
[ 0x1ddcf2db ]
mov ah 0x82
sbb [ 0x5504796c ] 0x7c
add [ eax - 0x717742bb ] 0x1d
cmpsd [ esi ] [ edi ]
test eax 0x736b1da8
inc edx
sbb eax 0x1d022a59
jle r-xdata
cdq
loop r-xdata
iretd
insd
jg r-xdata
jne r-xdata
sbb eax 0x1def7061
push 0x78
and [ 0x1d6ab7a8 ] bl
into
iretd
push edx
sbb eax 0x1d4386b7
bound esi [ esi + 0x22 ]
sbb eax 0x1d1cc9d1
xchg ebp eax
push ebp
or ebp [ esi + 0x1d526897 ]
shl [ ebp - 0x24 ] 0x1d
mov eax [ 0xffffffffcd1ddcdd ]
ror ah cl
sbb eax 0x1ddda3a2
salc
salc
xlat
sbb eax 0x1de2cfe4
sub al 0xd5
fistp [ 0x1d85fff8 ]
mov [ eax - 0x7026e27b ] cl
sbb eax 0x1d73b3e4
xchg [ ebp - 0x667ae2a5 ] edx
sbb eax 0x1ddcdda1
int 0xd2
int3
sub_404649
sbb eax 0x1dd0d1ec
rcl ecx 0x1
aam 0x1d
rcl cl 0x1
salc
sbb eax 0x1db643b0
adc ecx [ edx - 0x5ae29ccc ]
sbb eax 0x1d1d1de2
loop r-xdata
sbb eax 0x79587b69
lahf
outsb
push ebx
sbb eax 0x1d566969
sub ecx esp
mov ecx eax
lodsd [ esi ]
fstp [ 0x1db3dede ]
fstp st5
mov [ 0xffffffffced3d1a9 ] al
sbb eax 0x5343a5db
cwde
jo r-xdata
sbb eax 0x1da2d0d3
in al dx
sbb eax 0x1dbaeae5
int1
not [ ecx - 0x686560e3 ]
pop ebx
push esi
dec esp
inc esp
sbb eax 0x1d646971
adc eax 0x831d616a
mov esi 0xabaf1dbb
ficomp [ 0xffffffffc4b4af8b ]
fcomp st2
salc
aaa
cld
scasb [ edi ]
xchg ebx eax
sbb eax 0x1d797868
jae r-xdata
sbb eax 0x4b64ada3
mov esi 0x991d7d8c
jae r-xdata
sbb eax 0x1d4591bf
jb r-xdata
sub ah [ eax + 0x6f ]
sbb [ 0x5db8bdb7 ] 0x6d
aam 0x68
sbb eax 0xb7652e3a
fisttp [ ebp + 0x25 ]
cmpsb [ esi ] [ edi ]
jo r-xdata
sbb eax 0x5db8bdb7
insd
sbb eax 0x1d4792b8
dec edi
adc cl [ edi ]
retn 0xeb9c
push ecx
jb r-xdata
inc esp
sbb eax 0x1d025d43
sub al 0x4f
cmp ebx [ 0x1d4c9781 ]
cld
std
mov [ 0xffffffffbe4b64ad ] eax
pop esp
sbb eax 0x1d547667
fwait
dec edi
sbb eax 0x1d486191
mov ebp 0xcd1d4b44
shl [ ebx - 0x43e3ee3 ] 0x1
sbb eax 0x1dfbf5f5
mov ebx 0xf1f0f21d
sbb eax 0x1dc843c6
mov cl 0xbf
mov eax 0xcfc1fc1d
sbb eax 0x1d285144
pop ebx
and al 0x3f
sbb eax 0x1d22927a
outsb
stosd [ edi ]
pop ecx
sbb eax 0x72516c9c
fldenv [ ebx + 0x48 ]
sbb eax 0x1d4a9d8c
mov al 0x83
jg r-xdata
arpl [ eax + 0x1d ] cx
mov [ ebp - 0x7c4fe2b6 ] ds
sbb eax 0xdfdeaf23
fxch st0
aad 0xd5
stosd [ edi ]
sbb eax 0x1da6aaab
int3
sub_404801
sbb eax 0x1d5897be
int1
inc esp
aaa
sbb eax 0x1d779fd9
mov ebx 0xd01d4e8d
frstor [ ebp + 0x1d ]
xlat
lodsb [ esi ]
push 0x9ed8ce30
sbb eax 0x1dc991f8
mov dl 0x8f
xchg [ esp + eax * 2 ] ah
inc edx
js r-xdata
xchg edi eax
mov ebp 0x7077781d
sbb eax 0x1d3d4a4e
dec eax
inc edi
jge r-xdata
push ebx
dec edi
dec ebx
sbb eax 0x1d585d8b
push ecx
dec ebp
xchg esp eax
sbb eax 0xc54c5156
pop ecx
pop eax
mov edx 0x6e73741d
sbb eax 0x1dbf8688
cwde
aad 0x1d
jb r-xdata
fstp st7
pushfd
sbb eax 0x1de21d1d
sbb eax 0x8a1de21d
sbb eax 0x1d1d1de2
loop r-xdata
push edi
xchg ebx eax
inc eax
jl r-xdata
dec ch
sbb eax 0x1defefef
cld
imul esi ebp 0xc8d4d07c
sbb eax 0xc530666e
push ecx
and [ eax ] dh
push eax
je r-xdata
bound esi [ edi + 0x1d ]
dec ecx
sahf
inc ebp
sbb eax 0x1d30beaf
rcl esi 0x1
shr [ ecx - 0x2f ] 0x1
fcomp [ 0x74d9d8d8 ]
rol [ esi - 0x30 ] cl
jno r-xdata
sbb eax 0x1d49494d
insd
imul esp [ esi + 0x2b ] 0x51
dec ebp
dec ecx
sbb eax 0x1d717b7f
outsd
pushad
sbb eax 0x3c996a61
pushad
sahf
sbb eax 0x1d92239e
jbe r-xdata
lodsd [ esi ]
sbb eax 0xe22aaca8
aad 0xd8
mov al 0x1d
movsb [ edi ] [ esi ]
fistp [ edx - 0x585958e3 ]
sbb eax 0x1de9e8e8
lahf
xchg ebp eax
adc [ 0xbf92324 ] ebx
jae r-xdata
and bl [ 0x1d5b7579 ]
sahf
imul edx [ ebx + 0x1d ] 0x71b89d8c
lodsd [ esi ]
0x1d4d
sbb eax 0x1d459e49
scasd [ edi ]
mov esi 0xc5c51d30
salc
sbb eax 0x1dc5cece
lds edi [ ebx ]
0xd01d
call 0xffffffffa8f2675b
0x38acad1d 0xcd1d
iretd
sbb eax 0x1d9aa8b2
lodsd [ esi ]
lodsb [ esi ]
cmp [ 0x1dc6cfcd ] bl
int3
imul ebx [ 0x1d43474a ] 0x1d484d57
jpo r-xdata
mov ah 0xb1
sbb eax 0x1dc887cb
mov esp 0x5ad3bab9
push eax
dec ebp
into
pop ebp
pop ecx
sbb eax 0x1d815357
and [ edx + 0x595d1d5c ] esp
pop eax
jmp r-xdata
mov al [ 0xffffffffededec6f ]
sbb eax 0x1db1d0d4
aam 0xdd
mov ds [ 0x1d5f608d ]
cmp [ ebx + 0x2e ] cl
sbb eax 0x1d58766a
nop
bound ecx [ eax + 0x1d ]
xchg edx eax
loop r-xdata
inc esi
sbb eax 0x1da19227
pop ss
mov edx 0x59da1d9a
test al 0xe8
salc
aam 0x40
mov [ 0xffffffffc931a0f2 ] al
into
leave
sbb eax 0x57aaa762
fcmovnbe st0
sbb eax 0x1de21688
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
enter 0xcec9 0x80
aam 0xd5
loope r-xdata
mov [ 0xffffffffc81da1a3 ] al
leave
into
adc ah 0xd5
sbb eax 0x60b5b4bb
std
sar ah 0x1d
scasb [ edi ]
test eax 0xd5d01df8
xchg [ 0x1d62ada4 ] ebx
fcmovnbe st7
inc eax
sbb eax 0x1d88a9d8
mov al [ 0xffffffffb41d62ac ]
mov eax [ esi + 0x1d ]
daa
xchg edx eax
mov eax [ 0xffffffff9aba171d ]
sbb eax 0xe8a859da
sub_404889
inc ebp
enter 0xcece 0x1d
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
stosb [ edi ]
sbb eax 0x1db2b2ad
popad
fbld [ edx + 0x142fd317 ]
loope r-xdata
rcr [ 0x1dc6c9cf ] cl
retn
sbb eax 0x221d191d
sbb eax 0x1d1d42e2
loop r-xdata
lodsd [ esi ]
0x1d4d
rcl bh 0x1
pushfd
fcomp st1
cmp [ edx ] 0x1db3adad
xlat
aam 0xda
sbb eax 0x1dd258cc
iretd
sub_404953
rcl esi 0x1
sbb eax 0x9cdfdfde
sbb eax 0x1de21d1d
sbb eax 0x8a1de21d
sbb eax 0x1d1d1de2
loop r-xdata
bound esi [ edi + 0x1d ]
dec ecx
sahf
inc ebp
sbb eax 0x1d30beaf
rcl esi 0x1
shr [ ecx - 0x2f ] 0x1
fcomp [ 0x74d9d8d8 ]
rol [ esi - 0x30 ] cl
jno r-xdata
sbb eax 0x1d459e49
scasd [ edi ]
mov esi 0xc5c51d30
salc
sbb eax 0x1dc5cece
lds edi [ ebx ]
0xd01d
call 0xffffffffa8f2675b
0x38acad1d 0xcd1d
iretd
sub_4049bf
mov bh 0x74
sbb eax 0x1d46444e
and [ edi + ebx * 2 + 0x1d ] bl
inc ecx
jg r-xdata
lodsd [ esi ]
lodsd [ esi ]
mov al 0x1d
leave
ror esp 0x1
sbb eax 0xd9cdcec9
stosb [ edi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sbb eax 0x555b0b
add bh [ edi ]
r-xdata
push eax
jae r-xdata
cld
clc
sbb eax 0x1d99abfd
mov ch 0x97
jg r-xdata
cdq
test eax 0x555b5f1d
sbb eax 0x51005559
ja r-xdata
sbb eax 0x57aaa762
imul esp eax 0x301d4f53
aaa
xor [ 0x1d020005 ] bl
mov ebx 0xfd60b5b4
sbb eax 0x1d1de248
sbb eax 0x6e1d1d79
loop r-xdata
enter 0xa3cf 0x9f
int 0xd4
xchg [ 0xffffffffc665d5d0 ] bl

dec edx
inc ecx
pop edi
push esi
dec ecx
sbb eax 0x1d545a05
and ebx [ ecx + ebx * 2 + 0x1d ]
dec edx
inc eax
jge r-xdata
fcmovnbe st0
sbb eax 0x1de21688
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
enter 0xcec9 0x80
aam 0xd5
loope r-xdata
fstp [ 0xffffffffd5ded9d8 ]
sbb eax 0x4c1de21d
pop esp
loop r-xdata
xor [ es : 0x1d7e7c42 ] ebx
in eax dx
neg [ 0x1dafafaf ]
test al 0xbd
fistp [ 0x1df8fc30 ]
std
stosd [ edi ]
cdq
sbb eax 0x1d7f97b5
pop esi
ficom [ ebp + 0x1d ]
dec ebx
inc ebp
inc eax
out 0x52 al
dec ecx
dec eax
sbb eax 0xd292c18
dec eax
inc edi
inc edx
sbb eax 0x1d56555f
sub [ cs : eax ] ebp
adc [ edx ] ch
sar ah 0x1d
scasb [ edi ]
test eax 0xd5d01df8
xchg [ 0x1d62ada4 ] ebx
fcmovnbe st7
inc eax
sbb eax 0x1d88a9d8
mov al [ 0xffffffffb41d62ac ]
mov eax [ esi + 0x1d ]
daa
xchg edx eax
mov eax [ 0xffffffff9aba171d ]
sbb eax 0xe8a859da
sbb eax 0x60b5b4bb
std
loop r-xdata
loop r-xdata
dec ecx
sbb eax 0x1d555b5e
xor al 0xbd
int 0x1d
daa
sub cl [ cs : eax + 0x31 ]
xor ch [ ebx + 0x1d23272b ]
sub eax 0x2e1d252f
cwde
pop eax
sbb eax 0x1d2f5e5e
inc esp
clc
dec ebx
sbb eax 0x1d575b5f
sub al 0x11
sbb eax 0x1d2c4f34
pop ds
xchg ebp eax
aas
sbb eax 0xdadbb1d7
mov eax 0x371db9b8
xlat
rcl esp cl
mov ecx 0xa61d8fa1
mov esi 0xc9c51d7f
rcr [ 0x1dc6d7a9 ] 0x1
adc ah 0xdf
sbb eax 0x1dd3d2cd
rcl edi 0x1
aad 0x47
neg [ 0x1d8e68c8 ]
mov ah 0x58
mov dh 0x1d
cmp [ edi ] dh
xor ebx [ 0x1d343a99 ]
and bl [ ecx + ebx * 2 + 0x1d ]
pop edi
pop ebx
push esi
sbb eax 0x1d0f3634
xor ch [ esi ]
sub ebx [ 0x2f678dbd ]
jae r-xdata
scasd [ edi ]
scasd [ edi ]
sbb eax 0x46d0e21d
sub esp edx
aad 0xda
fcomp [ ebp + 0x28dcddd8 ]
fcomp st5
mov [ 0xffffffffd981d91d ] al
sbb eax 0xd5ded9d8
mov [ 0xffffffffc81da1a3 ] al
leave
into
adc ah 0xd5
inc esi
sbb eax 0x1da19227
pop ss
mov edx 0x59da1d9a
test al 0xe8
salc
aam 0x40
mov [ 0xffffffffc931a0f2 ] al
into
leave
mov eax 0xcfc9ce1d
sbb eax 0x7733c607
adc [ eax + 0x383e1db0 ] esp
and ebx [ 0x1d7f3a3b ]
xor al 0x31
xor al [ ebp + 0x1d3a3f3d ]
push cs
or ebp [ edi + 0x1d ]
dec eax
dec edi
inc esi
inc ecx
sete [ ebp + 0x519b811d ]
sbb eax 0x1d4b7c71
cmp eax 0x3d36343b
cmp al 0x56
sbb eax 0x1d282828
pop esi
and [ ebp + 0x5b53171d ] bh
cmp [ ebx - 0x74 ] dh
dec ebx
sbb eax 0x1d2d3236
or eax [ 0x7c3f1dde ]
cmp bl [ 0x66563c02 ]
adc edx [ edx ]
push cs
sbb eax 0x1d3550ee
salc
mov cl 0xb7
lahf
lodsb [ esi ]
xchg [ ebp - 0x42444a9d ] esp
sbb eax 0x1d0ffdbf
sbb eax 0x1d1dcb1d
sbb eax 0xb51d1de2
loop r-xdata
mov eax [ 0xffffffffb8b54415 ]
sbb eax 0x1db8baba
into
leave
iretd
sbb eax 0x1d1de226
rcl edi cl
aam 0x88
sbb eax 0x1de21d1d
sbb eax 0xe1de21d
sbb eax 0xf7e71dbe
loop r-xdata
aam 0x8d
sub_404a3f
mov ah 0x1d
lodsd [ esi ]
mov bl 0xb0
sbb eax 0x1db0adad
leave
ror esp 0x1
sbb eax 0xd9cdcec9
stosb [ edi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sbb eax 0x555b0b
add bh [ edi ]
r-xdata
cld
clc
sbb eax 0x1d99abfd
mov ch 0x97
jg r-xdata
cdq
test eax 0x555b5f1d
sbb eax 0x51005559
ja r-xdata
sbb eax 0x1d1de248
sbb eax 0x6e1d1d79
loop r-xdata
enter 0xa3cf 0x9f
int 0xd4
xchg [ 0xffffffffc665d5d0 ] bl

dec edx
inc ecx
pop edi
push esi
dec ecx
sbb eax 0x1d545a05
and ebx [ ecx + ebx * 2 + 0x1d ]
dec edx
inc eax
jge r-xdata
fstp [ 0xffffffffd5ded9d8 ]
sbb eax 0x4c1de21d
pop esp
loop r-xdata
xor [ es : 0x1d7e7c42 ] ebx
in eax dx
neg [ 0x1dafafaf ]
test al 0xbd
fistp [ 0x1df8fc30 ]
std
stosd [ edi ]
cdq
sbb eax 0x1d7f97b5
pop esi
ficom [ ebp + 0x1d ]
dec ebx
inc ebp
inc eax
out 0x52 al
dec ecx
dec eax
sbb eax 0xd292c18
dec eax
inc edi
inc edx
sbb eax 0x1d56555f
sub [ cs : eax ] ebp
adc [ edx ] ch
loop r-xdata
dec ecx
sbb eax 0x1d555b5e
xor al 0xbd
int 0x1d
daa
sub cl [ cs : eax + 0x31 ]
xor ch [ ebx + 0x1d23272b ]
sub eax 0x2e1d252f
cwde
pop eax
sbb eax 0x1d2f5e5e
inc esp
clc
dec ebx
sbb eax 0x1d575b5f
sub al 0x11
sbb eax 0x1d2c4f34
pop ds
xchg ebp eax
aas
sbb eax 0xdadbb1d7
mov eax 0x371db9b8
xlat
rcl esp cl
mov ecx 0xa61d8fa1
mov esi 0xc9c51d7f
rcr [ 0x1dc6d7a9 ] 0x1
adc ah 0xdf
sbb eax 0x1dd3d2cd
rcl edi 0x1
aad 0x47
neg [ 0x1d8e68c8 ]
mov ah 0x58
mov dh 0x1d
cmp [ edi ] dh
xor ebx [ 0x1d343a99 ]
and bl [ ecx + ebx * 2 + 0x1d ]
pop edi
pop ebx
push esi
sbb eax 0x1d0f3634
xor ch [ esi ]
sub ebx [ 0x2f678dbd ]
jae r-xdata
scasd [ edi ]
scasd [ edi ]
sbb eax 0x46d0e21d
sub esp edx
aad 0xda
fcomp [ ebp + 0x28dcddd8 ]
fcomp st5
mov [ 0xffffffffd981d91d ] al
sbb eax 0xd5ded9d8
mov eax 0xcfc9ce1d
sbb eax 0x7733c607
adc [ eax + 0x383e1db0 ] esp
and ebx [ 0x1d7f3a3b ]
xor al 0x31
xor al [ ebp + 0x1d3a3f3d ]
push cs
or ebp [ edi + 0x1d ]
dec eax
dec edi
inc esi
inc ecx
sete [ ebp + 0x519b811d ]
sbb eax 0x1d4b7c71
cmp eax 0x3d36343b
cmp al 0x56
sbb eax 0x1d282828
pop esi
and [ ebp + 0x5b53171d ] bh
cmp [ ebx - 0x74 ] dh
dec ebx
sbb eax 0x1d2d3236
or eax [ 0x7c3f1dde ]
cmp bl [ 0x66563c02 ]
adc edx [ edx ]
push cs
sbb eax 0x1d3550ee
salc
mov cl 0xb7
lahf
lodsb [ esi ]
xchg [ ebp - 0x42444a9d ] esp
sbb eax 0x1d0ffdbf
sbb eax 0x1d1dcb1d
sbb eax 0xb51d1de2
loop r-xdata
mov eax [ 0xffffffffb8b54415 ]
sbb eax 0x1db8baba
into
leave
iretd
sbb eax 0x1d1de226
rcl edi cl
aam 0x88
sbb eax 0x1de21d1d
sbb eax 0xe1de21d
sbb eax 0xf7e71dbe
loop r-xdata
aam 0x8d
sub_404c58
sbb eax 0xcc1d6de2
loop r-xdata
sbb eax 0xd5d7d6dd
out 0xd0 eax
rcl edi 0x1
mov ebp 0x68f0f2ec
mov ecx [ edx + 0x151a1d5d ]
adc eax 0xff50e1d
sbb eax 0x1c161415
outsb
insd
inc ecx
dec edi
fnsave [ esi + 0x353f1dc7 ]
int3
sbb eax 0x1d5fe257
sbb eax 0x1d1dfd80
loop r-xdata
sbb eax 0x78bfe21d
mov ah 0xe2
sbb eax 0x1de21d1d
sbb eax 0x1d1de296
sub_405be7
leave
fistp [ 0x77dfc8d9 ]
inc esp
fsubr st0
push ecx
popad
sbb eax 0x1d1d1de2
loop r-xdata
sbb eax 0x1de21d1d
sbb eax 0xc6f9811d
xor [ 0xffffffff9a1d1dd1 ] bl
loop r-xdata
loop r-xdata
sbb eax 0xd01de25e
sbb eax 0x1d1d0af9
push esi
xchg edx eax
sbb eax 0x1d1dd81d
sbb eax 0x1d1d1de2
loop r-xdata
and [ eax - 0x38e25cbe ] ebx
leave
fisubr [ eax + 0x1d12a1b8 ]
shl [ ebx ] 0xd8
xchg ecx edi
ror ch 0x1d
sbb eax 0x1df7e268
sbb eax 0xd8c5a9e2
imul eax esp 0xffffffcd
cmpsd [ esi ] [ edi ]
sbb eax 0x1dbaddd7
clc
add bh cl
sbb eax 0x1d47c0ff
mov cl 0xcc
bound ebx [ 0x1dd6c6fc ]
enter 0xa4d0 0x1d
fldenv [ edx + eax * 4 - 0x532a95e3 ]
sbb eax 0x1daf70cf
rcr al cl
lodsb [ esi ]
sbb eax 0x1daed55a
xor [ edx + edi * 8 ] ebp
sbb eax 0x2ec7f991
adc edi esp
into
sbb eax 0x21aa19ce
cwde
inc edx
mov [ 0xffffffffdec9c71d ] eax
test al 0xb8
mov eax [ 0x33c01d12 ]
fadd [ edi + 0x1dcdc0f9 ]
sbb eax 0x1d1dc81d
sbb eax 0x1d1d1de2
loop r-xdata
inc ebp
loop r-xdata
imul ebx [ 0x1d1d1d3b ] 0x1d221de2
loop r-xdata
test eax 0xdd2fc51d
sbb eax 0x1da1d3ca
fsub [ edi - 0x2ec5e243 ]
cmpsb [ esi ] [ edi ]
sbb eax 0x1dd8cec6
clc
retn 0x1dc9
shr [ edx - 0x734f59e3 ] 0x1
sbb eax 0x1da4d1ce
shl [ esi - 0x26 ] 0x48
sbb eax 0x1d1de21d
sbb eax 0xd4c6f981
cmp cl cl
aam 0x38
leave
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
iretd
movsb [ edi ] [ esi ]
sbb eax 0x48da76c0
pop es
pop ss
loop r-xdata
fimul [ eax - 0x31 ]
aad 0xa9
sbb eax 0x1ddd2fc5
0xa1d3
sbb eax 0x1d1de245
sbb eax 0x1d1d1de2
cmp ecx 0xc938d4c6
sub_405ed4
mov eax [ 0xffffffffa4d3380e ]
sub eax 0x4eb669cc
pop esi
loop r-xdata
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loope r-xdata
loop r-xdata
iretd
loop r-xdata
loop r-xdata
aaa
loop r-xdata
sbb eax 0xe21ce21d
in al dx
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
jle r-xdata
fucom st2
push ds
loop r-xdata
in eax 0x64
loop r-xdata
loop r-xdata
loop r-xdata
push cs
test ecx esp
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0x1d1de247
imul esp edx 0x1d
loop r-xdata
in eax 0x83
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
add esp edx
loop r-xdata
jecxz r-xdata
loop r-xdata
mov dl ah
cmpsb [ esi ] [ edi ]
and ah dl
loop r-xdata
sbb eax 0xece21ce2
loop r-xdata
loop r-xdata
add ch [ eax - 0x1e ]
loop r-xdata
lds ebx [ 0x5806e5e2 ]
and edx 0xffffffac
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
leave
jl r-xdata
mov esp 0xe1e216e2
push ds
loope r-xdata
sbb [ eax - 0x39e82332 ] edi
int3
loop r-xdata
loop r-xdata
in eax dx
loop r-xdata
loop r-xdata
outsd
jecxz r-xdata
push 0xe5e2e2e2
loop r-xdata
loop r-xdata
loop r-xdata
and ah dl
loop r-xdata
loop r-xdata
loop r-xdata
inc ebx
sbb eax 0x1de21d1d
sbb eax 0x1d1dcd1d
sbb eax 0x1d1d1de2
loop r-xdata
loope r-xdata
loop r-xdata

loop r-xdata
loop r-xdata
sbb eax 0xede2e222
loope r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
jecxz r-xdata
sbb eax 0xc51de2f5
sbb eax 0x5806e5e2
loop r-xdata
loop r-xdata
loop r-xdata
pop esp
loop r-xdata
jne r-xdata
loop r-xdata
mov ch 0xe2
loop r-xdata
loop r-xdata
and ah dl
loope r-xdata
loop r-xdata
in eax dx
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
add esp edx
loop r-xdata
loop r-xdata
and ah dl
loop r-xdata
arpl dx sp
sbb eax 0xede2e222
stc
loop r-xdata
insb
jecxz r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
jl r-xdata
loop r-xdata
arpl dx sp
sbb eax 0x1de21d1d
loop r-xdata
cld
and ah dl
loop r-xdata
in eax 0x3
loop r-xdata
and ah dl
loop r-xdata
loop r-xdata
sbb eax 0xfe82d622
in eax 0xe2
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
jecxz r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
in eax dx
lodsd [ esi ]
loop r-xdata
loop r-xdata
mov edx fs
adc ah dl
loop r-xdata
push ss
loop r-xdata
loop r-xdata
sbb eax 0xede2e262
loop r-xdata
sbb eax 0xe2e2e202
loop r-xdata
and esp edx
loop r-xdata
in eax dx
loop r-xdata
add ah dl
loop r-xdata
and bh [ edx - 0x1e ]
loop r-xdata
and dl 0xe2
sbb eax 0xede2e262
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0x1de4e21d
loop r-xdata
sbb al 0xe2
loop r-xdata
pop edi
movsd [ edi ] [ esi ]
loop r-xdata
loop r-xdata
loop r-xdata
in eax dx
loop r-xdata
sbb eax 0xe2e28f69
pop ecx
loop r-xdata
dec esp
loop r-xdata
loop r-xdata
sbb eax 0x75e2e262
add edi ecx
loop r-xdata
sbb eax 0xfde2e202
jmp 0xffffffffe322c24b
in eax dx
sbb eax 0xede2e262
mov [ 0xffffffffe2e2e5e2 ] al
loop r-xdata
loop r-xdata
add esp edx
or ebx [ edx + eax * 4 - 0x1e ]
loop r-xdata
push edi
loop r-xdata
loop r-xdata
loop r-xdata
insb
add ah [ ebx - 0x1e ]
loop r-xdata
popad
loop r-xdata
in eax dx
loop r-xdata
sbb eax 0x9ae2e202
sbb eax 0x21de2e6
loop r-xdata
sbb eax 0xede2e262
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loope r-xdata
cwde
add esp edx
sbb eax 0xede2e262
in eax dx
add ah dl
loop r-xdata
add esp edx
loop r-xdata
loop r-xdata
loop r-xdata
loop r-xdata
loope r-xdata
in eax dx
std
loop r-xdata
loop r-xdata
loop r-xdata
sbb eax 0x21de2e2
out 0xe2 al
sbb eax 0xfde2e202
and dl dh
cmp dh 0xe5
loop r-xdata
loop r-xdata
sbb eax 0x2eee2e2
jmp r-xdata
loop r-xdata
jmp 0xffffffffe3234249
int3
mov ebx 0xe2e262e2
loop r-xdata
sbb eax 0xede2e222
std
push ss
into
jecxz r-xdata
loop r-xdata
in eax dx
sub_406220
[ 0x1d95eb74 ]
cmp edi ebx
clc
sbb eax 0x1dfff8fe
stc
stc
[ 0x1dfbfbfb ]
clc
clc
stc
add al 0xc8
into
iretd
sub_40623d
sbb esp edi
[ ebp + 0x4be21df5 ]
loop r-xdata
sbb [ 0x1dfcff7b ] 0xfd
retn 0x1184
sbb eax 0x1d1de21d
sbb eax 0x1d1d1de2
loop r-xdata
sbb eax 0x1dc5c62c
rol bl 0xd1
sbb eax 0x1dd3d352
clc
add eax edi
sbb eax 0x1dc2fdff
stc
int3
int3
sub_4062a9
sbb eax 0x1d6bc1c1
xchg esp eax
mov dh 0x1d
std
mov ebp 0xfeeaf91d
sub [ esi - 0x30e2353c ] esi
salc
aam 0xef
sbb eax 0x1dfd1d1d
sbb eax 0x1d1de21d
sbb eax 0xd2cccfc9
out 0xc7 al
rol edi 0x1
sbb cl al
into
add ebx [ 0x1dd6f7d2 ]
0xcecb
sub_4065b8
leave
adc edi ebx
fstpnce st6
or ebx edx
fcmovu st3
sbb eax 0x61bcdb52
insd
sbb eax 0x1d1de296
sbb eax 0xd6d019e2
xchg ecx eax
jne r-xdata
sbb eax 0x1d5f7a72
adc [ edx - 0x3033e22e ] 0xffffffc9
fistp [ 0x1dd77ade ]
fsub [ edx + ecx * 4 + 0x2665651d ]
sbb eax 0x1d05363c
fwait
pushad
push ebx
sbb eax 0x1d015947
imul eax [ eax + 0x23 ] 0x4b972b1d
dec esp
in al dx
in eax dx
sbb eax 0x1df5f5fa
mov ebp 0x421dfcbe
jpe r-xdata
test eax 0x4a4c51bf
sbb eax 0x1d4e5357
jle r-xdata
sbb eax 0x1d6a6c72
test [ ebx - 0x514de243 ] al
movsd [ edi ] [ esi ]
mov [ 0x1ddedc62 ] al
cmp [ ebx ] esi
add bl [ 0x1d787b68 ]
lodsb [ esi ]
inc esp
mov dh 0x1d
sahf
jbe r-xdata
sbb eax 0x1d83a5a2
mov eax [ 0x241dbaa6 ]
fcomp [ ecx ]
sbb eax 0x1dd98e91
pop ebp
pop ecx
push esi
leave
dec esi
dec edx
inc esi
sbb eax 0x1d0b4247
dec esp
or [ edx + 0x1d ] 0x4d
jno r-xdata
sbb eax 0x1de2891d
sbb eax 0xdfdee21d
fstp st4
stosb [ edi ]
push ecx
test al 0x1d
scasb [ edi ]
scasb [ edi ]
scasb [ edi ]
sbb eax 0x7ac5ccd1
dec ebp
sub [ ebx ] bh
sbb eax 0xbb557749
sbb eax 0x1da2a350
int3
jpo r-xdata
fwait
jecxz r-xdata
and [ ebp + 0x28 ] cl
cmp ebx [ 0xffffffffbb557749 ]
sbb eax 0x1d484181
rcl cl cl
retn
insb
outsb
sbb eax 0x1d9d616b
popad
pushfd
0x70745a1d 0x731d
jmp 0xffffffffb27984af
inc edi
inc edx
or ebx [ 0x1d4a834c ]
dec ebp
jb r-xdata
push edx
sub bl [ 0x1d5b773f ]
arpl [ bx + si + 0x4a1d ] bx
je r-xdata
aam 0xb6
xchg esp eax
push ecx
sbb eax 0x1d6cbcad
int3
sbb eax 0x1d53555e
stosb [ edi ]
cmpsb [ esi ] [ edi ]
mov al [ 0xffffffffdaedef1d ]
mov dl 0x6b
cmpsd [ esi ] [ edi ]
les ebx [ 0x1d0d2f5e ]
mov [ edx + 0x2a ] edx
sbb eax 0x1d5b773f
sub_407ae4
aam 0x75
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] dl
add [ eax ] al
push esp
pop es
sub dl [ ebx + 0x77 ]
mov al 0xab
dec edi
mov ch 0x8
jpe r-xdata
add [ eax ] al
add [ ecx ] ah
insd
cld
inc ecx
retn
or al 0x34
test [ edi ] ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
arpl [ eax ] ax
add [ eax ] al
add [ eax ] al
add [ edx + edx + 0x4c0040 ] bl
add [ eax ] al
push eax
sub_407b48
mov edx 0x7452659
lea ebp [ ebx + 0xfe ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x1b ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x371 ] dl
add [ eax ] al
add al dh
pop [ edx ]
pushfd
add [ eax ] al
add [ eax ] dl
add [ eax ] al
jle sub_407b48
push 0xe49c4cd0
inc ecx
cdq
adc [ ebp - 0x49fafb4f ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
sbb [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl ch
or al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x14 ] dh
inc edx
add ah ch
add [ eax ] al
add [ eax ] dl
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edx
fbstp [ ecx + 0x67 ]
inc edx
mov ah 0x86
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
sbb [ ebx ] 0x0
add [ eax ] al
inc edx
add [ ecx + eax + 0x500000 ] cl
add [ eax ] al
or al 0x14
or ebp esp
pop eax
add al 0x40
inc eax
mov bl 0x15
sub [ eax ] ebx
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xb ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
bound eax [ edx ]
cmp al 0x1
add [ eax ] al
push eax
add [ eax ] al
add [ edx ] ah
push ebx
scasb [ edi ]
pop ebx
out 0x77 al
inc [ eax - 0x7d ]
adc al 0x5e
test al 0xfb
movsd [ edi ] [ esi ]
aad 0xb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
sbb [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xb ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x1b ] al
outsd
add [ 0xdb ] edx
sub_407cd4
xor ah [ edx - 0x64 ]
dec eax
mov eax 0x64bc5b3a
insd
arpl [ ebp ] dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + 0x1b ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
pop ds
inc edx
add [ edx + eax ] ch
add [ eax ] al
push eax
add [ eax ] al
add [ esi + ecx + 0x121bdf0c ] dl
mov bh 0x4b
movsd [ edi ] [ esi ]
lahf
iretd
sub_407dc1
push es
xor edi [ edi + esi * 4 + 0x12 ]
sbb [ ebx - 0x78 ] eax
mov [ 0x46bbd421 ] eax
sbb eax 0x19
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ eax + 0x1b ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x1b ] al
js r-xdata
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x31c0042 ] al
add [ eax ] al
push eax
add [ eax ] al
add [ ebp + 0x70 ] cl
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc eax
inc edx
add [ ebx + eax + 0x500000 ] bh
add [ eax ] al
enter 0x11ed 0xd4
mov esi 0xa747cf9e
sub eax 0x32f0534c
0x0 0x0
mov eax 0xf82bb641
aas
fbstp [ esi + 0xf5eb ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
sbb [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0xb ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx + 0x42 ] bh
add [ ebx + eax ] ch
add [ eax ] dl
add [ eax ] al
daa
mov [ 0x446ee0d8 ] eax
sahf
inc edx
test eax 0x89bd4210
inc esi
xchg ecx eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add [ eax ] al
sbb [ ebx ] 0x0
add [ eax ] al
sub_407f0f
inc [ eax ]
add [ eax ] al
add [ eax ] dh
jecxz r-xdata
jl r-xdata
add [ eax - 0x50 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add al bh
ror [ eax + 0x2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 2 + 0x40 ] dh
add [ ecx ] al
add [ eax ] al
add al dh
test [ ecx ] 0x0
je r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov [ eax ] al
inc eax
jmp 0xfffffffff8788272
inc eax
jmp 0xfffffffff870824a
add [ eax ] al
add [ edi + 0x6c006801 ] dh
add [ eax + ecx * 4 ] bh
inc eax
add [ eax + esi * 8 + 0x46 ] bl
add [ eax ] al
and al 0x93
mov al [ edx ]
add al bh
inc ecx
add [ eax ] dl
clc
inc ecx
add [ eax ] al
adc [ eax ] eax
xor al 0x0
add [ eax ] al
int3
inc eax
add [ ecx ] al
add [ eax ] al
add [ edi + edi * 2 + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x7f ] bh
inc eax
add [ eax ] bh
add [ eax ] al
add [ edi + edi * 2 + 0x40 ] bh
sub_411307
inc [ eax ]
add [ eax ] al
add [ eax ] al
jecxz r-xdata
je r-xdata
add [ eax + esi * 4 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x288d2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0x41 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax + 0x41f4 ] bh
add [ eax ] al
add [ ebx + edx + 0x41 ] ch
add [ ecx ] al
add [ eax ] al
add [ ebx + edx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x13 ] dh
inc ecx
add [ eax ] bh
add [ eax ] al
add [ ebx + edx + 0x41 ] dh
add [ eax ] al
add al bh
jbe r-xdata
add [ eax ] al
add [ edi + 0x6c006801 ] dh
add [ esp + ebx ] dh
inc ecx
add [ eax + 0x46f7 ] ah
inc ecx
add [ ebx ] al
add [ edx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0xffb9fd ] al
add cl al
hlt
sub_412875
adc al [ ecx ]
cmp al 0x12
inc eax
add [ edx + 0x12 ] al
inc eax
add [ eax + 0x12 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
sbb [ ecx ] al
hlt
sub_416bcf
inc [ eax ]
add [ eax ] al
add al dh
jecxz r-xdata
cmp al 0x6c
inc ecx
add [ eax ] al
add [ edi + 0x6c006801 ] dh
add ah bh
je r-xdata
add [ eax + 0x46b0 ] ch
add [ eax ] al
add al cl
ror [ eax + 0x2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 ] dh
inc ecx
add [ ecx ] al
add [ eax ] al
add al al
add al 0x42
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 ] dh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ esp + ebp * 2 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] bh
insb
inc ecx
add [ eax ] bh
add [ eax ] al
add [ esp + ebp * 2 ] bh
cmp [ eax ] al
add [ eax ] al
int3
add [ esp + edx * 8 + 0x46 ] cl
add [ eax ] al
and dh ch
mov [ edx ] es
rol [ edx + eax * 2 ] 0x1
add al ah
add al 0x42
add [ eax ] al
adc [ eax ] eax
xor al 0x0
add [ eax ] al
int3
sub_41eae8
push eax
mov eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_41f7f7
inc ecx
mov eax [ 0x1354ea9e ]
inc esi
xor [ edx + 0x5bae5322 ] ebp
out 0x77 al
inc [ eax - 0x7d ]
adc al 0x5e
test al 0xfb
movsd [ edi ] [ esi ]
aad 0xb
adc ebp edx
dec ecx
iretd
sub_429321
pop ecx
jmp r-xdata
call sub_429324
push ebx
push 0x5f6c6c65
dec esi
outsd
je sub_429362
jns r-xdata
push [ ebp + 0x52 ]
push 0x2
call eax
jmp r-xdata
arpl [ edi + 0x6e ] bp
inc ecx
add [ ecx + 0x77 ] bh
call sub_429362
adc al 0xf7
add eax 0x61124174
aad 0xd2
push edx
push ecx
push ebp
and [ eax ] edx
pushad
fcmovu st5
and esp [ edx - 0x2b ]
push 0x0
loop r-xdata
push 0xd3588173
push 0x0
push 0x1e8
mov [ ebp + 0x52 ] esp
add esp 0x1e8
jmp r-xdata
pop ecx
int1
inc ebp
bound ebp [ gs : esi + 0x51 ]
dec edi
adc [ ecx - 0x2b ] esp
loope r-xdata
call sub_429321
push ebx
push 0x336c6c65
xor al [ eax ]
pop eax
pop edi
cmp al 0x33
pop ecx
dec ebx
mov dl ah
dec edi
adc ah [ ecx - 0x71 ]
mov cl 0x38
jno r-xdata
adc [ ecx - 0x2b ] ah
mov al 0x20
jbe r-xdata
popad
aad 0x59
sbb eax 0xd3895cc3
mov edx eax
adc cl [ eax + 0x6112597d ]
mov cl 0xd2
sqrtps xmm2 xmm5
pop ecx
adc ch dl
mov es [ ecx + 0x7a ]
popad
lds ebx [ ecx + 0x12 ]
or ebx ebp
or ch ch
mov cl 0x85
mov al 0x3d
ja r-xdata
pop ecx
fwait
cmpsd [ esi ] [ edi ]
mov edi 0x8eb1ed79
ror ah 0x1
call 0x325d6742
mov edi 0x82617859
cmpsb [ esi ] [ edi ]
inc ebx
jne r-xdata
jpe r-xdata
pop ecx
jns r-xdata
bound eax [ eax + 0x25 ]
test [ 0x22546867 ] ebx
push ss
and eax 0x157e3dfb
mov ds cx
sub [ ecx - 0x26 ] esp
fucom st3
pushad
aad 0x59
xchg edx eax
fcmovbe st5
pop ebx
adc ah [ ecx - 0x2b ]
push esi
xchg esi eax
test esp edx
pop ecx
adc ch al
sub eax 0x3c699903
mov [ edi ] 0x61
aad 0x1
inc esp
xor [ edi - 0x2bf4bf87 ] edi
xor edx [ edx ]
sub cl [ ss : eax ]
push edx
loop r-xdata
pop ecx
xor cl 0xb1
clc
and ah [ ecx - 0x2b ]
pop ecx
xor cl 0x5f
sbb [ edx - 0xf ] edi
inc ebp
jge r-xdata
dec ebx
call 0x113df258
int 0x59
adc bh [ ebx ]
cmp eax 0xd56102da
rcl [ edi + 0x1259d5f5 ] 0x1
mov [ ecx + 0x4f ] al
adc ah [ ecx - 0x74 ]
rcr [ edi + 0x1259d5c5 ] 0x1
mov [ ebx + 0x4f ] ch
adc ah [ ecx - 0x71 ]
mov cl 0x74
jno r-xdata
or esp [ ecx - 0x2b ]
add edi edx
xor al 0xc5
pop ecx
in eax dx
mov cl 0x85
rcr [ edi + 0x65 ] cl
cmp al 0x33
dec edx
pop eax
adc ah [ ecx + 0x5e ]
adc al 0x16
popad
aad 0x56
sahf
int 0xd4
pop ecx
adc ah al
scasb [ edi ]
pop ebp
dec edx
arpl bp dx
pop ecx
sbb eax 0x12584aed
popad
pop esi
mov [ ebx - 0x709eedb1 ] bl
mov cl 0x88
outsb
aad 0x59
js r-xdata
push ss
pop ecx
sbb eax 0x125816e4
popad
pop esi
bound ebx [ ecx + 0x12338366 ]
sub cl [ ss : ecx ]
xor ah al
out dx al
lea ecx [ ecx ]
in eax dx
mov cl 0xe8
jge r-xdata
sub cl [ ecx + 0x59e1c076 ]
adc ah [ ecx + 0x56 ]
mov eax [ 0xffffffffb7506e17 ]
adc esp [ ecx - 0x2b ]
rcr [ edi + 0x65 ] cl
cmp al 0x66
add al 0x61
aad 0x3
cli
sbb dl bl
pop ecx
adc ch al
push eax
stc
adc ah [ ecx - 0x2b ]
xor [ edx ] edx
aad 0x59
in eax dx
hlt
sbb [ 0xffffffff87a6d561 ] ecx
cmc
aad 0x59
adc ch dl
cwde
sub ebx edi
loopne r-xdata
popad
xchg ebp eax
sub eax 0x1f8d2613
xchg ecx eax
lahf
cmc
sub al 0xf6
loop r-xdata
popad
aad 0x3
cli
and dl bl
pop ecx
adc dl [ eax + 0x23 ]
push 0x56bf31ed
in eax dx
hlt
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611d5a
or [ eax + 0x61 ] edi
mov edi 0xbf617859
pop ecx
cli
mov es sp
pop ecx
adc ch dl
cwde
pop ebp
sti
mov al al
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611cbe
rcl [ edi + 0x41 ] 0x1
pop esi
adc al 0x16
mov [ esp + ecx * 2 ] bh
adc ah [ ecx - 0x71 ]
mov cl 0xc4
outsd
aad 0x59
fwait
and al 0xf1
rcr [ edi + 0x65 ] cl
cmp al 0x5f
add al 0x61
aad 0x3
cli
movsb [ edi ] [ esi ]
fistp [ ecx + 0x12 ]
call 0x2cdc081c
shl [ eax + 0x59d574c4 ] 0x1
dec eax
mov [ ecx + 0x57 ] esp
adc ah [ ecx + 0x5c ]
sbb al 0x3e
0xb2fb5d98 0x59c0
0x88fb5d98 0x59c0
pop ebp
insb
push 0xffffffbd
sub_429324
pop edx
call sub_429428
push eax
push [ ebp + 0x52 ]
push 0x0
call eax
cmp eax 0x1
je r-xdata
pop eax
push [ ebp + 0x52 ]
push 0x2
call eax
jmp r-xdata
call sub_429321
push ebx
push 0x336c6c65
xor al [ eax ]
call sub_429362
adc al 0xf7
add eax 0x61124174
aad 0xd2
push edx
push ecx
push ebp
and [ eax ] edx
pushad
fcmovu st5
and esp [ edx - 0x2b ]
pop ecx
int1
inc ebp
bound ebp [ gs : esi + 0x51 ]
dec edi
adc [ ecx - 0x2b ] esp
loope r-xdata
pop edi
cmp al 0x33
pop ecx
dec ebx
mov dl ah
dec edi
adc ah [ ecx - 0x71 ]
mov cl 0x38
jno r-xdata
adc [ ecx - 0x2b ] ah
mov al 0x20
jbe r-xdata
popad
aad 0x59
sbb eax 0xd3895cc3
mov edx eax
adc cl [ eax + 0x6112597d ]
mov cl 0xd2
sqrtps xmm2 xmm5
pop ecx
adc ch dl
mov es [ ecx + 0x7a ]
popad
lds ebx [ ecx + 0x12 ]
or ebx ebp
or ch ch
mov cl 0x85
mov al 0x3d
ja r-xdata
pop ecx
fwait
cmpsd [ esi ] [ edi ]
mov edi 0x8eb1ed79
ror ah 0x1
call 0x325d6742
mov edi 0x82617859
cmpsb [ esi ] [ edi ]
inc ebx
jne r-xdata
jpe r-xdata
pop ecx
jns r-xdata
bound eax [ eax + 0x25 ]
test [ 0x22546867 ] ebx
push ss
and eax 0x157e3dfb
mov ds cx
sub [ ecx - 0x26 ] esp
fucom st3
pushad
aad 0x59
xchg edx eax
fcmovbe st5
pop ebx
adc ah [ ecx - 0x2b ]
push esi
xchg esi eax
test esp edx
pop ecx
adc ch al
sub eax 0x3c699903
mov [ edi ] 0x61
aad 0x1
inc esp
xor [ edi - 0x2bf4bf87 ] edi
xor edx [ edx ]
sub cl [ ss : eax ]
push edx
loop r-xdata
pop ecx
xor cl 0xb1
clc
and ah [ ecx - 0x2b ]
pop ecx
xor cl 0x5f
sbb [ edx - 0xf ] edi
inc ebp
jge r-xdata
dec ebx
call 0x113df258
int 0x59
adc bh [ ebx ]
cmp eax 0xd56102da
rcl [ edi + 0x1259d5f5 ] 0x1
mov [ ecx + 0x4f ] al
adc ah [ ecx - 0x74 ]
rcr [ edi + 0x1259d5c5 ] 0x1
mov [ ebx + 0x4f ] ch
adc ah [ ecx - 0x71 ]
mov cl 0x74
jno r-xdata
or esp [ ecx - 0x2b ]
add edi edx
xor al 0xc5
pop ecx
in eax dx
mov cl 0x85
rcr [ edi + 0x65 ] cl
cmp al 0x33
dec edx
pop eax
adc ah [ ecx + 0x5e ]
adc al 0x16
popad
aad 0x56
sahf
int 0xd4
pop ecx
adc ah al
scasb [ edi ]
pop ebp
dec edx
arpl bp dx
pop ecx
sbb eax 0x12584aed
popad
pop esi
mov [ ebx - 0x709eedb1 ] bl
mov cl 0x88
outsb
aad 0x59
js r-xdata
push ss
pop ecx
sbb eax 0x125816e4
popad
pop esi
bound ebx [ ecx + 0x12338366 ]
sub cl [ ss : ecx ]
xor ah al
out dx al
lea ecx [ ecx ]
in eax dx
mov cl 0xe8
jge r-xdata
sub cl [ ecx + 0x59e1c076 ]
adc ah [ ecx + 0x56 ]
mov eax [ 0xffffffffb7506e17 ]
adc esp [ ecx - 0x2b ]
rcr [ edi + 0x65 ] cl
cmp al 0x66
add al 0x61
aad 0x3
cli
sbb dl bl
pop ecx
adc ch al
push eax
stc
adc ah [ ecx - 0x2b ]
xor [ edx ] edx
aad 0x59
in eax dx
hlt
sbb [ 0xffffffff87a6d561 ] ecx
cmc
aad 0x59
adc ch dl
cwde
sub ebx edi
loopne r-xdata
popad
xchg ebp eax
sub eax 0x1f8d2613
xchg ecx eax
lahf
cmc
sub al 0xf6
loop r-xdata
popad
aad 0x3
cli
and dl bl
pop ecx
adc dl [ eax + 0x23 ]
push 0x56bf31ed
in eax dx
hlt
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611d5a
or [ eax + 0x61 ] edi
mov edi 0xbf617859
pop ecx
cli
mov es sp
pop ecx
adc ch dl
cwde
pop ebp
sti
mov al al
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611cbe
rcl [ edi + 0x41 ] 0x1
pop esi
adc al 0x16
mov [ esp + ecx * 2 ] bh
adc ah [ ecx - 0x71 ]
mov cl 0xc4
outsd
aad 0x59
fwait
and al 0xf1
rcr [ edi + 0x65 ] cl
cmp al 0x5f
add al 0x61
aad 0x3
cli
movsb [ edi ] [ esi ]
fistp [ ecx + 0x12 ]
call 0x2cdc081c
shl [ eax + 0x59d574c4 ] 0x1
dec eax
mov [ ecx + 0x57 ] esp
adc ah [ ecx + 0x5c ]
sbb al 0x3e
0xb2fb5d98 0x59c0
0x88fb5d98 0x59c0
pop ebp
insb
push 0xffffffbd
sub_429362
mov edx 0x800
imul edx edx 0x4
pop esi
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
dec eax
cmp [ eax ] 0x25ff
jne r-xdata
mov eax [ eax + 0x2 ]
mov eax [ eax ]
inc eax
mov ebx 0x8b7c240c
bswap ebx
cmp [ eax ] ebx
jne r-xdata
cmp [ eax + 0x4 ] 0x87cff85
jne r-xdata
sub eax 0x2
push edx
call eax
push eax
mov al 0x69
pop eax
push 0x800
pop ecx
jmp r-xdata
mov edi eax
push eax
pop eax
push edi
[ edi ] [ esi ]
dec esi
inc esi
xor edx edx
cmp eax eax
or edx 0x2000
dec esi
inc esi
xor ebx ebx
pop edi
jmp r-xdata
xor ecx ecx
or ecx 0x4
adc ebx ecx
cmp bx dx
jne r-xdata
dec esi
inc esi
mov esi 0x611259d5
sub eax 0x1
add eax 0x1
xor [ edi + ebx ] esi
jmp r-xdata
jmp r-xdata
push eax
jmp r-xdata
call sub_429409
insb
imul esp [ edx + 0x4e ] 0x4c4c4454
add al ch
xor eax 0x53000000
push 0x5f6c6c65
dec esi
outsd
je sub_429362
jns r-xdata
push [ ebp + 0x52 ]
push 0x2
call eax
jmp r-xdata
arpl [ edi + 0x6e ] bp
inc ecx
add [ ecx + 0x77 ] bh
call sub_429362
adc al 0xf7
add eax 0x61124174
aad 0xd2
push edx
push ecx
push ebp
and [ eax ] edx
pushad
fcmovu st5
and esp [ edx - 0x2b ]
push 0x0
loop r-xdata
push 0xd3588173
push 0x0
push 0x1e8
mov [ ebp + 0x52 ] esp
add esp 0x1e8
jmp r-xdata
pop ecx
int1
inc ebp
bound ebp [ gs : esi + 0x51 ]
dec edi
adc [ ecx - 0x2b ] esp
loope r-xdata
call sub_429321
push ebx
push 0x336c6c65
xor al [ eax ]
pop eax
pop edi
cmp al 0x33
pop ecx
dec ebx
mov dl ah
dec edi
adc ah [ ecx - 0x71 ]
mov cl 0x38
jno r-xdata
adc [ ecx - 0x2b ] ah
mov al 0x20
jbe r-xdata
popad
aad 0x59
sbb eax 0xd3895cc3
mov edx eax
adc cl [ eax + 0x6112597d ]
mov cl 0xd2
sqrtps xmm2 xmm5
pop ecx
adc ch dl
mov es [ ecx + 0x7a ]
popad
lds ebx [ ecx + 0x12 ]
or ebx ebp
or ch ch
mov cl 0x85
mov al 0x3d
ja r-xdata
pop ecx
fwait
cmpsd [ esi ] [ edi ]
mov edi 0x8eb1ed79
ror ah 0x1
call 0x325d6742
mov edi 0x82617859
cmpsb [ esi ] [ edi ]
inc ebx
jne r-xdata
jpe r-xdata
pop ecx
jns r-xdata
bound eax [ eax + 0x25 ]
test [ 0x22546867 ] ebx
push ss
and eax 0x157e3dfb
mov ds cx
sub [ ecx - 0x26 ] esp
fucom st3
pushad
aad 0x59
xchg edx eax
fcmovbe st5
pop ebx
adc ah [ ecx - 0x2b ]
push esi
xchg esi eax
test esp edx
pop ecx
adc ch al
sub eax 0x3c699903
mov [ edi ] 0x61
aad 0x1
inc esp
xor [ edi - 0x2bf4bf87 ] edi
xor edx [ edx ]
sub cl [ ss : eax ]
push edx
loop r-xdata
pop ecx
xor cl 0xb1
clc
and ah [ ecx - 0x2b ]
pop ecx
xor cl 0x5f
sbb [ edx - 0xf ] edi
inc ebp
jge r-xdata
dec ebx
call 0x113df258
int 0x59
adc bh [ ebx ]
cmp eax 0xd56102da
rcl [ edi + 0x1259d5f5 ] 0x1
mov [ ecx + 0x4f ] al
adc ah [ ecx - 0x74 ]
rcr [ edi + 0x1259d5c5 ] 0x1
mov [ ebx + 0x4f ] ch
adc ah [ ecx - 0x71 ]
mov cl 0x74
jno r-xdata
or esp [ ecx - 0x2b ]
add edi edx
xor al 0xc5
pop ecx
in eax dx
mov cl 0x85
rcr [ edi + 0x65 ] cl
cmp al 0x33
dec edx
pop eax
adc ah [ ecx + 0x5e ]
adc al 0x16
popad
aad 0x56
sahf
int 0xd4
pop ecx
adc ah al
scasb [ edi ]
pop ebp
dec edx
arpl bp dx
pop ecx
sbb eax 0x12584aed
popad
pop esi
mov [ ebx - 0x709eedb1 ] bl
mov cl 0x88
outsb
aad 0x59
js r-xdata
push ss
pop ecx
sbb eax 0x125816e4
popad
pop esi
bound ebx [ ecx + 0x12338366 ]
sub cl [ ss : ecx ]
xor ah al
out dx al
lea ecx [ ecx ]
in eax dx
mov cl 0xe8
jge r-xdata
sub cl [ ecx + 0x59e1c076 ]
adc ah [ ecx + 0x56 ]
mov eax [ 0xffffffffb7506e17 ]
adc esp [ ecx - 0x2b ]
rcr [ edi + 0x65 ] cl
cmp al 0x66
add al 0x61
aad 0x3
cli
sbb dl bl
pop ecx
adc ch al
push eax
stc
adc ah [ ecx - 0x2b ]
xor [ edx ] edx
aad 0x59
in eax dx
hlt
sbb [ 0xffffffff87a6d561 ] ecx
cmc
aad 0x59
adc ch dl
cwde
sub ebx edi
loopne r-xdata
popad
xchg ebp eax
sub eax 0x1f8d2613
xchg ecx eax
lahf
cmc
sub al 0xf6
loop r-xdata
popad
aad 0x3
cli
and dl bl
pop ecx
adc dl [ eax + 0x23 ]
push 0x56bf31ed
in eax dx
hlt
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611d5a
or [ eax + 0x61 ] edi
mov edi 0xbf617859
pop ecx
cli
mov es sp
pop ecx
adc ch dl
cwde
pop ebp
sti
mov al al
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611cbe
rcl [ edi + 0x41 ] 0x1
pop esi
adc al 0x16
mov [ esp + ecx * 2 ] bh
adc ah [ ecx - 0x71 ]
mov cl 0xc4
outsd
aad 0x59
fwait
and al 0xf1
rcr [ edi + 0x65 ] cl
cmp al 0x5f
add al 0x61
aad 0x3
cli
movsb [ edi ] [ esi ]
fistp [ ecx + 0x12 ]
call 0x2cdc081c
shl [ eax + 0x59d574c4 ] 0x1
dec eax
mov [ ecx + 0x57 ] esp
adc ah [ ecx + 0x5c ]
sbb al 0x3e
0xb2fb5d98 0x59c0
0x88fb5d98 0x59c0
pop ebp
insb
push 0xffffffbd
sub_429409
pop ecx
inc ecx
inc ecx
inc ecx
jmp r-xdata
call sub_429412
dec esi
je r-xdata
je r-xdata
add [ eax ] eax
add [ ecx - 0x3b7ead9b ] cl
call 0xffffffffeb429321
push ss
outsb
outsw
jb r-xdata
push ebx
push 0x336c6c65
xor al [ eax ]
pop eax
popad
je r-xdata
call sub_429362
adc al 0xf7
add eax 0x61124174
aad 0xd2
push edx
push ecx
push ebp
and [ eax ] edx
pushad
fcmovu st5
and esp [ edx - 0x2b ]
call [ ebx + 0x68 ]
insb
insb
xor esi [ edx ]
add [ eax - 0x1 ] bl
outsd
outsb
push eax
jb r-xdata
pop ecx
int1
inc ebp
bound ebp [ gs : esi + 0x51 ]
dec edi
adc [ ecx - 0x2b ] esp
loope r-xdata
jne r-xdata
push 0x2
call eax
jmp r-xdata
jne r-xdata
arpl [ ebp + 0x73 ] sp
jae r-xdata
pop edi
cmp al 0x33
pop ecx
dec ebx
mov dl ah
dec edi
adc ah [ ecx - 0x71 ]
mov cl 0x38
jno r-xdata
adc [ ecx - 0x2b ] ah
mov al 0x20
jbe r-xdata
popad
aad 0x59
sbb eax 0xd3895cc3
mov edx eax
inc eax
mov ebx 0x8b7c240c
bswap ebx
cmp [ eax ] ebx
jne r-xdata
sub eax 0x2
push edx
call eax
push eax
mov al 0x69
pop eax
push 0x800
pop ecx
jmp r-xdata
call sub_429409
insb
imul esp [ edx + 0x4e ] 0x4c4c4454
add al ch
xor eax 0x53000000
push 0x5f6c6c65
dec esi
outsd
je sub_429362
adc cl [ eax + 0x6112597d ]
mov cl 0xd2
sqrtps xmm2 xmm5
pop ecx
adc ch dl
mov es [ ecx + 0x7a ]
popad
lds ebx [ ecx + 0x12 ]
or ebx ebp
or ch ch
mov cl 0x85
mov al 0x3d
ja r-xdata
pop ecx
fwait
cmpsd [ esi ] [ edi ]
mov edi 0x8eb1ed79
ror ah 0x1
call 0x325d6742
mov edi 0x82617859
cmpsb [ esi ] [ edi ]
inc ebx
jne r-xdata
jpe r-xdata
pop ecx
cmp [ eax + 0x4 ] 0x87cff85
mov edi eax
push eax
pop eax
push edi
[ edi ] [ esi ]
dec esi
inc esi
xor edx edx
cmp eax eax
or edx 0x2000
dec esi
inc esi
xor ebx ebx
pop edi
jns r-xdata
jns r-xdata
bound eax [ eax + 0x25 ]
test [ 0x22546867 ] ebx
push ss
and eax 0x157e3dfb
mov ds cx
sub [ ecx - 0x26 ] esp
fucom st3
pushad
aad 0x59
xchg edx eax
fcmovbe st5
pop ebx
adc ah [ ecx - 0x2b ]
push esi
xchg esi eax
test esp edx
pop ecx
adc ch al
sub eax 0x3c699903
mov [ edi ] 0x61
aad 0x1
inc esp
xor [ edi - 0x2bf4bf87 ] edi
xor edx [ edx ]
sub cl [ ss : eax ]
push edx
loop r-xdata
pop ecx
xor cl 0xb1
clc
and ah [ ecx - 0x2b ]
pop ecx
xor cl 0x5f
sbb [ edx - 0xf ] edi
inc ebp
jge r-xdata
dec ebx
call 0x113df258
int 0x59
adc bh [ ebx ]
cmp eax 0xd56102da
rcl [ edi + 0x1259d5f5 ] 0x1
mov [ ecx + 0x4f ] al
adc ah [ ecx - 0x74 ]
rcr [ edi + 0x1259d5c5 ] 0x1
mov [ ebx + 0x4f ] ch
adc ah [ ecx - 0x71 ]
mov cl 0x74
jno r-xdata
or esp [ ecx - 0x2b ]
add edi edx
xor al 0xc5
pop ecx
in eax dx
mov cl 0x85
rcr [ edi + 0x65 ] cl
cmp al 0x33
jmp r-xdata
push [ ebp + 0x52 ]
arpl [ edi + 0x6e ] bp
inc ecx
add [ ecx + 0x77 ] bh
dec edx
pop eax
adc ah [ ecx + 0x5e ]
adc al 0x16
popad
aad 0x56
sahf
int 0xd4
pop ecx
adc ah al
scasb [ edi ]
pop ebp
dec edx
arpl bp dx
pop ecx
sbb eax 0x12584aed
popad
pop esi
mov [ ebx - 0x709eedb1 ] bl
mov cl 0x88
outsb
aad 0x59
js r-xdata
push ss
pop ecx
sbb eax 0x125816e4
popad
pop esi
bound ebx [ ecx + 0x12338366 ]
sub cl [ ss : ecx ]
xor ah al
out dx al
xor ecx ecx
or ecx 0x4
adc ebx ecx
cmp bx dx
jne r-xdata
push 0x0
loop r-xdata
push 0xd3588173
push 0x0
push 0x1e8
mov [ ebp + 0x52 ] esp
add esp 0x1e8
jmp r-xdata
lea ecx [ ecx ]
in eax dx
mov cl 0xe8
jge r-xdata
sub cl [ ecx + 0x59e1c076 ]
adc ah [ ecx + 0x56 ]
mov eax [ 0xffffffffb7506e17 ]
adc esp [ ecx - 0x2b ]
rcr [ edi + 0x65 ] cl
cmp al 0x66
add al 0x61
aad 0x3
cli
sbb dl bl
pop ecx
adc ch al
push eax
stc
adc ah [ ecx - 0x2b ]
xor [ edx ] edx
aad 0x59
in eax dx
hlt
dec esi
inc esi
mov esi 0x611259d5
sub eax 0x1
add eax 0x1
xor [ edi + ebx ] esi
jmp r-xdata
jmp r-xdata
call sub_429321
sbb [ 0xffffffff87a6d561 ] ecx
cmc
aad 0x59
adc ch dl
cwde
sub ebx edi
loopne r-xdata
popad
xchg ebp eax
sub eax 0x1f8d2613
xchg ecx eax
lahf
cmc
sub al 0xf6
loop r-xdata
push eax
jmp r-xdata
popad
aad 0x3
cli
and dl bl
pop ecx
adc dl [ eax + 0x23 ]
push 0x56bf31ed
in eax dx
hlt
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611d5a
or [ eax + 0x61 ] edi
mov edi 0xbf617859
pop ecx
cli
mov es sp
pop ecx
adc ch dl
cwde
pop ebp
sti
mov al al
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611cbe
rcl [ edi + 0x41 ] 0x1
pop esi
adc al 0x16
mov [ esp + ecx * 2 ] bh
adc ah [ ecx - 0x71 ]
mov cl 0xc4
outsd
aad 0x59
fwait
and al 0xf1
rcr [ edi + 0x65 ] cl
cmp al 0x5f
add al 0x61
aad 0x3
cli
movsb [ edi ] [ esi ]
fistp [ ecx + 0x12 ]
call 0x2cdc081c
shl [ eax + 0x59d574c4 ] 0x1
dec eax
mov [ ecx + 0x57 ] esp
adc ah [ ecx + 0x5c ]
sbb al 0x3e
0xb2fb5d98 0x59c0
0x88fb5d98 0x59c0
pop ebp
insb
push 0xffffffbd
sub_429428
xor esi esi
or esi _CIcos@IAT
lodsd [ esi ]
cmp eax 0x0
je r-xdata
mov ebx 0x83ec8b58
dec ebx
dec ebx
dec ebx
cmp [ eax ] ebx
jne r-xdata
mov ebx 0x8d560cef
dec ebx
dec ebx
dec ebx
cmp [ eax + 0x4 ] ebx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push esp
push 0x2
add [ esp ] 0x44ffe
push edx
push ecx
push esp
call eax
add esp 0x1c
retn
sub_4296a2
adc bh [ ebx ]
cmp eax 0xd5611cfa
rcl [ edi + 0x51 ] 0x1
pop ecx
adc ch al
nop
cmp [ ecx - 0x2f4f2ed4 ] ebx
je r-xdata
pop esi
adc al 0x16
mov ch dl
dec esp
adc ah [ ecx - 0x71 ]
mov cl 0x80
outsd
aad 0x59
fwait
and al 0xe1
rcr [ edi + 0x65 ] cl
cmp al 0x34
pop es
popad
aad 0x3
cli
loopne r-xdata
push edi
push ecx
pop ecx
dec eax
mov [ ebp + 0x5c611257 ] esp
sbb al 0x5e
0x69fb5d98 0x59c3
sub_4297ac
aam 0x59
adc ah [ ecx + 0x17 ]
push ecx
adc bl dh
aad 0x59
adc ch [ ecx - 0x41 ]
sbb [ edx + 0x61 ] edi
in eax 0x59
adc dh [ esi ]
mov edi 0x2a9e7859
or al 0x1a
loop r-xdata
jge r-xdata
pop ebp
xchg ecx eax
cdq
aad 0x2d
sti
call 0xffffffffab3ded64
retn
sbb ah [ ecx - 0x2b ]
mov al 0x1a
ja r-xdata
popad
adc ebp [ esi + 0x51 ]
add [ eax ] ebx
popad
aad 0xd2
push edi
jns r-xdata
push ds
pop ss
sbb [ edx ] dl
popad
test [ ecx + 0x59d569a3 ] esi
pop ecx
dec edx
mov cl bl
dec edi
adc ah [ ecx - 0x72 ]
mov al 0x8e
jbe r-xdata
popad
popad
adc dl [ 0x776cb09d ]
aad 0x59
dec ecx
0x71995598 0xc85c
cli
push 0xffffffda
pop ecx
adc ch dl
nop
inc ebp
xchg ecx eax
pop ecx
aam 0x2c
sbb al 0x89
xchg [ eax + 0x12 ] cl
popad
push esi
mov eax [ 0x27506e13 ]
pop ecx
dec ebx
sahf
mov al [ 0x2a51ed61 ]
push 0x43
0xa3175590 0x5994
sub_4297e5
pop ecx
adc ch dh
nop
sbb ebx edi
imul eax esi 0x90ee1259
sbb eax 0x59c3eefb
adc bh [ ecx ]
pop esp
sbb al 0xa
mov [ ebp + 0x4e ] ah
adc ah [ ecx - 0x73 ]
rcl [ edi + 0x7d ] 0x1
push ebp
popad
adc ebp [ esi + 0x51 ]
add [ eax ] ebx
popad
aad 0xd2
push edi
jns r-xdata
popad
popad
adc dl [ 0x776cb09d ]
aad 0x59
dec ecx
0x71995598 0xc85c
sub_4298ac
aad 0x59
jb r-xdata
cdq
popad
pop esp
sbb al 0x4a
mov dh dl
dec esi
adc ah [ ecx - 0x73 ]
fisubr [ edx ]
pushad
fcmovu st5
pop eax
pop eax
std
adc ch [ ebx + edx ]
sbb [ ebx ] edx
cmp edi [ ebx + 0x1d56105 ]
pop ecx
dec eax
mov [ ecx + 0x55 ] ebx
adc ah [ ecx - 0x7b ]
rcr [ edi + 0x1259d5c5 ] cl
mov [ ebp + 0x4b ] bh
add al [ ecx + 0x33 ]
mov cl 0xd2
pop ds
jns r-xdata
adc ah [ ecx - 0x2b ]
mov al 0xc3
jae r-xdata
pop ecx
adc ch dl
pushfd
jge r-xdata
cdq
sahf
add eax 0x3d8907b2
cmpsb [ esi ] [ edi ]
in eax dx
sahf
sub ch [ 0xd2a6536 ]
insd
insd
pop ecx
adc ah [ ecx - 0x2b ]
fwait
sbb ah [ ecx - 0x4c ]
shr [ edi + 0x6d ] cl
pop esp
cmpsd [ esi ] [ edi ]
xchg ebx eax
cmpsd [ esi ] [ edi ]
pop ss
sbb [ edx ] dl
popad
pop esp
sub al 0x1e
0x9a9b5590 0x9a54
adc ah [ ecx - 0x71 ]
mov cl 0x68
insd
aad 0x59
stc
jb r-xdata
dec ebx
aad 0x59
adc dh [ edx ]
xor [ ecx + 0x59d56ae6 ] 0x99
loope r-xdata
cmp al 0xd9
pop eax
shl edx 0x1
adc bl [ ecx ]
jpe r-xdata
fwait
0x651e9a54 0x59d5
fwait
bound edi [ edi - 0x26eb12e7 ]
push cs
cli
push 0xffffffd9
pop ecx
adc ch dl
xchg edx eax
cdq
lea esp [ ecx - 0x15eda62e ]
mov dh [ ecx - 0x65 ]
inc ch
push ecx
adc ah [ ecx - 0x4d ]
ror [ ebp + 0x67 ] cl
mov bl 0xd0
lea esp [ ebp - 0x15eda62e ]
dec edx
popfd
adc eax 0x8dd0d561
movsd [ edi ] [ esi ]
rcr [ ecx + 0x12 ] cl
0xfe9b098a 0x5e1d
sub_4299f9
lahf
adc dh [ ecx - 0x2b ]
pop ecx
and ebp [ eax + 0x7164a684 ]
pop esi
or al 0x1e
bound eax [ ebx + 0x52ea404d ]
pop ecx
sbb ah [ ecx - 0x2b ]
pop edx
push esp
insd
test [ ecx + 0x59d56a06 ] esi
dec ebx
loop r-xdata
sub ch dh
adc ch [ ecx - 0x2b ]
pop ecx
cli
xchg edx eax
fistp [ ecx + 0x12 ]
cmpsb [ esi ] [ edi ]
nop
dec ecx
adc ah [ ecx - 0x2b ]
pop ecx
aad 0x24
rcr [ ecx + 0x12 ] 0x61
aad 0xda
lodsd [ esi ]
jne r-xdata
jno r-xdata
sbb ah [ ecx - 0x2b ]
cmpsb [ esi ] [ edi ]
pop ecx
adc ah [ ecx - 0x26 ]
fstp st3
popad
aad 0x59
inc ebx
0x611a4d62 0xd2d5
inc ecx
mov [ ebx + 0x53 ] esp
adc ah [ ecx + 0x5e ]
ficomp [ esi ]
insd
aad 0x59
xchg ecx eax
cdq
aad 0x56
xchg esi eax
stc
aad 0x59
adc ah [ edx + 0x52 ]
pop ecx
sbb ah [ ecx - 0x2b ]
rcl [ edi + 0x71 ] 0x1
pop esi
ficom [ edx ]
insd
aad 0x59
xchg edi eax
mov eax [ 0xffffffffe6995fa0 ]
lds edx [ ebp + 0x12 ]
insd
pop edx
pop edx
pop ebp
sbb ah [ ecx - 0x2b ]
sub al 0xcb
sahf
bound edx [ ebp + 0x1a ]
popad
aad 0xa6
ficom [ edx ]
insd
aad 0x59
and edx [ edi + 0x6195d283 ]
fstp [ ecx + 0x12 ]
bound edx [ edx + 0x59 ]
sbb ah [ ecx - 0x2b ]
pop eax
loop r-xdata
cdq
out 0xc5 al
push ebp
adc ah [ ecx + 0x5c ]
in eax dx
pop ecx
cmp [ edx ] ah
pop ecx
adc ah [ ecx - 0x2b ]
fldenv [ esi + 0x63 ]
r-xdata
fstp [ ecx + 0x12 ]
pushad
and eax 0xc10bda58
or [ ebx + 0x129a549a ] ebx
insd
aad 0x59
jns r-xdata
popad
pop esp
sub_429aca
adc ch [ ecx - 0x2b ]
pop ecx
xchg ecx eax
mov [ 0x754fd0d7 ] al
cmp eax 0xd56118bb
ror [ ebp + 0x1259d971 ] cl
bound ecx [ edx + 0x59 ]
sbb ah [ ecx - 0x2b ]
pop es
adc edx [ edx - 0x75ee2f7d ]
not edx
or ah al
cmpsb [ ss : esi ] [ edi ]
in eax dx
popad
aad 0xd0
dec edi
jne r-xdata
adc ah [ ecx - 0x2b ]
rcl [ edx + 0x6d ] cl
pop esi
sbb [ esi ] ebx
0x611a515a 0xb2d5
out 0x18 eax
popad
aad 0xd2
lea esi [ ecx - 0x27 ]
pop ecx
adc ah [ edx + 0x4a ]
pop ecx
sbb ah [ ecx - 0x2b ]
pop es
adc edx [ edx + 0x3f11d083 ]
push esi
lahf
push ss
mov al [ esi + 0x7 ]
dec ebx
loop r-xdata
push esi
xchg esi eax
cmp eax 0x51259de
je r-xdata
dec ebp
sti
push esi
sub ah [ esi + 0x536689ed ]
adc ah [ ecx + 0x3d ]
pop esi
sbb [ ecx - 0x2b ] esp
fisubr [ edi + 0x39 ]
aam 0x56
call 0x6d54f7d1
aad 0x59
inc edx
or edx edi
cmpsb [ esi ] [ edi ]
movsd [ edi ] [ esi ]
insd
fstp [ ecx + 0x12 ]
0x611a5952 0x9d5
sub_429c35
fcom st3
mov cl 0xd5
jle r-xdata
pop ecx
dec eax
mov ebp edx
push eax
adc ah [ ecx + 0x2a ]
mov [ ebx + 0x78b1bd24 ] ebx
imul edx ebp 0xb9249b59
shr dl 0x1
sub [ fs : esi + 0x12 ] edx
popad
pop esi
adc al 0x4a
call 0x622e7745
mov eax [ 0xffffffff81249957 ]
ror [ edx + 0x5d ] cl
aam 0x81
je r-xdata
xchg esi eax
dec ecx
adc ah [ ecx - 0x71 ]
aad 0x59
cdq
sbb al 0xd9
shr bl 0x1
loop r-xdata
mov cl 0xd4
imul edx ebp 0xdd16ed59
cmpsb [ esi ] [ edi ]
insd
mov edi 0xbf617859
pop ebp
js r-xdata
xchg ebp eax
dec ebp
adc ah [ ecx + 0x5e ]
adc al 0x16
mov [ esi - 0x709eedb7 ] dl
cmpsb [ esi ] [ edi ]
movsd [ edi ] [ esi ]
or eax 0x9e1259d4
mov [ 0xffffffffdd2e995d ] al
cmpsb [ esi ] [ edi ]
and ebx [ esi + 0x24995180 ]
sbb [ edi + 0x19136112 ] 0x59bf3b13
cdq
outsb
sub ch [ eax ]
inc esi
sahf
mov al [ 0xffffffffd116ed0d ]
rol [ ebp + 0x69 ] cl
sub ch [ ebx - 0x13 ]
int 0xda
0xa4dcda61 0xd562
mov edi 0x5e617859
add al 0x7a
xor bl [ esi + 0x4 ]
jle r-xdata
pop ecx
adc ch al
0xd12c991d 0x7ab0
jno r-xdata
adc [ ebx - 0x2c2526d2 ] ebx
and eax 0xe21a165c
adc al 0x49
fwait
cmp al 0x6a
aad 0x59
sub cl [ ecx + 0x56d49991 ]
xchg edi eax
sub al 0x2a
cmpsb [ esi ] [ edi ]
in eax dx
0x9efb2998 0x59c5
cdq
sub al 0xa5
mov al 0x3c
jo r-xdata
adc bh [ ebx ]
cmp eax 0xd5611aca
or edx edi
and al 0xde
pop ecx
adc ch dl
cwde
sub ebx edi
fadd st5
pop ecx
adc bh [ ebx ]
cmp eax 0xd5611a26
rcl [ ebp + 0x79 ] 0x1
test [ ecx + 0x59d56a3c ] esi
pop ecx
dec eax
mov [ ebp + 0x2a611251 ] edi
push ss
0x50ed519a 0x892a
sub_429cf0
mov ebp 0xd5612259
cmpsb [ esi ] [ edi ]
movsd [ edi ] [ esi ]
or eax 0x9e1259d4
mov [ 0xffffffffdd2e995d ] al
cmpsb [ esi ] [ edi ]
and ebx [ esi + 0x24995180 ]
sbb [ edi + 0x19136112 ] 0x59bf3b13
cdq
outsb
sub ch [ eax ]
inc esi
sahf
mov al [ 0xffffffffd116ed0d ]
rol [ ebp + 0x69 ] cl
sub ch [ ebx - 0x13 ]
int 0xda
0xa4dcda61 0xd562
sub_429e02
cdq
sub al 0xa5
mov al 0xc4
outsb
aad 0x59
dec eax
mov ecx ebp
pop esi
adc ah [ ecx + 0x2a ]
add ch dl
adc [ ecx - 0x13 ] 0x13
shl [ esi + 0x592de2c2 ] 0x1
sbb eax 0x125b15e4
popad
push esi
out 0xee al
outsb
aad 0x59
adc dl [ 0x655fd2e8 ]
cmp al 0xa8
sbb eax 0xfa03d561
jo r-xdata
pop ecx
adc ch dl
mov dl [ ecx - 0x6f ]
mov [ 0xffffffff9e21a6dd ] al
add eax 0x16e0e9d0
sub eax 0xad56113
js r-xdata
push 0xffffffa5
adc eax 0x135ad561
popad
aad 0x56
xchg edi eax
pop eax
sub [ esi - 0x5a951d13 ] ah
sbb eax 0x1d59d561
in eax 0xda
pop ebx
adc ah [ ecx + 0x5e ]
adc al 0x16
mov ah ah
push edi
adc ah [ ecx - 0x71 ]
mov cl 0x60
aad 0x59
fwait
out 0xad al
pop eax
adc ah [ ecx + 0x5e ]
adc al 0x16
mov cl ah
push edi
adc ah [ ecx - 0x71 ]
mov cl 0x4c
aad 0x59
fwait
out 0xa9 al
pop eax
adc ah [ ecx + 0x5e ]
push ds
push ss
aad 0x49
adc ah [ ecx + 0x5c ]
ficom [ edx - 0x66a62aa0 ]
out 0xb9 al
pop eax
adc ah [ ecx - 0x8 ]
pop ecx
add ah [ ecx - 0x2b ]
rcl [ ebp + 0x1259d4e5 ] 0x1
or [ edx ] ebp
cmpsb [ esi ] [ edi ]
adc ah [ ecx + 0x5c ]
mov eax [ 0x59d4f117 ]
adc dh [ ecx ]
sub cl dh
push 0x60
aad 0x59
xchg ecx eax
fiadd [ ebp + 0x58 ]
adc ah [ ecx - 0x2c ]
push esi
xchg edi eax
cmc
aad 0x59
adc ch dl
push edx
lds edx [ ebx ]
popad
aad 0x64
out dx eax
popad
aad 0x99
sbb eax 0x125960e5
popad
call 0xffffffffdbcf87d0
push esi
xchg esi eax

mov ebp 0xd5610259
cmpsb [ esi ] [ edi ]
pop esi
push es
sbb bl [ esi + 0x147a6e6 ]
adc bl dh
adc ch [ ecx - 0x2b ]
pop ecx
adc esp [ ecx - 0x2b ]
pop ecx
cdq
sub al 0xa5
mov al 0x94
outsb
aad 0x59
dec eax
mov [ ecx ] eax
pop edi
adc ah [ ecx - 0x41 ]
pop ecx
cdq
frstor [ ss : esi - 0x76d59aa0 ]
xchg ecx eax
cdq
aad 0x56
xchg edi eax
cmp bh dl
pop ecx
adc ch dl
cwde
pop ebp
sti
and eax 0x3b1259db
cmp eax 0xd56114ea
rcl [ ebp + 0x1259d4ed ] 0x1
call 0xffffffff9e1676d0
rcr [ ecx + 0x12 ] cl
xor [ esi + 0xe ] bl
sbb bl [ esi - 0x1f3d5919 ]
sub_42a019
rcl [ ebx ] 0x61
aad 0xa6
movsd [ edi ] [ esi ]
cmc
aam 0x59
adc bl [ esi + 0x61132542 ]
aad 0xb2
fimul [ ecx ]
xlat
pop ecx
adc esp [ ecx + 0x2a ]
out dx al
mov ah [ eax - 0x2b ]
pop ecx
in eax dx
salc
inc ecx
pop eax
adc ah [ ecx + 0x2a ]
into
outsb
pushad
aad 0x59
stc
into
pop esi
fisub [ esi - 0x6ea62aa0 ]
cdq
lds ebp [ 0x592de2b8 ]
les bx [ edx - 0x6d ]
mov [ 0x611258a1 ] al
xchg [ ebx ] dh
push ss
or ebp edx
dec ecx
adc ah [ ecx + 0x2a ]
push ss
0x52ed518a 0xc2a
sub_42a23f
jmp r-xdata
cdq
sbb al 0xd9
fcom st5
mov [ 0xffffffffe81259e8 ] eax
or ebp [ eax - 0x2e ]
push eax
push cs
push 0xa70750db
shr ebx 0x1
rol [ esi + 0x12 ] 0xb1
pop edi
push ebp
adc eax 0x9a46d9e9
jne r-xdata
mov bl 0x3e
xor [ ebx - 0x5a ] 0x90
or eax 0x59d56113
pop ecx
retn
sub_42a7f6
push ss
or [ edx ] ebp
pop ecx
adc ah [ ecx - 0x7b ]
or ch ch
xor al 0x99
fwait
sbb ah [ ecx + 0x5e ]
add eax 0x5a5f6536
mov [ cs : eax - 0x6b57dc94 ] ah
rcl [ esi ] cl
push 0xffffffe9
loope r-xdata
js r-xdata
cdq
xchg esp eax
rol [ esi ] cl
push 0xffffff9f
rcl [ esi + 0x45 ] cl
ror [ ebx ] 0x1
fwait
0x60669a54 0x59d5
inc ecx
or edx [ ebp - 0x2a8eedcf ]
pop ecx
inc edx
or ebp [ edx ]
cmpsb [ esi ] [ edi ]
inc edi
add [ edi - 0x2ebab12e ] ecx
lahf
adc ecx ebx
xchg esi eax
rol [ ecx ] 0x1
mov [ 0xffffffffc07659d1 ] eax
in eax 0x59
adc ah [ ecx + 0x5e ]
sbb [ esi ] ebx
0x61994d95 0x15e
sbb ch [ ebx ]
mov [ 0x6190ddda ] al
aad 0x59
xchg edx eax
pop edx
insd
sub al 0xe0
loop r-xdata
push esi
mov dl 0x16
xor dl [ esi - 0x4e ]
push ss
xor bh [ edi + 0x56b1eda6 ]
loop r-xdata
pop eax
adc dl [ ecx + edi ]
fldcw [ ecx + 0x64 ]
outsd
sub al 0xf4
0xa2915f86 0x68df
add eax 0xba5c6536
xchg ecx eax
popad
adc [ eax - 0x30 ] edi
mov eax [ 0xffffffffd2d56112 ]
pop edx
jno r-xdata
jb r-xdata
mov [ 0x21780ad9 ] al
sbb eax 0x155c7536
imul ebx [ ebp + eax + 0x36 ] 0x91ba5c65
push ecx
fwait
and ch [ esi ]
lahf
push ecx
fwait
insd
sbb [ edx + 0x372c3d5a ] edx
loop r-xdata
mov eax [ 0xffffffffce506e12 ]
adc ah [ ecx - 0x2b ]
ror [ esi + 0x45 ] cl
rcl edx 0x1
push esi
inc ebp
rcr [ edx + 0x56 ] 0x1
inc ebp
fstp [ edx ]
sub esp [ edx + 0x6190ddda ]
mov cl 0x56
pop eax
adc dl [ edx + ecx * 8 ]
rcl [ ecx - 0x63 ] 0x1
adc ebx [ edx ]
jmp 0x234b3ec4
sub_46079b
push ebp
mov ebp esp
sub esp 0xc
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x284
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
and eax 0xfffffffe
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x4 ]
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x2c ] 0x2
lea eax [ ebp - 0x2c ]
push eax
call Ordinal_MSVBVM60_557
lea ecx [ ebp - 0x2c ]
call __vbaFreeVar
mov [ ebp - 0x38 ] r-xdata
mov [ ebp - 0x40 ] 0x8
lea edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x2c ]
call __vbaVarDup
lea eax [ ebp - 0x2c ]
push eax
call Ordinal_MSVBVM60_559
lea ecx [ ebp - 0x2c ]
call __vbaFreeVar
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x88 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x88 ] eax
jmp r-xdata
and [ ebp - 0x8c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x8c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x90 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x90 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x94 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x94 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x98 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x98 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x9c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x9c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xa0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xa0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xa4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xa4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xa8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xa8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xac ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xac ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xb0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xb0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xb4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xb4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xb8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xb8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xbc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xbc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xc0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xc0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xc4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xc4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xc8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xc8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xcc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xcc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xd0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xd0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xd4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xd4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xd8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xd8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xdc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xdc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xe0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xe0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xe4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xe4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xe8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xe8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xec ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xec ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xf0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xf0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xf4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xf4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xf8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xf8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0xfc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0xfc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x100 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x100 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x104 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x104 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x108 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x108 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x10c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x10c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x110 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x110 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x114 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x114 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x118 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x118 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x11c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x11c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x120 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x120 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x124 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x124 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x128 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x128 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x12c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x12c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x130 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x130 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x134 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x134 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x138 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x138 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x13c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x13c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x140 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x140 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x144 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x144 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x148 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x148 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x14c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x14c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x150 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x150 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x154 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x154 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x158 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x158 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x15c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x15c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x160 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x160 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x164 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x164 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x168 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x168 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x16c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x16c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x170 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x170 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x174 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x174 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x178 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x178 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x17c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x17c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x180 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x180 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x184 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x184 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x188 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x188 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x18c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x18c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x190 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x190 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x194 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x194 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x198 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x198 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x19c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x19c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1a0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1a0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1a4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1a4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1a8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1a8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1ac ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1ac ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1b0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1b0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1b4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1b4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1b8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1b8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1bc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1bc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1c0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1c0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1c4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1c4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1c8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1c8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1cc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1cc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1d0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1d0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1d4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1d8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1dc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1dc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1e0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1e0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1e4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1e8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1ec ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1ec ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1f0 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1f0 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1f4 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1f4 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1f8 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1f8 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x1fc ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x1fc ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x200 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x200 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x204 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x204 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x208 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x208 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x20c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x20c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x210 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x210 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x214 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x214 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x218 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x218 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x21c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x21c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x220 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x220 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x224 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x224 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x228 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x228 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x22c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x22c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x230 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x230 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x234 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x234 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x238 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x238 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x23c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x23c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x240 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x240 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x244 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x244 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x248 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x248 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x24c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x24c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x250 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x250 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x254 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x254 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x258 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x258 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x25c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x25c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x260 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x260 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x264 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x264 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x268 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x268 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x26c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x26c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x270 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x270 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x274 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x274 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x278 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x278 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x27c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x27c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x280 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x280 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x284 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x284 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x288 ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x288 ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
and [ ebp - 0x28c ] 0x0
push 0x2a4
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x28c ] eax
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov [ ebp - 0x58 ] 0xad9c
mov [ ebp - 0x60 ] 0x3
mov [ ebp - 0x48 ] 0xad9c
mov [ ebp - 0x50 ] 0x3
mov [ ebp - 0x38 ] 0xad9c
mov [ ebp - 0x40 ] 0x3
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x60 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x50 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
pop eax
call __vbaChkstk
lea esi [ ebp - 0x40 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
fld [ r-xdata ]
push ecx
fstp [ esp ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
mov [ ebp - 0x290 ] rw-data
push rw-data
push r-xdata
call __vbaNew2
mov [ ebp - 0x290 ] rw-data
jmp r-xdata
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x704 ]
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x294 ] 0x0
push 0x2b4
push r-xdata
push [ ebp - 0x78 ]
push [ ebp - 0x7c ]
call __vbaHresultCheckObj
mov [ ebp - 0x294 ] eax
jmp r-xdata
mov eax [ ebp - 0x290 ]
mov eax [ eax ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x78 ]
mov eax [ eax ]
push [ ebp - 0x78 ]
call [ eax + 0x2b4 ]
fnclex
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
jge r-xdata
and [ ebp - 0x298 ] 0x0
push 0x14c
push r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x78 ]
call __vbaHresultCheckObj
mov [ ebp - 0x298 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call __vbaStrCat
mov edx eax
lea ecx [ ebp - 0x1c ]
call __vbaStrMove
mov edx eax
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
call __vbaStrCopy
lea ecx [ ebp - 0x1c ]
call __vbaFreeStr
push 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x14c ]
fnclex
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
call __vbaAryDestruct
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x6fc ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x3c ]
call __vbaStrCat
mov edx eax
lea ecx [ ebp - 0x1c ]
call __vbaStrMove
push eax
push [ ebp + 0x8 ]
push r-xdata
call __vbaPrintObj
add esp 0xc
lea ecx [ ebp - 0x1c ]
call __vbaFreeStr
push 0x0
push 0x3
push 0x1
push 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x10
push 0x880
call __vbaRedim
add esp 0x1c
mov [ ebp - 0x38 ] r-xdata
mov [ ebp - 0x40 ] 0x8
lea esi [ ebp - 0x40 ]
push 0x0
push [ ebp - 0x30 ]
call __vbaDerefAry1
mov ecx eax
mov edx esi
call __vbaVarCopy
mov [ ebp - 0x48 ] r-xdata
mov [ ebp - 0x50 ] 0x8
lea esi [ ebp - 0x50 ]
push 0x1
push [ ebp - 0x30 ]
call __vbaDerefAry1
mov ecx eax
mov edx esi
call __vbaVarCopy
mov [ ebp - 0x58 ] r-xdata
mov [ ebp - 0x60 ] 0x8
lea esi [ ebp - 0x60 ]
push 0x2
push [ ebp - 0x30 ]
call __vbaDerefAry1
mov ecx eax
mov edx esi
call __vbaVarCopy
mov [ ebp - 0x68 ] r-xdata
mov [ ebp - 0x70 ] 0x8
lea esi [ ebp - 0x70 ]
push 0x3
push [ ebp - 0x30 ]
call __vbaDerefAry1
mov ecx eax
mov edx esi
call __vbaVarCopy
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call Ordinal_MSVBVM60_601
lea eax [ ebp - 0x30 ]
push eax
push 0x0
call __vbaErase
lea eax [ ebp - 0x2c ]
push eax
push 0x2008
call __vbaAryVar
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call __vbaAryCopy
lea ecx [ ebp - 0x2c ]
call __vbaFreeVar
mov [ ebp - 0x4 ] 0x0
fwait
push sub_46a1e3
jmp r-xdata
sub_46a202
push ebp
mov ebp esp
push 0xc
pop eax
call __vbaChkstk
mov [ ebp - 0xc ] 0x15e88
mov [ ebp - 0x8 ] 0x1
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x6f8 ]
xor eax eax
leave
retn 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
jo r-xdata
call __vbaErrorOverflow
int3
mov [ ebp - 0x4 ] eax
__vbaFPException
jmp [ __vbaFPException@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_adj_fptan
jmp [ _adj_fptan@IAT ]
_CIatan
jmp [ _CIatan@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
DllFunctionCall
jmp [ DllFunctionCall@IAT ]
__vbaAryDestruct
jmp [ __vbaAryDestruct@IAT ]
__vbaErase
jmp [ __vbaErase@IAT ]
__vbaRedim
jmp [ __vbaRedim@IAT ]
Ordinal_MSVBVM60_601
jmp [ Ordinal_MSVBVM60_601@IAT ]
__vbaAryVar
jmp [ __vbaAryVar@IAT ]
__vbaAryCopy
jmp [ __vbaAryCopy@IAT ]
__vbaStrCopy
jmp [ __vbaStrCopy@IAT ]
__vbaNew2
jmp [ __vbaNew2@IAT ]
__vbaVarDup
jmp [ __vbaVarDup@IAT ]
Ordinal_MSVBVM60_559
jmp [ Ordinal_MSVBVM60_559@IAT ]
Ordinal_MSVBVM60_557
jmp [ Ordinal_MSVBVM60_557@IAT ]
__vbaErrorOverflow
jmp [ __vbaErrorOverflow@IAT ]
__vbaStrI4
jmp [ __vbaStrI4@IAT ]
__vbaI4Str
jmp [ __vbaI4Str@IAT ]
__vbaSetSystemError
jmp [ __vbaSetSystemError@IAT ]
__vbaFpI4
jmp [ __vbaFpI4@IAT ]
__vbaI4Cy
jmp [ __vbaI4Cy@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_402521
push ss
adc dl [ edx ]
adc bl [ 0xffffffffe1e51515 ]
adc bh [ fs : esi + 0x48 ]
inc esp
pushad
in eax 0x58
imul edx [ edx ] 0xd3171717
pop ss
sbb eax 0x1717121d
iretd
sub_402597
iretd
sub_4025bb
into
mov [ eax - 0x1b ] al
lahf
lahf
iretd
sub_4025c3
adc dl [ edx ]
iretd
sub_4025c6
cmpsb [ esi ] [ edi ]
iretd
sub_4025c8
pop ss
sbb eax 0x1717ec1d
iretd
sub_4025cf
pop ss
or [ edx ] edx
adc cl dl
iretd
sub_4025d5
iretd
sub_4025d6
iretd
sub_402602
iretd
sub_402603
adc dl [ edx ]
rcl ebx cl
push ss
shl [ edx + ebp * 8 + 0x64 ] cl
0x8515f940 0x1560
sub_402613
0xea64e560 0xd3e2
sub_40261a
adc cl bh
iretd
sub_40261d
mov bl 0xb3
iretd
sub_402620
mov bl 0x9b
lahf
mov bl 0xd3
mov al [ 0x1d1d699a ]
sbb eax 0xcf171d1d
adc ch [ ebp - 0x6d ]
ror edi cl
pop esp
adc cl bh
adc [ fs : 0x64e9649e ] 0x64
0x15156415 0x15ea
sub_402646
0xcf1260ea 0x12ef
sub_402664
adc dl bl
0xa664eaea 0xb7ea
sub_40266d
pushad
0xea67eaea 0x64f6
sub_402686
sbb eax 0x461d1d1d
sbb eax 0x17611db0
pop ss
iretd
sub_402692
rcl ebx cl
adc ch dl
loop r-xdata
pop ss
push ss
pop ss
0x6ae2eaea 0x9fbb
sub_40269f
pushad
0x64eaea6f 0xea60
sub_40270f
adc cl bh
in eax 0xe5
imul edx [ 0x1d17603a ] 0x1d221d1d
sbb eax 0x1d1d1d1d
sbb eax 0xe2e2e51d
iretd
sub_40281c
rcr [ 0xffffffffe517efd0 ] cl
lahf
pop ss
iretd
sub_402825
adc eax 0xb77fd386
fwait
pushad
0x1d15879f 0x1d1d
sub_402833
sbb eax 0xe2e2d31d
0x1d1d1d1d 0xe0e5
sub_40283f
scasd [ edi ]
sbb eax 0xca1d1d1d
arpl ax si
in eax 0x30
lahf
iretd
sub_40284b
iretd
sub_40284c
adc cl bh
aad 0xcf
push esi
arpl [ edi - 0x35ed2c2d ] si
0xbbd3
sub_40285a
mov bl 0x60
in eax 0xca
iretd
sub_402907
iretd
sub_402909
rcr bh 0x1
iretd
sub_402917
iretd
sub_402918
rcl ebx cl
aam 0x12
0x15f4
sub_40291f
lea edx [ bx ]
adc eax 0x15eaea56
sbb eax 0x1d981d1d
sbb eax 0x1d1d1d1d
sbb eax 0xcf1d1d1d
rcl ebx cl
push cs
rcl ebx cl
iretd
sub_402945
mov ebx 0xd3d3d3cf
sar [ ebx - 0x2cdae834 ] cl
adc eax 0x1564ea46
adc eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
xchg edi eax
push esi
sbb eax 0xcf2d1d1d
iretd
sub_40297d
fsub [ edx + ebp * 8 - 0x16 ]
0xd31d1d36 0x1db7
sub_402988
sbb eax 0x1dbd1d1d
sbb eax 0x1d1d1d1d
cmpsd [ esi ] [ edi ]
sbb eax 0xe7ecf1d
sbb eax 0x1dde251d
sbb eax 0xdb48d31d
xlat
sbb eax 0x1d1d0e1d
adc dl [ edx ]
iretd
sub_402a39
0x1212
sub_402a3c
adc ch ch
dec edi
xor ebx [ 0xffffffff9e1d1dd4 ]
sbb eax 0x1d621d85
sbb eax 0xfc1d1d1d
or eax 0x3c1d1d1d
sbb eax 0xcadb1212
adc cl bh
0xceca
sub_402a5e
into
0x122e
sub_402a62
adc dl [ edx ]
adc cl dh
adc dl [ edx ]
into
iretd
sub_402a6a
adc cl bh
into
adc ch [ ebp + 0x1d ]
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0xfc7f1d1d
sbb eax 0x121d1d1d
0xbdcf
sub_402a8b
adc cl dh
iretd
sub_402a8e
into
into
iretd
sub_402abe
into
adc dl [ edx ]
adc dl [ edx ]
iretd
sub_402ae8
iretd
sub_402ae9
adc cl dl
iretd
sub_402aec
into
into
iretd
sub_402aef
iretd
sub_402af0
pop ebx
iretd
sub_402af2
iretd
sub_402af3
ror ch cl
pushfd
adc cl dh
iretd
sub_402af9
iretd
sub_402afa
into
adc cl dh
0x1d1d
sub_402b00
sbb eax 0x1d1d1daa
retn 0xe3f5
sub_402b08
sbb eax 0x1d1d1d1d
sbb eax 0x1d1d1d1d
sbb eax 0x121de81d
0x1212
sub_402b1b
iretd
sub_402b1c
and eax 0x6c1222ce
into
iretd
sub_4031fd
adc ch bl
cld
adc dl [ edx ]
dec ecx
adc edx [ edx ]
shl ebp cl

sub_403208
shl edx cl
inc esp
iretd
sub_40327e
adc eax 0xe5602464
in al dx
iretd
sub_403286
sbb eax 0x602148cf
in eax 0xb7
adc cl bh
iretd
sub_403290
or ebx [ 0xffffffffcf348a14 ]
pop ss
adc cl dh
iretd
sub_40329a
iretd
sub_40329b
sbb eax 0x2c7364d3
adc eax 0x60e5c9e5
0x444a12d3 0x9f9f
sub_4032ac
add [ edx ] edx
adc edx [ edi ]
pop ss
sbb eax 0x2b311d1d
stc
iretd
sub_4032b8
out dx eax
adc cl bh
in eax 0xea
adc esp [ fs : ebp + edx + 0x15 ]
adc eax 0x97211518
inc ecx
pop ss
0xceb3
sub_4032ce
iretd
sub_4032cf
adc bl [ 0x1d1d1d39 ]
pop ss
mov ebx 0xea17cfcf
shr dl 0xea
in eax 0xe5
0x1564aa4d 0x4dea
sub_4032e7
push eax
popad
iretd
sub_4032eb
iretd
sub_4032ec
pop ss
adc dl [ edx ]
dec ebx
xor [ 0x1d1d1d1d ] bl
0xe26082cf 0x601f
iretd
sub_4032fe
0x48e50af8 0x38ea
sub_40332b
dec edx
in eax 0x60
0x1d1d17bb 0x1d1d
sub_403335
retn 0x1dd2
sub_403338
sbb eax 0xbcb745ea
inc esp
dec eax
pushad
inc esp
dec eax
and [ ebx + 0x48 ] 0xe2e23748
sbb eax 0x1d1d1d1d
pushad
0x761d7bd3 0x481d
sub_403356
sbb eax 0x60eac473
lahf
mov ah 0x44
fwait
inc esp
inc esp
dec eax
cmp cl [ eax + 0x47 ]
inc edi
inc esp
lahf
0x1d1d1d12 0xac1d
sub_4033bf
into
mov ebx 0xd35963d3
popad
0x829f
sub_403414
sbb eax 0x811d1d27
0xd3d3
sub_40341c
iretd
sub_40341d
pop ebx
imul ebp [ esi ] 0x66
stosb [ edi ]
cmp [ ebx - 0x4c ] cl
fcmovnbe st3
iretd
sub_4034bc
adc bl dh
into
iretd
sub_4034c0
into
inc esi
adc dl [ edx ]
adc cl dh
iretd
sub_4034c7
adc cl dl
adc bl [ 0xffffffffc8091d1d ]
sbb eax 0xb2a21d79
sbb eax 0x1d251d1d
sbb eax 0xcf1281ca
iretd
sub_4034df
iretd
sub_4034e0
xchg [ edx ] edx
iretd
sub_4034e3
into
adc cl dh
iretd
sub_4034e9
0x481d
sub_4039fc
iretd
sub_4039fd
ror edi cl
adc ebp [ edx ]
pop ss
dec edx
pop ss
push edx
in eax 0x32
fwait
adc dl [ edx ]
pop ss
iretd
sub_403a0c
lahf
inc edi
lahf
iretd
sub_403a7f
adc dh [ edi + 0x21cfb796 ]
push 0x60
0x1d1d8264 0x12a3
sub_403a8e
dec ecx
adc bl [ 0x121d12d3 ]
adc bl [ 0x1d1d7d1d ]
sbb eax 0x1385121d
iretd
sub_403aa1
adc dl [ edx ]
adc cl dh
adc ch [ ebx + 0x1d1d1d1d ]
pop ecx
sbb eax 0xcececa12
adc cl dh
0xcace
sub_403c01
pop ss
retn
sub_403c10

sub_403c11
rol esi cl
pop es
mov [ 0x1df9cccf ] 0x1d6ac2fd
iretd
sub_403c1f
iretd
sub_403c20
int 0x1d

sub_403c25
adc eax 0x72faf5f4
in al 0xe5
0xe3e3e37d 0xe268
sub_403c55
pop ds
inc ecx
leave
into
sbb eax 0x1dd6d3d2
cld
std
retn 0xc11d
sub_403c78

sub_403c79
sbb eax 0x1dc8c8cb

sub_403c7f
leave
iretd
sub_403cb7
adc edi ecx
sbb eax 0xbaa9c380
retn
sub_403cbf
retn
sub_403cdf
shl dh cl
sbb eax 0x1d83c59c
pushad

sub_403cef

sub_403cf8
int1
sbb edi edi
std
retn 0xc41f
sub_403d00
0xca1d
sub_403d03
0x1dc8
sub_403d06
enter 0xcdce 0x1d
retn 0xc2fd
sub_403d1b
0x1dfa
sub_403d21
sbb eax 0x1dbbf2ed
shl [ eax - 0x3c3fe239 ] 0xc0
sbb eax 0x1dc4c14a
0xce49
sub_403d73
leave
iretd
sub_403d9c

sub_403db4
loopne r-xdata
movsd [ edi ] [ esi ]
iretd
sub_403db7
int 0xd3
sbb eax 0x1dc8cac4
mov esp 0xf4f756c5
int 0x1d
cld
xchg edi eax
retn 0xc61d
sub_403dcb
mov bh 0x1d
in eax dx
out dx eax
in eax dx
sbb eax 0x1dc7a5c1
into
mov ebp 0x84c2def0
jmp sub_403dfb
sub_403dfb
xchg ecx eax
pushad
sbb eax 0x1df9fbfb
jmp [ edx - 0x591da01 ]
sub_404085
sbb eax 0x1d08fbfb
retn 0xc229
sub_40408d
sbb eax 0x1dc1c0c3
out dx eax
out dx al
push esi
sbb eax 0x1dfdfcfc
leave
cwde
iretd
sub_4040a0
0xc21d
sub_4040a3
retn 0x1dc0
sub_4040b7
stc
cld
sbb eax 0x1dfafafa
iretd
sub_4040bf
into
loopne r-xdata
test [ esi + 0x49bbb21d ] edi
sbb eax 0x1dfafa51
hlt
fadd [ esi - 0x60 ]
sbb eax 0x1d9ac5c4
mov al [ 0xfffffffff61dfe91 ]
div esp
sbb eax 0x61cec9ca
pop esp
iretd
sub_4040d9
sbb eax 0x1ddbd5d1
pop esi
test [ esi + 0x49bbb21d ] edi
sbb eax 0x1dfafa51
hlt
sub_4044db
leave
int 0x91
sbb eax 0x1d44dc1d
sbb eax 0xd0d3e21d
salc
popad
0xc9c8
sub_404507

sub_40458a
fstp st6
fistp [ 0x1da1a2a3 ]
into
iretd
sub_404595
bound ecx [ ecx - 0x30ad3536 ]
int3
sub_404713
enter 0x1dc9 0x5b
int3
sub_4047eb
fucomip st0
pop ss
mov ecx [ eax - 0x4b48e20a ]
mov edx 0xc2b8bb1d
sbb eax 0x1dc1cdd0
0xc114
sub_404ac7
iretd
sub_404ac9
sbb eax 0x1dced7da
mov al 0xb1
mov ch 0xc8
int3
sub_404c50
iretd
sub_404c56
pop ss
iretd
sub_405d50
rcr [ 0x1ddecec7 ] 0x1
iretd
sub_405d57
xlat
stosd [ edi ]
sbb eax 0x1dacdbd3
aad 0xa3
mov ch 0x1d
into
salc
movsd [ edi ] [ esi ]
sbb eax 0x1dd425c3

sub_405e2b
rcl esi cl
shl [ eax + 0x1de21d1d ] 0x1
sbb eax 0x1d1de21d
and [ ebp - 0x39e2e2e3 ] ebp
sbb eax 0x8de21d47
hlt
sub_405ead
push ss
retn
sub_4061ef
retn 0x62c3
sub_4061f2
clc
clc
[ 0x7cc0c2c2 ]
cld
cld
popfd
sbb eax 0x1dc4c1c6
out 0xcb al
enter 0xc81d 0xcb
into
sbb eax 0x1d0cc0c0
retn
sub_406263
leave
sbb [ 0x1dfcff7b ] 0xfd
retn 0x1184
sub_40626e
retn 0xc3c2
sub_406278
les ebx [ 0xffffffffabdce2c2 ]
retn
sub_40627f
rol cl 0x1d
retn
sub_4062a5
push es
retn 0xfac0
sub_4062e1
sbb eax 0x1df7f6f6
stc
cli
stc
sbb eax 0x1dccc9c8
iretd
sub_4062f0
int 0x1d
mov cl 0xc6
sbb eax 0xa0fcfcfc
sti
mov esi 0x3ac11dfe
mov [ ecx ] 0x1dcecbc8
rcl dl cl
inc edx
sbb eax 0x1dcfc8c8
div edi
int3
sub_40638b
push ebx
int 0x1d
rol al 0xc1
sbb eax 0x1dc1c043
stc
leave
into
sbb eax 0x1db9bab0
mov edi 0xfb1d888b
adc eax 0xed6b0acd
0xcbf1
sub_4063ab

sub_4063ac
mov edx 0xc1c2a21d
sbb eax 0x1dc8cafb
int3
sub_4063e1
push 0xffffffc2
ror [ ebx - 0x2c2d32f7 ] 0x1d
int3
sub_4071a3
retn 0x37c1
sub_4071a6
pop ecx
hlt
sub_407271
push esi
enter 0xcac9 0xf
rcl esi cl
mov [ 0xffffffff8dafa71d ] al
sbb eax 0x1d8db1ab
mov al [ 0xffffffffd21d17a6 ]
int3
sub_4075f8
dec esp
0x70041 0x0
sub_40c096
inc ecx
add [ edx ] ah
add [ ebx ] al
add [ eax ] al
adc [ eax ] eax
int3
sub_41ad15
out dx al
inc ecx
add [ eax ] dh
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi * 4 - 0x16bfffbf ] bl
test [ edx ] al
hlt
sub_41e728
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_41eb90
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_41eec9
push ds
0xad4ef2fb 0x9933
iret
sub_41f814
jmp [ esi + 0x11ae4ab9 ]
sub_424097
pop es
push ebp
ud0 ecx [ eax ]
adc [ esi ] esi
add bh bh
add al [ eax + eax ]
add bh bh
int3
sub_42850a
jmp [ esp + ecx ]
sub_429412
pop edx
call sub_429428
push 0x4
push r--data
push 0x22
push 0xffffffff
call eax
pop eax
jmp eax
sub_4296e6
adc bh [ ebx ]
cmp eax 0xd5611c06
rcl [ edi + 0x19 ] 0x1
cmp al 0x8d
push es
popad
aad 0x0
sti
mov ebp 0x3b1259c1
cmp eax 0xd5611c12
rcl ch 0x1
0x72fb5d98 0x59c0
sub_429786
0x7a70a86b 0x1631
sub_42978d
pop ecx
adc bl [ esi + 0x6112cd40 ]
aad 0x94
adc [ esi + 0x6112c540 ] ebx
aad 0xb1
retn 0x2a9e
sub_4299f2
0x9bbaa161 0x549f
sub_429b46
pop ss
fcom st5
pop ecx
adc ah [ ecx + 0x5c ]
adc [ edx ] esi
0x611a5962 0xd0d5
sub_429bb8
sub cl [ edx + esi * 2 ]
0x611a0942 0x5ad5
sub_429d4c
salc
pop ecx
adc ch dl
retn 0x993f
sub_429d53
sub edx ebx
aas
pop ebx
pop es
test [ ebx ] dh
adc ch dl
retn 0xd0d8
j_sub_429df9
jmp sub_429df9
sub_429dd5
rcr [ ecx + 0x1259d5c5 ] cl
loop r-xdata
dec ecx
xchg ebx eax
mov [ 0x61125965 ] al
pop esi
push ecx
inc ebx
0x53ed5182 0x892a
sub_429de6
xchg ecx eax
cdq
aad 0x56
xchg edi eax
xchg esp eax
xlat
pop ecx
adc ch dl
mov cl [ ecx - 0x6d ]
mov [ 0x61125965 ] al
pop esi
sub_429df9
push ss
push ss
0x49585ac2 0x525c
sub_42a241
push esi
and ch [ edi - 0x6d ]
cmpsb [ esi ] [ edi ]
pop esi
inc ebp
fldcw [ eax + esi * 8 ]
0xa69355a8 0x6417
sub_42a2ec
cmp al 0xa7
push ds
popad
aad 0x1
xchg edx eax
pop ecx
aam 0x2c
sbb [ ecx ] ecx
adc eax 0x2a61138d
int3
sub_42b48c
retn 0x5f3b
sub_45f716
jmp [ eax + ecx ]
sub_46a1bb
lea ecx [ ebp - 0x1c ]
call __vbaFreeStr
lea ecx [ ebp - 0x2c ]
call __vbaFreeVar
lea eax [ ebp - 0x30 ]
push eax
push 0x0
call __vbaAryDestruct
retn
sub_46a1e3
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push [ ebp + 0x8 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
