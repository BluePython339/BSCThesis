sub_401000
mov eax [ esp + 0x4 ]
sub esp 0x404
test eax eax
je r-xdata
mov [ esp + 0x4 ] 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
push ecx
push 0x400
push eax
push 0x0
push 0x1100
call [ FormatMessageA@IAT ]
mov edx [ esp ]
push 0x400
push edx
lea eax [ esp + 0xc ]
push eax
call [ strncpy@IAT ]
mov ecx [ esp + 0xc ]
add esp 0xc
push ecx
call [ LocalFree@IAT ]
jmp r-xdata
lea edx [ esp + 0x4 ]
push edx
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x40c ]
push ecx
mov edx 0x400
sub edx eax
push edx
lea eax [ esp + eax + 0xc ]
push eax
call [ _snprintf@IAT ]
add esp 0xc
push 0x10
push 0x0
lea ecx [ esp + 0xc ]
push ecx
call [ GetFocus@IAT ]
push eax
call [ MessageBoxA@IAT ]
add esp 0x404
retn
sub_4010a0
sub esp 0x10
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp ] eax
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push rw-data
push ecx
call [ rw-data ]
add esp 0x18
test eax eax
jne r-xdata
mov edx [ esp ]
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push edx
mov edx [ esp + 0x10 ]
push eax
push ecx
push edx
call [ MessageBoxA@IAT ]
push eax
call [ rw-data ]
add esp 0x4
add esp 0x10
retn
add esp 0x10
retn
sub_401110
push rw-data
call sub_401a40
add esp 0x4
test eax eax
jne r-xdata
retn 0x10
push esi
call sub_402920
push rw-data
call [ rw-data ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ __argv@IAT ]
mov ecx [ eax ]
mov edx [ __argc@IAT ]
mov eax [ edx ]
push ecx
push eax
call sub_401b90
add esp 0x8
pop esi
push 0x0
push 0x0
push rw-data
call [ rw-data ]
push eax
push rw-data
push esi
call [ rw-data ]
add esp 0x18
sub_401180
mov eax [ esp + 0x4 ]
push 0x304
push rw-data
push eax
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
mov eax rw-data
lea edx [ eax + 0x1 ]
push rw-data
call [ GetLastError@IAT ]
push eax
call sub_401000
add esp 0x8
xor eax eax
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x4
jbe r-xdata
mov eax rw-data
push 0x4
push rw-data
push rw-data
call [ strncmp@IAT ]
add esp 0xc
test eax eax
mov eax rw-data
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
push 0x5c
push rw-data
call [ strrchr@IAT ]
mov [ eax ] 0x0
add esp 0x8
mov eax 0x1
retn
mov edx rw-data
sub edx eax
sub_401220
push esi
push edi
mov edi [ esp + 0xc ]
push rw-data
push 0x1
push edi
call [ FindResourceA@IAT ]
cmp [ rw-data ] 0x0
mov esi eax
jne r-xdata
test esi esi
jne r-xdata
push edi
call sub_401180
add esp 0x4
push esi
push edi
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push rw-data
call [ GetLastError@IAT ]
push eax
call sub_401000
add esp 0x8
pop edi
xor eax eax
pop esi
retn
push eax
call [ LockResource@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test eax eax
jne r-xdata
push rw-data
call [ GetLastError@IAT ]
push eax
call sub_401000
add esp 0x8
pop edi
xor eax eax
pop esi
retn
mov ecx [ eax + 0xc ]
mov [ rw-data ] ecx
lea ecx [ eax + 0x10 ]
mov [ rw-data ] ecx
cmp [ eax ] 0x78563412
je r-xdata
push rw-data
call [ GetLastError@IAT ]
push eax
call sub_401000
add esp 0x8
pop edi
xor eax eax
pop esi
retn
mov eax ecx
lea esi [ eax + 0x1 ]
jmp r-xdata
push rw-data
push 0x0
call sub_401000
add esp 0x8
pop edi
xor eax eax
pop esi
retn
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
lea edx [ ecx + eax + 0x1 ]
mov [ rw-data ] edx
cmp [ ecx ] 0x0
je r-xdata
push 0x304
push rw-data
push edi
call [ GetModuleFileNameA@IAT ]
pop edi
mov eax 0x1
pop esi
retn
push ecx
push rw-data
push rw-data
push 0x304
push rw-data
call [ _snprintf@IAT ]
add esp 0x14
pop edi
mov eax 0x1
pop esi
retn
sub_401350
push ecx
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
push edi
lea ecx [ esp + 0xc ]
push ecx
push esi
call [ GetFileSize@IAT ]
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
push esi
mov ebx eax
call [ CreateFileMappingA@IAT ]
push esi
mov esi [ CloseHandle@IAT ]
mov edi eax
call esi
cmp edi 0xffffffff
jne r-xdata
xor eax eax
pop esi
pop ecx
retn
push ebp
push 0x0
push 0x0
push 0x0
push 0x4
push edi
call [ MapViewOfFile@IAT ]
push edi
mov ebp eax
call esi
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
pop edi
pop ebx
xor eax eax
pop esi
pop ecx
retn
mov eax ebp
pop ebp
pop edi
pop ebx
pop esi
pop ecx
retn
mov [ eax ] ebx
sub_4013e0
sub esp 0x308
cmp [ rw-data ] 0x0
push esi
mov esi [ esp + 0x310 ]
jne r-xdata
push rw-data
push 0x1
push esi
call [ FindResourceA@IAT ]
test eax eax
je r-xdata
push esi
call sub_401180
add esp 0x4
lea eax [ esp + 0x4 ]
push eax
mov eax rw-data
call sub_401350
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
push eax
push rw-data
call sub_401d60
add esp 0x8
test eax eax
jne r-xdata
push rw-data
push rw-data
push rw-data
lea edx [ esp + 0x14 ]
push 0x304
push edx
call [ _snprintf@IAT ]
lea eax [ esp + 0x1c ]
push 0x0
push eax
call sub_401d60
add esp 0x1c
test eax eax
jne r-xdata
push edi
push 0xb
push rw-data
push esi
xor edi edi
call [ strncmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
pop esi
add esp 0x308
retn
push rw-data
call [ GetLastError@IAT ]
push eax
call sub_401000
add esp 0x8
xor eax eax
pop esi
add esp 0x308
retn
push rw-data
call [ GetLastError@IAT ]
push eax
call sub_401000
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
call sub_401000
add esp 0x10
xor eax eax
pop esi
add esp 0x308
retn
push esi
call [ UnmapViewOfFile@IAT ]
test edi edi
pop edi
jne r-xdata
lea ecx [ esi + 0xf ]
push ecx
push rw-data
call sub_401d60
add esp 0x8
mov edi eax
sub_401510
mov eax [ esp + 0x4 ]
push eax
push rw-data
call sub_402520
add esp 0x8
test eax eax
je r-xdata
retn
push rw-data
push eax
call sub_402230
add esp 0x8
test eax eax
je r-xdata
jmp eax
sub_401540
sub esp 0x304
push esi
mov esi [ esp + 0x30c ]
push rw-data
push 0x1
push esi
call [ FindResourceA@IAT ]
test eax eax
je r-xdata
push rw-data
push rw-data
push rw-data
lea eax [ esp + 0x10 ]
push 0x304
push eax
call [ _snprintf@IAT ]
add esp 0x14
lea ecx [ esp + 0x4 ]
push ecx
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push edi
push 0x0
mov eax rw-data
call sub_401350
mov esi eax
add esp 0x4
mov edi esi
test esi esi
je r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
pop esi
add esp 0x304
retn
push eax
call [ LockResource@IAT ]
push eax
push rw-data
call sub_402520
add esp 0x8
test eax eax
je r-xdata
pop edi
push ebx
mov ebx [ strncmp@IAT ]
push 0xb
push rw-data
push esi
call ebx
add esp 0xc
test eax eax
jne r-xdata
call eax
pop esi
add esp 0x304
retn
push rw-data
push eax
call sub_402230
add esp 0x8
test eax eax
je r-xdata
push 0xa
push rw-data
push edi
call ebx
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov edx [ esi + 0xb ]
lea edi [ esi + edx + 0xf ]
pop esi
add esp 0x304
jmp eax
push esi
call [ UnmapViewOfFile@IAT ]
add edi 0xe
push edi
call sub_401510
add esp 0x4
sub_401660
push ecx
mov eax rw-data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea eax [ eax + rw-data ]
mov [ rw-data ] eax
cmp eax rw-data
jbe r-xdata
sub eax rw-data
push esi
mov esi eax
je r-xdata
mov cl 0x5c
lea ecx [ ecx ]
mov [ rw-data ] 0x0
lea eax [ esi - 0x1 ]
push eax
push rw-data
push rw-data
call [ strncpy@IAT ]
add esp 0xc
mov [ esi + rw-data ] 0x0
jmp r-xdata
dec eax
mov [ rw-data ] eax
cmp eax rw-data
ja r-xdata
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
push 0x104
push rw-data
call [ GetFullPathNameA@IAT ]
pop esi
pop ecx
retn
cmp [ eax - 0x1 ] cl
je r-xdata
sub_4016f0
push ebx
push esi
push edi
push rw-data
call [ rw-data ]
add esp 0x4
call [ rw-data ]
mov ecx eax
lea esi [ ecx + 0x1 ]
lea esp [ esp ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov edi ecx
mov ecx rw-data
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
mov edx [ rw-data ]
sub ecx esi
lea esi [ edx + 0x1 ]
mov bl [ edx ]
inc edx
test bl bl
jne r-xdata
sub edx esi
lea ecx [ edx + ecx + 0x1 ]
cmp edi ecx
ja r-xdata
mov ecx rw-data
mov esi eax
sub esi ecx
push rw-data
push 0x0
call sub_401000
add esp 0x8
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
mov ecx rw-data
mov edx ecx
mov bl [ ecx ]
inc ecx
test bl bl
jne r-xdata
sub ecx edx
mov edi eax
mov esi edx
mov edx ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ rw-data ]
mov edx ecx
mov bl [ ecx ]
inc ecx
test bl bl
jne r-xdata
sub ecx edx
dec eax
mov ebx ecx
mov edi eax
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ecx ebx
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_4017d0
mov eax rw-data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push ebp
mov edx eax
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
lea eax [ eax + edx + 0x2 ]
push eax
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
mov eax rw-data
mov edx ebp
sub edx eax
jmp r-xdata
push rw-data
push 0x8
call sub_401000
add esp 0x8
pop esi
or eax 0xffffffff
pop ebp
retn
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax rw-data
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push edi
mov edi ebp
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
mov ecx eax
lea ecx [ ecx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi ebp
sub eax ecx
mov esi ecx
dec edi
mov edi edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
push rw-data
[ edi ] [ esi ]
call [ rw-data ]
push ebp
mov edi eax
call [ rw-data ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebp
retn
push esi
push edi
call [ rw-data ]
push esi
call sub_401c40
add esp 0xc
sub_4018e0
push ebx
mov ebx [ esp + 0x8 ]
push ebx
call sub_401220
add esp 0x4
test eax eax
jne r-xdata
push ebx
call sub_4013e0
add esp 0x4
test eax eax
je r-xdata
mov eax 0xff
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
push esi
je r-xdata
mov esi [ getenv@IAT ]
push rw-data
call esi
add esp 0x4
test eax eax
je r-xdata
mov esi [ __iob_func@IAT ]
push edi
push 0x0
call esi
mov edi [ setbuf@IAT ]
push eax
call edi
add esp 0x8
push 0x0
call esi
add eax 0x20
push eax
call edi
add esp 0x8
push 0x0
call esi
add eax 0x40
push eax
call edi
add esp 0x8
pop edi
mov edx [ rw-data ]
mov [ edx ] 0x0
push rw-data
call esi
push eax
call [ atoi@IAT ]
mov ecx [ rw-data ]
add esp 0x8
mov [ ecx ] eax
jmp r-xdata
call sub_4017d0
test eax eax
jne r-xdata
call sub_4016f0
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] 0x1
mov ecx [ rw-data ]
mov [ ecx ] 0x1
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
mov ecx [ rw-data ]
push rw-data
mov [ ecx ] eax
call [ rw-data ]
add esp 0x4
call sub_401660
call [ rw-data ]
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
call [ rw-data ]
jmp r-xdata
push eax
call [ rw-data ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push 0x1
call [ rw-data ]
push eax
push rw-data
call [ rw-data ]
add esp 0xc
push ebx
call sub_401540
add esp 0x4
pop esi
xor eax eax
pop ebx
retn
push ebx
call sub_401540
add esp 0x4
xor eax eax
push esi
push rw-data
call [ rw-data ]
push esi
call sub_401c40
add esp 0xc
sub_401a50
push rw-data
call [ getenv@IAT ]
add esp 0x4
test eax eax
je r-xdata
jmp [ rw-data ]
push esi
mov esi [ __iob_func@IAT ]
push rw-data
call esi
push eax
call [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
pop esi
push rw-data
call esi
push eax
call [ rw-data ]
add esp 0x8
sub_401aa0
sub esp 0xc
push esi
xor esi esi
push rw-data
mov [ esp + 0x8 ] esi
call [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
mov eax esi
pop esi
add esp 0xc
retn
push ebp
push eax
call [ rw-data ]
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
pop ebp
mov eax esi
pop esi
add esp 0xc
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push eax
push ecx
call [ rw-data ]
mov ebx eax
add esp 0x8
mov [ esp + 0x10 ] ebx
test ebx ebx
je r-xdata
pop ebx
pop ebp
mov eax esi
pop esi
add esp 0xc
retn
push edi
push ebx
call [ rw-data ]
add esp 0x4
xor edi edi
mov [ esp + 0x18 ] eax
test eax eax
jle r-xdata
pop edi
pop ebx
pop ebp
mov eax esi
pop esi
add esp 0xc
retn
jmp r-xdata
push edi
push ebx
call [ rw-data ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push esi
call sub_401c40
inc edi
add esp 0x4
cmp edi [ esp + 0x18 ]
jl r-xdata
push ebp
push ebp
push esi
call [ rw-data ]
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop ebx
pop ebp
pop esi
add esp 0xc
retn
push ebx
call sub_401c40
mov ebx [ esp + 0x18 ]
add esp 0x4
call [ rw-data ]
mov [ esp + 0x10 ] 0xff
sub_401b90
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push edi
push eax
push ecx
call [ rw-data ]
push 0x1
call [ rw-data ]
mov esi eax
add esp 0xc
test esi esi
je r-xdata
call sub_401aa0
push rw-data
mov edi eax
call [ getenv@IAT ]
add esp 0x4
test eax eax
je r-xdata
call [ rw-data ]
push eax
call [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
call [ rw-data ]
mov eax edi
pop edi
pop esi
retn
mov esi [ __iob_func@IAT ]
push rw-data
call esi
push eax
call [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
push esi
call sub_401c40
add esp 0x4
push eax
push 0x0
push esi
call [ rw-data ]
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call esi
push eax
call [ rw-data ]
add esp 0x8
push esi
push rw-data
call [ rw-data ]
add esp 0x8
sub_401c40
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
push ecx
push 0x0
push eax
call [ rw-data ]
push 0x0
call [ rw-data ]
mov edx [ rw-data ]
push eax
push 0x0
push edx
call [ rw-data ]
add esp 0x1c
retn
push 0x1
call [ rw-data ]
add esp 0x4
mov [ rw-data ] eax
sub_401cb0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
mov esi rw-data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add eax edi
cmp eax edi
je r-xdata
cmp [ eax ] 0x5c
jne r-xdata
cmp [ eax ] 0x5c
je r-xdata
push eax
call [ GetModuleHandleA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc eax
dec eax
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov edi [ GetProcAddress@IAT ]
lea esp [ esp ]
pop edi
pop esi
xor eax eax
pop ebx
retn
push rw-data
call [ OutputDebugStringA@IAT ]
mov ecx [ esi ]
push ecx
push rw-data
call [ __iob_func@IAT ]
add eax 0x40
push eax
call [ fprintf@IAT ]
add esp 0xc
add esi 0x8
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
push eax
push ebx
call edi
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
sub_401d60
mov eax [ esp + 0x8 ]
push esi
mov esi rw-data
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push edi
push eax
push ecx
call sub_402520
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_401cb0
add esp 0x4
pop esi
retn
pop edi
xor eax eax
pop esi
retn
cmp [ rw-data ] 0x0
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
jmp r-xdata
mov edx [ esi ]
push edx
push edi
call sub_402230
add esp 0x8
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
mov eax [ esi ]
push eax
push rw-data
call [ __iob_func@IAT ]
add eax 0x40
push eax
call [ fprintf@IAT ]
add esp 0xc
add esi 0x8
cmp [ esi ] 0x0
jne r-xdata
sub_401e20
mov eax [ esi + 0x18 ]
push eax
call [ free@IAT ]
mov eax [ esi + 0x24 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov [ eax + 0x20 ] ecx
cmp esi [ rw-data ]
jne r-xdata
mov edx [ esi + 0x24 ]
mov [ eax + 0x24 ] edx
retn
mov eax [ esi + 0x20 ]
mov [ rw-data ] eax
sub_401e60
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ esp + 0x10 ]
test esi esi
je r-xdata
push edi
call [ GetModuleHandleA@IAT ]
pop edi
pop esi
pop ebx
retn
mov ebx [ _stricmp@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
retn
mov esi [ esi + 0x20 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x18 ]
push eax
push edi
call ebx
add esp 0x8
test eax eax
je r-xdata
sub_401ea0
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx [ _stricmp@IAT ]
push edi
call [ LoadLibraryA@IAT ]
pop edi
pop esi
pop ebx
retn
mov ecx [ rw-data ]
push ecx
push edi
call eax
add esp 0x8
test eax eax
je r-xdata
inc [ esi + 0x1c ]
pop edi
mov eax esi
pop esi
pop ebx
retn
mov esi [ esi + 0x20 ]
test esi esi
jne r-xdata
push eax
push edi
call sub_402520
push esi
mov edi eax
call [ free@IAT ]
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
push eax
push edi
call ebx
add esp 0x8
test eax eax
je r-xdata
sub_401f20
mov eax [ esp + 0x4 ]
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call [ FreeLibrary@IAT ]
pop esi
retn
nop
add [ esi + 0x1c ] 0xffffffff
jne r-xdata
mov esi [ esi + 0x20 ]
test esi esi
jne r-xdata
mov eax 0x1
pop esi
retn
call sub_401e20
push esi
call sub_4022c0
add esp 0x4
cmp esi eax
je r-xdata
sub_401f60
push ecx
mov eax [ esp + 0x10 ]
push ebx
mov ebx [ eax + 0x4 ]
mov eax [ eax ]
movzx ecx [ eax + 0x14 ]
xor edx edx
push esi
lea esi [ ecx + eax + 0x18 ]
mov [ esp + 0x8 ] 0x0
cmp dx [ eax + 0x6 ]
jae r-xdata
pop esi
pop ebx
pop ecx
retn
push ebp
mov ebp [ VirtualAlloc@IAT ]
push edi
add esi 0x10
mov edx [ esi - 0x4 ]
push 0x4
push 0x1000
push eax
add edx ebx
push edx
call ebp
mov ecx [ esi + 0x4 ]
add ecx [ esp + 0x18 ]
mov edi eax
mov eax [ esi ]
push eax
push ecx
push edi
call memcpy
mov [ esi - 0x8 ] edi
mov eax [ esp + 0x1c ]
mov edi [ eax + 0x38 ]
test edi edi
jle r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
pop edi
pop ebp
mov edx [ esp + 0x20 ]
mov ecx [ edx ]
mov eax [ esp + 0x10 ]
movzx edx [ ecx + 0x6 ]
inc eax
add esi 0x28
cmp eax edx
mov [ esp + 0x10 ] eax
jl r-xdata
mov ecx [ esi - 0x4 ]
push 0x4
push 0x1000
push edi
add ecx ebx
push ecx
call ebp
push edi
push 0x0
push eax
mov [ esi - 0x8 ] eax
call memset
jmp r-xdata
add esp 0xc
sub_402010
push ecx
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ eax ]
movzx ecx [ ebx + 0x14 ]
push ebp
xor edx edx
xor ebp ebp
lea eax [ ecx + ebx + 0x18 ]
cmp dx [ ebx + 0x6 ]
jae r-xdata
pop ebp
pop ebx
pop ecx
retn
push esi
push edi
lea edi [ eax + 0x24 ]
lea edx [ edx + ecx * 2 ]
lea ecx [ esi + edx * 2 ]
mov esi [ ecx * 4 + rw-data ]
test eax 0x4000000
je r-xdata
mov eax [ edi - 0x14 ]
mov ecx [ edi - 0x1c ]
push 0x4000
push eax
push ecx
call [ VirtualFree@IAT ]
jmp r-xdata
mov edx [ edi - 0x14 ]
mov ecx edx
test ecx ecx
jne r-xdata
or esi 0x200
mov edx [ esp + 0x18 ]
mov ebx [ edx ]
movzx eax [ ebx + 0x6 ]
inc ebp
add edi 0x28
cmp ebp eax
jl r-xdata
jbe r-xdata
test al 0x40
je r-xdata
mov eax [ edi ]
mov ecx eax
mov edx eax
shr ecx 0x1d
shr edx 0x1e
mov esi eax
and ecx 0x1
and edx 0x1
shr esi 0x1f
test eax 0x2000000
je r-xdata
pop edi
pop esi
mov ecx [ edi - 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push esi
push edx
push ecx
call [ VirtualProtect@IAT ]
test al al
jns r-xdata
mov ecx [ ebx + 0x20 ]
jmp r-xdata
mov ecx [ ebx + 0x24 ]
test ecx ecx
sub_4020d0
push ebx
mov ebx [ eax + 0x4 ]
mov eax [ eax ]
add eax 0xa0
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
pop ebx
retn
mov ecx [ eax ]
mov eax [ ecx + ebx ]
add ecx ebx
test eax eax
jbe r-xdata
push ebp
push esi
push edi
nop
add ecx [ ecx + 0x4 ]
mov eax [ ecx ]
test eax eax
ja r-xdata
movzx eax [ esi ]
mov ebp eax
and ebp 0xfffff000
cmp ebp 0x3000
jne r-xdata
lea edi [ eax + ebx ]
mov eax [ ecx + 0x4 ]
sub eax 0x8
xor edx edx
lea esi [ ecx + 0x8 ]
test eax 0xfffffffe
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax [ ecx + 0x4 ]
sub eax 0x8
inc edx
shr eax 0x1
add esi 0x2
cmp edx eax
jb r-xdata
mov ebp [ esp + 0x14 ]
and eax 0xfff
add eax edi
add [ eax ] ebp
sub_402190
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x14 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx ]
push ebx
push ebp
mov ebp [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x78 ]
mov ecx [ esi + ebp + 0x18 ]
mov ebx [ esi + ebp + 0x24 ]
add esi ebp
add ecx ecx
add ecx ecx
push edi
mov edi [ esi + 0x20 ]
add ecx ecx
push ecx
add edi ebp
add ebx ebp
call [ malloc@IAT ]
mov edx [ esp + 0x18 ]
add esp 0x4
mov [ edx + 0x14 ] eax
test eax eax
jne r-xdata
xor ecx ecx
mov [ esp + 0x14 ] eax
cmp [ esi + 0x18 ] ecx
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x18 ]
mov ecx [ esp + 0x14 ]
push sub_402150
push 0x8
push eax
push ecx
call [ qsort@IAT ]
mov eax [ esp + 0x24 ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
mov edx [ edi ]
add edx ebp
mov [ eax ] edx
movzx edx [ ebx ]
mov [ eax + 0x4 ] edx
inc ecx
add edi 0x4
add ebx 0x2
add eax 0x8
cmp ecx [ esi + 0x18 ]
jb r-xdata
sub_402230
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
add eax 0x78
cmp [ eax + 0x4 ] 0x0
push edi
mov edi [ ecx + 0x4 ]
jne r-xdata
push esi
mov esi [ eax ]
add esi edi
cmp [ esi + 0x18 ] 0x0
je r-xdata
xor eax eax
pop edi
retn
pop esi
xor eax eax
pop edi
retn
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
mov edx eax
shr edx 0x10
test edx edx
je r-xdata
movzx eax ax
sub eax [ esi + 0x10 ]
push ecx
call sub_402190
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
lea edx [ ecx + eax * 4 ]
mov eax [ edx + edi ]
pop esi
add eax edi
pop edi
retn
mov ecx [ esi + 0x18 ]
push sub_402170
push 0x8
push ecx
push eax
lea edx [ esp + 0x20 ]
push edx
call [ bsearch@IAT ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ esi + 0x14 ]
ja r-xdata
sub_4022c0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
push ebx
mov ebx [ free@IAT ]
je r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
mov edx [ ecx + 0x28 ]
push 0x0
push 0x0
push eax
add edx eax
call edx
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push edi
xor edi edi
cmp [ esi + 0xc ] edi
jle r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
mov edx [ esi + 0x8 ]
push edx
call ebx
add esp 0x4
pop edi
mov eax [ esi + 0x8 ]
cmp [ eax + edi * 4 ] 0xffffffff
lea eax [ eax + edi * 4 ]
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop ebx
push eax
call ebx
add esp 0x4
inc edi
cmp edi [ esi + 0xc ]
jl r-xdata
mov ecx [ eax ]
push ecx
call sub_401f20
add esp 0x4
sub_402360
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
push edx
push ecx
call [ GetProcAddress@IAT ]
retn
lea ecx [ ecx ]
mov [ esp + 0x4 ] eax
jmp sub_402230
mov eax [ eax + 0x20 ]
test eax eax
jne r-xdata
cmp eax ecx
je r-xdata
sub_4023a0
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi ]
mov ebx [ edi + 0x4 ]
sub eax 0xffffff80
cmp [ eax + 0x4 ] 0x0
mov esi 0x1
mov [ esp + 0xc ] ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ecx
retn
push ebp
mov ebp [ eax ]
push 0x14
add ebp ebx
push ebp
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
pop ebp
pop edi
mov eax esi
pop esi
pop ebx
pop ecx
retn
lea esp [ esp ]
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
pop ecx
retn
add eax ebx
push eax
call sub_401ea0
mov esi eax
add esp 0x4
cmp esi 0xffffffff
je r-xdata
pop ebp
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov eax [ edi + 0xc ]
mov edx [ edi + 0x8 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
push edx
call [ realloc@IAT ]
add esp 0x8
mov [ edi + 0x8 ] eax
test eax eax
je r-xdata
push 0x8
call [ SetLastError@IAT ]
pop ebp
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ edi + 0xc ]
mov [ eax + ecx * 4 ] esi
inc [ edi + 0xc ]
mov eax [ ebp ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
add ebx edx
mov edi ebx
mov edi [ ebp + 0x10 ]
add ebx eax
add edi [ esp + 0x10 ]
jmp r-xdata
push 0x14
add ebp 0x14
push ebp
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
jns r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x10 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea ecx [ eax + ecx + 0x2 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
and eax 0xffff
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push ecx
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ecx ]
push 0x7f
call [ SetLastError@IAT ]
mov eax [ ebx + 0x4 ]
add ebx 0x4
add edi 0x4
test eax eax
jne r-xdata
cmp eax esi
je r-xdata
push esi
call [ GetProcAddress@IAT ]
push eax
push ecx
call sub_402230
add esp 0x8
jmp r-xdata
mov ecx [ ecx + 0x20 ]
test ecx ecx
jne r-xdata
push ecx
push eax
call sub_402230
add esp 0x8
jmp r-xdata
mov eax [ eax + 0x20 ]
test eax eax
jne r-xdata
mov [ edi ] eax
test eax eax
je r-xdata
cmp ecx esi
je r-xdata
sub_402520
push ecx
push esi
mov esi [ rw-data ]
push edi
test esi esi
je r-xdata
push ebp
mov ebp [ esp + 0x18 ]
mov edx 0x5a4d
cmp [ ebp ] dx
je r-xdata
mov edi [ _stricmp@IAT ]
push ebx
mov ebx [ ebp + 0x3c ]
add ebx ebp
cmp [ ebx ] 0x4550
je r-xdata
push 0xb
call [ SetLastError@IAT ]
pop ebp
pop edi
xor eax eax
pop esi
pop ecx
retn
inc [ esi + 0x1c ]
pop edi
mov eax esi
pop esi
pop ecx
retn
mov esi [ esi + 0x20 ]
test esi esi
jne r-xdata
mov eax [ ebx + 0x50 ]
mov ecx [ ebx + 0x34 ]
mov esi [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push eax
push ecx
call esi
mov edi eax
test edi edi
jne r-xdata
push 0xb
call [ SetLastError@IAT ]
pop ebx
pop ebp
pop edi
xor eax eax
pop esi
pop ecx
retn
mov eax [ esi + 0x18 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
call edi
add esp 0x8
test eax eax
je r-xdata
push 0x28
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x20 ] eax
mov eax [ esp + 0x18 ]
push eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x1c ] 0x1
call [ _strdup@IAT ]
add esp 0x4
push 0x4
mov [ esi + 0x18 ] eax
mov [ esi + 0x14 ] 0x0
mov ecx [ ebx + 0x50 ]
push 0x1000
push ecx
push edi
call [ VirtualAlloc@IAT ]
mov edx [ ebx + 0x54 ]
push 0x4
push 0x1000
push edx
push edi
call [ VirtualAlloc@IAT ]
mov ecx [ ebp + 0x3c ]
add ecx [ ebx + 0x54 ]
mov [ esp + 0x10 ] eax
push ecx
push ebp
push eax
call memcpy
mov edx [ ebp + 0x3c ]
mov eax [ esp + 0x1c ]
push esi
add eax edx
push ebx
mov [ esi ] eax
push ebp
mov [ eax + 0x34 ] edi
call sub_401f60
mov eax edi
add esp 0x18
sub eax [ ebx + 0x34 ]
je r-xdata
mov edx [ ebx + 0x50 ]
push 0x4
push 0x2000
push edx
push eax
call esi
mov edi eax
test edi edi
jne r-xdata
push esi
call sub_4023a0
add esp 0x4
test eax eax
je r-xdata
push eax
mov eax esi
call sub_4020d0
add esp 0x4
push 0x8
call [ SetLastError@IAT ]
pop ebx
pop ebp
pop edi
xor eax eax
pop esi
pop ecx
retn
mov edx [ esi + 0x18 ]
push edx
call [ free@IAT ]
push esi
call sub_4022c0
add esp 0x8
pop ebx
pop ebp
pop edi
xor eax eax
pop esi
pop ecx
retn
push esi
call sub_402010
mov ecx [ esi ]
mov eax [ ecx + 0x28 ]
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_401df0
pop ebx
pop ebp
pop edi
pop esi
pop ecx
retn
add eax edi
jne r-xdata
push 0x0
push 0x1
push edi
call eax
test eax eax
jne r-xdata
push 0xb
call [ SetLastError@IAT ]
jmp r-xdata
mov [ esi + 0x10 ] 0x1
sub_4026f0
push esi
push edi
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x8 ]
push edi
push eax
push esi
call memcpy
add esp 0xc
mov eax esi
pop esi
retn
pop esi
retn
sub_402720
push ecx
mov eax [ esp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ebp
push ecx
push rw-data
push eax
call [ rw-data ]
mov ebp eax
add esp 0xc
test ebp ebp
jne r-xdata
pop ecx
retn
lea edx [ esp + 0x4 ]
push edx
lea eax [ esp + 0x14 ]
push eax
push ebp
call [ rw-data ]
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
call [ rw-data ]
xor eax eax
pop ebp
pop ecx
retn
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x14 ]
push esi
push edi
push eax
mov edi eax
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
call [ rw-data ]
push ebp
call sub_401c40
add esp 0x4
xor eax eax
pop ebp
pop ecx
retn
push ebp
mov [ esp + 0x20 ] esi
call sub_401c40
mov eax [ esp + 0x20 ]
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
pop ecx
retn
push edi
push ebx
push esi
call memcpy
add esp 0xc
sub_4027c0
push ecx
mov ecx [ esp + 0xc ]
lea eax [ esp ]
push eax
push rw-data
push ecx
mov [ esp + 0xc ] 0x0
call [ rw-data ]
add esp 0xc
test eax eax
jne r-xdata
mov edx [ rw-data ]
push edx
call sub_401c40
mov eax [ esp + 0x4 ]
push eax
call sub_401c90
mov edx [ rw-data ]
mov ecx [ esp + 0x8 ]
push edx
mov [ rw-data ] ecx
call sub_401c90
mov eax [ rw-data ]
add esp 0xc
pop ecx
retn
pop ecx
retn
sub_402820
sub esp 0x14
lea eax [ esp ]
push eax
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0xc ]
push edx
mov edx [ esp + 0x28 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push rw-data
push edx
call [ rw-data ]
add esp 0x1c
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp ]
push esi
push eax
push ecx
call sub_402520
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
add esp 0x14
retn
mov edx [ esp + 0x8 ]
push edx
push esi
call sub_402230
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
push edx
push rw-data
push ecx
call [ rw-data ]
add esp 0xc
xor eax eax
pop esi
add esp 0x14
retn
mov ecx [ rw-data ]
mov edx [ esp + 0xc ]
mov esi [ ecx ]
mov [ ecx ] edx
call eax
mov eax [ rw-data ]
mov [ eax ] esi
call [ rw-data ]
test eax eax
jne r-xdata
push esi
call sub_4022c0
mov eax [ esp + 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx ]
push eax
push rw-data
push edx
call [ rw-data ]
add esp 0x10
xor eax eax
pop esi
add esp 0x14
retn
mov ecx [ esp + 0xc ]
push ecx
call [ rw-data ]
add esp 0x4
pop esi
add esp 0x14
retn
sub_402956
push sub_402da4
call sub_402d67
mov eax [ rw-data ]
mov [ esp ] rw-data
push [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
push rw-data
call [ __getmainargs@IAT ]
add esp 0x14
mov [ rw-data ] eax
test eax eax
jge r-xdata
retn
push 0x8
call _amsg_exit
pop ecx
sub_4029a1
push 0x58
push r--data
call sub_402f2c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x4 ] 0x1
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov edi rw-data
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov ebx esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push 0x0
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
test ebx ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
push rw-data
call sub_402e60
pop ecx
test eax eax
je r-xdata
cmp al 0x22
jne r-xdata
test al al
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
movzx eax al
push eax
call [ _ismbblead@IAT ]
pop ecx
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ecx
sete cl
mov [ ebp - 0x1c ] ecx
mov al [ esi ]
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc esi
jmp r-xdata
inc esi
mov [ ebp - 0x20 ] esi
test [ ebp - 0x3c ] 0x1
je r-xdata
cmp al 0x20
ja r-xdata
mov [ ebp - 0x20 ] esi
mov al [ esi ]
cmp al 0x20
ja r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x38 ]
jmp r-xdata
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ exit@IAT ]
push eax
push esi
push 0x0
push __dos_header
call sub_401110
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_402f71
retn
sub_402b80
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
lea eax [ eax + __dos_header ]
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + 0x18 ]
cmp ecx 0x10b
je r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
push 0xffffffff
call [ _encode_pointer@IAT ]
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402d7e
call sub_402fd5
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp ecx 0x20b
jne r-xdata
call sub_402faa
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_402fd5
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xe8 ] ecx
cmp [ eax + 0x84 ] 0xe
jbe r-xdata
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xf8 ] ecx
jmp r-xdata
setne cl
mov eax ecx
sub_402c6b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_402cc2
push 0x14
push r--data
call sub_402f2c
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ _encode_pointer@IAT ]
call esi
pop ecx
push eax
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x14
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402d5e
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_402f71
retn
sub_402d7e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_402da4
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_402dd0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_402e10
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_402e60
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_402f85
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_402dd0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_402e10
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_402f2c
push sub_402f85
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_402f85
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_403086
push rw-data
call _except_handler4_common
add esp 0x18
pop ebp
retn
sub_402faa
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
add esp 0x14
sub_402fd8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4030a8
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_401a40
mov eax [ esp + 0x4 ]
push eax
push 0x0
call sub_4018e0
add esp 0x8
retn
sub_401df0
mov ecx [ rw-data ]
mov [ eax + 0x20 ] ecx
mov ecx [ rw-data ]
xor edx edx
cmp ecx edx
je r-xdata
mov [ eax + 0x24 ] edx
mov [ rw-data ] eax
retn
mov [ ecx + 0x24 ] eax
sub_402150
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov [ esp + 0x8 ] ecx
mov edx [ esp + 0x4 ]
mov eax [ edx ]
mov [ esp + 0x4 ] eax
jmp [ _stricmp@IAT ]
sub_402170
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov [ esp + 0x8 ] ecx
mov edx [ esp + 0x4 ]
mov eax [ edx ]
mov [ esp + 0x4 ] eax
jmp [ _stricmp@IAT ]
sub_402900
mov eax [ rw-data ]
mov ecx [ eax ]
push ecx
call [ rw-data ]
add esp 0x4
retn
sub_402920
push 0x3f5
push 0x0
push rw-data
push rw-data
push rw-data
mov [ rw-data ] sub_402720
call [ rw-data ]
add esp 0x14
retn
memcpy
jmp [ memcpy@IAT ]
memset
jmp [ memset@IAT ]
sub_402b1b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_402b67
xor eax eax
inc eax
retn
_start
call sub_402fd8
jmp sub_4029a1
sub_402cad
push sub_402c6b
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
sub_402d5e
push 0x8
call _unlock
pop ecx
retn
sub_402d67
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_402cc2
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_402eeb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_402f71
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_402fd5
xor eax eax
retn
?terminate@@YAXXZ
jmp [ terminate@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
sub_403086
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_4030a8
retn
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
